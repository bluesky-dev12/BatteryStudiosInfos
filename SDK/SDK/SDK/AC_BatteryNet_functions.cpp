// Arctic Combat (3369) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x4)
#endif

#include "../SDK.hpp"

namespace Classes
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateCurrentRunningInfo
// (Native, Public)
// Parameters:
// int                            GroupID                        (Parm)
// struct FString                 GroupName                      (Parm, NeedCtorLink)
// struct FString                 ServerName                     (Parm, NeedCtorLink)
// int                            ServerID                       (Parm)
// TArray<struct FString>         key                            (Parm, NeedCtorLink)
// TArray<int>                    Value                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqUpdateCurrentRunningInfo(int GroupID, const struct FString& GroupName, const struct FString& ServerName, int ServerID, TArray<struct FString> key, TArray<int> Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateCurrentRunningInfo");

	UBTTcpLink_Process2Agent_sfReqUpdateCurrentRunningInfo_Params params;
	params.GroupID = GroupID;
	params.GroupName = GroupName;
	params.ServerName = ServerName;
	params.ServerID = ServerID;
	params.key = key;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqNotifyKickOffUser
// (Native, Public)
// Parameters:
// int                            QQID                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqNotifyKickOffUser(int QQID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqNotifyKickOffUser");

	UBTTcpLink_Process2Agent_sfReqNotifyKickOffUser_Params params;
	params.QQID = QQID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdatePostAlram
// (Native, Public)
// Parameters:
// int                            QQID                           (Parm)
// struct FString                 Subject                        (Parm, NeedCtorLink)
// struct FString                 Text                           (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqUpdatePostAlram(int QQID, const struct FString& Subject, const struct FString& Text, int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdatePostAlram");

	UBTTcpLink_Process2Agent_sfReqUpdatePostAlram_Params params;
	params.QQID = QQID;
	params.Subject = Subject;
	params.Text = Text;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateProcessState
// (Native, Public)
// Parameters:
// int                            State                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqUpdateProcessState(int State)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateProcessState");

	UBTTcpLink_Process2Agent_sfReqUpdateProcessState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfAckProcessExcuteCmd
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            MajorType                      (Parm)
// int                            MinorType                      (Parm)
// struct FString                 CmdValue                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfAckProcessExcuteCmd(int Result, int MajorType, int MinorType, const struct FString& CmdValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfAckProcessExcuteCmd");

	UBTTcpLink_Process2Agent_sfAckProcessExcuteCmd_Params params;
	params.Result = Result;
	params.MajorType = MajorType;
	params.MinorType = MinorType;
	params.CmdValue = CmdValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqProcessExcuteCmd
// (Native, Public)
// Parameters:
// int                            MajorType                      (Parm)
// int                            MinorType                      (Parm)
// struct FString                 CmdValue                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqProcessExcuteCmd(int MajorType, int MinorType, const struct FString& CmdValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqProcessExcuteCmd");

	UBTTcpLink_Process2Agent_sfReqProcessExcuteCmd_Params params;
	params.MajorType = MajorType;
	params.MinorType = MinorType;
	params.CmdValue = CmdValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateUserCount_DudeServer
// (Native, Public)
// Parameters:
// int                            ServerID                       (Parm)
// int                            MaxUserCount                   (Parm)
// int                            CurUserCount                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqUpdateUserCount_DudeServer(int ServerID, int MaxUserCount, int CurUserCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateUserCount_DudeServer");

	UBTTcpLink_Process2Agent_sfReqUpdateUserCount_DudeServer_Params params;
	params.ServerID = ServerID;
	params.MaxUserCount = MaxUserCount;
	params.CurUserCount = CurUserCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateUserCount_LoginServer
// (Native, Public)
// Parameters:
// int                            ServerID                       (Parm)
// int                            MaxUserCount                   (Parm)
// int                            CurUserCount                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqUpdateUserCount_LoginServer(int ServerID, int MaxUserCount, int CurUserCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateUserCount_LoginServer");

	UBTTcpLink_Process2Agent_sfReqUpdateUserCount_LoginServer_Params params;
	params.ServerID = ServerID;
	params.MaxUserCount = MaxUserCount;
	params.CurUserCount = CurUserCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateUserCount_ChannelServer
// (Native, Public)
// Parameters:
// int                            ServerID                       (Parm)
// int                            ChannelCount                   (Parm)
// TArray<int>                    ChannelNum                     (Parm, NeedCtorLink)
// TArray<int>                    ChannelMaxUserCount            (Parm, NeedCtorLink)
// TArray<int>                    ChannelCurUserCount            (Parm, NeedCtorLink)
// TArray<int>                    ChannelPlayingUserCount        (Parm, NeedCtorLink)
// TArray<int>                    ChannelRoomCount               (Parm, NeedCtorLink)
// TArray<unsigned char>          ChannelGrade                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqUpdateUserCount_ChannelServer(int ServerID, int ChannelCount, TArray<int> ChannelNum, TArray<int> ChannelMaxUserCount, TArray<int> ChannelCurUserCount, TArray<int> ChannelPlayingUserCount, TArray<int> ChannelRoomCount, TArray<unsigned char> ChannelGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqUpdateUserCount_ChannelServer");

	UBTTcpLink_Process2Agent_sfReqUpdateUserCount_ChannelServer_Params params;
	params.ServerID = ServerID;
	params.ChannelCount = ChannelCount;
	params.ChannelNum = ChannelNum;
	params.ChannelMaxUserCount = ChannelMaxUserCount;
	params.ChannelCurUserCount = ChannelCurUserCount;
	params.ChannelPlayingUserCount = ChannelPlayingUserCount;
	params.ChannelRoomCount = ChannelRoomCount;
	params.ChannelGrade = ChannelGrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqTerminateDedicateHostProcess
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqTerminateDedicateHostProcess()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqTerminateDedicateHostProcess");

	UBTTcpLink_Process2Agent_sfReqTerminateDedicateHostProcess_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfAckStartDedicateHost
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            ProcessID                      (Parm)
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfAckStartDedicateHost(int Result, int ProcessID, int ServerID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfAckStartDedicateHost");

	UBTTcpLink_Process2Agent_sfAckStartDedicateHost_Params params;
	params.Result = Result;
	params.ProcessID = ProcessID;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqStartDedicateHost
// (Native, Public)
// Parameters:
// int                            ServerID                       (Parm)
// struct FString                 ChannelIPAddr                  (Parm, NeedCtorLink)
// int                            ChannelPortNum                 (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqStartDedicateHost(int ServerID, const struct FString& ChannelIPAddr, int ChannelPortNum, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqStartDedicateHost");

	UBTTcpLink_Process2Agent_sfReqStartDedicateHost_Params params;
	params.ServerID = ServerID;
	params.ChannelIPAddr = ChannelIPAddr;
	params.ChannelPortNum = ChannelPortNum;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfAckQuitDedicateHost
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            PID                            (Parm)
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfAckQuitDedicateHost(int Result, int PID, int ServerID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfAckQuitDedicateHost");

	UBTTcpLink_Process2Agent_sfAckQuitDedicateHost_Params params;
	params.Result = Result;
	params.PID = PID;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqQuitDedicateHost
// (Native, Public)
// Parameters:
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqQuitDedicateHost(int ServerID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqQuitDedicateHost");

	UBTTcpLink_Process2Agent_sfReqQuitDedicateHost_Params params;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfAckLogin
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfAckLogin(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfAckLogin");

	UBTTcpLink_Process2Agent_sfAckLogin_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqLogin
// (Native, Public)
// Parameters:
// int                            PID                            (Parm)
// int                            ServerID                       (Parm)
// TArray<unsigned char>          ServerIPAddrType               (Parm, NeedCtorLink)
// TArray<struct FString>         ServerIPAddr                   (Parm, NeedCtorLink)
// TArray<unsigned char>          ServerPortType                 (Parm, NeedCtorLink)
// TArray<int>                    ServerPortNum                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqLogin(int PID, int ServerID, TArray<unsigned char> ServerIPAddrType, TArray<struct FString> ServerIPAddr, TArray<unsigned char> ServerPortType, TArray<int> ServerPortNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqLogin");

	UBTTcpLink_Process2Agent_sfReqLogin_Params params;
	params.PID = PID;
	params.ServerID = ServerID;
	params.ServerIPAddrType = ServerIPAddrType;
	params.ServerIPAddr = ServerIPAddr;
	params.ServerPortType = ServerPortType;
	params.ServerPortNum = ServerPortNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfAckHash
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfAckHash(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfAckHash");

	UBTTcpLink_Process2Agent_sfAckHash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.sfReqHash
// (Native, Public)
// Parameters:
// int                            HashField0                     (Parm)
// int                            HashField1                     (Parm)
// int                            HashField2                     (Parm)
// int                            HashField3                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::sfReqHash(int HashField0, int HashField1, int HashField2, int HashField3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.sfReqHash");

	UBTTcpLink_Process2Agent_sfReqHash_Params params;
	params.HashField0 = HashField0;
	params.HashField1 = HashField1;
	params.HashField2 = HashField2;
	params.HashField3 = HashField3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateCurrentRunningInfo
// (Defined, Event, Public)
// Parameters:
// int                            GroupID                        (Parm)
// struct FString                 GroupName                      (Parm, NeedCtorLink)
// struct FString                 ServerName                     (Parm, NeedCtorLink)
// int                            ServerID                       (Parm)
// TArray<struct FString>         key                            (Parm, NeedCtorLink)
// TArray<int>                    Value                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqUpdateCurrentRunningInfo(int GroupID, const struct FString& GroupName, const struct FString& ServerName, int ServerID, TArray<struct FString> key, TArray<int> Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateCurrentRunningInfo");

	UBTTcpLink_Process2Agent_rfReqUpdateCurrentRunningInfo_Params params;
	params.GroupID = GroupID;
	params.GroupName = GroupName;
	params.ServerName = ServerName;
	params.ServerID = ServerID;
	params.key = key;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqNotifyKickOffUser
// (Defined, Event, Public)
// Parameters:
// int                            QQID                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqNotifyKickOffUser(int QQID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqNotifyKickOffUser");

	UBTTcpLink_Process2Agent_rfReqNotifyKickOffUser_Params params;
	params.QQID = QQID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdatePostAlram
// (Defined, Event, Public)
// Parameters:
// int                            QQID                           (Parm)
// struct FString                 Subject                        (Parm, NeedCtorLink)
// struct FString                 Text                           (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqUpdatePostAlram(int QQID, const struct FString& Subject, const struct FString& Text, int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdatePostAlram");

	UBTTcpLink_Process2Agent_rfReqUpdatePostAlram_Params params;
	params.QQID = QQID;
	params.Subject = Subject;
	params.Text = Text;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateProcessState
// (Defined, Event, Public)
// Parameters:
// int                            State                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqUpdateProcessState(int State)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateProcessState");

	UBTTcpLink_Process2Agent_rfReqUpdateProcessState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfAckProcessExcuteCmd
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            MajorType                      (Parm)
// int                            MinorType                      (Parm)
// struct FString                 CmdValue                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfAckProcessExcuteCmd(int Result, int MajorType, int MinorType, const struct FString& CmdValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfAckProcessExcuteCmd");

	UBTTcpLink_Process2Agent_rfAckProcessExcuteCmd_Params params;
	params.Result = Result;
	params.MajorType = MajorType;
	params.MinorType = MinorType;
	params.CmdValue = CmdValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqProcessExcuteCmd
// (Defined, Event, Public)
// Parameters:
// int                            MajorType                      (Parm)
// int                            MinorType                      (Parm)
// struct FString                 CmdValue                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqProcessExcuteCmd(int MajorType, int MinorType, const struct FString& CmdValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqProcessExcuteCmd");

	UBTTcpLink_Process2Agent_rfReqProcessExcuteCmd_Params params;
	params.MajorType = MajorType;
	params.MinorType = MinorType;
	params.CmdValue = CmdValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateUserCount_DudeServer
// (Defined, Event, Public)
// Parameters:
// int                            ServerID                       (Parm)
// int                            MaxUserCount                   (Parm)
// int                            CurUserCount                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqUpdateUserCount_DudeServer(int ServerID, int MaxUserCount, int CurUserCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateUserCount_DudeServer");

	UBTTcpLink_Process2Agent_rfReqUpdateUserCount_DudeServer_Params params;
	params.ServerID = ServerID;
	params.MaxUserCount = MaxUserCount;
	params.CurUserCount = CurUserCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateUserCount_LoginServer
// (Defined, Event, Public)
// Parameters:
// int                            ServerID                       (Parm)
// int                            MaxUserCount                   (Parm)
// int                            CurUserCount                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqUpdateUserCount_LoginServer(int ServerID, int MaxUserCount, int CurUserCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateUserCount_LoginServer");

	UBTTcpLink_Process2Agent_rfReqUpdateUserCount_LoginServer_Params params;
	params.ServerID = ServerID;
	params.MaxUserCount = MaxUserCount;
	params.CurUserCount = CurUserCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateUserCount_ChannelServer
// (Defined, Event, Public)
// Parameters:
// int                            ServerID                       (Parm)
// int                            ChannelCount                   (Parm)
// TArray<int>                    ChannelNum                     (Parm, NeedCtorLink)
// TArray<int>                    ChannelMaxUserCount            (Parm, NeedCtorLink)
// TArray<int>                    ChannelCurUserCount            (Parm, NeedCtorLink)
// TArray<int>                    ChannelPlayingUserCount        (Parm, NeedCtorLink)
// TArray<int>                    ChannelRoomCount               (Parm, NeedCtorLink)
// TArray<unsigned char>          ChannelGrade                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqUpdateUserCount_ChannelServer(int ServerID, int ChannelCount, TArray<int> ChannelNum, TArray<int> ChannelMaxUserCount, TArray<int> ChannelCurUserCount, TArray<int> ChannelPlayingUserCount, TArray<int> ChannelRoomCount, TArray<unsigned char> ChannelGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqUpdateUserCount_ChannelServer");

	UBTTcpLink_Process2Agent_rfReqUpdateUserCount_ChannelServer_Params params;
	params.ServerID = ServerID;
	params.ChannelCount = ChannelCount;
	params.ChannelNum = ChannelNum;
	params.ChannelMaxUserCount = ChannelMaxUserCount;
	params.ChannelCurUserCount = ChannelCurUserCount;
	params.ChannelPlayingUserCount = ChannelPlayingUserCount;
	params.ChannelRoomCount = ChannelRoomCount;
	params.ChannelGrade = ChannelGrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqTerminateDedicateHostProcess
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqTerminateDedicateHostProcess()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqTerminateDedicateHostProcess");

	UBTTcpLink_Process2Agent_rfReqTerminateDedicateHostProcess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfAckStartDedicateHost
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            ProcessID                      (Parm)
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfAckStartDedicateHost(int Result, int ProcessID, int ServerID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfAckStartDedicateHost");

	UBTTcpLink_Process2Agent_rfAckStartDedicateHost_Params params;
	params.Result = Result;
	params.ProcessID = ProcessID;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqStartDedicateHost
// (Defined, Event, Public)
// Parameters:
// int                            ServerID                       (Parm)
// struct FString                 ChannelIPAddr                  (Parm, NeedCtorLink)
// int                            ChannelPortNum                 (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqStartDedicateHost(int ServerID, const struct FString& ChannelIPAddr, int ChannelPortNum, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqStartDedicateHost");

	UBTTcpLink_Process2Agent_rfReqStartDedicateHost_Params params;
	params.ServerID = ServerID;
	params.ChannelIPAddr = ChannelIPAddr;
	params.ChannelPortNum = ChannelPortNum;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfAckQuitDedicateHost
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            PID                            (Parm)
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfAckQuitDedicateHost(int Result, int PID, int ServerID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfAckQuitDedicateHost");

	UBTTcpLink_Process2Agent_rfAckQuitDedicateHost_Params params;
	params.Result = Result;
	params.PID = PID;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqQuitDedicateHost
// (Defined, Event, Public)
// Parameters:
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqQuitDedicateHost(int ServerID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqQuitDedicateHost");

	UBTTcpLink_Process2Agent_rfReqQuitDedicateHost_Params params;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfAckLogin
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfAckLogin(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfAckLogin");

	UBTTcpLink_Process2Agent_rfAckLogin_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqLogin
// (Defined, Event, Public)
// Parameters:
// int                            PID                            (Parm)
// int                            ServerID                       (Parm)
// TArray<unsigned char>          ServerIPAddrType               (Parm, NeedCtorLink)
// TArray<struct FString>         ServerIPAddr                   (Parm, NeedCtorLink)
// TArray<unsigned char>          ServerPortType                 (Parm, NeedCtorLink)
// TArray<int>                    ServerPortNum                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqLogin(int PID, int ServerID, TArray<unsigned char> ServerIPAddrType, TArray<struct FString> ServerIPAddr, TArray<unsigned char> ServerPortType, TArray<int> ServerPortNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqLogin");

	UBTTcpLink_Process2Agent_rfReqLogin_Params params;
	params.PID = PID;
	params.ServerID = ServerID;
	params.ServerIPAddrType = ServerIPAddrType;
	params.ServerIPAddr = ServerIPAddr;
	params.ServerPortType = ServerPortType;
	params.ServerPortNum = ServerPortNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfAckHash
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfAckHash(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfAckHash");

	UBTTcpLink_Process2Agent_rfAckHash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.rfReqHash
// (Defined, Event, Public)
// Parameters:
// int                            HashField0                     (Parm)
// int                            HashField1                     (Parm)
// int                            HashField2                     (Parm)
// int                            HashField3                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::rfReqHash(int HashField0, int HashField1, int HashField2, int HashField3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.rfReqHash");

	UBTTcpLink_Process2Agent_rfReqHash_Params params;
	params.HashField0 = HashField0;
	params.HashField1 = HashField1;
	params.HashField2 = HashField2;
	params.HashField3 = HashField3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.OnError
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)

void UBTTcpLink_Process2Agent::OnError(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.OnError");

	UBTTcpLink_Process2Agent_OnError_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Process2Agent.OnClose
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)

void UBTTcpLink_Process2Agent::OnClose(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.OnClose");

	UBTTcpLink_Process2Agent_OnClose_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Process2Agent.OnConnect
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)

void UBTTcpLink_Process2Agent::OnConnect(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.OnConnect");

	UBTTcpLink_Process2Agent_OnConnect_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Process2Agent.Close
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::Close()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.Close");

	UBTTcpLink_Process2Agent_Close_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.Connect
// (Native, Public)
// Parameters:
// struct FString                 sIpaddr                        (Parm, NeedCtorLink)
// int                            nPort                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::Connect(const struct FString& sIpaddr, int nPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.Connect");

	UBTTcpLink_Process2Agent_Connect_Params params;
	params.sIpaddr = sIpaddr;
	params.nPort = nPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Process2Agent.InitNetwork
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Process2Agent::InitNetwork()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Process2Agent.InitNetwork");

	UBTTcpLink_Process2Agent_InitNetwork_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpHandler_DStoDP_Script_Interface.SetGameManager
// (Defined, Event, Public)
// Parameters:
// class UwGameManager*           pgameMgr                       (Parm)

void UBTTcpHandler_DStoDP_Script_Interface::SetGameManager(class UwGameManager* pgameMgr)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpHandler_DStoDP_Script_Interface.SetGameManager");

	UBTTcpHandler_DStoDP_Script_Interface_SetGameManager_Params params;
	params.pgameMgr = pgameMgr;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpHandler_DStoDP_Script_Interface.SetMatchMaker
// (Defined, Event, Public)
// Parameters:
// class UwMatchMaker*            pMM                            (Parm)

void UBTTcpHandler_DStoDP_Script_Interface::SetMatchMaker(class UwMatchMaker* pMM)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpHandler_DStoDP_Script_Interface.SetMatchMaker");

	UBTTcpHandler_DStoDP_Script_Interface_SetMatchMaker_Params params;
	params.pMM = pMM;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckUseItemDuringGame
// (Native, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            RemainCount                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckUseItemDuringGame(int ErrorCode, const struct FString& CharName, int ItemID, const struct FBtrDouble& ItemUniqueID, int RemainCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckUseItemDuringGame");

	UBTTcpLink_Channel_sfAckUseItemDuringGame_Params params;
	params.ErrorCode = ErrorCode;
	params.CharName = CharName;
	params.ItemID = ItemID;
	params.ItemUniqueID = ItemUniqueID;
	params.RemainCount = RemainCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqUseItemDuringGame
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// unsigned char                  UsingCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqUseItemDuringGame(const struct FString& CharName, int ItemID, const struct FBtrDouble& ItemUniqueID, unsigned char UsingCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqUseItemDuringGame");

	UBTTcpLink_Channel_sfReqUseItemDuringGame_Params params;
	params.CharName = CharName;
	params.ItemID = ItemID;
	params.ItemUniqueID = ItemUniqueID;
	params.UsingCount = UsingCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfChangeItemInstanceInfo
// (Native, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// unsigned char                  ChangeCount                    (Parm)
// int                            RemainCount                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfChangeItemInstanceInfo(int ErrorCode, int ItemID, const struct FBtrDouble& ItemUniqueID, unsigned char ChangeCount, int RemainCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfChangeItemInstanceInfo");

	UBTTcpLink_Channel_sfChangeItemInstanceInfo_Params params;
	params.ErrorCode = ErrorCode;
	params.ItemID = ItemID;
	params.ItemUniqueID = ItemUniqueID;
	params.ChangeCount = ChangeCount;
	params.RemainCount = RemainCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLuckShop_RewardCoupon
// (Native, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// int                            Coupon_ItemTypeID              (Parm)
// struct FBtrDouble              Coupon_ItemUniqueID            (Parm)
// int                            Coupon_Count_AfterReduction    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLuckShop_RewardCoupon(int ErrorCode, int Coupon_ItemTypeID, const struct FBtrDouble& Coupon_ItemUniqueID, int Coupon_Count_AfterReduction)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLuckShop_RewardCoupon");

	UBTTcpLink_Channel_sfAckLuckShop_RewardCoupon_Params params;
	params.ErrorCode = ErrorCode;
	params.Coupon_ItemTypeID = Coupon_ItemTypeID;
	params.Coupon_ItemUniqueID = Coupon_ItemUniqueID;
	params.Coupon_Count_AfterReduction = Coupon_Count_AfterReduction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLuckShop_RewardCoupon
// (Native, Public)
// Parameters:
// int                            ChooseNum                      (Parm)
// int                            ItemID                         (Parm)
// int                            ItemIDChoose                   (Parm)
// int                            PartIDChoose                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLuckShop_RewardCoupon(int ChooseNum, int ItemID, int ItemIDChoose, int PartIDChoose)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLuckShop_RewardCoupon");

	UBTTcpLink_Channel_sfReqLuckShop_RewardCoupon_Params params;
	params.ChooseNum = ChooseNum;
	params.ItemID = ItemID;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLuckShop_RewardBuyingCount
// (Native, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// int                            FinalCapsuleRewardState        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLuckShop_RewardBuyingCount(int ErrorCode, int FinalCapsuleRewardState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLuckShop_RewardBuyingCount");

	UBTTcpLink_Channel_sfAckLuckShop_RewardBuyingCount_Params params;
	params.ErrorCode = ErrorCode;
	params.FinalCapsuleRewardState = FinalCapsuleRewardState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLuckShop_RewardBuyingCount
// (Native, Public)
// Parameters:
// int                            ChooseNum                      (Parm)
// int                            ItemID                         (Parm)
// int                            ItemIDChoose                   (Parm)
// int                            PartIDChoose                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLuckShop_RewardBuyingCount(int ChooseNum, int ItemID, int ItemIDChoose, int PartIDChoose)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLuckShop_RewardBuyingCount");

	UBTTcpLink_Channel_sfReqLuckShop_RewardBuyingCount_Params params;
	params.ChooseNum = ChooseNum;
	params.ItemID = ItemID;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLuckShop_StorageInfo
// (Native, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// int                            BuyingCapsuleCount             (Parm)
// int                            CapsuleRewardState             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLuckShop_StorageInfo(int ErrorCode, int BuyingCapsuleCount, int CapsuleRewardState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLuckShop_StorageInfo");

	UBTTcpLink_Channel_sfAckLuckShop_StorageInfo_Params params;
	params.ErrorCode = ErrorCode;
	params.BuyingCapsuleCount = BuyingCapsuleCount;
	params.CapsuleRewardState = CapsuleRewardState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLuckShop_StorageInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLuckShop_StorageInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLuckShop_StorageInfo");

	UBTTcpLink_Channel_sfReqLuckShop_StorageInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLuckShop_LotteryWinnerList
// (Native, Public)
// Parameters:
// int                            CapsuleItemID                  (Parm)
// unsigned char                  IsNotification                 (Parm)
// TArray<struct FString>         NickName                       (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      Time                           (Parm, NeedCtorLink)
// int                            GetItemID                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLuckShop_LotteryWinnerList(int CapsuleItemID, unsigned char IsNotification, TArray<struct FString> NickName, TArray<struct FBtrDouble> Time, int GetItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLuckShop_LotteryWinnerList");

	UBTTcpLink_Channel_sfAckLuckShop_LotteryWinnerList_Params params;
	params.CapsuleItemID = CapsuleItemID;
	params.IsNotification = IsNotification;
	params.NickName = NickName;
	params.Time = Time;
	params.GetItemID = GetItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLuckShop_LotteryWinnerList
// (Native, Public)
// Parameters:
// int                            CapsuleItemID                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLuckShop_LotteryWinnerList(int CapsuleItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLuckShop_LotteryWinnerList");

	UBTTcpLink_Channel_sfReqLuckShop_LotteryWinnerList_Params params;
	params.CapsuleItemID = CapsuleItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSpecialQuestRank
// (Native, Public)
// Parameters:
// TArray<struct FString>         CharList                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSpecialQuestRank(TArray<struct FString> CharList)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSpecialQuestRank");

	UBTTcpLink_Channel_sfAckSpecialQuestRank_Params params;
	params.CharList = CharList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSpecialQuestRank
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSpecialQuestRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSpecialQuestRank");

	UBTTcpLink_Channel_sfReqSpecialQuestRank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckReceiveSpecialReward
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RewardedQuestID                (Parm)
// unsigned char                  RewardedQuestIsComplete        (Parm)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RewardItemID                   (Parm)
// int                            RewardItemCount                (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckReceiveSpecialReward(int Result, int RewardedQuestID, unsigned char RewardedQuestIsComplete, const struct FBtrDouble& ItemIdx, int RewardItemID, int RewardItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckReceiveSpecialReward");

	UBTTcpLink_Channel_sfAckReceiveSpecialReward_Params params;
	params.Result = Result;
	params.RewardedQuestID = RewardedQuestID;
	params.RewardedQuestIsComplete = RewardedQuestIsComplete;
	params.ItemIdx = ItemIdx;
	params.RewardItemID = RewardItemID;
	params.RewardItemCount = RewardItemCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqReceiveSpecialReward
// (Native, Public)
// Parameters:
// int                            QuestID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqReceiveSpecialReward(int QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqReceiveSpecialReward");

	UBTTcpLink_Channel_sfReqReceiveSpecialReward_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckDailyRewardListThisMonth
// (Native, Public)
// Parameters:
// TArray<unsigned char>          Type                           (Parm, NeedCtorLink)
// TArray<unsigned char>          Number                         (Parm, NeedCtorLink)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<int>                    ItemCount                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckDailyRewardListThisMonth(TArray<unsigned char> Type, TArray<unsigned char> Number, TArray<int> ItemID, TArray<int> ItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckDailyRewardListThisMonth");

	UBTTcpLink_Channel_sfAckDailyRewardListThisMonth_Params params;
	params.Type = Type;
	params.Number = Number;
	params.ItemID = ItemID;
	params.ItemCount = ItemCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDailyRewardListThisMonth
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDailyRewardListThisMonth()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDailyRewardListThisMonth");

	UBTTcpLink_Channel_sfReqDailyRewardListThisMonth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPuzzleList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  IsComplete                     (Parm)
// TArray<unsigned char>          UpdatedNum                     (Parm, NeedCtorLink)
// TArray<unsigned char>          StateList                      (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RewardItemID                   (Parm)
// int                            RewardItemCount                (Parm)
// struct FBtrDouble              PaidItemIdx                    (Parm)
// int                            PaidItemStackCount             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPuzzleList(int Result, unsigned char IsComplete, TArray<unsigned char> UpdatedNum, TArray<unsigned char> StateList, const struct FBtrDouble& ItemIdx, int RewardItemID, int RewardItemCount, const struct FBtrDouble& PaidItemIdx, int PaidItemStackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPuzzleList");

	UBTTcpLink_Channel_sfAckPuzzleList_Params params;
	params.Result = Result;
	params.IsComplete = IsComplete;
	params.UpdatedNum = UpdatedNum;
	params.StateList = StateList;
	params.ItemIdx = ItemIdx;
	params.RewardItemID = RewardItemID;
	params.RewardItemCount = RewardItemCount;
	params.PaidItemIdx = PaidItemIdx;
	params.PaidItemStackCount = PaidItemStackCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqPuzzleList
// (Native, Public)
// Parameters:
// unsigned char                  ReqType                        (Parm)
// unsigned char                  UpdateState                    (Parm)
// struct FBtrDouble              PaidItemIdx                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqPuzzleList(unsigned char ReqType, unsigned char UpdateState, const struct FBtrDouble& PaidItemIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqPuzzleList");

	UBTTcpLink_Channel_sfReqPuzzleList_Params params;
	params.ReqType = ReqType;
	params.UpdateState = UpdateState;
	params.PaidItemIdx = PaidItemIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAttendanceList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  IsComplete                     (Parm)
// unsigned char                  UpdatedNum                     (Parm)
// TArray<unsigned char>          StateList                      (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RewardItemID                   (Parm)
// int                            RewardItemCount                (Parm)
// struct FBtrDouble              PaidItemIdx                    (Parm)
// int                            PaidItemStackCount             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAttendanceList(int Result, unsigned char IsComplete, unsigned char UpdatedNum, TArray<unsigned char> StateList, const struct FBtrDouble& ItemIdx, int RewardItemID, int RewardItemCount, const struct FBtrDouble& PaidItemIdx, int PaidItemStackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAttendanceList");

	UBTTcpLink_Channel_sfAckAttendanceList_Params params;
	params.Result = Result;
	params.IsComplete = IsComplete;
	params.UpdatedNum = UpdatedNum;
	params.StateList = StateList;
	params.ItemIdx = ItemIdx;
	params.RewardItemID = RewardItemID;
	params.RewardItemCount = RewardItemCount;
	params.PaidItemIdx = PaidItemIdx;
	params.PaidItemStackCount = PaidItemStackCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAttendanceList
// (Native, Public)
// Parameters:
// unsigned char                  ReqType                        (Parm)
// unsigned char                  UpdateNum                      (Parm)
// unsigned char                  UpdateState                    (Parm)
// struct FBtrDouble              PaidItemIdx                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAttendanceList(unsigned char ReqType, unsigned char UpdateNum, unsigned char UpdateState, const struct FBtrDouble& PaidItemIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAttendanceList");

	UBTTcpLink_Channel_sfReqAttendanceList_Params params;
	params.ReqType = ReqType;
	params.UpdateNum = UpdateNum;
	params.UpdateState = UpdateState;
	params.PaidItemIdx = PaidItemIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAIRewardResult
// (Native, Public)
// Parameters:
// unsigned char                  ClearRewardTYPE                (Parm)
// int                            ClearRewardID                  (Parm)
// int                            ClearRewardCount               (Parm)
// TArray<int>                    ScoreRewardUserID              (Parm, NeedCtorLink)
// TArray<unsigned char>          ScoreRewardTYPE                (Parm, NeedCtorLink)
// TArray<int>                    ScoreRewardID                  (Parm, NeedCtorLink)
// TArray<int>                    ScoreRewardCount               (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAIRewardResult(unsigned char ClearRewardTYPE, int ClearRewardID, int ClearRewardCount, TArray<int> ScoreRewardUserID, TArray<unsigned char> ScoreRewardTYPE, TArray<int> ScoreRewardID, TArray<int> ScoreRewardCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAIRewardResult");

	UBTTcpLink_Channel_sfAckAIRewardResult_Params params;
	params.ClearRewardTYPE = ClearRewardTYPE;
	params.ClearRewardID = ClearRewardID;
	params.ClearRewardCount = ClearRewardCount;
	params.ScoreRewardUserID = ScoreRewardUserID;
	params.ScoreRewardTYPE = ScoreRewardTYPE;
	params.ScoreRewardID = ScoreRewardID;
	params.ScoreRewardCount = ScoreRewardCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfNotifyCouponUseError
// (Native, Public)
// Parameters:
// int                            Time                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfNotifyCouponUseError(int Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfNotifyCouponUseError");

	UBTTcpLink_Channel_sfNotifyCouponUseError_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckCouponUse
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckCouponUse(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckCouponUse");

	UBTTcpLink_Channel_sfAckCouponUse_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqCouponUse
// (Native, Public)
// Parameters:
// struct FString                 Serial                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqCouponUse(const struct FString& Serial)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqCouponUse");

	UBTTcpLink_Channel_sfReqCouponUse_Params params;
	params.Serial = Serial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyShopItemDataEnd
// (Native, Public)
// Parameters:
// int                            Ver                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyShopItemDataEnd(int Ver)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyShopItemDataEnd");

	UBTTcpLink_Channel_sfReqNotifyShopItemDataEnd_Params params;
	params.Ver = Ver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyShopItemData
// (Native, Public)
// Parameters:
// TArray<int>                    ProductNo                      (Parm, NeedCtorLink)
// TArray<struct FString>         ProductName                    (Parm, NeedCtorLink)
// TArray<int>                    ProductCode                    (Parm, NeedCtorLink)
// TArray<unsigned char>          SaleType                       (Parm, NeedCtorLink)
// TArray<int>                    ProductCost                    (Parm, NeedCtorLink)
// TArray<int>                    ProductHour                    (Parm, NeedCtorLink)
// TArray<int>                    ProductQuantity                (Parm, NeedCtorLink)
// TArray<int>                    SaleMasterFlag                 (Parm, NeedCtorLink)
// TArray<int>                    SaleStatus                     (Parm, NeedCtorLink)
// TArray<int>                    IsGift                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      SaleEndTime                    (Parm, NeedCtorLink)
// TArray<int>                    Discountcost                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyShopItemData(TArray<int> ProductNo, TArray<struct FString> ProductName, TArray<int> ProductCode, TArray<unsigned char> SaleType, TArray<int> ProductCost, TArray<int> ProductHour, TArray<int> ProductQuantity, TArray<int> SaleMasterFlag, TArray<int> SaleStatus, TArray<int> IsGift, TArray<struct FBtrDouble> SaleEndTime, TArray<int> Discountcost)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyShopItemData");

	UBTTcpLink_Channel_sfReqNotifyShopItemData_Params params;
	params.ProductNo = ProductNo;
	params.ProductName = ProductName;
	params.ProductCode = ProductCode;
	params.SaleType = SaleType;
	params.ProductCost = ProductCost;
	params.ProductHour = ProductHour;
	params.ProductQuantity = ProductQuantity;
	params.SaleMasterFlag = SaleMasterFlag;
	params.SaleStatus = SaleStatus;
	params.IsGift = IsGift;
	params.SaleEndTime = SaleEndTime;
	params.Discountcost = Discountcost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckShopItemData
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckShopItemData()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckShopItemData");

	UBTTcpLink_Channel_sfAckShopItemData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqShopItemData
// (Native, Public)
// Parameters:
// int                            Ver                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqShopItemData(int Ver)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqShopItemData");

	UBTTcpLink_Channel_sfReqShopItemData_Params params;
	params.Ver = Ver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyLoadingStatus
// (Native, Public)
// Parameters:
// int                            Status                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyLoadingStatus(int Status)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyLoadingStatus");

	UBTTcpLink_Channel_sfReqNotifyLoadingStatus_Params params;
	params.Status = Status;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqUpdateUserPerformenceInfo
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            MinFps                         (Parm)
// int                            MaxFps                         (Parm)
// int                            AvgFps                         (Parm)
// int                            MinPing                        (Parm)
// int                            MaxPing                        (Parm)
// int                            AvgPing                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqUpdateUserPerformenceInfo(int UserID, int MinFps, int MaxFps, int AvgFps, int MinPing, int MaxPing, int AvgPing)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqUpdateUserPerformenceInfo");

	UBTTcpLink_Channel_sfReqUpdateUserPerformenceInfo_Params params;
	params.UserID = UserID;
	params.MinFps = MinFps;
	params.MaxFps = MaxFps;
	params.AvgFps = AvgFps;
	params.MinPing = MinPing;
	params.MaxPing = MaxPing;
	params.AvgPing = AvgPing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAhnNotifyDisconnct
// (Native, Public)
// Parameters:
// int                            Code                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAhnNotifyDisconnct(int Code)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAhnNotifyDisconnct");

	UBTTcpLink_Channel_sfReqAhnNotifyDisconnct_Params params;
	params.Code = Code;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAhnHsObject
// (Native, Public)
// Parameters:
// TArray<unsigned char>          Data                           (Parm, NeedCtorLink)
// int                            DataSize                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAhnHsObject(TArray<unsigned char> Data, int DataSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAhnHsObject");

	UBTTcpLink_Channel_sfAckAhnHsObject_Params params;
	params.Data = Data;
	params.DataSize = DataSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAhnHsObject
// (Native, Public)
// Parameters:
// TArray<unsigned char>          Data                           (Parm, NeedCtorLink)
// int                            DataSize                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAhnHsObject(TArray<unsigned char> Data, int DataSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAhnHsObject");

	UBTTcpLink_Channel_sfReqAhnHsObject_Params params;
	params.Data = Data;
	params.DataSize = DataSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfNotifyClanLevelup
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            Levelup                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfNotifyClanLevelup(const struct FString& ClanName, int Levelup)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfNotifyClanLevelup");

	UBTTcpLink_Channel_sfNotifyClanLevelup_Params params;
	params.ClanName = ClanName;
	params.Levelup = Levelup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfNotifyNewClanName
// (Native, Public)
// Parameters:
// struct FString                 New_NickName                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfNotifyNewClanName(const struct FString& New_NickName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfNotifyNewClanName");

	UBTTcpLink_Channel_sfNotifyNewClanName_Params params;
	params.New_NickName = New_NickName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfNotifyNewNickName
// (Native, Public)
// Parameters:
// int                            Community_Type                 (Parm)
// struct FString                 Old_NickName                   (Parm, NeedCtorLink)
// struct FString                 New_NickName                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfNotifyNewNickName(int Community_Type, const struct FString& Old_NickName, const struct FString& New_NickName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfNotifyNewNickName");

	UBTTcpLink_Channel_sfNotifyNewNickName_Params params;
	params.Community_Type = Community_Type;
	params.Old_NickName = Old_NickName;
	params.New_NickName = New_NickName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGameMapData
// (Native, Public)
// Parameters:
// TArray<int>                    nIdx                           (Parm, NeedCtorLink)
// TArray<int>                    nMapID                         (Parm, NeedCtorLink)
// TArray<struct FString>         nMapNm                         (Parm, NeedCtorLink)
// TArray<float>                  fSupHealth                     (Parm, NeedCtorLink)
// TArray<float>                  fSupHeli                       (Parm, NeedCtorLink)
// TArray<float>                  fSupBomb                       (Parm, NeedCtorLink)
// TArray<float>                  fSupUAV                        (Parm, NeedCtorLink)
// TArray<int>                    nModFFA                        (Parm, NeedCtorLink)
// TArray<int>                    nModFFAMax                     (Parm, NeedCtorLink)
// TArray<int>                    nModTDM                        (Parm, NeedCtorLink)
// TArray<int>                    nModTDMMax                     (Parm, NeedCtorLink)
// TArray<int>                    nModSD                         (Parm, NeedCtorLink)
// TArray<int>                    nModSDMax                      (Parm, NeedCtorLink)
// TArray<int>                    nModDOM                        (Parm, NeedCtorLink)
// TArray<int>                    nModDOMMax                     (Parm, NeedCtorLink)
// TArray<int>                    nModSab                        (Parm, NeedCtorLink)
// TArray<int>                    nModSabMax                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGameMapData(TArray<int> nIdx, TArray<int> nMapID, TArray<struct FString> nMapNm, TArray<float> fSupHealth, TArray<float> fSupHeli, TArray<float> fSupBomb, TArray<float> fSupUAV, TArray<int> nModFFA, TArray<int> nModFFAMax, TArray<int> nModTDM, TArray<int> nModTDMMax, TArray<int> nModSD, TArray<int> nModSDMax, TArray<int> nModDOM, TArray<int> nModDOMMax, TArray<int> nModSab, TArray<int> nModSabMax)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGameMapData");

	UBTTcpLink_Channel_sfAckGameMapData_Params params;
	params.nIdx = nIdx;
	params.nMapID = nMapID;
	params.nMapNm = nMapNm;
	params.fSupHealth = fSupHealth;
	params.fSupHeli = fSupHeli;
	params.fSupBomb = fSupBomb;
	params.fSupUAV = fSupUAV;
	params.nModFFA = nModFFA;
	params.nModFFAMax = nModFFAMax;
	params.nModTDM = nModTDM;
	params.nModTDMMax = nModTDMMax;
	params.nModSD = nModSD;
	params.nModSDMax = nModSDMax;
	params.nModDOM = nModDOM;
	params.nModDOMMax = nModDOMMax;
	params.nModSab = nModSab;
	params.nModSabMax = nModSabMax;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGameMapData
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGameMapData()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGameMapData");

	UBTTcpLink_Channel_sfReqGameMapData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckTencent_StartTenProtect
// (Native, Public)
// Parameters:
// int                            CharDBID                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckTencent_StartTenProtect(int CharDBID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckTencent_StartTenProtect");

	UBTTcpLink_Channel_sfAckTencent_StartTenProtect_Params params;
	params.CharDBID = CharDBID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckMoveToLobby
// (Native, Public)
// Parameters:
// unsigned char                  MessageType                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckMoveToLobby(unsigned char MessageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckMoveToLobby");

	UBTTcpLink_Channel_sfAckMoveToLobby_Params params;
	params.MessageType = MessageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPopUpMessage
// (Native, Public)
// Parameters:
// int                            MessageType                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPopUpMessage(int MessageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPopUpMessage");

	UBTTcpLink_Channel_sfAckPopUpMessage_Params params;
	params.MessageType = MessageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfUpdateWebzenShopScriptVersion
// (Native, Public)
// Parameters:
// int                            Year                           (Parm)
// int                            YearId                         (Parm)
// int                            SalesZoneCode                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfUpdateWebzenShopScriptVersion(int Year, int YearId, int SalesZoneCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfUpdateWebzenShopScriptVersion");

	UBTTcpLink_Channel_sfUpdateWebzenShopScriptVersion_Params params;
	params.Year = Year;
	params.YearId = YearId;
	params.SalesZoneCode = SalesZoneCode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSetClientVersion
// (Native, Public)
// Parameters:
// int                            ClientVersion                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSetClientVersion(int ClientVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSetClientVersion");

	UBTTcpLink_Channel_sfReqSetClientVersion_Params params;
	params.ClientVersion = ClientVersion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckFriendPosition
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 TargetCharName                 (Parm, NeedCtorLink)
// unsigned char                  ServerType                     (Parm)
// struct FString                 fServername                    (Parm, NeedCtorLink)
// struct FString                 fServerShortName               (Parm, NeedCtorLink)
// struct FString                 fServerIP                      (Parm, NeedCtorLink)
// int                            fServerPort                    (Parm)
// unsigned char                  CurPos                         (Parm)
// unsigned char                  CurState                       (Parm)
// int                            ChannelNum                     (Parm)
// struct FString                 ChannelNickName                (Parm, NeedCtorLink)
// int                            GameRoomNum                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckFriendPosition(int Result, const struct FString& TargetCharName, unsigned char ServerType, const struct FString& fServername, const struct FString& fServerShortName, const struct FString& fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, const struct FString& ChannelNickName, int GameRoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckFriendPosition");

	UBTTcpLink_Channel_sfAckFriendPosition_Params params;
	params.Result = Result;
	params.TargetCharName = TargetCharName;
	params.ServerType = ServerType;
	params.fServername = fServername;
	params.fServerShortName = fServerShortName;
	params.fServerIP = fServerIP;
	params.fServerPort = fServerPort;
	params.CurPos = CurPos;
	params.CurState = CurState;
	params.ChannelNum = ChannelNum;
	params.ChannelNickName = ChannelNickName;
	params.GameRoomNum = GameRoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqFriendPosition
// (Native, Public)
// Parameters:
// struct FString                 TargetCharName                 (Parm, NeedCtorLink)
// unsigned char                  CommunityType                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqFriendPosition(const struct FString& TargetCharName, unsigned char CommunityType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqFriendPosition");

	UBTTcpLink_Channel_sfReqFriendPosition_Params params;
	params.TargetCharName = TargetCharName;
	params.CommunityType = CommunityType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckDedicateHost_Login
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            UserID                         (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckDedicateHost_Login(int Result, int UserID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckDedicateHost_Login");

	UBTTcpLink_Channel_sfAckDedicateHost_Login_Params params;
	params.Result = Result;
	params.UserID = UserID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDedicateHost_Login
// (Native, Public)
// Parameters:
// int                            ProcessID                      (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDedicateHost_Login(int ProcessID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDedicateHost_Login");

	UBTTcpLink_Channel_sfReqDedicateHost_Login_Params params;
	params.ProcessID = ProcessID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLogOut
// (Native, Public)
// Parameters:
// unsigned char                  Result                         (Parm)
// unsigned char                  Reason                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLogOut(unsigned char Result, unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLogOut");

	UBTTcpLink_Channel_sfAckLogOut_Params params;
	params.Result = Result;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLogOut
// (Native, Public)
// Parameters:
// unsigned char                  Reason                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLogOut(unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLogOut");

	UBTTcpLink_Channel_sfReqLogOut_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckTencent_AASInfo
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// unsigned char                  IsAdult                        (Parm)
// unsigned char                  IsQQAuth                       (Parm)
// int                            AccumTimeSec                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckTencent_AASInfo(int UserID, unsigned char IsAdult, unsigned char IsQQAuth, int AccumTimeSec)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckTencent_AASInfo");

	UBTTcpLink_Channel_sfAckTencent_AASInfo_Params params;
	params.UserID = UserID;
	params.IsAdult = IsAdult;
	params.IsQQAuth = IsQQAuth;
	params.AccumTimeSec = AccumTimeSec;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSetCommunityOption
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrStr                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSetCommunityOption(int Result, const struct FString& ErrStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSetCommunityOption");

	UBTTcpLink_Channel_sfAckSetCommunityOption_Params params;
	params.Result = Result;
	params.ErrStr = ErrStr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSetCommunityOption
// (Native, Public)
// Parameters:
// int                            Opt_Wispher                    (Parm)
// int                            Opt_GameInvite                 (Parm)
// int                            Opt_FriendInvite               (Parm)
// int                            Opt_ClanInvite                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSetCommunityOption(int Opt_Wispher, int Opt_GameInvite, int Opt_FriendInvite, int Opt_ClanInvite)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSetCommunityOption");

	UBTTcpLink_Channel_sfReqSetCommunityOption_Params params;
	params.Opt_Wispher = Opt_Wispher;
	params.Opt_GameInvite = Opt_GameInvite;
	params.Opt_FriendInvite = Opt_FriendInvite;
	params.Opt_ClanInvite = Opt_ClanInvite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckCommunityOptionList
// (Native, Public)
// Parameters:
// int                            Opt_Wispher                    (Parm)
// int                            Opt_GameInvite                 (Parm)
// int                            Opt_FriendInvite               (Parm)
// int                            Opt_ClanInvite                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckCommunityOptionList(int Opt_Wispher, int Opt_GameInvite, int Opt_FriendInvite, int Opt_ClanInvite)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckCommunityOptionList");

	UBTTcpLink_Channel_sfAckCommunityOptionList_Params params;
	params.Opt_Wispher = Opt_Wispher;
	params.Opt_GameInvite = Opt_GameInvite;
	params.Opt_FriendInvite = Opt_FriendInvite;
	params.Opt_ClanInvite = Opt_ClanInvite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqCommunityOptionList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqCommunityOptionList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqCommunityOptionList");

	UBTTcpLink_Channel_sfReqCommunityOptionList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyUpdateCharInfo_TitleMark
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            TitleMarkID                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyUpdateCharInfo_TitleMark(const struct FString& CharName, int TitleMarkID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyUpdateCharInfo_TitleMark");

	UBTTcpLink_Channel_sfAckNotifyUpdateCharInfo_TitleMark_Params params;
	params.CharName = CharName;
	params.TitleMarkID = TitleMarkID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyUpdateCharInfo_LevelMark
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            LevelMarkID                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyUpdateCharInfo_LevelMark(const struct FString& CharName, int LevelMarkID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyUpdateCharInfo_LevelMark");

	UBTTcpLink_Channel_sfAckNotifyUpdateCharInfo_LevelMark_Params params;
	params.CharName = CharName;
	params.LevelMarkID = LevelMarkID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetRankingInfoListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetRankingInfoListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetRankingInfoListEnd");

	UBTTcpLink_Channel_sfAckGetRankingInfoListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetRankingInfoList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  RankingType                    (Parm)
// unsigned char                  CommunityType                  (Parm)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<int>                    CharLevel                      (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkPattern                (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBG                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBL                     (Parm, NeedCtorLink)
// TArray<int>                    Ranking_Accum                  (Parm, NeedCtorLink)
// TArray<int>                    Ranking_Accum_Prev             (Parm, NeedCtorLink)
// TArray<int>                    Ranking_Accum_Exp              (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetRankingInfoList(int Result, unsigned char RankingType, unsigned char CommunityType, TArray<struct FString> CharName, TArray<int> CharLevel, TArray<struct FString> ClanName, TArray<int> ClanMarkPattern, TArray<int> ClanMarkBG, TArray<int> ClanMarkBL, TArray<int> Ranking_Accum, TArray<int> Ranking_Accum_Prev, TArray<int> Ranking_Accum_Exp, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetRankingInfoList");

	UBTTcpLink_Channel_sfAckGetRankingInfoList_Params params;
	params.Result = Result;
	params.RankingType = RankingType;
	params.CommunityType = CommunityType;
	params.CharName = CharName;
	params.CharLevel = CharLevel;
	params.ClanName = ClanName;
	params.ClanMarkPattern = ClanMarkPattern;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.Ranking_Accum = Ranking_Accum;
	params.Ranking_Accum_Prev = Ranking_Accum_Prev;
	params.Ranking_Accum_Exp = Ranking_Accum_Exp;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetRankingInfoListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  RankingType                    (Parm)
// unsigned char                  CommunityType                  (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetRankingInfoListStart(int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetRankingInfoListStart");

	UBTTcpLink_Channel_sfAckGetRankingInfoListStart_Params params;
	params.Result = Result;
	params.RankingType = RankingType;
	params.CommunityType = CommunityType;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetRankingInfoList
// (Native, Public)
// Parameters:
// unsigned char                  RankingType                    (Parm)
// unsigned char                  CommunityType                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetRankingInfoList(unsigned char RankingType, unsigned char CommunityType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetRankingInfoList");

	UBTTcpLink_Channel_sfReqGetRankingInfoList_Params params;
	params.RankingType = RankingType;
	params.CommunityType = CommunityType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckCharDetailInfo
// (Native, Public)
// Parameters:
// int                            MaxSerial                      (Parm)
// int                            MaxScore                       (Parm)
// int                            MaxKill                        (Parm)
// int                            MaxAssist                      (Parm)
// int                            Serial3                        (Parm)
// int                            Serial5                        (Parm)
// int                            Serial7                        (Parm)
// int                            Serial10                       (Parm)
// int                            Serial15                       (Parm)
// int                            AR                             (Parm)
// int                            SMG                            (Parm)
// int                            SR                             (Parm)
// int                            SW                             (Parm)
// int                            Melee                          (Parm)
// int                            Grenade                        (Parm)
// int                            FlashBang                      (Parm)
// int                            Foot                           (Parm)
// int                            AT4                            (Parm)
// int                            MG                             (Parm)
// int                            Fire                           (Parm)
// int                            RPG7                           (Parm)
// int                            TimeBomb                       (Parm)
// int                            IcendiaryBomb                  (Parm)
// int                            ClusterBomb                    (Parm)
// int                            ByChopper                      (Parm)
// int                            Artillery                      (Parm)
// int                            KillChopper                    (Parm)
// int                            FirstKill                      (Parm)
// int                            LastKill                       (Parm)
// int                            AllKill                        (Parm)
// int                            Dominate                       (Parm)
// int                            InstallBomb                    (Parm)
// int                            DefuseBomb                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckCharDetailInfo(int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckCharDetailInfo");

	UBTTcpLink_Channel_sfAckCharDetailInfo_Params params;
	params.MaxSerial = MaxSerial;
	params.MaxScore = MaxScore;
	params.MaxKill = MaxKill;
	params.MaxAssist = MaxAssist;
	params.Serial3 = Serial3;
	params.Serial5 = Serial5;
	params.Serial7 = Serial7;
	params.Serial10 = Serial10;
	params.Serial15 = Serial15;
	params.AR = AR;
	params.SMG = SMG;
	params.SR = SR;
	params.SW = SW;
	params.Melee = Melee;
	params.Grenade = Grenade;
	params.FlashBang = FlashBang;
	params.Foot = Foot;
	params.AT4 = AT4;
	params.MG = MG;
	params.Fire = Fire;
	params.RPG7 = RPG7;
	params.TimeBomb = TimeBomb;
	params.IcendiaryBomb = IcendiaryBomb;
	params.ClusterBomb = ClusterBomb;
	params.ByChopper = ByChopper;
	params.Artillery = Artillery;
	params.KillChopper = KillChopper;
	params.FirstKill = FirstKill;
	params.LastKill = LastKill;
	params.AllKill = AllKill;
	params.Dominate = Dominate;
	params.InstallBomb = InstallBomb;
	params.DefuseBomb = DefuseBomb;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqCharDetailInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqCharDetailInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqCharDetailInfo");

	UBTTcpLink_Channel_sfReqCharDetailInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqInGameRoomUserClanLevelChanged
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            ClanLevel                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqInGameRoomUserClanLevelChanged(int UserID, int ClanLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqInGameRoomUserClanLevelChanged");

	UBTTcpLink_Channel_sfReqInGameRoomUserClanLevelChanged_Params params;
	params.UserID = UserID;
	params.ClanLevel = ClanLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqInGameRoomUserInfoChanged
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqInGameRoomUserInfoChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqInGameRoomUserInfoChanged");

	UBTTcpLink_Channel_sfReqInGameRoomUserInfoChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatchResultHistory
// (Native, Public)
// Parameters:
// TArray<struct FBtrDouble>      MatchDate                      (Parm, NeedCtorLink)
// TArray<unsigned char>          IsWin                          (Parm, NeedCtorLink)
// TArray<struct FString>         EnemyClanname                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatchResultHistory(TArray<struct FBtrDouble> MatchDate, TArray<unsigned char> IsWin, TArray<struct FString> EnemyClanname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatchResultHistory");

	UBTTcpLink_Channel_sfAckClanMatchResultHistory_Params params;
	params.MatchDate = MatchDate;
	params.IsWin = IsWin;
	params.EnemyClanname = EnemyClanname;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatchResultHistory
// (Native, Public)
// Parameters:
// struct FString                 ClanNm                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatchResultHistory(const struct FString& ClanNm)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatchResultHistory");

	UBTTcpLink_Channel_sfReqClanMatchResultHistory_Params params;
	params.ClanNm = ClanNm;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckDeleteMailAll
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  MailType                       (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckDeleteMailAll(int Result, unsigned char MailType, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckDeleteMailAll");

	UBTTcpLink_Channel_sfAckDeleteMailAll_Params params;
	params.Result = Result;
	params.MailType = MailType;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDeleteMailAll
// (Native, Public)
// Parameters:
// unsigned char                  MailType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDeleteMailAll(unsigned char MailType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDeleteMailAll");

	UBTTcpLink_Channel_sfReqDeleteMailAll_Params params;
	params.MailType = MailType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_PublicWaitRoomChanged
// (Native, Public)
// Parameters:
// int                            WaitRoomIdx                    (Parm)
// struct FString                 RoomName                       (Parm, NeedCtorLink)
// int                            MapNum                         (Parm)
// int                            CurUserCount                   (Parm)
// int                            MaxUserCount                   (Parm)
// unsigned char                  Status                         (Parm)
// unsigned char                  IsPublic                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_PublicWaitRoomChanged(int WaitRoomIdx, const struct FString& RoomName, int MapNum, int CurUserCount, int MaxUserCount, unsigned char Status, unsigned char IsPublic)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_PublicWaitRoomChanged");

	UBTTcpLink_Channel_sfAckClanMatch_PublicWaitRoomChanged_Params params;
	params.WaitRoomIdx = WaitRoomIdx;
	params.RoomName = RoomName;
	params.MapNum = MapNum;
	params.CurUserCount = CurUserCount;
	params.MaxUserCount = MaxUserCount;
	params.Status = Status;
	params.IsPublic = IsPublic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEventNotify
// (Native, Public)
// Parameters:
// int                            Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEventNotify(int Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEventNotify");

	UBTTcpLink_Channel_sfAckEventNotify_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqEventNotify
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqEventNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqEventNotify");

	UBTTcpLink_Channel_sfReqEventNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_NotifyChangeClanname
// (Native, Public)
// Parameters:
// struct FString                 NewClanname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPaidItem_NotifyChangeClanname(const struct FString& NewClanname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_NotifyChangeClanname");

	UBTTcpLink_Channel_sfAckPaidItem_NotifyChangeClanname_Params params;
	params.NewClanname = NewClanname;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_ChangeClanname
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RemainCount                    (Parm)
// struct FString                 NewClanname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPaidItem_ChangeClanname(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int RemainCount, const struct FString& NewClanname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_ChangeClanname");

	UBTTcpLink_Channel_sfAckPaidItem_ChangeClanname_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.RemainCount = RemainCount;
	params.NewClanname = NewClanname;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_ChangeClanname
// (Native, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// struct FString                 NewClanname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqPaidItem_ChangeClanname(const struct FBtrDouble& ItemIdx, const struct FString& NewClanname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_ChangeClanname");

	UBTTcpLink_Channel_sfReqPaidItem_ChangeClanname_Params params;
	params.ItemIdx = ItemIdx;
	params.NewClanname = NewClanname;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_EndPublicWaitRoomList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_EndPublicWaitRoomList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_EndPublicWaitRoomList");

	UBTTcpLink_Channel_sfAckClanMatch_EndPublicWaitRoomList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_PublicWaitRoomList
// (Native, Public)
// Parameters:
// TArray<int>                    WaitRoomIdx                    (Parm, NeedCtorLink)
// TArray<struct FString>         LeaderName                     (Parm, NeedCtorLink)
// TArray<struct FString>         RoomName                       (Parm, NeedCtorLink)
// TArray<int>                    MapNum                         (Parm, NeedCtorLink)
// TArray<int>                    CurUserCount                   (Parm, NeedCtorLink)
// TArray<int>                    MaxUserCount                   (Parm, NeedCtorLink)
// TArray<unsigned char>          Status                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_PublicWaitRoomList(TArray<int> WaitRoomIdx, TArray<struct FString> LeaderName, TArray<struct FString> RoomName, TArray<int> MapNum, TArray<int> CurUserCount, TArray<int> MaxUserCount, TArray<unsigned char> Status)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_PublicWaitRoomList");

	UBTTcpLink_Channel_sfAckClanMatch_PublicWaitRoomList_Params params;
	params.WaitRoomIdx = WaitRoomIdx;
	params.LeaderName = LeaderName;
	params.RoomName = RoomName;
	params.MapNum = MapNum;
	params.CurUserCount = CurUserCount;
	params.MaxUserCount = MaxUserCount;
	params.Status = Status;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_StartPublicWaitRoomList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_StartPublicWaitRoomList(int Result, const struct FString& ErrMsg, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_StartPublicWaitRoomList");

	UBTTcpLink_Channel_sfAckClanMatch_StartPublicWaitRoomList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_GetPublicWaitRoomList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_GetPublicWaitRoomList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_GetPublicWaitRoomList");

	UBTTcpLink_Channel_sfReqClanMatch_GetPublicWaitRoomList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckServerType
// (Native, Public)
// Parameters:
// unsigned char                  Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckServerType(unsigned char Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckServerType");

	UBTTcpLink_Channel_sfAckServerType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqServerType
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqServerType()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqServerType");

	UBTTcpLink_Channel_sfReqServerType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckServerShutdown
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckServerShutdown(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckServerShutdown");

	UBTTcpLink_Channel_sfAckServerShutdown_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqServerShutdown
// (Native, Public)
// Parameters:
// struct FString                 AuthKey                        (Parm, NeedCtorLink)
// int                            SecondAfter                    (Parm)
// struct FBtrDouble              ShutdownTime                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqServerShutdown(const struct FString& AuthKey, int SecondAfter, const struct FBtrDouble& ShutdownTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqServerShutdown");

	UBTTcpLink_Channel_sfReqServerShutdown_Params params;
	params.AuthKey = AuthKey;
	params.SecondAfter = SecondAfter;
	params.ShutdownTime = ShutdownTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyEndTutorial
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            Level                          (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            ClanMarkPattern                (Parm)
// int                            ClanMarkBG                     (Parm)
// int                            ClanMarkBL                     (Parm)
// int                            ClanGrade                      (Parm)
// int                            ClanWin                        (Parm)
// int                            ClanLose                       (Parm)
// unsigned char                  IsLookFor                      (Parm)
// int                            Result                         (Parm)
// int                            ClanLevel                      (Parm)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyEndTutorial(int UserID, const struct FString& CharName, int Level, const struct FString& ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyEndTutorial");

	UBTTcpLink_Channel_sfAckNotifyEndTutorial_Params params;
	params.UserID = UserID;
	params.CharName = CharName;
	params.Level = Level;
	params.ClanName = ClanName;
	params.ClanMarkPattern = ClanMarkPattern;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.IsLookFor = IsLookFor;
	params.Result = Result;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyEndTutorial
// (Native, Public)
// Parameters:
// int                            TutorialResultType             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyEndTutorial(int TutorialResultType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyEndTutorial");

	UBTTcpLink_Channel_sfReqNotifyEndTutorial_Params params;
	params.TutorialResultType = TutorialResultType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyStartTutorial
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyStartTutorial(int Result, int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyStartTutorial");

	UBTTcpLink_Channel_sfAckNotifyStartTutorial_Params params;
	params.Result = Result;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyStartTutorial
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyStartTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyStartTutorial");

	UBTTcpLink_Channel_sfReqNotifyStartTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRoomUserPingInfo
// (Native, Public)
// Parameters:
// TArray<int>                    UnqueID                        (Parm, NeedCtorLink)
// TArray<int>                    Ping                           (Parm, NeedCtorLink)
// int                            HostPriorityPoint              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRoomUserPingInfo(TArray<int> UnqueID, TArray<int> Ping, int HostPriorityPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRoomUserPingInfo");

	UBTTcpLink_Channel_sfAckRoomUserPingInfo_Params params;
	params.UnqueID = UnqueID;
	params.Ping = Ping;
	params.HostPriorityPoint = HostPriorityPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRoomUserPingInfo
// (Native, Public)
// Parameters:
// TArray<int>                    UnqueID                        (Parm, NeedCtorLink)
// TArray<int>                    Ping                           (Parm, NeedCtorLink)
// int                            HostPriorityPoint              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRoomUserPingInfo(TArray<int> UnqueID, TArray<int> Ping, int HostPriorityPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRoomUserPingInfo");

	UBTTcpLink_Channel_sfReqRoomUserPingInfo_Params params;
	params.UnqueID = UnqueID;
	params.Ping = Ping;
	params.HostPriorityPoint = HostPriorityPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckMyEquipedQSlotList
// (Native, Public)
// Parameters:
// TArray<unsigned char>          QSlotDispOrder                 (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      MWUniqueID                     (Parm, NeedCtorLink)
// TArray<int>                    MWItemID                       (Parm, NeedCtorLink)
// TArray<int>                    MWPartID                       (Parm, NeedCtorLink)
// TArray<int>                    MWPaintID                      (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      PistolUniqueID                 (Parm, NeedCtorLink)
// TArray<int>                    PistolItemID                   (Parm, NeedCtorLink)
// TArray<int>                    PistolPartID                   (Parm, NeedCtorLink)
// TArray<int>                    PistolPaintID                  (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TW1UniqueID                    (Parm, NeedCtorLink)
// TArray<int>                    TWItemID1                      (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TW2UniqueID                    (Parm, NeedCtorLink)
// TArray<int>                    TWItemID2                      (Parm, NeedCtorLink)
// TArray<int>                    Skill1ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill2ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill3ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill4ID                       (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckMyEquipedQSlotList(TArray<unsigned char> QSlotDispOrder, TArray<struct FBtrDouble> MWUniqueID, TArray<int> MWItemID, TArray<int> MWPartID, TArray<int> MWPaintID, TArray<struct FBtrDouble> PistolUniqueID, TArray<int> PistolItemID, TArray<int> PistolPartID, TArray<int> PistolPaintID, TArray<struct FBtrDouble> TW1UniqueID, TArray<int> TWItemID1, TArray<struct FBtrDouble> TW2UniqueID, TArray<int> TWItemID2, TArray<int> Skill1ID, TArray<int> Skill2ID, TArray<int> Skill3ID, TArray<int> Skill4ID, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckMyEquipedQSlotList");

	UBTTcpLink_Channel_sfAckMyEquipedQSlotList_Params params;
	params.QSlotDispOrder = QSlotDispOrder;
	params.MWUniqueID = MWUniqueID;
	params.MWItemID = MWItemID;
	params.MWPartID = MWPartID;
	params.MWPaintID = MWPaintID;
	params.PistolUniqueID = PistolUniqueID;
	params.PistolItemID = PistolItemID;
	params.PistolPartID = PistolPartID;
	params.PistolPaintID = PistolPaintID;
	params.TW1UniqueID = TW1UniqueID;
	params.TWItemID1 = TWItemID1;
	params.TW2UniqueID = TW2UniqueID;
	params.TWItemID2 = TWItemID2;
	params.Skill1ID = Skill1ID;
	params.Skill2ID = Skill2ID;
	params.Skill3ID = Skill3ID;
	params.Skill4ID = Skill4ID;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqMyEquipedQSlotList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqMyEquipedQSlotList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqMyEquipedQSlotList");

	UBTTcpLink_Channel_sfReqMyEquipedQSlotList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckMyEquipedSkillList
// (Native, Public)
// Parameters:
// TArray<int>                    SkillIDs                       (Parm, NeedCtorLink)
// TArray<int>                    SlotPositions                  (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckMyEquipedSkillList(TArray<int> SkillIDs, TArray<int> SlotPositions, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckMyEquipedSkillList");

	UBTTcpLink_Channel_sfAckMyEquipedSkillList_Params params;
	params.SkillIDs = SkillIDs;
	params.SlotPositions = SlotPositions;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqMyEquipedSkillList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqMyEquipedSkillList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqMyEquipedSkillList");

	UBTTcpLink_Channel_sfReqMyEquipedSkillList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckMyEquipedItemList
// (Native, Public)
// Parameters:
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    SlotPositions                  (Parm, NeedCtorLink)
// TArray<int>                    AddPartsID                     (Parm, NeedCtorLink)
// TArray<int>                    PaintID                        (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueID                       (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckMyEquipedItemList(TArray<int> ItemIDs, TArray<int> SlotPositions, TArray<int> AddPartsID, TArray<int> PaintID, TArray<struct FBtrDouble> UniqueID, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckMyEquipedItemList");

	UBTTcpLink_Channel_sfAckMyEquipedItemList_Params params;
	params.ItemIDs = ItemIDs;
	params.SlotPositions = SlotPositions;
	params.AddPartsID = AddPartsID;
	params.PaintID = PaintID;
	params.UniqueID = UniqueID;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqMyEquipedItemList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqMyEquipedItemList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqMyEquipedItemList");

	UBTTcpLink_Channel_sfReqMyEquipedItemList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetMyMailBoxState
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  IsFull                         (Parm)
// int                            NewMailCount                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetMyMailBoxState(int Result, unsigned char IsFull, int NewMailCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetMyMailBoxState");

	UBTTcpLink_Channel_sfAckGetMyMailBoxState_Params params;
	params.Result = Result;
	params.IsFull = IsFull;
	params.NewMailCount = NewMailCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetMyMailBoxState
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetMyMailBoxState()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetMyMailBoxState");

	UBTTcpLink_Channel_sfReqGetMyMailBoxState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSetLookForClan
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsLookingFor                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSetLookForClan(int Result, const struct FString& ErrMsg, unsigned char IsLookingFor)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSetLookForClan");

	UBTTcpLink_Channel_sfAckSetLookForClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsLookingFor = IsLookingFor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSetLookForClan
// (Native, Public)
// Parameters:
// unsigned char                  IsLookingFor                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSetLookForClan(unsigned char IsLookingFor)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSetLookForClan");

	UBTTcpLink_Channel_sfReqSetLookForClan_Params params;
	params.IsLookingFor = IsLookingFor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckExteriorRoomOwnerInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckExteriorRoomOwnerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckExteriorRoomOwnerInfo");

	UBTTcpLink_Channel_sfAckExteriorRoomOwnerInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqExteriorRoomOwnerInfo
// (Native, Public)
// Parameters:
// int                            RoomNum                        (Parm)
// struct FString                 OwnerName                      (Parm, NeedCtorLink)
// struct FString                 OwnerIP                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqExteriorRoomOwnerInfo(int RoomNum, const struct FString& OwnerName, const struct FString& OwnerIP)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqExteriorRoomOwnerInfo");

	UBTTcpLink_Channel_sfReqExteriorRoomOwnerInfo_Params params;
	params.RoomNum = RoomNum;
	params.OwnerName = OwnerName;
	params.OwnerIP = OwnerIP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_SetWaitRoomPublic
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  Set                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_SetWaitRoomPublic(int Result, const struct FString& ErrMsg, unsigned char Set)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_SetWaitRoomPublic");

	UBTTcpLink_Channel_sfAckClanMatch_SetWaitRoomPublic_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Set = Set;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_SetWaitRoomPublic
// (Native, Public)
// Parameters:
// unsigned char                  Set                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_SetWaitRoomPublic(unsigned char Set)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_SetWaitRoomPublic");

	UBTTcpLink_Channel_sfReqClanMatch_SetWaitRoomPublic_Params params;
	params.Set = Set;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRemoveCheckTeamBalanceList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRemoveCheckTeamBalanceList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRemoveCheckTeamBalanceList");

	UBTTcpLink_Channel_sfReqRemoveCheckTeamBalanceList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_NotifyChangeClanMark
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            Pattern                        (Parm)
// int                            BG                             (Parm)
// int                            BL                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPaidItem_NotifyChangeClanMark(const struct FString& ClanName, int Pattern, int BG, int BL)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_NotifyChangeClanMark");

	UBTTcpLink_Channel_sfAckPaidItem_NotifyChangeClanMark_Params params;
	params.ClanName = ClanName;
	params.Pattern = Pattern;
	params.BG = BG;
	params.BL = BL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_ChangeClanMark
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            StackCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPaidItem_ChangeClanMark(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_ChangeClanMark");

	UBTTcpLink_Channel_sfAckPaidItem_ChangeClanMark_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_ChangeClanMark
// (Native, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// unsigned char                  IsPaid                         (Parm)
// int                            Pattern                        (Parm)
// int                            BG                             (Parm)
// int                            BL                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqPaidItem_ChangeClanMark(const struct FBtrDouble& ItemIdx, unsigned char IsPaid, int Pattern, int BG, int BL)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_ChangeClanMark");

	UBTTcpLink_Channel_sfReqPaidItem_ChangeClanMark_Params params;
	params.ItemIdx = ItemIdx;
	params.IsPaid = IsPaid;
	params.Pattern = Pattern;
	params.BG = BG;
	params.BL = BL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_ClanMarkDupCheck
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPaidItem_ClanMarkDupCheck(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_ClanMarkDupCheck");

	UBTTcpLink_Channel_sfAckPaidItem_ClanMarkDupCheck_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_ClanMarkDupCheck
// (Native, Public)
// Parameters:
// unsigned char                  IsPaid                         (Parm)
// int                            Pattern                        (Parm)
// int                            BG                             (Parm)
// int                            BL                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqPaidItem_ClanMarkDupCheck(unsigned char IsPaid, int Pattern, int BG, int BL)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_ClanMarkDupCheck");

	UBTTcpLink_Channel_sfReqPaidItem_ClanMarkDupCheck_Params params;
	params.IsPaid = IsPaid;
	params.Pattern = Pattern;
	params.BG = BG;
	params.BL = BL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_RelayBroadcast
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPaidItem_RelayBroadcast(const struct FString& CharName, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_RelayBroadcast");

	UBTTcpLink_Channel_sfAckPaidItem_RelayBroadcast_Params params;
	params.CharName = CharName;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_BroadCast
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            StackCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPaidItem_BroadCast(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_BroadCast");

	UBTTcpLink_Channel_sfAckPaidItem_BroadCast_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_BroadCast
// (Native, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            Command                        (Parm)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqPaidItem_BroadCast(const struct FBtrDouble& ItemIdx, int Command, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_BroadCast");

	UBTTcpLink_Channel_sfReqPaidItem_BroadCast_Params params;
	params.ItemIdx = ItemIdx;
	params.Command = Command;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_EraseRecord
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            Command                        (Parm)
// int                            RemainCount                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPaidItem_EraseRecord(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int Command, int RemainCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_EraseRecord");

	UBTTcpLink_Channel_sfAckPaidItem_EraseRecord_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.Command = Command;
	params.RemainCount = RemainCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_EraseRecord
// (Native, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            Command                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqPaidItem_EraseRecord(const struct FBtrDouble& ItemIdx, int Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_EraseRecord");

	UBTTcpLink_Channel_sfReqPaidItem_EraseRecord_Params params;
	params.ItemIdx = ItemIdx;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_ChangeCharname
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RemainCount                    (Parm)
// struct FString                 NewCharname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPaidItem_ChangeCharname(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int RemainCount, const struct FString& NewCharname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPaidItem_ChangeCharname");

	UBTTcpLink_Channel_sfAckPaidItem_ChangeCharname_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.RemainCount = RemainCount;
	params.NewCharname = NewCharname;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_ChangeCharname
// (Native, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// struct FString                 NewCharname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqPaidItem_ChangeCharname(const struct FBtrDouble& ItemIdx, const struct FString& NewCharname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqPaidItem_ChangeCharname");

	UBTTcpLink_Channel_sfReqPaidItem_ChangeCharname_Params params;
	params.ItemIdx = ItemIdx;
	params.NewCharname = NewCharname;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRecvSystemMsg
// (Native, Public)
// Parameters:
// unsigned char                  CommunityType                  (Parm)
// struct FSystemMsgParam         MsgInfo                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRecvSystemMsg(unsigned char CommunityType, const struct FSystemMsgParam& MsgInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRecvSystemMsg");

	UBTTcpLink_Channel_sfAckRecvSystemMsg_Params params;
	params.CommunityType = CommunityType;
	params.MsgInfo = MsgInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSendSystemMsg
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSendSystemMsg(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSendSystemMsg");

	UBTTcpLink_Channel_sfAckSendSystemMsg_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSendSystemMsg
// (Native, Public)
// Parameters:
// unsigned char                  RecvType                       (Parm)
// struct FString                 SendCharName                   (Parm, NeedCtorLink)
// struct FString                 RecvCharname                   (Parm, NeedCtorLink)
// struct FSystemMsgParam         MsgInfo                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSendSystemMsg(unsigned char RecvType, const struct FString& SendCharName, const struct FString& RecvCharname, const struct FSystemMsgParam& MsgInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSendSystemMsg");

	UBTTcpLink_Channel_sfReqSendSystemMsg_Params params;
	params.RecvType = RecvType;
	params.SendCharName = SendCharName;
	params.RecvCharname = RecvCharname;
	params.MsgInfo = MsgInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRandomBox_Use
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              RandomBoxItemIdx               (Parm)
// int                            RandomBxoItemCount             (Parm)
// struct FBtrDouble              KeyItemIdx                     (Parm)
// int                            KeyItemRemainCount             (Parm)
// TArray<int>                    ItemIDChoose                   (Parm, NeedCtorLink)
// TArray<int>                    PartIDChoose                   (Parm, NeedCtorLink)
// TArray<int>                    PeriodOnChoosenItem            (Parm, NeedCtorLink)
// TArray<int>                    StackCountOnChoosenItem        (Parm, NeedCtorLink)
// TArray<unsigned char>          bHave                          (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      ItemIdx                        (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UntilTime                      (Parm, NeedCtorLink)
// TArray<int>                    StackCount                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRandomBox_Use(int Result, const struct FString& ErrMsg, const struct FBtrDouble& RandomBoxItemIdx, int RandomBxoItemCount, const struct FBtrDouble& KeyItemIdx, int KeyItemRemainCount, TArray<int> ItemIDChoose, TArray<int> PartIDChoose, TArray<int> PeriodOnChoosenItem, TArray<int> StackCountOnChoosenItem, TArray<unsigned char> bHave, TArray<struct FBtrDouble> ItemIdx, TArray<struct FBtrDouble> UntilTime, TArray<int> StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRandomBox_Use");

	UBTTcpLink_Channel_sfAckRandomBox_Use_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.RandomBoxItemIdx = RandomBoxItemIdx;
	params.RandomBxoItemCount = RandomBxoItemCount;
	params.KeyItemIdx = KeyItemIdx;
	params.KeyItemRemainCount = KeyItemRemainCount;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;
	params.PeriodOnChoosenItem = PeriodOnChoosenItem;
	params.StackCountOnChoosenItem = StackCountOnChoosenItem;
	params.bHave = bHave;
	params.ItemIdx = ItemIdx;
	params.UntilTime = UntilTime;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRandomBox_Use
// (Native, Public)
// Parameters:
// struct FBtrDouble              ItemIdx_RandomBox              (Parm)
// struct FBtrDouble              ItemIdx_Key                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRandomBox_Use(const struct FBtrDouble& ItemIdx_RandomBox, const struct FBtrDouble& ItemIdx_Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRandomBox_Use");

	UBTTcpLink_Channel_sfReqRandomBox_Use_Params params;
	params.ItemIdx_RandomBox = ItemIdx_RandomBox;
	params.ItemIdx_Key = ItemIdx_Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangedRoomTitle_FromGM
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RoomNumber                     (Parm)
// struct FString                 NewRoomTitle                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangedRoomTitle_FromGM(int Result, int RoomNumber, const struct FString& NewRoomTitle)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangedRoomTitle_FromGM");

	UBTTcpLink_Channel_sfAckChangedRoomTitle_FromGM_Params params;
	params.Result = Result;
	params.RoomNumber = RoomNumber;
	params.NewRoomTitle = NewRoomTitle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangeRoomTitle_GM
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RoomNumber                     (Parm)
// struct FString                 NewRoomTitle                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangeRoomTitle_GM(int Result, int RoomNumber, const struct FString& NewRoomTitle)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangeRoomTitle_GM");

	UBTTcpLink_Channel_sfAckChangeRoomTitle_GM_Params params;
	params.Result = Result;
	params.RoomNumber = RoomNumber;
	params.NewRoomTitle = NewRoomTitle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChangeRoomTitle_GM
// (Native, Public)
// Parameters:
// int                            RoomNumber                     (Parm)
// struct FString                 NewRoomTitle                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChangeRoomTitle_GM(int RoomNumber, const struct FString& NewRoomTitle)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChangeRoomTitle_GM");

	UBTTcpLink_Channel_sfReqChangeRoomTitle_GM_Params params;
	params.RoomNumber = RoomNumber;
	params.NewRoomTitle = NewRoomTitle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGMLeaveRoom
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RoomNumber                     (Parm)
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGMLeaveRoom(int Result, int RoomNumber, int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGMLeaveRoom");

	UBTTcpLink_Channel_sfAckGMLeaveRoom_Params params;
	params.Result = Result;
	params.RoomNumber = RoomNumber;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGMEnterRoom
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RoomNumber                     (Parm)
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGMEnterRoom(int Result, int RoomNumber, int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGMEnterRoom");

	UBTTcpLink_Channel_sfAckGMEnterRoom_Params params;
	params.Result = Result;
	params.RoomNumber = RoomNumber;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckQuestGetAvailableEventList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    QuestID                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckQuestGetAvailableEventList(int Result, const struct FString& ErrMsg, TArray<int> QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckQuestGetAvailableEventList");

	UBTTcpLink_Channel_sfAckQuestGetAvailableEventList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqQuestGetAvailableEventList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqQuestGetAvailableEventList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqQuestGetAvailableEventList");

	UBTTcpLink_Channel_sfReqQuestGetAvailableEventList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckCharBlockInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FBtrDouble              ChatBlockStartTime             (Parm)
// struct FBtrDouble              ChatBlockEndTime               (Parm)
// TArray<struct FBtrDouble>      BlockedItemIdx                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckCharBlockInfo(int Result, const struct FBtrDouble& ChatBlockStartTime, const struct FBtrDouble& ChatBlockEndTime, TArray<struct FBtrDouble> BlockedItemIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckCharBlockInfo");

	UBTTcpLink_Channel_sfAckCharBlockInfo_Params params;
	params.Result = Result;
	params.ChatBlockStartTime = ChatBlockStartTime;
	params.ChatBlockEndTime = ChatBlockEndTime;
	params.BlockedItemIdx = BlockedItemIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqCharBlockInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqCharBlockInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqCharBlockInfo");

	UBTTcpLink_Channel_sfReqCharBlockInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqIsPaidWebzenPCBang
// (Native, Public)
// Parameters:
// unsigned char                  IsPaid                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqIsPaidWebzenPCBang(unsigned char IsPaid)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqIsPaidWebzenPCBang");

	UBTTcpLink_Channel_sfReqIsPaidWebzenPCBang_Params params;
	params.IsPaid = IsPaid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_GetClanWaittingRoomInfo
// (Native, Public)
// Parameters:
// int                            WaitRoomIndex                  (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// struct FString                 WaitRoomName                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_GetClanWaittingRoomInfo(int WaitRoomIndex, int Result, const struct FString& ErrMsg, TArray<int> MapNumArray, int VersusMode, const struct FString& WaitRoomName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_GetClanWaittingRoomInfo");

	UBTTcpLink_Channel_sfAckClanMatch_GetClanWaittingRoomInfo_Params params;
	params.WaitRoomIndex = WaitRoomIndex;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;
	params.WaitRoomName = WaitRoomName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_GetClanWaittingRoomInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_GetClanWaittingRoomInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_GetClanWaittingRoomInfo");

	UBTTcpLink_Channel_sfReqClanMatch_GetClanWaittingRoomInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckReturnBotID
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckReturnBotID(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckReturnBotID");

	UBTTcpLink_Channel_sfAckReturnBotID_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqReturnBotID
// (Native, Public)
// Parameters:
// TArray<int>                    BotID                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqReturnBotID(TArray<int> BotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqReturnBotID");

	UBTTcpLink_Channel_sfReqReturnBotID_Params params;
	params.BotID = BotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetBotID
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  RequestedAFCount               (Parm)
// unsigned char                  RequestedRSACount              (Parm)
// TArray<int>                    AFBotID                        (Parm, NeedCtorLink)
// TArray<int>                    RSABotID                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetBotID(int Result, unsigned char RequestedAFCount, unsigned char RequestedRSACount, TArray<int> AFBotID, TArray<int> RSABotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetBotID");

	UBTTcpLink_Channel_sfAckGetBotID_Params params;
	params.Result = Result;
	params.RequestedAFCount = RequestedAFCount;
	params.RequestedRSACount = RequestedRSACount;
	params.AFBotID = AFBotID;
	params.RSABotID = RSABotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetBotID
// (Native, Public)
// Parameters:
// unsigned char                  AFCount                        (Parm)
// unsigned char                  RSACount                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetBotID(unsigned char AFCount, unsigned char RSACount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetBotID");

	UBTTcpLink_Channel_sfReqGetBotID_Params params;
	params.AFCount = AFCount;
	params.RSACount = RSACount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_ChangeRoomSetting
// (Native, Public)
// Parameters:
// int                            WaitRoomIndex                  (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// unsigned char                  IsPublic                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_ChangeRoomSetting(int WaitRoomIndex, int Result, const struct FString& ErrMsg, TArray<int> MapNumArray, int VersusMode, unsigned char IsPublic)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_ChangeRoomSetting");

	UBTTcpLink_Channel_sfAckClanMatch_ChangeRoomSetting_Params params;
	params.WaitRoomIndex = WaitRoomIndex;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;
	params.IsPublic = IsPublic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_ChangeRoomSetting
// (Native, Public)
// Parameters:
// int                            WaitRoomIndex                  (Parm)
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// unsigned char                  IsPublic                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_ChangeRoomSetting(int WaitRoomIndex, TArray<int> MapNumArray, int VersusMode, unsigned char IsPublic)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_ChangeRoomSetting");

	UBTTcpLink_Channel_sfReqClanMatch_ChangeRoomSetting_Params params;
	params.WaitRoomIndex = WaitRoomIndex;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;
	params.IsPublic = IsPublic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckParamCheckSum
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckParamCheckSum(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckParamCheckSum");

	UBTTcpLink_Channel_sfAckParamCheckSum_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqParamCheckSum
// (Native, Public)
// Parameters:
// struct FString                 key                            (Parm, NeedCtorLink)
// struct FString                 Value                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqParamCheckSum(const struct FString& key, const struct FString& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqParamCheckSum");

	UBTTcpLink_Channel_sfReqParamCheckSum_Params params;
	params.key = key;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckWebzenBillingUseStorageItem
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemExtra                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckWebzenBillingUseStorageItem(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int ItemID, const struct FBtrDouble& ItemExtra)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckWebzenBillingUseStorageItem");

	UBTTcpLink_Channel_sfAckWebzenBillingUseStorageItem_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.ItemID = ItemID;
	params.ItemExtra = ItemExtra;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqWebzenBillingUseStorageItem
// (Native, Public)
// Parameters:
// int                            StorageSeq                     (Parm)
// int                            StorageItemSeq                 (Parm)
// unsigned char                  StorageItemType                (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqWebzenBillingUseStorageItem(int StorageSeq, int StorageItemSeq, unsigned char StorageItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqWebzenBillingUseStorageItem");

	UBTTcpLink_Channel_sfReqWebzenBillingUseStorageItem_Params params;
	params.StorageSeq = StorageSeq;
	params.StorageItemSeq = StorageItemSeq;
	params.StorageItemType = StorageItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckWebzenBillingStorageListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckWebzenBillingStorageListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckWebzenBillingStorageListEnd");

	UBTTcpLink_Channel_sfAckWebzenBillingStorageListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckWebzenBillingStorageList
// (Native, Public)
// Parameters:
// TArray<int>                    Seq                            (Parm, NeedCtorLink)
// TArray<int>                    ItemSeq                        (Parm, NeedCtorLink)
// TArray<int>                    GroupCode                      (Parm, NeedCtorLink)
// TArray<int>                    ShareFlag                      (Parm, NeedCtorLink)
// TArray<int>                    ProductSeq                     (Parm, NeedCtorLink)
// TArray<struct FString>         CashName                       (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      CashPoint                      (Parm, NeedCtorLink)
// TArray<struct FString>         SendAccountID                  (Parm, NeedCtorLink)
// TArray<struct FString>         SendMessage                    (Parm, NeedCtorLink)
// TArray<unsigned char>          ItemType                       (Parm, NeedCtorLink)
// TArray<unsigned char>          RelationType                   (Parm, NeedCtorLink)
// TArray<int>                    ProductType                    (Parm, NeedCtorLink)
// TArray<int>                    PriceSeq                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckWebzenBillingStorageList(TArray<int> Seq, TArray<int> ItemSeq, TArray<int> GroupCode, TArray<int> ShareFlag, TArray<int> ProductSeq, TArray<struct FString> CashName, TArray<struct FBtrDouble> CashPoint, TArray<struct FString> SendAccountID, TArray<struct FString> SendMessage, TArray<unsigned char> ItemType, TArray<unsigned char> RelationType, TArray<int> ProductType, TArray<int> PriceSeq)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckWebzenBillingStorageList");

	UBTTcpLink_Channel_sfAckWebzenBillingStorageList_Params params;
	params.Seq = Seq;
	params.ItemSeq = ItemSeq;
	params.GroupCode = GroupCode;
	params.ShareFlag = ShareFlag;
	params.ProductSeq = ProductSeq;
	params.CashName = CashName;
	params.CashPoint = CashPoint;
	params.SendAccountID = SendAccountID;
	params.SendMessage = SendMessage;
	params.ItemType = ItemType;
	params.RelationType = RelationType;
	params.ProductType = ProductType;
	params.PriceSeq = PriceSeq;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckWebzenBillingStorageListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            TotalCount                     (Parm)
// int                            TotalPage                      (Parm)
// int                            CurPage                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckWebzenBillingStorageListStart(int Result, const struct FString& ErrMsg, int TotalCount, int TotalPage, int CurPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckWebzenBillingStorageListStart");

	UBTTcpLink_Channel_sfAckWebzenBillingStorageListStart_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.TotalCount = TotalCount;
	params.TotalPage = TotalPage;
	params.CurPage = CurPage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqWebzenBillingStorageList
// (Native, Public)
// Parameters:
// int                            Page                           (Parm)
// int                            CountForPage                   (Parm)
// unsigned char                  Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqWebzenBillingStorageList(int Page, int CountForPage, unsigned char Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqWebzenBillingStorageList");

	UBTTcpLink_Channel_sfReqWebzenBillingStorageList_Params params;
	params.Page = Page;
	params.CountForPage = CountForPage;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGiftItemByWebzenCash
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            LeftProductCount               (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGiftItemByWebzenCash(int Result, const struct FString& ErrMsg, int LeftProductCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGiftItemByWebzenCash");

	UBTTcpLink_Channel_sfAckGiftItemByWebzenCash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.LeftProductCount = LeftProductCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGiftItemByWebzenCash
// (Native, Public)
// Parameters:
// struct FString                 ReceiverCharName               (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// int                            PackageProductSeq              (Parm)
// int                            PriceSeq                       (Parm)
// int                            ProductDisplaySeq              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGiftItemByWebzenCash(const struct FString& ReceiverCharName, const struct FString& Message, int PackageProductSeq, int PriceSeq, int ProductDisplaySeq)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGiftItemByWebzenCash");

	UBTTcpLink_Channel_sfReqGiftItemByWebzenCash_Params params;
	params.ReceiverCharName = ReceiverCharName;
	params.Message = Message;
	params.PackageProductSeq = PackageProductSeq;
	params.PriceSeq = PriceSeq;
	params.ProductDisplaySeq = ProductDisplaySeq;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGiftItemByWebzenCashGP20
// (Native, Public)
// Parameters:
// struct FString                 ReceiverCharName               (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// int                            ProductNo                      (Parm)
// unsigned char                  Cointype                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGiftItemByWebzenCashGP20(const struct FString& ReceiverCharName, const struct FString& Message, int ProductNo, unsigned char Cointype)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGiftItemByWebzenCashGP20");

	UBTTcpLink_Channel_sfReqGiftItemByWebzenCashGP20_Params params;
	params.ReceiverCharName = ReceiverCharName;
	params.Message = Message;
	params.ProductNo = ProductNo;
	params.Cointype = Cointype;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckBuyItemByWebzenCash
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckBuyItemByWebzenCash(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckBuyItemByWebzenCash");

	UBTTcpLink_Channel_sfAckBuyItemByWebzenCash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqBuyItemByWebzenCash
// (Native, Public)
// Parameters:
// int                            PackageProductSeq              (Parm)
// int                            ProductDisplaySeq              (Parm)
// int                            PriceSeq                       (Parm)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// unsigned char                  BuyOption1                     (Parm)
// unsigned char                  BuyOption2                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqBuyItemByWebzenCash(int PackageProductSeq, int ProductDisplaySeq, int PriceSeq, TArray<int> ItemIDs, const struct FBtrDouble& ItemUniqueID, unsigned char BuyOption1, unsigned char BuyOption2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqBuyItemByWebzenCash");

	UBTTcpLink_Channel_sfReqBuyItemByWebzenCash_Params params;
	params.PackageProductSeq = PackageProductSeq;
	params.ProductDisplaySeq = ProductDisplaySeq;
	params.PriceSeq = PriceSeq;
	params.ItemIDs = ItemIDs;
	params.ItemUniqueID = ItemUniqueID;
	params.BuyOption1 = BuyOption1;
	params.BuyOption2 = BuyOption2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqBuyItemByWebzenCashGP20
// (Native, Public)
// Parameters:
// int                            ProductNo                      (Parm)
// unsigned char                  Cointype                       (Parm)
// struct FBtrDouble              ItemID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqBuyItemByWebzenCashGP20(int ProductNo, unsigned char Cointype, const struct FBtrDouble& ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqBuyItemByWebzenCashGP20");

	UBTTcpLink_Channel_sfReqBuyItemByWebzenCashGP20_Params params;
	params.ProductNo = ProductNo;
	params.Cointype = Cointype;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckWebzenShopScriptVersion
// (Native, Public)
// Parameters:
// int                            Year                           (Parm)
// int                            YearId                         (Parm)
// int                            SalesZoneCode                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckWebzenShopScriptVersion(int Year, int YearId, int SalesZoneCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckWebzenShopScriptVersion");

	UBTTcpLink_Channel_sfAckWebzenShopScriptVersion_Params params;
	params.Year = Year;
	params.YearId = YearId;
	params.SalesZoneCode = SalesZoneCode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqWebzenShopScriptVersion
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqWebzenShopScriptVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqWebzenShopScriptVersion");

	UBTTcpLink_Channel_sfReqWebzenShopScriptVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckWebzenCash
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              PCoinCash                      (Parm)
// struct FBtrDouble              CCoinCash                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckWebzenCash(int Result, const struct FString& ErrMsg, const struct FBtrDouble& PCoinCash, const struct FBtrDouble& CCoinCash)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckWebzenCash");

	UBTTcpLink_Channel_sfAckWebzenCash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PCoinCash = PCoinCash;
	params.CCoinCash = CCoinCash;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqWebzenCash
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqWebzenCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqWebzenCash");

	UBTTcpLink_Channel_sfReqWebzenCash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRegisteredPCBangInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsRegisteredPCBang             (Parm)
// unsigned char                  IsMainPCBang                   (Parm)
// struct FString                 PCBangName                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRegisteredPCBangInfo(int Result, const struct FString& ErrMsg, unsigned char IsRegisteredPCBang, unsigned char IsMainPCBang, const struct FString& PCBangName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRegisteredPCBangInfo");

	UBTTcpLink_Channel_sfAckRegisteredPCBangInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsRegisteredPCBang = IsRegisteredPCBang;
	params.IsMainPCBang = IsMainPCBang;
	params.PCBangName = PCBangName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRegisteredPCBangInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRegisteredPCBangInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRegisteredPCBangInfo");

	UBTTcpLink_Channel_sfReqRegisteredPCBangInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRegisterMainPCBang
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRegisterMainPCBang(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRegisterMainPCBang");

	UBTTcpLink_Channel_sfAckRegisterMainPCBang_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRegisterMainPCBang
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRegisterMainPCBang()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRegisterMainPCBang");

	UBTTcpLink_Channel_sfReqRegisterMainPCBang_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPCBangUserListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPCBangUserListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPCBangUserListEnd");

	UBTTcpLink_Channel_sfAckPCBangUserListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPCBangUserList
// (Native, Public)
// Parameters:
// TArray<struct FString>         FriendName                     (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    CM_Pattern                     (Parm, NeedCtorLink)
// TArray<int>                    CM_BG                          (Parm, NeedCtorLink)
// TArray<int>                    CM_BL                          (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<int>                    ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookForClan                  (Parm, NeedCtorLink)
// TArray<unsigned char>          IsCombat                       (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPCBangUserList(TArray<struct FString> FriendName, TArray<struct FString> ClanName, TArray<int> CM_Pattern, TArray<int> CM_BG, TArray<int> CM_BL, TArray<int> Level, TArray<int> ClanGrade, TArray<int> ClanWin, TArray<int> ClanLose, TArray<unsigned char> IsLookForClan, TArray<unsigned char> IsCombat, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPCBangUserList");

	UBTTcpLink_Channel_sfAckPCBangUserList_Params params;
	params.FriendName = FriendName;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.Level = Level;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.IsLookForClan = IsLookForClan;
	params.IsCombat = IsCombat;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPCBangUserListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPCBangUserListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPCBangUserListStart");

	UBTTcpLink_Channel_sfAckPCBangUserListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqPCBangUserList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqPCBangUserList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqPCBangUserList");

	UBTTcpLink_Channel_sfReqPCBangUserList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDailyQuestNewAvailable
// (Native, Public)
// Parameters:
// TArray<int>                    ExpiredQuestID                 (Parm, NeedCtorLink)
// TArray<int>                    NewQuestID                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDailyQuestNewAvailable(TArray<int> ExpiredQuestID, TArray<int> NewQuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDailyQuestNewAvailable");

	UBTTcpLink_Channel_sfReqDailyQuestNewAvailable_Params params;
	params.ExpiredQuestID = ExpiredQuestID;
	params.NewQuestID = NewQuestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqQuestNewAvailable
// (Native, Public)
// Parameters:
// TArray<int>                    AchivedQuestID                 (Parm, NeedCtorLink)
// TArray<int>                    NewQuestID                     (Parm, NeedCtorLink)
// TArray<unsigned char>          IsDailyQuest                   (Parm, NeedCtorLink)
// TArray<int>                    ExpiredQuest                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqQuestNewAvailable(TArray<int> AchivedQuestID, TArray<int> NewQuestID, TArray<unsigned char> IsDailyQuest, TArray<int> ExpiredQuest)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqQuestNewAvailable");

	UBTTcpLink_Channel_sfReqQuestNewAvailable_Params params;
	params.AchivedQuestID = AchivedQuestID;
	params.NewQuestID = NewQuestID;
	params.IsDailyQuest = IsDailyQuest;
	params.ExpiredQuest = ExpiredQuest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckQuestUpdate
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckQuestUpdate(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckQuestUpdate");

	UBTTcpLink_Channel_sfAckQuestUpdate_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqQuestUpdate
// (Native, Public)
// Parameters:
// int                            UniqueID                       (Parm)
// int                            GameRoomNum                    (Parm)
// TArray<int>                    QuestID                        (Parm, NeedCtorLink)
// TArray<int>                    CountPrograss                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqQuestUpdate(int UniqueID, int GameRoomNum, TArray<int> QuestID, TArray<int> CountPrograss)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqQuestUpdate");

	UBTTcpLink_Channel_sfReqQuestUpdate_Params params;
	params.UniqueID = UniqueID;
	params.GameRoomNum = GameRoomNum;
	params.QuestID = QuestID;
	params.CountPrograss = CountPrograss;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckQuestListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckQuestListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckQuestListEnd");

	UBTTcpLink_Channel_sfAckQuestListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckQuestList
// (Native, Public)
// Parameters:
// TArray<int>                    QuestID                        (Parm, NeedCtorLink)
// TArray<int>                    CountPrograss                  (Parm, NeedCtorLink)
// TArray<unsigned char>          QuestType                      (Parm, NeedCtorLink)
// TArray<unsigned char>          IsComplete                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckQuestList(TArray<int> QuestID, TArray<int> CountPrograss, TArray<unsigned char> QuestType, TArray<unsigned char> IsComplete)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckQuestList");

	UBTTcpLink_Channel_sfAckQuestList_Params params;
	params.QuestID = QuestID;
	params.CountPrograss = CountPrograss;
	params.QuestType = QuestType;
	params.IsComplete = IsComplete;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckQuestListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckQuestListStart(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckQuestListStart");

	UBTTcpLink_Channel_sfAckQuestListStart_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqQuestList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqQuestList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqQuestList");

	UBTTcpLink_Channel_sfReqQuestList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckPermanentRoomInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            ClanIdx                        (Parm)
// unsigned char                  FixedGameMode                  (Parm)
// unsigned char                  FixedMaxUserCnt                (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckPermanentRoomInfo(int Result, int ClanIdx, unsigned char FixedGameMode, unsigned char FixedMaxUserCnt)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckPermanentRoomInfo");

	UBTTcpLink_Channel_sfAckPermanentRoomInfo_Params params;
	params.Result = Result;
	params.ClanIdx = ClanIdx;
	params.FixedGameMode = FixedGameMode;
	params.FixedMaxUserCnt = FixedMaxUserCnt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqPermanentRoomInfo
// (Native, Public)
// Parameters:
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqPermanentRoomInfo(int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqPermanentRoomInfo");

	UBTTcpLink_Channel_sfReqPermanentRoomInfo_Params params;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_FoundMatch
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_FoundMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_FoundMatch");

	UBTTcpLink_Channel_sfAckClanMatch_FoundMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_FoundMatch
// (Native, Public)
// Parameters:
// int                            ChannelID                      (Parm)
// int                            RoomNumber                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_FoundMatch(int ChannelID, int RoomNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_FoundMatch");

	UBTTcpLink_Channel_sfReqClanMatch_FoundMatch_Params params;
	params.ChannelID = ChannelID;
	params.RoomNumber = RoomNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_NotifyStartSearching
// (Native, Public)
// Parameters:
// int                            ShouldWaitMore                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_NotifyStartSearching(int ShouldWaitMore)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_NotifyStartSearching");

	UBTTcpLink_Channel_sfAckClanMatch_NotifyStartSearching_Params params;
	params.ShouldWaitMore = ShouldWaitMore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_StartSearching
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ShouldWaitMore                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_StartSearching(int Result, const struct FString& ErrMsg, int ShouldWaitMore)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_StartSearching");

	UBTTcpLink_Channel_sfAckClanMatch_StartSearching_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ShouldWaitMore = ShouldWaitMore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_StartSearching
// (Native, Public)
// Parameters:
// int                            RequestCount                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_StartSearching(int RequestCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_StartSearching");

	UBTTcpLink_Channel_sfReqClanMatch_StartSearching_Params params;
	params.RequestCount = RequestCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLimitedListInChannel
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// TArray<int>                    LimitedMapID                   (Parm, NeedCtorLink)
// TArray<int>                    LimitedModeID                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLimitedListInChannel(int Result, TArray<int> LimitedMapID, TArray<int> LimitedModeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLimitedListInChannel");

	UBTTcpLink_Channel_sfAckLimitedListInChannel_Params params;
	params.Result = Result;
	params.LimitedMapID = LimitedMapID;
	params.LimitedModeID = LimitedModeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLimitedListInChannel
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLimitedListInChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLimitedListInChannel");

	UBTTcpLink_Channel_sfReqLimitedListInChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRecvInviteGameRoomResult
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRecvInviteGameRoomResult(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRecvInviteGameRoomResult");

	UBTTcpLink_Channel_sfAckRecvInviteGameRoomResult_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRecvInviteGameRoom
// (Native, Public)
// Parameters:
// struct FString                 RoomUniqueID                   (Parm, NeedCtorLink)
// int                            RoomNumber                     (Parm)
// unsigned char                  Answer                         (Parm)
// struct FString                 InviteCharName                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRecvInviteGameRoom(const struct FString& RoomUniqueID, int RoomNumber, unsigned char Answer, const struct FString& InviteCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRecvInviteGameRoom");

	UBTTcpLink_Channel_sfAckRecvInviteGameRoom_Params params;
	params.RoomUniqueID = RoomUniqueID;
	params.RoomNumber = RoomNumber;
	params.Answer = Answer;
	params.InviteCharName = InviteCharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvInviteGameRoom
// (Native, Public)
// Parameters:
// struct FString                 InviteUserServerName           (Parm, NeedCtorLink)
// int                            InviteUserServerID             (Parm)
// int                            InviteUserChannelNumber        (Parm)
// struct FString                 RoomUniqueID                   (Parm, NeedCtorLink)
// int                            RoomNumber                     (Parm)
// struct FString                 RoomName                       (Parm, NeedCtorLink)
// unsigned char                  RoomState                      (Parm)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// struct FString                 OwnerName                      (Parm, NeedCtorLink)
// unsigned char                  GameMode                       (Parm)
// unsigned char                  WeaponLimit                    (Parm)
// unsigned char                  IsTeamBalance                  (Parm)
// struct FString                 Password                       (Parm, NeedCtorLink)
// struct FString                 InviteCharName                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvInviteGameRoom(const struct FString& InviteUserServerName, int InviteUserServerID, int InviteUserChannelNumber, const struct FString& RoomUniqueID, int RoomNumber, const struct FString& RoomName, unsigned char RoomState, const struct FString& MapName, const struct FString& OwnerName, unsigned char GameMode, unsigned char WeaponLimit, unsigned char IsTeamBalance, const struct FString& Password, const struct FString& InviteCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvInviteGameRoom");

	UBTTcpLink_Channel_sfReqRecvInviteGameRoom_Params params;
	params.InviteUserServerName = InviteUserServerName;
	params.InviteUserServerID = InviteUserServerID;
	params.InviteUserChannelNumber = InviteUserChannelNumber;
	params.RoomUniqueID = RoomUniqueID;
	params.RoomNumber = RoomNumber;
	params.RoomName = RoomName;
	params.RoomState = RoomState;
	params.MapName = MapName;
	params.OwnerName = OwnerName;
	params.GameMode = GameMode;
	params.WeaponLimit = WeaponLimit;
	params.IsTeamBalance = IsTeamBalance;
	params.Password = Password;
	params.InviteCharName = InviteCharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckInviteGameRoom
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Answer                         (Parm)
// struct FString                 GuestCharName                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckInviteGameRoom(int Result, unsigned char Answer, const struct FString& GuestCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckInviteGameRoom");

	UBTTcpLink_Channel_sfAckInviteGameRoom_Params params;
	params.Result = Result;
	params.Answer = Answer;
	params.GuestCharName = GuestCharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqInviteGameRoom
// (Native, Public)
// Parameters:
// struct FString                 GuestCharName                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqInviteGameRoom(const struct FString& GuestCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqInviteGameRoom");

	UBTTcpLink_Channel_sfReqInviteGameRoom_Params params;
	params.GuestCharName = GuestCharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_StopSearching
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_StopSearching()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_StopSearching");

	UBTTcpLink_Channel_sfAckClanMatch_StopSearching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_StopSearching
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_StopSearching()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_StopSearching");

	UBTTcpLink_Channel_sfReqClanMatch_StopSearching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_ChangeLeader
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            NewLeader                      (Parm)
// struct FString                 NewLeaderName                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_ChangeLeader(int Result, const struct FString& ErrMsg, int NewLeader, const struct FString& NewLeaderName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_ChangeLeader");

	UBTTcpLink_Channel_sfAckClanMatch_ChangeLeader_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.NewLeader = NewLeader;
	params.NewLeaderName = NewLeaderName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_ChangeLeader
// (Native, Public)
// Parameters:
// int                            WaitRoomIdx                    (Parm)
// int                            NewLeaderID                    (Parm)
// struct FString                 NewLeaderName                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_ChangeLeader(int WaitRoomIdx, int NewLeaderID, const struct FString& NewLeaderName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_ChangeLeader");

	UBTTcpLink_Channel_sfReqClanMatch_ChangeLeader_Params params;
	params.WaitRoomIdx = WaitRoomIdx;
	params.NewLeaderID = NewLeaderID;
	params.NewLeaderName = NewLeaderName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_WaittingTeamList
// (Native, Public)
// Parameters:
// int                            TtotlCount                     (Parm)
// TArray<int>                    Grade                          (Parm, NeedCtorLink)
// TArray<int>                    Map                            (Parm, NeedCtorLink)
// TArray<int>                    Versus                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_WaittingTeamList(int TtotlCount, TArray<int> Grade, TArray<int> Map, TArray<int> Versus)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_WaittingTeamList");

	UBTTcpLink_Channel_sfAckClanMatch_WaittingTeamList_Params params;
	params.TtotlCount = TtotlCount;
	params.Grade = Grade;
	params.Map = Map;
	params.Versus = Versus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_WaittingTeamList
// (Native, Public)
// Parameters:
// int                            StartIndex                     (Parm)
// int                            ReturnCount                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_WaittingTeamList(int StartIndex, int ReturnCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_WaittingTeamList");

	UBTTcpLink_Channel_sfReqClanMatch_WaittingTeamList_Params params;
	params.StartIndex = StartIndex;
	params.ReturnCount = ReturnCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_Chat
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_Chat(int Result, const struct FString& ErrMsg, const struct FString& CharName, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_Chat");

	UBTTcpLink_Channel_sfAckClanMatch_Chat_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.CharName = CharName;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_Chat
// (Native, Public)
// Parameters:
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_Chat(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_Chat");

	UBTTcpLink_Channel_sfReqClanMatch_Chat_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_LeaveNotify
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_LeaveNotify(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_LeaveNotify");

	UBTTcpLink_Channel_sfAckClanMatch_LeaveNotify_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_Leave
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_Leave(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_Leave");

	UBTTcpLink_Channel_sfAckClanMatch_Leave_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_Leave
// (Native, Public)
// Parameters:
// int                            WaittingID                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_Leave(int WaittingID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_Leave");

	UBTTcpLink_Channel_sfReqClanMatch_Leave_Params params;
	params.WaittingID = WaittingID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_MemberList
// (Native, Public)
// Parameters:
// TArray<unsigned char>          IsLeader                       (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkPA                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBG                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBL                     (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_MemberList(TArray<unsigned char> IsLeader, TArray<int> ClanMarkPA, TArray<int> ClanMarkBG, TArray<int> ClanMarkBL, TArray<int> Level, TArray<struct FString> CharName, TArray<int> ClanGrade, TArray<int> ClanWin, TArray<int> ClanLose, TArray<struct FString> ClanName, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_MemberList");

	UBTTcpLink_Channel_sfAckClanMatch_MemberList_Params params;
	params.IsLeader = IsLeader;
	params.ClanMarkPA = ClanMarkPA;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.Level = Level;
	params.CharName = CharName;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.ClanName = ClanName;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_MemberList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_MemberList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_MemberList");

	UBTTcpLink_Channel_sfReqClanMatch_MemberList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_JoinNotify
// (Native, Public)
// Parameters:
// unsigned char                  IsLeader                       (Parm)
// int                            ClanMarkPA                     (Parm)
// int                            ClanMarkBG                     (Parm)
// int                            ClanMarkBL                     (Parm)
// int                            Level                          (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            ClanGrade                      (Parm)
// int                            ClanWin                        (Parm)
// int                            ClanLose                       (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            ClanLevel                      (Parm)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_JoinNotify(unsigned char IsLeader, int ClanMarkPA, int ClanMarkBG, int ClanMarkBL, int Level, const struct FString& CharName, int ClanGrade, int ClanWin, int ClanLose, const struct FString& ClanName, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_JoinNotify");

	UBTTcpLink_Channel_sfAckClanMatch_JoinNotify_Params params;
	params.IsLeader = IsLeader;
	params.ClanMarkPA = ClanMarkPA;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.Level = Level;
	params.CharName = CharName;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.ClanName = ClanName;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_Join
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_Join(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_Join");

	UBTTcpLink_Channel_sfAckClanMatch_Join_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_Join
// (Native, Public)
// Parameters:
// int                            WaittingID                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_Join(int WaittingID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_Join");

	UBTTcpLink_Channel_sfReqClanMatch_Join_Params params;
	params.WaittingID = WaittingID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_InviteCrewResult
// (Native, Public)
// Parameters:
// struct FString                 Invitee                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_InviteCrewResult(const struct FString& Invitee, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_InviteCrewResult");

	UBTTcpLink_Channel_sfReqClanMatch_InviteCrewResult_Params params;
	params.Invitee = Invitee;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_RecvInviteCrew
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 Inviter                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_RecvInviteCrew(int Result, const struct FString& Inviter)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_RecvInviteCrew");

	UBTTcpLink_Channel_sfAckClanMatch_RecvInviteCrew_Params params;
	params.Result = Result;
	params.Inviter = Inviter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_RecvInviteCrew
// (Native, Public)
// Parameters:
// struct FString                 Inviter                        (Parm, NeedCtorLink)
// struct FString                 ServerIP                       (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// int                            WaittingID                     (Parm)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// int                            MapNum                         (Parm)
// int                            InviteUserChannelNum           (Parm)
// struct FString                 LeaderName                     (Parm, NeedCtorLink)
// struct FString                 RoomName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_RecvInviteCrew(const struct FString& Inviter, const struct FString& ServerIP, int Port, int WaittingID, const struct FString& Msg, int MapNum, int InviteUserChannelNum, const struct FString& LeaderName, const struct FString& RoomName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_RecvInviteCrew");

	UBTTcpLink_Channel_sfReqClanMatch_RecvInviteCrew_Params params;
	params.Inviter = Inviter;
	params.ServerIP = ServerIP;
	params.Port = Port;
	params.WaittingID = WaittingID;
	params.Msg = Msg;
	params.MapNum = MapNum;
	params.InviteUserChannelNum = InviteUserChannelNum;
	params.LeaderName = LeaderName;
	params.RoomName = RoomName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_InviteCrew
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_InviteCrew(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_InviteCrew");

	UBTTcpLink_Channel_sfAckClanMatch_InviteCrew_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_InviteCrew
// (Native, Public)
// Parameters:
// struct FString                 Invitee                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_InviteCrew(const struct FString& Invitee)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_InviteCrew");

	UBTTcpLink_Channel_sfReqClanMatch_InviteCrew_Params params;
	params.Invitee = Invitee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_NotifiyStartCombat
// (Native, Public)
// Parameters:
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_NotifiyStartCombat(TArray<int> MapNumArray, int VersusMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_NotifiyStartCombat");

	UBTTcpLink_Channel_sfAckClanMatch_NotifiyStartCombat_Params params;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_StartCombat
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_StartCombat(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_StartCombat");

	UBTTcpLink_Channel_sfAckClanMatch_StartCombat_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_StartCombat
// (Native, Public)
// Parameters:
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_StartCombat(TArray<int> MapNumArray, int VersusMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_StartCombat");

	UBTTcpLink_Channel_sfReqClanMatch_StartCombat_Params params;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_GetReady
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            RoomIndex                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanMatch_GetReady(int Result, const struct FString& ErrMsg, int RoomIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanMatch_GetReady");

	UBTTcpLink_Channel_sfAckClanMatch_GetReady_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.RoomIndex = RoomIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_GetReady
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanMatch_GetReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanMatch_GetReady");

	UBTTcpLink_Channel_sfReqClanMatch_GetReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAutoChangedTeamUserList
// (Native, Public)
// Parameters:
// TArray<int>                    UserID                         (Parm, NeedCtorLink)
// TArray<int>                    TeamNum                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAutoChangedTeamUserList(TArray<int> UserID, TArray<int> TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAutoChangedTeamUserList");

	UBTTcpLink_Channel_sfAckAutoChangedTeamUserList_Params params;
	params.UserID = UserID;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetItemFromItemBox
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ItemIDChoose                   (Parm)
// int                            PartIDChoose                   (Parm)
// struct FBtrDouble              BoxItemIdx                     (Parm)
// int                            BxoItemCount                   (Parm)
// unsigned char                  bHave                          (Parm)
// struct FBtrDouble              ItemIdx                        (Parm)
// struct FBtrDouble              UntilTime                      (Parm)
// int                            StackCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetItemFromItemBox(int Result, const struct FString& ErrMsg, int ItemIDChoose, int PartIDChoose, const struct FBtrDouble& BoxItemIdx, int BxoItemCount, unsigned char bHave, const struct FBtrDouble& ItemIdx, const struct FBtrDouble& UntilTime, int StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetItemFromItemBox");

	UBTTcpLink_Channel_sfAckGetItemFromItemBox_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;
	params.BoxItemIdx = BoxItemIdx;
	params.BxoItemCount = BxoItemCount;
	params.bHave = bHave;
	params.ItemIdx = ItemIdx;
	params.UntilTime = UntilTime;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetItemFromItemBox
// (Native, Public)
// Parameters:
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            ItemID                         (Parm)
// int                            ItemIDChoose                   (Parm)
// int                            PartIDChoose                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetItemFromItemBox(const struct FBtrDouble& ItemUniqueID, int ItemID, int ItemIDChoose, int PartIDChoose)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetItemFromItemBox");

	UBTTcpLink_Channel_sfReqGetItemFromItemBox_Params params;
	params.ItemUniqueID = ItemUniqueID;
	params.ItemID = ItemID;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckItemListInItemBox
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            BoxItemID                      (Parm)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<int>                    PartID                         (Parm, NeedCtorLink)
// unsigned char                  FromContent                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckItemListInItemBox(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemUniqueID, int BoxItemID, TArray<int> ItemID, TArray<int> PartID, unsigned char FromContent)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckItemListInItemBox");

	UBTTcpLink_Channel_sfAckItemListInItemBox_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemUniqueID = ItemUniqueID;
	params.BoxItemID = BoxItemID;
	params.ItemID = ItemID;
	params.PartID = PartID;
	params.FromContent = FromContent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqItemListInItemBox
// (Native, Public)
// Parameters:
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            BoxItemID                      (Parm)
// unsigned char                  FromContent                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqItemListInItemBox(const struct FBtrDouble& ItemUniqueID, int BoxItemID, unsigned char FromContent)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqItemListInItemBox");

	UBTTcpLink_Channel_sfReqItemListInItemBox_Params params;
	params.ItemUniqueID = ItemUniqueID;
	params.BoxItemID = BoxItemID;
	params.FromContent = FromContent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvForceFailedClientLoading
// (Native, Public)
// Parameters:
// int                            ErrCode                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvForceFailedClientLoading(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvForceFailedClientLoading");

	UBTTcpLink_Channel_sfReqRecvForceFailedClientLoading_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckForceFailedClientLoading
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckForceFailedClientLoading(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckForceFailedClientLoading");

	UBTTcpLink_Channel_sfAckForceFailedClientLoading_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqForceFailedClientLoading
// (Native, Public)
// Parameters:
// int                            FailedUserID                   (Parm)
// int                            ErrCode                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqForceFailedClientLoading(int FailedUserID, int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqForceFailedClientLoading");

	UBTTcpLink_Channel_sfReqForceFailedClientLoading_Params params;
	params.FailedUserID = FailedUserID;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckStartHolePunching
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            GameType                       (Parm)
// int                            ReqStartUserID                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckStartHolePunching(int Result, const struct FString& ErrMsg, int GameType, int ReqStartUserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckStartHolePunching");

	UBTTcpLink_Channel_sfAckStartHolePunching_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.GameType = GameType;
	params.ReqStartUserID = ReqStartUserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqStartHolePunching
// (Native, Public)
// Parameters:
// int                            GameType                       (Parm)
// int                            ReqStartUserID                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqStartHolePunching(int GameType, int ReqStartUserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqStartHolePunching");

	UBTTcpLink_Channel_sfReqStartHolePunching_Params params;
	params.GameType = GameType;
	params.ReqStartUserID = ReqStartUserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyMyCharInfoToRoomUser
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UID                            (Parm)
// struct FString                 UserName                       (Parm, NeedCtorLink)
// int                            Grade                          (Parm)
// int                            TeamNum                        (Parm)
// unsigned char                  Statue                         (Parm)
// unsigned char                  IsHost                         (Parm)
// struct FString                 UserIP                         (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            CM_Pattern                     (Parm)
// int                            CM_BG                          (Parm)
// int                            CM_BL                          (Parm)
// unsigned char                  IsLookFor                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyMyCharInfoToRoomUser(int Result, const struct FString& ErrMsg, int UID, const struct FString& UserName, int Grade, int TeamNum, unsigned char Statue, unsigned char IsHost, const struct FString& UserIP, const struct FString& ClanName, int CM_Pattern, int CM_BG, int CM_BL, unsigned char IsLookFor)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyMyCharInfoToRoomUser");

	UBTTcpLink_Channel_sfAckNotifyMyCharInfoToRoomUser_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UID = UID;
	params.UserName = UserName;
	params.Grade = Grade;
	params.TeamNum = TeamNum;
	params.Statue = Statue;
	params.IsHost = IsHost;
	params.UserIP = UserIP;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.IsLookFor = IsLookFor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyMyCharInfoToRoomUser
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyMyCharInfoToRoomUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyMyCharInfoToRoomUser");

	UBTTcpLink_Channel_sfReqNotifyMyCharInfoToRoomUser_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyDurabilityZeroItem
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// TArray<struct FBtrDouble>      ItemUniqueIDs                  (Parm, NeedCtorLink)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    ItemPartIDs                    (Parm, NeedCtorLink)
// TArray<unsigned char>          ItemSlotPos                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyDurabilityZeroItem(int Result, const struct FString& ErrMsg, int UserID, TArray<struct FBtrDouble> ItemUniqueIDs, TArray<int> ItemIDs, TArray<int> ItemPartIDs, TArray<unsigned char> ItemSlotPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyDurabilityZeroItem");

	UBTTcpLink_Channel_sfReqNotifyDurabilityZeroItem_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.ItemUniqueIDs = ItemUniqueIDs;
	params.ItemIDs = ItemIDs;
	params.ItemPartIDs = ItemPartIDs;
	params.ItemSlotPos = ItemSlotPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChatWispherMyCommunity
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChatWispherMyCommunity(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChatWispherMyCommunity");

	UBTTcpLink_Channel_sfAckChatWispherMyCommunity_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChatWispherMyCommunity
// (Native, Public)
// Parameters:
// struct FString                 SourceCharName                 (Parm, NeedCtorLink)
// struct FString                 SenderName                     (Parm, NeedCtorLink)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChatWispherMyCommunity(const struct FString& SourceCharName, const struct FString& SenderName, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChatWispherMyCommunity");

	UBTTcpLink_Channel_sfReqChatWispherMyCommunity_Params params;
	params.SourceCharName = SourceCharName;
	params.SenderName = SenderName;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyDisconnectHostInLoading
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            HostID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyDisconnectHostInLoading(int Result, const struct FString& ErrMsg, int HostID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyDisconnectHostInLoading");

	UBTTcpLink_Channel_sfReqNotifyDisconnectHostInLoading_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.HostID = HostID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvForceDisconnected_FromGM
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvForceDisconnected_FromGM(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvForceDisconnected_FromGM");

	UBTTcpLink_Channel_sfReqRecvForceDisconnected_FromGM_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckForceDisconnectUser_GM
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckForceDisconnectUser_GM(int Result, const struct FString& ErrMsg, const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckForceDisconnectUser_GM");

	UBTTcpLink_Channel_sfAckForceDisconnectUser_GM_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqForceDisconnectUser_GM
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqForceDisconnectUser_GM(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqForceDisconnectUser_GM");

	UBTTcpLink_Channel_sfReqForceDisconnectUser_GM_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvNotice_FromGM
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FString>         NoticeMsg                      (Parm, NeedCtorLink)
// unsigned char                  IsFromDB                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvNotice_FromGM(int Result, const struct FString& ErrMsg, TArray<struct FString> NoticeMsg, unsigned char IsFromDB)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvNotice_FromGM");

	UBTTcpLink_Channel_sfReqRecvNotice_FromGM_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.NoticeMsg = NoticeMsg;
	params.IsFromDB = IsFromDB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotice_GM
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  NoticeType                     (Parm)
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            GameRoomNum                    (Parm)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotice_GM(int Result, const struct FString& ErrMsg, unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotice_GM");

	UBTTcpLink_Channel_sfAckNotice_GM_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.NoticeType = NoticeType;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.GameRoomNum = GameRoomNum;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotice_GM
// (Native, Public)
// Parameters:
// unsigned char                  NoticeType                     (Parm)
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            GameRoomNum                    (Parm)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotice_GM(unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotice_GM");

	UBTTcpLink_Channel_sfReqNotice_GM_Params params;
	params.NoticeType = NoticeType;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.GameRoomNum = GameRoomNum;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSpecificChannelUserInfo
// (Native, Public)
// Parameters:
// int                            UID                            (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            UserLevels                     (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            ClanPattern                    (Parm)
// int                            ClanBG                         (Parm)
// int                            ClanBL                         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSpecificChannelUserInfo(int UID, const struct FString& UserID, int UserLevels, const struct FString& ClanName, int ClanPattern, int ClanBG, int ClanBL, int Result, const struct FString& ErrMsg, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSpecificChannelUserInfo");

	UBTTcpLink_Channel_sfAckSpecificChannelUserInfo_Params params;
	params.UID = UID;
	params.UserID = UserID;
	params.UserLevels = UserLevels;
	params.ClanName = ClanName;
	params.ClanPattern = ClanPattern;
	params.ClanBG = ClanBG;
	params.ClanBL = ClanBL;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSpecificChannelUserInfo
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSpecificChannelUserInfo(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSpecificChannelUserInfo");

	UBTTcpLink_Channel_sfReqSpecificChannelUserInfo_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSpecificGameRoomInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            GameNum                        (Parm)
// struct FString                 Title                          (Parm, NeedCtorLink)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// int                            MapNum                         (Parm)
// unsigned char                  UserCount                      (Parm)
// unsigned char                  MaxCount                       (Parm)
// struct FString                 GameModeName                   (Parm, NeedCtorLink)
// int                            ModeNum                        (Parm)
// unsigned char                  WeaponLimit                    (Parm)
// unsigned char                  IsHardCore                     (Parm)
// unsigned char                  Status                         (Parm)
// struct FString                 RoomOwnerIP                    (Parm, NeedCtorLink)
// int                            GameMinute                     (Parm)
// struct FString                 RoomOwnerName                  (Parm, NeedCtorLink)
// unsigned char                  IsSpecial                      (Parm)
// unsigned char                  IsPassword                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSpecificGameRoomInfo(int Result, int GameNum, const struct FString& Title, const struct FString& MapName, int MapNum, unsigned char UserCount, unsigned char MaxCount, const struct FString& GameModeName, int ModeNum, unsigned char WeaponLimit, unsigned char IsHardCore, unsigned char Status, const struct FString& RoomOwnerIP, int GameMinute, const struct FString& RoomOwnerName, unsigned char IsSpecial, unsigned char IsPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSpecificGameRoomInfo");

	UBTTcpLink_Channel_sfAckSpecificGameRoomInfo_Params params;
	params.Result = Result;
	params.GameNum = GameNum;
	params.Title = Title;
	params.MapName = MapName;
	params.MapNum = MapNum;
	params.UserCount = UserCount;
	params.MaxCount = MaxCount;
	params.GameModeName = GameModeName;
	params.ModeNum = ModeNum;
	params.WeaponLimit = WeaponLimit;
	params.IsHardCore = IsHardCore;
	params.Status = Status;
	params.RoomOwnerIP = RoomOwnerIP;
	params.GameMinute = GameMinute;
	params.RoomOwnerName = RoomOwnerName;
	params.IsSpecial = IsSpecial;
	params.IsPassword = IsPassword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSpecificGameRoomInfo
// (Native, Public)
// Parameters:
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSpecificGameRoomInfo(int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSpecificGameRoomInfo");

	UBTTcpLink_Channel_sfReqSpecificGameRoomInfo_Params params;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChannelUserListInGameRoom
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// int                            Count                          (Parm)
// int                            StartIndex                     (Parm)
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<int>                    UserLevel                      (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanPattern                    (Parm, NeedCtorLink)
// TArray<int>                    ClanBG                         (Parm, NeedCtorLink)
// TArray<int>                    ClanBL                         (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookForClan                  (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChannelUserListInGameRoom(int Result, int TotalCount, int Count, int StartIndex, TArray<int> UID, TArray<struct FString> CharName, TArray<int> UserLevel, TArray<struct FString> ClanName, TArray<int> ClanPattern, TArray<int> ClanBG, TArray<int> ClanBL, TArray<unsigned char> IsLookForClan, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChannelUserListInGameRoom");

	UBTTcpLink_Channel_sfAckChannelUserListInGameRoom_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;
	params.Count = Count;
	params.StartIndex = StartIndex;
	params.UID = UID;
	params.CharName = CharName;
	params.UserLevel = UserLevel;
	params.ClanName = ClanName;
	params.ClanPattern = ClanPattern;
	params.ClanBG = ClanBG;
	params.ClanBL = ClanBL;
	params.IsLookForClan = IsLookForClan;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChannelUserListInGameRoom
// (Native, Public)
// Parameters:
// int                            ChannelNum                     (Parm)
// int                            StartIndex                     (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChannelUserListInGameRoom(int ChannelNum, int StartIndex, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChannelUserListInGameRoom");

	UBTTcpLink_Channel_sfReqChannelUserListInGameRoom_Params params;
	params.ChannelNum = ChannelNum;
	params.StartIndex = StartIndex;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvDeleteFriend
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 FromCharName                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvDeleteFriend(int Result, const struct FString& FromCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvDeleteFriend");

	UBTTcpLink_Channel_sfReqRecvDeleteFriend_Params params;
	params.Result = Result;
	params.FromCharName = FromCharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckDeleteFriend
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// TArray<struct FString>         FailedCharname                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckDeleteFriend(int Result, TArray<struct FString> FailedCharname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckDeleteFriend");

	UBTTcpLink_Channel_sfAckDeleteFriend_Params params;
	params.Result = Result;
	params.FailedCharname = FailedCharname;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDeleteFriend
// (Native, Public)
// Parameters:
// TArray<struct FString>         DeleteCharName                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDeleteFriend(TArray<struct FString> DeleteCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDeleteFriend");

	UBTTcpLink_Channel_sfReqDeleteFriend_Params params;
	params.DeleteCharName = DeleteCharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGameGuardAuthData
// (Native, Public)
// Parameters:
// int                            AuthDataIndex                  (Parm)
// int                            AuthDataVal1                   (Parm)
// int                            AuthDataVal2                   (Parm)
// int                            AuthDataVal3                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGameGuardAuthData(int AuthDataIndex, int AuthDataVal1, int AuthDataVal2, int AuthDataVal3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGameGuardAuthData");

	UBTTcpLink_Channel_sfAckGameGuardAuthData_Params params;
	params.AuthDataIndex = AuthDataIndex;
	params.AuthDataVal1 = AuthDataVal1;
	params.AuthDataVal2 = AuthDataVal2;
	params.AuthDataVal3 = AuthDataVal3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGameGuardAuthData
// (Native, Public)
// Parameters:
// int                            AuthDataIndex                  (Parm)
// int                            AuthDataVal1                   (Parm)
// int                            AuthDataVal2                   (Parm)
// int                            AuthDataVal3                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGameGuardAuthData(int AuthDataIndex, int AuthDataVal1, int AuthDataVal2, int AuthDataVal3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGameGuardAuthData");

	UBTTcpLink_Channel_sfReqGameGuardAuthData_Params params;
	params.AuthDataIndex = AuthDataIndex;
	params.AuthDataVal1 = AuthDataVal1;
	params.AuthDataVal2 = AuthDataVal2;
	params.AuthDataVal3 = AuthDataVal3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckCheckEquipedWeaponDurability
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// TArray<struct FBtrDouble>      ItemUniqueID                   (Parm, NeedCtorLink)
// TArray<int>                    ItemSlotNum                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckCheckEquipedWeaponDurability(int Result, TArray<struct FBtrDouble> ItemUniqueID, TArray<int> ItemSlotNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckCheckEquipedWeaponDurability");

	UBTTcpLink_Channel_sfAckCheckEquipedWeaponDurability_Params params;
	params.Result = Result;
	params.ItemUniqueID = ItemUniqueID;
	params.ItemSlotNum = ItemSlotNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqCheckEquipedWeaponDurability
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqCheckEquipedWeaponDurability()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqCheckEquipedWeaponDurability");

	UBTTcpLink_Channel_sfReqCheckEquipedWeaponDurability_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_GetChopper
// (Native, Public)
// Parameters:
// int                            GetChopperUID                  (Parm)
// TArray<int>                    GetChopperAssistUID            (Parm, NeedCtorLink)
// float                          KillXCoord                     (Parm)
// float                          KillYCoord                     (Parm)
// float                          KillZCoord                     (Parm)
// int                            KillPos                        (Parm)
// int                            KillWeaponID                   (Parm)
// int                            KillWeaponPartID               (Parm)
// int                            KillRange                      (Parm)
// int                            KillDamage                     (Parm)
// int                            ChopperCallerID                (Parm)
// struct FString                 ChopperCallerName              (Parm, NeedCtorLink)
// float                          ChopperXCoord                  (Parm)
// float                          ChopperYCoord                  (Parm)
// float                          ChopperZCoord                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGamePlay_GetChopper(int GetChopperUID, TArray<int> GetChopperAssistUID, float KillXCoord, float KillYCoord, float KillZCoord, int KillPos, int KillWeaponID, int KillWeaponPartID, int KillRange, int KillDamage, int ChopperCallerID, const struct FString& ChopperCallerName, float ChopperXCoord, float ChopperYCoord, float ChopperZCoord)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_GetChopper");

	UBTTcpLink_Channel_sfReqGamePlay_GetChopper_Params params;
	params.GetChopperUID = GetChopperUID;
	params.GetChopperAssistUID = GetChopperAssistUID;
	params.KillXCoord = KillXCoord;
	params.KillYCoord = KillYCoord;
	params.KillZCoord = KillZCoord;
	params.KillPos = KillPos;
	params.KillWeaponID = KillWeaponID;
	params.KillWeaponPartID = KillWeaponPartID;
	params.KillRange = KillRange;
	params.KillDamage = KillDamage;
	params.ChopperCallerID = ChopperCallerID;
	params.ChopperCallerName = ChopperCallerName;
	params.ChopperXCoord = ChopperXCoord;
	params.ChopperYCoord = ChopperYCoord;
	params.ChopperZCoord = ChopperZCoord;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAcquirePromotionItems
// (Native, Public)
// Parameters:
// int                            UID                            (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      ItemUniqueID                   (Parm, NeedCtorLink)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    PartIDs                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAcquirePromotionItems(int UID, int Result, const struct FString& ErrMsg, TArray<struct FBtrDouble> ItemUniqueID, TArray<int> ItemIDs, TArray<int> PartIDs)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAcquirePromotionItems");

	UBTTcpLink_Channel_sfAckAcquirePromotionItems_Params params;
	params.UID = UID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemUniqueID = ItemUniqueID;
	params.ItemIDs = ItemIDs;
	params.PartIDs = PartIDs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckIsAvailClanURL
// (Native, Public)
// Parameters:
// struct FString                 ClanURL                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckIsAvailClanURL(const struct FString& ClanURL, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckIsAvailClanURL");

	UBTTcpLink_Channel_sfAckIsAvailClanURL_Params params;
	params.ClanURL = ClanURL;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqIsAvailClanURL
// (Native, Public)
// Parameters:
// struct FString                 ClanURL                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqIsAvailClanURL(const struct FString& ClanURL)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqIsAvailClanURL");

	UBTTcpLink_Channel_sfReqIsAvailClanURL_Params params;
	params.ClanURL = ClanURL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetIsHostBlocking
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Blocking                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetIsHostBlocking(int Result, unsigned char Blocking)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetIsHostBlocking");

	UBTTcpLink_Channel_sfAckGetIsHostBlocking_Params params;
	params.Result = Result;
	params.Blocking = Blocking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetIsHostBlocking
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetIsHostBlocking()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetIsHostBlocking");

	UBTTcpLink_Channel_sfReqGetIsHostBlocking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyHostBlocking
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Blocking                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyHostBlocking(int Result, unsigned char Blocking)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyHostBlocking");

	UBTTcpLink_Channel_sfAckNotifyHostBlocking_Params params;
	params.Result = Result;
	params.Blocking = Blocking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyHostBlocking
// (Native, Public)
// Parameters:
// unsigned char                  Blocking                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyHostBlocking(unsigned char Blocking)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyHostBlocking");

	UBTTcpLink_Channel_sfReqNotifyHostBlocking_Params params;
	params.Blocking = Blocking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetHolePunchingResult
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Phrase                         (Parm)
// int                            InterventionUserID             (Parm)
// unsigned char                  Intervention                   (Parm)
// TArray<int>                    FailedUserIDs                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetHolePunchingResult(int Result, unsigned char Phrase, int InterventionUserID, unsigned char Intervention, TArray<int> FailedUserIDs)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetHolePunchingResult");

	UBTTcpLink_Channel_sfAckGetHolePunchingResult_Params params;
	params.Result = Result;
	params.Phrase = Phrase;
	params.InterventionUserID = InterventionUserID;
	params.Intervention = Intervention;
	params.FailedUserIDs = FailedUserIDs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetHolePunchingResult
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetHolePunchingResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetHolePunchingResult");

	UBTTcpLink_Channel_sfReqGetHolePunchingResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyRecvDummyForHolePunching
// (Native, Public)
// Parameters:
// int                            ClientUserID                   (Parm)
// unsigned char                  Phrase                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyRecvDummyForHolePunching(int ClientUserID, unsigned char Phrase)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyRecvDummyForHolePunching");

	UBTTcpLink_Channel_sfReqNotifyRecvDummyForHolePunching_Params params;
	params.ClientUserID = ClientUserID;
	params.Phrase = Phrase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_ChangeWeaponSet
// (Native, Public)
// Parameters:
// int                            UID                            (Parm)
// int                            SetNumber                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGamePlay_ChangeWeaponSet(int UID, int SetNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_ChangeWeaponSet");

	UBTTcpLink_Channel_sfReqGamePlay_ChangeWeaponSet_Params params;
	params.UID = UID;
	params.SetNumber = SetNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_UpdateDomScore
// (Native, Public)
// Parameters:
// int                            AFScore                        (Parm)
// int                            RSAScore                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGamePlay_UpdateDomScore(int AFScore, int RSAScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_UpdateDomScore");

	UBTTcpLink_Channel_sfReqGamePlay_UpdateDomScore_Params params;
	params.AFScore = AFScore;
	params.RSAScore = RSAScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyRelayServerAddr
// (Native, Public)
// Parameters:
// struct FString                 RelayIP                        (Parm, NeedCtorLink)
// int                            RelayPort                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyRelayServerAddr(const struct FString& RelayIP, int RelayPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyRelayServerAddr");

	UBTTcpLink_Channel_sfReqNotifyRelayServerAddr_Params params;
	params.RelayIP = RelayIP;
	params.RelayPort = RelayPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetUserHostPriorityPoint
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            UserID                         (Parm)
// int                            HostPriorityPoint              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetUserHostPriorityPoint(int Result, int UserID, int HostPriorityPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetUserHostPriorityPoint");

	UBTTcpLink_Channel_sfAckGetUserHostPriorityPoint_Params params;
	params.Result = Result;
	params.UserID = UserID;
	params.HostPriorityPoint = HostPriorityPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetUserHostPriorityPoint
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetUserHostPriorityPoint(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetUserHostPriorityPoint");

	UBTTcpLink_Channel_sfReqGetUserHostPriorityPoint_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqUpdateMyHostPriorityPoint
// (Native, Public)
// Parameters:
// int                            HostPriorityPoint              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqUpdateMyHostPriorityPoint(int HostPriorityPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqUpdateMyHostPriorityPoint");

	UBTTcpLink_Channel_sfReqUpdateMyHostPriorityPoint_Params params;
	params.HostPriorityPoint = HostPriorityPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqWriteServerLog
// (Native, Public)
// Parameters:
// unsigned char                  Destination                    (Parm)
// struct FString                 LogMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqWriteServerLog(unsigned char Destination, const struct FString& LogMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqWriteServerLog");

	UBTTcpLink_Channel_sfReqWriteServerLog_Params params;
	params.Destination = Destination;
	params.LogMsg = LogMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_SetRoundStartTime
// (Native, Public)
// Parameters:
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGamePlay_SetRoundStartTime(TArray<int> UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_SetRoundStartTime");

	UBTTcpLink_Channel_sfReqGamePlay_SetRoundStartTime_Params params;
	params.UID = UID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_SetGameStartTime
// (Native, Public)
// Parameters:
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGamePlay_SetGameStartTime(TArray<int> UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_SetGameStartTime");

	UBTTcpLink_Channel_sfReqGamePlay_SetGameStartTime_Params params;
	params.UID = UID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvForceDisconnectUDPFromHost
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvForceDisconnectUDPFromHost(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvForceDisconnectUDPFromHost");

	UBTTcpLink_Channel_sfReqRecvForceDisconnectUDPFromHost_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckForceDisconnectUDPFromHost
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckForceDisconnectUDPFromHost(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckForceDisconnectUDPFromHost");

	UBTTcpLink_Channel_sfAckForceDisconnectUDPFromHost_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqForceDisconnectUDPFromHost
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqForceDisconnectUDPFromHost(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqForceDisconnectUDPFromHost");

	UBTTcpLink_Channel_sfReqForceDisconnectUDPFromHost_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_TakeAPoint
// (Native, Public)
// Parameters:
// TArray<int>                    TakerUID                       (Parm, NeedCtorLink)
// unsigned char                  TakePos                        (Parm)
// TArray<float>                  TakerXCoord                    (Parm, NeedCtorLink)
// TArray<float>                  TakerYCoord                    (Parm, NeedCtorLink)
// TArray<float>                  TakerZCoord                    (Parm, NeedCtorLink)
// TArray<int>                    TakerPos                       (Parm, NeedCtorLink)
// TArray<int>                    TakerWeaponID                  (Parm, NeedCtorLink)
// TArray<int>                    TakerWeaponPartID              (Parm, NeedCtorLink)
// TArray<int>                    TakerRange                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGamePlay_TakeAPoint(TArray<int> TakerUID, unsigned char TakePos, TArray<float> TakerXCoord, TArray<float> TakerYCoord, TArray<float> TakerZCoord, TArray<int> TakerPos, TArray<int> TakerWeaponID, TArray<int> TakerWeaponPartID, TArray<int> TakerRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_TakeAPoint");

	UBTTcpLink_Channel_sfReqGamePlay_TakeAPoint_Params params;
	params.TakerUID = TakerUID;
	params.TakePos = TakePos;
	params.TakerXCoord = TakerXCoord;
	params.TakerYCoord = TakerYCoord;
	params.TakerZCoord = TakerZCoord;
	params.TakerPos = TakerPos;
	params.TakerWeaponID = TakerWeaponID;
	params.TakerWeaponPartID = TakerWeaponPartID;
	params.TakerRange = TakerRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyChangeRoomState
// (Native, Public)
// Parameters:
// unsigned char                  RoomState                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyChangeRoomState(unsigned char RoomState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyChangeRoomState");

	UBTTcpLink_Channel_sfReqNotifyChangeRoomState_Params params;
	params.RoomState = RoomState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_DefuseBomb
// (Native, Public)
// Parameters:
// int                            DefuserUID                     (Parm)
// unsigned char                  DefusePos                      (Parm)
// float                          DefuserXCoord                  (Parm)
// float                          DefuserYCoord                  (Parm)
// float                          DefuserZCoord                  (Parm)
// int                            DefuserPos                     (Parm)
// int                            DefuserWeaponID                (Parm)
// int                            DefuserWeaponPartID            (Parm)
// int                            DefuserRange                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGamePlay_DefuseBomb(int DefuserUID, unsigned char DefusePos, float DefuserXCoord, float DefuserYCoord, float DefuserZCoord, int DefuserPos, int DefuserWeaponID, int DefuserWeaponPartID, int DefuserRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_DefuseBomb");

	UBTTcpLink_Channel_sfReqGamePlay_DefuseBomb_Params params;
	params.DefuserUID = DefuserUID;
	params.DefusePos = DefusePos;
	params.DefuserXCoord = DefuserXCoord;
	params.DefuserYCoord = DefuserYCoord;
	params.DefuserZCoord = DefuserZCoord;
	params.DefuserPos = DefuserPos;
	params.DefuserWeaponID = DefuserWeaponID;
	params.DefuserWeaponPartID = DefuserWeaponPartID;
	params.DefuserRange = DefuserRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_InstallBomb
// (Native, Public)
// Parameters:
// int                            InstallerUID                   (Parm)
// unsigned char                  InstallPos                     (Parm)
// float                          InstallerXCoord                (Parm)
// float                          InstallerYCoord                (Parm)
// float                          InstallerZCoord                (Parm)
// int                            InstallerPos                   (Parm)
// int                            InstallerWeaponID              (Parm)
// int                            InstallerWeaponPartID          (Parm)
// int                            InstallerRange                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGamePlay_InstallBomb(int InstallerUID, unsigned char InstallPos, float InstallerXCoord, float InstallerYCoord, float InstallerZCoord, int InstallerPos, int InstallerWeaponID, int InstallerWeaponPartID, int InstallerRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGamePlay_InstallBomb");

	UBTTcpLink_Channel_sfReqGamePlay_InstallBomb_Params params;
	params.InstallerUID = InstallerUID;
	params.InstallPos = InstallPos;
	params.InstallerXCoord = InstallerXCoord;
	params.InstallerYCoord = InstallerYCoord;
	params.InstallerZCoord = InstallerZCoord;
	params.InstallerPos = InstallerPos;
	params.InstallerWeaponID = InstallerWeaponID;
	params.InstallerWeaponPartID = InstallerWeaponPartID;
	params.InstallerRange = InstallerRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckDBCharInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            CM_Pattern                     (Parm)
// int                            CM_BG                          (Parm)
// int                            CM_BL                          (Parm)
// struct FString                 ClanPersonIntro                (Parm, NeedCtorLink)
// int                            MainWeaponItemID               (Parm)
// int                            MainWeaponPartID               (Parm)
// int                            SubWeaponItemID                (Parm)
// int                            SubWeaponPartID                (Parm)
// int                            AFSpecialCostumeItemID         (Parm)
// int                            RSASpecialCostumeItemID        (Parm)
// struct FCharInfo               stCharInfo                     (Parm)
// int                            ClanLevel                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckDBCharInfo(int Result, const struct FString& ErrMsg, const struct FString& CharName, const struct FString& ClanName, int CM_Pattern, int CM_BG, int CM_BL, const struct FString& ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, const struct FCharInfo& stCharInfo, int ClanLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckDBCharInfo");

	UBTTcpLink_Channel_sfAckDBCharInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.CharName = CharName;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.ClanPersonIntro = ClanPersonIntro;
	params.MainWeaponItemID = MainWeaponItemID;
	params.MainWeaponPartID = MainWeaponPartID;
	params.SubWeaponItemID = SubWeaponItemID;
	params.SubWeaponPartID = SubWeaponPartID;
	params.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	params.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	params.stCharInfo = stCharInfo;
	params.ClanLevel = ClanLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDBCharInfo
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDBCharInfo(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDBCharInfo");

	UBTTcpLink_Channel_sfReqDBCharInfo_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqForceNatTypeSetting
// (Native, Public)
// Parameters:
// int                            NatType                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqForceNatTypeSetting(int NatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqForceNatTypeSetting");

	UBTTcpLink_Channel_sfReqForceNatTypeSetting_Params params;
	params.NatType = NatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetServerTime
// (Native, Public)
// Parameters:
// struct FBtrDouble              ServerTime                     (Parm)
// struct FString                 ClientIP                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetServerTime(const struct FBtrDouble& ServerTime, const struct FString& ClientIP)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetServerTime");

	UBTTcpLink_Channel_sfAckGetServerTime_Params params;
	params.ServerTime = ServerTime;
	params.ClientIP = ClientIP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetServerTime
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetServerTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetServerTime");

	UBTTcpLink_Channel_sfReqGetServerTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLogEndEachRound
// (Native, Public)
// Parameters:
// int                            StartCnt                       (Parm)
// int                            EndCnt                         (Parm)
// int                            RoundEndType                   (Parm)
// int                            RoundEndTime                   (Parm)
// unsigned char                  VTeam                          (Parm)
// unsigned char                  VTeamAD                        (Parm)
// int                            AFScore                        (Parm)
// int                            RSAScore                       (Parm)
// int                            Round                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLogEndEachRound(int StartCnt, int EndCnt, int RoundEndType, int RoundEndTime, unsigned char VTeam, unsigned char VTeamAD, int AFScore, int RSAScore, int Round)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLogEndEachRound");

	UBTTcpLink_Channel_sfReqLogEndEachRound_Params params;
	params.StartCnt = StartCnt;
	params.EndCnt = EndCnt;
	params.RoundEndType = RoundEndType;
	params.RoundEndTime = RoundEndTime;
	params.VTeam = VTeam;
	params.VTeamAD = VTeamAD;
	params.AFScore = AFScore;
	params.RSAScore = RSAScore;
	params.Round = Round;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLogGetScore
// (Native, Public)
// Parameters:
// struct FKillDeathLog           KillDeathLogParam              (Parm)
// TArray<int>                    AssistUIDs                     (Parm, NeedCtorLink)
// TArray<unsigned char>          AssistScores                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLogGetScore(const struct FKillDeathLog& KillDeathLogParam, TArray<int> AssistUIDs, TArray<unsigned char> AssistScores)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLogGetScore");

	UBTTcpLink_Channel_sfReqLogGetScore_Params params;
	params.KillDeathLogParam = KillDeathLogParam;
	params.AssistUIDs = AssistUIDs;
	params.AssistScores = AssistScores;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAuctionTradeHistory
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// int                            PartID                         (Parm)
// TArray<struct FString>         SellerCharNm                   (Parm, NeedCtorLink)
// TArray<int>                    DamageDegree                   (Parm, NeedCtorLink)
// TArray<int>                    Price                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAuctionTradeHistory(int Result, const struct FString& ErrMsg, int ItemID, int PartID, TArray<struct FString> SellerCharNm, TArray<int> DamageDegree, TArray<int> Price)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAuctionTradeHistory");

	UBTTcpLink_Channel_sfAckAuctionTradeHistory_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemID = ItemID;
	params.PartID = PartID;
	params.SellerCharNm = SellerCharNm;
	params.DamageDegree = DamageDegree;
	params.Price = Price;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAuctionTradeHistory
// (Native, Public)
// Parameters:
// int                            ItemID                         (Parm)
// int                            PartID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAuctionTradeHistory(int ItemID, int PartID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAuctionTradeHistory");

	UBTTcpLink_Channel_sfReqAuctionTradeHistory_Params params;
	params.ItemID = ItemID;
	params.PartID = PartID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSendGift
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// int                            CashRemain                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSendGift(int Result, const struct FString& ErrMsg, int PointRemain, int CashRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSendGift");

	UBTTcpLink_Channel_sfAckSendGift_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PointRemain = PointRemain;
	params.CashRemain = CashRemain;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSendGift
// (Native, Public)
// Parameters:
// int                            ItemID                         (Parm)
// struct FString                 RecvCharname                   (Parm, NeedCtorLink)
// struct FString                 RecvMessage                    (Parm, NeedCtorLink)
// unsigned char                  BuyOption1                     (Parm)
// unsigned char                  BuyOption2                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSendGift(int ItemID, const struct FString& RecvCharname, const struct FString& RecvMessage, unsigned char BuyOption1, unsigned char BuyOption2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSendGift");

	UBTTcpLink_Channel_sfReqSendGift_Params params;
	params.ItemID = ItemID;
	params.RecvCharname = RecvCharname;
	params.RecvMessage = RecvMessage;
	params.BuyOption1 = BuyOption1;
	params.BuyOption2 = BuyOption2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetAttachedItemFromMemo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            ItemID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetAttachedItemFromMemo(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetAttachedItemFromMemo");

	UBTTcpLink_Channel_sfAckGetAttachedItemFromMemo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetAttachedItemFromMemo
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            MemoIdx                        (Parm)
// int                            ItemID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetAttachedItemFromMemo(int UserID, int MemoIdx, int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetAttachedItemFromMemo");

	UBTTcpLink_Channel_sfReqGetAttachedItemFromMemo_Params params;
	params.UserID = UserID;
	params.MemoIdx = MemoIdx;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyNewClanMember
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyNewClanMember(const struct FString& ClanName, const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyNewClanMember");

	UBTTcpLink_Channel_sfAckNotifyNewClanMember_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChatClan
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChatClan(const struct FString& CharName, const struct FString& Message, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChatClan");

	UBTTcpLink_Channel_sfAckChatClan_Params params;
	params.CharName = CharName;
	params.Message = Message;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChatClan
// (Native, Public)
// Parameters:
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChatClan(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChatClan");

	UBTTcpLink_Channel_sfReqChatClan_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckTestDouble
// (Native, Public)
// Parameters:
// struct FBtrDouble              vDouble                        (Parm)
// TArray<struct FBtrDouble>      vDoubles                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckTestDouble(const struct FBtrDouble& vDouble, TArray<struct FBtrDouble> vDoubles)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckTestDouble");

	UBTTcpLink_Channel_sfAckTestDouble_Params params;
	params.vDouble = vDouble;
	params.vDoubles = vDoubles;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqTestDouble
// (Native, Public)
// Parameters:
// struct FBtrDouble              vDouble                        (Parm)
// TArray<struct FBtrDouble>      vDoubles                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqTestDouble(const struct FBtrDouble& vDouble, TArray<struct FBtrDouble> vDoubles)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqTestDouble");

	UBTTcpLink_Channel_sfReqTestDouble_Params params;
	params.vDouble = vDouble;
	params.vDoubles = vDoubles;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyLoadingState
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            UserID                         (Parm)
// unsigned char                  LoadingState                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyLoadingState(int Result, int UserID, unsigned char LoadingState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyLoadingState");

	UBTTcpLink_Channel_sfAckNotifyLoadingState_Params params;
	params.Result = Result;
	params.UserID = UserID;
	params.LoadingState = LoadingState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyLoadingState
// (Native, Public)
// Parameters:
// unsigned char                  LoadingState                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyLoadingState(unsigned char LoadingState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyLoadingState");

	UBTTcpLink_Channel_sfReqNotifyLoadingState_Params params;
	params.LoadingState = LoadingState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckFailedStartGame
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsHost                         (Parm)
// int                            FailedUserID                   (Parm)
// int                            LoadingStep                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckFailedStartGame(int Result, const struct FString& ErrMsg, unsigned char IsHost, int FailedUserID, int LoadingStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckFailedStartGame");

	UBTTcpLink_Channel_sfAckFailedStartGame_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsHost = IsHost;
	params.FailedUserID = FailedUserID;
	params.LoadingStep = LoadingStep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqFailedStartGame
// (Native, Public)
// Parameters:
// int                            LoadingStep                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqFailedStartGame(int LoadingStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqFailedStartGame");

	UBTTcpLink_Channel_sfReqFailedStartGame_Params params;
	params.LoadingStep = LoadingStep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSuccessStartGame
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsHost                         (Parm)
// struct FString                 HostIP                         (Parm, NeedCtorLink)
// int                            HostPort                       (Parm)
// int                            LoadingStep                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSuccessStartGame(int Result, const struct FString& ErrMsg, unsigned char IsHost, const struct FString& HostIP, int HostPort, int LoadingStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSuccessStartGame");

	UBTTcpLink_Channel_sfAckSuccessStartGame_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsHost = IsHost;
	params.HostIP = HostIP;
	params.HostPort = HostPort;
	params.LoadingStep = LoadingStep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSuccessStartGame
// (Native, Public)
// Parameters:
// int                            LoadingStep                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSuccessStartGame(int LoadingStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSuccessStartGame");

	UBTTcpLink_Channel_sfReqSuccessStartGame_Params params;
	params.LoadingStep = LoadingStep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanCharPersonelIntro
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 PersonelIntro                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanCharPersonelIntro(int Result, const struct FString& ErrMsg, const struct FString& PersonelIntro)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanCharPersonelIntro");

	UBTTcpLink_Channel_sfAckClanCharPersonelIntro_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PersonelIntro = PersonelIntro;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanCharPersonelIntro
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanCharPersonelIntro(const struct FString& ClanName, const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanCharPersonelIntro");

	UBTTcpLink_Channel_sfReqClanCharPersonelIntro_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanPersonelIntro
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanPersonelIntro(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanPersonelIntro");

	UBTTcpLink_Channel_sfAckClanPersonelIntro_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanPersonelIntro
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 PersonelIntro                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanPersonelIntro(const struct FString& ClanName, const struct FString& CharName, const struct FString& PersonelIntro)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanPersonelIntro");

	UBTTcpLink_Channel_sfReqClanPersonelIntro_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;
	params.PersonelIntro = PersonelIntro;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanChangeInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanChangeInfo(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanChangeInfo");

	UBTTcpLink_Channel_sfAckClanChangeInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanChangeInfo
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// unsigned char                  IsRecruit                      (Parm)
// unsigned char                  Region                         (Parm)
// struct FString                 Keyword                        (Parm, NeedCtorLink)
// struct FString                 ClanIntro                      (Parm, NeedCtorLink)
// struct FString                 Notice                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanChangeInfo(const struct FString& ClanName, unsigned char IsRecruit, unsigned char Region, const struct FString& Keyword, const struct FString& ClanIntro, const struct FString& Notice)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanChangeInfo");

	UBTTcpLink_Channel_sfReqClanChangeInfo_Params params;
	params.ClanName = ClanName;
	params.IsRecruit = IsRecruit;
	params.Region = Region;
	params.Keyword = Keyword;
	params.ClanIntro = ClanIntro;
	params.Notice = Notice;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanClose
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanClose(int Result, const struct FString& ErrMsg, const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanClose");

	UBTTcpLink_Channel_sfAckClanClose_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanClose
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanClose(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanClose");

	UBTTcpLink_Channel_sfReqClanClose_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyClanSecession
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyClanSecession(const struct FString& ClanName, const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyClanSecession");

	UBTTcpLink_Channel_sfAckNotifyClanSecession_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanSecession
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanSecession(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanSecession");

	UBTTcpLink_Channel_sfAckClanSecession_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanSecession
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanSecession(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanSecession");

	UBTTcpLink_Channel_sfReqClanSecession_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanNews
// (Native, Public)
// Parameters:
// TArray<struct FString>         IssueDate                      (Parm, NeedCtorLink)
// TArray<unsigned char>          IssueType                      (Parm, NeedCtorLink)
// TArray<struct FString>         IssuedClanMember               (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanNews(TArray<struct FString> IssueDate, TArray<unsigned char> IssueType, TArray<struct FString> IssuedClanMember)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanNews");

	UBTTcpLink_Channel_sfAckClanNews_Params params;
	params.IssueDate = IssueDate;
	params.IssueType = IssueType;
	params.IssuedClanMember = IssuedClanMember;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanNews
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanNews(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanNews");

	UBTTcpLink_Channel_sfReqClanNews_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyAdjustClanMemberGrade
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  CharGrade                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyAdjustClanMemberGrade(const struct FString& ClanName, const struct FString& CharName, unsigned char CharGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyAdjustClanMemberGrade");

	UBTTcpLink_Channel_sfAckNotifyAdjustClanMemberGrade_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;
	params.CharGrade = CharGrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAdjustClanMemberGrade
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  CharGrade                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAdjustClanMemberGrade(int Result, const struct FString& ErrMsg, const struct FString& ClanName, const struct FString& CharName, unsigned char CharGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAdjustClanMemberGrade");

	UBTTcpLink_Channel_sfAckAdjustClanMemberGrade_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanName = ClanName;
	params.CharName = CharName;
	params.CharGrade = CharGrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAdjustClanMemberGrade
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  CharGrade                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAdjustClanMemberGrade(const struct FString& ClanName, const struct FString& CharName, unsigned char CharGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAdjustClanMemberGrade");

	UBTTcpLink_Channel_sfReqAdjustClanMemberGrade_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;
	params.CharGrade = CharGrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanUserListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanUserListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanUserListEnd");

	UBTTcpLink_Channel_sfAckClanUserListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanUserList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<unsigned char>          ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWinCnt                     (Parm, NeedCtorLink)
// TArray<int>                    ClanLoseCnt                    (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    DudeId                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanUserList(int Result, const struct FString& ErrMsg, TArray<int> Level, TArray<struct FString> CharName, TArray<unsigned char> ClanGrade, TArray<int> ClanWinCnt, TArray<int> ClanLoseCnt, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> DudeId)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanUserList");

	UBTTcpLink_Channel_sfAckClanUserList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Level = Level;
	params.CharName = CharName;
	params.ClanGrade = ClanGrade;
	params.ClanWinCnt = ClanWinCnt;
	params.ClanLoseCnt = ClanLoseCnt;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.DudeId = DudeId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanUserListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanUserListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanUserListStart");

	UBTTcpLink_Channel_sfAckClanUserListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanUserList
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanUserList(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanUserList");

	UBTTcpLink_Channel_sfReqClanUserList_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSearchClan
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            TotalPage                      (Parm)
// TArray<int>                    ClanMarkPattern                (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBG                     (Parm, NeedCtorLink)
// TArray<unsigned char>          ClanMarkBL                     (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<struct FString>         ClanMaster                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMember                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMemberMax                  (Parm, NeedCtorLink)
// TArray<int>                    ClanCreateDate                 (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// TArray<int>                    ClanDraw                       (Parm, NeedCtorLink)
// TArray<int>                    ClanRank                       (Parm, NeedCtorLink)
// TArray<unsigned char>          ClanRecruit                    (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSearchClan(int Result, const struct FString& ErrMsg, int TotalPage, TArray<int> ClanMarkPattern, TArray<int> ClanMarkBG, TArray<unsigned char> ClanMarkBL, TArray<struct FString> ClanName, TArray<struct FString> ClanMaster, TArray<int> ClanMember, TArray<int> ClanMemberMax, TArray<int> ClanCreateDate, TArray<int> ClanWin, TArray<int> ClanLose, TArray<int> ClanDraw, TArray<int> ClanRank, TArray<unsigned char> ClanRecruit, TArray<int> ClanLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSearchClan");

	UBTTcpLink_Channel_sfAckSearchClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.TotalPage = TotalPage;
	params.ClanMarkPattern = ClanMarkPattern;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.ClanName = ClanName;
	params.ClanMaster = ClanMaster;
	params.ClanMember = ClanMember;
	params.ClanMemberMax = ClanMemberMax;
	params.ClanCreateDate = ClanCreateDate;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.ClanDraw = ClanDraw;
	params.ClanRank = ClanRank;
	params.ClanRecruit = ClanRecruit;
	params.ClanLevel = ClanLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSerachClan
// (Native, Public)
// Parameters:
// unsigned char                  SearchType                     (Parm)
// struct FString                 Keyword                        (Parm, NeedCtorLink)
// unsigned char                  ClanStatus                     (Parm)
// unsigned char                  ClanRegion                     (Parm)
// int                            ReqPage                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSerachClan(unsigned char SearchType, const struct FString& Keyword, unsigned char ClanStatus, unsigned char ClanRegion, int ReqPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSerachClan");

	UBTTcpLink_Channel_sfReqSerachClan_Params params;
	params.SearchType = SearchType;
	params.Keyword = Keyword;
	params.ClanStatus = ClanStatus;
	params.ClanRegion = ClanRegion;
	params.ReqPage = ReqPage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckJoinClanResult
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// unsigned char                  Permit                         (Parm)
// struct FString                 PermitCharName                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckJoinClanResult(const struct FString& ClanName, unsigned char Permit, const struct FString& PermitCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckJoinClanResult");

	UBTTcpLink_Channel_sfAckJoinClanResult_Params params;
	params.ClanName = ClanName;
	params.Permit = Permit;
	params.PermitCharName = PermitCharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRecvJoinClanResult
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRecvJoinClanResult(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRecvJoinClanResult");

	UBTTcpLink_Channel_sfAckRecvJoinClanResult_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRecvJoinClan
// (Native, Public)
// Parameters:
// int                            UserIdx                        (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 ReqMsg                         (Parm, NeedCtorLink)
// unsigned char                  Permit                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRecvJoinClan(int UserIdx, const struct FString& CharName, const struct FString& ReqMsg, unsigned char Permit)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRecvJoinClan");

	UBTTcpLink_Channel_sfAckRecvJoinClan_Params params;
	params.UserIdx = UserIdx;
	params.CharName = CharName;
	params.ReqMsg = ReqMsg;
	params.Permit = Permit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvJoinClan
// (Native, Public)
// Parameters:
// int                            UserIdx                        (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvJoinClan(int UserIdx, const struct FString& CharName, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvJoinClan");

	UBTTcpLink_Channel_sfReqRecvJoinClan_Params params;
	params.UserIdx = UserIdx;
	params.CharName = CharName;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckJoinClan
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 SpecificCharName               (Parm, NeedCtorLink)
// struct FString                 RealRecvCharName               (Parm, NeedCtorLink)
// unsigned char                  RealRecvCharClanGrade          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckJoinClan(int Result, const struct FString& ErrMsg, const struct FString& SpecificCharName, const struct FString& RealRecvCharName, unsigned char RealRecvCharClanGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckJoinClan");

	UBTTcpLink_Channel_sfAckJoinClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.SpecificCharName = SpecificCharName;
	params.RealRecvCharName = RealRecvCharName;
	params.RealRecvCharClanGrade = RealRecvCharClanGrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqJoinClan
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 ClanManagerName                (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqJoinClan(const struct FString& ClanName, const struct FString& ClanManagerName, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqJoinClan");

	UBTTcpLink_Channel_sfReqJoinClan_Params params;
	params.ClanName = ClanName;
	params.ClanManagerName = ClanManagerName;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckInviteClanResult
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  Permit                         (Parm)
// struct FString                 ClanNm                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckInviteClanResult(const struct FString& CharName, unsigned char Permit, const struct FString& ClanNm)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckInviteClanResult");

	UBTTcpLink_Channel_sfAckInviteClanResult_Params params;
	params.CharName = CharName;
	params.Permit = Permit;
	params.ClanNm = ClanNm;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRecvClanInviteResult
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRecvClanInviteResult(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRecvClanInviteResult");

	UBTTcpLink_Channel_sfAckRecvClanInviteResult_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRecvClanInvite
// (Native, Public)
// Parameters:
// int                            InviterUserDBID                (Parm)
// struct FString                 InviterCharname                (Parm, NeedCtorLink)
// struct FString                 InviterMsg                     (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// unsigned char                  Permit                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRecvClanInvite(int InviterUserDBID, const struct FString& InviterCharname, const struct FString& InviterMsg, const struct FString& ClanName, unsigned char Permit)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRecvClanInvite");

	UBTTcpLink_Channel_sfAckRecvClanInvite_Params params;
	params.InviterUserDBID = InviterUserDBID;
	params.InviterCharname = InviterCharname;
	params.InviterMsg = InviterMsg;
	params.ClanName = ClanName;
	params.Permit = Permit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvClanInvite
// (Native, Public)
// Parameters:
// int                            InviterUserDBID                (Parm)
// struct FString                 InviterCharname                (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 InviteMsg                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvClanInvite(int InviterUserDBID, const struct FString& InviterCharname, const struct FString& ClanName, const struct FString& InviteMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvClanInvite");

	UBTTcpLink_Channel_sfReqRecvClanInvite_Params params;
	params.InviterUserDBID = InviterUserDBID;
	params.InviterCharname = InviterCharname;
	params.ClanName = ClanName;
	params.InviteMsg = InviteMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckInviteClan
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckInviteClan(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckInviteClan");

	UBTTcpLink_Channel_sfAckInviteClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqInviteClan
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 InviteMsg                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqInviteClan(const struct FString& CharName, const struct FString& InviteMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqInviteClan");

	UBTTcpLink_Channel_sfReqInviteClan_Params params;
	params.CharName = CharName;
	params.InviteMsg = InviteMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClanInfo
// (Native, Public)
// Parameters:
// struct FClanInfo               stClanInfo                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClanInfo(const struct FClanInfo& stClanInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClanInfo");

	UBTTcpLink_Channel_sfAckClanInfo_Params params;
	params.stClanInfo = stClanInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClanInfo
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClanInfo(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClanInfo");

	UBTTcpLink_Channel_sfReqClanInfo_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckCreateClan
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            StackCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckCreateClan(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckCreateClan");

	UBTTcpLink_Channel_sfAckCreateClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqCreateClan
// (Native, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 ClanURL                        (Parm, NeedCtorLink)
// struct FString                 ClanIntro                      (Parm, NeedCtorLink)
// struct FString                 ClanKeyword                    (Parm, NeedCtorLink)
// unsigned char                  ClanRegion                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqCreateClan(const struct FString& ClanName, const struct FString& ClanURL, const struct FString& ClanIntro, const struct FString& ClanKeyword, unsigned char ClanRegion)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqCreateClan");

	UBTTcpLink_Channel_sfReqCreateClan_Params params;
	params.ClanName = ClanName;
	params.ClanURL = ClanURL;
	params.ClanIntro = ClanIntro;
	params.ClanKeyword = ClanKeyword;
	params.ClanRegion = ClanRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckDupCheckClanName
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckDupCheckClanName(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckDupCheckClanName");

	UBTTcpLink_Channel_sfAckDupCheckClanName_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDupCheckClanName
// (Native, Public)
// Parameters:
// struct FString                 ClanNam                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDupCheckClanName(const struct FString& ClanNam)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDupCheckClanName");

	UBTTcpLink_Channel_sfReqDupCheckClanName_Params params;
	params.ClanNam = ClanNam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSellShopItemInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              UniqueItemID                   (Parm)
// int                            SellPoint                      (Parm)
// int                            CurPoint                       (Parm)
// int                            AfterPoint                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSellShopItemInfo(int Result, const struct FString& ErrMsg, const struct FBtrDouble& UniqueItemID, int SellPoint, int CurPoint, int AfterPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSellShopItemInfo");

	UBTTcpLink_Channel_sfAckSellShopItemInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueItemID = UniqueItemID;
	params.SellPoint = SellPoint;
	params.CurPoint = CurPoint;
	params.AfterPoint = AfterPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSellShopItemInfo
// (Native, Public)
// Parameters:
// struct FBtrDouble              UniqueItemID                   (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSellShopItemInfo(const struct FBtrDouble& UniqueItemID, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSellShopItemInfo");

	UBTTcpLink_Channel_sfReqSellShopItemInfo_Params params;
	params.UniqueItemID = UniqueItemID;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGameOverEnd
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGameOverEnd(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGameOverEnd");

	UBTTcpLink_Channel_sfAckGameOverEnd_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGameOverEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGameOverEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGameOverEnd");

	UBTTcpLink_Channel_sfReqGameOverEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAuctionItemListCount
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  Section                        (Parm)
// unsigned char                  Classfy                        (Parm)
// int                            ItemType                       (Parm)
// int                            ItemGrade                      (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAuctionItemListCount(int Result, const struct FString& ErrMsg, unsigned char Section, unsigned char Classfy, int ItemType, int ItemGrade, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAuctionItemListCount");

	UBTTcpLink_Channel_sfAckAuctionItemListCount_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Section = Section;
	params.Classfy = Classfy;
	params.ItemType = ItemType;
	params.ItemGrade = ItemGrade;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAuctionItemListCount
// (Native, Public)
// Parameters:
// unsigned char                  Section                        (Parm)
// unsigned char                  Classfy                        (Parm)
// int                            ItemType                       (Parm)
// int                            ItemGrade                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAuctionItemListCount(unsigned char Section, unsigned char Classfy, int ItemType, int ItemGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAuctionItemListCount");

	UBTTcpLink_Channel_sfReqAuctionItemListCount_Params params;
	params.Section = Section;
	params.Classfy = Classfy;
	params.ItemType = ItemType;
	params.ItemGrade = ItemGrade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckServerTime
// (Native, Public)
// Parameters:
// int                            Time                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckServerTime(int Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckServerTime");

	UBTTcpLink_Channel_sfAckServerTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqServerTime
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqServerTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqServerTime");

	UBTTcpLink_Channel_sfReqServerTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEntryQSlotIDList
// (Native, Public)
// Parameters:
// int                            UserNum                        (Parm)
// TArray<unsigned char>          QSlotDispOrder                 (Parm, NeedCtorLink)
// TArray<int>                    MWItemID                       (Parm, NeedCtorLink)
// TArray<int>                    MWPartID                       (Parm, NeedCtorLink)
// TArray<int>                    MWPaintID                      (Parm, NeedCtorLink)
// TArray<int>                    PistolItemID                   (Parm, NeedCtorLink)
// TArray<int>                    PistolPartID                   (Parm, NeedCtorLink)
// TArray<int>                    PistolPaintID                  (Parm, NeedCtorLink)
// TArray<int>                    TWItemID1                      (Parm, NeedCtorLink)
// TArray<int>                    TWItemID2                      (Parm, NeedCtorLink)
// TArray<int>                    Skill1ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill2ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill3ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill4ID                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEntryQSlotIDList(int UserNum, TArray<unsigned char> QSlotDispOrder, TArray<int> MWItemID, TArray<int> MWPartID, TArray<int> MWPaintID, TArray<int> PistolItemID, TArray<int> PistolPartID, TArray<int> PistolPaintID, TArray<int> TWItemID1, TArray<int> TWItemID2, TArray<int> Skill1ID, TArray<int> Skill2ID, TArray<int> Skill3ID, TArray<int> Skill4ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEntryQSlotIDList");

	UBTTcpLink_Channel_sfAckEntryQSlotIDList_Params params;
	params.UserNum = UserNum;
	params.QSlotDispOrder = QSlotDispOrder;
	params.MWItemID = MWItemID;
	params.MWPartID = MWPartID;
	params.MWPaintID = MWPaintID;
	params.PistolItemID = PistolItemID;
	params.PistolPartID = PistolPartID;
	params.PistolPaintID = PistolPaintID;
	params.TWItemID1 = TWItemID1;
	params.TWItemID2 = TWItemID2;
	params.Skill1ID = Skill1ID;
	params.Skill2ID = Skill2ID;
	params.Skill3ID = Skill3ID;
	params.Skill4ID = Skill4ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqEntryQSlotIDList
// (Native, Public)
// Parameters:
// int                            UserNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqEntryQSlotIDList(int UserNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqEntryQSlotIDList");

	UBTTcpLink_Channel_sfReqEntryQSlotIDList_Params params;
	params.UserNum = UserNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEntryQSlotUniqueIDList
// (Native, Public)
// Parameters:
// int                            UserNum                        (Parm)
// TArray<unsigned char>          QSlotDispOrder                 (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      MWUniqueID                     (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      PistolUniqueID                 (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TW1UniqueID                    (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TW2UniqueID                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEntryQSlotUniqueIDList(int UserNum, TArray<unsigned char> QSlotDispOrder, TArray<struct FBtrDouble> MWUniqueID, TArray<struct FBtrDouble> PistolUniqueID, TArray<struct FBtrDouble> TW1UniqueID, TArray<struct FBtrDouble> TW2UniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEntryQSlotUniqueIDList");

	UBTTcpLink_Channel_sfAckEntryQSlotUniqueIDList_Params params;
	params.UserNum = UserNum;
	params.QSlotDispOrder = QSlotDispOrder;
	params.MWUniqueID = MWUniqueID;
	params.PistolUniqueID = PistolUniqueID;
	params.TW1UniqueID = TW1UniqueID;
	params.TW2UniqueID = TW2UniqueID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqEntryQSlotUniqueIDList
// (Native, Public)
// Parameters:
// int                            UserNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqEntryQSlotUniqueIDList(int UserNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqEntryQSlotUniqueIDList");

	UBTTcpLink_Channel_sfReqEntryQSlotUniqueIDList_Params params;
	params.UserNum = UserNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAuctionBidding
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAuctionBidding(int Result, const struct FString& ErrMsg, int PointRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAuctionBidding");

	UBTTcpLink_Channel_sfAckAuctionBidding_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PointRemain = PointRemain;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAuctionBidding
// (Native, Public)
// Parameters:
// int                            UniqueID                       (Parm)
// int                            BiddingPrice                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAuctionBidding(int UniqueID, int BiddingPrice)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAuctionBidding");

	UBTTcpLink_Channel_sfReqAuctionBidding_Params params;
	params.UniqueID = UniqueID;
	params.BiddingPrice = BiddingPrice;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAuctionInstantlyBuying
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAuctionInstantlyBuying(int Result, const struct FString& ErrMsg, int PointRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAuctionInstantlyBuying");

	UBTTcpLink_Channel_sfAckAuctionInstantlyBuying_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PointRemain = PointRemain;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAuctionInstantlyBuying
// (Native, Public)
// Parameters:
// int                            UniqueID                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAuctionInstantlyBuying(int UniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAuctionInstantlyBuying");

	UBTTcpLink_Channel_sfReqAuctionInstantlyBuying_Params params;
	params.UniqueID = UniqueID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAuctionItemListEnd
// (Native, Public)
// Parameters:
// unsigned char                  Section                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAuctionItemListEnd(unsigned char Section)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAuctionItemListEnd");

	UBTTcpLink_Channel_sfAckAuctionItemListEnd_Params params;
	params.Section = Section;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAuctionItemList
// (Native, Public)
// Parameters:
// unsigned char                  Section                        (Parm)
// TArray<int>                    UniqueIDs                      (Parm, NeedCtorLink)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    AddPartsIDs                    (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UntilTimes                     (Parm, NeedCtorLink)
// TArray<int>                    BiddingPrices                  (Parm, NeedCtorLink)
// TArray<int>                    InstantlyByuingPrices          (Parm, NeedCtorLink)
// TArray<int>                    ItemDamageds                   (Parm, NeedCtorLink)
// TArray<struct FString>         HighestBidderNames             (Parm, NeedCtorLink)
// TArray<struct FString>         SellerNames                    (Parm, NeedCtorLink)
// TArray<int>                    ItemCount                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAuctionItemList(unsigned char Section, TArray<int> UniqueIDs, TArray<int> ItemIDs, TArray<int> AddPartsIDs, TArray<struct FBtrDouble> UntilTimes, TArray<int> BiddingPrices, TArray<int> InstantlyByuingPrices, TArray<int> ItemDamageds, TArray<struct FString> HighestBidderNames, TArray<struct FString> SellerNames, TArray<int> ItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAuctionItemList");

	UBTTcpLink_Channel_sfAckAuctionItemList_Params params;
	params.Section = Section;
	params.UniqueIDs = UniqueIDs;
	params.ItemIDs = ItemIDs;
	params.AddPartsIDs = AddPartsIDs;
	params.UntilTimes = UntilTimes;
	params.BiddingPrices = BiddingPrices;
	params.InstantlyByuingPrices = InstantlyByuingPrices;
	params.ItemDamageds = ItemDamageds;
	params.HighestBidderNames = HighestBidderNames;
	params.SellerNames = SellerNames;
	params.ItemCount = ItemCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAuctionItemListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  Section                        (Parm)
// int                            PageNum                        (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAuctionItemListStart(int Result, const struct FString& ErrMsg, unsigned char Section, int PageNum, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAuctionItemListStart");

	UBTTcpLink_Channel_sfAckAuctionItemListStart_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Section = Section;
	params.PageNum = PageNum;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAuctionItemList
// (Native, Public)
// Parameters:
// unsigned char                  Section                        (Parm)
// struct FString                 Keyword                        (Parm, NeedCtorLink)
// int                            ItemRank                       (Parm)
// unsigned char                  ItemClassfy                    (Parm)
// unsigned char                  IsAvailable                    (Parm)
// int                            PageNum                        (Parm)
// int                            Count                          (Parm)
// int                            SortOpt                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAuctionItemList(unsigned char Section, const struct FString& Keyword, int ItemRank, unsigned char ItemClassfy, unsigned char IsAvailable, int PageNum, int Count, int SortOpt)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAuctionItemList");

	UBTTcpLink_Channel_sfReqAuctionItemList_Params params;
	params.Section = Section;
	params.Keyword = Keyword;
	params.ItemRank = ItemRank;
	params.ItemClassfy = ItemClassfy;
	params.IsAvailable = IsAvailable;
	params.PageNum = PageNum;
	params.Count = Count;
	params.SortOpt = SortOpt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAuctionMyItemCancel
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAuctionMyItemCancel(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAuctionMyItemCancel");

	UBTTcpLink_Channel_sfAckAuctionMyItemCancel_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAuctionMyItemCancel
// (Native, Public)
// Parameters:
// int                            UniqueID                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAuctionMyItemCancel(int UniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAuctionMyItemCancel");

	UBTTcpLink_Channel_sfReqAuctionMyItemCancel_Params params;
	params.UniqueID = UniqueID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAuctionMyItemRegister
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            BeginPrice                     (Parm)
// int                            BuyPrice                       (Parm)
// int                            GuarantyPoint                  (Parm)
// int                            PointRemain                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAuctionMyItemRegister(int Result, const struct FString& ErrMsg, int BeginPrice, int BuyPrice, int GuarantyPoint, int PointRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAuctionMyItemRegister");

	UBTTcpLink_Channel_sfAckAuctionMyItemRegister_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.BeginPrice = BeginPrice;
	params.BuyPrice = BuyPrice;
	params.GuarantyPoint = GuarantyPoint;
	params.PointRemain = PointRemain;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAuctionMyItemRegister
// (Native, Public)
// Parameters:
// struct FBtrDouble              UniqueID                       (Parm)
// int                            ItemCount                      (Parm)
// int                            BeginPrice                     (Parm)
// int                            PeriodHour                     (Parm)
// int                            InstantlyBuyingPrice           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAuctionMyItemRegister(const struct FBtrDouble& UniqueID, int ItemCount, int BeginPrice, int PeriodHour, int InstantlyBuyingPrice)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAuctionMyItemRegister");

	UBTTcpLink_Channel_sfReqAuctionMyItemRegister_Params params;
	params.UniqueID = UniqueID;
	params.ItemCount = ItemCount;
	params.BeginPrice = BeginPrice;
	params.PeriodHour = PeriodHour;
	params.InstantlyBuyingPrice = InstantlyBuyingPrice;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckMyMoney
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            Point                          (Parm)
// int                            Cash                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckMyMoney(int Result, const struct FString& ErrMsg, int Point, int Cash)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckMyMoney");

	UBTTcpLink_Channel_sfAckMyMoney_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Point = Point;
	params.Cash = Cash;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqMyMoney
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqMyMoney()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqMyMoney");

	UBTTcpLink_Channel_sfReqMyMoney_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckUpdateQSlot
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckUpdateQSlot(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckUpdateQSlot");

	UBTTcpLink_Channel_sfAckUpdateQSlot_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqUpdateQSlot
// (Native, Public)
// Parameters:
// int                            QSlotID                        (Parm)
// struct FString                 QSlotName                      (Parm, NeedCtorLink)
// struct FBtrDouble              MWItemID                       (Parm)
// struct FBtrDouble              PistolItemID                   (Parm)
// struct FBtrDouble              TWItemID1                      (Parm)
// struct FBtrDouble              TWItemID2                      (Parm)
// int                            Skill1                         (Parm)
// int                            Skill2                         (Parm)
// int                            Skill3                         (Parm)
// int                            Skill4                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqUpdateQSlot(int QSlotID, const struct FString& QSlotName, const struct FBtrDouble& MWItemID, const struct FBtrDouble& PistolItemID, const struct FBtrDouble& TWItemID1, const struct FBtrDouble& TWItemID2, int Skill1, int Skill2, int Skill3, int Skill4)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqUpdateQSlot");

	UBTTcpLink_Channel_sfReqUpdateQSlot_Params params;
	params.QSlotID = QSlotID;
	params.QSlotName = QSlotName;
	params.MWItemID = MWItemID;
	params.PistolItemID = PistolItemID;
	params.TWItemID1 = TWItemID1;
	params.TWItemID2 = TWItemID2;
	params.Skill1 = Skill1;
	params.Skill2 = Skill2;
	params.Skill3 = Skill3;
	params.Skill4 = Skill4;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckQSlotList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    QSlotID                        (Parm, NeedCtorLink)
// TArray<struct FString>         QSlotName                      (Parm, NeedCtorLink)
// TArray<unsigned char>          QSlotDispOrder                 (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      MWItemID                       (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      PistolItemID                   (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TWItemID1                      (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TWItemID2                      (Parm, NeedCtorLink)
// TArray<int>                    Skill1                         (Parm, NeedCtorLink)
// TArray<int>                    Skill2                         (Parm, NeedCtorLink)
// TArray<int>                    Skill3                         (Parm, NeedCtorLink)
// TArray<int>                    Skill4                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckQSlotList(int Result, const struct FString& ErrMsg, TArray<int> QSlotID, TArray<struct FString> QSlotName, TArray<unsigned char> QSlotDispOrder, TArray<struct FBtrDouble> MWItemID, TArray<struct FBtrDouble> PistolItemID, TArray<struct FBtrDouble> TWItemID1, TArray<struct FBtrDouble> TWItemID2, TArray<int> Skill1, TArray<int> Skill2, TArray<int> Skill3, TArray<int> Skill4)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckQSlotList");

	UBTTcpLink_Channel_sfAckQSlotList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.QSlotID = QSlotID;
	params.QSlotName = QSlotName;
	params.QSlotDispOrder = QSlotDispOrder;
	params.MWItemID = MWItemID;
	params.PistolItemID = PistolItemID;
	params.TWItemID1 = TWItemID1;
	params.TWItemID2 = TWItemID2;
	params.Skill1 = Skill1;
	params.Skill2 = Skill2;
	params.Skill3 = Skill3;
	params.Skill4 = Skill4;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqQSlotList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqQSlotList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqQSlotList");

	UBTTcpLink_Channel_sfReqQSlotList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRepairItem
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// int                            RepairCost                     (Parm)
// TArray<int>                    DamageDegree                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRepairItem(int Result, const struct FString& ErrMsg, TArray<struct FBtrDouble> UniqueItemID, int RepairCost, TArray<int> DamageDegree)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRepairItem");

	UBTTcpLink_Channel_sfAckRepairItem_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueItemID = UniqueItemID;
	params.RepairCost = RepairCost;
	params.DamageDegree = DamageDegree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRepairItem
// (Native, Public)
// Parameters:
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRepairItem(TArray<struct FBtrDouble> UniqueItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRepairItem");

	UBTTcpLink_Channel_sfReqRepairItem_Params params;
	params.UniqueItemID = UniqueItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRepairCost
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// TArray<int>                    RepairCost                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRepairCost(int Result, const struct FString& ErrMsg, TArray<struct FBtrDouble> UniqueItemID, TArray<int> RepairCost)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRepairCost");

	UBTTcpLink_Channel_sfAckRepairCost_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueItemID = UniqueItemID;
	params.RepairCost = RepairCost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRepairCost
// (Native, Public)
// Parameters:
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRepairCost(TArray<struct FBtrDouble> UniqueItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRepairCost");

	UBTTcpLink_Channel_sfReqRepairCost_Params params;
	params.UniqueItemID = UniqueItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckUpdateWeaponDurability
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// TArray<int>                    Durability                     (Parm, NeedCtorLink)
// TArray<unsigned char>          IsDestroy                      (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      FailedWeaponUniqueID           (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckUpdateWeaponDurability(int Result, const struct FString& ErrMsg, TArray<struct FBtrDouble> UniqueItemID, TArray<int> Durability, TArray<unsigned char> IsDestroy, TArray<struct FBtrDouble> FailedWeaponUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckUpdateWeaponDurability");

	UBTTcpLink_Channel_sfAckUpdateWeaponDurability_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueItemID = UniqueItemID;
	params.Durability = Durability;
	params.IsDestroy = IsDestroy;
	params.FailedWeaponUniqueID = FailedWeaponUniqueID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqUpdateWeaponDurability
// (Native, Public)
// Parameters:
// int                            TotalPlayTime                  (Parm)
// TArray<int>                    OwnerID                        (Parm, NeedCtorLink)
// TArray<int>                    Number                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// TArray<int>                    UsingSec                       (Parm, NeedCtorLink)
// TArray<int>                    UsingRoundInSD                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqUpdateWeaponDurability(int TotalPlayTime, TArray<int> OwnerID, TArray<int> Number, TArray<struct FBtrDouble> UniqueItemID, TArray<int> UsingSec, TArray<int> UsingRoundInSD)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqUpdateWeaponDurability");

	UBTTcpLink_Channel_sfReqUpdateWeaponDurability_Params params;
	params.TotalPlayTime = TotalPlayTime;
	params.OwnerID = OwnerID;
	params.Number = Number;
	params.UniqueItemID = UniqueItemID;
	params.UsingSec = UsingSec;
	params.UsingRoundInSD = UsingRoundInSD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckModifyWeapon
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              UniqueID                       (Parm)
// int                            AddPartID                      (Parm)
// int                            PaintID                        (Parm)
// int                            Point                          (Parm)
// int                            Cash                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckModifyWeapon(int Result, const struct FString& ErrMsg, const struct FBtrDouble& UniqueID, int AddPartID, int PaintID, int Point, int Cash)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckModifyWeapon");

	UBTTcpLink_Channel_sfAckModifyWeapon_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueID = UniqueID;
	params.AddPartID = AddPartID;
	params.PaintID = PaintID;
	params.Point = Point;
	params.Cash = Cash;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqModifyWeapon
// (Native, Public)
// Parameters:
// struct FBtrDouble              UniqueID                       (Parm)
// int                            AddPartID                      (Parm)
// int                            PaintID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqModifyWeapon(const struct FBtrDouble& UniqueID, int AddPartID, int PaintID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqModifyWeapon");

	UBTTcpLink_Channel_sfReqModifyWeapon_Params params;
	params.UniqueID = UniqueID;
	params.AddPartID = AddPartID;
	params.PaintID = PaintID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSellShopItem
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// int                            CashRemain                     (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSellShopItem(int Result, const struct FString& ErrMsg, int PointRemain, int CashRemain, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSellShopItem");

	UBTTcpLink_Channel_sfAckSellShopItem_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PointRemain = PointRemain;
	params.CashRemain = CashRemain;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSellShopItem
// (Native, Public)
// Parameters:
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSellShopItem(const struct FBtrDouble& ItemUniqueID, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSellShopItem");

	UBTTcpLink_Channel_sfReqSellShopItem_Params params;
	params.ItemUniqueID = ItemUniqueID;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckBuyShopItem
// (Native, Public)
// Parameters:
// int                            ItemCount                      (Parm)
// TArray<int>                    Result                         (Parm, NeedCtorLink)
// TArray<int>                    BoughtItemTypeID               (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      BoughtItemUniqueID             (Parm, NeedCtorLink)
// TArray<int>                    BoughtPartID                   (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      BoughtUntilTIme                (Parm, NeedCtorLink)
// TArray<int>                    BoughtStackCnt                 (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// int                            CashRemain                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckBuyShopItem(int ItemCount, TArray<int> Result, TArray<int> BoughtItemTypeID, TArray<struct FBtrDouble> BoughtItemUniqueID, TArray<int> BoughtPartID, TArray<struct FBtrDouble> BoughtUntilTIme, TArray<int> BoughtStackCnt, int PointRemain, int CashRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckBuyShopItem");

	UBTTcpLink_Channel_sfAckBuyShopItem_Params params;
	params.ItemCount = ItemCount;
	params.Result = Result;
	params.BoughtItemTypeID = BoughtItemTypeID;
	params.BoughtItemUniqueID = BoughtItemUniqueID;
	params.BoughtPartID = BoughtPartID;
	params.BoughtUntilTIme = BoughtUntilTIme;
	params.BoughtStackCnt = BoughtStackCnt;
	params.PointRemain = PointRemain;
	params.CashRemain = CashRemain;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqBuyShopItem
// (Native, Public)
// Parameters:
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// unsigned char                  BuyOption1                     (Parm)
// unsigned char                  BuyOption2                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqBuyShopItem(int ItemID, const struct FBtrDouble& ItemUniqueID, unsigned char BuyOption1, unsigned char BuyOption2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqBuyShopItem");

	UBTTcpLink_Channel_sfReqBuyShopItem_Params params;
	params.ItemID = ItemID;
	params.ItemUniqueID = ItemUniqueID;
	params.BuyOption1 = BuyOption1;
	params.BuyOption2 = BuyOption2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckShopItemListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckShopItemListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckShopItemListEnd");

	UBTTcpLink_Channel_sfAckShopItemListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckShopItemList
// (Native, Public)
// Parameters:
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckShopItemList(TArray<int> ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckShopItemList");

	UBTTcpLink_Channel_sfAckShopItemList_Params params;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckShopItemListStart
// (Native, Public)
// Parameters:
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckShopItemListStart(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckShopItemListStart");

	UBTTcpLink_Channel_sfAckShopItemListStart_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqShopItemList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqShopItemList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqShopItemList");

	UBTTcpLink_Channel_sfReqShopItemList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckForceGameOver
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            GameRoomNumber                 (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckForceGameOver(int UserID, int GameRoomNumber, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckForceGameOver");

	UBTTcpLink_Channel_sfAckForceGameOver_Params params;
	params.UserID = UserID;
	params.GameRoomNumber = GameRoomNumber;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqForceGameOver
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqForceGameOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqForceGameOver");

	UBTTcpLink_Channel_sfReqForceGameOver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGiveSkill
// (Native, Public)
// Parameters:
// int                            SkillID                        (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGiveSkill(int SkillID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGiveSkill");

	UBTTcpLink_Channel_sfAckGiveSkill_Params params;
	params.SkillID = SkillID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGiveSkill
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGiveSkill()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGiveSkill");

	UBTTcpLink_Channel_sfReqGiveSkill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyExpiredItemIDs
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// TArray<struct FBtrDouble>      ExpiredItemUniqueIDs           (Parm, NeedCtorLink)
// TArray<int>                    ExpiredItemIDs                 (Parm, NeedCtorLink)
// TArray<int>                    ExpiredItemPartIDs             (Parm, NeedCtorLink)
// TArray<unsigned char>          ExpiredItemSlotPos             (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyExpiredItemIDs(int UserID, TArray<struct FBtrDouble> ExpiredItemUniqueIDs, TArray<int> ExpiredItemIDs, TArray<int> ExpiredItemPartIDs, TArray<unsigned char> ExpiredItemSlotPos, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyExpiredItemIDs");

	UBTTcpLink_Channel_sfAckNotifyExpiredItemIDs_Params params;
	params.UserID = UserID;
	params.ExpiredItemUniqueIDs = ExpiredItemUniqueIDs;
	params.ExpiredItemIDs = ExpiredItemIDs;
	params.ExpiredItemPartIDs = ExpiredItemPartIDs;
	params.ExpiredItemSlotPos = ExpiredItemSlotPos;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyExpiredItemIDs
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyExpiredItemIDs()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyExpiredItemIDs");

	UBTTcpLink_Channel_sfReqNotifyExpiredItemIDs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyExpiredSkillIDs
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// TArray<struct FBtrDouble>      ExpiredSkillUniqueIDs          (Parm, NeedCtorLink)
// TArray<int>                    ExpiredSkillIDs                (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<unsigned char>          ExpiredSkillSlotPositions      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyExpiredSkillIDs(int UserID, TArray<struct FBtrDouble> ExpiredSkillUniqueIDs, TArray<int> ExpiredSkillIDs, int Result, const struct FString& ErrMsg, TArray<unsigned char> ExpiredSkillSlotPositions)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyExpiredSkillIDs");

	UBTTcpLink_Channel_sfAckNotifyExpiredSkillIDs_Params params;
	params.UserID = UserID;
	params.ExpiredSkillUniqueIDs = ExpiredSkillUniqueIDs;
	params.ExpiredSkillIDs = ExpiredSkillIDs;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ExpiredSkillSlotPositions = ExpiredSkillSlotPositions;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyExpiredSkillIDs
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyExpiredSkillIDs()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyExpiredSkillIDs");

	UBTTcpLink_Channel_sfReqNotifyExpiredSkillIDs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyChangedSkillState
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// TArray<int>                    SkillIDs                       (Parm, NeedCtorLink)
// TArray<unsigned char>          NewStates                      (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyChangedSkillState(int UserID, TArray<int> SkillIDs, TArray<unsigned char> NewStates, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyChangedSkillState");

	UBTTcpLink_Channel_sfAckNotifyChangedSkillState_Params params;
	params.UserID = UserID;
	params.SkillIDs = SkillIDs;
	params.NewStates = NewStates;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyChangedSkillState
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyChangedSkillState()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyChangedSkillState");

	UBTTcpLink_Channel_sfReqNotifyChangedSkillState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyChangedItemState
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<unsigned char>          NewStates                      (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyChangedItemState(int UserID, TArray<int> ItemIDs, TArray<unsigned char> NewStates, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyChangedItemState");

	UBTTcpLink_Channel_sfAckNotifyChangedItemState_Params params;
	params.UserID = UserID;
	params.ItemIDs = ItemIDs;
	params.NewStates = NewStates;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyChangedItemState
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyChangedItemState()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyChangedItemState");

	UBTTcpLink_Channel_sfReqNotifyChangedItemState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckConfirmSkillChanged
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckConfirmSkillChanged(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckConfirmSkillChanged");

	UBTTcpLink_Channel_sfAckConfirmSkillChanged_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqConfirmSkillChanged
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqConfirmSkillChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqConfirmSkillChanged");

	UBTTcpLink_Channel_sfReqConfirmSkillChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEquipSkill
// (Native, Public)
// Parameters:
// int                            ChangedNewSkillID              (Parm)
// int                            ChangedNewSkillUniqueID        (Parm)
// unsigned char                  ChangedNewSlotPosition         (Parm)
// int                            ChangedOldSkillID              (Parm)
// int                            ChangedOldSkillUniqueID        (Parm)
// unsigned char                  ChangedOldSlotPosition         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEquipSkill(int ChangedNewSkillID, int ChangedNewSkillUniqueID, unsigned char ChangedNewSlotPosition, int ChangedOldSkillID, int ChangedOldSkillUniqueID, unsigned char ChangedOldSlotPosition, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEquipSkill");

	UBTTcpLink_Channel_sfAckEquipSkill_Params params;
	params.ChangedNewSkillID = ChangedNewSkillID;
	params.ChangedNewSkillUniqueID = ChangedNewSkillUniqueID;
	params.ChangedNewSlotPosition = ChangedNewSlotPosition;
	params.ChangedOldSkillID = ChangedOldSkillID;
	params.ChangedOldSkillUniqueID = ChangedOldSkillUniqueID;
	params.ChangedOldSlotPosition = ChangedOldSlotPosition;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqEquipSkill
// (Native, Public)
// Parameters:
// int                            SkillID                        (Parm)
// int                            SkillUniqueID                  (Parm)
// unsigned char                  NewSlotPosition                (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqEquipSkill(int SkillID, int SkillUniqueID, unsigned char NewSlotPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqEquipSkill");

	UBTTcpLink_Channel_sfReqEquipSkill_Params params;
	params.SkillID = SkillID;
	params.SkillUniqueID = SkillUniqueID;
	params.NewSlotPosition = NewSlotPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckUserSkillListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckUserSkillListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckUserSkillListEnd");

	UBTTcpLink_Channel_sfAckUserSkillListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckUserSkillList
// (Native, Public)
// Parameters:
// TArray<int>                    UniqueSkillID                  (Parm, NeedCtorLink)
// TArray<int>                    SkillID                        (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UntilTime                      (Parm, NeedCtorLink)
// TArray<unsigned char>          SlotPosition                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckUserSkillList(TArray<int> UniqueSkillID, TArray<int> SkillID, TArray<struct FBtrDouble> UntilTime, TArray<unsigned char> SlotPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckUserSkillList");

	UBTTcpLink_Channel_sfAckUserSkillList_Params params;
	params.UniqueSkillID = UniqueSkillID;
	params.SkillID = SkillID;
	params.UntilTime = UntilTime;
	params.SlotPosition = SlotPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckUserSkillListStart
// (Native, Public)
// Parameters:
// int                            Count                          (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckUserSkillListStart(int Count, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckUserSkillListStart");

	UBTTcpLink_Channel_sfAckUserSkillListStart_Params params;
	params.Count = Count;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqUserSkillList
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqUserSkillList(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqUserSkillList");

	UBTTcpLink_Channel_sfReqUserSkillList_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckDelMemo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    FailedMemoID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckDelMemo(int Result, const struct FString& ErrMsg, TArray<int> FailedMemoID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckDelMemo");

	UBTTcpLink_Channel_sfAckDelMemo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.FailedMemoID = FailedMemoID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDelMemo
// (Native, Public)
// Parameters:
// TArray<int>                    MemoIdx                        (Parm, NeedCtorLink)
// unsigned char                  Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDelMemo(TArray<int> MemoIdx, unsigned char Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDelMemo");

	UBTTcpLink_Channel_sfReqDelMemo_Params params;
	params.MemoIdx = MemoIdx;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckReadMemo
// (Native, Public)
// Parameters:
// struct FString                 cnameFrom                      (Parm, NeedCtorLink)
// struct FString                 Text                           (Parm, NeedCtorLink)
// struct FString                 dateRecv                       (Parm, NeedCtorLink)
// struct FBtrDouble              ItemUID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckReadMemo(const struct FString& cnameFrom, const struct FString& Text, const struct FString& dateRecv, const struct FBtrDouble& ItemUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckReadMemo");

	UBTTcpLink_Channel_sfAckReadMemo_Params params;
	params.cnameFrom = cnameFrom;
	params.Text = Text;
	params.dateRecv = dateRecv;
	params.ItemUID = ItemUID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqReadMemo
// (Native, Public)
// Parameters:
// int                            MemoIdx                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqReadMemo(int MemoIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqReadMemo");

	UBTTcpLink_Channel_sfReqReadMemo_Params params;
	params.MemoIdx = MemoIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEndMemoList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEndMemoList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEndMemoList");

	UBTTcpLink_Channel_sfAckEndMemoList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckMemoList
// (Native, Public)
// Parameters:
// TArray<int>                    MemoIdx                        (Parm, NeedCtorLink)
// TArray<struct FString>         cnameFrom                      (Parm, NeedCtorLink)
// TArray<struct FString>         dateRecv                       (Parm, NeedCtorLink)
// TArray<struct FString>         Text                           (Parm, NeedCtorLink)
// TArray<unsigned char>          Status                         (Parm, NeedCtorLink)
// TArray<int>                    UntilExpire                    (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      ItemUID                        (Parm, NeedCtorLink)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<unsigned char>          MsgType                        (Parm, NeedCtorLink)
// TArray<int>                    ItemPartID                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckMemoList(TArray<int> MemoIdx, TArray<struct FString> cnameFrom, TArray<struct FString> dateRecv, TArray<struct FString> Text, TArray<unsigned char> Status, TArray<int> UntilExpire, TArray<struct FBtrDouble> ItemUID, TArray<int> ItemID, TArray<unsigned char> MsgType, TArray<int> ItemPartID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckMemoList");

	UBTTcpLink_Channel_sfAckMemoList_Params params;
	params.MemoIdx = MemoIdx;
	params.cnameFrom = cnameFrom;
	params.dateRecv = dateRecv;
	params.Text = Text;
	params.Status = Status;
	params.UntilExpire = UntilExpire;
	params.ItemUID = ItemUID;
	params.ItemID = ItemID;
	params.MsgType = MsgType;
	params.ItemPartID = ItemPartID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckStartMemoList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  Type                           (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckStartMemoList(int Result, const struct FString& ErrMsg, unsigned char Type, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckStartMemoList");

	UBTTcpLink_Channel_sfAckStartMemoList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Type = Type;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqMemoList
// (Native, Public)
// Parameters:
// unsigned char                  Type                           (Parm)
// unsigned char                  MemoType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqMemoList(unsigned char Type, unsigned char MemoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqMemoList");

	UBTTcpLink_Channel_sfReqMemoList_Params params;
	params.Type = Type;
	params.MemoType = MemoType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvMemo
// (Native, Public)
// Parameters:
// struct FString                 cnameFrom                      (Parm, NeedCtorLink)
// unsigned char                  MemoType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvMemo(const struct FString& cnameFrom, unsigned char MemoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvMemo");

	UBTTcpLink_Channel_sfReqRecvMemo_Params params;
	params.cnameFrom = cnameFrom;
	params.MemoType = MemoType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSendMemo
// (Native, Public)
// Parameters:
// TArray<struct FString>         CnamesToFail                   (Parm, NeedCtorLink)
// TArray<int>                    ResultArray                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSendMemo(TArray<struct FString> CnamesToFail, TArray<int> ResultArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSendMemo");

	UBTTcpLink_Channel_sfAckSendMemo_Params params;
	params.CnamesToFail = CnamesToFail;
	params.ResultArray = ResultArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSendMemo
// (Native, Public)
// Parameters:
// TArray<struct FString>         cnames                         (Parm, NeedCtorLink)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// int                            ItemUID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSendMemo(TArray<struct FString> cnames, const struct FString& Msg, int ItemUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSendMemo");

	UBTTcpLink_Channel_sfReqSendMemo_Params params;
	params.cnames = cnames;
	params.Msg = Msg;
	params.ItemUID = ItemUID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvChatWispher
// (Native, Public)
// Parameters:
// struct FString                 CharnameFrom                   (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvChatWispher(const struct FString& CharnameFrom, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvChatWispher");

	UBTTcpLink_Channel_sfReqRecvChatWispher_Params params;
	params.CharnameFrom = CharnameFrom;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChatWispher
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 ToCharName                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChatWispher(int Result, const struct FString& ErrMsg, const struct FString& ToCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChatWispher");

	UBTTcpLink_Channel_sfAckChatWispher_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ToCharName = ToCharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChatWispher
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChatWispher(const struct FString& CharName, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChatWispher");

	UBTTcpLink_Channel_sfReqChatWispher_Params params;
	params.CharName = CharName;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRemoveBlockUserList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRemoveBlockUserList(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRemoveBlockUserList");

	UBTTcpLink_Channel_sfAckRemoveBlockUserList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRemoveBlockUserList
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRemoveBlockUserList(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRemoveBlockUserList");

	UBTTcpLink_Channel_sfReqRemoveBlockUserList_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckAddBlockUserList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckAddBlockUserList(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckAddBlockUserList");

	UBTTcpLink_Channel_sfAckAddBlockUserList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqAddBlockUserList
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqAddBlockUserList(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqAddBlockUserList");

	UBTTcpLink_Channel_sfReqAddBlockUserList_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckBlockUserListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckBlockUserListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckBlockUserListEnd");

	UBTTcpLink_Channel_sfAckBlockUserListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckBlockUserList
// (Native, Public)
// Parameters:
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckBlockUserList(TArray<struct FString> CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckBlockUserList");

	UBTTcpLink_Channel_sfAckBlockUserList_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckBlockUserListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckBlockUserListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckBlockUserListStart");

	UBTTcpLink_Channel_sfAckBlockUserListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqBlockUserList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqBlockUserList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqBlockUserList");

	UBTTcpLink_Channel_sfReqBlockUserList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqCompleteFriendInvite
// (Native, Public)
// Parameters:
// struct FString                 CharnameToBeInvited            (Parm, NeedCtorLink)
// unsigned char                  IsPermit                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqCompleteFriendInvite(const struct FString& CharnameToBeInvited, unsigned char IsPermit)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqCompleteFriendInvite");

	UBTTcpLink_Channel_sfReqCompleteFriendInvite_Params params;
	params.CharnameToBeInvited = CharnameToBeInvited;
	params.IsPermit = IsPermit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckConfirmFriendInvite
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckConfirmFriendInvite(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckConfirmFriendInvite");

	UBTTcpLink_Channel_sfAckConfirmFriendInvite_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqConfirmFriendInvite
// (Native, Public)
// Parameters:
// int                            ReqUserID                      (Parm)
// struct FString                 ReqedCharname                  (Parm, NeedCtorLink)
// unsigned char                  IsPermit                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqConfirmFriendInvite(int ReqUserID, const struct FString& ReqedCharname, unsigned char IsPermit)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqConfirmFriendInvite");

	UBTTcpLink_Channel_sfReqConfirmFriendInvite_Params params;
	params.ReqUserID = ReqUserID;
	params.ReqedCharname = ReqedCharname;
	params.IsPermit = IsPermit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRecvFriendInvite
// (Native, Public)
// Parameters:
// int                            ReqUserID                      (Parm)
// struct FString                 ReqCharname                    (Parm, NeedCtorLink)
// struct FString                 InviteMsg                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRecvFriendInvite(int ReqUserID, const struct FString& ReqCharname, const struct FString& InviteMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRecvFriendInvite");

	UBTTcpLink_Channel_sfReqRecvFriendInvite_Params params;
	params.ReqUserID = ReqUserID;
	params.ReqCharname = ReqCharname;
	params.InviteMsg = InviteMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSendFriendInvite
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSendFriendInvite(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSendFriendInvite");

	UBTTcpLink_Channel_sfAckSendFriendInvite_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSendFriendInvite
// (Native, Public)
// Parameters:
// int                            InviteUserID                   (Parm)
// struct FString                 InviteName                     (Parm, NeedCtorLink)
// struct FString                 InviteMsg                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSendFriendInvite(int InviteUserID, const struct FString& InviteName, const struct FString& InviteMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSendFriendInvite");

	UBTTcpLink_Channel_sfReqSendFriendInvite_Params params;
	params.InviteUserID = InviteUserID;
	params.InviteName = InviteName;
	params.InviteMsg = InviteMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChatNormal
// (Native, Public)
// Parameters:
// int                            id                             (Parm)
// struct FString                 Sender                         (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChatNormal(int id, const struct FString& Sender, const struct FString& Message, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChatNormal");

	UBTTcpLink_Channel_sfAckChatNormal_Params params;
	params.id = id;
	params.Sender = Sender;
	params.Message = Message;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChatNormal
// (Native, Public)
// Parameters:
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChatNormal(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChatNormal");

	UBTTcpLink_Channel_sfReqChatNormal_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckDummy
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckDummy(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckDummy");

	UBTTcpLink_Channel_sfAckDummy_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDummy
// (Native, Public)
// Parameters:
// int                            DelayCheck                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDummy(int DelayCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDummy");

	UBTTcpLink_Channel_sfReqDummy_Params params;
	params.DelayCheck = DelayCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckConfirmItemChanged
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckConfirmItemChanged(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckConfirmItemChanged");

	UBTTcpLink_Channel_sfAckConfirmItemChanged_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqConfirmItemChanged
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqConfirmItemChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqConfirmItemChanged");

	UBTTcpLink_Channel_sfReqConfirmItemChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEquipItem
// (Native, Public)
// Parameters:
// int                            ChangedNewItemID               (Parm)
// struct FBtrDouble              ChangedNewUniqueID             (Parm)
// int                            ChangedNewSlotPosition         (Parm)
// int                            ChangedOldItemID               (Parm)
// struct FBtrDouble              ChangedOldUniqueID             (Parm)
// int                            ChangedOldSlotPosition         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEquipItem(int ChangedNewItemID, const struct FBtrDouble& ChangedNewUniqueID, int ChangedNewSlotPosition, int ChangedOldItemID, const struct FBtrDouble& ChangedOldUniqueID, int ChangedOldSlotPosition, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEquipItem");

	UBTTcpLink_Channel_sfAckEquipItem_Params params;
	params.ChangedNewItemID = ChangedNewItemID;
	params.ChangedNewUniqueID = ChangedNewUniqueID;
	params.ChangedNewSlotPosition = ChangedNewSlotPosition;
	params.ChangedOldItemID = ChangedOldItemID;
	params.ChangedOldUniqueID = ChangedOldUniqueID;
	params.ChangedOldSlotPosition = ChangedOldSlotPosition;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqEquipItem
// (Native, Public)
// Parameters:
// int                            ItemID                         (Parm)
// struct FBtrDouble              UniqueID                       (Parm)
// int                            SlotPosition                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqEquipItem(int ItemID, const struct FBtrDouble& UniqueID, int SlotPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqEquipItem");

	UBTTcpLink_Channel_sfReqEquipItem_Params params;
	params.ItemID = ItemID;
	params.UniqueID = UniqueID;
	params.SlotPosition = SlotPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckItemListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckItemListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckItemListEnd");

	UBTTcpLink_Channel_sfAckItemListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckItemList
// (Native, Public)
// Parameters:
// TArray<struct FBtrDouble>      UniqueID                       (Parm, NeedCtorLink)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<int>                    ItemType                       (Parm, NeedCtorLink)
// TArray<int>                    Durability                     (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UntilTime                      (Parm, NeedCtorLink)
// TArray<int>                    SlotPosition                   (Parm, NeedCtorLink)
// TArray<int>                    AddPartsID                     (Parm, NeedCtorLink)
// TArray<int>                    DamageDegree                   (Parm, NeedCtorLink)
// TArray<unsigned char>          ItemState                      (Parm, NeedCtorLink)
// TArray<int>                    StackCount                     (Parm, NeedCtorLink)
// TArray<int>                    PaintID                        (Parm, NeedCtorLink)
// TArray<int>                    TradeCount                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckItemList(TArray<struct FBtrDouble> UniqueID, TArray<int> ItemID, TArray<int> ItemType, TArray<int> Durability, TArray<struct FBtrDouble> UntilTime, TArray<int> SlotPosition, TArray<int> AddPartsID, TArray<int> DamageDegree, TArray<unsigned char> ItemState, TArray<int> StackCount, TArray<int> PaintID, TArray<int> TradeCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckItemList");

	UBTTcpLink_Channel_sfAckItemList_Params params;
	params.UniqueID = UniqueID;
	params.ItemID = ItemID;
	params.ItemType = ItemType;
	params.Durability = Durability;
	params.UntilTime = UntilTime;
	params.SlotPosition = SlotPosition;
	params.AddPartsID = AddPartsID;
	params.DamageDegree = DamageDegree;
	params.ItemState = ItemState;
	params.StackCount = StackCount;
	params.PaintID = PaintID;
	params.TradeCount = TradeCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckItemListStart
// (Native, Public)
// Parameters:
// int                            Count                          (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckItemListStart(int Count, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckItemListStart");

	UBTTcpLink_Channel_sfAckItemListStart_Params params;
	params.Count = Count;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqItemList
// (Native, Public)
// Parameters:
// int                            UID                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqItemList(int UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqItemList");

	UBTTcpLink_Channel_sfReqItemList_Params params;
	params.UID = UID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEntrySkillList
// (Native, Public)
// Parameters:
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<int>                    SkillIDs                       (Parm, NeedCtorLink)
// TArray<int>                    SlotPositions                  (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEntrySkillList(TArray<int> UserIDs, TArray<int> SkillIDs, TArray<int> SlotPositions, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEntrySkillList");

	UBTTcpLink_Channel_sfAckEntrySkillList_Params params;
	params.UserIDs = UserIDs;
	params.SkillIDs = SkillIDs;
	params.SlotPositions = SlotPositions;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqEntrySkillList
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqEntrySkillList(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqEntrySkillList");

	UBTTcpLink_Channel_sfReqEntrySkillList_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEntryItemList
// (Native, Public)
// Parameters:
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    SlotPositions                  (Parm, NeedCtorLink)
// TArray<int>                    AddPartsID                     (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueID                       (Parm, NeedCtorLink)
// TArray<int>                    PaintID                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEntryItemList(TArray<int> UserIDs, TArray<int> ItemIDs, TArray<int> SlotPositions, TArray<int> AddPartsID, TArray<struct FBtrDouble> UniqueID, TArray<int> PaintID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEntryItemList");

	UBTTcpLink_Channel_sfAckEntryItemList_Params params;
	params.UserIDs = UserIDs;
	params.ItemIDs = ItemIDs;
	params.SlotPositions = SlotPositions;
	params.AddPartsID = AddPartsID;
	params.UniqueID = UniqueID;
	params.PaintID = PaintID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqEntryItemList
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqEntryItemList(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqEntryItemList");

	UBTTcpLink_Channel_sfReqEntryItemList_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangeUserState
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<unsigned char>          Positions                      (Parm, NeedCtorLink)
// TArray<int>                    Numbers                        (Parm, NeedCtorLink)
// TArray<unsigned char>          OldStates                      (Parm, NeedCtorLink)
// TArray<unsigned char>          NewStates                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangeUserState(int Result, const struct FString& ErrMsg, TArray<int> UserIDs, TArray<unsigned char> Positions, TArray<int> Numbers, TArray<unsigned char> OldStates, TArray<unsigned char> NewStates)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangeUserState");

	UBTTcpLink_Channel_sfAckChangeUserState_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserIDs = UserIDs;
	params.Positions = Positions;
	params.Numbers = Numbers;
	params.OldStates = OldStates;
	params.NewStates = NewStates;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChangeUserState
// (Native, Public)
// Parameters:
// unsigned char                  NewState                       (Parm)
// unsigned char                  CheckPlaying                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChangeUserState(unsigned char NewState, unsigned char CheckPlaying)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChangeUserState");

	UBTTcpLink_Channel_sfReqChangeUserState_Params params;
	params.NewState = NewState;
	params.CheckPlaying = CheckPlaying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckExteriorRoomState
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckExteriorRoomState()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckExteriorRoomState");

	UBTTcpLink_Channel_sfAckExteriorRoomState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqExteriorRoomState
// (Native, Public)
// Parameters:
// int                            RoomNumber                     (Parm)
// unsigned char                  RoomState                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqExteriorRoomState(int RoomNumber, unsigned char RoomState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqExteriorRoomState");

	UBTTcpLink_Channel_sfReqExteriorRoomState_Params params;
	params.RoomNumber = RoomNumber;
	params.RoomState = RoomState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckExteriorRoomUserCount
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckExteriorRoomUserCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckExteriorRoomUserCount");

	UBTTcpLink_Channel_sfAckExteriorRoomUserCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqExteriorRoomUserCount
// (Native, Public)
// Parameters:
// int                            RoomNumber                     (Parm)
// int                            RoomUserCount                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqExteriorRoomUserCount(int RoomNumber, int RoomUserCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqExteriorRoomUserCount");

	UBTTcpLink_Channel_sfReqExteriorRoomUserCount_Params params;
	params.RoomNumber = RoomNumber;
	params.RoomUserCount = RoomUserCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckExteriorRoomInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckExteriorRoomInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckExteriorRoomInfo");

	UBTTcpLink_Channel_sfAckExteriorRoomInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqExteriorRoomInfo
// (Native, Public)
// Parameters:
// int                            SP                             (Parm)
// int                            RoomNumber                     (Parm)
// unsigned char                  IsPW                           (Parm)
// struct FString                 RoomName                       (Parm, NeedCtorLink)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// struct FString                 ModeName                       (Parm, NeedCtorLink)
// int                            MapNum                         (Parm)
// int                            ModeNum                        (Parm)
// unsigned char                  IsTeamBalance                  (Parm)
// int                            MaxUserCount                   (Parm)
// int                            RoomUserCount                  (Parm)
// unsigned char                  RoomState                      (Parm)
// unsigned char                  BotDifficult                   (Parm)
// unsigned char                  WeaponLimit                    (Parm)
// unsigned char                  BotModeUserTeamNum             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqExteriorRoomInfo(int SP, int RoomNumber, unsigned char IsPW, const struct FString& RoomName, const struct FString& MapName, const struct FString& ModeName, int MapNum, int ModeNum, unsigned char IsTeamBalance, int MaxUserCount, int RoomUserCount, unsigned char RoomState, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqExteriorRoomInfo");

	UBTTcpLink_Channel_sfReqExteriorRoomInfo_Params params;
	params.SP = SP;
	params.RoomNumber = RoomNumber;
	params.IsPW = IsPW;
	params.RoomName = RoomName;
	params.MapName = MapName;
	params.ModeName = ModeName;
	params.MapNum = MapNum;
	params.ModeNum = ModeNum;
	params.IsTeamBalance = IsTeamBalance;
	params.MaxUserCount = MaxUserCount;
	params.RoomUserCount = RoomUserCount;
	params.RoomState = RoomState;
	params.BotDifficult = BotDifficult;
	params.WeaponLimit = WeaponLimit;
	params.BotModeUserTeamNum = BotModeUserTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetBootyChoose
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  GiveType                       (Parm)
// struct FBtrDouble              ItemUniqueNumber               (Parm)
// int                            ItemID                         (Parm)
// int                            PartID                         (Parm)
// unsigned char                  ItemType                       (Parm)
// struct FBtrDouble              UntilTime                      (Parm)
// int                            StackCount                     (Parm)
// int                            PaintID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetBootyChoose(int Result, const struct FString& ErrMsg, unsigned char GiveType, const struct FBtrDouble& ItemUniqueNumber, int ItemID, int PartID, unsigned char ItemType, const struct FBtrDouble& UntilTime, int StackCount, int PaintID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetBootyChoose");

	UBTTcpLink_Channel_sfAckGetBootyChoose_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.GiveType = GiveType;
	params.ItemUniqueNumber = ItemUniqueNumber;
	params.ItemID = ItemID;
	params.PartID = PartID;
	params.ItemType = ItemType;
	params.UntilTime = UntilTime;
	params.StackCount = StackCount;
	params.PaintID = PaintID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGetBooty
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    PrizeWinUserID                 (Parm, NeedCtorLink)
// TArray<int>                    BootyItemID                    (Parm, NeedCtorLink)
// TArray<int>                    BootyPartsID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGetBooty(int Result, const struct FString& ErrMsg, TArray<int> PrizeWinUserID, TArray<int> BootyItemID, TArray<int> BootyPartsID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGetBooty");

	UBTTcpLink_Channel_sfAckGetBooty_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PrizeWinUserID = PrizeWinUserID;
	params.BootyItemID = BootyItemID;
	params.BootyPartsID = BootyPartsID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGetBooty
// (Native, Public)
// Parameters:
// int                            RoomNumber                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGetBooty(int RoomNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGetBooty");

	UBTTcpLink_Channel_sfReqGetBooty_Params params;
	params.RoomNumber = RoomNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSetUserBootySeedValue
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSetUserBootySeedValue(int UserID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSetUserBootySeedValue");

	UBTTcpLink_Channel_sfAckSetUserBootySeedValue_Params params;
	params.UserID = UserID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSetUserBootySeedValue
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            SeedValue                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSetUserBootySeedValue(int UserID, int SeedValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSetUserBootySeedValue");

	UBTTcpLink_Channel_sfReqSetUserBootySeedValue_Params params;
	params.UserID = UserID;
	params.SeedValue = SeedValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangeRoomSetting
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FGameRoomInfo           RoomInfo                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangeRoomSetting(int Result, const struct FString& ErrMsg, const struct FGameRoomInfo& RoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangeRoomSetting");

	UBTTcpLink_Channel_sfAckChangeRoomSetting_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.RoomInfo = RoomInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChangeRoomSetting
// (Native, Public)
// Parameters:
// struct FGameRoomInfo           RoomInfo                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChangeRoomSetting(const struct FGameRoomInfo& RoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChangeRoomSetting");

	UBTTcpLink_Channel_sfReqChangeRoomSetting_Params params;
	params.RoomInfo = RoomInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyLevelUp
// (Native, Public)
// Parameters:
// int                            LevelUpUserID                  (Parm)
// int                            Level                          (Parm)
// int                            Exp                            (Parm)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<int>                    PartID                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyLevelUp(int LevelUpUserID, int Level, int Exp, TArray<int> ItemID, TArray<int> PartID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyLevelUp");

	UBTTcpLink_Channel_sfReqNotifyLevelUp_Params params;
	params.LevelUpUserID = LevelUpUserID;
	params.Level = Level;
	params.Exp = Exp;
	params.ItemID = ItemID;
	params.PartID = PartID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckClientUdpInfoList
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// TArray<struct FString>         IP                             (Parm, NeedCtorLink)
// TArray<int>                    Port                           (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckClientUdpInfoList(int Result, const struct FString& ErrMsg, TArray<int> UID, TArray<struct FString> IP, TArray<int> Port)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckClientUdpInfoList");

	UBTTcpLink_Channel_sfAckClientUdpInfoList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UID = UID;
	params.IP = IP;
	params.Port = Port;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqClientUdpInfoList
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqClientUdpInfoList(int GameNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqClientUdpInfoList");

	UBTTcpLink_Channel_sfReqClientUdpInfoList_Params params;
	params.GameNum = GameNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRegisterOtherUdpInfo
// (Native, Public)
// Parameters:
// int                            UID                            (Parm)
// struct FString                 IP                             (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// unsigned char                  NatType                        (Parm)
// unsigned char                  Intervention                   (Parm)
// struct FString                 HostInnerIP                    (Parm, NeedCtorLink)
// int                            HostInnerPort                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRegisterOtherUdpInfo(int UID, const struct FString& IP, int Port, unsigned char NatType, unsigned char Intervention, const struct FString& HostInnerIP, int HostInnerPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRegisterOtherUdpInfo");

	UBTTcpLink_Channel_sfAckRegisterOtherUdpInfo_Params params;
	params.UID = UID;
	params.IP = IP;
	params.Port = Port;
	params.NatType = NatType;
	params.Intervention = Intervention;
	params.HostInnerIP = HostInnerIP;
	params.HostInnerPort = HostInnerPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRegisterMyUdpInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRegisterMyUdpInfo(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRegisterMyUdpInfo");

	UBTTcpLink_Channel_sfAckRegisterMyUdpInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRegisterMyUdpInfo
// (Native, Public)
// Parameters:
// unsigned char                  IsHost                         (Parm)
// struct FString                 IP                             (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// unsigned char                  Intervention                   (Parm)
// struct FString                 HostInnerIP                    (Parm, NeedCtorLink)
// int                            HostInnerPort                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRegisterMyUdpInfo(unsigned char IsHost, const struct FString& IP, int Port, unsigned char Intervention, const struct FString& HostInnerIP, int HostInnerPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRegisterMyUdpInfo");

	UBTTcpLink_Channel_sfReqRegisterMyUdpInfo_Params params;
	params.IsHost = IsHost;
	params.IP = IP;
	params.Port = Port;
	params.Intervention = Intervention;
	params.HostInnerIP = HostInnerIP;
	params.HostInnerPort = HostInnerPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckNotifyClientJoinTime
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckNotifyClientJoinTime(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckNotifyClientJoinTime");

	UBTTcpLink_Channel_sfAckNotifyClientJoinTime_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqNotifyClientJoinTime
// (Native, Public)
// Parameters:
// int                            JoinedClientID                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqNotifyClientJoinTime(int JoinedClientID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqNotifyClientJoinTime");

	UBTTcpLink_Channel_sfReqNotifyClientJoinTime_Params params;
	params.JoinedClientID = JoinedClientID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangeNewGuest
// (Native, Public)
// Parameters:
// struct FString                 HostIP                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangeNewGuest(const struct FString& HostIP)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangeNewGuest");

	UBTTcpLink_Channel_sfAckChangeNewGuest_Params params;
	params.HostIP = HostIP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangeHost
// (Native, Public)
// Parameters:
// unsigned char                  ClientNum                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangeHost(unsigned char ClientNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangeHost");

	UBTTcpLink_Channel_sfAckChangeHost_Params params;
	params.ClientNum = ClientNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckDisconnectGame
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            DisconnectUserID               (Parm)
// struct FString                 DisconnectUserName             (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckDisconnectGame(int Result, int DisconnectUserID, const struct FString& DisconnectUserName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckDisconnectGame");

	UBTTcpLink_Channel_sfAckDisconnectGame_Params params;
	params.Result = Result;
	params.DisconnectUserID = DisconnectUserID;
	params.DisconnectUserName = DisconnectUserName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqDisconnectGame
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqDisconnectGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqDisconnectGame");

	UBTTcpLink_Channel_sfReqDisconnectGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckConnectGame
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckConnectGame(int UserID, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckConnectGame");

	UBTTcpLink_Channel_sfAckConnectGame_Params params;
	params.UserID = UserID;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqConnectGame
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqConnectGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqConnectGame");

	UBTTcpLink_Channel_sfReqConnectGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRelayServerOff
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRelayServerOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRelayServerOff");

	UBTTcpLink_Channel_sfReqRelayServerOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRelayServerOn
// (Native, Public)
// Parameters:
// struct FString                 RelayServerIP                  (Parm, NeedCtorLink)
// int                            RelayServerPortNum             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRelayServerOn(const struct FString& RelayServerIP, int RelayServerPortNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRelayServerOn");

	UBTTcpLink_Channel_sfReqRelayServerOn_Params params;
	params.RelayServerIP = RelayServerIP;
	params.RelayServerPortNum = RelayServerPortNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGameOver
// (Native, Public)
// Parameters:
// int                            UID                            (Parm)
// int                            GameRoomNumber                 (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGameOver(int UID, int GameRoomNumber, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGameOver");

	UBTTcpLink_Channel_sfAckGameOver_Params params;
	params.UID = UID;
	params.GameRoomNumber = GameRoomNumber;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGameOver
// (Native, Public)
// Parameters:
// int                            UID                            (Parm)
// int                            GameRoomNumber                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGameOver(int UID, int GameRoomNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGameOver");

	UBTTcpLink_Channel_sfReqGameOver_Params params;
	params.UID = UID;
	params.GameRoomNumber = GameRoomNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckIsGameRoomPlaying
// (Native, Public)
// Parameters:
// int                            GameRoomNum                    (Parm)
// unsigned char                  IsPlaying                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckIsGameRoomPlaying(int GameRoomNum, unsigned char IsPlaying)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckIsGameRoomPlaying");

	UBTTcpLink_Channel_sfAckIsGameRoomPlaying_Params params;
	params.GameRoomNum = GameRoomNum;
	params.IsPlaying = IsPlaying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqIsGameRoomPlaying
// (Native, Public)
// Parameters:
// int                            GameRoomNum                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqIsGameRoomPlaying(int GameRoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqIsGameRoomPlaying");

	UBTTcpLink_Channel_sfReqIsGameRoomPlaying_Params params;
	params.GameRoomNum = GameRoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGameRoomDestroy
// (Native, Public)
// Parameters:
// int                            GameRoomNum                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGameRoomDestroy(int GameRoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGameRoomDestroy");

	UBTTcpLink_Channel_sfAckGameRoomDestroy_Params params;
	params.GameRoomNum = GameRoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangeRoomMaxNum
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            Number                         (Parm)
// int                            TeamNumber                     (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangeRoomMaxNum(int GameNum, int Number, int TeamNumber, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangeRoomMaxNum");

	UBTTcpLink_Channel_sfAckChangeRoomMaxNum_Params params;
	params.GameNum = GameNum;
	params.Number = Number;
	params.TeamNumber = TeamNumber;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChangeRoomMaxNum
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// int                            Number                         (Parm)
// int                            TeamNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChangeRoomMaxNum(int GameNum, int UID, int Number, int TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChangeRoomMaxNum");

	UBTTcpLink_Channel_sfReqChangeRoomMaxNum_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.Number = Number;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckUpdateScoreResult
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckUpdateScoreResult(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckUpdateScoreResult");

	UBTTcpLink_Channel_sfAckUpdateScoreResult_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckUpdateScore
// (Native, Public)
// Parameters:
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<struct FString>         NickNames                      (Parm, NeedCtorLink)
// TArray<unsigned char>          TeamIDs                        (Parm, NeedCtorLink)
// TArray<int>                    Scores                         (Parm, NeedCtorLink)
// TArray<int>                    Kills                          (Parm, NeedCtorLink)
// TArray<int>                    Assists                        (Parm, NeedCtorLink)
// TArray<int>                    Deaths                         (Parm, NeedCtorLink)
// TArray<int>                    EXPs                           (Parm, NeedCtorLink)
// TArray<int>                    EXPBonuses                     (Parm, NeedCtorLink)
// TArray<int>                    Points                         (Parm, NeedCtorLink)
// TArray<int>                    PointBonuses                   (Parm, NeedCtorLink)
// TArray<int>                    TeamScores                     (Parm, NeedCtorLink)
// TArray<int>                    BonusOwnerID                   (Parm, NeedCtorLink)
// TArray<int>                    BonusID                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckUpdateScore(TArray<int> UserIDs, TArray<struct FString> NickNames, TArray<unsigned char> TeamIDs, TArray<int> Scores, TArray<int> Kills, TArray<int> Assists, TArray<int> Deaths, TArray<int> EXPs, TArray<int> EXPBonuses, TArray<int> Points, TArray<int> PointBonuses, TArray<int> TeamScores, TArray<int> BonusOwnerID, TArray<int> BonusID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckUpdateScore");

	UBTTcpLink_Channel_sfAckUpdateScore_Params params;
	params.UserIDs = UserIDs;
	params.NickNames = NickNames;
	params.TeamIDs = TeamIDs;
	params.Scores = Scores;
	params.Kills = Kills;
	params.Assists = Assists;
	params.Deaths = Deaths;
	params.EXPs = EXPs;
	params.EXPBonuses = EXPBonuses;
	params.Points = Points;
	params.PointBonuses = PointBonuses;
	params.TeamScores = TeamScores;
	params.BonusOwnerID = BonusOwnerID;
	params.BonusID = BonusID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqUpdateScore
// (Native, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<int>                    Kills                          (Parm, NeedCtorLink)
// TArray<int>                    Assists                        (Parm, NeedCtorLink)
// TArray<int>                    Deaths                         (Parm, NeedCtorLink)
// TArray<int>                    EXPs                           (Parm, NeedCtorLink)
// TArray<int>                    Points                         (Parm, NeedCtorLink)
// TArray<int>                    Scores                         (Parm, NeedCtorLink)
// TArray<int>                    TeamScores                     (Parm, NeedCtorLink)
// TArray<int>                    RoundJoin                      (Parm, NeedCtorLink)
// TArray<int>                    TimeJoin                       (Parm, NeedCtorLink)
// int                            Playtime                       (Parm)
// unsigned char                  GameEndType                    (Parm)
// TArray<struct FString>         UserNames                      (Parm, NeedCtorLink)
// unsigned char                  IsAIClear                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqUpdateScore(int GameNumber, TArray<int> UserIDs, TArray<int> Kills, TArray<int> Assists, TArray<int> Deaths, TArray<int> EXPs, TArray<int> Points, TArray<int> Scores, TArray<int> TeamScores, TArray<int> RoundJoin, TArray<int> TimeJoin, int Playtime, unsigned char GameEndType, TArray<struct FString> UserNames, unsigned char IsAIClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqUpdateScore");

	UBTTcpLink_Channel_sfReqUpdateScore_Params params;
	params.GameNumber = GameNumber;
	params.UserIDs = UserIDs;
	params.Kills = Kills;
	params.Assists = Assists;
	params.Deaths = Deaths;
	params.EXPs = EXPs;
	params.Points = Points;
	params.Scores = Scores;
	params.TeamScores = TeamScores;
	params.RoundJoin = RoundJoin;
	params.TimeJoin = TimeJoin;
	params.Playtime = Playtime;
	params.GameEndType = GameEndType;
	params.UserNames = UserNames;
	params.IsAIClear = IsAIClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckStartGame
// (Native, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// int                            ClientsCount                   (Parm)
// int                            StartSeed                      (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckStartGame(int GameNumber, int ClientsCount, int StartSeed, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckStartGame");

	UBTTcpLink_Channel_sfAckStartGame_Params params;
	params.GameNumber = GameNumber;
	params.ClientsCount = ClientsCount;
	params.StartSeed = StartSeed;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqStartGame
// (Native, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqStartGame(int GameNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqStartGame");

	UBTTcpLink_Channel_sfReqStartGame_Params params;
	params.GameNumber = GameNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGameHostInfo
// (Native, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// struct FString                 IP                             (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGameHostInfo(int GameNumber, const struct FString& UserID, const struct FString& IP, int Port, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGameHostInfo");

	UBTTcpLink_Channel_sfAckGameHostInfo_Params params;
	params.GameNumber = GameNumber;
	params.UserID = UserID;
	params.IP = IP;
	params.Port = Port;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGameHostInfo
// (Native, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGameHostInfo(int GameNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGameHostInfo");

	UBTTcpLink_Channel_sfReqGameHostInfo_Params params;
	params.GameNumber = GameNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckIsHostAvailable
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckIsHostAvailable(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckIsHostAvailable");

	UBTTcpLink_Channel_sfAckIsHostAvailable_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqIsHostAvailable
// (Native, Public)
// Parameters:
// struct FString                 MyIp                           (Parm, NeedCtorLink)
// int                            CPUGrade                       (Parm)
// int                            RamGrade                       (Parm)
// int                            VGAGrade                       (Parm)
// int                            VGARam                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqIsHostAvailable(const struct FString& MyIp, int CPUGrade, int RamGrade, int VGAGrade, int VGARam)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqIsHostAvailable");

	UBTTcpLink_Channel_sfReqIsHostAvailable_Params params;
	params.MyIp = MyIp;
	params.CPUGrade = CPUGrade;
	params.RamGrade = RamGrade;
	params.VGAGrade = VGAGrade;
	params.VGARam = VGARam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangeTeam
// (Native, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            UID                            (Parm)
// int                            TeamNum                        (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangeTeam(int GameNumber, const struct FString& UserID, int UID, int TeamNum, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangeTeam");

	UBTTcpLink_Channel_sfAckChangeTeam_Params params;
	params.GameNumber = GameNumber;
	params.UserID = UserID;
	params.UID = UID;
	params.TeamNum = TeamNum;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChangeTeam
// (Native, Public)
// Parameters:
// int                            TeamNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChangeTeam(int TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChangeTeam");

	UBTTcpLink_Channel_sfReqChangeTeam_Params params;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangeRoomOwner
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            OldOwner                       (Parm)
// int                            NewOwner                       (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangeRoomOwner(int GameNum, int OldOwner, int NewOwner, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangeRoomOwner");

	UBTTcpLink_Channel_sfAckChangeRoomOwner_Params params;
	params.GameNum = GameNum;
	params.OldOwner = OldOwner;
	params.NewOwner = NewOwner;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChangeRoomOwner
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// int                            NewOwner                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChangeRoomOwner(int GameNum, int UID, int NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChangeRoomOwner");

	UBTTcpLink_Channel_sfReqChangeRoomOwner_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChangeGameMode
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// struct FString                 GameMode                       (Parm, NeedCtorLink)
// unsigned char                  GameModeNum                    (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChangeGameMode(int GameNum, int UID, const struct FString& GameMode, unsigned char GameModeNum, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChangeGameMode");

	UBTTcpLink_Channel_sfAckChangeGameMode_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.GameMode = GameMode;
	params.GameModeNum = GameModeNum;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChangeGameMode
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// struct FString                 GameMode                       (Parm, NeedCtorLink)
// unsigned char                  GameModeNum                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChangeGameMode(int GameNum, int UID, const struct FString& GameMode, unsigned char GameModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChangeGameMode");

	UBTTcpLink_Channel_sfReqChangeGameMode_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.GameMode = GameMode;
	params.GameModeNum = GameModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckBanUser
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// int                            BanUID                         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckBanUser(int GameNum, int UID, int BanUID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckBanUser");

	UBTTcpLink_Channel_sfAckBanUser_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.BanUID = BanUID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqBanUser
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// int                            BanUID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqBanUser(int GameNum, int UID, int BanUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqBanUser");

	UBTTcpLink_Channel_sfReqBanUser_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.BanUID = BanUID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckSelectMap
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckSelectMap(int GameNum, int UID, const struct FString& MapName, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckSelectMap");

	UBTTcpLink_Channel_sfAckSelectMap_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.MapName = MapName;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqSelectMap
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqSelectMap(int GameNum, int UID, const struct FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqSelectMap");

	UBTTcpLink_Channel_sfReqSelectMap_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckGameRoomInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FGameRoomInfo           RoomInfo                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckGameRoomInfo(int Result, const struct FString& ErrMsg, const struct FGameRoomInfo& RoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckGameRoomInfo");

	UBTTcpLink_Channel_sfAckGameRoomInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.RoomInfo = RoomInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqGameRoomInfo
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqGameRoomInfo(int GameNum, int UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqGameRoomInfo");

	UBTTcpLink_Channel_sfReqGameRoomInfo_Params params;
	params.GameNum = GameNum;
	params.UID = UID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckCreateGameRoom
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// struct FString                 RoomOwnerIP                    (Parm, NeedCtorLink)
// struct FGameRoomInfo           NetRoomInfo                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckCreateGameRoom(int Result, const struct FString& ErrMsg, int UserID, const struct FString& RoomOwnerIP, const struct FGameRoomInfo& NetRoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckCreateGameRoom");

	UBTTcpLink_Channel_sfAckCreateGameRoom_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.RoomOwnerIP = RoomOwnerIP;
	params.NetRoomInfo = NetRoomInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqCreateGameRoom
// (Native, Public)
// Parameters:
// struct FGameRoomInfo           NetRoomInfo                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqCreateGameRoom(const struct FGameRoomInfo& NetRoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqCreateGameRoom");

	UBTTcpLink_Channel_sfReqCreateGameRoom_Params params;
	params.NetRoomInfo = NetRoomInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckExceedMaxUser
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckExceedMaxUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckExceedMaxUser");

	UBTTcpLink_Channel_sfAckExceedMaxUser_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLeaveRoom
// (Native, Public)
// Parameters:
// int                            Num                            (Parm)
// int                            UID                            (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLeaveRoom(int Num, int UID, const struct FString& UserID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLeaveRoom");

	UBTTcpLink_Channel_sfAckLeaveRoom_Params params;
	params.Num = Num;
	params.UID = UID;
	params.UserID = UserID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLeaveRoom
// (Native, Public)
// Parameters:
// int                            Num                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLeaveRoom(int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLeaveRoom");

	UBTTcpLink_Channel_sfReqLeaveRoom_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRoomUserList
// (Native, Public)
// Parameters:
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// TArray<struct FString>         UserName                       (Parm, NeedCtorLink)
// TArray<int>                    Grade                          (Parm, NeedCtorLink)
// TArray<int>                    TeamNum                        (Parm, NeedCtorLink)
// TArray<unsigned char>          Statue                         (Parm, NeedCtorLink)
// TArray<unsigned char>          IsHost                         (Parm, NeedCtorLink)
// TArray<struct FString>         UserIP                         (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    CM_Pattern                     (Parm, NeedCtorLink)
// TArray<int>                    CM_BG                          (Parm, NeedCtorLink)
// TArray<int>                    CM_BL                          (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookingFor                   (Parm, NeedCtorLink)
// TArray<int>                    GMUID                          (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRoomUserList(TArray<int> UID, TArray<struct FString> UserName, TArray<int> Grade, TArray<int> TeamNum, TArray<unsigned char> Statue, TArray<unsigned char> IsHost, TArray<struct FString> UserIP, TArray<struct FString> ClanName, TArray<int> CM_Pattern, TArray<int> CM_BG, TArray<int> CM_BL, TArray<unsigned char> IsLookingFor, TArray<int> GMUID, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRoomUserList");

	UBTTcpLink_Channel_sfAckRoomUserList_Params params;
	params.UID = UID;
	params.UserName = UserName;
	params.Grade = Grade;
	params.TeamNum = TeamNum;
	params.Statue = Statue;
	params.IsHost = IsHost;
	params.UserIP = UserIP;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.IsLookingFor = IsLookingFor;
	params.GMUID = GMUID;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRoomUserList
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRoomUserList(int GameNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRoomUserList");

	UBTTcpLink_Channel_sfReqRoomUserList_Params params;
	params.GameNum = GameNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEnterRoom
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            OwnerID                        (Parm)
// int                            UID                            (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            TeamNum                        (Parm)
// int                            Grade                          (Parm)
// struct FString                 UserIP                         (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            Clan_Mark_Pattern              (Parm)
// int                            Clan_Mark_BG                   (Parm)
// int                            Clan_Mark_BL                   (Parm)
// unsigned char                  IsLookFor                      (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ClanLevel                      (Parm)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEnterRoom(int GameNum, int OwnerID, int UID, const struct FString& UserID, int TeamNum, int Grade, const struct FString& UserIP, const struct FString& ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, const struct FString& ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEnterRoom");

	UBTTcpLink_Channel_sfAckEnterRoom_Params params;
	params.GameNum = GameNum;
	params.OwnerID = OwnerID;
	params.UID = UID;
	params.UserID = UserID;
	params.TeamNum = TeamNum;
	params.Grade = Grade;
	params.UserIP = UserIP;
	params.ClanName = ClanName;
	params.Clan_Mark_Pattern = Clan_Mark_Pattern;
	params.Clan_Mark_BG = Clan_Mark_BG;
	params.Clan_Mark_BL = Clan_Mark_BL;
	params.IsLookFor = IsLookFor;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqEnterRoom
// (Native, Public)
// Parameters:
// int                            GameNum                        (Parm)
// struct FString                 Password                       (Parm, NeedCtorLink)
// unsigned char                  RoomEnterType                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqEnterRoom(int GameNum, const struct FString& Password, unsigned char RoomEnterType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqEnterRoom");

	UBTTcpLink_Channel_sfReqEnterRoom_Params params;
	params.GameNum = GameNum;
	params.Password = Password;
	params.RoomEnterType = RoomEnterType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRoomListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRoomListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRoomListEnd");

	UBTTcpLink_Channel_sfAckRoomListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRoomList
// (Native, Public)
// Parameters:
// TArray<int>                    GameNum                        (Parm, NeedCtorLink)
// TArray<struct FString>         Title                          (Parm, NeedCtorLink)
// TArray<struct FString>         MapName                        (Parm, NeedCtorLink)
// TArray<int>                    MapNum                         (Parm, NeedCtorLink)
// TArray<unsigned char>          UserCount                      (Parm, NeedCtorLink)
// TArray<unsigned char>          MaxCount                       (Parm, NeedCtorLink)
// TArray<struct FString>         ModeName                       (Parm, NeedCtorLink)
// TArray<int>                    ModeNum                        (Parm, NeedCtorLink)
// TArray<unsigned char>          WeaponLimit                    (Parm, NeedCtorLink)
// TArray<unsigned char>          IsTeamBalance                  (Parm, NeedCtorLink)
// TArray<unsigned char>          Status                         (Parm, NeedCtorLink)
// TArray<struct FString>         RoomOwnerIP                    (Parm, NeedCtorLink)
// TArray<int>                    GameMinute                     (Parm, NeedCtorLink)
// TArray<struct FString>         RoomOwnerName                  (Parm, NeedCtorLink)
// TArray<unsigned char>          IsSpecial                      (Parm, NeedCtorLink)
// TArray<unsigned char>          IsPassword                     (Parm, NeedCtorLink)
// TArray<unsigned char>          BotDifficult                   (Parm, NeedCtorLink)
// TArray<unsigned char>          BotModeUserTeamNum             (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRoomList(TArray<int> GameNum, TArray<struct FString> Title, TArray<struct FString> MapName, TArray<int> MapNum, TArray<unsigned char> UserCount, TArray<unsigned char> MaxCount, TArray<struct FString> ModeName, TArray<int> ModeNum, TArray<unsigned char> WeaponLimit, TArray<unsigned char> IsTeamBalance, TArray<unsigned char> Status, TArray<struct FString> RoomOwnerIP, TArray<int> GameMinute, TArray<struct FString> RoomOwnerName, TArray<unsigned char> IsSpecial, TArray<unsigned char> IsPassword, TArray<unsigned char> BotDifficult, TArray<unsigned char> BotModeUserTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRoomList");

	UBTTcpLink_Channel_sfAckRoomList_Params params;
	params.GameNum = GameNum;
	params.Title = Title;
	params.MapName = MapName;
	params.MapNum = MapNum;
	params.UserCount = UserCount;
	params.MaxCount = MaxCount;
	params.ModeName = ModeName;
	params.ModeNum = ModeNum;
	params.WeaponLimit = WeaponLimit;
	params.IsTeamBalance = IsTeamBalance;
	params.Status = Status;
	params.RoomOwnerIP = RoomOwnerIP;
	params.GameMinute = GameMinute;
	params.RoomOwnerName = RoomOwnerName;
	params.IsSpecial = IsSpecial;
	params.IsPassword = IsPassword;
	params.BotDifficult = BotDifficult;
	params.BotModeUserTeamNum = BotModeUserTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckRoomListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// int                            Count                          (Parm)
// int                            StartIndex                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckRoomListStart(int Result, int TotalCount, int Count, int StartIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckRoomListStart");

	UBTTcpLink_Channel_sfAckRoomListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;
	params.Count = Count;
	params.StartIndex = StartIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqRoomList
// (Native, Public)
// Parameters:
// int                            id                             (Parm)
// int                            StartIndex                     (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqRoomList(int id, int StartIndex, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqRoomList");

	UBTTcpLink_Channel_sfReqRoomList_Params params;
	params.id = id;
	params.StartIndex = StartIndex;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChannelUserList
// (Native, Public)
// Parameters:
// int                            TotalCount                     (Parm)
// int                            Count                          (Parm)
// int                            StartIndex                     (Parm)
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// TArray<struct FString>         UserID                         (Parm, NeedCtorLink)
// TArray<int>                    UserLevels                     (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanPattern                    (Parm, NeedCtorLink)
// TArray<int>                    ClanBG                         (Parm, NeedCtorLink)
// TArray<int>                    ClanBL                         (Parm, NeedCtorLink)
// TArray<int>                    ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookForClan                  (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChannelUserList(int TotalCount, int Count, int StartIndex, TArray<int> UID, TArray<struct FString> UserID, TArray<int> UserLevels, TArray<struct FString> ClanName, TArray<int> ClanPattern, TArray<int> ClanBG, TArray<int> ClanBL, TArray<int> ClanGrade, TArray<int> ClanWin, TArray<int> ClanLose, TArray<unsigned char> IsLookForClan, int Result, const struct FString& ErrMsg, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChannelUserList");

	UBTTcpLink_Channel_sfAckChannelUserList_Params params;
	params.TotalCount = TotalCount;
	params.Count = Count;
	params.StartIndex = StartIndex;
	params.UID = UID;
	params.UserID = UserID;
	params.UserLevels = UserLevels;
	params.ClanName = ClanName;
	params.ClanPattern = ClanPattern;
	params.ClanBG = ClanBG;
	params.ClanBL = ClanBL;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.IsLookForClan = IsLookForClan;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChannelUserList
// (Native, Public)
// Parameters:
// int                            id                             (Parm)
// int                            StartIndex                     (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChannelUserList(int id, int StartIndex, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChannelUserList");

	UBTTcpLink_Channel_sfReqChannelUserList_Params params;
	params.id = id;
	params.StartIndex = StartIndex;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLeaveChannel
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            UID                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLeaveChannel(int Result, const struct FString& UserID, int UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLeaveChannel");

	UBTTcpLink_Channel_sfAckLeaveChannel_Params params;
	params.Result = Result;
	params.UserID = UserID;
	params.UID = UID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLeaveChannel
// (Native, Public)
// Parameters:
// int                            id                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLeaveChannel(int id)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLeaveChannel");

	UBTTcpLink_Channel_sfReqLeaveChannel_Params params;
	params.id = id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckEnterChannel
// (Native, Public)
// Parameters:
// int                            id                             (Parm)
// int                            UID                            (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            Level                          (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            ClanMarkPattern                (Parm)
// int                            ClanMarkBG                     (Parm)
// int                            ClanMarkBL                     (Parm)
// int                            ClanGrade                      (Parm)
// int                            ClanWin                        (Parm)
// int                            ClanLose                       (Parm)
// unsigned char                  IsLookFor                      (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ClanLevel                      (Parm)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckEnterChannel(int id, int UID, const struct FString& UserID, int Level, const struct FString& ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, const struct FString& ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckEnterChannel");

	UBTTcpLink_Channel_sfAckEnterChannel_Params params;
	params.id = id;
	params.UID = UID;
	params.UserID = UserID;
	params.Level = Level;
	params.ClanName = ClanName;
	params.ClanMarkPattern = ClanMarkPattern;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.IsLookFor = IsLookFor;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqEnterChannel
// (Native, Public)
// Parameters:
// int                            id                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqEnterChannel(int id)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqEnterChannel");

	UBTTcpLink_Channel_sfReqEnterChannel_Params params;
	params.id = id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckChannelList
// (Native, Public)
// Parameters:
// TArray<int>                    id                             (Parm, NeedCtorLink)
// TArray<struct FString>         Title                          (Parm, NeedCtorLink)
// TArray<int>                    CurUser                        (Parm, NeedCtorLink)
// TArray<int>                    MaxUser                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckChannelList(TArray<int> id, TArray<struct FString> Title, TArray<int> CurUser, TArray<int> MaxUser)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckChannelList");

	UBTTcpLink_Channel_sfAckChannelList_Params params;
	params.id = id;
	params.Title = Title;
	params.CurUser = CurUser;
	params.MaxUser = MaxUser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqChannelList
// (Native, Public)
// Parameters:
// int                            bChannelType                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqChannelList(int bChannelType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqChannelList");

	UBTTcpLink_Channel_sfReqChannelList_Params params;
	params.bChannelType = bChannelType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckFriendListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckFriendListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckFriendListEnd");

	UBTTcpLink_Channel_sfAckFriendListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckFriendList
// (Native, Public)
// Parameters:
// TArray<struct FString>         FriendName                     (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLogOn                        (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    CM_Pattern                     (Parm, NeedCtorLink)
// TArray<int>                    CM_BG                          (Parm, NeedCtorLink)
// TArray<int>                    CM_BL                          (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookForClan                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckFriendList(TArray<struct FString> FriendName, TArray<unsigned char> IsLogOn, TArray<struct FString> ClanName, TArray<int> CM_Pattern, TArray<int> CM_BG, TArray<int> CM_BL, TArray<int> LevelMarkID, TArray<int> ClanLevel, TArray<int> Level, TArray<unsigned char> IsLookForClan)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckFriendList");

	UBTTcpLink_Channel_sfAckFriendList_Params params;
	params.FriendName = FriendName;
	params.IsLogOn = IsLogOn;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.LevelMarkID = LevelMarkID;
	params.ClanLevel = ClanLevel;
	params.Level = Level;
	params.IsLookForClan = IsLookForClan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckFriendListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckFriendListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckFriendListStart");

	UBTTcpLink_Channel_sfAckFriendListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqFriendList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqFriendList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqFriendList");

	UBTTcpLink_Channel_sfReqFriendList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckCharInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            CM_Pattern                     (Parm)
// int                            CM_BG                          (Parm)
// int                            CM_BL                          (Parm)
// struct FCharInfo               stCharInfo                     (Parm)
// unsigned char                  InClanRank                     (Parm)
// int                            ClanLevel                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckCharInfo(int Result, const struct FString& ErrMsg, int UserID, const struct FString& CharName, const struct FString& ClanName, int CM_Pattern, int CM_BG, int CM_BL, const struct FCharInfo& stCharInfo, unsigned char InClanRank, int ClanLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckCharInfo");

	UBTTcpLink_Channel_sfAckCharInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.CharName = CharName;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.stCharInfo = stCharInfo;
	params.InClanRank = InClanRank;
	params.ClanLevel = ClanLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqCharInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqCharInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqCharInfo");

	UBTTcpLink_Channel_sfReqCharInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLogin2
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FBtrDouble              CurServerTime                  (Parm)
// int                            CharDBID                       (Parm)
// unsigned char                  IsGM                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLogin2(int Result, const struct FString& ErrMsg, int UserID, const struct FString& CharName, const struct FBtrDouble& CurServerTime, int CharDBID, unsigned char IsGM)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLogin2");

	UBTTcpLink_Channel_sfAckLogin2_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.CharName = CharName;
	params.CurServerTime = CurServerTime;
	params.CharDBID = CharDBID;
	params.IsGM = IsGM;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLogin2
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            TimeStamp                      (Parm)
// int                            LoginHash1                     (Parm)
// int                            LoginHash2                     (Parm)
// int                            LoginHash3                     (Parm)
// int                            LoginHash4                     (Parm)
// int                            LoginHash5                     (Parm)
// struct FString                 Guid                           (Parm, NeedCtorLink)
// int                            UserType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLogin2(const struct FString& CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, const struct FString& Guid, int UserType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLogin2");

	UBTTcpLink_Channel_sfReqLogin2_Params params;
	params.CharName = CharName;
	params.TimeStamp = TimeStamp;
	params.LoginHash1 = LoginHash1;
	params.LoginHash2 = LoginHash2;
	params.LoginHash3 = LoginHash3;
	params.LoginHash4 = LoginHash4;
	params.LoginHash5 = LoginHash5;
	params.Guid = Guid;
	params.UserType = UserType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckStartNatDiag
// (Native, Public)
// Parameters:
// int                            NatType                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckStartNatDiag(int NatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckStartNatDiag");

	UBTTcpLink_Channel_sfAckStartNatDiag_Params params;
	params.NatType = NatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqStartNatDiag
// (Native, Public)
// Parameters:
// struct FString                 Server1Addr                    (Parm, NeedCtorLink)
// int                            Server1Port                    (Parm)
// struct FString                 Server2Addr                    (Parm, NeedCtorLink)
// int                            Server2Port                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqStartNatDiag(const struct FString& Server1Addr, int Server1Port, const struct FString& Server2Addr, int Server2Port)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqStartNatDiag");

	UBTTcpLink_Channel_sfReqStartNatDiag_Params params;
	params.Server1Addr = Server1Addr;
	params.Server1Port = Server1Port;
	params.Server2Addr = Server2Addr;
	params.Server2Port = Server2Port;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqForceLogoutByOwner
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqForceLogoutByOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqForceLogoutByOwner");

	UBTTcpLink_Channel_sfReqForceLogoutByOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckLogin
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FCharInfo               btCharInfo                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckLogin(int Result, const struct FString& ErrMsg, int UserID, const struct FString& CharName, const struct FString& ClanName, const struct FCharInfo& btCharInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckLogin");

	UBTTcpLink_Channel_sfAckLogin_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.CharName = CharName;
	params.ClanName = ClanName;
	params.btCharInfo = btCharInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqLogin
// (Native, Public)
// Parameters:
// struct FString                 id                             (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqLogin(const struct FString& id)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqLogin");

	UBTTcpLink_Channel_sfReqLogin_Params params;
	params.id = id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfAckHash
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfAckHash(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfAckHash");

	UBTTcpLink_Channel_sfAckHash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.sfReqHash
// (Native, Public)
// Parameters:
// int                            HashField0                     (Parm)
// int                            HashField1                     (Parm)
// int                            HashField2                     (Parm)
// int                            HashField3                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::sfReqHash(int HashField0, int HashField1, int HashField2, int HashField3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.sfReqHash");

	UBTTcpLink_Channel_sfReqHash_Params params;
	params.HashField0 = HashField0;
	params.HashField1 = HashField1;
	params.HashField2 = HashField2;
	params.HashField3 = HashField3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckUseItemDuringGame
// (Defined, Event, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            RemainCount                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckUseItemDuringGame(int ErrorCode, const struct FString& CharName, int ItemID, const struct FBtrDouble& ItemUniqueID, int RemainCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckUseItemDuringGame");

	UBTTcpLink_Channel_rfAckUseItemDuringGame_Params params;
	params.ErrorCode = ErrorCode;
	params.CharName = CharName;
	params.ItemID = ItemID;
	params.ItemUniqueID = ItemUniqueID;
	params.RemainCount = RemainCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqUseItemDuringGame
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// unsigned char                  UsingCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqUseItemDuringGame(const struct FString& CharName, int ItemID, const struct FBtrDouble& ItemUniqueID, unsigned char UsingCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqUseItemDuringGame");

	UBTTcpLink_Channel_rfReqUseItemDuringGame_Params params;
	params.CharName = CharName;
	params.ItemID = ItemID;
	params.ItemUniqueID = ItemUniqueID;
	params.UsingCount = UsingCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfChangeItemInstanceInfo
// (Defined, Event, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// unsigned char                  ChangeCount                    (Parm)
// int                            RemainCount                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfChangeItemInstanceInfo(int ErrorCode, int ItemID, const struct FBtrDouble& ItemUniqueID, unsigned char ChangeCount, int RemainCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfChangeItemInstanceInfo");

	UBTTcpLink_Channel_rfChangeItemInstanceInfo_Params params;
	params.ErrorCode = ErrorCode;
	params.ItemID = ItemID;
	params.ItemUniqueID = ItemUniqueID;
	params.ChangeCount = ChangeCount;
	params.RemainCount = RemainCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLuckShop_RewardCoupon
// (Defined, Event, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// int                            Coupon_ItemTypeID              (Parm)
// struct FBtrDouble              Coupon_ItemUniqueID            (Parm)
// int                            Coupon_Count_AfterReduction    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLuckShop_RewardCoupon(int ErrorCode, int Coupon_ItemTypeID, const struct FBtrDouble& Coupon_ItemUniqueID, int Coupon_Count_AfterReduction)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLuckShop_RewardCoupon");

	UBTTcpLink_Channel_rfAckLuckShop_RewardCoupon_Params params;
	params.ErrorCode = ErrorCode;
	params.Coupon_ItemTypeID = Coupon_ItemTypeID;
	params.Coupon_ItemUniqueID = Coupon_ItemUniqueID;
	params.Coupon_Count_AfterReduction = Coupon_Count_AfterReduction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLuckShop_RewardCoupon
// (Defined, Event, Public)
// Parameters:
// int                            ChooseNum                      (Parm)
// int                            ItemID                         (Parm)
// int                            ItemIDChoose                   (Parm)
// int                            PartIDChoose                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLuckShop_RewardCoupon(int ChooseNum, int ItemID, int ItemIDChoose, int PartIDChoose)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLuckShop_RewardCoupon");

	UBTTcpLink_Channel_rfReqLuckShop_RewardCoupon_Params params;
	params.ChooseNum = ChooseNum;
	params.ItemID = ItemID;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLuckShop_RewardBuyingCount
// (Defined, Event, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// int                            FinalCapsuleRewardState        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLuckShop_RewardBuyingCount(int ErrorCode, int FinalCapsuleRewardState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLuckShop_RewardBuyingCount");

	UBTTcpLink_Channel_rfAckLuckShop_RewardBuyingCount_Params params;
	params.ErrorCode = ErrorCode;
	params.FinalCapsuleRewardState = FinalCapsuleRewardState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLuckShop_RewardBuyingCount
// (Defined, Event, Public)
// Parameters:
// int                            ChooseNum                      (Parm)
// int                            ItemID                         (Parm)
// int                            ItemIDChoose                   (Parm)
// int                            PartIDChoose                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLuckShop_RewardBuyingCount(int ChooseNum, int ItemID, int ItemIDChoose, int PartIDChoose)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLuckShop_RewardBuyingCount");

	UBTTcpLink_Channel_rfReqLuckShop_RewardBuyingCount_Params params;
	params.ChooseNum = ChooseNum;
	params.ItemID = ItemID;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLuckShop_StorageInfo
// (Defined, Event, Public)
// Parameters:
// int                            ErrorCode                      (Parm)
// int                            BuyingCapsuleCount             (Parm)
// int                            CapsuleRewardState             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLuckShop_StorageInfo(int ErrorCode, int BuyingCapsuleCount, int CapsuleRewardState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLuckShop_StorageInfo");

	UBTTcpLink_Channel_rfAckLuckShop_StorageInfo_Params params;
	params.ErrorCode = ErrorCode;
	params.BuyingCapsuleCount = BuyingCapsuleCount;
	params.CapsuleRewardState = CapsuleRewardState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLuckShop_StorageInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLuckShop_StorageInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLuckShop_StorageInfo");

	UBTTcpLink_Channel_rfReqLuckShop_StorageInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLuckShop_LotteryWinnerList
// (Defined, Event, Public)
// Parameters:
// int                            CapsuleItemID                  (Parm)
// unsigned char                  IsNotification                 (Parm)
// TArray<struct FString>         NickName                       (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      Time                           (Parm, NeedCtorLink)
// int                            GetItemID                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLuckShop_LotteryWinnerList(int CapsuleItemID, unsigned char IsNotification, TArray<struct FString> NickName, TArray<struct FBtrDouble> Time, int GetItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLuckShop_LotteryWinnerList");

	UBTTcpLink_Channel_rfAckLuckShop_LotteryWinnerList_Params params;
	params.CapsuleItemID = CapsuleItemID;
	params.IsNotification = IsNotification;
	params.NickName = NickName;
	params.Time = Time;
	params.GetItemID = GetItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLuckShop_LotteryWinnerList
// (Defined, Event, Public)
// Parameters:
// int                            CapsuleItemID                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLuckShop_LotteryWinnerList(int CapsuleItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLuckShop_LotteryWinnerList");

	UBTTcpLink_Channel_rfReqLuckShop_LotteryWinnerList_Params params;
	params.CapsuleItemID = CapsuleItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSpecialQuestRank
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         CharList                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSpecialQuestRank(TArray<struct FString> CharList)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSpecialQuestRank");

	UBTTcpLink_Channel_rfAckSpecialQuestRank_Params params;
	params.CharList = CharList;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSpecialQuestRank
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSpecialQuestRank()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSpecialQuestRank");

	UBTTcpLink_Channel_rfReqSpecialQuestRank_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckReceiveSpecialReward
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RewardedQuestID                (Parm)
// unsigned char                  RewardedQuestIsComplete        (Parm)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RewardItemID                   (Parm)
// int                            RewardItemCount                (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckReceiveSpecialReward(int Result, int RewardedQuestID, unsigned char RewardedQuestIsComplete, const struct FBtrDouble& ItemIdx, int RewardItemID, int RewardItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckReceiveSpecialReward");

	UBTTcpLink_Channel_rfAckReceiveSpecialReward_Params params;
	params.Result = Result;
	params.RewardedQuestID = RewardedQuestID;
	params.RewardedQuestIsComplete = RewardedQuestIsComplete;
	params.ItemIdx = ItemIdx;
	params.RewardItemID = RewardItemID;
	params.RewardItemCount = RewardItemCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqReceiveSpecialReward
// (Defined, Event, Public)
// Parameters:
// int                            QuestID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqReceiveSpecialReward(int QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqReceiveSpecialReward");

	UBTTcpLink_Channel_rfReqReceiveSpecialReward_Params params;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckDailyRewardListThisMonth
// (Defined, Event, Public)
// Parameters:
// TArray<unsigned char>          Type                           (Parm, NeedCtorLink)
// TArray<unsigned char>          Number                         (Parm, NeedCtorLink)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<int>                    ItemCount                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckDailyRewardListThisMonth(TArray<unsigned char> Type, TArray<unsigned char> Number, TArray<int> ItemID, TArray<int> ItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckDailyRewardListThisMonth");

	UBTTcpLink_Channel_rfAckDailyRewardListThisMonth_Params params;
	params.Type = Type;
	params.Number = Number;
	params.ItemID = ItemID;
	params.ItemCount = ItemCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDailyRewardListThisMonth
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDailyRewardListThisMonth()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDailyRewardListThisMonth");

	UBTTcpLink_Channel_rfReqDailyRewardListThisMonth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPuzzleList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  IsComplete                     (Parm)
// TArray<unsigned char>          UpdatedNum                     (Parm, NeedCtorLink)
// TArray<unsigned char>          StateList                      (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RewardItemID                   (Parm)
// int                            RewardItemCount                (Parm)
// struct FBtrDouble              PaidItemIdx                    (Parm)
// int                            PaidItemStackCount             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPuzzleList(int Result, unsigned char IsComplete, TArray<unsigned char> UpdatedNum, TArray<unsigned char> StateList, const struct FBtrDouble& ItemIdx, int RewardItemID, int RewardItemCount, const struct FBtrDouble& PaidItemIdx, int PaidItemStackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPuzzleList");

	UBTTcpLink_Channel_rfAckPuzzleList_Params params;
	params.Result = Result;
	params.IsComplete = IsComplete;
	params.UpdatedNum = UpdatedNum;
	params.StateList = StateList;
	params.ItemIdx = ItemIdx;
	params.RewardItemID = RewardItemID;
	params.RewardItemCount = RewardItemCount;
	params.PaidItemIdx = PaidItemIdx;
	params.PaidItemStackCount = PaidItemStackCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqPuzzleList
// (Defined, Event, Public)
// Parameters:
// unsigned char                  ReqType                        (Parm)
// unsigned char                  UpdateState                    (Parm)
// struct FBtrDouble              PaidItemIdx                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqPuzzleList(unsigned char ReqType, unsigned char UpdateState, const struct FBtrDouble& PaidItemIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqPuzzleList");

	UBTTcpLink_Channel_rfReqPuzzleList_Params params;
	params.ReqType = ReqType;
	params.UpdateState = UpdateState;
	params.PaidItemIdx = PaidItemIdx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAttendanceList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  IsComplete                     (Parm)
// unsigned char                  UpdatedNum                     (Parm)
// TArray<unsigned char>          StateList                      (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RewardItemID                   (Parm)
// int                            RewardItemCount                (Parm)
// struct FBtrDouble              PaidItemIdx                    (Parm)
// int                            PaidItemStackCount             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAttendanceList(int Result, unsigned char IsComplete, unsigned char UpdatedNum, TArray<unsigned char> StateList, const struct FBtrDouble& ItemIdx, int RewardItemID, int RewardItemCount, const struct FBtrDouble& PaidItemIdx, int PaidItemStackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAttendanceList");

	UBTTcpLink_Channel_rfAckAttendanceList_Params params;
	params.Result = Result;
	params.IsComplete = IsComplete;
	params.UpdatedNum = UpdatedNum;
	params.StateList = StateList;
	params.ItemIdx = ItemIdx;
	params.RewardItemID = RewardItemID;
	params.RewardItemCount = RewardItemCount;
	params.PaidItemIdx = PaidItemIdx;
	params.PaidItemStackCount = PaidItemStackCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAttendanceList
// (Defined, Event, Public)
// Parameters:
// unsigned char                  ReqType                        (Parm)
// unsigned char                  UpdateNum                      (Parm)
// unsigned char                  UpdateState                    (Parm)
// struct FBtrDouble              PaidItemIdx                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAttendanceList(unsigned char ReqType, unsigned char UpdateNum, unsigned char UpdateState, const struct FBtrDouble& PaidItemIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAttendanceList");

	UBTTcpLink_Channel_rfReqAttendanceList_Params params;
	params.ReqType = ReqType;
	params.UpdateNum = UpdateNum;
	params.UpdateState = UpdateState;
	params.PaidItemIdx = PaidItemIdx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAIRewardResult
// (Defined, Event, Public)
// Parameters:
// unsigned char                  ClearRewardTYPE                (Parm)
// int                            ClearRewardID                  (Parm)
// int                            ClearRewardCount               (Parm)
// TArray<int>                    ScoreRewardUserID              (Parm, NeedCtorLink)
// TArray<unsigned char>          ScoreRewardTYPE                (Parm, NeedCtorLink)
// TArray<int>                    ScoreRewardID                  (Parm, NeedCtorLink)
// TArray<int>                    ScoreRewardCount               (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAIRewardResult(unsigned char ClearRewardTYPE, int ClearRewardID, int ClearRewardCount, TArray<int> ScoreRewardUserID, TArray<unsigned char> ScoreRewardTYPE, TArray<int> ScoreRewardID, TArray<int> ScoreRewardCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAIRewardResult");

	UBTTcpLink_Channel_rfAckAIRewardResult_Params params;
	params.ClearRewardTYPE = ClearRewardTYPE;
	params.ClearRewardID = ClearRewardID;
	params.ClearRewardCount = ClearRewardCount;
	params.ScoreRewardUserID = ScoreRewardUserID;
	params.ScoreRewardTYPE = ScoreRewardTYPE;
	params.ScoreRewardID = ScoreRewardID;
	params.ScoreRewardCount = ScoreRewardCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfNotifyCouponUseError
// (Defined, Event, Public)
// Parameters:
// int                            Time                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfNotifyCouponUseError(int Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfNotifyCouponUseError");

	UBTTcpLink_Channel_rfNotifyCouponUseError_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckCouponUse
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckCouponUse(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckCouponUse");

	UBTTcpLink_Channel_rfAckCouponUse_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqCouponUse
// (Defined, Event, Public)
// Parameters:
// struct FString                 Serial                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqCouponUse(const struct FString& Serial)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqCouponUse");

	UBTTcpLink_Channel_rfReqCouponUse_Params params;
	params.Serial = Serial;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyShopItemDataEnd
// (Defined, Event, Public)
// Parameters:
// int                            Ver                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyShopItemDataEnd(int Ver)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyShopItemDataEnd");

	UBTTcpLink_Channel_rfReqNotifyShopItemDataEnd_Params params;
	params.Ver = Ver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyShopItemData
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    ProductNo                      (Parm, NeedCtorLink)
// TArray<struct FString>         ProductName                    (Parm, NeedCtorLink)
// TArray<int>                    ProductCode                    (Parm, NeedCtorLink)
// TArray<unsigned char>          SaleType                       (Parm, NeedCtorLink)
// TArray<int>                    ProductCost                    (Parm, NeedCtorLink)
// TArray<int>                    ProductHour                    (Parm, NeedCtorLink)
// TArray<int>                    ProductQuantity                (Parm, NeedCtorLink)
// TArray<int>                    SaleMasterFlag                 (Parm, NeedCtorLink)
// TArray<int>                    SaleStatus                     (Parm, NeedCtorLink)
// TArray<int>                    IsGift                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      SaleEndTime                    (Parm, NeedCtorLink)
// TArray<int>                    Discountcost                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyShopItemData(TArray<int> ProductNo, TArray<struct FString> ProductName, TArray<int> ProductCode, TArray<unsigned char> SaleType, TArray<int> ProductCost, TArray<int> ProductHour, TArray<int> ProductQuantity, TArray<int> SaleMasterFlag, TArray<int> SaleStatus, TArray<int> IsGift, TArray<struct FBtrDouble> SaleEndTime, TArray<int> Discountcost)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyShopItemData");

	UBTTcpLink_Channel_rfReqNotifyShopItemData_Params params;
	params.ProductNo = ProductNo;
	params.ProductName = ProductName;
	params.ProductCode = ProductCode;
	params.SaleType = SaleType;
	params.ProductCost = ProductCost;
	params.ProductHour = ProductHour;
	params.ProductQuantity = ProductQuantity;
	params.SaleMasterFlag = SaleMasterFlag;
	params.SaleStatus = SaleStatus;
	params.IsGift = IsGift;
	params.SaleEndTime = SaleEndTime;
	params.Discountcost = Discountcost;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckShopItemData
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckShopItemData()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckShopItemData");

	UBTTcpLink_Channel_rfAckShopItemData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqShopItemData
// (Defined, Event, Public)
// Parameters:
// int                            Ver                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqShopItemData(int Ver)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqShopItemData");

	UBTTcpLink_Channel_rfReqShopItemData_Params params;
	params.Ver = Ver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyLoadingStatus
// (Defined, Event, Public)
// Parameters:
// int                            Status                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyLoadingStatus(int Status)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyLoadingStatus");

	UBTTcpLink_Channel_rfReqNotifyLoadingStatus_Params params;
	params.Status = Status;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqUpdateUserPerformenceInfo
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            MinFps                         (Parm)
// int                            MaxFps                         (Parm)
// int                            AvgFps                         (Parm)
// int                            MinPing                        (Parm)
// int                            MaxPing                        (Parm)
// int                            AvgPing                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqUpdateUserPerformenceInfo(int UserID, int MinFps, int MaxFps, int AvgFps, int MinPing, int MaxPing, int AvgPing)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqUpdateUserPerformenceInfo");

	UBTTcpLink_Channel_rfReqUpdateUserPerformenceInfo_Params params;
	params.UserID = UserID;
	params.MinFps = MinFps;
	params.MaxFps = MaxFps;
	params.AvgFps = AvgFps;
	params.MinPing = MinPing;
	params.MaxPing = MaxPing;
	params.AvgPing = AvgPing;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAhnNotifyDisconnct
// (Defined, Event, Public)
// Parameters:
// int                            Code                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAhnNotifyDisconnct(int Code)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAhnNotifyDisconnct");

	UBTTcpLink_Channel_rfReqAhnNotifyDisconnct_Params params;
	params.Code = Code;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAhnHsObject
// (Defined, Event, Public)
// Parameters:
// TArray<unsigned char>          Data                           (Parm, NeedCtorLink)
// int                            DataSize                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAhnHsObject(TArray<unsigned char> Data, int DataSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAhnHsObject");

	UBTTcpLink_Channel_rfAckAhnHsObject_Params params;
	params.Data = Data;
	params.DataSize = DataSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAhnHsObject
// (Defined, Event, Public)
// Parameters:
// TArray<unsigned char>          Data                           (Parm, NeedCtorLink)
// int                            DataSize                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAhnHsObject(TArray<unsigned char> Data, int DataSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAhnHsObject");

	UBTTcpLink_Channel_rfReqAhnHsObject_Params params;
	params.Data = Data;
	params.DataSize = DataSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfNotifyClanLevelup
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            Levelup                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfNotifyClanLevelup(const struct FString& ClanName, int Levelup)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfNotifyClanLevelup");

	UBTTcpLink_Channel_rfNotifyClanLevelup_Params params;
	params.ClanName = ClanName;
	params.Levelup = Levelup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfNotifyNewClanName
// (Defined, Event, Public)
// Parameters:
// struct FString                 New_NickName                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfNotifyNewClanName(const struct FString& New_NickName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfNotifyNewClanName");

	UBTTcpLink_Channel_rfNotifyNewClanName_Params params;
	params.New_NickName = New_NickName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfNotifyNewNickName
// (Defined, Event, Public)
// Parameters:
// int                            Community_Type                 (Parm)
// struct FString                 Old_NickName                   (Parm, NeedCtorLink)
// struct FString                 New_NickName                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfNotifyNewNickName(int Community_Type, const struct FString& Old_NickName, const struct FString& New_NickName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfNotifyNewNickName");

	UBTTcpLink_Channel_rfNotifyNewNickName_Params params;
	params.Community_Type = Community_Type;
	params.Old_NickName = Old_NickName;
	params.New_NickName = New_NickName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGameMapData
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    nIdx                           (Parm, NeedCtorLink)
// TArray<int>                    nMapID                         (Parm, NeedCtorLink)
// TArray<struct FString>         nMapNm                         (Parm, NeedCtorLink)
// TArray<float>                  fSupHealth                     (Parm, NeedCtorLink)
// TArray<float>                  fSupHeli                       (Parm, NeedCtorLink)
// TArray<float>                  fSupBomb                       (Parm, NeedCtorLink)
// TArray<float>                  fSupUAV                        (Parm, NeedCtorLink)
// TArray<int>                    nModFFA                        (Parm, NeedCtorLink)
// TArray<int>                    nModFFAMax                     (Parm, NeedCtorLink)
// TArray<int>                    nModTDM                        (Parm, NeedCtorLink)
// TArray<int>                    nModTDMMax                     (Parm, NeedCtorLink)
// TArray<int>                    nModSD                         (Parm, NeedCtorLink)
// TArray<int>                    nModSDMax                      (Parm, NeedCtorLink)
// TArray<int>                    nModDOM                        (Parm, NeedCtorLink)
// TArray<int>                    nModDOMMax                     (Parm, NeedCtorLink)
// TArray<int>                    nModSab                        (Parm, NeedCtorLink)
// TArray<int>                    nModSabMax                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGameMapData(TArray<int> nIdx, TArray<int> nMapID, TArray<struct FString> nMapNm, TArray<float> fSupHealth, TArray<float> fSupHeli, TArray<float> fSupBomb, TArray<float> fSupUAV, TArray<int> nModFFA, TArray<int> nModFFAMax, TArray<int> nModTDM, TArray<int> nModTDMMax, TArray<int> nModSD, TArray<int> nModSDMax, TArray<int> nModDOM, TArray<int> nModDOMMax, TArray<int> nModSab, TArray<int> nModSabMax)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGameMapData");

	UBTTcpLink_Channel_rfAckGameMapData_Params params;
	params.nIdx = nIdx;
	params.nMapID = nMapID;
	params.nMapNm = nMapNm;
	params.fSupHealth = fSupHealth;
	params.fSupHeli = fSupHeli;
	params.fSupBomb = fSupBomb;
	params.fSupUAV = fSupUAV;
	params.nModFFA = nModFFA;
	params.nModFFAMax = nModFFAMax;
	params.nModTDM = nModTDM;
	params.nModTDMMax = nModTDMMax;
	params.nModSD = nModSD;
	params.nModSDMax = nModSDMax;
	params.nModDOM = nModDOM;
	params.nModDOMMax = nModDOMMax;
	params.nModSab = nModSab;
	params.nModSabMax = nModSabMax;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGameMapData
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGameMapData()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGameMapData");

	UBTTcpLink_Channel_rfReqGameMapData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckTencent_StartTenProtect
// (Defined, Event, Public)
// Parameters:
// int                            CharDBID                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckTencent_StartTenProtect(int CharDBID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckTencent_StartTenProtect");

	UBTTcpLink_Channel_rfAckTencent_StartTenProtect_Params params;
	params.CharDBID = CharDBID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckMoveToLobby
// (Defined, Event, Public)
// Parameters:
// unsigned char                  MessageType                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckMoveToLobby(unsigned char MessageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckMoveToLobby");

	UBTTcpLink_Channel_rfAckMoveToLobby_Params params;
	params.MessageType = MessageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPopUpMessage
// (Defined, Event, Public)
// Parameters:
// int                            MessageType                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPopUpMessage(int MessageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPopUpMessage");

	UBTTcpLink_Channel_rfAckPopUpMessage_Params params;
	params.MessageType = MessageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfUpdateWebzenShopScriptVersion
// (Defined, Event, Public)
// Parameters:
// int                            Year                           (Parm)
// int                            YearId                         (Parm)
// int                            SalesZoneCode                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfUpdateWebzenShopScriptVersion(int Year, int YearId, int SalesZoneCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfUpdateWebzenShopScriptVersion");

	UBTTcpLink_Channel_rfUpdateWebzenShopScriptVersion_Params params;
	params.Year = Year;
	params.YearId = YearId;
	params.SalesZoneCode = SalesZoneCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSetClientVersion
// (Defined, Event, Public)
// Parameters:
// int                            ClientVersion                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSetClientVersion(int ClientVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSetClientVersion");

	UBTTcpLink_Channel_rfReqSetClientVersion_Params params;
	params.ClientVersion = ClientVersion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckFriendPosition
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 TargetCharName                 (Parm, NeedCtorLink)
// unsigned char                  ServerType                     (Parm)
// struct FString                 fServername                    (Parm, NeedCtorLink)
// struct FString                 fServerShortName               (Parm, NeedCtorLink)
// struct FString                 fServerIP                      (Parm, NeedCtorLink)
// int                            fServerPort                    (Parm)
// unsigned char                  CurPos                         (Parm)
// unsigned char                  CurState                       (Parm)
// int                            ChannelNum                     (Parm)
// struct FString                 ChannelNickName                (Parm, NeedCtorLink)
// int                            GameRoomNum                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckFriendPosition(int Result, const struct FString& TargetCharName, unsigned char ServerType, const struct FString& fServername, const struct FString& fServerShortName, const struct FString& fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, const struct FString& ChannelNickName, int GameRoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckFriendPosition");

	UBTTcpLink_Channel_rfAckFriendPosition_Params params;
	params.Result = Result;
	params.TargetCharName = TargetCharName;
	params.ServerType = ServerType;
	params.fServername = fServername;
	params.fServerShortName = fServerShortName;
	params.fServerIP = fServerIP;
	params.fServerPort = fServerPort;
	params.CurPos = CurPos;
	params.CurState = CurState;
	params.ChannelNum = ChannelNum;
	params.ChannelNickName = ChannelNickName;
	params.GameRoomNum = GameRoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqFriendPosition
// (Defined, Event, Public)
// Parameters:
// struct FString                 TargetCharName                 (Parm, NeedCtorLink)
// unsigned char                  CommunityType                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqFriendPosition(const struct FString& TargetCharName, unsigned char CommunityType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqFriendPosition");

	UBTTcpLink_Channel_rfReqFriendPosition_Params params;
	params.TargetCharName = TargetCharName;
	params.CommunityType = CommunityType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckDedicateHost_Login
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            UserID                         (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckDedicateHost_Login(int Result, int UserID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckDedicateHost_Login");

	UBTTcpLink_Channel_rfAckDedicateHost_Login_Params params;
	params.Result = Result;
	params.UserID = UserID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDedicateHost_Login
// (Defined, Event, Public)
// Parameters:
// int                            ProcessID                      (Parm)
// int                            ChannelNum                     (Parm)
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDedicateHost_Login(int ProcessID, int ChannelNum, int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDedicateHost_Login");

	UBTTcpLink_Channel_rfReqDedicateHost_Login_Params params;
	params.ProcessID = ProcessID;
	params.ChannelNum = ChannelNum;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLogOut
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Result                         (Parm)
// unsigned char                  Reason                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLogOut(unsigned char Result, unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLogOut");

	UBTTcpLink_Channel_rfAckLogOut_Params params;
	params.Result = Result;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLogOut
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Reason                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLogOut(unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLogOut");

	UBTTcpLink_Channel_rfReqLogOut_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckTencent_AASInfo
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// unsigned char                  IsAdult                        (Parm)
// unsigned char                  IsQQAuth                       (Parm)
// int                            AccumTimeSec                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckTencent_AASInfo(int UserID, unsigned char IsAdult, unsigned char IsQQAuth, int AccumTimeSec)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckTencent_AASInfo");

	UBTTcpLink_Channel_rfAckTencent_AASInfo_Params params;
	params.UserID = UserID;
	params.IsAdult = IsAdult;
	params.IsQQAuth = IsQQAuth;
	params.AccumTimeSec = AccumTimeSec;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSetCommunityOption
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrStr                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSetCommunityOption(int Result, const struct FString& ErrStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSetCommunityOption");

	UBTTcpLink_Channel_rfAckSetCommunityOption_Params params;
	params.Result = Result;
	params.ErrStr = ErrStr;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSetCommunityOption
// (Defined, Event, Public)
// Parameters:
// int                            Opt_Wispher                    (Parm)
// int                            Opt_GameInvite                 (Parm)
// int                            Opt_FriendInvite               (Parm)
// int                            Opt_ClanInvite                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSetCommunityOption(int Opt_Wispher, int Opt_GameInvite, int Opt_FriendInvite, int Opt_ClanInvite)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSetCommunityOption");

	UBTTcpLink_Channel_rfReqSetCommunityOption_Params params;
	params.Opt_Wispher = Opt_Wispher;
	params.Opt_GameInvite = Opt_GameInvite;
	params.Opt_FriendInvite = Opt_FriendInvite;
	params.Opt_ClanInvite = Opt_ClanInvite;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckCommunityOptionList
// (Defined, Event, Public)
// Parameters:
// int                            Opt_Wispher                    (Parm)
// int                            Opt_GameInvite                 (Parm)
// int                            Opt_FriendInvite               (Parm)
// int                            Opt_ClanInvite                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckCommunityOptionList(int Opt_Wispher, int Opt_GameInvite, int Opt_FriendInvite, int Opt_ClanInvite)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckCommunityOptionList");

	UBTTcpLink_Channel_rfAckCommunityOptionList_Params params;
	params.Opt_Wispher = Opt_Wispher;
	params.Opt_GameInvite = Opt_GameInvite;
	params.Opt_FriendInvite = Opt_FriendInvite;
	params.Opt_ClanInvite = Opt_ClanInvite;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqCommunityOptionList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqCommunityOptionList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqCommunityOptionList");

	UBTTcpLink_Channel_rfReqCommunityOptionList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyUpdateCharInfo_TitleMark
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            TitleMarkID                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyUpdateCharInfo_TitleMark(const struct FString& CharName, int TitleMarkID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyUpdateCharInfo_TitleMark");

	UBTTcpLink_Channel_rfAckNotifyUpdateCharInfo_TitleMark_Params params;
	params.CharName = CharName;
	params.TitleMarkID = TitleMarkID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyUpdateCharInfo_LevelMark
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            LevelMarkID                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyUpdateCharInfo_LevelMark(const struct FString& CharName, int LevelMarkID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyUpdateCharInfo_LevelMark");

	UBTTcpLink_Channel_rfAckNotifyUpdateCharInfo_LevelMark_Params params;
	params.CharName = CharName;
	params.LevelMarkID = LevelMarkID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetRankingInfoListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetRankingInfoListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetRankingInfoListEnd");

	UBTTcpLink_Channel_rfAckGetRankingInfoListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetRankingInfoList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  RankingType                    (Parm)
// unsigned char                  CommunityType                  (Parm)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<int>                    CharLevel                      (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkPattern                (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBG                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBL                     (Parm, NeedCtorLink)
// TArray<int>                    Ranking_Accum                  (Parm, NeedCtorLink)
// TArray<int>                    Ranking_Accum_Prev             (Parm, NeedCtorLink)
// TArray<int>                    Ranking_Accum_Exp              (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetRankingInfoList(int Result, unsigned char RankingType, unsigned char CommunityType, TArray<struct FString> CharName, TArray<int> CharLevel, TArray<struct FString> ClanName, TArray<int> ClanMarkPattern, TArray<int> ClanMarkBG, TArray<int> ClanMarkBL, TArray<int> Ranking_Accum, TArray<int> Ranking_Accum_Prev, TArray<int> Ranking_Accum_Exp, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetRankingInfoList");

	UBTTcpLink_Channel_rfAckGetRankingInfoList_Params params;
	params.Result = Result;
	params.RankingType = RankingType;
	params.CommunityType = CommunityType;
	params.CharName = CharName;
	params.CharLevel = CharLevel;
	params.ClanName = ClanName;
	params.ClanMarkPattern = ClanMarkPattern;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.Ranking_Accum = Ranking_Accum;
	params.Ranking_Accum_Prev = Ranking_Accum_Prev;
	params.Ranking_Accum_Exp = Ranking_Accum_Exp;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetRankingInfoListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  RankingType                    (Parm)
// unsigned char                  CommunityType                  (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetRankingInfoListStart(int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetRankingInfoListStart");

	UBTTcpLink_Channel_rfAckGetRankingInfoListStart_Params params;
	params.Result = Result;
	params.RankingType = RankingType;
	params.CommunityType = CommunityType;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetRankingInfoList
// (Defined, Event, Public)
// Parameters:
// unsigned char                  RankingType                    (Parm)
// unsigned char                  CommunityType                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetRankingInfoList(unsigned char RankingType, unsigned char CommunityType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetRankingInfoList");

	UBTTcpLink_Channel_rfReqGetRankingInfoList_Params params;
	params.RankingType = RankingType;
	params.CommunityType = CommunityType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckCharDetailInfo
// (Defined, Event, Public)
// Parameters:
// int                            MaxSerial                      (Parm)
// int                            MaxScore                       (Parm)
// int                            MaxKill                        (Parm)
// int                            MaxAssist                      (Parm)
// int                            Serial3                        (Parm)
// int                            Serial5                        (Parm)
// int                            Serial7                        (Parm)
// int                            Serial10                       (Parm)
// int                            Serial15                       (Parm)
// int                            AR                             (Parm)
// int                            SMG                            (Parm)
// int                            SR                             (Parm)
// int                            SW                             (Parm)
// int                            Melee                          (Parm)
// int                            Grenade                        (Parm)
// int                            FlashBang                      (Parm)
// int                            Foot                           (Parm)
// int                            AT4                            (Parm)
// int                            MG                             (Parm)
// int                            Fire                           (Parm)
// int                            RPG7                           (Parm)
// int                            TimeBomb                       (Parm)
// int                            IcendiaryBomb                  (Parm)
// int                            ClusterBomb                    (Parm)
// int                            ByChopper                      (Parm)
// int                            Artillery                      (Parm)
// int                            KillChopper                    (Parm)
// int                            FirstKill                      (Parm)
// int                            LastKill                       (Parm)
// int                            AllKill                        (Parm)
// int                            Dominate                       (Parm)
// int                            InstallBomb                    (Parm)
// int                            DefuseBomb                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckCharDetailInfo(int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckCharDetailInfo");

	UBTTcpLink_Channel_rfAckCharDetailInfo_Params params;
	params.MaxSerial = MaxSerial;
	params.MaxScore = MaxScore;
	params.MaxKill = MaxKill;
	params.MaxAssist = MaxAssist;
	params.Serial3 = Serial3;
	params.Serial5 = Serial5;
	params.Serial7 = Serial7;
	params.Serial10 = Serial10;
	params.Serial15 = Serial15;
	params.AR = AR;
	params.SMG = SMG;
	params.SR = SR;
	params.SW = SW;
	params.Melee = Melee;
	params.Grenade = Grenade;
	params.FlashBang = FlashBang;
	params.Foot = Foot;
	params.AT4 = AT4;
	params.MG = MG;
	params.Fire = Fire;
	params.RPG7 = RPG7;
	params.TimeBomb = TimeBomb;
	params.IcendiaryBomb = IcendiaryBomb;
	params.ClusterBomb = ClusterBomb;
	params.ByChopper = ByChopper;
	params.Artillery = Artillery;
	params.KillChopper = KillChopper;
	params.FirstKill = FirstKill;
	params.LastKill = LastKill;
	params.AllKill = AllKill;
	params.Dominate = Dominate;
	params.InstallBomb = InstallBomb;
	params.DefuseBomb = DefuseBomb;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqCharDetailInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqCharDetailInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqCharDetailInfo");

	UBTTcpLink_Channel_rfReqCharDetailInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqInGameRoomUserClanLevelChanged
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            ClanLevel                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqInGameRoomUserClanLevelChanged(int UserID, int ClanLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqInGameRoomUserClanLevelChanged");

	UBTTcpLink_Channel_rfReqInGameRoomUserClanLevelChanged_Params params;
	params.UserID = UserID;
	params.ClanLevel = ClanLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqInGameRoomUserInfoChanged
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqInGameRoomUserInfoChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqInGameRoomUserInfoChanged");

	UBTTcpLink_Channel_rfReqInGameRoomUserInfoChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatchResultHistory
// (Defined, Event, Public)
// Parameters:
// TArray<struct FBtrDouble>      MatchDate                      (Parm, NeedCtorLink)
// TArray<unsigned char>          IsWin                          (Parm, NeedCtorLink)
// TArray<struct FString>         EnemyClanname                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatchResultHistory(TArray<struct FBtrDouble> MatchDate, TArray<unsigned char> IsWin, TArray<struct FString> EnemyClanname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatchResultHistory");

	UBTTcpLink_Channel_rfAckClanMatchResultHistory_Params params;
	params.MatchDate = MatchDate;
	params.IsWin = IsWin;
	params.EnemyClanname = EnemyClanname;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatchResultHistory
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanNm                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatchResultHistory(const struct FString& ClanNm)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatchResultHistory");

	UBTTcpLink_Channel_rfReqClanMatchResultHistory_Params params;
	params.ClanNm = ClanNm;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckDeleteMailAll
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  MailType                       (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckDeleteMailAll(int Result, unsigned char MailType, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckDeleteMailAll");

	UBTTcpLink_Channel_rfAckDeleteMailAll_Params params;
	params.Result = Result;
	params.MailType = MailType;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDeleteMailAll
// (Defined, Event, Public)
// Parameters:
// unsigned char                  MailType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDeleteMailAll(unsigned char MailType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDeleteMailAll");

	UBTTcpLink_Channel_rfReqDeleteMailAll_Params params;
	params.MailType = MailType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_PublicWaitRoomChanged
// (Defined, Event, Public)
// Parameters:
// int                            WaitRoomIdx                    (Parm)
// struct FString                 RoomName                       (Parm, NeedCtorLink)
// int                            MapNum                         (Parm)
// int                            CurUserCount                   (Parm)
// int                            MaxUserCount                   (Parm)
// unsigned char                  Status                         (Parm)
// unsigned char                  IsPublic                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_PublicWaitRoomChanged(int WaitRoomIdx, const struct FString& RoomName, int MapNum, int CurUserCount, int MaxUserCount, unsigned char Status, unsigned char IsPublic)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_PublicWaitRoomChanged");

	UBTTcpLink_Channel_rfAckClanMatch_PublicWaitRoomChanged_Params params;
	params.WaitRoomIdx = WaitRoomIdx;
	params.RoomName = RoomName;
	params.MapNum = MapNum;
	params.CurUserCount = CurUserCount;
	params.MaxUserCount = MaxUserCount;
	params.Status = Status;
	params.IsPublic = IsPublic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEventNotify
// (Defined, Event, Public)
// Parameters:
// int                            Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEventNotify(int Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEventNotify");

	UBTTcpLink_Channel_rfAckEventNotify_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqEventNotify
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqEventNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqEventNotify");

	UBTTcpLink_Channel_rfReqEventNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_NotifyChangeClanname
// (Defined, Event, Public)
// Parameters:
// struct FString                 NewClanname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPaidItem_NotifyChangeClanname(const struct FString& NewClanname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_NotifyChangeClanname");

	UBTTcpLink_Channel_rfAckPaidItem_NotifyChangeClanname_Params params;
	params.NewClanname = NewClanname;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_ChangeClanname
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RemainCount                    (Parm)
// struct FString                 NewClanname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPaidItem_ChangeClanname(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int RemainCount, const struct FString& NewClanname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_ChangeClanname");

	UBTTcpLink_Channel_rfAckPaidItem_ChangeClanname_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.RemainCount = RemainCount;
	params.NewClanname = NewClanname;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_ChangeClanname
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// struct FString                 NewClanname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqPaidItem_ChangeClanname(const struct FBtrDouble& ItemIdx, const struct FString& NewClanname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_ChangeClanname");

	UBTTcpLink_Channel_rfReqPaidItem_ChangeClanname_Params params;
	params.ItemIdx = ItemIdx;
	params.NewClanname = NewClanname;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_EndPublicWaitRoomList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_EndPublicWaitRoomList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_EndPublicWaitRoomList");

	UBTTcpLink_Channel_rfAckClanMatch_EndPublicWaitRoomList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_PublicWaitRoomList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    WaitRoomIdx                    (Parm, NeedCtorLink)
// TArray<struct FString>         LeaderName                     (Parm, NeedCtorLink)
// TArray<struct FString>         RoomName                       (Parm, NeedCtorLink)
// TArray<int>                    MapNum                         (Parm, NeedCtorLink)
// TArray<int>                    CurUserCount                   (Parm, NeedCtorLink)
// TArray<int>                    MaxUserCount                   (Parm, NeedCtorLink)
// TArray<unsigned char>          Status                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_PublicWaitRoomList(TArray<int> WaitRoomIdx, TArray<struct FString> LeaderName, TArray<struct FString> RoomName, TArray<int> MapNum, TArray<int> CurUserCount, TArray<int> MaxUserCount, TArray<unsigned char> Status)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_PublicWaitRoomList");

	UBTTcpLink_Channel_rfAckClanMatch_PublicWaitRoomList_Params params;
	params.WaitRoomIdx = WaitRoomIdx;
	params.LeaderName = LeaderName;
	params.RoomName = RoomName;
	params.MapNum = MapNum;
	params.CurUserCount = CurUserCount;
	params.MaxUserCount = MaxUserCount;
	params.Status = Status;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_StartPublicWaitRoomList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_StartPublicWaitRoomList(int Result, const struct FString& ErrMsg, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_StartPublicWaitRoomList");

	UBTTcpLink_Channel_rfAckClanMatch_StartPublicWaitRoomList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_GetPublicWaitRoomList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_GetPublicWaitRoomList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_GetPublicWaitRoomList");

	UBTTcpLink_Channel_rfReqClanMatch_GetPublicWaitRoomList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckServerType
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckServerType(unsigned char Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckServerType");

	UBTTcpLink_Channel_rfAckServerType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqServerType
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqServerType()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqServerType");

	UBTTcpLink_Channel_rfReqServerType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckServerShutdown
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckServerShutdown(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckServerShutdown");

	UBTTcpLink_Channel_rfAckServerShutdown_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqServerShutdown
// (Defined, Event, Public)
// Parameters:
// struct FString                 AuthKey                        (Parm, NeedCtorLink)
// int                            SecondAfter                    (Parm)
// struct FBtrDouble              ShutdownTime                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqServerShutdown(const struct FString& AuthKey, int SecondAfter, const struct FBtrDouble& ShutdownTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqServerShutdown");

	UBTTcpLink_Channel_rfReqServerShutdown_Params params;
	params.AuthKey = AuthKey;
	params.SecondAfter = SecondAfter;
	params.ShutdownTime = ShutdownTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyEndTutorial
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            Level                          (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            ClanMarkPattern                (Parm)
// int                            ClanMarkBG                     (Parm)
// int                            ClanMarkBL                     (Parm)
// int                            ClanGrade                      (Parm)
// int                            ClanWin                        (Parm)
// int                            ClanLose                       (Parm)
// unsigned char                  IsLookFor                      (Parm)
// int                            Result                         (Parm)
// int                            ClanLevel                      (Parm)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyEndTutorial(int UserID, const struct FString& CharName, int Level, const struct FString& ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyEndTutorial");

	UBTTcpLink_Channel_rfAckNotifyEndTutorial_Params params;
	params.UserID = UserID;
	params.CharName = CharName;
	params.Level = Level;
	params.ClanName = ClanName;
	params.ClanMarkPattern = ClanMarkPattern;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.IsLookFor = IsLookFor;
	params.Result = Result;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyEndTutorial
// (Defined, Event, Public)
// Parameters:
// int                            TutorialResultType             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyEndTutorial(int TutorialResultType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyEndTutorial");

	UBTTcpLink_Channel_rfReqNotifyEndTutorial_Params params;
	params.TutorialResultType = TutorialResultType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyStartTutorial
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyStartTutorial(int Result, int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyStartTutorial");

	UBTTcpLink_Channel_rfAckNotifyStartTutorial_Params params;
	params.Result = Result;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyStartTutorial
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyStartTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyStartTutorial");

	UBTTcpLink_Channel_rfReqNotifyStartTutorial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRoomUserPingInfo
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UnqueID                        (Parm, NeedCtorLink)
// TArray<int>                    Ping                           (Parm, NeedCtorLink)
// int                            HostPriorityPoint              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRoomUserPingInfo(TArray<int> UnqueID, TArray<int> Ping, int HostPriorityPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRoomUserPingInfo");

	UBTTcpLink_Channel_rfAckRoomUserPingInfo_Params params;
	params.UnqueID = UnqueID;
	params.Ping = Ping;
	params.HostPriorityPoint = HostPriorityPoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRoomUserPingInfo
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UnqueID                        (Parm, NeedCtorLink)
// TArray<int>                    Ping                           (Parm, NeedCtorLink)
// int                            HostPriorityPoint              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRoomUserPingInfo(TArray<int> UnqueID, TArray<int> Ping, int HostPriorityPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRoomUserPingInfo");

	UBTTcpLink_Channel_rfReqRoomUserPingInfo_Params params;
	params.UnqueID = UnqueID;
	params.Ping = Ping;
	params.HostPriorityPoint = HostPriorityPoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckMyEquipedQSlotList
// (Defined, Event, Public)
// Parameters:
// TArray<unsigned char>          QSlotDispOrder                 (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      MWUniqueID                     (Parm, NeedCtorLink)
// TArray<int>                    MWItemID                       (Parm, NeedCtorLink)
// TArray<int>                    MWPartID                       (Parm, NeedCtorLink)
// TArray<int>                    MWPaintID                      (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      PistolUniqueID                 (Parm, NeedCtorLink)
// TArray<int>                    PistolItemID                   (Parm, NeedCtorLink)
// TArray<int>                    PistolPartID                   (Parm, NeedCtorLink)
// TArray<int>                    PistolPaintID                  (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TW1UniqueID                    (Parm, NeedCtorLink)
// TArray<int>                    TWItemID1                      (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TW2UniqueID                    (Parm, NeedCtorLink)
// TArray<int>                    TWItemID2                      (Parm, NeedCtorLink)
// TArray<int>                    Skill1ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill2ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill3ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill4ID                       (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckMyEquipedQSlotList(TArray<unsigned char> QSlotDispOrder, TArray<struct FBtrDouble> MWUniqueID, TArray<int> MWItemID, TArray<int> MWPartID, TArray<int> MWPaintID, TArray<struct FBtrDouble> PistolUniqueID, TArray<int> PistolItemID, TArray<int> PistolPartID, TArray<int> PistolPaintID, TArray<struct FBtrDouble> TW1UniqueID, TArray<int> TWItemID1, TArray<struct FBtrDouble> TW2UniqueID, TArray<int> TWItemID2, TArray<int> Skill1ID, TArray<int> Skill2ID, TArray<int> Skill3ID, TArray<int> Skill4ID, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckMyEquipedQSlotList");

	UBTTcpLink_Channel_rfAckMyEquipedQSlotList_Params params;
	params.QSlotDispOrder = QSlotDispOrder;
	params.MWUniqueID = MWUniqueID;
	params.MWItemID = MWItemID;
	params.MWPartID = MWPartID;
	params.MWPaintID = MWPaintID;
	params.PistolUniqueID = PistolUniqueID;
	params.PistolItemID = PistolItemID;
	params.PistolPartID = PistolPartID;
	params.PistolPaintID = PistolPaintID;
	params.TW1UniqueID = TW1UniqueID;
	params.TWItemID1 = TWItemID1;
	params.TW2UniqueID = TW2UniqueID;
	params.TWItemID2 = TWItemID2;
	params.Skill1ID = Skill1ID;
	params.Skill2ID = Skill2ID;
	params.Skill3ID = Skill3ID;
	params.Skill4ID = Skill4ID;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqMyEquipedQSlotList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqMyEquipedQSlotList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqMyEquipedQSlotList");

	UBTTcpLink_Channel_rfReqMyEquipedQSlotList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckMyEquipedSkillList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    SkillIDs                       (Parm, NeedCtorLink)
// TArray<int>                    SlotPositions                  (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckMyEquipedSkillList(TArray<int> SkillIDs, TArray<int> SlotPositions, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckMyEquipedSkillList");

	UBTTcpLink_Channel_rfAckMyEquipedSkillList_Params params;
	params.SkillIDs = SkillIDs;
	params.SlotPositions = SlotPositions;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqMyEquipedSkillList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqMyEquipedSkillList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqMyEquipedSkillList");

	UBTTcpLink_Channel_rfReqMyEquipedSkillList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckMyEquipedItemList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    SlotPositions                  (Parm, NeedCtorLink)
// TArray<int>                    AddPartsID                     (Parm, NeedCtorLink)
// TArray<int>                    PaintID                        (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueID                       (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckMyEquipedItemList(TArray<int> ItemIDs, TArray<int> SlotPositions, TArray<int> AddPartsID, TArray<int> PaintID, TArray<struct FBtrDouble> UniqueID, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckMyEquipedItemList");

	UBTTcpLink_Channel_rfAckMyEquipedItemList_Params params;
	params.ItemIDs = ItemIDs;
	params.SlotPositions = SlotPositions;
	params.AddPartsID = AddPartsID;
	params.PaintID = PaintID;
	params.UniqueID = UniqueID;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqMyEquipedItemList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqMyEquipedItemList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqMyEquipedItemList");

	UBTTcpLink_Channel_rfReqMyEquipedItemList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetMyMailBoxState
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  IsFull                         (Parm)
// int                            NewMailCount                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetMyMailBoxState(int Result, unsigned char IsFull, int NewMailCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetMyMailBoxState");

	UBTTcpLink_Channel_rfAckGetMyMailBoxState_Params params;
	params.Result = Result;
	params.IsFull = IsFull;
	params.NewMailCount = NewMailCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetMyMailBoxState
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetMyMailBoxState()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetMyMailBoxState");

	UBTTcpLink_Channel_rfReqGetMyMailBoxState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSetLookForClan
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsLookingFor                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSetLookForClan(int Result, const struct FString& ErrMsg, unsigned char IsLookingFor)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSetLookForClan");

	UBTTcpLink_Channel_rfAckSetLookForClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsLookingFor = IsLookingFor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSetLookForClan
// (Defined, Event, Public)
// Parameters:
// unsigned char                  IsLookingFor                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSetLookForClan(unsigned char IsLookingFor)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSetLookForClan");

	UBTTcpLink_Channel_rfReqSetLookForClan_Params params;
	params.IsLookingFor = IsLookingFor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckExteriorRoomOwnerInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckExteriorRoomOwnerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckExteriorRoomOwnerInfo");

	UBTTcpLink_Channel_rfAckExteriorRoomOwnerInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqExteriorRoomOwnerInfo
// (Defined, Event, Public)
// Parameters:
// int                            RoomNum                        (Parm)
// struct FString                 OwnerName                      (Parm, NeedCtorLink)
// struct FString                 OwnerIP                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqExteriorRoomOwnerInfo(int RoomNum, const struct FString& OwnerName, const struct FString& OwnerIP)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqExteriorRoomOwnerInfo");

	UBTTcpLink_Channel_rfReqExteriorRoomOwnerInfo_Params params;
	params.RoomNum = RoomNum;
	params.OwnerName = OwnerName;
	params.OwnerIP = OwnerIP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_SetWaitRoomPublic
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  Set                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_SetWaitRoomPublic(int Result, const struct FString& ErrMsg, unsigned char Set)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_SetWaitRoomPublic");

	UBTTcpLink_Channel_rfAckClanMatch_SetWaitRoomPublic_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Set = Set;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_SetWaitRoomPublic
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Set                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_SetWaitRoomPublic(unsigned char Set)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_SetWaitRoomPublic");

	UBTTcpLink_Channel_rfReqClanMatch_SetWaitRoomPublic_Params params;
	params.Set = Set;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRemoveCheckTeamBalanceList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRemoveCheckTeamBalanceList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRemoveCheckTeamBalanceList");

	UBTTcpLink_Channel_rfReqRemoveCheckTeamBalanceList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_NotifyChangeClanMark
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            Pattern                        (Parm)
// int                            BG                             (Parm)
// int                            BL                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPaidItem_NotifyChangeClanMark(const struct FString& ClanName, int Pattern, int BG, int BL)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_NotifyChangeClanMark");

	UBTTcpLink_Channel_rfAckPaidItem_NotifyChangeClanMark_Params params;
	params.ClanName = ClanName;
	params.Pattern = Pattern;
	params.BG = BG;
	params.BL = BL;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_ChangeClanMark
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            StackCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPaidItem_ChangeClanMark(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_ChangeClanMark");

	UBTTcpLink_Channel_rfAckPaidItem_ChangeClanMark_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_ChangeClanMark
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// unsigned char                  IsPaid                         (Parm)
// int                            Pattern                        (Parm)
// int                            BG                             (Parm)
// int                            BL                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqPaidItem_ChangeClanMark(const struct FBtrDouble& ItemIdx, unsigned char IsPaid, int Pattern, int BG, int BL)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_ChangeClanMark");

	UBTTcpLink_Channel_rfReqPaidItem_ChangeClanMark_Params params;
	params.ItemIdx = ItemIdx;
	params.IsPaid = IsPaid;
	params.Pattern = Pattern;
	params.BG = BG;
	params.BL = BL;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_ClanMarkDupCheck
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPaidItem_ClanMarkDupCheck(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_ClanMarkDupCheck");

	UBTTcpLink_Channel_rfAckPaidItem_ClanMarkDupCheck_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_ClanMarkDupCheck
// (Defined, Event, Public)
// Parameters:
// unsigned char                  IsPaid                         (Parm)
// int                            Pattern                        (Parm)
// int                            BG                             (Parm)
// int                            BL                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqPaidItem_ClanMarkDupCheck(unsigned char IsPaid, int Pattern, int BG, int BL)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_ClanMarkDupCheck");

	UBTTcpLink_Channel_rfReqPaidItem_ClanMarkDupCheck_Params params;
	params.IsPaid = IsPaid;
	params.Pattern = Pattern;
	params.BG = BG;
	params.BL = BL;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_RelayBroadcast
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPaidItem_RelayBroadcast(const struct FString& CharName, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_RelayBroadcast");

	UBTTcpLink_Channel_rfAckPaidItem_RelayBroadcast_Params params;
	params.CharName = CharName;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_BroadCast
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            StackCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPaidItem_BroadCast(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_BroadCast");

	UBTTcpLink_Channel_rfAckPaidItem_BroadCast_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_BroadCast
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            Command                        (Parm)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqPaidItem_BroadCast(const struct FBtrDouble& ItemIdx, int Command, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_BroadCast");

	UBTTcpLink_Channel_rfReqPaidItem_BroadCast_Params params;
	params.ItemIdx = ItemIdx;
	params.Command = Command;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_EraseRecord
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            Command                        (Parm)
// int                            RemainCount                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPaidItem_EraseRecord(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int Command, int RemainCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_EraseRecord");

	UBTTcpLink_Channel_rfAckPaidItem_EraseRecord_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.Command = Command;
	params.RemainCount = RemainCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_EraseRecord
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            Command                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqPaidItem_EraseRecord(const struct FBtrDouble& ItemIdx, int Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_EraseRecord");

	UBTTcpLink_Channel_rfReqPaidItem_EraseRecord_Params params;
	params.ItemIdx = ItemIdx;
	params.Command = Command;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_ChangeCharname
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            RemainCount                    (Parm)
// struct FString                 NewCharname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPaidItem_ChangeCharname(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int RemainCount, const struct FString& NewCharname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPaidItem_ChangeCharname");

	UBTTcpLink_Channel_rfAckPaidItem_ChangeCharname_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.RemainCount = RemainCount;
	params.NewCharname = NewCharname;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_ChangeCharname
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ItemIdx                        (Parm)
// struct FString                 NewCharname                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqPaidItem_ChangeCharname(const struct FBtrDouble& ItemIdx, const struct FString& NewCharname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqPaidItem_ChangeCharname");

	UBTTcpLink_Channel_rfReqPaidItem_ChangeCharname_Params params;
	params.ItemIdx = ItemIdx;
	params.NewCharname = NewCharname;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRecvSystemMsg
// (Defined, Event, Public)
// Parameters:
// unsigned char                  CommunityType                  (Parm)
// struct FSystemMsgParam         MsgInfo                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRecvSystemMsg(unsigned char CommunityType, const struct FSystemMsgParam& MsgInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRecvSystemMsg");

	UBTTcpLink_Channel_rfAckRecvSystemMsg_Params params;
	params.CommunityType = CommunityType;
	params.MsgInfo = MsgInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSendSystemMsg
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSendSystemMsg(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSendSystemMsg");

	UBTTcpLink_Channel_rfAckSendSystemMsg_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSendSystemMsg
// (Defined, Event, Public)
// Parameters:
// unsigned char                  RecvType                       (Parm)
// struct FString                 SendCharName                   (Parm, NeedCtorLink)
// struct FString                 RecvCharname                   (Parm, NeedCtorLink)
// struct FSystemMsgParam         MsgInfo                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSendSystemMsg(unsigned char RecvType, const struct FString& SendCharName, const struct FString& RecvCharname, const struct FSystemMsgParam& MsgInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSendSystemMsg");

	UBTTcpLink_Channel_rfReqSendSystemMsg_Params params;
	params.RecvType = RecvType;
	params.SendCharName = SendCharName;
	params.RecvCharname = RecvCharname;
	params.MsgInfo = MsgInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRandomBox_Use
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              RandomBoxItemIdx               (Parm)
// int                            RandomBxoItemCount             (Parm)
// struct FBtrDouble              KeyItemIdx                     (Parm)
// int                            KeyItemRemainCount             (Parm)
// TArray<int>                    ItemIDChoose                   (Parm, NeedCtorLink)
// TArray<int>                    PartIDChoose                   (Parm, NeedCtorLink)
// TArray<int>                    PeriodOnChoosenItem            (Parm, NeedCtorLink)
// TArray<int>                    StackCountOnChoosenItem        (Parm, NeedCtorLink)
// TArray<unsigned char>          bHave                          (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      ItemIdx                        (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UntilTime                      (Parm, NeedCtorLink)
// TArray<int>                    StackCount                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRandomBox_Use(int Result, const struct FString& ErrMsg, const struct FBtrDouble& RandomBoxItemIdx, int RandomBxoItemCount, const struct FBtrDouble& KeyItemIdx, int KeyItemRemainCount, TArray<int> ItemIDChoose, TArray<int> PartIDChoose, TArray<int> PeriodOnChoosenItem, TArray<int> StackCountOnChoosenItem, TArray<unsigned char> bHave, TArray<struct FBtrDouble> ItemIdx, TArray<struct FBtrDouble> UntilTime, TArray<int> StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRandomBox_Use");

	UBTTcpLink_Channel_rfAckRandomBox_Use_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.RandomBoxItemIdx = RandomBoxItemIdx;
	params.RandomBxoItemCount = RandomBxoItemCount;
	params.KeyItemIdx = KeyItemIdx;
	params.KeyItemRemainCount = KeyItemRemainCount;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;
	params.PeriodOnChoosenItem = PeriodOnChoosenItem;
	params.StackCountOnChoosenItem = StackCountOnChoosenItem;
	params.bHave = bHave;
	params.ItemIdx = ItemIdx;
	params.UntilTime = UntilTime;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRandomBox_Use
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ItemIdx_RandomBox              (Parm)
// struct FBtrDouble              ItemIdx_Key                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRandomBox_Use(const struct FBtrDouble& ItemIdx_RandomBox, const struct FBtrDouble& ItemIdx_Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRandomBox_Use");

	UBTTcpLink_Channel_rfReqRandomBox_Use_Params params;
	params.ItemIdx_RandomBox = ItemIdx_RandomBox;
	params.ItemIdx_Key = ItemIdx_Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangedRoomTitle_FromGM
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RoomNumber                     (Parm)
// struct FString                 NewRoomTitle                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangedRoomTitle_FromGM(int Result, int RoomNumber, const struct FString& NewRoomTitle)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangedRoomTitle_FromGM");

	UBTTcpLink_Channel_rfAckChangedRoomTitle_FromGM_Params params;
	params.Result = Result;
	params.RoomNumber = RoomNumber;
	params.NewRoomTitle = NewRoomTitle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangeRoomTitle_GM
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RoomNumber                     (Parm)
// struct FString                 NewRoomTitle                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangeRoomTitle_GM(int Result, int RoomNumber, const struct FString& NewRoomTitle)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangeRoomTitle_GM");

	UBTTcpLink_Channel_rfAckChangeRoomTitle_GM_Params params;
	params.Result = Result;
	params.RoomNumber = RoomNumber;
	params.NewRoomTitle = NewRoomTitle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChangeRoomTitle_GM
// (Defined, Event, Public)
// Parameters:
// int                            RoomNumber                     (Parm)
// struct FString                 NewRoomTitle                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChangeRoomTitle_GM(int RoomNumber, const struct FString& NewRoomTitle)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChangeRoomTitle_GM");

	UBTTcpLink_Channel_rfReqChangeRoomTitle_GM_Params params;
	params.RoomNumber = RoomNumber;
	params.NewRoomTitle = NewRoomTitle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGMLeaveRoom
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RoomNumber                     (Parm)
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGMLeaveRoom(int Result, int RoomNumber, int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGMLeaveRoom");

	UBTTcpLink_Channel_rfAckGMLeaveRoom_Params params;
	params.Result = Result;
	params.RoomNumber = RoomNumber;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGMEnterRoom
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            RoomNumber                     (Parm)
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGMEnterRoom(int Result, int RoomNumber, int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGMEnterRoom");

	UBTTcpLink_Channel_rfAckGMEnterRoom_Params params;
	params.Result = Result;
	params.RoomNumber = RoomNumber;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckQuestGetAvailableEventList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    QuestID                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckQuestGetAvailableEventList(int Result, const struct FString& ErrMsg, TArray<int> QuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckQuestGetAvailableEventList");

	UBTTcpLink_Channel_rfAckQuestGetAvailableEventList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.QuestID = QuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqQuestGetAvailableEventList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqQuestGetAvailableEventList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqQuestGetAvailableEventList");

	UBTTcpLink_Channel_rfReqQuestGetAvailableEventList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckCharBlockInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FBtrDouble              ChatBlockStartTime             (Parm)
// struct FBtrDouble              ChatBlockEndTime               (Parm)
// TArray<struct FBtrDouble>      BlockedItemIdx                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckCharBlockInfo(int Result, const struct FBtrDouble& ChatBlockStartTime, const struct FBtrDouble& ChatBlockEndTime, TArray<struct FBtrDouble> BlockedItemIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckCharBlockInfo");

	UBTTcpLink_Channel_rfAckCharBlockInfo_Params params;
	params.Result = Result;
	params.ChatBlockStartTime = ChatBlockStartTime;
	params.ChatBlockEndTime = ChatBlockEndTime;
	params.BlockedItemIdx = BlockedItemIdx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqCharBlockInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqCharBlockInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqCharBlockInfo");

	UBTTcpLink_Channel_rfReqCharBlockInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqIsPaidWebzenPCBang
// (Defined, Event, Public)
// Parameters:
// unsigned char                  IsPaid                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqIsPaidWebzenPCBang(unsigned char IsPaid)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqIsPaidWebzenPCBang");

	UBTTcpLink_Channel_rfReqIsPaidWebzenPCBang_Params params;
	params.IsPaid = IsPaid;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_GetClanWaittingRoomInfo
// (Defined, Event, Public)
// Parameters:
// int                            WaitRoomIndex                  (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// struct FString                 WaitRoomName                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_GetClanWaittingRoomInfo(int WaitRoomIndex, int Result, const struct FString& ErrMsg, TArray<int> MapNumArray, int VersusMode, const struct FString& WaitRoomName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_GetClanWaittingRoomInfo");

	UBTTcpLink_Channel_rfAckClanMatch_GetClanWaittingRoomInfo_Params params;
	params.WaitRoomIndex = WaitRoomIndex;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;
	params.WaitRoomName = WaitRoomName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_GetClanWaittingRoomInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_GetClanWaittingRoomInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_GetClanWaittingRoomInfo");

	UBTTcpLink_Channel_rfReqClanMatch_GetClanWaittingRoomInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckReturnBotID
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckReturnBotID(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckReturnBotID");

	UBTTcpLink_Channel_rfAckReturnBotID_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqReturnBotID
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    BotID                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqReturnBotID(TArray<int> BotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqReturnBotID");

	UBTTcpLink_Channel_rfReqReturnBotID_Params params;
	params.BotID = BotID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetBotID
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  RequestedAFCount               (Parm)
// unsigned char                  RequestedRSACount              (Parm)
// TArray<int>                    AFBotID                        (Parm, NeedCtorLink)
// TArray<int>                    RSABotID                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetBotID(int Result, unsigned char RequestedAFCount, unsigned char RequestedRSACount, TArray<int> AFBotID, TArray<int> RSABotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetBotID");

	UBTTcpLink_Channel_rfAckGetBotID_Params params;
	params.Result = Result;
	params.RequestedAFCount = RequestedAFCount;
	params.RequestedRSACount = RequestedRSACount;
	params.AFBotID = AFBotID;
	params.RSABotID = RSABotID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetBotID
// (Defined, Event, Public)
// Parameters:
// unsigned char                  AFCount                        (Parm)
// unsigned char                  RSACount                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetBotID(unsigned char AFCount, unsigned char RSACount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetBotID");

	UBTTcpLink_Channel_rfReqGetBotID_Params params;
	params.AFCount = AFCount;
	params.RSACount = RSACount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_ChangeRoomSetting
// (Defined, Event, Public)
// Parameters:
// int                            WaitRoomIndex                  (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// unsigned char                  IsPublic                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_ChangeRoomSetting(int WaitRoomIndex, int Result, const struct FString& ErrMsg, TArray<int> MapNumArray, int VersusMode, unsigned char IsPublic)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_ChangeRoomSetting");

	UBTTcpLink_Channel_rfAckClanMatch_ChangeRoomSetting_Params params;
	params.WaitRoomIndex = WaitRoomIndex;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;
	params.IsPublic = IsPublic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_ChangeRoomSetting
// (Defined, Event, Public)
// Parameters:
// int                            WaitRoomIndex                  (Parm)
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// unsigned char                  IsPublic                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_ChangeRoomSetting(int WaitRoomIndex, TArray<int> MapNumArray, int VersusMode, unsigned char IsPublic)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_ChangeRoomSetting");

	UBTTcpLink_Channel_rfReqClanMatch_ChangeRoomSetting_Params params;
	params.WaitRoomIndex = WaitRoomIndex;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;
	params.IsPublic = IsPublic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckParamCheckSum
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckParamCheckSum(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckParamCheckSum");

	UBTTcpLink_Channel_rfAckParamCheckSum_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqParamCheckSum
// (Defined, Event, Public)
// Parameters:
// struct FString                 key                            (Parm, NeedCtorLink)
// struct FString                 Value                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqParamCheckSum(const struct FString& key, const struct FString& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqParamCheckSum");

	UBTTcpLink_Channel_rfReqParamCheckSum_Params params;
	params.key = key;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckWebzenBillingUseStorageItem
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemExtra                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckWebzenBillingUseStorageItem(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int ItemID, const struct FBtrDouble& ItemExtra)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckWebzenBillingUseStorageItem");

	UBTTcpLink_Channel_rfAckWebzenBillingUseStorageItem_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.ItemID = ItemID;
	params.ItemExtra = ItemExtra;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqWebzenBillingUseStorageItem
// (Defined, Event, Public)
// Parameters:
// int                            StorageSeq                     (Parm)
// int                            StorageItemSeq                 (Parm)
// unsigned char                  StorageItemType                (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqWebzenBillingUseStorageItem(int StorageSeq, int StorageItemSeq, unsigned char StorageItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqWebzenBillingUseStorageItem");

	UBTTcpLink_Channel_rfReqWebzenBillingUseStorageItem_Params params;
	params.StorageSeq = StorageSeq;
	params.StorageItemSeq = StorageItemSeq;
	params.StorageItemType = StorageItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckWebzenBillingStorageListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckWebzenBillingStorageListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckWebzenBillingStorageListEnd");

	UBTTcpLink_Channel_rfAckWebzenBillingStorageListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckWebzenBillingStorageList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    Seq                            (Parm, NeedCtorLink)
// TArray<int>                    ItemSeq                        (Parm, NeedCtorLink)
// TArray<int>                    GroupCode                      (Parm, NeedCtorLink)
// TArray<int>                    ShareFlag                      (Parm, NeedCtorLink)
// TArray<int>                    ProductSeq                     (Parm, NeedCtorLink)
// TArray<struct FString>         CashName                       (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      CashPoint                      (Parm, NeedCtorLink)
// TArray<struct FString>         SendAccountID                  (Parm, NeedCtorLink)
// TArray<struct FString>         SendMessage                    (Parm, NeedCtorLink)
// TArray<unsigned char>          ItemType                       (Parm, NeedCtorLink)
// TArray<unsigned char>          RelationType                   (Parm, NeedCtorLink)
// TArray<int>                    ProductType                    (Parm, NeedCtorLink)
// TArray<int>                    PriceSeq                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckWebzenBillingStorageList(TArray<int> Seq, TArray<int> ItemSeq, TArray<int> GroupCode, TArray<int> ShareFlag, TArray<int> ProductSeq, TArray<struct FString> CashName, TArray<struct FBtrDouble> CashPoint, TArray<struct FString> SendAccountID, TArray<struct FString> SendMessage, TArray<unsigned char> ItemType, TArray<unsigned char> RelationType, TArray<int> ProductType, TArray<int> PriceSeq)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckWebzenBillingStorageList");

	UBTTcpLink_Channel_rfAckWebzenBillingStorageList_Params params;
	params.Seq = Seq;
	params.ItemSeq = ItemSeq;
	params.GroupCode = GroupCode;
	params.ShareFlag = ShareFlag;
	params.ProductSeq = ProductSeq;
	params.CashName = CashName;
	params.CashPoint = CashPoint;
	params.SendAccountID = SendAccountID;
	params.SendMessage = SendMessage;
	params.ItemType = ItemType;
	params.RelationType = RelationType;
	params.ProductType = ProductType;
	params.PriceSeq = PriceSeq;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckWebzenBillingStorageListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            TotalCount                     (Parm)
// int                            TotalPage                      (Parm)
// int                            CurPage                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckWebzenBillingStorageListStart(int Result, const struct FString& ErrMsg, int TotalCount, int TotalPage, int CurPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckWebzenBillingStorageListStart");

	UBTTcpLink_Channel_rfAckWebzenBillingStorageListStart_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.TotalCount = TotalCount;
	params.TotalPage = TotalPage;
	params.CurPage = CurPage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqWebzenBillingStorageList
// (Defined, Event, Public)
// Parameters:
// int                            Page                           (Parm)
// int                            CountForPage                   (Parm)
// unsigned char                  Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqWebzenBillingStorageList(int Page, int CountForPage, unsigned char Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqWebzenBillingStorageList");

	UBTTcpLink_Channel_rfReqWebzenBillingStorageList_Params params;
	params.Page = Page;
	params.CountForPage = CountForPage;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGiftItemByWebzenCash
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            LeftProductCount               (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGiftItemByWebzenCash(int Result, const struct FString& ErrMsg, int LeftProductCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGiftItemByWebzenCash");

	UBTTcpLink_Channel_rfAckGiftItemByWebzenCash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.LeftProductCount = LeftProductCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGiftItemByWebzenCash
// (Defined, Event, Public)
// Parameters:
// struct FString                 ReceiverCharName               (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// int                            PackageProductSeq              (Parm)
// int                            PriceSeq                       (Parm)
// int                            ProductDisplaySeq              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGiftItemByWebzenCash(const struct FString& ReceiverCharName, const struct FString& Message, int PackageProductSeq, int PriceSeq, int ProductDisplaySeq)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGiftItemByWebzenCash");

	UBTTcpLink_Channel_rfReqGiftItemByWebzenCash_Params params;
	params.ReceiverCharName = ReceiverCharName;
	params.Message = Message;
	params.PackageProductSeq = PackageProductSeq;
	params.PriceSeq = PriceSeq;
	params.ProductDisplaySeq = ProductDisplaySeq;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGiftItemByWebzenCashGP20
// (Defined, Event, Public)
// Parameters:
// struct FString                 ReceiverCharName               (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// int                            ProductNo                      (Parm)
// unsigned char                  Cointype                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGiftItemByWebzenCashGP20(const struct FString& ReceiverCharName, const struct FString& Message, int ProductNo, unsigned char Cointype)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGiftItemByWebzenCashGP20");

	UBTTcpLink_Channel_rfReqGiftItemByWebzenCashGP20_Params params;
	params.ReceiverCharName = ReceiverCharName;
	params.Message = Message;
	params.ProductNo = ProductNo;
	params.Cointype = Cointype;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckBuyItemByWebzenCash
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckBuyItemByWebzenCash(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckBuyItemByWebzenCash");

	UBTTcpLink_Channel_rfAckBuyItemByWebzenCash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqBuyItemByWebzenCash
// (Defined, Event, Public)
// Parameters:
// int                            PackageProductSeq              (Parm)
// int                            ProductDisplaySeq              (Parm)
// int                            PriceSeq                       (Parm)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// unsigned char                  BuyOption1                     (Parm)
// unsigned char                  BuyOption2                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqBuyItemByWebzenCash(int PackageProductSeq, int ProductDisplaySeq, int PriceSeq, TArray<int> ItemIDs, const struct FBtrDouble& ItemUniqueID, unsigned char BuyOption1, unsigned char BuyOption2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqBuyItemByWebzenCash");

	UBTTcpLink_Channel_rfReqBuyItemByWebzenCash_Params params;
	params.PackageProductSeq = PackageProductSeq;
	params.ProductDisplaySeq = ProductDisplaySeq;
	params.PriceSeq = PriceSeq;
	params.ItemIDs = ItemIDs;
	params.ItemUniqueID = ItemUniqueID;
	params.BuyOption1 = BuyOption1;
	params.BuyOption2 = BuyOption2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqBuyItemByWebzenCashGP20
// (Defined, Event, Public)
// Parameters:
// int                            ProductNo                      (Parm)
// unsigned char                  Cointype                       (Parm)
// struct FBtrDouble              ItemID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqBuyItemByWebzenCashGP20(int ProductNo, unsigned char Cointype, const struct FBtrDouble& ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqBuyItemByWebzenCashGP20");

	UBTTcpLink_Channel_rfReqBuyItemByWebzenCashGP20_Params params;
	params.ProductNo = ProductNo;
	params.Cointype = Cointype;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckWebzenShopScriptVersion
// (Defined, Event, Public)
// Parameters:
// int                            Year                           (Parm)
// int                            YearId                         (Parm)
// int                            SalesZoneCode                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckWebzenShopScriptVersion(int Year, int YearId, int SalesZoneCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckWebzenShopScriptVersion");

	UBTTcpLink_Channel_rfAckWebzenShopScriptVersion_Params params;
	params.Year = Year;
	params.YearId = YearId;
	params.SalesZoneCode = SalesZoneCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqWebzenShopScriptVersion
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqWebzenShopScriptVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqWebzenShopScriptVersion");

	UBTTcpLink_Channel_rfReqWebzenShopScriptVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckWebzenCash
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              PCoinCash                      (Parm)
// struct FBtrDouble              CCoinCash                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckWebzenCash(int Result, const struct FString& ErrMsg, const struct FBtrDouble& PCoinCash, const struct FBtrDouble& CCoinCash)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckWebzenCash");

	UBTTcpLink_Channel_rfAckWebzenCash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PCoinCash = PCoinCash;
	params.CCoinCash = CCoinCash;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqWebzenCash
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqWebzenCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqWebzenCash");

	UBTTcpLink_Channel_rfReqWebzenCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRegisteredPCBangInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsRegisteredPCBang             (Parm)
// unsigned char                  IsMainPCBang                   (Parm)
// struct FString                 PCBangName                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRegisteredPCBangInfo(int Result, const struct FString& ErrMsg, unsigned char IsRegisteredPCBang, unsigned char IsMainPCBang, const struct FString& PCBangName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRegisteredPCBangInfo");

	UBTTcpLink_Channel_rfAckRegisteredPCBangInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsRegisteredPCBang = IsRegisteredPCBang;
	params.IsMainPCBang = IsMainPCBang;
	params.PCBangName = PCBangName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRegisteredPCBangInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRegisteredPCBangInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRegisteredPCBangInfo");

	UBTTcpLink_Channel_rfReqRegisteredPCBangInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRegisterMainPCBang
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRegisterMainPCBang(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRegisterMainPCBang");

	UBTTcpLink_Channel_rfAckRegisterMainPCBang_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRegisterMainPCBang
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRegisterMainPCBang()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRegisterMainPCBang");

	UBTTcpLink_Channel_rfReqRegisterMainPCBang_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPCBangUserListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPCBangUserListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPCBangUserListEnd");

	UBTTcpLink_Channel_rfAckPCBangUserListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPCBangUserList
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         FriendName                     (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    CM_Pattern                     (Parm, NeedCtorLink)
// TArray<int>                    CM_BG                          (Parm, NeedCtorLink)
// TArray<int>                    CM_BL                          (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<int>                    ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookForClan                  (Parm, NeedCtorLink)
// TArray<unsigned char>          IsCombat                       (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPCBangUserList(TArray<struct FString> FriendName, TArray<struct FString> ClanName, TArray<int> CM_Pattern, TArray<int> CM_BG, TArray<int> CM_BL, TArray<int> Level, TArray<int> ClanGrade, TArray<int> ClanWin, TArray<int> ClanLose, TArray<unsigned char> IsLookForClan, TArray<unsigned char> IsCombat, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPCBangUserList");

	UBTTcpLink_Channel_rfAckPCBangUserList_Params params;
	params.FriendName = FriendName;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.Level = Level;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.IsLookForClan = IsLookForClan;
	params.IsCombat = IsCombat;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPCBangUserListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPCBangUserListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPCBangUserListStart");

	UBTTcpLink_Channel_rfAckPCBangUserListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqPCBangUserList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqPCBangUserList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqPCBangUserList");

	UBTTcpLink_Channel_rfReqPCBangUserList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDailyQuestNewAvailable
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    ExpiredQuestID                 (Parm, NeedCtorLink)
// TArray<int>                    NewQuestID                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDailyQuestNewAvailable(TArray<int> ExpiredQuestID, TArray<int> NewQuestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDailyQuestNewAvailable");

	UBTTcpLink_Channel_rfReqDailyQuestNewAvailable_Params params;
	params.ExpiredQuestID = ExpiredQuestID;
	params.NewQuestID = NewQuestID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqQuestNewAvailable
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    AchivedQuestID                 (Parm, NeedCtorLink)
// TArray<int>                    NewQuestID                     (Parm, NeedCtorLink)
// TArray<unsigned char>          IsDailyQuest                   (Parm, NeedCtorLink)
// TArray<int>                    ExpiredQuest                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqQuestNewAvailable(TArray<int> AchivedQuestID, TArray<int> NewQuestID, TArray<unsigned char> IsDailyQuest, TArray<int> ExpiredQuest)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqQuestNewAvailable");

	UBTTcpLink_Channel_rfReqQuestNewAvailable_Params params;
	params.AchivedQuestID = AchivedQuestID;
	params.NewQuestID = NewQuestID;
	params.IsDailyQuest = IsDailyQuest;
	params.ExpiredQuest = ExpiredQuest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckQuestUpdate
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckQuestUpdate(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckQuestUpdate");

	UBTTcpLink_Channel_rfAckQuestUpdate_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqQuestUpdate
// (Defined, Event, Public)
// Parameters:
// int                            UniqueID                       (Parm)
// int                            GameRoomNum                    (Parm)
// TArray<int>                    QuestID                        (Parm, NeedCtorLink)
// TArray<int>                    CountPrograss                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqQuestUpdate(int UniqueID, int GameRoomNum, TArray<int> QuestID, TArray<int> CountPrograss)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqQuestUpdate");

	UBTTcpLink_Channel_rfReqQuestUpdate_Params params;
	params.UniqueID = UniqueID;
	params.GameRoomNum = GameRoomNum;
	params.QuestID = QuestID;
	params.CountPrograss = CountPrograss;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckQuestListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckQuestListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckQuestListEnd");

	UBTTcpLink_Channel_rfAckQuestListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckQuestList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    QuestID                        (Parm, NeedCtorLink)
// TArray<int>                    CountPrograss                  (Parm, NeedCtorLink)
// TArray<unsigned char>          QuestType                      (Parm, NeedCtorLink)
// TArray<unsigned char>          IsComplete                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckQuestList(TArray<int> QuestID, TArray<int> CountPrograss, TArray<unsigned char> QuestType, TArray<unsigned char> IsComplete)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckQuestList");

	UBTTcpLink_Channel_rfAckQuestList_Params params;
	params.QuestID = QuestID;
	params.CountPrograss = CountPrograss;
	params.QuestType = QuestType;
	params.IsComplete = IsComplete;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckQuestListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckQuestListStart(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckQuestListStart");

	UBTTcpLink_Channel_rfAckQuestListStart_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqQuestList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqQuestList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqQuestList");

	UBTTcpLink_Channel_rfReqQuestList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckPermanentRoomInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            ClanIdx                        (Parm)
// unsigned char                  FixedGameMode                  (Parm)
// unsigned char                  FixedMaxUserCnt                (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckPermanentRoomInfo(int Result, int ClanIdx, unsigned char FixedGameMode, unsigned char FixedMaxUserCnt)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckPermanentRoomInfo");

	UBTTcpLink_Channel_rfAckPermanentRoomInfo_Params params;
	params.Result = Result;
	params.ClanIdx = ClanIdx;
	params.FixedGameMode = FixedGameMode;
	params.FixedMaxUserCnt = FixedMaxUserCnt;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqPermanentRoomInfo
// (Defined, Event, Public)
// Parameters:
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqPermanentRoomInfo(int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqPermanentRoomInfo");

	UBTTcpLink_Channel_rfReqPermanentRoomInfo_Params params;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_FoundMatch
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_FoundMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_FoundMatch");

	UBTTcpLink_Channel_rfAckClanMatch_FoundMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_FoundMatch
// (Defined, Event, Public)
// Parameters:
// int                            ChannelID                      (Parm)
// int                            RoomNumber                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_FoundMatch(int ChannelID, int RoomNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_FoundMatch");

	UBTTcpLink_Channel_rfReqClanMatch_FoundMatch_Params params;
	params.ChannelID = ChannelID;
	params.RoomNumber = RoomNumber;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_NotifyStartSearching
// (Defined, Event, Public)
// Parameters:
// int                            ShouldWaitMore                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_NotifyStartSearching(int ShouldWaitMore)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_NotifyStartSearching");

	UBTTcpLink_Channel_rfAckClanMatch_NotifyStartSearching_Params params;
	params.ShouldWaitMore = ShouldWaitMore;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_StartSearching
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ShouldWaitMore                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_StartSearching(int Result, const struct FString& ErrMsg, int ShouldWaitMore)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_StartSearching");

	UBTTcpLink_Channel_rfAckClanMatch_StartSearching_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ShouldWaitMore = ShouldWaitMore;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_StartSearching
// (Defined, Event, Public)
// Parameters:
// int                            RequestCount                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_StartSearching(int RequestCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_StartSearching");

	UBTTcpLink_Channel_rfReqClanMatch_StartSearching_Params params;
	params.RequestCount = RequestCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLimitedListInChannel
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// TArray<int>                    LimitedMapID                   (Parm, NeedCtorLink)
// TArray<int>                    LimitedModeID                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLimitedListInChannel(int Result, TArray<int> LimitedMapID, TArray<int> LimitedModeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLimitedListInChannel");

	UBTTcpLink_Channel_rfAckLimitedListInChannel_Params params;
	params.Result = Result;
	params.LimitedMapID = LimitedMapID;
	params.LimitedModeID = LimitedModeID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLimitedListInChannel
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLimitedListInChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLimitedListInChannel");

	UBTTcpLink_Channel_rfReqLimitedListInChannel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRecvInviteGameRoomResult
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRecvInviteGameRoomResult(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRecvInviteGameRoomResult");

	UBTTcpLink_Channel_rfAckRecvInviteGameRoomResult_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRecvInviteGameRoom
// (Defined, Event, Public)
// Parameters:
// struct FString                 RoomUniqueID                   (Parm, NeedCtorLink)
// int                            RoomNumber                     (Parm)
// unsigned char                  Answer                         (Parm)
// struct FString                 InviteCharName                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRecvInviteGameRoom(const struct FString& RoomUniqueID, int RoomNumber, unsigned char Answer, const struct FString& InviteCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRecvInviteGameRoom");

	UBTTcpLink_Channel_rfAckRecvInviteGameRoom_Params params;
	params.RoomUniqueID = RoomUniqueID;
	params.RoomNumber = RoomNumber;
	params.Answer = Answer;
	params.InviteCharName = InviteCharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvInviteGameRoom
// (Defined, Event, Public)
// Parameters:
// struct FString                 InviteUserServerName           (Parm, NeedCtorLink)
// int                            InviteUserServerID             (Parm)
// int                            InviteUserChannelNumber        (Parm)
// struct FString                 RoomUniqueID                   (Parm, NeedCtorLink)
// int                            RoomNumber                     (Parm)
// struct FString                 RoomName                       (Parm, NeedCtorLink)
// unsigned char                  RoomState                      (Parm)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// struct FString                 OwnerName                      (Parm, NeedCtorLink)
// unsigned char                  GameMode                       (Parm)
// unsigned char                  WeaponLimit                    (Parm)
// unsigned char                  IsTeamBalance                  (Parm)
// struct FString                 Password                       (Parm, NeedCtorLink)
// struct FString                 InviteCharName                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvInviteGameRoom(const struct FString& InviteUserServerName, int InviteUserServerID, int InviteUserChannelNumber, const struct FString& RoomUniqueID, int RoomNumber, const struct FString& RoomName, unsigned char RoomState, const struct FString& MapName, const struct FString& OwnerName, unsigned char GameMode, unsigned char WeaponLimit, unsigned char IsTeamBalance, const struct FString& Password, const struct FString& InviteCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvInviteGameRoom");

	UBTTcpLink_Channel_rfReqRecvInviteGameRoom_Params params;
	params.InviteUserServerName = InviteUserServerName;
	params.InviteUserServerID = InviteUserServerID;
	params.InviteUserChannelNumber = InviteUserChannelNumber;
	params.RoomUniqueID = RoomUniqueID;
	params.RoomNumber = RoomNumber;
	params.RoomName = RoomName;
	params.RoomState = RoomState;
	params.MapName = MapName;
	params.OwnerName = OwnerName;
	params.GameMode = GameMode;
	params.WeaponLimit = WeaponLimit;
	params.IsTeamBalance = IsTeamBalance;
	params.Password = Password;
	params.InviteCharName = InviteCharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckInviteGameRoom
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Answer                         (Parm)
// struct FString                 GuestCharName                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckInviteGameRoom(int Result, unsigned char Answer, const struct FString& GuestCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckInviteGameRoom");

	UBTTcpLink_Channel_rfAckInviteGameRoom_Params params;
	params.Result = Result;
	params.Answer = Answer;
	params.GuestCharName = GuestCharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqInviteGameRoom
// (Defined, Event, Public)
// Parameters:
// struct FString                 GuestCharName                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqInviteGameRoom(const struct FString& GuestCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqInviteGameRoom");

	UBTTcpLink_Channel_rfReqInviteGameRoom_Params params;
	params.GuestCharName = GuestCharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_StopSearching
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_StopSearching()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_StopSearching");

	UBTTcpLink_Channel_rfAckClanMatch_StopSearching_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_StopSearching
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_StopSearching()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_StopSearching");

	UBTTcpLink_Channel_rfReqClanMatch_StopSearching_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_ChangeLeader
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            NewLeader                      (Parm)
// struct FString                 NewLeaderName                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_ChangeLeader(int Result, const struct FString& ErrMsg, int NewLeader, const struct FString& NewLeaderName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_ChangeLeader");

	UBTTcpLink_Channel_rfAckClanMatch_ChangeLeader_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.NewLeader = NewLeader;
	params.NewLeaderName = NewLeaderName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_ChangeLeader
// (Defined, Event, Public)
// Parameters:
// int                            WaitRoomIdx                    (Parm)
// int                            NewLeaderID                    (Parm)
// struct FString                 NewLeaderName                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_ChangeLeader(int WaitRoomIdx, int NewLeaderID, const struct FString& NewLeaderName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_ChangeLeader");

	UBTTcpLink_Channel_rfReqClanMatch_ChangeLeader_Params params;
	params.WaitRoomIdx = WaitRoomIdx;
	params.NewLeaderID = NewLeaderID;
	params.NewLeaderName = NewLeaderName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_WaittingTeamList
// (Defined, Event, Public)
// Parameters:
// int                            TtotlCount                     (Parm)
// TArray<int>                    Grade                          (Parm, NeedCtorLink)
// TArray<int>                    Map                            (Parm, NeedCtorLink)
// TArray<int>                    Versus                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_WaittingTeamList(int TtotlCount, TArray<int> Grade, TArray<int> Map, TArray<int> Versus)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_WaittingTeamList");

	UBTTcpLink_Channel_rfAckClanMatch_WaittingTeamList_Params params;
	params.TtotlCount = TtotlCount;
	params.Grade = Grade;
	params.Map = Map;
	params.Versus = Versus;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_WaittingTeamList
// (Defined, Event, Public)
// Parameters:
// int                            StartIndex                     (Parm)
// int                            ReturnCount                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_WaittingTeamList(int StartIndex, int ReturnCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_WaittingTeamList");

	UBTTcpLink_Channel_rfReqClanMatch_WaittingTeamList_Params params;
	params.StartIndex = StartIndex;
	params.ReturnCount = ReturnCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_Chat
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_Chat(int Result, const struct FString& ErrMsg, const struct FString& CharName, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_Chat");

	UBTTcpLink_Channel_rfAckClanMatch_Chat_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.CharName = CharName;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_Chat
// (Defined, Event, Public)
// Parameters:
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_Chat(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_Chat");

	UBTTcpLink_Channel_rfReqClanMatch_Chat_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_LeaveNotify
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_LeaveNotify(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_LeaveNotify");

	UBTTcpLink_Channel_rfAckClanMatch_LeaveNotify_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_Leave
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_Leave(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_Leave");

	UBTTcpLink_Channel_rfAckClanMatch_Leave_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_Leave
// (Defined, Event, Public)
// Parameters:
// int                            WaittingID                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_Leave(int WaittingID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_Leave");

	UBTTcpLink_Channel_rfReqClanMatch_Leave_Params params;
	params.WaittingID = WaittingID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_MemberList
// (Defined, Event, Public)
// Parameters:
// TArray<unsigned char>          IsLeader                       (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkPA                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBG                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBL                     (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_MemberList(TArray<unsigned char> IsLeader, TArray<int> ClanMarkPA, TArray<int> ClanMarkBG, TArray<int> ClanMarkBL, TArray<int> Level, TArray<struct FString> CharName, TArray<int> ClanGrade, TArray<int> ClanWin, TArray<int> ClanLose, TArray<struct FString> ClanName, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_MemberList");

	UBTTcpLink_Channel_rfAckClanMatch_MemberList_Params params;
	params.IsLeader = IsLeader;
	params.ClanMarkPA = ClanMarkPA;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.Level = Level;
	params.CharName = CharName;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.ClanName = ClanName;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_MemberList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_MemberList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_MemberList");

	UBTTcpLink_Channel_rfReqClanMatch_MemberList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_JoinNotify
// (Defined, Event, Public)
// Parameters:
// unsigned char                  IsLeader                       (Parm)
// int                            ClanMarkPA                     (Parm)
// int                            ClanMarkBG                     (Parm)
// int                            ClanMarkBL                     (Parm)
// int                            Level                          (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            ClanGrade                      (Parm)
// int                            ClanWin                        (Parm)
// int                            ClanLose                       (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            ClanLevel                      (Parm)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_JoinNotify(unsigned char IsLeader, int ClanMarkPA, int ClanMarkBG, int ClanMarkBL, int Level, const struct FString& CharName, int ClanGrade, int ClanWin, int ClanLose, const struct FString& ClanName, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_JoinNotify");

	UBTTcpLink_Channel_rfAckClanMatch_JoinNotify_Params params;
	params.IsLeader = IsLeader;
	params.ClanMarkPA = ClanMarkPA;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.Level = Level;
	params.CharName = CharName;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.ClanName = ClanName;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_Join
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_Join(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_Join");

	UBTTcpLink_Channel_rfAckClanMatch_Join_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_Join
// (Defined, Event, Public)
// Parameters:
// int                            WaittingID                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_Join(int WaittingID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_Join");

	UBTTcpLink_Channel_rfReqClanMatch_Join_Params params;
	params.WaittingID = WaittingID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_InviteCrewResult
// (Defined, Event, Public)
// Parameters:
// struct FString                 Invitee                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_InviteCrewResult(const struct FString& Invitee, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_InviteCrewResult");

	UBTTcpLink_Channel_rfReqClanMatch_InviteCrewResult_Params params;
	params.Invitee = Invitee;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_RecvInviteCrew
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 Inviter                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_RecvInviteCrew(int Result, const struct FString& Inviter)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_RecvInviteCrew");

	UBTTcpLink_Channel_rfAckClanMatch_RecvInviteCrew_Params params;
	params.Result = Result;
	params.Inviter = Inviter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_RecvInviteCrew
// (Defined, Event, Public)
// Parameters:
// struct FString                 Inviter                        (Parm, NeedCtorLink)
// struct FString                 ServerIP                       (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// int                            WaittingID                     (Parm)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// int                            MapNum                         (Parm)
// int                            InviteUserChannelNum           (Parm)
// struct FString                 LeaderName                     (Parm, NeedCtorLink)
// struct FString                 RoomName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_RecvInviteCrew(const struct FString& Inviter, const struct FString& ServerIP, int Port, int WaittingID, const struct FString& Msg, int MapNum, int InviteUserChannelNum, const struct FString& LeaderName, const struct FString& RoomName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_RecvInviteCrew");

	UBTTcpLink_Channel_rfReqClanMatch_RecvInviteCrew_Params params;
	params.Inviter = Inviter;
	params.ServerIP = ServerIP;
	params.Port = Port;
	params.WaittingID = WaittingID;
	params.Msg = Msg;
	params.MapNum = MapNum;
	params.InviteUserChannelNum = InviteUserChannelNum;
	params.LeaderName = LeaderName;
	params.RoomName = RoomName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_InviteCrew
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_InviteCrew(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_InviteCrew");

	UBTTcpLink_Channel_rfAckClanMatch_InviteCrew_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_InviteCrew
// (Defined, Event, Public)
// Parameters:
// struct FString                 Invitee                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_InviteCrew(const struct FString& Invitee)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_InviteCrew");

	UBTTcpLink_Channel_rfReqClanMatch_InviteCrew_Params params;
	params.Invitee = Invitee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_NotifiyStartCombat
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_NotifiyStartCombat(TArray<int> MapNumArray, int VersusMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_NotifiyStartCombat");

	UBTTcpLink_Channel_rfAckClanMatch_NotifiyStartCombat_Params params;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_StartCombat
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_StartCombat(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_StartCombat");

	UBTTcpLink_Channel_rfAckClanMatch_StartCombat_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_StartCombat
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    MapNumArray                    (Parm, NeedCtorLink)
// int                            VersusMode                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_StartCombat(TArray<int> MapNumArray, int VersusMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_StartCombat");

	UBTTcpLink_Channel_rfReqClanMatch_StartCombat_Params params;
	params.MapNumArray = MapNumArray;
	params.VersusMode = VersusMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_GetReady
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            RoomIndex                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanMatch_GetReady(int Result, const struct FString& ErrMsg, int RoomIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanMatch_GetReady");

	UBTTcpLink_Channel_rfAckClanMatch_GetReady_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.RoomIndex = RoomIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_GetReady
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanMatch_GetReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanMatch_GetReady");

	UBTTcpLink_Channel_rfReqClanMatch_GetReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAutoChangedTeamUserList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UserID                         (Parm, NeedCtorLink)
// TArray<int>                    TeamNum                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAutoChangedTeamUserList(TArray<int> UserID, TArray<int> TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAutoChangedTeamUserList");

	UBTTcpLink_Channel_rfAckAutoChangedTeamUserList_Params params;
	params.UserID = UserID;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetItemFromItemBox
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ItemIDChoose                   (Parm)
// int                            PartIDChoose                   (Parm)
// struct FBtrDouble              BoxItemIdx                     (Parm)
// int                            BxoItemCount                   (Parm)
// unsigned char                  bHave                          (Parm)
// struct FBtrDouble              ItemIdx                        (Parm)
// struct FBtrDouble              UntilTime                      (Parm)
// int                            StackCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetItemFromItemBox(int Result, const struct FString& ErrMsg, int ItemIDChoose, int PartIDChoose, const struct FBtrDouble& BoxItemIdx, int BxoItemCount, unsigned char bHave, const struct FBtrDouble& ItemIdx, const struct FBtrDouble& UntilTime, int StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetItemFromItemBox");

	UBTTcpLink_Channel_rfAckGetItemFromItemBox_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;
	params.BoxItemIdx = BoxItemIdx;
	params.BxoItemCount = BxoItemCount;
	params.bHave = bHave;
	params.ItemIdx = ItemIdx;
	params.UntilTime = UntilTime;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetItemFromItemBox
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            ItemID                         (Parm)
// int                            ItemIDChoose                   (Parm)
// int                            PartIDChoose                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetItemFromItemBox(const struct FBtrDouble& ItemUniqueID, int ItemID, int ItemIDChoose, int PartIDChoose)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetItemFromItemBox");

	UBTTcpLink_Channel_rfReqGetItemFromItemBox_Params params;
	params.ItemUniqueID = ItemUniqueID;
	params.ItemID = ItemID;
	params.ItemIDChoose = ItemIDChoose;
	params.PartIDChoose = PartIDChoose;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckItemListInItemBox
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            BoxItemID                      (Parm)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<int>                    PartID                         (Parm, NeedCtorLink)
// unsigned char                  FromContent                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckItemListInItemBox(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemUniqueID, int BoxItemID, TArray<int> ItemID, TArray<int> PartID, unsigned char FromContent)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckItemListInItemBox");

	UBTTcpLink_Channel_rfAckItemListInItemBox_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemUniqueID = ItemUniqueID;
	params.BoxItemID = BoxItemID;
	params.ItemID = ItemID;
	params.PartID = PartID;
	params.FromContent = FromContent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqItemListInItemBox
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            BoxItemID                      (Parm)
// unsigned char                  FromContent                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqItemListInItemBox(const struct FBtrDouble& ItemUniqueID, int BoxItemID, unsigned char FromContent)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqItemListInItemBox");

	UBTTcpLink_Channel_rfReqItemListInItemBox_Params params;
	params.ItemUniqueID = ItemUniqueID;
	params.BoxItemID = BoxItemID;
	params.FromContent = FromContent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvForceFailedClientLoading
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvForceFailedClientLoading(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvForceFailedClientLoading");

	UBTTcpLink_Channel_rfReqRecvForceFailedClientLoading_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckForceFailedClientLoading
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckForceFailedClientLoading(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckForceFailedClientLoading");

	UBTTcpLink_Channel_rfAckForceFailedClientLoading_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqForceFailedClientLoading
// (Defined, Event, Public)
// Parameters:
// int                            FailedUserID                   (Parm)
// int                            ErrCode                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqForceFailedClientLoading(int FailedUserID, int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqForceFailedClientLoading");

	UBTTcpLink_Channel_rfReqForceFailedClientLoading_Params params;
	params.FailedUserID = FailedUserID;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckStartHolePunching
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            GameType                       (Parm)
// int                            ReqStartUserID                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckStartHolePunching(int Result, const struct FString& ErrMsg, int GameType, int ReqStartUserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckStartHolePunching");

	UBTTcpLink_Channel_rfAckStartHolePunching_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.GameType = GameType;
	params.ReqStartUserID = ReqStartUserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqStartHolePunching
// (Defined, Event, Public)
// Parameters:
// int                            GameType                       (Parm)
// int                            ReqStartUserID                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqStartHolePunching(int GameType, int ReqStartUserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqStartHolePunching");

	UBTTcpLink_Channel_rfReqStartHolePunching_Params params;
	params.GameType = GameType;
	params.ReqStartUserID = ReqStartUserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyMyCharInfoToRoomUser
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UID                            (Parm)
// struct FString                 UserName                       (Parm, NeedCtorLink)
// int                            Grade                          (Parm)
// int                            TeamNum                        (Parm)
// unsigned char                  Statue                         (Parm)
// unsigned char                  IsHost                         (Parm)
// struct FString                 UserIP                         (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            CM_Pattern                     (Parm)
// int                            CM_BG                          (Parm)
// int                            CM_BL                          (Parm)
// unsigned char                  IsLookFor                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyMyCharInfoToRoomUser(int Result, const struct FString& ErrMsg, int UID, const struct FString& UserName, int Grade, int TeamNum, unsigned char Statue, unsigned char IsHost, const struct FString& UserIP, const struct FString& ClanName, int CM_Pattern, int CM_BG, int CM_BL, unsigned char IsLookFor)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyMyCharInfoToRoomUser");

	UBTTcpLink_Channel_rfAckNotifyMyCharInfoToRoomUser_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UID = UID;
	params.UserName = UserName;
	params.Grade = Grade;
	params.TeamNum = TeamNum;
	params.Statue = Statue;
	params.IsHost = IsHost;
	params.UserIP = UserIP;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.IsLookFor = IsLookFor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyMyCharInfoToRoomUser
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyMyCharInfoToRoomUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyMyCharInfoToRoomUser");

	UBTTcpLink_Channel_rfReqNotifyMyCharInfoToRoomUser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyDurabilityZeroItem
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// TArray<struct FBtrDouble>      ItemUniqueIDs                  (Parm, NeedCtorLink)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    ItemPartIDs                    (Parm, NeedCtorLink)
// TArray<unsigned char>          ItemSlotPos                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyDurabilityZeroItem(int Result, const struct FString& ErrMsg, int UserID, TArray<struct FBtrDouble> ItemUniqueIDs, TArray<int> ItemIDs, TArray<int> ItemPartIDs, TArray<unsigned char> ItemSlotPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyDurabilityZeroItem");

	UBTTcpLink_Channel_rfReqNotifyDurabilityZeroItem_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.ItemUniqueIDs = ItemUniqueIDs;
	params.ItemIDs = ItemIDs;
	params.ItemPartIDs = ItemPartIDs;
	params.ItemSlotPos = ItemSlotPos;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChatWispherMyCommunity
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChatWispherMyCommunity(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChatWispherMyCommunity");

	UBTTcpLink_Channel_rfAckChatWispherMyCommunity_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChatWispherMyCommunity
// (Defined, Event, Public)
// Parameters:
// struct FString                 SourceCharName                 (Parm, NeedCtorLink)
// struct FString                 SenderName                     (Parm, NeedCtorLink)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChatWispherMyCommunity(const struct FString& SourceCharName, const struct FString& SenderName, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChatWispherMyCommunity");

	UBTTcpLink_Channel_rfReqChatWispherMyCommunity_Params params;
	params.SourceCharName = SourceCharName;
	params.SenderName = SenderName;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyDisconnectHostInLoading
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            HostID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyDisconnectHostInLoading(int Result, const struct FString& ErrMsg, int HostID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyDisconnectHostInLoading");

	UBTTcpLink_Channel_rfReqNotifyDisconnectHostInLoading_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.HostID = HostID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvForceDisconnected_FromGM
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvForceDisconnected_FromGM(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvForceDisconnected_FromGM");

	UBTTcpLink_Channel_rfReqRecvForceDisconnected_FromGM_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckForceDisconnectUser_GM
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckForceDisconnectUser_GM(int Result, const struct FString& ErrMsg, const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckForceDisconnectUser_GM");

	UBTTcpLink_Channel_rfAckForceDisconnectUser_GM_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqForceDisconnectUser_GM
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqForceDisconnectUser_GM(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqForceDisconnectUser_GM");

	UBTTcpLink_Channel_rfReqForceDisconnectUser_GM_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvNotice_FromGM
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FString>         NoticeMsg                      (Parm, NeedCtorLink)
// unsigned char                  IsFromDB                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvNotice_FromGM(int Result, const struct FString& ErrMsg, TArray<struct FString> NoticeMsg, unsigned char IsFromDB)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvNotice_FromGM");

	UBTTcpLink_Channel_rfReqRecvNotice_FromGM_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.NoticeMsg = NoticeMsg;
	params.IsFromDB = IsFromDB;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotice_GM
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  NoticeType                     (Parm)
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            GameRoomNum                    (Parm)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotice_GM(int Result, const struct FString& ErrMsg, unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotice_GM");

	UBTTcpLink_Channel_rfAckNotice_GM_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.NoticeType = NoticeType;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.GameRoomNum = GameRoomNum;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotice_GM
// (Defined, Event, Public)
// Parameters:
// unsigned char                  NoticeType                     (Parm)
// int                            ServerID                       (Parm)
// int                            ChannelNum                     (Parm)
// int                            GameRoomNum                    (Parm)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotice_GM(unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotice_GM");

	UBTTcpLink_Channel_rfReqNotice_GM_Params params;
	params.NoticeType = NoticeType;
	params.ServerID = ServerID;
	params.ChannelNum = ChannelNum;
	params.GameRoomNum = GameRoomNum;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSpecificChannelUserInfo
// (Defined, Event, Public)
// Parameters:
// int                            UID                            (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            UserLevels                     (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            ClanPattern                    (Parm)
// int                            ClanBG                         (Parm)
// int                            ClanBL                         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSpecificChannelUserInfo(int UID, const struct FString& UserID, int UserLevels, const struct FString& ClanName, int ClanPattern, int ClanBG, int ClanBL, int Result, const struct FString& ErrMsg, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSpecificChannelUserInfo");

	UBTTcpLink_Channel_rfAckSpecificChannelUserInfo_Params params;
	params.UID = UID;
	params.UserID = UserID;
	params.UserLevels = UserLevels;
	params.ClanName = ClanName;
	params.ClanPattern = ClanPattern;
	params.ClanBG = ClanBG;
	params.ClanBL = ClanBL;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSpecificChannelUserInfo
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSpecificChannelUserInfo(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSpecificChannelUserInfo");

	UBTTcpLink_Channel_rfReqSpecificChannelUserInfo_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSpecificGameRoomInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            GameNum                        (Parm)
// struct FString                 Title                          (Parm, NeedCtorLink)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// int                            MapNum                         (Parm)
// unsigned char                  UserCount                      (Parm)
// unsigned char                  MaxCount                       (Parm)
// struct FString                 GameModeName                   (Parm, NeedCtorLink)
// int                            ModeNum                        (Parm)
// unsigned char                  WeaponLimit                    (Parm)
// unsigned char                  IsHardCore                     (Parm)
// unsigned char                  Status                         (Parm)
// struct FString                 RoomOwnerIP                    (Parm, NeedCtorLink)
// int                            GameMinute                     (Parm)
// struct FString                 RoomOwnerName                  (Parm, NeedCtorLink)
// unsigned char                  IsSpecial                      (Parm)
// unsigned char                  IsPassword                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSpecificGameRoomInfo(int Result, int GameNum, const struct FString& Title, const struct FString& MapName, int MapNum, unsigned char UserCount, unsigned char MaxCount, const struct FString& GameModeName, int ModeNum, unsigned char WeaponLimit, unsigned char IsHardCore, unsigned char Status, const struct FString& RoomOwnerIP, int GameMinute, const struct FString& RoomOwnerName, unsigned char IsSpecial, unsigned char IsPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSpecificGameRoomInfo");

	UBTTcpLink_Channel_rfAckSpecificGameRoomInfo_Params params;
	params.Result = Result;
	params.GameNum = GameNum;
	params.Title = Title;
	params.MapName = MapName;
	params.MapNum = MapNum;
	params.UserCount = UserCount;
	params.MaxCount = MaxCount;
	params.GameModeName = GameModeName;
	params.ModeNum = ModeNum;
	params.WeaponLimit = WeaponLimit;
	params.IsHardCore = IsHardCore;
	params.Status = Status;
	params.RoomOwnerIP = RoomOwnerIP;
	params.GameMinute = GameMinute;
	params.RoomOwnerName = RoomOwnerName;
	params.IsSpecial = IsSpecial;
	params.IsPassword = IsPassword;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSpecificGameRoomInfo
// (Defined, Event, Public)
// Parameters:
// int                            RoomNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSpecificGameRoomInfo(int RoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSpecificGameRoomInfo");

	UBTTcpLink_Channel_rfReqSpecificGameRoomInfo_Params params;
	params.RoomNum = RoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChannelUserListInGameRoom
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// int                            Count                          (Parm)
// int                            StartIndex                     (Parm)
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<int>                    UserLevel                      (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanPattern                    (Parm, NeedCtorLink)
// TArray<int>                    ClanBG                         (Parm, NeedCtorLink)
// TArray<int>                    ClanBL                         (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookForClan                  (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChannelUserListInGameRoom(int Result, int TotalCount, int Count, int StartIndex, TArray<int> UID, TArray<struct FString> CharName, TArray<int> UserLevel, TArray<struct FString> ClanName, TArray<int> ClanPattern, TArray<int> ClanBG, TArray<int> ClanBL, TArray<unsigned char> IsLookForClan, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChannelUserListInGameRoom");

	UBTTcpLink_Channel_rfAckChannelUserListInGameRoom_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;
	params.Count = Count;
	params.StartIndex = StartIndex;
	params.UID = UID;
	params.CharName = CharName;
	params.UserLevel = UserLevel;
	params.ClanName = ClanName;
	params.ClanPattern = ClanPattern;
	params.ClanBG = ClanBG;
	params.ClanBL = ClanBL;
	params.IsLookForClan = IsLookForClan;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChannelUserListInGameRoom
// (Defined, Event, Public)
// Parameters:
// int                            ChannelNum                     (Parm)
// int                            StartIndex                     (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChannelUserListInGameRoom(int ChannelNum, int StartIndex, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChannelUserListInGameRoom");

	UBTTcpLink_Channel_rfReqChannelUserListInGameRoom_Params params;
	params.ChannelNum = ChannelNum;
	params.StartIndex = StartIndex;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvDeleteFriend
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 FromCharName                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvDeleteFriend(int Result, const struct FString& FromCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvDeleteFriend");

	UBTTcpLink_Channel_rfReqRecvDeleteFriend_Params params;
	params.Result = Result;
	params.FromCharName = FromCharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckDeleteFriend
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// TArray<struct FString>         FailedCharname                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckDeleteFriend(int Result, TArray<struct FString> FailedCharname)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckDeleteFriend");

	UBTTcpLink_Channel_rfAckDeleteFriend_Params params;
	params.Result = Result;
	params.FailedCharname = FailedCharname;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDeleteFriend
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         DeleteCharName                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDeleteFriend(TArray<struct FString> DeleteCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDeleteFriend");

	UBTTcpLink_Channel_rfReqDeleteFriend_Params params;
	params.DeleteCharName = DeleteCharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGameGuardAuthData
// (Defined, Event, Public)
// Parameters:
// int                            AuthDataIndex                  (Parm)
// int                            AuthDataVal1                   (Parm)
// int                            AuthDataVal2                   (Parm)
// int                            AuthDataVal3                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGameGuardAuthData(int AuthDataIndex, int AuthDataVal1, int AuthDataVal2, int AuthDataVal3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGameGuardAuthData");

	UBTTcpLink_Channel_rfAckGameGuardAuthData_Params params;
	params.AuthDataIndex = AuthDataIndex;
	params.AuthDataVal1 = AuthDataVal1;
	params.AuthDataVal2 = AuthDataVal2;
	params.AuthDataVal3 = AuthDataVal3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGameGuardAuthData
// (Defined, Event, Public)
// Parameters:
// int                            AuthDataIndex                  (Parm)
// int                            AuthDataVal1                   (Parm)
// int                            AuthDataVal2                   (Parm)
// int                            AuthDataVal3                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGameGuardAuthData(int AuthDataIndex, int AuthDataVal1, int AuthDataVal2, int AuthDataVal3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGameGuardAuthData");

	UBTTcpLink_Channel_rfReqGameGuardAuthData_Params params;
	params.AuthDataIndex = AuthDataIndex;
	params.AuthDataVal1 = AuthDataVal1;
	params.AuthDataVal2 = AuthDataVal2;
	params.AuthDataVal3 = AuthDataVal3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckCheckEquipedWeaponDurability
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// TArray<struct FBtrDouble>      ItemUniqueID                   (Parm, NeedCtorLink)
// TArray<int>                    ItemSlotNum                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckCheckEquipedWeaponDurability(int Result, TArray<struct FBtrDouble> ItemUniqueID, TArray<int> ItemSlotNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckCheckEquipedWeaponDurability");

	UBTTcpLink_Channel_rfAckCheckEquipedWeaponDurability_Params params;
	params.Result = Result;
	params.ItemUniqueID = ItemUniqueID;
	params.ItemSlotNum = ItemSlotNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqCheckEquipedWeaponDurability
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqCheckEquipedWeaponDurability()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqCheckEquipedWeaponDurability");

	UBTTcpLink_Channel_rfReqCheckEquipedWeaponDurability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_GetChopper
// (Defined, Event, Public)
// Parameters:
// int                            GetChopperUID                  (Parm)
// TArray<int>                    GetChopperAssistUID            (Parm, NeedCtorLink)
// float                          KillXCoord                     (Parm)
// float                          KillYCoord                     (Parm)
// float                          KillZCoord                     (Parm)
// int                            KillPos                        (Parm)
// int                            KillWeaponID                   (Parm)
// int                            KillWeaponPartID               (Parm)
// int                            KillRange                      (Parm)
// int                            KillDamage                     (Parm)
// int                            ChopperCallerID                (Parm)
// struct FString                 ChopperCallerName              (Parm, NeedCtorLink)
// float                          ChopperXCoord                  (Parm)
// float                          ChopperYCoord                  (Parm)
// float                          ChopperZCoord                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGamePlay_GetChopper(int GetChopperUID, TArray<int> GetChopperAssistUID, float KillXCoord, float KillYCoord, float KillZCoord, int KillPos, int KillWeaponID, int KillWeaponPartID, int KillRange, int KillDamage, int ChopperCallerID, const struct FString& ChopperCallerName, float ChopperXCoord, float ChopperYCoord, float ChopperZCoord)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_GetChopper");

	UBTTcpLink_Channel_rfReqGamePlay_GetChopper_Params params;
	params.GetChopperUID = GetChopperUID;
	params.GetChopperAssistUID = GetChopperAssistUID;
	params.KillXCoord = KillXCoord;
	params.KillYCoord = KillYCoord;
	params.KillZCoord = KillZCoord;
	params.KillPos = KillPos;
	params.KillWeaponID = KillWeaponID;
	params.KillWeaponPartID = KillWeaponPartID;
	params.KillRange = KillRange;
	params.KillDamage = KillDamage;
	params.ChopperCallerID = ChopperCallerID;
	params.ChopperCallerName = ChopperCallerName;
	params.ChopperXCoord = ChopperXCoord;
	params.ChopperYCoord = ChopperYCoord;
	params.ChopperZCoord = ChopperZCoord;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAcquirePromotionItems
// (Defined, Event, Public)
// Parameters:
// int                            UID                            (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      ItemUniqueID                   (Parm, NeedCtorLink)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    PartIDs                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAcquirePromotionItems(int UID, int Result, const struct FString& ErrMsg, TArray<struct FBtrDouble> ItemUniqueID, TArray<int> ItemIDs, TArray<int> PartIDs)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAcquirePromotionItems");

	UBTTcpLink_Channel_rfAckAcquirePromotionItems_Params params;
	params.UID = UID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemUniqueID = ItemUniqueID;
	params.ItemIDs = ItemIDs;
	params.PartIDs = PartIDs;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckIsAvailClanURL
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanURL                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckIsAvailClanURL(const struct FString& ClanURL, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckIsAvailClanURL");

	UBTTcpLink_Channel_rfAckIsAvailClanURL_Params params;
	params.ClanURL = ClanURL;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqIsAvailClanURL
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanURL                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqIsAvailClanURL(const struct FString& ClanURL)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqIsAvailClanURL");

	UBTTcpLink_Channel_rfReqIsAvailClanURL_Params params;
	params.ClanURL = ClanURL;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetIsHostBlocking
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Blocking                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetIsHostBlocking(int Result, unsigned char Blocking)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetIsHostBlocking");

	UBTTcpLink_Channel_rfAckGetIsHostBlocking_Params params;
	params.Result = Result;
	params.Blocking = Blocking;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetIsHostBlocking
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetIsHostBlocking()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetIsHostBlocking");

	UBTTcpLink_Channel_rfReqGetIsHostBlocking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyHostBlocking
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Blocking                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyHostBlocking(int Result, unsigned char Blocking)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyHostBlocking");

	UBTTcpLink_Channel_rfAckNotifyHostBlocking_Params params;
	params.Result = Result;
	params.Blocking = Blocking;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyHostBlocking
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Blocking                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyHostBlocking(unsigned char Blocking)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyHostBlocking");

	UBTTcpLink_Channel_rfReqNotifyHostBlocking_Params params;
	params.Blocking = Blocking;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetHolePunchingResult
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Phrase                         (Parm)
// int                            InterventionUserID             (Parm)
// unsigned char                  Intervention                   (Parm)
// TArray<int>                    FailedUserIDs                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetHolePunchingResult(int Result, unsigned char Phrase, int InterventionUserID, unsigned char Intervention, TArray<int> FailedUserIDs)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetHolePunchingResult");

	UBTTcpLink_Channel_rfAckGetHolePunchingResult_Params params;
	params.Result = Result;
	params.Phrase = Phrase;
	params.InterventionUserID = InterventionUserID;
	params.Intervention = Intervention;
	params.FailedUserIDs = FailedUserIDs;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetHolePunchingResult
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetHolePunchingResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetHolePunchingResult");

	UBTTcpLink_Channel_rfReqGetHolePunchingResult_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyRecvDummyForHolePunching
// (Defined, Event, Public)
// Parameters:
// int                            ClientUserID                   (Parm)
// unsigned char                  Phrase                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyRecvDummyForHolePunching(int ClientUserID, unsigned char Phrase)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyRecvDummyForHolePunching");

	UBTTcpLink_Channel_rfReqNotifyRecvDummyForHolePunching_Params params;
	params.ClientUserID = ClientUserID;
	params.Phrase = Phrase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_ChangeWeaponSet
// (Defined, Event, Public)
// Parameters:
// int                            UID                            (Parm)
// int                            SetNumber                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGamePlay_ChangeWeaponSet(int UID, int SetNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_ChangeWeaponSet");

	UBTTcpLink_Channel_rfReqGamePlay_ChangeWeaponSet_Params params;
	params.UID = UID;
	params.SetNumber = SetNumber;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_UpdateDomScore
// (Defined, Event, Public)
// Parameters:
// int                            AFScore                        (Parm)
// int                            RSAScore                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGamePlay_UpdateDomScore(int AFScore, int RSAScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_UpdateDomScore");

	UBTTcpLink_Channel_rfReqGamePlay_UpdateDomScore_Params params;
	params.AFScore = AFScore;
	params.RSAScore = RSAScore;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyRelayServerAddr
// (Defined, Event, Public)
// Parameters:
// struct FString                 RelayIP                        (Parm, NeedCtorLink)
// int                            RelayPort                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyRelayServerAddr(const struct FString& RelayIP, int RelayPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyRelayServerAddr");

	UBTTcpLink_Channel_rfReqNotifyRelayServerAddr_Params params;
	params.RelayIP = RelayIP;
	params.RelayPort = RelayPort;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetUserHostPriorityPoint
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            UserID                         (Parm)
// int                            HostPriorityPoint              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetUserHostPriorityPoint(int Result, int UserID, int HostPriorityPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetUserHostPriorityPoint");

	UBTTcpLink_Channel_rfAckGetUserHostPriorityPoint_Params params;
	params.Result = Result;
	params.UserID = UserID;
	params.HostPriorityPoint = HostPriorityPoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetUserHostPriorityPoint
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetUserHostPriorityPoint(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetUserHostPriorityPoint");

	UBTTcpLink_Channel_rfReqGetUserHostPriorityPoint_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqUpdateMyHostPriorityPoint
// (Defined, Event, Public)
// Parameters:
// int                            HostPriorityPoint              (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqUpdateMyHostPriorityPoint(int HostPriorityPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqUpdateMyHostPriorityPoint");

	UBTTcpLink_Channel_rfReqUpdateMyHostPriorityPoint_Params params;
	params.HostPriorityPoint = HostPriorityPoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqWriteServerLog
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Destination                    (Parm)
// struct FString                 LogMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqWriteServerLog(unsigned char Destination, const struct FString& LogMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqWriteServerLog");

	UBTTcpLink_Channel_rfReqWriteServerLog_Params params;
	params.Destination = Destination;
	params.LogMsg = LogMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_SetRoundStartTime
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGamePlay_SetRoundStartTime(TArray<int> UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_SetRoundStartTime");

	UBTTcpLink_Channel_rfReqGamePlay_SetRoundStartTime_Params params;
	params.UID = UID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_SetGameStartTime
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGamePlay_SetGameStartTime(TArray<int> UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_SetGameStartTime");

	UBTTcpLink_Channel_rfReqGamePlay_SetGameStartTime_Params params;
	params.UID = UID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvForceDisconnectUDPFromHost
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvForceDisconnectUDPFromHost(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvForceDisconnectUDPFromHost");

	UBTTcpLink_Channel_rfReqRecvForceDisconnectUDPFromHost_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckForceDisconnectUDPFromHost
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckForceDisconnectUDPFromHost(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckForceDisconnectUDPFromHost");

	UBTTcpLink_Channel_rfAckForceDisconnectUDPFromHost_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqForceDisconnectUDPFromHost
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqForceDisconnectUDPFromHost(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqForceDisconnectUDPFromHost");

	UBTTcpLink_Channel_rfReqForceDisconnectUDPFromHost_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_TakeAPoint
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    TakerUID                       (Parm, NeedCtorLink)
// unsigned char                  TakePos                        (Parm)
// TArray<float>                  TakerXCoord                    (Parm, NeedCtorLink)
// TArray<float>                  TakerYCoord                    (Parm, NeedCtorLink)
// TArray<float>                  TakerZCoord                    (Parm, NeedCtorLink)
// TArray<int>                    TakerPos                       (Parm, NeedCtorLink)
// TArray<int>                    TakerWeaponID                  (Parm, NeedCtorLink)
// TArray<int>                    TakerWeaponPartID              (Parm, NeedCtorLink)
// TArray<int>                    TakerRange                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGamePlay_TakeAPoint(TArray<int> TakerUID, unsigned char TakePos, TArray<float> TakerXCoord, TArray<float> TakerYCoord, TArray<float> TakerZCoord, TArray<int> TakerPos, TArray<int> TakerWeaponID, TArray<int> TakerWeaponPartID, TArray<int> TakerRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_TakeAPoint");

	UBTTcpLink_Channel_rfReqGamePlay_TakeAPoint_Params params;
	params.TakerUID = TakerUID;
	params.TakePos = TakePos;
	params.TakerXCoord = TakerXCoord;
	params.TakerYCoord = TakerYCoord;
	params.TakerZCoord = TakerZCoord;
	params.TakerPos = TakerPos;
	params.TakerWeaponID = TakerWeaponID;
	params.TakerWeaponPartID = TakerWeaponPartID;
	params.TakerRange = TakerRange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyChangeRoomState
// (Defined, Event, Public)
// Parameters:
// unsigned char                  RoomState                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyChangeRoomState(unsigned char RoomState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyChangeRoomState");

	UBTTcpLink_Channel_rfReqNotifyChangeRoomState_Params params;
	params.RoomState = RoomState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_DefuseBomb
// (Defined, Event, Public)
// Parameters:
// int                            DefuserUID                     (Parm)
// unsigned char                  DefusePos                      (Parm)
// float                          DefuserXCoord                  (Parm)
// float                          DefuserYCoord                  (Parm)
// float                          DefuserZCoord                  (Parm)
// int                            DefuserPos                     (Parm)
// int                            DefuserWeaponID                (Parm)
// int                            DefuserWeaponPartID            (Parm)
// int                            DefuserRange                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGamePlay_DefuseBomb(int DefuserUID, unsigned char DefusePos, float DefuserXCoord, float DefuserYCoord, float DefuserZCoord, int DefuserPos, int DefuserWeaponID, int DefuserWeaponPartID, int DefuserRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_DefuseBomb");

	UBTTcpLink_Channel_rfReqGamePlay_DefuseBomb_Params params;
	params.DefuserUID = DefuserUID;
	params.DefusePos = DefusePos;
	params.DefuserXCoord = DefuserXCoord;
	params.DefuserYCoord = DefuserYCoord;
	params.DefuserZCoord = DefuserZCoord;
	params.DefuserPos = DefuserPos;
	params.DefuserWeaponID = DefuserWeaponID;
	params.DefuserWeaponPartID = DefuserWeaponPartID;
	params.DefuserRange = DefuserRange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_InstallBomb
// (Defined, Event, Public)
// Parameters:
// int                            InstallerUID                   (Parm)
// unsigned char                  InstallPos                     (Parm)
// float                          InstallerXCoord                (Parm)
// float                          InstallerYCoord                (Parm)
// float                          InstallerZCoord                (Parm)
// int                            InstallerPos                   (Parm)
// int                            InstallerWeaponID              (Parm)
// int                            InstallerWeaponPartID          (Parm)
// int                            InstallerRange                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGamePlay_InstallBomb(int InstallerUID, unsigned char InstallPos, float InstallerXCoord, float InstallerYCoord, float InstallerZCoord, int InstallerPos, int InstallerWeaponID, int InstallerWeaponPartID, int InstallerRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGamePlay_InstallBomb");

	UBTTcpLink_Channel_rfReqGamePlay_InstallBomb_Params params;
	params.InstallerUID = InstallerUID;
	params.InstallPos = InstallPos;
	params.InstallerXCoord = InstallerXCoord;
	params.InstallerYCoord = InstallerYCoord;
	params.InstallerZCoord = InstallerZCoord;
	params.InstallerPos = InstallerPos;
	params.InstallerWeaponID = InstallerWeaponID;
	params.InstallerWeaponPartID = InstallerWeaponPartID;
	params.InstallerRange = InstallerRange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckDBCharInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            CM_Pattern                     (Parm)
// int                            CM_BG                          (Parm)
// int                            CM_BL                          (Parm)
// struct FString                 ClanPersonIntro                (Parm, NeedCtorLink)
// int                            MainWeaponItemID               (Parm)
// int                            MainWeaponPartID               (Parm)
// int                            SubWeaponItemID                (Parm)
// int                            SubWeaponPartID                (Parm)
// int                            AFSpecialCostumeItemID         (Parm)
// int                            RSASpecialCostumeItemID        (Parm)
// struct FCharInfo               stCharInfo                     (Parm)
// int                            ClanLevel                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckDBCharInfo(int Result, const struct FString& ErrMsg, const struct FString& CharName, const struct FString& ClanName, int CM_Pattern, int CM_BG, int CM_BL, const struct FString& ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, const struct FCharInfo& stCharInfo, int ClanLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckDBCharInfo");

	UBTTcpLink_Channel_rfAckDBCharInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.CharName = CharName;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.ClanPersonIntro = ClanPersonIntro;
	params.MainWeaponItemID = MainWeaponItemID;
	params.MainWeaponPartID = MainWeaponPartID;
	params.SubWeaponItemID = SubWeaponItemID;
	params.SubWeaponPartID = SubWeaponPartID;
	params.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	params.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	params.stCharInfo = stCharInfo;
	params.ClanLevel = ClanLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDBCharInfo
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDBCharInfo(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDBCharInfo");

	UBTTcpLink_Channel_rfReqDBCharInfo_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqForceNatTypeSetting
// (Defined, Event, Public)
// Parameters:
// int                            NatType                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqForceNatTypeSetting(int NatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqForceNatTypeSetting");

	UBTTcpLink_Channel_rfReqForceNatTypeSetting_Params params;
	params.NatType = NatType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetServerTime
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ServerTime                     (Parm)
// struct FString                 ClientIP                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetServerTime(const struct FBtrDouble& ServerTime, const struct FString& ClientIP)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetServerTime");

	UBTTcpLink_Channel_rfAckGetServerTime_Params params;
	params.ServerTime = ServerTime;
	params.ClientIP = ClientIP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetServerTime
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetServerTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetServerTime");

	UBTTcpLink_Channel_rfReqGetServerTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLogEndEachRound
// (Defined, Event, Public)
// Parameters:
// int                            StartCnt                       (Parm)
// int                            EndCnt                         (Parm)
// int                            RoundEndType                   (Parm)
// int                            RoundEndTime                   (Parm)
// unsigned char                  VTeam                          (Parm)
// unsigned char                  VTeamAD                        (Parm)
// int                            AFScore                        (Parm)
// int                            RSAScore                       (Parm)
// int                            Round                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLogEndEachRound(int StartCnt, int EndCnt, int RoundEndType, int RoundEndTime, unsigned char VTeam, unsigned char VTeamAD, int AFScore, int RSAScore, int Round)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLogEndEachRound");

	UBTTcpLink_Channel_rfReqLogEndEachRound_Params params;
	params.StartCnt = StartCnt;
	params.EndCnt = EndCnt;
	params.RoundEndType = RoundEndType;
	params.RoundEndTime = RoundEndTime;
	params.VTeam = VTeam;
	params.VTeamAD = VTeamAD;
	params.AFScore = AFScore;
	params.RSAScore = RSAScore;
	params.Round = Round;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLogGetScore
// (Defined, Event, Public)
// Parameters:
// struct FKillDeathLog           KillDeathLogParam              (Parm)
// TArray<int>                    AssistUIDs                     (Parm, NeedCtorLink)
// TArray<unsigned char>          AssistScores                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLogGetScore(const struct FKillDeathLog& KillDeathLogParam, TArray<int> AssistUIDs, TArray<unsigned char> AssistScores)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLogGetScore");

	UBTTcpLink_Channel_rfReqLogGetScore_Params params;
	params.KillDeathLogParam = KillDeathLogParam;
	params.AssistUIDs = AssistUIDs;
	params.AssistScores = AssistScores;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAuctionTradeHistory
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ItemID                         (Parm)
// int                            PartID                         (Parm)
// TArray<struct FString>         SellerCharNm                   (Parm, NeedCtorLink)
// TArray<int>                    DamageDegree                   (Parm, NeedCtorLink)
// TArray<int>                    Price                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAuctionTradeHistory(int Result, const struct FString& ErrMsg, int ItemID, int PartID, TArray<struct FString> SellerCharNm, TArray<int> DamageDegree, TArray<int> Price)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAuctionTradeHistory");

	UBTTcpLink_Channel_rfAckAuctionTradeHistory_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemID = ItemID;
	params.PartID = PartID;
	params.SellerCharNm = SellerCharNm;
	params.DamageDegree = DamageDegree;
	params.Price = Price;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAuctionTradeHistory
// (Defined, Event, Public)
// Parameters:
// int                            ItemID                         (Parm)
// int                            PartID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAuctionTradeHistory(int ItemID, int PartID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAuctionTradeHistory");

	UBTTcpLink_Channel_rfReqAuctionTradeHistory_Params params;
	params.ItemID = ItemID;
	params.PartID = PartID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSendGift
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// int                            CashRemain                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSendGift(int Result, const struct FString& ErrMsg, int PointRemain, int CashRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSendGift");

	UBTTcpLink_Channel_rfAckSendGift_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PointRemain = PointRemain;
	params.CashRemain = CashRemain;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSendGift
// (Defined, Event, Public)
// Parameters:
// int                            ItemID                         (Parm)
// struct FString                 RecvCharname                   (Parm, NeedCtorLink)
// struct FString                 RecvMessage                    (Parm, NeedCtorLink)
// unsigned char                  BuyOption1                     (Parm)
// unsigned char                  BuyOption2                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSendGift(int ItemID, const struct FString& RecvCharname, const struct FString& RecvMessage, unsigned char BuyOption1, unsigned char BuyOption2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSendGift");

	UBTTcpLink_Channel_rfReqSendGift_Params params;
	params.ItemID = ItemID;
	params.RecvCharname = RecvCharname;
	params.RecvMessage = RecvMessage;
	params.BuyOption1 = BuyOption1;
	params.BuyOption2 = BuyOption2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetAttachedItemFromMemo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            ItemID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetAttachedItemFromMemo(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetAttachedItemFromMemo");

	UBTTcpLink_Channel_rfAckGetAttachedItemFromMemo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetAttachedItemFromMemo
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            MemoIdx                        (Parm)
// int                            ItemID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetAttachedItemFromMemo(int UserID, int MemoIdx, int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetAttachedItemFromMemo");

	UBTTcpLink_Channel_rfReqGetAttachedItemFromMemo_Params params;
	params.UserID = UserID;
	params.MemoIdx = MemoIdx;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyNewClanMember
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyNewClanMember(const struct FString& ClanName, const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyNewClanMember");

	UBTTcpLink_Channel_rfAckNotifyNewClanMember_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChatClan
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChatClan(const struct FString& CharName, const struct FString& Message, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChatClan");

	UBTTcpLink_Channel_rfAckChatClan_Params params;
	params.CharName = CharName;
	params.Message = Message;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChatClan
// (Defined, Event, Public)
// Parameters:
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChatClan(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChatClan");

	UBTTcpLink_Channel_rfReqChatClan_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckTestDouble
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              vDouble                        (Parm)
// TArray<struct FBtrDouble>      vDoubles                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckTestDouble(const struct FBtrDouble& vDouble, TArray<struct FBtrDouble> vDoubles)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckTestDouble");

	UBTTcpLink_Channel_rfAckTestDouble_Params params;
	params.vDouble = vDouble;
	params.vDoubles = vDoubles;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqTestDouble
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              vDouble                        (Parm)
// TArray<struct FBtrDouble>      vDoubles                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqTestDouble(const struct FBtrDouble& vDouble, TArray<struct FBtrDouble> vDoubles)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqTestDouble");

	UBTTcpLink_Channel_rfReqTestDouble_Params params;
	params.vDouble = vDouble;
	params.vDoubles = vDoubles;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyLoadingState
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            UserID                         (Parm)
// unsigned char                  LoadingState                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyLoadingState(int Result, int UserID, unsigned char LoadingState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyLoadingState");

	UBTTcpLink_Channel_rfAckNotifyLoadingState_Params params;
	params.Result = Result;
	params.UserID = UserID;
	params.LoadingState = LoadingState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyLoadingState
// (Defined, Event, Public)
// Parameters:
// unsigned char                  LoadingState                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyLoadingState(unsigned char LoadingState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyLoadingState");

	UBTTcpLink_Channel_rfReqNotifyLoadingState_Params params;
	params.LoadingState = LoadingState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckFailedStartGame
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsHost                         (Parm)
// int                            FailedUserID                   (Parm)
// int                            LoadingStep                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckFailedStartGame(int Result, const struct FString& ErrMsg, unsigned char IsHost, int FailedUserID, int LoadingStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckFailedStartGame");

	UBTTcpLink_Channel_rfAckFailedStartGame_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsHost = IsHost;
	params.FailedUserID = FailedUserID;
	params.LoadingStep = LoadingStep;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqFailedStartGame
// (Defined, Event, Public)
// Parameters:
// int                            LoadingStep                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqFailedStartGame(int LoadingStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqFailedStartGame");

	UBTTcpLink_Channel_rfReqFailedStartGame_Params params;
	params.LoadingStep = LoadingStep;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSuccessStartGame
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsHost                         (Parm)
// struct FString                 HostIP                         (Parm, NeedCtorLink)
// int                            HostPort                       (Parm)
// int                            LoadingStep                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSuccessStartGame(int Result, const struct FString& ErrMsg, unsigned char IsHost, const struct FString& HostIP, int HostPort, int LoadingStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSuccessStartGame");

	UBTTcpLink_Channel_rfAckSuccessStartGame_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsHost = IsHost;
	params.HostIP = HostIP;
	params.HostPort = HostPort;
	params.LoadingStep = LoadingStep;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSuccessStartGame
// (Defined, Event, Public)
// Parameters:
// int                            LoadingStep                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSuccessStartGame(int LoadingStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSuccessStartGame");

	UBTTcpLink_Channel_rfReqSuccessStartGame_Params params;
	params.LoadingStep = LoadingStep;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanCharPersonelIntro
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 PersonelIntro                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanCharPersonelIntro(int Result, const struct FString& ErrMsg, const struct FString& PersonelIntro)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanCharPersonelIntro");

	UBTTcpLink_Channel_rfAckClanCharPersonelIntro_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PersonelIntro = PersonelIntro;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanCharPersonelIntro
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanCharPersonelIntro(const struct FString& ClanName, const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanCharPersonelIntro");

	UBTTcpLink_Channel_rfReqClanCharPersonelIntro_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanPersonelIntro
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanPersonelIntro(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanPersonelIntro");

	UBTTcpLink_Channel_rfAckClanPersonelIntro_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanPersonelIntro
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 PersonelIntro                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanPersonelIntro(const struct FString& ClanName, const struct FString& CharName, const struct FString& PersonelIntro)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanPersonelIntro");

	UBTTcpLink_Channel_rfReqClanPersonelIntro_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;
	params.PersonelIntro = PersonelIntro;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanChangeInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanChangeInfo(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanChangeInfo");

	UBTTcpLink_Channel_rfAckClanChangeInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanChangeInfo
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// unsigned char                  IsRecruit                      (Parm)
// unsigned char                  Region                         (Parm)
// struct FString                 Keyword                        (Parm, NeedCtorLink)
// struct FString                 ClanIntro                      (Parm, NeedCtorLink)
// struct FString                 Notice                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanChangeInfo(const struct FString& ClanName, unsigned char IsRecruit, unsigned char Region, const struct FString& Keyword, const struct FString& ClanIntro, const struct FString& Notice)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanChangeInfo");

	UBTTcpLink_Channel_rfReqClanChangeInfo_Params params;
	params.ClanName = ClanName;
	params.IsRecruit = IsRecruit;
	params.Region = Region;
	params.Keyword = Keyword;
	params.ClanIntro = ClanIntro;
	params.Notice = Notice;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanClose
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanClose(int Result, const struct FString& ErrMsg, const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanClose");

	UBTTcpLink_Channel_rfAckClanClose_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanClose
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanClose(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanClose");

	UBTTcpLink_Channel_rfReqClanClose_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyClanSecession
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyClanSecession(const struct FString& ClanName, const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyClanSecession");

	UBTTcpLink_Channel_rfAckNotifyClanSecession_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanSecession
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanSecession(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanSecession");

	UBTTcpLink_Channel_rfAckClanSecession_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanSecession
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanSecession(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanSecession");

	UBTTcpLink_Channel_rfReqClanSecession_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanNews
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         IssueDate                      (Parm, NeedCtorLink)
// TArray<unsigned char>          IssueType                      (Parm, NeedCtorLink)
// TArray<struct FString>         IssuedClanMember               (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanNews(TArray<struct FString> IssueDate, TArray<unsigned char> IssueType, TArray<struct FString> IssuedClanMember)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanNews");

	UBTTcpLink_Channel_rfAckClanNews_Params params;
	params.IssueDate = IssueDate;
	params.IssueType = IssueType;
	params.IssuedClanMember = IssuedClanMember;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanNews
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanNews(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanNews");

	UBTTcpLink_Channel_rfReqClanNews_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyAdjustClanMemberGrade
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  CharGrade                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyAdjustClanMemberGrade(const struct FString& ClanName, const struct FString& CharName, unsigned char CharGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyAdjustClanMemberGrade");

	UBTTcpLink_Channel_rfAckNotifyAdjustClanMemberGrade_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;
	params.CharGrade = CharGrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAdjustClanMemberGrade
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  CharGrade                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAdjustClanMemberGrade(int Result, const struct FString& ErrMsg, const struct FString& ClanName, const struct FString& CharName, unsigned char CharGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAdjustClanMemberGrade");

	UBTTcpLink_Channel_rfAckAdjustClanMemberGrade_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanName = ClanName;
	params.CharName = CharName;
	params.CharGrade = CharGrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAdjustClanMemberGrade
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  CharGrade                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAdjustClanMemberGrade(const struct FString& ClanName, const struct FString& CharName, unsigned char CharGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAdjustClanMemberGrade");

	UBTTcpLink_Channel_rfReqAdjustClanMemberGrade_Params params;
	params.ClanName = ClanName;
	params.CharName = CharName;
	params.CharGrade = CharGrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanUserListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanUserListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanUserListEnd");

	UBTTcpLink_Channel_rfAckClanUserListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanUserList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<unsigned char>          ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWinCnt                     (Parm, NeedCtorLink)
// TArray<int>                    ClanLoseCnt                    (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    DudeId                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanUserList(int Result, const struct FString& ErrMsg, TArray<int> Level, TArray<struct FString> CharName, TArray<unsigned char> ClanGrade, TArray<int> ClanWinCnt, TArray<int> ClanLoseCnt, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> DudeId)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanUserList");

	UBTTcpLink_Channel_rfAckClanUserList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Level = Level;
	params.CharName = CharName;
	params.ClanGrade = ClanGrade;
	params.ClanWinCnt = ClanWinCnt;
	params.ClanLoseCnt = ClanLoseCnt;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.DudeId = DudeId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanUserListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanUserListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanUserListStart");

	UBTTcpLink_Channel_rfAckClanUserListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanUserList
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanUserList(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanUserList");

	UBTTcpLink_Channel_rfReqClanUserList_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSearchClan
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            TotalPage                      (Parm)
// TArray<int>                    ClanMarkPattern                (Parm, NeedCtorLink)
// TArray<int>                    ClanMarkBG                     (Parm, NeedCtorLink)
// TArray<unsigned char>          ClanMarkBL                     (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<struct FString>         ClanMaster                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMember                     (Parm, NeedCtorLink)
// TArray<int>                    ClanMemberMax                  (Parm, NeedCtorLink)
// TArray<int>                    ClanCreateDate                 (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// TArray<int>                    ClanDraw                       (Parm, NeedCtorLink)
// TArray<int>                    ClanRank                       (Parm, NeedCtorLink)
// TArray<unsigned char>          ClanRecruit                    (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSearchClan(int Result, const struct FString& ErrMsg, int TotalPage, TArray<int> ClanMarkPattern, TArray<int> ClanMarkBG, TArray<unsigned char> ClanMarkBL, TArray<struct FString> ClanName, TArray<struct FString> ClanMaster, TArray<int> ClanMember, TArray<int> ClanMemberMax, TArray<int> ClanCreateDate, TArray<int> ClanWin, TArray<int> ClanLose, TArray<int> ClanDraw, TArray<int> ClanRank, TArray<unsigned char> ClanRecruit, TArray<int> ClanLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSearchClan");

	UBTTcpLink_Channel_rfAckSearchClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.TotalPage = TotalPage;
	params.ClanMarkPattern = ClanMarkPattern;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.ClanName = ClanName;
	params.ClanMaster = ClanMaster;
	params.ClanMember = ClanMember;
	params.ClanMemberMax = ClanMemberMax;
	params.ClanCreateDate = ClanCreateDate;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.ClanDraw = ClanDraw;
	params.ClanRank = ClanRank;
	params.ClanRecruit = ClanRecruit;
	params.ClanLevel = ClanLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSerachClan
// (Defined, Event, Public)
// Parameters:
// unsigned char                  SearchType                     (Parm)
// struct FString                 Keyword                        (Parm, NeedCtorLink)
// unsigned char                  ClanStatus                     (Parm)
// unsigned char                  ClanRegion                     (Parm)
// int                            ReqPage                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSerachClan(unsigned char SearchType, const struct FString& Keyword, unsigned char ClanStatus, unsigned char ClanRegion, int ReqPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSerachClan");

	UBTTcpLink_Channel_rfReqSerachClan_Params params;
	params.SearchType = SearchType;
	params.Keyword = Keyword;
	params.ClanStatus = ClanStatus;
	params.ClanRegion = ClanRegion;
	params.ReqPage = ReqPage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckJoinClanResult
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// unsigned char                  Permit                         (Parm)
// struct FString                 PermitCharName                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckJoinClanResult(const struct FString& ClanName, unsigned char Permit, const struct FString& PermitCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckJoinClanResult");

	UBTTcpLink_Channel_rfAckJoinClanResult_Params params;
	params.ClanName = ClanName;
	params.Permit = Permit;
	params.PermitCharName = PermitCharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRecvJoinClanResult
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRecvJoinClanResult(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRecvJoinClanResult");

	UBTTcpLink_Channel_rfAckRecvJoinClanResult_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRecvJoinClan
// (Defined, Event, Public)
// Parameters:
// int                            UserIdx                        (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 ReqMsg                         (Parm, NeedCtorLink)
// unsigned char                  Permit                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRecvJoinClan(int UserIdx, const struct FString& CharName, const struct FString& ReqMsg, unsigned char Permit)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRecvJoinClan");

	UBTTcpLink_Channel_rfAckRecvJoinClan_Params params;
	params.UserIdx = UserIdx;
	params.CharName = CharName;
	params.ReqMsg = ReqMsg;
	params.Permit = Permit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvJoinClan
// (Defined, Event, Public)
// Parameters:
// int                            UserIdx                        (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvJoinClan(int UserIdx, const struct FString& CharName, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvJoinClan");

	UBTTcpLink_Channel_rfReqRecvJoinClan_Params params;
	params.UserIdx = UserIdx;
	params.CharName = CharName;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckJoinClan
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 SpecificCharName               (Parm, NeedCtorLink)
// struct FString                 RealRecvCharName               (Parm, NeedCtorLink)
// unsigned char                  RealRecvCharClanGrade          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckJoinClan(int Result, const struct FString& ErrMsg, const struct FString& SpecificCharName, const struct FString& RealRecvCharName, unsigned char RealRecvCharClanGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckJoinClan");

	UBTTcpLink_Channel_rfAckJoinClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.SpecificCharName = SpecificCharName;
	params.RealRecvCharName = RealRecvCharName;
	params.RealRecvCharClanGrade = RealRecvCharClanGrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqJoinClan
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 ClanManagerName                (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqJoinClan(const struct FString& ClanName, const struct FString& ClanManagerName, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqJoinClan");

	UBTTcpLink_Channel_rfReqJoinClan_Params params;
	params.ClanName = ClanName;
	params.ClanManagerName = ClanManagerName;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckInviteClanResult
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  Permit                         (Parm)
// struct FString                 ClanNm                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckInviteClanResult(const struct FString& CharName, unsigned char Permit, const struct FString& ClanNm)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckInviteClanResult");

	UBTTcpLink_Channel_rfAckInviteClanResult_Params params;
	params.CharName = CharName;
	params.Permit = Permit;
	params.ClanNm = ClanNm;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRecvClanInviteResult
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRecvClanInviteResult(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRecvClanInviteResult");

	UBTTcpLink_Channel_rfAckRecvClanInviteResult_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRecvClanInvite
// (Defined, Event, Public)
// Parameters:
// int                            InviterUserDBID                (Parm)
// struct FString                 InviterCharname                (Parm, NeedCtorLink)
// struct FString                 InviterMsg                     (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// unsigned char                  Permit                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRecvClanInvite(int InviterUserDBID, const struct FString& InviterCharname, const struct FString& InviterMsg, const struct FString& ClanName, unsigned char Permit)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRecvClanInvite");

	UBTTcpLink_Channel_rfAckRecvClanInvite_Params params;
	params.InviterUserDBID = InviterUserDBID;
	params.InviterCharname = InviterCharname;
	params.InviterMsg = InviterMsg;
	params.ClanName = ClanName;
	params.Permit = Permit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvClanInvite
// (Defined, Event, Public)
// Parameters:
// int                            InviterUserDBID                (Parm)
// struct FString                 InviterCharname                (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 InviteMsg                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvClanInvite(int InviterUserDBID, const struct FString& InviterCharname, const struct FString& ClanName, const struct FString& InviteMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvClanInvite");

	UBTTcpLink_Channel_rfReqRecvClanInvite_Params params;
	params.InviterUserDBID = InviterUserDBID;
	params.InviterCharname = InviterCharname;
	params.ClanName = ClanName;
	params.InviteMsg = InviteMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckInviteClan
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckInviteClan(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckInviteClan");

	UBTTcpLink_Channel_rfAckInviteClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqInviteClan
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 InviteMsg                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqInviteClan(const struct FString& CharName, const struct FString& InviteMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqInviteClan");

	UBTTcpLink_Channel_rfReqInviteClan_Params params;
	params.CharName = CharName;
	params.InviteMsg = InviteMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClanInfo
// (Defined, Event, Public)
// Parameters:
// struct FClanInfo               stClanInfo                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClanInfo(const struct FClanInfo& stClanInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClanInfo");

	UBTTcpLink_Channel_rfAckClanInfo_Params params;
	params.stClanInfo = stClanInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClanInfo
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClanInfo(const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClanInfo");

	UBTTcpLink_Channel_rfReqClanInfo_Params params;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckCreateClan
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              ItemIdx                        (Parm)
// int                            StackCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckCreateClan(int Result, const struct FString& ErrMsg, const struct FBtrDouble& ItemIdx, int StackCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckCreateClan");

	UBTTcpLink_Channel_rfAckCreateClan_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ItemIdx = ItemIdx;
	params.StackCount = StackCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqCreateClan
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FString                 ClanURL                        (Parm, NeedCtorLink)
// struct FString                 ClanIntro                      (Parm, NeedCtorLink)
// struct FString                 ClanKeyword                    (Parm, NeedCtorLink)
// unsigned char                  ClanRegion                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqCreateClan(const struct FString& ClanName, const struct FString& ClanURL, const struct FString& ClanIntro, const struct FString& ClanKeyword, unsigned char ClanRegion)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqCreateClan");

	UBTTcpLink_Channel_rfReqCreateClan_Params params;
	params.ClanName = ClanName;
	params.ClanURL = ClanURL;
	params.ClanIntro = ClanIntro;
	params.ClanKeyword = ClanKeyword;
	params.ClanRegion = ClanRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckDupCheckClanName
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckDupCheckClanName(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckDupCheckClanName");

	UBTTcpLink_Channel_rfAckDupCheckClanName_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDupCheckClanName
// (Defined, Event, Public)
// Parameters:
// struct FString                 ClanNam                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDupCheckClanName(const struct FString& ClanNam)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDupCheckClanName");

	UBTTcpLink_Channel_rfReqDupCheckClanName_Params params;
	params.ClanNam = ClanNam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSellShopItemInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              UniqueItemID                   (Parm)
// int                            SellPoint                      (Parm)
// int                            CurPoint                       (Parm)
// int                            AfterPoint                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSellShopItemInfo(int Result, const struct FString& ErrMsg, const struct FBtrDouble& UniqueItemID, int SellPoint, int CurPoint, int AfterPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSellShopItemInfo");

	UBTTcpLink_Channel_rfAckSellShopItemInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueItemID = UniqueItemID;
	params.SellPoint = SellPoint;
	params.CurPoint = CurPoint;
	params.AfterPoint = AfterPoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSellShopItemInfo
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              UniqueItemID                   (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSellShopItemInfo(const struct FBtrDouble& UniqueItemID, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSellShopItemInfo");

	UBTTcpLink_Channel_rfReqSellShopItemInfo_Params params;
	params.UniqueItemID = UniqueItemID;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGameOverEnd
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGameOverEnd(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGameOverEnd");

	UBTTcpLink_Channel_rfAckGameOverEnd_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGameOverEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGameOverEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGameOverEnd");

	UBTTcpLink_Channel_rfReqGameOverEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAuctionItemListCount
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  Section                        (Parm)
// unsigned char                  Classfy                        (Parm)
// int                            ItemType                       (Parm)
// int                            ItemGrade                      (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAuctionItemListCount(int Result, const struct FString& ErrMsg, unsigned char Section, unsigned char Classfy, int ItemType, int ItemGrade, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAuctionItemListCount");

	UBTTcpLink_Channel_rfAckAuctionItemListCount_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Section = Section;
	params.Classfy = Classfy;
	params.ItemType = ItemType;
	params.ItemGrade = ItemGrade;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAuctionItemListCount
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Section                        (Parm)
// unsigned char                  Classfy                        (Parm)
// int                            ItemType                       (Parm)
// int                            ItemGrade                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAuctionItemListCount(unsigned char Section, unsigned char Classfy, int ItemType, int ItemGrade)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAuctionItemListCount");

	UBTTcpLink_Channel_rfReqAuctionItemListCount_Params params;
	params.Section = Section;
	params.Classfy = Classfy;
	params.ItemType = ItemType;
	params.ItemGrade = ItemGrade;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckServerTime
// (Defined, Event, Public)
// Parameters:
// int                            Time                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckServerTime(int Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckServerTime");

	UBTTcpLink_Channel_rfAckServerTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqServerTime
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqServerTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqServerTime");

	UBTTcpLink_Channel_rfReqServerTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEntryQSlotIDList
// (Defined, Event, Public)
// Parameters:
// int                            UserNum                        (Parm)
// TArray<unsigned char>          QSlotDispOrder                 (Parm, NeedCtorLink)
// TArray<int>                    MWItemID                       (Parm, NeedCtorLink)
// TArray<int>                    MWPartID                       (Parm, NeedCtorLink)
// TArray<int>                    MWPaintID                      (Parm, NeedCtorLink)
// TArray<int>                    PistolItemID                   (Parm, NeedCtorLink)
// TArray<int>                    PistolPartID                   (Parm, NeedCtorLink)
// TArray<int>                    PistolPaintID                  (Parm, NeedCtorLink)
// TArray<int>                    TWItemID1                      (Parm, NeedCtorLink)
// TArray<int>                    TWItemID2                      (Parm, NeedCtorLink)
// TArray<int>                    Skill1ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill2ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill3ID                       (Parm, NeedCtorLink)
// TArray<int>                    Skill4ID                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEntryQSlotIDList(int UserNum, TArray<unsigned char> QSlotDispOrder, TArray<int> MWItemID, TArray<int> MWPartID, TArray<int> MWPaintID, TArray<int> PistolItemID, TArray<int> PistolPartID, TArray<int> PistolPaintID, TArray<int> TWItemID1, TArray<int> TWItemID2, TArray<int> Skill1ID, TArray<int> Skill2ID, TArray<int> Skill3ID, TArray<int> Skill4ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEntryQSlotIDList");

	UBTTcpLink_Channel_rfAckEntryQSlotIDList_Params params;
	params.UserNum = UserNum;
	params.QSlotDispOrder = QSlotDispOrder;
	params.MWItemID = MWItemID;
	params.MWPartID = MWPartID;
	params.MWPaintID = MWPaintID;
	params.PistolItemID = PistolItemID;
	params.PistolPartID = PistolPartID;
	params.PistolPaintID = PistolPaintID;
	params.TWItemID1 = TWItemID1;
	params.TWItemID2 = TWItemID2;
	params.Skill1ID = Skill1ID;
	params.Skill2ID = Skill2ID;
	params.Skill3ID = Skill3ID;
	params.Skill4ID = Skill4ID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqEntryQSlotIDList
// (Defined, Event, Public)
// Parameters:
// int                            UserNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqEntryQSlotIDList(int UserNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqEntryQSlotIDList");

	UBTTcpLink_Channel_rfReqEntryQSlotIDList_Params params;
	params.UserNum = UserNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEntryQSlotUniqueIDList
// (Defined, Event, Public)
// Parameters:
// int                            UserNum                        (Parm)
// TArray<unsigned char>          QSlotDispOrder                 (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      MWUniqueID                     (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      PistolUniqueID                 (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TW1UniqueID                    (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TW2UniqueID                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEntryQSlotUniqueIDList(int UserNum, TArray<unsigned char> QSlotDispOrder, TArray<struct FBtrDouble> MWUniqueID, TArray<struct FBtrDouble> PistolUniqueID, TArray<struct FBtrDouble> TW1UniqueID, TArray<struct FBtrDouble> TW2UniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEntryQSlotUniqueIDList");

	UBTTcpLink_Channel_rfAckEntryQSlotUniqueIDList_Params params;
	params.UserNum = UserNum;
	params.QSlotDispOrder = QSlotDispOrder;
	params.MWUniqueID = MWUniqueID;
	params.PistolUniqueID = PistolUniqueID;
	params.TW1UniqueID = TW1UniqueID;
	params.TW2UniqueID = TW2UniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqEntryQSlotUniqueIDList
// (Defined, Event, Public)
// Parameters:
// int                            UserNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqEntryQSlotUniqueIDList(int UserNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqEntryQSlotUniqueIDList");

	UBTTcpLink_Channel_rfReqEntryQSlotUniqueIDList_Params params;
	params.UserNum = UserNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAuctionBidding
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAuctionBidding(int Result, const struct FString& ErrMsg, int PointRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAuctionBidding");

	UBTTcpLink_Channel_rfAckAuctionBidding_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PointRemain = PointRemain;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAuctionBidding
// (Defined, Event, Public)
// Parameters:
// int                            UniqueID                       (Parm)
// int                            BiddingPrice                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAuctionBidding(int UniqueID, int BiddingPrice)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAuctionBidding");

	UBTTcpLink_Channel_rfReqAuctionBidding_Params params;
	params.UniqueID = UniqueID;
	params.BiddingPrice = BiddingPrice;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAuctionInstantlyBuying
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAuctionInstantlyBuying(int Result, const struct FString& ErrMsg, int PointRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAuctionInstantlyBuying");

	UBTTcpLink_Channel_rfAckAuctionInstantlyBuying_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PointRemain = PointRemain;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAuctionInstantlyBuying
// (Defined, Event, Public)
// Parameters:
// int                            UniqueID                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAuctionInstantlyBuying(int UniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAuctionInstantlyBuying");

	UBTTcpLink_Channel_rfReqAuctionInstantlyBuying_Params params;
	params.UniqueID = UniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAuctionItemListEnd
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Section                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAuctionItemListEnd(unsigned char Section)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAuctionItemListEnd");

	UBTTcpLink_Channel_rfAckAuctionItemListEnd_Params params;
	params.Section = Section;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAuctionItemList
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Section                        (Parm)
// TArray<int>                    UniqueIDs                      (Parm, NeedCtorLink)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    AddPartsIDs                    (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UntilTimes                     (Parm, NeedCtorLink)
// TArray<int>                    BiddingPrices                  (Parm, NeedCtorLink)
// TArray<int>                    InstantlyByuingPrices          (Parm, NeedCtorLink)
// TArray<int>                    ItemDamageds                   (Parm, NeedCtorLink)
// TArray<struct FString>         HighestBidderNames             (Parm, NeedCtorLink)
// TArray<struct FString>         SellerNames                    (Parm, NeedCtorLink)
// TArray<int>                    ItemCount                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAuctionItemList(unsigned char Section, TArray<int> UniqueIDs, TArray<int> ItemIDs, TArray<int> AddPartsIDs, TArray<struct FBtrDouble> UntilTimes, TArray<int> BiddingPrices, TArray<int> InstantlyByuingPrices, TArray<int> ItemDamageds, TArray<struct FString> HighestBidderNames, TArray<struct FString> SellerNames, TArray<int> ItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAuctionItemList");

	UBTTcpLink_Channel_rfAckAuctionItemList_Params params;
	params.Section = Section;
	params.UniqueIDs = UniqueIDs;
	params.ItemIDs = ItemIDs;
	params.AddPartsIDs = AddPartsIDs;
	params.UntilTimes = UntilTimes;
	params.BiddingPrices = BiddingPrices;
	params.InstantlyByuingPrices = InstantlyByuingPrices;
	params.ItemDamageds = ItemDamageds;
	params.HighestBidderNames = HighestBidderNames;
	params.SellerNames = SellerNames;
	params.ItemCount = ItemCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAuctionItemListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  Section                        (Parm)
// int                            PageNum                        (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAuctionItemListStart(int Result, const struct FString& ErrMsg, unsigned char Section, int PageNum, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAuctionItemListStart");

	UBTTcpLink_Channel_rfAckAuctionItemListStart_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Section = Section;
	params.PageNum = PageNum;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAuctionItemList
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Section                        (Parm)
// struct FString                 Keyword                        (Parm, NeedCtorLink)
// int                            ItemRank                       (Parm)
// unsigned char                  ItemClassfy                    (Parm)
// unsigned char                  IsAvailable                    (Parm)
// int                            PageNum                        (Parm)
// int                            Count                          (Parm)
// int                            SortOpt                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAuctionItemList(unsigned char Section, const struct FString& Keyword, int ItemRank, unsigned char ItemClassfy, unsigned char IsAvailable, int PageNum, int Count, int SortOpt)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAuctionItemList");

	UBTTcpLink_Channel_rfReqAuctionItemList_Params params;
	params.Section = Section;
	params.Keyword = Keyword;
	params.ItemRank = ItemRank;
	params.ItemClassfy = ItemClassfy;
	params.IsAvailable = IsAvailable;
	params.PageNum = PageNum;
	params.Count = Count;
	params.SortOpt = SortOpt;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAuctionMyItemCancel
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAuctionMyItemCancel(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAuctionMyItemCancel");

	UBTTcpLink_Channel_rfAckAuctionMyItemCancel_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAuctionMyItemCancel
// (Defined, Event, Public)
// Parameters:
// int                            UniqueID                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAuctionMyItemCancel(int UniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAuctionMyItemCancel");

	UBTTcpLink_Channel_rfReqAuctionMyItemCancel_Params params;
	params.UniqueID = UniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAuctionMyItemRegister
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            BeginPrice                     (Parm)
// int                            BuyPrice                       (Parm)
// int                            GuarantyPoint                  (Parm)
// int                            PointRemain                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAuctionMyItemRegister(int Result, const struct FString& ErrMsg, int BeginPrice, int BuyPrice, int GuarantyPoint, int PointRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAuctionMyItemRegister");

	UBTTcpLink_Channel_rfAckAuctionMyItemRegister_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.BeginPrice = BeginPrice;
	params.BuyPrice = BuyPrice;
	params.GuarantyPoint = GuarantyPoint;
	params.PointRemain = PointRemain;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAuctionMyItemRegister
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              UniqueID                       (Parm)
// int                            ItemCount                      (Parm)
// int                            BeginPrice                     (Parm)
// int                            PeriodHour                     (Parm)
// int                            InstantlyBuyingPrice           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAuctionMyItemRegister(const struct FBtrDouble& UniqueID, int ItemCount, int BeginPrice, int PeriodHour, int InstantlyBuyingPrice)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAuctionMyItemRegister");

	UBTTcpLink_Channel_rfReqAuctionMyItemRegister_Params params;
	params.UniqueID = UniqueID;
	params.ItemCount = ItemCount;
	params.BeginPrice = BeginPrice;
	params.PeriodHour = PeriodHour;
	params.InstantlyBuyingPrice = InstantlyBuyingPrice;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckMyMoney
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            Point                          (Parm)
// int                            Cash                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckMyMoney(int Result, const struct FString& ErrMsg, int Point, int Cash)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckMyMoney");

	UBTTcpLink_Channel_rfAckMyMoney_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Point = Point;
	params.Cash = Cash;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqMyMoney
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqMyMoney()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqMyMoney");

	UBTTcpLink_Channel_rfReqMyMoney_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckUpdateQSlot
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckUpdateQSlot(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckUpdateQSlot");

	UBTTcpLink_Channel_rfAckUpdateQSlot_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqUpdateQSlot
// (Defined, Event, Public)
// Parameters:
// int                            QSlotID                        (Parm)
// struct FString                 QSlotName                      (Parm, NeedCtorLink)
// struct FBtrDouble              MWItemID                       (Parm)
// struct FBtrDouble              PistolItemID                   (Parm)
// struct FBtrDouble              TWItemID1                      (Parm)
// struct FBtrDouble              TWItemID2                      (Parm)
// int                            Skill1                         (Parm)
// int                            Skill2                         (Parm)
// int                            Skill3                         (Parm)
// int                            Skill4                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqUpdateQSlot(int QSlotID, const struct FString& QSlotName, const struct FBtrDouble& MWItemID, const struct FBtrDouble& PistolItemID, const struct FBtrDouble& TWItemID1, const struct FBtrDouble& TWItemID2, int Skill1, int Skill2, int Skill3, int Skill4)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqUpdateQSlot");

	UBTTcpLink_Channel_rfReqUpdateQSlot_Params params;
	params.QSlotID = QSlotID;
	params.QSlotName = QSlotName;
	params.MWItemID = MWItemID;
	params.PistolItemID = PistolItemID;
	params.TWItemID1 = TWItemID1;
	params.TWItemID2 = TWItemID2;
	params.Skill1 = Skill1;
	params.Skill2 = Skill2;
	params.Skill3 = Skill3;
	params.Skill4 = Skill4;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckQSlotList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    QSlotID                        (Parm, NeedCtorLink)
// TArray<struct FString>         QSlotName                      (Parm, NeedCtorLink)
// TArray<unsigned char>          QSlotDispOrder                 (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      MWItemID                       (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      PistolItemID                   (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TWItemID1                      (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      TWItemID2                      (Parm, NeedCtorLink)
// TArray<int>                    Skill1                         (Parm, NeedCtorLink)
// TArray<int>                    Skill2                         (Parm, NeedCtorLink)
// TArray<int>                    Skill3                         (Parm, NeedCtorLink)
// TArray<int>                    Skill4                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckQSlotList(int Result, const struct FString& ErrMsg, TArray<int> QSlotID, TArray<struct FString> QSlotName, TArray<unsigned char> QSlotDispOrder, TArray<struct FBtrDouble> MWItemID, TArray<struct FBtrDouble> PistolItemID, TArray<struct FBtrDouble> TWItemID1, TArray<struct FBtrDouble> TWItemID2, TArray<int> Skill1, TArray<int> Skill2, TArray<int> Skill3, TArray<int> Skill4)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckQSlotList");

	UBTTcpLink_Channel_rfAckQSlotList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.QSlotID = QSlotID;
	params.QSlotName = QSlotName;
	params.QSlotDispOrder = QSlotDispOrder;
	params.MWItemID = MWItemID;
	params.PistolItemID = PistolItemID;
	params.TWItemID1 = TWItemID1;
	params.TWItemID2 = TWItemID2;
	params.Skill1 = Skill1;
	params.Skill2 = Skill2;
	params.Skill3 = Skill3;
	params.Skill4 = Skill4;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqQSlotList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqQSlotList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqQSlotList");

	UBTTcpLink_Channel_rfReqQSlotList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRepairItem
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// int                            RepairCost                     (Parm)
// TArray<int>                    DamageDegree                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRepairItem(int Result, const struct FString& ErrMsg, TArray<struct FBtrDouble> UniqueItemID, int RepairCost, TArray<int> DamageDegree)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRepairItem");

	UBTTcpLink_Channel_rfAckRepairItem_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueItemID = UniqueItemID;
	params.RepairCost = RepairCost;
	params.DamageDegree = DamageDegree;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRepairItem
// (Defined, Event, Public)
// Parameters:
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRepairItem(TArray<struct FBtrDouble> UniqueItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRepairItem");

	UBTTcpLink_Channel_rfReqRepairItem_Params params;
	params.UniqueItemID = UniqueItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRepairCost
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// TArray<int>                    RepairCost                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRepairCost(int Result, const struct FString& ErrMsg, TArray<struct FBtrDouble> UniqueItemID, TArray<int> RepairCost)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRepairCost");

	UBTTcpLink_Channel_rfAckRepairCost_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueItemID = UniqueItemID;
	params.RepairCost = RepairCost;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRepairCost
// (Defined, Event, Public)
// Parameters:
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRepairCost(TArray<struct FBtrDouble> UniqueItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRepairCost");

	UBTTcpLink_Channel_rfReqRepairCost_Params params;
	params.UniqueItemID = UniqueItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckUpdateWeaponDurability
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// TArray<int>                    Durability                     (Parm, NeedCtorLink)
// TArray<unsigned char>          IsDestroy                      (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      FailedWeaponUniqueID           (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckUpdateWeaponDurability(int Result, const struct FString& ErrMsg, TArray<struct FBtrDouble> UniqueItemID, TArray<int> Durability, TArray<unsigned char> IsDestroy, TArray<struct FBtrDouble> FailedWeaponUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckUpdateWeaponDurability");

	UBTTcpLink_Channel_rfAckUpdateWeaponDurability_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueItemID = UniqueItemID;
	params.Durability = Durability;
	params.IsDestroy = IsDestroy;
	params.FailedWeaponUniqueID = FailedWeaponUniqueID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqUpdateWeaponDurability
// (Defined, Event, Public)
// Parameters:
// int                            TotalPlayTime                  (Parm)
// TArray<int>                    OwnerID                        (Parm, NeedCtorLink)
// TArray<int>                    Number                         (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueItemID                   (Parm, NeedCtorLink)
// TArray<int>                    UsingSec                       (Parm, NeedCtorLink)
// TArray<int>                    UsingRoundInSD                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqUpdateWeaponDurability(int TotalPlayTime, TArray<int> OwnerID, TArray<int> Number, TArray<struct FBtrDouble> UniqueItemID, TArray<int> UsingSec, TArray<int> UsingRoundInSD)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqUpdateWeaponDurability");

	UBTTcpLink_Channel_rfReqUpdateWeaponDurability_Params params;
	params.TotalPlayTime = TotalPlayTime;
	params.OwnerID = OwnerID;
	params.Number = Number;
	params.UniqueItemID = UniqueItemID;
	params.UsingSec = UsingSec;
	params.UsingRoundInSD = UsingRoundInSD;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckModifyWeapon
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FBtrDouble              UniqueID                       (Parm)
// int                            AddPartID                      (Parm)
// int                            PaintID                        (Parm)
// int                            Point                          (Parm)
// int                            Cash                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckModifyWeapon(int Result, const struct FString& ErrMsg, const struct FBtrDouble& UniqueID, int AddPartID, int PaintID, int Point, int Cash)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckModifyWeapon");

	UBTTcpLink_Channel_rfAckModifyWeapon_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UniqueID = UniqueID;
	params.AddPartID = AddPartID;
	params.PaintID = PaintID;
	params.Point = Point;
	params.Cash = Cash;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqModifyWeapon
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              UniqueID                       (Parm)
// int                            AddPartID                      (Parm)
// int                            PaintID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqModifyWeapon(const struct FBtrDouble& UniqueID, int AddPartID, int PaintID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqModifyWeapon");

	UBTTcpLink_Channel_rfReqModifyWeapon_Params params;
	params.UniqueID = UniqueID;
	params.AddPartID = AddPartID;
	params.PaintID = PaintID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSellShopItem
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// int                            CashRemain                     (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSellShopItem(int Result, const struct FString& ErrMsg, int PointRemain, int CashRemain, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSellShopItem");

	UBTTcpLink_Channel_rfAckSellShopItem_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PointRemain = PointRemain;
	params.CashRemain = CashRemain;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSellShopItem
// (Defined, Event, Public)
// Parameters:
// struct FBtrDouble              ItemUniqueID                   (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSellShopItem(const struct FBtrDouble& ItemUniqueID, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSellShopItem");

	UBTTcpLink_Channel_rfReqSellShopItem_Params params;
	params.ItemUniqueID = ItemUniqueID;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckBuyShopItem
// (Defined, Event, Public)
// Parameters:
// int                            ItemCount                      (Parm)
// TArray<int>                    Result                         (Parm, NeedCtorLink)
// TArray<int>                    BoughtItemTypeID               (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      BoughtItemUniqueID             (Parm, NeedCtorLink)
// TArray<int>                    BoughtPartID                   (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      BoughtUntilTIme                (Parm, NeedCtorLink)
// TArray<int>                    BoughtStackCnt                 (Parm, NeedCtorLink)
// int                            PointRemain                    (Parm)
// int                            CashRemain                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckBuyShopItem(int ItemCount, TArray<int> Result, TArray<int> BoughtItemTypeID, TArray<struct FBtrDouble> BoughtItemUniqueID, TArray<int> BoughtPartID, TArray<struct FBtrDouble> BoughtUntilTIme, TArray<int> BoughtStackCnt, int PointRemain, int CashRemain)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckBuyShopItem");

	UBTTcpLink_Channel_rfAckBuyShopItem_Params params;
	params.ItemCount = ItemCount;
	params.Result = Result;
	params.BoughtItemTypeID = BoughtItemTypeID;
	params.BoughtItemUniqueID = BoughtItemUniqueID;
	params.BoughtPartID = BoughtPartID;
	params.BoughtUntilTIme = BoughtUntilTIme;
	params.BoughtStackCnt = BoughtStackCnt;
	params.PointRemain = PointRemain;
	params.CashRemain = CashRemain;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqBuyShopItem
// (Defined, Event, Public)
// Parameters:
// int                            ItemID                         (Parm)
// struct FBtrDouble              ItemUniqueID                   (Parm)
// unsigned char                  BuyOption1                     (Parm)
// unsigned char                  BuyOption2                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqBuyShopItem(int ItemID, const struct FBtrDouble& ItemUniqueID, unsigned char BuyOption1, unsigned char BuyOption2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqBuyShopItem");

	UBTTcpLink_Channel_rfReqBuyShopItem_Params params;
	params.ItemID = ItemID;
	params.ItemUniqueID = ItemUniqueID;
	params.BuyOption1 = BuyOption1;
	params.BuyOption2 = BuyOption2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckShopItemListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckShopItemListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckShopItemListEnd");

	UBTTcpLink_Channel_rfAckShopItemListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckShopItemList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckShopItemList(TArray<int> ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckShopItemList");

	UBTTcpLink_Channel_rfAckShopItemList_Params params;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckShopItemListStart
// (Defined, Event, Public)
// Parameters:
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckShopItemListStart(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckShopItemListStart");

	UBTTcpLink_Channel_rfAckShopItemListStart_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqShopItemList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqShopItemList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqShopItemList");

	UBTTcpLink_Channel_rfReqShopItemList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckForceGameOver
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            GameRoomNumber                 (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckForceGameOver(int UserID, int GameRoomNumber, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckForceGameOver");

	UBTTcpLink_Channel_rfAckForceGameOver_Params params;
	params.UserID = UserID;
	params.GameRoomNumber = GameRoomNumber;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqForceGameOver
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqForceGameOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqForceGameOver");

	UBTTcpLink_Channel_rfReqForceGameOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGiveSkill
// (Defined, Event, Public)
// Parameters:
// int                            SkillID                        (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGiveSkill(int SkillID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGiveSkill");

	UBTTcpLink_Channel_rfAckGiveSkill_Params params;
	params.SkillID = SkillID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGiveSkill
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGiveSkill()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGiveSkill");

	UBTTcpLink_Channel_rfReqGiveSkill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyExpiredItemIDs
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// TArray<struct FBtrDouble>      ExpiredItemUniqueIDs           (Parm, NeedCtorLink)
// TArray<int>                    ExpiredItemIDs                 (Parm, NeedCtorLink)
// TArray<int>                    ExpiredItemPartIDs             (Parm, NeedCtorLink)
// TArray<unsigned char>          ExpiredItemSlotPos             (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyExpiredItemIDs(int UserID, TArray<struct FBtrDouble> ExpiredItemUniqueIDs, TArray<int> ExpiredItemIDs, TArray<int> ExpiredItemPartIDs, TArray<unsigned char> ExpiredItemSlotPos, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyExpiredItemIDs");

	UBTTcpLink_Channel_rfAckNotifyExpiredItemIDs_Params params;
	params.UserID = UserID;
	params.ExpiredItemUniqueIDs = ExpiredItemUniqueIDs;
	params.ExpiredItemIDs = ExpiredItemIDs;
	params.ExpiredItemPartIDs = ExpiredItemPartIDs;
	params.ExpiredItemSlotPos = ExpiredItemSlotPos;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyExpiredItemIDs
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyExpiredItemIDs()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyExpiredItemIDs");

	UBTTcpLink_Channel_rfReqNotifyExpiredItemIDs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyExpiredSkillIDs
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// TArray<struct FBtrDouble>      ExpiredSkillUniqueIDs          (Parm, NeedCtorLink)
// TArray<int>                    ExpiredSkillIDs                (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<unsigned char>          ExpiredSkillSlotPositions      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyExpiredSkillIDs(int UserID, TArray<struct FBtrDouble> ExpiredSkillUniqueIDs, TArray<int> ExpiredSkillIDs, int Result, const struct FString& ErrMsg, TArray<unsigned char> ExpiredSkillSlotPositions)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyExpiredSkillIDs");

	UBTTcpLink_Channel_rfAckNotifyExpiredSkillIDs_Params params;
	params.UserID = UserID;
	params.ExpiredSkillUniqueIDs = ExpiredSkillUniqueIDs;
	params.ExpiredSkillIDs = ExpiredSkillIDs;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ExpiredSkillSlotPositions = ExpiredSkillSlotPositions;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyExpiredSkillIDs
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyExpiredSkillIDs()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyExpiredSkillIDs");

	UBTTcpLink_Channel_rfReqNotifyExpiredSkillIDs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyChangedSkillState
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// TArray<int>                    SkillIDs                       (Parm, NeedCtorLink)
// TArray<unsigned char>          NewStates                      (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyChangedSkillState(int UserID, TArray<int> SkillIDs, TArray<unsigned char> NewStates, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyChangedSkillState");

	UBTTcpLink_Channel_rfAckNotifyChangedSkillState_Params params;
	params.UserID = UserID;
	params.SkillIDs = SkillIDs;
	params.NewStates = NewStates;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyChangedSkillState
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyChangedSkillState()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyChangedSkillState");

	UBTTcpLink_Channel_rfReqNotifyChangedSkillState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyChangedItemState
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<unsigned char>          NewStates                      (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyChangedItemState(int UserID, TArray<int> ItemIDs, TArray<unsigned char> NewStates, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyChangedItemState");

	UBTTcpLink_Channel_rfAckNotifyChangedItemState_Params params;
	params.UserID = UserID;
	params.ItemIDs = ItemIDs;
	params.NewStates = NewStates;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyChangedItemState
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyChangedItemState()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyChangedItemState");

	UBTTcpLink_Channel_rfReqNotifyChangedItemState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckConfirmSkillChanged
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckConfirmSkillChanged(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckConfirmSkillChanged");

	UBTTcpLink_Channel_rfAckConfirmSkillChanged_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqConfirmSkillChanged
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqConfirmSkillChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqConfirmSkillChanged");

	UBTTcpLink_Channel_rfReqConfirmSkillChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEquipSkill
// (Defined, Event, Public)
// Parameters:
// int                            ChangedNewSkillID              (Parm)
// int                            ChangedNewSkillUniqueID        (Parm)
// unsigned char                  ChangedNewSlotPosition         (Parm)
// int                            ChangedOldSkillID              (Parm)
// int                            ChangedOldSkillUniqueID        (Parm)
// unsigned char                  ChangedOldSlotPosition         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEquipSkill(int ChangedNewSkillID, int ChangedNewSkillUniqueID, unsigned char ChangedNewSlotPosition, int ChangedOldSkillID, int ChangedOldSkillUniqueID, unsigned char ChangedOldSlotPosition, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEquipSkill");

	UBTTcpLink_Channel_rfAckEquipSkill_Params params;
	params.ChangedNewSkillID = ChangedNewSkillID;
	params.ChangedNewSkillUniqueID = ChangedNewSkillUniqueID;
	params.ChangedNewSlotPosition = ChangedNewSlotPosition;
	params.ChangedOldSkillID = ChangedOldSkillID;
	params.ChangedOldSkillUniqueID = ChangedOldSkillUniqueID;
	params.ChangedOldSlotPosition = ChangedOldSlotPosition;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqEquipSkill
// (Defined, Event, Public)
// Parameters:
// int                            SkillID                        (Parm)
// int                            SkillUniqueID                  (Parm)
// unsigned char                  NewSlotPosition                (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqEquipSkill(int SkillID, int SkillUniqueID, unsigned char NewSlotPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqEquipSkill");

	UBTTcpLink_Channel_rfReqEquipSkill_Params params;
	params.SkillID = SkillID;
	params.SkillUniqueID = SkillUniqueID;
	params.NewSlotPosition = NewSlotPosition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckUserSkillListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckUserSkillListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckUserSkillListEnd");

	UBTTcpLink_Channel_rfAckUserSkillListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckUserSkillList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UniqueSkillID                  (Parm, NeedCtorLink)
// TArray<int>                    SkillID                        (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UntilTime                      (Parm, NeedCtorLink)
// TArray<unsigned char>          SlotPosition                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckUserSkillList(TArray<int> UniqueSkillID, TArray<int> SkillID, TArray<struct FBtrDouble> UntilTime, TArray<unsigned char> SlotPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckUserSkillList");

	UBTTcpLink_Channel_rfAckUserSkillList_Params params;
	params.UniqueSkillID = UniqueSkillID;
	params.SkillID = SkillID;
	params.UntilTime = UntilTime;
	params.SlotPosition = SlotPosition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckUserSkillListStart
// (Defined, Event, Public)
// Parameters:
// int                            Count                          (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckUserSkillListStart(int Count, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckUserSkillListStart");

	UBTTcpLink_Channel_rfAckUserSkillListStart_Params params;
	params.Count = Count;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqUserSkillList
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqUserSkillList(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqUserSkillList");

	UBTTcpLink_Channel_rfReqUserSkillList_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckDelMemo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    FailedMemoID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckDelMemo(int Result, const struct FString& ErrMsg, TArray<int> FailedMemoID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckDelMemo");

	UBTTcpLink_Channel_rfAckDelMemo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.FailedMemoID = FailedMemoID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDelMemo
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    MemoIdx                        (Parm, NeedCtorLink)
// unsigned char                  Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDelMemo(TArray<int> MemoIdx, unsigned char Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDelMemo");

	UBTTcpLink_Channel_rfReqDelMemo_Params params;
	params.MemoIdx = MemoIdx;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckReadMemo
// (Defined, Event, Public)
// Parameters:
// struct FString                 cnameFrom                      (Parm, NeedCtorLink)
// struct FString                 Text                           (Parm, NeedCtorLink)
// struct FString                 dateRecv                       (Parm, NeedCtorLink)
// struct FBtrDouble              ItemUID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckReadMemo(const struct FString& cnameFrom, const struct FString& Text, const struct FString& dateRecv, const struct FBtrDouble& ItemUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckReadMemo");

	UBTTcpLink_Channel_rfAckReadMemo_Params params;
	params.cnameFrom = cnameFrom;
	params.Text = Text;
	params.dateRecv = dateRecv;
	params.ItemUID = ItemUID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqReadMemo
// (Defined, Event, Public)
// Parameters:
// int                            MemoIdx                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqReadMemo(int MemoIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqReadMemo");

	UBTTcpLink_Channel_rfReqReadMemo_Params params;
	params.MemoIdx = MemoIdx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEndMemoList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEndMemoList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEndMemoList");

	UBTTcpLink_Channel_rfAckEndMemoList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckMemoList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    MemoIdx                        (Parm, NeedCtorLink)
// TArray<struct FString>         cnameFrom                      (Parm, NeedCtorLink)
// TArray<struct FString>         dateRecv                       (Parm, NeedCtorLink)
// TArray<struct FString>         Text                           (Parm, NeedCtorLink)
// TArray<unsigned char>          Status                         (Parm, NeedCtorLink)
// TArray<int>                    UntilExpire                    (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      ItemUID                        (Parm, NeedCtorLink)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<unsigned char>          MsgType                        (Parm, NeedCtorLink)
// TArray<int>                    ItemPartID                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckMemoList(TArray<int> MemoIdx, TArray<struct FString> cnameFrom, TArray<struct FString> dateRecv, TArray<struct FString> Text, TArray<unsigned char> Status, TArray<int> UntilExpire, TArray<struct FBtrDouble> ItemUID, TArray<int> ItemID, TArray<unsigned char> MsgType, TArray<int> ItemPartID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckMemoList");

	UBTTcpLink_Channel_rfAckMemoList_Params params;
	params.MemoIdx = MemoIdx;
	params.cnameFrom = cnameFrom;
	params.dateRecv = dateRecv;
	params.Text = Text;
	params.Status = Status;
	params.UntilExpire = UntilExpire;
	params.ItemUID = ItemUID;
	params.ItemID = ItemID;
	params.MsgType = MsgType;
	params.ItemPartID = ItemPartID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckStartMemoList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  Type                           (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckStartMemoList(int Result, const struct FString& ErrMsg, unsigned char Type, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckStartMemoList");

	UBTTcpLink_Channel_rfAckStartMemoList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Type = Type;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqMemoList
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Type                           (Parm)
// unsigned char                  MemoType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqMemoList(unsigned char Type, unsigned char MemoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqMemoList");

	UBTTcpLink_Channel_rfReqMemoList_Params params;
	params.Type = Type;
	params.MemoType = MemoType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvMemo
// (Defined, Event, Public)
// Parameters:
// struct FString                 cnameFrom                      (Parm, NeedCtorLink)
// unsigned char                  MemoType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvMemo(const struct FString& cnameFrom, unsigned char MemoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvMemo");

	UBTTcpLink_Channel_rfReqRecvMemo_Params params;
	params.cnameFrom = cnameFrom;
	params.MemoType = MemoType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSendMemo
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         CnamesToFail                   (Parm, NeedCtorLink)
// TArray<int>                    ResultArray                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSendMemo(TArray<struct FString> CnamesToFail, TArray<int> ResultArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSendMemo");

	UBTTcpLink_Channel_rfAckSendMemo_Params params;
	params.CnamesToFail = CnamesToFail;
	params.ResultArray = ResultArray;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSendMemo
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         cnames                         (Parm, NeedCtorLink)
// struct FString                 Msg                            (Parm, NeedCtorLink)
// int                            ItemUID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSendMemo(TArray<struct FString> cnames, const struct FString& Msg, int ItemUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSendMemo");

	UBTTcpLink_Channel_rfReqSendMemo_Params params;
	params.cnames = cnames;
	params.Msg = Msg;
	params.ItemUID = ItemUID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvChatWispher
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharnameFrom                   (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvChatWispher(const struct FString& CharnameFrom, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvChatWispher");

	UBTTcpLink_Channel_rfReqRecvChatWispher_Params params;
	params.CharnameFrom = CharnameFrom;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChatWispher
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 ToCharName                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChatWispher(int Result, const struct FString& ErrMsg, const struct FString& ToCharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChatWispher");

	UBTTcpLink_Channel_rfAckChatWispher_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ToCharName = ToCharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChatWispher
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChatWispher(const struct FString& CharName, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChatWispher");

	UBTTcpLink_Channel_rfReqChatWispher_Params params;
	params.CharName = CharName;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRemoveBlockUserList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRemoveBlockUserList(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRemoveBlockUserList");

	UBTTcpLink_Channel_rfAckRemoveBlockUserList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRemoveBlockUserList
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRemoveBlockUserList(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRemoveBlockUserList");

	UBTTcpLink_Channel_rfReqRemoveBlockUserList_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckAddBlockUserList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckAddBlockUserList(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckAddBlockUserList");

	UBTTcpLink_Channel_rfAckAddBlockUserList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqAddBlockUserList
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqAddBlockUserList(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqAddBlockUserList");

	UBTTcpLink_Channel_rfReqAddBlockUserList_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckBlockUserListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckBlockUserListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckBlockUserListEnd");

	UBTTcpLink_Channel_rfAckBlockUserListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckBlockUserList
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckBlockUserList(TArray<struct FString> CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckBlockUserList");

	UBTTcpLink_Channel_rfAckBlockUserList_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckBlockUserListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckBlockUserListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckBlockUserListStart");

	UBTTcpLink_Channel_rfAckBlockUserListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqBlockUserList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqBlockUserList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqBlockUserList");

	UBTTcpLink_Channel_rfReqBlockUserList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqCompleteFriendInvite
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharnameToBeInvited            (Parm, NeedCtorLink)
// unsigned char                  IsPermit                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqCompleteFriendInvite(const struct FString& CharnameToBeInvited, unsigned char IsPermit)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqCompleteFriendInvite");

	UBTTcpLink_Channel_rfReqCompleteFriendInvite_Params params;
	params.CharnameToBeInvited = CharnameToBeInvited;
	params.IsPermit = IsPermit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckConfirmFriendInvite
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckConfirmFriendInvite(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckConfirmFriendInvite");

	UBTTcpLink_Channel_rfAckConfirmFriendInvite_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqConfirmFriendInvite
// (Defined, Event, Public)
// Parameters:
// int                            ReqUserID                      (Parm)
// struct FString                 ReqedCharname                  (Parm, NeedCtorLink)
// unsigned char                  IsPermit                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqConfirmFriendInvite(int ReqUserID, const struct FString& ReqedCharname, unsigned char IsPermit)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqConfirmFriendInvite");

	UBTTcpLink_Channel_rfReqConfirmFriendInvite_Params params;
	params.ReqUserID = ReqUserID;
	params.ReqedCharname = ReqedCharname;
	params.IsPermit = IsPermit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRecvFriendInvite
// (Defined, Event, Public)
// Parameters:
// int                            ReqUserID                      (Parm)
// struct FString                 ReqCharname                    (Parm, NeedCtorLink)
// struct FString                 InviteMsg                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRecvFriendInvite(int ReqUserID, const struct FString& ReqCharname, const struct FString& InviteMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRecvFriendInvite");

	UBTTcpLink_Channel_rfReqRecvFriendInvite_Params params;
	params.ReqUserID = ReqUserID;
	params.ReqCharname = ReqCharname;
	params.InviteMsg = InviteMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSendFriendInvite
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSendFriendInvite(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSendFriendInvite");

	UBTTcpLink_Channel_rfAckSendFriendInvite_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSendFriendInvite
// (Defined, Event, Public)
// Parameters:
// int                            InviteUserID                   (Parm)
// struct FString                 InviteName                     (Parm, NeedCtorLink)
// struct FString                 InviteMsg                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSendFriendInvite(int InviteUserID, const struct FString& InviteName, const struct FString& InviteMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSendFriendInvite");

	UBTTcpLink_Channel_rfReqSendFriendInvite_Params params;
	params.InviteUserID = InviteUserID;
	params.InviteName = InviteName;
	params.InviteMsg = InviteMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChatNormal
// (Defined, Event, Public)
// Parameters:
// int                            id                             (Parm)
// struct FString                 Sender                         (Parm, NeedCtorLink)
// struct FString                 Message                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChatNormal(int id, const struct FString& Sender, const struct FString& Message, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChatNormal");

	UBTTcpLink_Channel_rfAckChatNormal_Params params;
	params.id = id;
	params.Sender = Sender;
	params.Message = Message;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChatNormal
// (Defined, Event, Public)
// Parameters:
// struct FString                 Message                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChatNormal(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChatNormal");

	UBTTcpLink_Channel_rfReqChatNormal_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckDummy
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckDummy(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckDummy");

	UBTTcpLink_Channel_rfAckDummy_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDummy
// (Defined, Event, Public)
// Parameters:
// int                            DelayCheck                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDummy(int DelayCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDummy");

	UBTTcpLink_Channel_rfReqDummy_Params params;
	params.DelayCheck = DelayCheck;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckConfirmItemChanged
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckConfirmItemChanged(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckConfirmItemChanged");

	UBTTcpLink_Channel_rfAckConfirmItemChanged_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqConfirmItemChanged
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqConfirmItemChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqConfirmItemChanged");

	UBTTcpLink_Channel_rfReqConfirmItemChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEquipItem
// (Defined, Event, Public)
// Parameters:
// int                            ChangedNewItemID               (Parm)
// struct FBtrDouble              ChangedNewUniqueID             (Parm)
// int                            ChangedNewSlotPosition         (Parm)
// int                            ChangedOldItemID               (Parm)
// struct FBtrDouble              ChangedOldUniqueID             (Parm)
// int                            ChangedOldSlotPosition         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEquipItem(int ChangedNewItemID, const struct FBtrDouble& ChangedNewUniqueID, int ChangedNewSlotPosition, int ChangedOldItemID, const struct FBtrDouble& ChangedOldUniqueID, int ChangedOldSlotPosition, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEquipItem");

	UBTTcpLink_Channel_rfAckEquipItem_Params params;
	params.ChangedNewItemID = ChangedNewItemID;
	params.ChangedNewUniqueID = ChangedNewUniqueID;
	params.ChangedNewSlotPosition = ChangedNewSlotPosition;
	params.ChangedOldItemID = ChangedOldItemID;
	params.ChangedOldUniqueID = ChangedOldUniqueID;
	params.ChangedOldSlotPosition = ChangedOldSlotPosition;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqEquipItem
// (Defined, Event, Public)
// Parameters:
// int                            ItemID                         (Parm)
// struct FBtrDouble              UniqueID                       (Parm)
// int                            SlotPosition                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqEquipItem(int ItemID, const struct FBtrDouble& UniqueID, int SlotPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqEquipItem");

	UBTTcpLink_Channel_rfReqEquipItem_Params params;
	params.ItemID = ItemID;
	params.UniqueID = UniqueID;
	params.SlotPosition = SlotPosition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckItemListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckItemListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckItemListEnd");

	UBTTcpLink_Channel_rfAckItemListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckItemList
// (Defined, Event, Public)
// Parameters:
// TArray<struct FBtrDouble>      UniqueID                       (Parm, NeedCtorLink)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<int>                    ItemType                       (Parm, NeedCtorLink)
// TArray<int>                    Durability                     (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UntilTime                      (Parm, NeedCtorLink)
// TArray<int>                    SlotPosition                   (Parm, NeedCtorLink)
// TArray<int>                    AddPartsID                     (Parm, NeedCtorLink)
// TArray<int>                    DamageDegree                   (Parm, NeedCtorLink)
// TArray<unsigned char>          ItemState                      (Parm, NeedCtorLink)
// TArray<int>                    StackCount                     (Parm, NeedCtorLink)
// TArray<int>                    PaintID                        (Parm, NeedCtorLink)
// TArray<int>                    TradeCount                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckItemList(TArray<struct FBtrDouble> UniqueID, TArray<int> ItemID, TArray<int> ItemType, TArray<int> Durability, TArray<struct FBtrDouble> UntilTime, TArray<int> SlotPosition, TArray<int> AddPartsID, TArray<int> DamageDegree, TArray<unsigned char> ItemState, TArray<int> StackCount, TArray<int> PaintID, TArray<int> TradeCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckItemList");

	UBTTcpLink_Channel_rfAckItemList_Params params;
	params.UniqueID = UniqueID;
	params.ItemID = ItemID;
	params.ItemType = ItemType;
	params.Durability = Durability;
	params.UntilTime = UntilTime;
	params.SlotPosition = SlotPosition;
	params.AddPartsID = AddPartsID;
	params.DamageDegree = DamageDegree;
	params.ItemState = ItemState;
	params.StackCount = StackCount;
	params.PaintID = PaintID;
	params.TradeCount = TradeCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckItemListStart
// (Defined, Event, Public)
// Parameters:
// int                            Count                          (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckItemListStart(int Count, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckItemListStart");

	UBTTcpLink_Channel_rfAckItemListStart_Params params;
	params.Count = Count;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqItemList
// (Defined, Event, Public)
// Parameters:
// int                            UID                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqItemList(int UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqItemList");

	UBTTcpLink_Channel_rfReqItemList_Params params;
	params.UID = UID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEntrySkillList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<int>                    SkillIDs                       (Parm, NeedCtorLink)
// TArray<int>                    SlotPositions                  (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEntrySkillList(TArray<int> UserIDs, TArray<int> SkillIDs, TArray<int> SlotPositions, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEntrySkillList");

	UBTTcpLink_Channel_rfAckEntrySkillList_Params params;
	params.UserIDs = UserIDs;
	params.SkillIDs = SkillIDs;
	params.SlotPositions = SlotPositions;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqEntrySkillList
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqEntrySkillList(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqEntrySkillList");

	UBTTcpLink_Channel_rfReqEntrySkillList_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEntryItemList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<int>                    ItemIDs                        (Parm, NeedCtorLink)
// TArray<int>                    SlotPositions                  (Parm, NeedCtorLink)
// TArray<int>                    AddPartsID                     (Parm, NeedCtorLink)
// TArray<struct FBtrDouble>      UniqueID                       (Parm, NeedCtorLink)
// TArray<int>                    PaintID                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEntryItemList(TArray<int> UserIDs, TArray<int> ItemIDs, TArray<int> SlotPositions, TArray<int> AddPartsID, TArray<struct FBtrDouble> UniqueID, TArray<int> PaintID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEntryItemList");

	UBTTcpLink_Channel_rfAckEntryItemList_Params params;
	params.UserIDs = UserIDs;
	params.ItemIDs = ItemIDs;
	params.SlotPositions = SlotPositions;
	params.AddPartsID = AddPartsID;
	params.UniqueID = UniqueID;
	params.PaintID = PaintID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqEntryItemList
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqEntryItemList(int UserID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqEntryItemList");

	UBTTcpLink_Channel_rfReqEntryItemList_Params params;
	params.UserID = UserID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangeUserState
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<unsigned char>          Positions                      (Parm, NeedCtorLink)
// TArray<int>                    Numbers                        (Parm, NeedCtorLink)
// TArray<unsigned char>          OldStates                      (Parm, NeedCtorLink)
// TArray<unsigned char>          NewStates                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangeUserState(int Result, const struct FString& ErrMsg, TArray<int> UserIDs, TArray<unsigned char> Positions, TArray<int> Numbers, TArray<unsigned char> OldStates, TArray<unsigned char> NewStates)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangeUserState");

	UBTTcpLink_Channel_rfAckChangeUserState_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserIDs = UserIDs;
	params.Positions = Positions;
	params.Numbers = Numbers;
	params.OldStates = OldStates;
	params.NewStates = NewStates;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChangeUserState
// (Defined, Event, Public)
// Parameters:
// unsigned char                  NewState                       (Parm)
// unsigned char                  CheckPlaying                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChangeUserState(unsigned char NewState, unsigned char CheckPlaying)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChangeUserState");

	UBTTcpLink_Channel_rfReqChangeUserState_Params params;
	params.NewState = NewState;
	params.CheckPlaying = CheckPlaying;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckExteriorRoomState
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckExteriorRoomState()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckExteriorRoomState");

	UBTTcpLink_Channel_rfAckExteriorRoomState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqExteriorRoomState
// (Defined, Event, Public)
// Parameters:
// int                            RoomNumber                     (Parm)
// unsigned char                  RoomState                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqExteriorRoomState(int RoomNumber, unsigned char RoomState)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqExteriorRoomState");

	UBTTcpLink_Channel_rfReqExteriorRoomState_Params params;
	params.RoomNumber = RoomNumber;
	params.RoomState = RoomState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckExteriorRoomUserCount
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckExteriorRoomUserCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckExteriorRoomUserCount");

	UBTTcpLink_Channel_rfAckExteriorRoomUserCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqExteriorRoomUserCount
// (Defined, Event, Public)
// Parameters:
// int                            RoomNumber                     (Parm)
// int                            RoomUserCount                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqExteriorRoomUserCount(int RoomNumber, int RoomUserCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqExteriorRoomUserCount");

	UBTTcpLink_Channel_rfReqExteriorRoomUserCount_Params params;
	params.RoomNumber = RoomNumber;
	params.RoomUserCount = RoomUserCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckExteriorRoomInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckExteriorRoomInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckExteriorRoomInfo");

	UBTTcpLink_Channel_rfAckExteriorRoomInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqExteriorRoomInfo
// (Defined, Event, Public)
// Parameters:
// int                            SP                             (Parm)
// int                            RoomNumber                     (Parm)
// unsigned char                  IsPW                           (Parm)
// struct FString                 RoomName                       (Parm, NeedCtorLink)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// struct FString                 ModeName                       (Parm, NeedCtorLink)
// int                            MapNum                         (Parm)
// int                            ModeNum                        (Parm)
// unsigned char                  IsTeamBalance                  (Parm)
// int                            MaxUserCount                   (Parm)
// int                            RoomUserCount                  (Parm)
// unsigned char                  RoomState                      (Parm)
// unsigned char                  BotDifficult                   (Parm)
// unsigned char                  WeaponLimit                    (Parm)
// unsigned char                  BotModeUserTeamNum             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqExteriorRoomInfo(int SP, int RoomNumber, unsigned char IsPW, const struct FString& RoomName, const struct FString& MapName, const struct FString& ModeName, int MapNum, int ModeNum, unsigned char IsTeamBalance, int MaxUserCount, int RoomUserCount, unsigned char RoomState, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqExteriorRoomInfo");

	UBTTcpLink_Channel_rfReqExteriorRoomInfo_Params params;
	params.SP = SP;
	params.RoomNumber = RoomNumber;
	params.IsPW = IsPW;
	params.RoomName = RoomName;
	params.MapName = MapName;
	params.ModeName = ModeName;
	params.MapNum = MapNum;
	params.ModeNum = ModeNum;
	params.IsTeamBalance = IsTeamBalance;
	params.MaxUserCount = MaxUserCount;
	params.RoomUserCount = RoomUserCount;
	params.RoomState = RoomState;
	params.BotDifficult = BotDifficult;
	params.WeaponLimit = WeaponLimit;
	params.BotModeUserTeamNum = BotModeUserTeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetBootyChoose
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  GiveType                       (Parm)
// struct FBtrDouble              ItemUniqueNumber               (Parm)
// int                            ItemID                         (Parm)
// int                            PartID                         (Parm)
// unsigned char                  ItemType                       (Parm)
// struct FBtrDouble              UntilTime                      (Parm)
// int                            StackCount                     (Parm)
// int                            PaintID                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetBootyChoose(int Result, const struct FString& ErrMsg, unsigned char GiveType, const struct FBtrDouble& ItemUniqueNumber, int ItemID, int PartID, unsigned char ItemType, const struct FBtrDouble& UntilTime, int StackCount, int PaintID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetBootyChoose");

	UBTTcpLink_Channel_rfAckGetBootyChoose_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.GiveType = GiveType;
	params.ItemUniqueNumber = ItemUniqueNumber;
	params.ItemID = ItemID;
	params.PartID = PartID;
	params.ItemType = ItemType;
	params.UntilTime = UntilTime;
	params.StackCount = StackCount;
	params.PaintID = PaintID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGetBooty
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    PrizeWinUserID                 (Parm, NeedCtorLink)
// TArray<int>                    BootyItemID                    (Parm, NeedCtorLink)
// TArray<int>                    BootyPartsID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGetBooty(int Result, const struct FString& ErrMsg, TArray<int> PrizeWinUserID, TArray<int> BootyItemID, TArray<int> BootyPartsID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGetBooty");

	UBTTcpLink_Channel_rfAckGetBooty_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.PrizeWinUserID = PrizeWinUserID;
	params.BootyItemID = BootyItemID;
	params.BootyPartsID = BootyPartsID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGetBooty
// (Defined, Event, Public)
// Parameters:
// int                            RoomNumber                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGetBooty(int RoomNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGetBooty");

	UBTTcpLink_Channel_rfReqGetBooty_Params params;
	params.RoomNumber = RoomNumber;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSetUserBootySeedValue
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSetUserBootySeedValue(int UserID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSetUserBootySeedValue");

	UBTTcpLink_Channel_rfAckSetUserBootySeedValue_Params params;
	params.UserID = UserID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSetUserBootySeedValue
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            SeedValue                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSetUserBootySeedValue(int UserID, int SeedValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSetUserBootySeedValue");

	UBTTcpLink_Channel_rfReqSetUserBootySeedValue_Params params;
	params.UserID = UserID;
	params.SeedValue = SeedValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangeRoomSetting
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FGameRoomInfo           RoomInfo                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangeRoomSetting(int Result, const struct FString& ErrMsg, const struct FGameRoomInfo& RoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangeRoomSetting");

	UBTTcpLink_Channel_rfAckChangeRoomSetting_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.RoomInfo = RoomInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChangeRoomSetting
// (Defined, Event, Public)
// Parameters:
// struct FGameRoomInfo           RoomInfo                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChangeRoomSetting(const struct FGameRoomInfo& RoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChangeRoomSetting");

	UBTTcpLink_Channel_rfReqChangeRoomSetting_Params params;
	params.RoomInfo = RoomInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyLevelUp
// (Defined, Event, Public)
// Parameters:
// int                            LevelUpUserID                  (Parm)
// int                            Level                          (Parm)
// int                            Exp                            (Parm)
// TArray<int>                    ItemID                         (Parm, NeedCtorLink)
// TArray<int>                    PartID                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyLevelUp(int LevelUpUserID, int Level, int Exp, TArray<int> ItemID, TArray<int> PartID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyLevelUp");

	UBTTcpLink_Channel_rfReqNotifyLevelUp_Params params;
	params.LevelUpUserID = LevelUpUserID;
	params.Level = Level;
	params.Exp = Exp;
	params.ItemID = ItemID;
	params.PartID = PartID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckClientUdpInfoList
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// TArray<struct FString>         IP                             (Parm, NeedCtorLink)
// TArray<int>                    Port                           (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckClientUdpInfoList(int Result, const struct FString& ErrMsg, TArray<int> UID, TArray<struct FString> IP, TArray<int> Port)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckClientUdpInfoList");

	UBTTcpLink_Channel_rfAckClientUdpInfoList_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UID = UID;
	params.IP = IP;
	params.Port = Port;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqClientUdpInfoList
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqClientUdpInfoList(int GameNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqClientUdpInfoList");

	UBTTcpLink_Channel_rfReqClientUdpInfoList_Params params;
	params.GameNum = GameNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRegisterOtherUdpInfo
// (Defined, Event, Public)
// Parameters:
// int                            UID                            (Parm)
// struct FString                 IP                             (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// unsigned char                  NatType                        (Parm)
// unsigned char                  Intervention                   (Parm)
// struct FString                 HostInnerIP                    (Parm, NeedCtorLink)
// int                            HostInnerPort                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRegisterOtherUdpInfo(int UID, const struct FString& IP, int Port, unsigned char NatType, unsigned char Intervention, const struct FString& HostInnerIP, int HostInnerPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRegisterOtherUdpInfo");

	UBTTcpLink_Channel_rfAckRegisterOtherUdpInfo_Params params;
	params.UID = UID;
	params.IP = IP;
	params.Port = Port;
	params.NatType = NatType;
	params.Intervention = Intervention;
	params.HostInnerIP = HostInnerIP;
	params.HostInnerPort = HostInnerPort;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRegisterMyUdpInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRegisterMyUdpInfo(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRegisterMyUdpInfo");

	UBTTcpLink_Channel_rfAckRegisterMyUdpInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRegisterMyUdpInfo
// (Defined, Event, Public)
// Parameters:
// unsigned char                  IsHost                         (Parm)
// struct FString                 IP                             (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// unsigned char                  Intervention                   (Parm)
// struct FString                 HostInnerIP                    (Parm, NeedCtorLink)
// int                            HostInnerPort                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRegisterMyUdpInfo(unsigned char IsHost, const struct FString& IP, int Port, unsigned char Intervention, const struct FString& HostInnerIP, int HostInnerPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRegisterMyUdpInfo");

	UBTTcpLink_Channel_rfReqRegisterMyUdpInfo_Params params;
	params.IsHost = IsHost;
	params.IP = IP;
	params.Port = Port;
	params.Intervention = Intervention;
	params.HostInnerIP = HostInnerIP;
	params.HostInnerPort = HostInnerPort;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckNotifyClientJoinTime
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckNotifyClientJoinTime(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckNotifyClientJoinTime");

	UBTTcpLink_Channel_rfAckNotifyClientJoinTime_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqNotifyClientJoinTime
// (Defined, Event, Public)
// Parameters:
// int                            JoinedClientID                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqNotifyClientJoinTime(int JoinedClientID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqNotifyClientJoinTime");

	UBTTcpLink_Channel_rfReqNotifyClientJoinTime_Params params;
	params.JoinedClientID = JoinedClientID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangeNewGuest
// (Defined, Event, Public)
// Parameters:
// struct FString                 HostIP                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangeNewGuest(const struct FString& HostIP)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangeNewGuest");

	UBTTcpLink_Channel_rfAckChangeNewGuest_Params params;
	params.HostIP = HostIP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangeHost
// (Defined, Event, Public)
// Parameters:
// unsigned char                  ClientNum                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangeHost(unsigned char ClientNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangeHost");

	UBTTcpLink_Channel_rfAckChangeHost_Params params;
	params.ClientNum = ClientNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckDisconnectGame
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            DisconnectUserID               (Parm)
// struct FString                 DisconnectUserName             (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckDisconnectGame(int Result, int DisconnectUserID, const struct FString& DisconnectUserName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckDisconnectGame");

	UBTTcpLink_Channel_rfAckDisconnectGame_Params params;
	params.Result = Result;
	params.DisconnectUserID = DisconnectUserID;
	params.DisconnectUserName = DisconnectUserName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqDisconnectGame
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqDisconnectGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqDisconnectGame");

	UBTTcpLink_Channel_rfReqDisconnectGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckConnectGame
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckConnectGame(int UserID, int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckConnectGame");

	UBTTcpLink_Channel_rfAckConnectGame_Params params;
	params.UserID = UserID;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqConnectGame
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqConnectGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqConnectGame");

	UBTTcpLink_Channel_rfReqConnectGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRelayServerOff
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRelayServerOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRelayServerOff");

	UBTTcpLink_Channel_rfReqRelayServerOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRelayServerOn
// (Defined, Event, Public)
// Parameters:
// struct FString                 RelayServerIP                  (Parm, NeedCtorLink)
// int                            RelayServerPortNum             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRelayServerOn(const struct FString& RelayServerIP, int RelayServerPortNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRelayServerOn");

	UBTTcpLink_Channel_rfReqRelayServerOn_Params params;
	params.RelayServerIP = RelayServerIP;
	params.RelayServerPortNum = RelayServerPortNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGameOver
// (Defined, Event, Public)
// Parameters:
// int                            UID                            (Parm)
// int                            GameRoomNumber                 (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGameOver(int UID, int GameRoomNumber, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGameOver");

	UBTTcpLink_Channel_rfAckGameOver_Params params;
	params.UID = UID;
	params.GameRoomNumber = GameRoomNumber;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGameOver
// (Defined, Event, Public)
// Parameters:
// int                            UID                            (Parm)
// int                            GameRoomNumber                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGameOver(int UID, int GameRoomNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGameOver");

	UBTTcpLink_Channel_rfReqGameOver_Params params;
	params.UID = UID;
	params.GameRoomNumber = GameRoomNumber;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckIsGameRoomPlaying
// (Defined, Event, Public)
// Parameters:
// int                            GameRoomNum                    (Parm)
// unsigned char                  IsPlaying                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckIsGameRoomPlaying(int GameRoomNum, unsigned char IsPlaying)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckIsGameRoomPlaying");

	UBTTcpLink_Channel_rfAckIsGameRoomPlaying_Params params;
	params.GameRoomNum = GameRoomNum;
	params.IsPlaying = IsPlaying;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqIsGameRoomPlaying
// (Defined, Event, Public)
// Parameters:
// int                            GameRoomNum                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqIsGameRoomPlaying(int GameRoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqIsGameRoomPlaying");

	UBTTcpLink_Channel_rfReqIsGameRoomPlaying_Params params;
	params.GameRoomNum = GameRoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGameRoomDestroy
// (Defined, Event, Public)
// Parameters:
// int                            GameRoomNum                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGameRoomDestroy(int GameRoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGameRoomDestroy");

	UBTTcpLink_Channel_rfAckGameRoomDestroy_Params params;
	params.GameRoomNum = GameRoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangeRoomMaxNum
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            Number                         (Parm)
// int                            TeamNumber                     (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangeRoomMaxNum(int GameNum, int Number, int TeamNumber, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangeRoomMaxNum");

	UBTTcpLink_Channel_rfAckChangeRoomMaxNum_Params params;
	params.GameNum = GameNum;
	params.Number = Number;
	params.TeamNumber = TeamNumber;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChangeRoomMaxNum
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// int                            Number                         (Parm)
// int                            TeamNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChangeRoomMaxNum(int GameNum, int UID, int Number, int TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChangeRoomMaxNum");

	UBTTcpLink_Channel_rfReqChangeRoomMaxNum_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.Number = Number;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckUpdateScoreResult
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckUpdateScoreResult(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckUpdateScoreResult");

	UBTTcpLink_Channel_rfAckUpdateScoreResult_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckUpdateScore
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<struct FString>         NickNames                      (Parm, NeedCtorLink)
// TArray<unsigned char>          TeamIDs                        (Parm, NeedCtorLink)
// TArray<int>                    Scores                         (Parm, NeedCtorLink)
// TArray<int>                    Kills                          (Parm, NeedCtorLink)
// TArray<int>                    Assists                        (Parm, NeedCtorLink)
// TArray<int>                    Deaths                         (Parm, NeedCtorLink)
// TArray<int>                    EXPs                           (Parm, NeedCtorLink)
// TArray<int>                    EXPBonuses                     (Parm, NeedCtorLink)
// TArray<int>                    Points                         (Parm, NeedCtorLink)
// TArray<int>                    PointBonuses                   (Parm, NeedCtorLink)
// TArray<int>                    TeamScores                     (Parm, NeedCtorLink)
// TArray<int>                    BonusOwnerID                   (Parm, NeedCtorLink)
// TArray<int>                    BonusID                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckUpdateScore(TArray<int> UserIDs, TArray<struct FString> NickNames, TArray<unsigned char> TeamIDs, TArray<int> Scores, TArray<int> Kills, TArray<int> Assists, TArray<int> Deaths, TArray<int> EXPs, TArray<int> EXPBonuses, TArray<int> Points, TArray<int> PointBonuses, TArray<int> TeamScores, TArray<int> BonusOwnerID, TArray<int> BonusID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckUpdateScore");

	UBTTcpLink_Channel_rfAckUpdateScore_Params params;
	params.UserIDs = UserIDs;
	params.NickNames = NickNames;
	params.TeamIDs = TeamIDs;
	params.Scores = Scores;
	params.Kills = Kills;
	params.Assists = Assists;
	params.Deaths = Deaths;
	params.EXPs = EXPs;
	params.EXPBonuses = EXPBonuses;
	params.Points = Points;
	params.PointBonuses = PointBonuses;
	params.TeamScores = TeamScores;
	params.BonusOwnerID = BonusOwnerID;
	params.BonusID = BonusID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqUpdateScore
// (Defined, Event, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// TArray<int>                    UserIDs                        (Parm, NeedCtorLink)
// TArray<int>                    Kills                          (Parm, NeedCtorLink)
// TArray<int>                    Assists                        (Parm, NeedCtorLink)
// TArray<int>                    Deaths                         (Parm, NeedCtorLink)
// TArray<int>                    EXPs                           (Parm, NeedCtorLink)
// TArray<int>                    Points                         (Parm, NeedCtorLink)
// TArray<int>                    Scores                         (Parm, NeedCtorLink)
// TArray<int>                    TeamScores                     (Parm, NeedCtorLink)
// TArray<int>                    RoundJoin                      (Parm, NeedCtorLink)
// TArray<int>                    TimeJoin                       (Parm, NeedCtorLink)
// int                            Playtime                       (Parm)
// unsigned char                  GameEndType                    (Parm)
// TArray<struct FString>         UserNames                      (Parm, NeedCtorLink)
// unsigned char                  IsAIClear                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqUpdateScore(int GameNumber, TArray<int> UserIDs, TArray<int> Kills, TArray<int> Assists, TArray<int> Deaths, TArray<int> EXPs, TArray<int> Points, TArray<int> Scores, TArray<int> TeamScores, TArray<int> RoundJoin, TArray<int> TimeJoin, int Playtime, unsigned char GameEndType, TArray<struct FString> UserNames, unsigned char IsAIClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqUpdateScore");

	UBTTcpLink_Channel_rfReqUpdateScore_Params params;
	params.GameNumber = GameNumber;
	params.UserIDs = UserIDs;
	params.Kills = Kills;
	params.Assists = Assists;
	params.Deaths = Deaths;
	params.EXPs = EXPs;
	params.Points = Points;
	params.Scores = Scores;
	params.TeamScores = TeamScores;
	params.RoundJoin = RoundJoin;
	params.TimeJoin = TimeJoin;
	params.Playtime = Playtime;
	params.GameEndType = GameEndType;
	params.UserNames = UserNames;
	params.IsAIClear = IsAIClear;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckStartGame
// (Defined, Event, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// int                            ClientsCount                   (Parm)
// int                            StartSeed                      (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckStartGame(int GameNumber, int ClientsCount, int StartSeed, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckStartGame");

	UBTTcpLink_Channel_rfAckStartGame_Params params;
	params.GameNumber = GameNumber;
	params.ClientsCount = ClientsCount;
	params.StartSeed = StartSeed;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqStartGame
// (Defined, Event, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqStartGame(int GameNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqStartGame");

	UBTTcpLink_Channel_rfReqStartGame_Params params;
	params.GameNumber = GameNumber;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGameHostInfo
// (Defined, Event, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// struct FString                 IP                             (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGameHostInfo(int GameNumber, const struct FString& UserID, const struct FString& IP, int Port, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGameHostInfo");

	UBTTcpLink_Channel_rfAckGameHostInfo_Params params;
	params.GameNumber = GameNumber;
	params.UserID = UserID;
	params.IP = IP;
	params.Port = Port;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGameHostInfo
// (Defined, Event, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGameHostInfo(int GameNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGameHostInfo");

	UBTTcpLink_Channel_rfReqGameHostInfo_Params params;
	params.GameNumber = GameNumber;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckIsHostAvailable
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckIsHostAvailable(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckIsHostAvailable");

	UBTTcpLink_Channel_rfAckIsHostAvailable_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqIsHostAvailable
// (Defined, Event, Public)
// Parameters:
// struct FString                 MyIp                           (Parm, NeedCtorLink)
// int                            CPUGrade                       (Parm)
// int                            RamGrade                       (Parm)
// int                            VGAGrade                       (Parm)
// int                            VGARam                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqIsHostAvailable(const struct FString& MyIp, int CPUGrade, int RamGrade, int VGAGrade, int VGARam)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqIsHostAvailable");

	UBTTcpLink_Channel_rfReqIsHostAvailable_Params params;
	params.MyIp = MyIp;
	params.CPUGrade = CPUGrade;
	params.RamGrade = RamGrade;
	params.VGAGrade = VGAGrade;
	params.VGARam = VGARam;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangeTeam
// (Defined, Event, Public)
// Parameters:
// int                            GameNumber                     (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            UID                            (Parm)
// int                            TeamNum                        (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangeTeam(int GameNumber, const struct FString& UserID, int UID, int TeamNum, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangeTeam");

	UBTTcpLink_Channel_rfAckChangeTeam_Params params;
	params.GameNumber = GameNumber;
	params.UserID = UserID;
	params.UID = UID;
	params.TeamNum = TeamNum;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChangeTeam
// (Defined, Event, Public)
// Parameters:
// int                            TeamNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChangeTeam(int TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChangeTeam");

	UBTTcpLink_Channel_rfReqChangeTeam_Params params;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangeRoomOwner
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            OldOwner                       (Parm)
// int                            NewOwner                       (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangeRoomOwner(int GameNum, int OldOwner, int NewOwner, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangeRoomOwner");

	UBTTcpLink_Channel_rfAckChangeRoomOwner_Params params;
	params.GameNum = GameNum;
	params.OldOwner = OldOwner;
	params.NewOwner = NewOwner;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChangeRoomOwner
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// int                            NewOwner                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChangeRoomOwner(int GameNum, int UID, int NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChangeRoomOwner");

	UBTTcpLink_Channel_rfReqChangeRoomOwner_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChangeGameMode
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// struct FString                 GameMode                       (Parm, NeedCtorLink)
// unsigned char                  GameModeNum                    (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChangeGameMode(int GameNum, int UID, const struct FString& GameMode, unsigned char GameModeNum, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChangeGameMode");

	UBTTcpLink_Channel_rfAckChangeGameMode_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.GameMode = GameMode;
	params.GameModeNum = GameModeNum;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChangeGameMode
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// struct FString                 GameMode                       (Parm, NeedCtorLink)
// unsigned char                  GameModeNum                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChangeGameMode(int GameNum, int UID, const struct FString& GameMode, unsigned char GameModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChangeGameMode");

	UBTTcpLink_Channel_rfReqChangeGameMode_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.GameMode = GameMode;
	params.GameModeNum = GameModeNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckBanUser
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// int                            BanUID                         (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckBanUser(int GameNum, int UID, int BanUID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckBanUser");

	UBTTcpLink_Channel_rfAckBanUser_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.BanUID = BanUID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqBanUser
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// int                            BanUID                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqBanUser(int GameNum, int UID, int BanUID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqBanUser");

	UBTTcpLink_Channel_rfReqBanUser_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.BanUID = BanUID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckSelectMap
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckSelectMap(int GameNum, int UID, const struct FString& MapName, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckSelectMap");

	UBTTcpLink_Channel_rfAckSelectMap_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.MapName = MapName;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqSelectMap
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// struct FString                 MapName                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqSelectMap(int GameNum, int UID, const struct FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqSelectMap");

	UBTTcpLink_Channel_rfReqSelectMap_Params params;
	params.GameNum = GameNum;
	params.UID = UID;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckGameRoomInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FGameRoomInfo           RoomInfo                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckGameRoomInfo(int Result, const struct FString& ErrMsg, const struct FGameRoomInfo& RoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckGameRoomInfo");

	UBTTcpLink_Channel_rfAckGameRoomInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.RoomInfo = RoomInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqGameRoomInfo
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            UID                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqGameRoomInfo(int GameNum, int UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqGameRoomInfo");

	UBTTcpLink_Channel_rfReqGameRoomInfo_Params params;
	params.GameNum = GameNum;
	params.UID = UID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckCreateGameRoom
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// struct FString                 RoomOwnerIP                    (Parm, NeedCtorLink)
// struct FGameRoomInfo           NetRoomInfo                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckCreateGameRoom(int Result, const struct FString& ErrMsg, int UserID, const struct FString& RoomOwnerIP, const struct FGameRoomInfo& NetRoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckCreateGameRoom");

	UBTTcpLink_Channel_rfAckCreateGameRoom_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.RoomOwnerIP = RoomOwnerIP;
	params.NetRoomInfo = NetRoomInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqCreateGameRoom
// (Defined, Event, Public)
// Parameters:
// struct FGameRoomInfo           NetRoomInfo                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqCreateGameRoom(const struct FGameRoomInfo& NetRoomInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqCreateGameRoom");

	UBTTcpLink_Channel_rfReqCreateGameRoom_Params params;
	params.NetRoomInfo = NetRoomInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckExceedMaxUser
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckExceedMaxUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckExceedMaxUser");

	UBTTcpLink_Channel_rfAckExceedMaxUser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLeaveRoom
// (Defined, Event, Public)
// Parameters:
// int                            Num                            (Parm)
// int                            UID                            (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLeaveRoom(int Num, int UID, const struct FString& UserID, int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLeaveRoom");

	UBTTcpLink_Channel_rfAckLeaveRoom_Params params;
	params.Num = Num;
	params.UID = UID;
	params.UserID = UserID;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLeaveRoom
// (Defined, Event, Public)
// Parameters:
// int                            Num                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLeaveRoom(int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLeaveRoom");

	UBTTcpLink_Channel_rfReqLeaveRoom_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRoomUserList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// TArray<struct FString>         UserName                       (Parm, NeedCtorLink)
// TArray<int>                    Grade                          (Parm, NeedCtorLink)
// TArray<int>                    TeamNum                        (Parm, NeedCtorLink)
// TArray<unsigned char>          Statue                         (Parm, NeedCtorLink)
// TArray<unsigned char>          IsHost                         (Parm, NeedCtorLink)
// TArray<struct FString>         UserIP                         (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    CM_Pattern                     (Parm, NeedCtorLink)
// TArray<int>                    CM_BG                          (Parm, NeedCtorLink)
// TArray<int>                    CM_BL                          (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookingFor                   (Parm, NeedCtorLink)
// TArray<int>                    GMUID                          (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRoomUserList(TArray<int> UID, TArray<struct FString> UserName, TArray<int> Grade, TArray<int> TeamNum, TArray<unsigned char> Statue, TArray<unsigned char> IsHost, TArray<struct FString> UserIP, TArray<struct FString> ClanName, TArray<int> CM_Pattern, TArray<int> CM_BG, TArray<int> CM_BL, TArray<unsigned char> IsLookingFor, TArray<int> GMUID, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRoomUserList");

	UBTTcpLink_Channel_rfAckRoomUserList_Params params;
	params.UID = UID;
	params.UserName = UserName;
	params.Grade = Grade;
	params.TeamNum = TeamNum;
	params.Statue = Statue;
	params.IsHost = IsHost;
	params.UserIP = UserIP;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.IsLookingFor = IsLookingFor;
	params.GMUID = GMUID;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRoomUserList
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRoomUserList(int GameNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRoomUserList");

	UBTTcpLink_Channel_rfReqRoomUserList_Params params;
	params.GameNum = GameNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEnterRoom
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// int                            OwnerID                        (Parm)
// int                            UID                            (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            TeamNum                        (Parm)
// int                            Grade                          (Parm)
// struct FString                 UserIP                         (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            Clan_Mark_Pattern              (Parm)
// int                            Clan_Mark_BG                   (Parm)
// int                            Clan_Mark_BL                   (Parm)
// unsigned char                  IsLookFor                      (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ClanLevel                      (Parm)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEnterRoom(int GameNum, int OwnerID, int UID, const struct FString& UserID, int TeamNum, int Grade, const struct FString& UserIP, const struct FString& ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, const struct FString& ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEnterRoom");

	UBTTcpLink_Channel_rfAckEnterRoom_Params params;
	params.GameNum = GameNum;
	params.OwnerID = OwnerID;
	params.UID = UID;
	params.UserID = UserID;
	params.TeamNum = TeamNum;
	params.Grade = Grade;
	params.UserIP = UserIP;
	params.ClanName = ClanName;
	params.Clan_Mark_Pattern = Clan_Mark_Pattern;
	params.Clan_Mark_BG = Clan_Mark_BG;
	params.Clan_Mark_BL = Clan_Mark_BL;
	params.IsLookFor = IsLookFor;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqEnterRoom
// (Defined, Event, Public)
// Parameters:
// int                            GameNum                        (Parm)
// struct FString                 Password                       (Parm, NeedCtorLink)
// unsigned char                  RoomEnterType                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqEnterRoom(int GameNum, const struct FString& Password, unsigned char RoomEnterType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqEnterRoom");

	UBTTcpLink_Channel_rfReqEnterRoom_Params params;
	params.GameNum = GameNum;
	params.Password = Password;
	params.RoomEnterType = RoomEnterType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRoomListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRoomListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRoomListEnd");

	UBTTcpLink_Channel_rfAckRoomListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRoomList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    GameNum                        (Parm, NeedCtorLink)
// TArray<struct FString>         Title                          (Parm, NeedCtorLink)
// TArray<struct FString>         MapName                        (Parm, NeedCtorLink)
// TArray<int>                    MapNum                         (Parm, NeedCtorLink)
// TArray<unsigned char>          UserCount                      (Parm, NeedCtorLink)
// TArray<unsigned char>          MaxCount                       (Parm, NeedCtorLink)
// TArray<struct FString>         ModeName                       (Parm, NeedCtorLink)
// TArray<int>                    ModeNum                        (Parm, NeedCtorLink)
// TArray<unsigned char>          WeaponLimit                    (Parm, NeedCtorLink)
// TArray<unsigned char>          IsTeamBalance                  (Parm, NeedCtorLink)
// TArray<unsigned char>          Status                         (Parm, NeedCtorLink)
// TArray<struct FString>         RoomOwnerIP                    (Parm, NeedCtorLink)
// TArray<int>                    GameMinute                     (Parm, NeedCtorLink)
// TArray<struct FString>         RoomOwnerName                  (Parm, NeedCtorLink)
// TArray<unsigned char>          IsSpecial                      (Parm, NeedCtorLink)
// TArray<unsigned char>          IsPassword                     (Parm, NeedCtorLink)
// TArray<unsigned char>          BotDifficult                   (Parm, NeedCtorLink)
// TArray<unsigned char>          BotModeUserTeamNum             (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRoomList(TArray<int> GameNum, TArray<struct FString> Title, TArray<struct FString> MapName, TArray<int> MapNum, TArray<unsigned char> UserCount, TArray<unsigned char> MaxCount, TArray<struct FString> ModeName, TArray<int> ModeNum, TArray<unsigned char> WeaponLimit, TArray<unsigned char> IsTeamBalance, TArray<unsigned char> Status, TArray<struct FString> RoomOwnerIP, TArray<int> GameMinute, TArray<struct FString> RoomOwnerName, TArray<unsigned char> IsSpecial, TArray<unsigned char> IsPassword, TArray<unsigned char> BotDifficult, TArray<unsigned char> BotModeUserTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRoomList");

	UBTTcpLink_Channel_rfAckRoomList_Params params;
	params.GameNum = GameNum;
	params.Title = Title;
	params.MapName = MapName;
	params.MapNum = MapNum;
	params.UserCount = UserCount;
	params.MaxCount = MaxCount;
	params.ModeName = ModeName;
	params.ModeNum = ModeNum;
	params.WeaponLimit = WeaponLimit;
	params.IsTeamBalance = IsTeamBalance;
	params.Status = Status;
	params.RoomOwnerIP = RoomOwnerIP;
	params.GameMinute = GameMinute;
	params.RoomOwnerName = RoomOwnerName;
	params.IsSpecial = IsSpecial;
	params.IsPassword = IsPassword;
	params.BotDifficult = BotDifficult;
	params.BotModeUserTeamNum = BotModeUserTeamNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckRoomListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// int                            Count                          (Parm)
// int                            StartIndex                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckRoomListStart(int Result, int TotalCount, int Count, int StartIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckRoomListStart");

	UBTTcpLink_Channel_rfAckRoomListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;
	params.Count = Count;
	params.StartIndex = StartIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqRoomList
// (Defined, Event, Public)
// Parameters:
// int                            id                             (Parm)
// int                            StartIndex                     (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqRoomList(int id, int StartIndex, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqRoomList");

	UBTTcpLink_Channel_rfReqRoomList_Params params;
	params.id = id;
	params.StartIndex = StartIndex;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChannelUserList
// (Defined, Event, Public)
// Parameters:
// int                            TotalCount                     (Parm)
// int                            Count                          (Parm)
// int                            StartIndex                     (Parm)
// TArray<int>                    UID                            (Parm, NeedCtorLink)
// TArray<struct FString>         UserID                         (Parm, NeedCtorLink)
// TArray<int>                    UserLevels                     (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    ClanPattern                    (Parm, NeedCtorLink)
// TArray<int>                    ClanBG                         (Parm, NeedCtorLink)
// TArray<int>                    ClanBL                         (Parm, NeedCtorLink)
// TArray<int>                    ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookForClan                  (Parm, NeedCtorLink)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    TitleMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    Reserved1                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved2                      (Parm, NeedCtorLink)
// TArray<int>                    Reserved3                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChannelUserList(int TotalCount, int Count, int StartIndex, TArray<int> UID, TArray<struct FString> UserID, TArray<int> UserLevels, TArray<struct FString> ClanName, TArray<int> ClanPattern, TArray<int> ClanBG, TArray<int> ClanBL, TArray<int> ClanGrade, TArray<int> ClanWin, TArray<int> ClanLose, TArray<unsigned char> IsLookForClan, int Result, const struct FString& ErrMsg, TArray<int> ClanLevel, TArray<int> LevelMarkID, TArray<int> TitleMarkID, TArray<int> Reserved1, TArray<int> Reserved2, TArray<int> Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChannelUserList");

	UBTTcpLink_Channel_rfAckChannelUserList_Params params;
	params.TotalCount = TotalCount;
	params.Count = Count;
	params.StartIndex = StartIndex;
	params.UID = UID;
	params.UserID = UserID;
	params.UserLevels = UserLevels;
	params.ClanName = ClanName;
	params.ClanPattern = ClanPattern;
	params.ClanBG = ClanBG;
	params.ClanBL = ClanBL;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.IsLookForClan = IsLookForClan;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChannelUserList
// (Defined, Event, Public)
// Parameters:
// int                            id                             (Parm)
// int                            StartIndex                     (Parm)
// int                            Count                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChannelUserList(int id, int StartIndex, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChannelUserList");

	UBTTcpLink_Channel_rfReqChannelUserList_Params params;
	params.id = id;
	params.StartIndex = StartIndex;
	params.Count = Count;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLeaveChannel
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            UID                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLeaveChannel(int Result, const struct FString& UserID, int UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLeaveChannel");

	UBTTcpLink_Channel_rfAckLeaveChannel_Params params;
	params.Result = Result;
	params.UserID = UserID;
	params.UID = UID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLeaveChannel
// (Defined, Event, Public)
// Parameters:
// int                            id                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLeaveChannel(int id)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLeaveChannel");

	UBTTcpLink_Channel_rfReqLeaveChannel_Params params;
	params.id = id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckEnterChannel
// (Defined, Event, Public)
// Parameters:
// int                            id                             (Parm)
// int                            UID                            (Parm)
// struct FString                 UserID                         (Parm, NeedCtorLink)
// int                            Level                          (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            ClanMarkPattern                (Parm)
// int                            ClanMarkBG                     (Parm)
// int                            ClanMarkBL                     (Parm)
// int                            ClanGrade                      (Parm)
// int                            ClanWin                        (Parm)
// int                            ClanLose                       (Parm)
// unsigned char                  IsLookFor                      (Parm)
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            ClanLevel                      (Parm)
// int                            LevelMarkID                    (Parm)
// int                            TitleMarkID                    (Parm)
// int                            Reserved1                      (Parm)
// int                            Reserved2                      (Parm)
// int                            Reserved3                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckEnterChannel(int id, int UID, const struct FString& UserID, int Level, const struct FString& ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, const struct FString& ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckEnterChannel");

	UBTTcpLink_Channel_rfAckEnterChannel_Params params;
	params.id = id;
	params.UID = UID;
	params.UserID = UserID;
	params.Level = Level;
	params.ClanName = ClanName;
	params.ClanMarkPattern = ClanMarkPattern;
	params.ClanMarkBG = ClanMarkBG;
	params.ClanMarkBL = ClanMarkBL;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;
	params.IsLookFor = IsLookFor;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.ClanLevel = ClanLevel;
	params.LevelMarkID = LevelMarkID;
	params.TitleMarkID = TitleMarkID;
	params.Reserved1 = Reserved1;
	params.Reserved2 = Reserved2;
	params.Reserved3 = Reserved3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqEnterChannel
// (Defined, Event, Public)
// Parameters:
// int                            id                             (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqEnterChannel(int id)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqEnterChannel");

	UBTTcpLink_Channel_rfReqEnterChannel_Params params;
	params.id = id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckChannelList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    id                             (Parm, NeedCtorLink)
// TArray<struct FString>         Title                          (Parm, NeedCtorLink)
// TArray<int>                    CurUser                        (Parm, NeedCtorLink)
// TArray<int>                    MaxUser                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckChannelList(TArray<int> id, TArray<struct FString> Title, TArray<int> CurUser, TArray<int> MaxUser)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckChannelList");

	UBTTcpLink_Channel_rfAckChannelList_Params params;
	params.id = id;
	params.Title = Title;
	params.CurUser = CurUser;
	params.MaxUser = MaxUser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqChannelList
// (Defined, Event, Public)
// Parameters:
// int                            bChannelType                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqChannelList(int bChannelType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqChannelList");

	UBTTcpLink_Channel_rfReqChannelList_Params params;
	params.bChannelType = bChannelType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckFriendListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckFriendListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckFriendListEnd");

	UBTTcpLink_Channel_rfAckFriendListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckFriendList
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         FriendName                     (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLogOn                        (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    CM_Pattern                     (Parm, NeedCtorLink)
// TArray<int>                    CM_BG                          (Parm, NeedCtorLink)
// TArray<int>                    CM_BL                          (Parm, NeedCtorLink)
// TArray<int>                    LevelMarkID                    (Parm, NeedCtorLink)
// TArray<int>                    ClanLevel                      (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLookForClan                  (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckFriendList(TArray<struct FString> FriendName, TArray<unsigned char> IsLogOn, TArray<struct FString> ClanName, TArray<int> CM_Pattern, TArray<int> CM_BG, TArray<int> CM_BL, TArray<int> LevelMarkID, TArray<int> ClanLevel, TArray<int> Level, TArray<unsigned char> IsLookForClan)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckFriendList");

	UBTTcpLink_Channel_rfAckFriendList_Params params;
	params.FriendName = FriendName;
	params.IsLogOn = IsLogOn;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.LevelMarkID = LevelMarkID;
	params.ClanLevel = ClanLevel;
	params.Level = Level;
	params.IsLookForClan = IsLookForClan;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckFriendListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckFriendListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckFriendListStart");

	UBTTcpLink_Channel_rfAckFriendListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqFriendList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqFriendList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqFriendList");

	UBTTcpLink_Channel_rfReqFriendList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckCharInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            CM_Pattern                     (Parm)
// int                            CM_BG                          (Parm)
// int                            CM_BL                          (Parm)
// struct FCharInfo               stCharInfo                     (Parm)
// unsigned char                  InClanRank                     (Parm)
// int                            ClanLevel                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckCharInfo(int Result, const struct FString& ErrMsg, int UserID, const struct FString& CharName, const struct FString& ClanName, int CM_Pattern, int CM_BG, int CM_BL, const struct FCharInfo& stCharInfo, unsigned char InClanRank, int ClanLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckCharInfo");

	UBTTcpLink_Channel_rfAckCharInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.CharName = CharName;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.stCharInfo = stCharInfo;
	params.InClanRank = InClanRank;
	params.ClanLevel = ClanLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqCharInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqCharInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqCharInfo");

	UBTTcpLink_Channel_rfReqCharInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLogin2
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FBtrDouble              CurServerTime                  (Parm)
// int                            CharDBID                       (Parm)
// unsigned char                  IsGM                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLogin2(int Result, const struct FString& ErrMsg, int UserID, const struct FString& CharName, const struct FBtrDouble& CurServerTime, int CharDBID, unsigned char IsGM)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLogin2");

	UBTTcpLink_Channel_rfAckLogin2_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.CharName = CharName;
	params.CurServerTime = CurServerTime;
	params.CharDBID = CharDBID;
	params.IsGM = IsGM;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLogin2
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            TimeStamp                      (Parm)
// int                            LoginHash1                     (Parm)
// int                            LoginHash2                     (Parm)
// int                            LoginHash3                     (Parm)
// int                            LoginHash4                     (Parm)
// int                            LoginHash5                     (Parm)
// struct FString                 Guid                           (Parm, NeedCtorLink)
// int                            UserType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLogin2(const struct FString& CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, const struct FString& Guid, int UserType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLogin2");

	UBTTcpLink_Channel_rfReqLogin2_Params params;
	params.CharName = CharName;
	params.TimeStamp = TimeStamp;
	params.LoginHash1 = LoginHash1;
	params.LoginHash2 = LoginHash2;
	params.LoginHash3 = LoginHash3;
	params.LoginHash4 = LoginHash4;
	params.LoginHash5 = LoginHash5;
	params.Guid = Guid;
	params.UserType = UserType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckStartNatDiag
// (Defined, Event, Public)
// Parameters:
// int                            NatType                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckStartNatDiag(int NatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckStartNatDiag");

	UBTTcpLink_Channel_rfAckStartNatDiag_Params params;
	params.NatType = NatType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqStartNatDiag
// (Defined, Event, Public)
// Parameters:
// struct FString                 Server1Addr                    (Parm, NeedCtorLink)
// int                            Server1Port                    (Parm)
// struct FString                 Server2Addr                    (Parm, NeedCtorLink)
// int                            Server2Port                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqStartNatDiag(const struct FString& Server1Addr, int Server1Port, const struct FString& Server2Addr, int Server2Port)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqStartNatDiag");

	UBTTcpLink_Channel_rfReqStartNatDiag_Params params;
	params.Server1Addr = Server1Addr;
	params.Server1Port = Server1Port;
	params.Server2Addr = Server2Addr;
	params.Server2Port = Server2Port;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqForceLogoutByOwner
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqForceLogoutByOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqForceLogoutByOwner");

	UBTTcpLink_Channel_rfReqForceLogoutByOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckLogin
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// int                            UserID                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// struct FCharInfo               btCharInfo                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckLogin(int Result, const struct FString& ErrMsg, int UserID, const struct FString& CharName, const struct FString& ClanName, const struct FCharInfo& btCharInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckLogin");

	UBTTcpLink_Channel_rfAckLogin_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.UserID = UserID;
	params.CharName = CharName;
	params.ClanName = ClanName;
	params.btCharInfo = btCharInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqLogin
// (Defined, Event, Public)
// Parameters:
// struct FString                 id                             (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqLogin(const struct FString& id)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqLogin");

	UBTTcpLink_Channel_rfReqLogin_Params params;
	params.id = id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfAckHash
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfAckHash(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfAckHash");

	UBTTcpLink_Channel_rfAckHash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.rfReqHash
// (Defined, Event, Public)
// Parameters:
// int                            HashField0                     (Parm)
// int                            HashField1                     (Parm)
// int                            HashField2                     (Parm)
// int                            HashField3                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::rfReqHash(int HashField0, int HashField1, int HashField2, int HashField3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.rfReqHash");

	UBTTcpLink_Channel_rfReqHash_Params params;
	params.HashField0 = HashField0;
	params.HashField1 = HashField1;
	params.HashField2 = HashField2;
	params.HashField3 = HashField3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.OnError
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)

void UBTTcpLink_Channel::OnError(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.OnError");

	UBTTcpLink_Channel_OnError_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Channel.OnClose
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)

void UBTTcpLink_Channel::OnClose(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.OnClose");

	UBTTcpLink_Channel_OnClose_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Channel.OnConnect
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)

void UBTTcpLink_Channel::OnConnect(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.OnConnect");

	UBTTcpLink_Channel_OnConnect_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Channel.Close
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::Close()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.Close");

	UBTTcpLink_Channel_Close_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.ConnectDomain
// (Native, Public)
// Parameters:
// struct FString                 domain                         (Parm, NeedCtorLink)
// int                            nPort                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::ConnectDomain(const struct FString& domain, int nPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.ConnectDomain");

	UBTTcpLink_Channel_ConnectDomain_Params params;
	params.domain = domain;
	params.nPort = nPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.Connect
// (Native, Public)
// Parameters:
// struct FString                 sIpaddr                        (Parm, NeedCtorLink)
// int                            nPort                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::Connect(const struct FString& sIpaddr, int nPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.Connect");

	UBTTcpLink_Channel_Connect_Params params;
	params.sIpaddr = sIpaddr;
	params.nPort = nPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Channel.InitNetwork
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Channel::InitNetwork()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Channel.InitNetwork");

	UBTTcpLink_Channel_InitNetwork_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpHandler_DS_Script_Interface.SetGameManager
// (Defined, Event, Public)
// Parameters:
// class UwGameManager*           pgameMgr                       (Parm)

void UBTTcpHandler_DS_Script_Interface::SetGameManager(class UwGameManager* pgameMgr)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpHandler_DS_Script_Interface.SetGameManager");

	UBTTcpHandler_DS_Script_Interface_SetGameManager_Params params;
	params.pgameMgr = pgameMgr;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpHandler_DS_Script_Interface.SetMatchMaker
// (Defined, Event, Public)
// Parameters:
// class UwMatchMaker*            pMM                            (Parm)

void UBTTcpHandler_DS_Script_Interface::SetMatchMaker(class UwMatchMaker* pMM)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpHandler_DS_Script_Interface.SetMatchMaker");

	UBTTcpHandler_DS_Script_Interface_SetMatchMaker_Params params;
	params.pMM = pMM;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTDataTransferClientLink.OnReceivedParamDataComplete
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)

void UBTDataTransferClientLink::OnReceivedParamDataComplete(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTDataTransferClientLink.OnReceivedParamDataComplete");

	UBTDataTransferClientLink_OnReceivedParamDataComplete_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTDataTransferClientLink.Close
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTDataTransferClientLink::Close()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTDataTransferClientLink.Close");

	UBTDataTransferClientLink_Close_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTDataTransferClientLink.RequestData
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTDataTransferClientLink::RequestData()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTDataTransferClientLink.RequestData");

	UBTDataTransferClientLink_RequestData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTDataTransferClientLink.InitNetwork
// (Native, Public)
// Parameters:
// struct FString                 ServerIP                       (Parm, NeedCtorLink)
// int                            serverPort                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTDataTransferClientLink::InitNetwork(const struct FString& ServerIP, int serverPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTDataTransferClientLink.InitNetwork");

	UBTDataTransferClientLink_InitNetwork_Params params;
	params.ServerIP = ServerIP;
	params.serverPort = serverPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckLoginWithIndonesia
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckLoginWithIndonesia(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckLoginWithIndonesia");

	UBTTcpLink_Login_sfAckLoginWithIndonesia_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqLoginWithIndonesia
// (Native, Public)
// Parameters:
// struct FString                 HashValue                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqLoginWithIndonesia(const struct FString& HashValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqLoginWithIndonesia");

	UBTTcpLink_Login_sfReqLoginWithIndonesia_Params params;
	params.HashValue = HashValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckLoginWithGlobal
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckLoginWithGlobal(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckLoginWithGlobal");

	UBTTcpLink_Login_sfAckLoginWithGlobal_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqLoginWithGlobal
// (Native, Public)
// Parameters:
// struct FString                 G_AccountID                    (Parm, NeedCtorLink)
// struct FString                 G_GUID                         (Parm, NeedCtorLink)
// struct FString                 G_AuthKey                      (Parm, NeedCtorLink)
// int                            UserType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqLoginWithGlobal(const struct FString& G_AccountID, const struct FString& G_GUID, const struct FString& G_AuthKey, int UserType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqLoginWithGlobal");

	UBTTcpLink_Login_sfReqLoginWithGlobal_Params params;
	params.G_AccountID = G_AccountID;
	params.G_GUID = G_GUID;
	params.G_AuthKey = G_AuthKey;
	params.UserType = UserType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckLoginWithThailand
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckLoginWithThailand(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckLoginWithThailand");

	UBTTcpLink_Login_sfAckLoginWithThailand_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqLoginWithThailand
// (Native, Public)
// Parameters:
// struct FString                 USN                            (Parm, NeedCtorLink)
// int                            BloodDisplayType               (Parm)
// int                            PCBangType                     (Parm)
// struct FString                 UnixTimeStamp                  (Parm, NeedCtorLink)
// struct FString                 HashValue                      (Parm, NeedCtorLink)
// unsigned char                  Sex                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqLoginWithThailand(const struct FString& USN, int BloodDisplayType, int PCBangType, const struct FString& UnixTimeStamp, const struct FString& HashValue, unsigned char Sex)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqLoginWithThailand");

	UBTTcpLink_Login_sfReqLoginWithThailand_Params params;
	params.USN = USN;
	params.BloodDisplayType = BloodDisplayType;
	params.PCBangType = PCBangType;
	params.UnixTimeStamp = UnixTimeStamp;
	params.HashValue = HashValue;
	params.Sex = Sex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckLogOut
// (Native, Public)
// Parameters:
// unsigned char                  Result                         (Parm)
// unsigned char                  Reason                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckLogOut(unsigned char Result, unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckLogOut");

	UBTTcpLink_Login_sfAckLogOut_Params params;
	params.Result = Result;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqLogOut
// (Native, Public)
// Parameters:
// unsigned char                  Reason                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqLogOut(unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqLogOut");

	UBTTcpLink_Login_sfReqLogOut_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckLoginWithTencentAuth
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  tc_AccountType                 (Parm)
// unsigned char                  tc_IsBlock                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckLoginWithTencentAuth(int Result, unsigned char tc_AccountType, unsigned char tc_IsBlock)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckLoginWithTencentAuth");

	UBTTcpLink_Login_sfAckLoginWithTencentAuth_Params params;
	params.Result = Result;
	params.tc_AccountType = tc_AccountType;
	params.tc_IsBlock = tc_IsBlock;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqLoginWithTencentAuth
// (Native, Public)
// Parameters:
// struct FString                 AccountID                      (Parm, NeedCtorLink)
// TArray<unsigned char>          Signature                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqLoginWithTencentAuth(const struct FString& AccountID, TArray<unsigned char> Signature)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqLoginWithTencentAuth");

	UBTTcpLink_Login_sfReqLoginWithTencentAuth_Params params;
	params.AccountID = AccountID;
	params.Signature = Signature;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckTencent_AASInfo
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// unsigned char                  IsAdult                        (Parm)
// unsigned char                  IsQQAuth                       (Parm)
// int                            AccumTimeSec                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckTencent_AASInfo(int UserID, unsigned char IsAdult, unsigned char IsQQAuth, int AccumTimeSec)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckTencent_AASInfo");

	UBTTcpLink_Login_sfAckTencent_AASInfo_Params params;
	params.UserID = UserID;
	params.IsAdult = IsAdult;
	params.IsQQAuth = IsQQAuth;
	params.AccumTimeSec = AccumTimeSec;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckEventNotify
// (Native, Public)
// Parameters:
// int                            Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckEventNotify(int Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckEventNotify");

	UBTTcpLink_Login_sfAckEventNotify_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqEventNotify
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqEventNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqEventNotify");

	UBTTcpLink_Login_sfReqEventNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckErrorReportServerAddr
// (Native, Public)
// Parameters:
// struct FString                 Addr                           (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckErrorReportServerAddr(const struct FString& Addr, int Port)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckErrorReportServerAddr");

	UBTTcpLink_Login_sfAckErrorReportServerAddr_Params params;
	params.Addr = Addr;
	params.Port = Port;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqErrorReportServerAddr
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqErrorReportServerAddr()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqErrorReportServerAddr");

	UBTTcpLink_Login_sfReqErrorReportServerAddr_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckClientChecksum
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckClientChecksum(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckClientChecksum");

	UBTTcpLink_Login_sfAckClientChecksum_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqClientChecksum
// (Native, Public)
// Parameters:
// struct FString                 Key1                           (Parm, NeedCtorLink)
// struct FBtrDouble              Key2                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqClientChecksum(const struct FString& Key1, const struct FBtrDouble& Key2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqClientChecksum");

	UBTTcpLink_Login_sfReqClientChecksum_Params params;
	params.Key1 = Key1;
	params.Key2 = Key2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckClientChallenge
// (Native, Public)
// Parameters:
// struct FString                 Key1                           (Parm, NeedCtorLink)
// struct FBtrDouble              Key2                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckClientChallenge(const struct FString& Key1, const struct FBtrDouble& Key2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckClientChallenge");

	UBTTcpLink_Login_sfAckClientChallenge_Params params;
	params.Key1 = Key1;
	params.Key2 = Key2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqClientChallenge
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqClientChallenge()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqClientChallenge");

	UBTTcpLink_Login_sfReqClientChallenge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckServerTime
// (Native, Public)
// Parameters:
// int                            Time                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckServerTime(int Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckServerTime");

	UBTTcpLink_Login_sfAckServerTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqServerTime
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqServerTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqServerTime");

	UBTTcpLink_Login_sfReqServerTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckGetCharBlockInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  IsAccountBlock                 (Parm)
// unsigned char                  IsChattingBlock                (Parm)
// struct FBtrDouble              ChattingBlockEndTime           (Parm)
// TArray<struct FString>         BlockedItemName                (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckGetCharBlockInfo(int Result, unsigned char IsAccountBlock, unsigned char IsChattingBlock, const struct FBtrDouble& ChattingBlockEndTime, TArray<struct FString> BlockedItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckGetCharBlockInfo");

	UBTTcpLink_Login_sfAckGetCharBlockInfo_Params params;
	params.Result = Result;
	params.IsAccountBlock = IsAccountBlock;
	params.IsChattingBlock = IsChattingBlock;
	params.ChattingBlockEndTime = ChattingBlockEndTime;
	params.BlockedItemName = BlockedItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqGetCharBlockInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqGetCharBlockInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqGetCharBlockInfo");

	UBTTcpLink_Login_sfReqGetCharBlockInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckRegisterMainPCBang
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckRegisterMainPCBang(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckRegisterMainPCBang");

	UBTTcpLink_Login_sfAckRegisterMainPCBang_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqRegisterMainPCBang
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqRegisterMainPCBang()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqRegisterMainPCBang");

	UBTTcpLink_Login_sfReqRegisterMainPCBang_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckPCBangUserListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckPCBangUserListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckPCBangUserListEnd");

	UBTTcpLink_Login_sfAckPCBangUserListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckPCBangUserList
// (Native, Public)
// Parameters:
// TArray<struct FString>         FriendName                     (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLogOn                        (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    CM_Pattern                     (Parm, NeedCtorLink)
// TArray<int>                    CM_BG                          (Parm, NeedCtorLink)
// TArray<int>                    CM_BL                          (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<int>                    ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckPCBangUserList(TArray<struct FString> FriendName, TArray<unsigned char> IsLogOn, TArray<struct FString> ClanName, TArray<int> CM_Pattern, TArray<int> CM_BG, TArray<int> CM_BL, TArray<int> Level, TArray<int> ClanGrade, TArray<int> ClanWin, TArray<int> ClanLose)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckPCBangUserList");

	UBTTcpLink_Login_sfAckPCBangUserList_Params params;
	params.FriendName = FriendName;
	params.IsLogOn = IsLogOn;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.Level = Level;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckPCBangUserListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckPCBangUserListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckPCBangUserListStart");

	UBTTcpLink_Login_sfAckPCBangUserListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqPCBangUserList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqPCBangUserList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqPCBangUserList");

	UBTTcpLink_Login_sfReqPCBangUserList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckRegisteredPCBangInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsRegisteredPCBang             (Parm)
// unsigned char                  IsMainPCBang                   (Parm)
// struct FString                 PCBangName                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckRegisteredPCBangInfo(int Result, const struct FString& ErrMsg, unsigned char IsRegisteredPCBang, unsigned char IsMainPCBang, const struct FString& PCBangName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckRegisteredPCBangInfo");

	UBTTcpLink_Login_sfAckRegisteredPCBangInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsRegisteredPCBang = IsRegisteredPCBang;
	params.IsMainPCBang = IsMainPCBang;
	params.PCBangName = PCBangName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqRegisteredPCBangInfo
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqRegisteredPCBangInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqRegisteredPCBangInfo");

	UBTTcpLink_Login_sfReqRegisteredPCBangInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckCharInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            Level                          (Parm)
// int                            Exp                            (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckCharInfo(int Result, const struct FString& CharName, int Level, int Exp, const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckCharInfo");

	UBTTcpLink_Login_sfAckCharInfo_Params params;
	params.Result = Result;
	params.CharName = CharName;
	params.Level = Level;
	params.Exp = Exp;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqCharInfo
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqCharInfo(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqCharInfo");

	UBTTcpLink_Login_sfReqCharInfo_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqForceLogoutByOwner
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqForceLogoutByOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqForceLogoutByOwner");

	UBTTcpLink_Login_sfReqForceLogoutByOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqKeepAlive
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqKeepAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqKeepAlive");

	UBTTcpLink_Login_sfReqKeepAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckMaxUserExceed
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckMaxUserExceed()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckMaxUserExceed");

	UBTTcpLink_Login_sfAckMaxUserExceed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckClanMemberListFromClientEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckClanMemberListFromClientEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckClanMemberListFromClientEnd");

	UBTTcpLink_Login_sfAckClanMemberListFromClientEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckClanMemberListFromClient
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<unsigned char>          ClanGrade                      (Parm, NeedCtorLink)
// TArray<struct FString>         ServerName                     (Parm, NeedCtorLink)
// TArray<struct FString>         ServerShortName                (Parm, NeedCtorLink)
// TArray<struct FString>         ServerIP                       (Parm, NeedCtorLink)
// TArray<int>                    serverPort                     (Parm, NeedCtorLink)
// TArray<unsigned char>          CurPos                         (Parm, NeedCtorLink)
// TArray<int>                    ChannelNum                     (Parm, NeedCtorLink)
// TArray<struct FString>         ChannelNickName                (Parm, NeedCtorLink)
// TArray<int>                    GameRoomNum                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckClanMemberListFromClient(int Result, const struct FString& ErrMsg, TArray<int> Level, TArray<struct FString> CharName, TArray<unsigned char> ClanGrade, TArray<struct FString> ServerName, TArray<struct FString> ServerShortName, TArray<struct FString> ServerIP, TArray<int> serverPort, TArray<unsigned char> CurPos, TArray<int> ChannelNum, TArray<struct FString> ChannelNickName, TArray<int> GameRoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckClanMemberListFromClient");

	UBTTcpLink_Login_sfAckClanMemberListFromClient_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Level = Level;
	params.CharName = CharName;
	params.ClanGrade = ClanGrade;
	params.ServerName = ServerName;
	params.ServerShortName = ServerShortName;
	params.ServerIP = ServerIP;
	params.serverPort = serverPort;
	params.CurPos = CurPos;
	params.ChannelNum = ChannelNum;
	params.ChannelNickName = ChannelNickName;
	params.GameRoomNum = GameRoomNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckClanMemberListFromClientStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckClanMemberListFromClientStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckClanMemberListFromClientStart");

	UBTTcpLink_Login_sfAckClanMemberListFromClientStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqClanMemberListFromClient
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqClanMemberListFromClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqClanMemberListFromClient");

	UBTTcpLink_Login_sfReqClanMemberListFromClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckLoginWithWZAuth
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  wzp_AccountType                (Parm)
// unsigned char                  wzp_IsBlock                    (Parm)
// unsigned char                  wzp_AuthKeySuccess             (Parm)
// unsigned char                  ChannelType                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckLoginWithWZAuth(int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckLoginWithWZAuth");

	UBTTcpLink_Login_sfAckLoginWithWZAuth_Params params;
	params.Result = Result;
	params.wzp_AccountType = wzp_AccountType;
	params.wzp_IsBlock = wzp_IsBlock;
	params.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	params.ChannelType = ChannelType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqLoginWithWZAuth
// (Native, Public)
// Parameters:
// struct FString                 AccountID                      (Parm, NeedCtorLink)
// struct FString                 Guid                           (Parm, NeedCtorLink)
// struct FString                 AuthKey                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqLoginWithWZAuth(const struct FString& AccountID, const struct FString& Guid, const struct FString& AuthKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqLoginWithWZAuth");

	UBTTcpLink_Login_sfReqLoginWithWZAuth_Params params;
	params.AccountID = AccountID;
	params.Guid = Guid;
	params.AuthKey = AuthKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckProcessPreLoginUser
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckProcessPreLoginUser(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckProcessPreLoginUser");

	UBTTcpLink_Login_sfAckProcessPreLoginUser_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqProcessPreLoginUser
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqProcessPreLoginUser(const struct FString& CharName, unsigned char Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqProcessPreLoginUser");

	UBTTcpLink_Login_sfReqProcessPreLoginUser_Params params;
	params.CharName = CharName;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckLoginInHouseTest
// (Native, Public)
// Parameters:
// unsigned char                  Sucess                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            TimeStamp                      (Parm)
// int                            LoginHash1                     (Parm)
// int                            LoginHash2                     (Parm)
// int                            LoginHash3                     (Parm)
// int                            LoginHash4                     (Parm)
// int                            LoginHash5                     (Parm)
// unsigned char                  NeedChar                       (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 BDay                           (Parm, NeedCtorLink)
// unsigned char                  Sex                            (Parm)
// struct FBtrDouble              ServerTime                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckLoginInHouseTest(unsigned char Sucess, const struct FString& CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, const struct FString& ErrMsg, const struct FString& BDay, unsigned char Sex, const struct FBtrDouble& ServerTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckLoginInHouseTest");

	UBTTcpLink_Login_sfAckLoginInHouseTest_Params params;
	params.Sucess = Sucess;
	params.CharName = CharName;
	params.TimeStamp = TimeStamp;
	params.LoginHash1 = LoginHash1;
	params.LoginHash2 = LoginHash2;
	params.LoginHash3 = LoginHash3;
	params.LoginHash4 = LoginHash4;
	params.LoginHash5 = LoginHash5;
	params.NeedChar = NeedChar;
	params.ErrMsg = ErrMsg;
	params.BDay = BDay;
	params.Sex = Sex;
	params.ServerTime = ServerTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqLoginInHouseTest
// (Native, Public)
// Parameters:
// struct FString                 UserName                       (Parm, NeedCtorLink)
// struct FString                 Password                       (Parm, NeedCtorLink)
// struct FString                 Guid                           (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqLoginInHouseTest(const struct FString& UserName, const struct FString& Password, const struct FString& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqLoginInHouseTest");

	UBTTcpLink_Login_sfReqLoginInHouseTest_Params params;
	params.UserName = UserName;
	params.Password = Password;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckAdvertisement
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Type                           (Parm)
// struct FString                 Address                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckAdvertisement(int Result, unsigned char Type, const struct FString& Address)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckAdvertisement");

	UBTTcpLink_Login_sfAckAdvertisement_Params params;
	params.Result = Result;
	params.Type = Type;
	params.Address = Address;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqAdvertisement
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqAdvertisement()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqAdvertisement");

	UBTTcpLink_Login_sfReqAdvertisement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckUserDetailInfo
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 UserName                       (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            Ranking                        (Parm)
// int                            MatchNum                       (Parm)
// int                            WinNum                         (Parm)
// int                            LoseNum                        (Parm)
// int                            CurrentEXP                     (Parm)
// int                            NextExp                        (Parm)
// int                            ForcedDisconnectedNum          (Parm)
// int                            PrimaryWeaponID                (Parm)
// int                            SubWeaponID                    (Parm)
// int                            Point                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckUserDetailInfo(int Result, const struct FString& UserName, const struct FString& ClanName, int Ranking, int MatchNum, int WinNum, int LoseNum, int CurrentEXP, int NextExp, int ForcedDisconnectedNum, int PrimaryWeaponID, int SubWeaponID, int Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckUserDetailInfo");

	UBTTcpLink_Login_sfAckUserDetailInfo_Params params;
	params.Result = Result;
	params.UserName = UserName;
	params.ClanName = ClanName;
	params.Ranking = Ranking;
	params.MatchNum = MatchNum;
	params.WinNum = WinNum;
	params.LoseNum = LoseNum;
	params.CurrentEXP = CurrentEXP;
	params.NextExp = NextExp;
	params.ForcedDisconnectedNum = ForcedDisconnectedNum;
	params.PrimaryWeaponID = PrimaryWeaponID;
	params.SubWeaponID = SubWeaponID;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqUserDetailInfo
// (Native, Public)
// Parameters:
// int                            UserID                         (Parm)
// struct FString                 UserName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqUserDetailInfo(int UserID, const struct FString& UserName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqUserDetailInfo");

	UBTTcpLink_Login_sfReqUserDetailInfo_Params params;
	params.UserID = UserID;
	params.UserName = UserName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckFriendsListEnd
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckFriendsListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckFriendsListEnd");

	UBTTcpLink_Login_sfAckFriendsListEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckFriendsList
// (Native, Public)
// Parameters:
// unsigned char                  ListType                       (Parm)
// TArray<struct FString>         UserName                       (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLogOn                        (Parm, NeedCtorLink)
// TArray<int>                    CMarkPattern                   (Parm, NeedCtorLink)
// TArray<int>                    CMarkBG                        (Parm, NeedCtorLink)
// TArray<int>                    CMarkBL                        (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckFriendsList(unsigned char ListType, TArray<struct FString> UserName, TArray<unsigned char> IsLogOn, TArray<int> CMarkPattern, TArray<int> CMarkBG, TArray<int> CMarkBL, TArray<struct FString> ClanName, TArray<int> Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckFriendsList");

	UBTTcpLink_Login_sfAckFriendsList_Params params;
	params.ListType = ListType;
	params.UserName = UserName;
	params.IsLogOn = IsLogOn;
	params.CMarkPattern = CMarkPattern;
	params.CMarkBG = CMarkBG;
	params.CMarkBL = CMarkBL;
	params.ClanName = ClanName;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckFriendsListStart
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckFriendsListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckFriendsListStart");

	UBTTcpLink_Login_sfAckFriendsListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqFriendsList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqFriendsList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqFriendsList");

	UBTTcpLink_Login_sfReqFriendsList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckConnectChannelServer
// (Native, Public)
// Parameters:
// struct FString                 SessionKey                     (Parm, NeedCtorLink)
// int                            TimeStamp                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckConnectChannelServer(const struct FString& SessionKey, int TimeStamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckConnectChannelServer");

	UBTTcpLink_Login_sfAckConnectChannelServer_Params params;
	params.SessionKey = SessionKey;
	params.TimeStamp = TimeStamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqConnectChannelServer
// (Native, Public)
// Parameters:
// struct FString                 ServerIP                       (Parm, NeedCtorLink)
// int                            serverPort                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqConnectChannelServer(const struct FString& ServerIP, int serverPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqConnectChannelServer");

	UBTTcpLink_Login_sfReqConnectChannelServer_Params params;
	params.ServerIP = ServerIP;
	params.serverPort = serverPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckServerList
// (Native, Public)
// Parameters:
// TArray<struct FString>         CServername                    (Parm, NeedCtorLink)
// TArray<struct FString>         CServerShortName               (Parm, NeedCtorLink)
// TArray<struct FString>         ServerIP                       (Parm, NeedCtorLink)
// TArray<int>                    serverPort                     (Parm, NeedCtorLink)
// TArray<struct FString>         ChannelName                    (Parm, NeedCtorLink)
// TArray<struct FString>         ChannelNickName                (Parm, NeedCtorLink)
// TArray<int>                    ChannelNum                     (Parm, NeedCtorLink)
// TArray<int>                    chMaxUser                      (Parm, NeedCtorLink)
// TArray<int>                    chCurUser                      (Parm, NeedCtorLink)
// TArray<struct FString>         ServerGroupName                (Parm, NeedCtorLink)
// TArray<int>                    ServerGroupID                  (Parm, NeedCtorLink)
// TArray<int>                    ServerDispOrder                (Parm, NeedCtorLink)
// TArray<int>                    DataPort                       (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionCount_byte               (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionKey_byte                 (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionValue_byte               (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionCount_int                (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionKey_int                  (Parm, NeedCtorLink)
// TArray<int>                    OptionValue_int                (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionCount_float              (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionKey_float                (Parm, NeedCtorLink)
// TArray<float>                  OptionValue_float              (Parm, NeedCtorLink)
// TArray<unsigned char>          IsClanChannel                  (Parm, NeedCtorLink)
// TArray<unsigned char>          IsUseDedicateHost              (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckServerList(TArray<struct FString> CServername, TArray<struct FString> CServerShortName, TArray<struct FString> ServerIP, TArray<int> serverPort, TArray<struct FString> ChannelName, TArray<struct FString> ChannelNickName, TArray<int> ChannelNum, TArray<int> chMaxUser, TArray<int> chCurUser, TArray<struct FString> ServerGroupName, TArray<int> ServerGroupID, TArray<int> ServerDispOrder, TArray<int> DataPort, TArray<unsigned char> OptionCount_byte, TArray<unsigned char> OptionKey_byte, TArray<unsigned char> OptionValue_byte, TArray<unsigned char> OptionCount_int, TArray<unsigned char> OptionKey_int, TArray<int> OptionValue_int, TArray<unsigned char> OptionCount_float, TArray<unsigned char> OptionKey_float, TArray<float> OptionValue_float, TArray<unsigned char> IsClanChannel, TArray<unsigned char> IsUseDedicateHost)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckServerList");

	UBTTcpLink_Login_sfAckServerList_Params params;
	params.CServername = CServername;
	params.CServerShortName = CServerShortName;
	params.ServerIP = ServerIP;
	params.serverPort = serverPort;
	params.ChannelName = ChannelName;
	params.ChannelNickName = ChannelNickName;
	params.ChannelNum = ChannelNum;
	params.chMaxUser = chMaxUser;
	params.chCurUser = chCurUser;
	params.ServerGroupName = ServerGroupName;
	params.ServerGroupID = ServerGroupID;
	params.ServerDispOrder = ServerDispOrder;
	params.DataPort = DataPort;
	params.OptionCount_byte = OptionCount_byte;
	params.OptionKey_byte = OptionKey_byte;
	params.OptionValue_byte = OptionValue_byte;
	params.OptionCount_int = OptionCount_int;
	params.OptionKey_int = OptionKey_int;
	params.OptionValue_int = OptionValue_int;
	params.OptionCount_float = OptionCount_float;
	params.OptionKey_float = OptionKey_float;
	params.OptionValue_float = OptionValue_float;
	params.IsClanChannel = IsClanChannel;
	params.IsUseDedicateHost = IsUseDedicateHost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqServerList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqServerList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqServerList");

	UBTTcpLink_Login_sfReqServerList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckCreateChar
// (Native, Public)
// Parameters:
// int                            Success                        (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckCreateChar(int Success, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckCreateChar");

	UBTTcpLink_Login_sfAckCreateChar_Params params;
	params.Success = Success;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqCreateChar
// (Native, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            HeadItemID                     (Parm)
// int                            HelmetItemID                   (Parm)
// int                            AccesoItemID                   (Parm)
// int                            BackpackItemID                 (Parm)
// int                            PouchItemID                    (Parm)
// int                            CamouflageItemID               (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqCreateChar(const struct FString& CharName, int HeadItemID, int HelmetItemID, int AccesoItemID, int BackpackItemID, int PouchItemID, int CamouflageItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqCreateChar");

	UBTTcpLink_Login_sfReqCreateChar_Params params;
	params.CharName = CharName;
	params.HeadItemID = HeadItemID;
	params.HelmetItemID = HelmetItemID;
	params.AccesoItemID = AccesoItemID;
	params.BackpackItemID = BackpackItemID;
	params.PouchItemID = PouchItemID;
	params.CamouflageItemID = CamouflageItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckAccesItemTypeList
// (Native, Public)
// Parameters:
// TArray<struct FString>         AccesoItemName                 (Parm, NeedCtorLink)
// TArray<int>                    AccesoItemID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckAccesItemTypeList(TArray<struct FString> AccesoItemName, TArray<int> AccesoItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckAccesItemTypeList");

	UBTTcpLink_Login_sfAckAccesItemTypeList_Params params;
	params.AccesoItemName = AccesoItemName;
	params.AccesoItemID = AccesoItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqAccesItemTypeList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqAccesItemTypeList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqAccesItemTypeList");

	UBTTcpLink_Login_sfReqAccesItemTypeList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckHelmetItemTypeList
// (Native, Public)
// Parameters:
// TArray<struct FString>         HelmetItemName                 (Parm, NeedCtorLink)
// TArray<int>                    HelmetItemID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckHelmetItemTypeList(TArray<struct FString> HelmetItemName, TArray<int> HelmetItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckHelmetItemTypeList");

	UBTTcpLink_Login_sfAckHelmetItemTypeList_Params params;
	params.HelmetItemName = HelmetItemName;
	params.HelmetItemID = HelmetItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqHelmetItemTypeList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqHelmetItemTypeList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqHelmetItemTypeList");

	UBTTcpLink_Login_sfReqHelmetItemTypeList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckHeadItemTypeList
// (Native, Public)
// Parameters:
// TArray<int>                    HeadItemID                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckHeadItemTypeList(TArray<int> HeadItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckHeadItemTypeList");

	UBTTcpLink_Login_sfAckHeadItemTypeList_Params params;
	params.HeadItemID = HeadItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqHeadItemTypeList
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqHeadItemTypeList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqHeadItemTypeList");

	UBTTcpLink_Login_sfReqHeadItemTypeList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckLogin
// (Native, Public)
// Parameters:
// unsigned char                  Sucess                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            TimeStamp                      (Parm)
// int                            LoginHash1                     (Parm)
// int                            LoginHash2                     (Parm)
// int                            LoginHash3                     (Parm)
// int                            LoginHash4                     (Parm)
// int                            LoginHash5                     (Parm)
// unsigned char                  NeedChar                       (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckLogin(unsigned char Sucess, const struct FString& CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckLogin");

	UBTTcpLink_Login_sfAckLogin_Params params;
	params.Sucess = Sucess;
	params.CharName = CharName;
	params.TimeStamp = TimeStamp;
	params.LoginHash1 = LoginHash1;
	params.LoginHash2 = LoginHash2;
	params.LoginHash3 = LoginHash3;
	params.LoginHash4 = LoginHash4;
	params.LoginHash5 = LoginHash5;
	params.NeedChar = NeedChar;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqLogin
// (Native, Public)
// Parameters:
// struct FString                 PortalID                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqLogin(const struct FString& PortalID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqLogin");

	UBTTcpLink_Login_sfReqLogin_Params params;
	params.PortalID = PortalID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckExceedMaxUser
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckExceedMaxUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckExceedMaxUser");

	UBTTcpLink_Login_sfAckExceedMaxUser_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfAckHash
// (Native, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfAckHash(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfAckHash");

	UBTTcpLink_Login_sfAckHash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.sfReqHash
// (Native, Public)
// Parameters:
// int                            HashField0                     (Parm)
// int                            HashField1                     (Parm)
// int                            HashField2                     (Parm)
// int                            HashField3                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::sfReqHash(int HashField0, int HashField1, int HashField2, int HashField3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.sfReqHash");

	UBTTcpLink_Login_sfReqHash_Params params;
	params.HashField0 = HashField0;
	params.HashField1 = HashField1;
	params.HashField2 = HashField2;
	params.HashField3 = HashField3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckLoginWithIndonesia
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckLoginWithIndonesia(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckLoginWithIndonesia");

	UBTTcpLink_Login_rfAckLoginWithIndonesia_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqLoginWithIndonesia
// (Defined, Event, Public)
// Parameters:
// struct FString                 HashValue                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqLoginWithIndonesia(const struct FString& HashValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqLoginWithIndonesia");

	UBTTcpLink_Login_rfReqLoginWithIndonesia_Params params;
	params.HashValue = HashValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckLoginWithGlobal
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckLoginWithGlobal(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckLoginWithGlobal");

	UBTTcpLink_Login_rfAckLoginWithGlobal_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqLoginWithGlobal
// (Defined, Event, Public)
// Parameters:
// struct FString                 G_AccountID                    (Parm, NeedCtorLink)
// struct FString                 G_GUID                         (Parm, NeedCtorLink)
// struct FString                 G_AuthKey                      (Parm, NeedCtorLink)
// int                            UserType                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqLoginWithGlobal(const struct FString& G_AccountID, const struct FString& G_GUID, const struct FString& G_AuthKey, int UserType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqLoginWithGlobal");

	UBTTcpLink_Login_rfReqLoginWithGlobal_Params params;
	params.G_AccountID = G_AccountID;
	params.G_GUID = G_GUID;
	params.G_AuthKey = G_AuthKey;
	params.UserType = UserType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckLoginWithThailand
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckLoginWithThailand(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckLoginWithThailand");

	UBTTcpLink_Login_rfAckLoginWithThailand_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqLoginWithThailand
// (Defined, Event, Public)
// Parameters:
// struct FString                 USN                            (Parm, NeedCtorLink)
// int                            BloodDisplayType               (Parm)
// int                            PCBangType                     (Parm)
// struct FString                 UnixTimeStamp                  (Parm, NeedCtorLink)
// struct FString                 HashValue                      (Parm, NeedCtorLink)
// unsigned char                  Sex                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqLoginWithThailand(const struct FString& USN, int BloodDisplayType, int PCBangType, const struct FString& UnixTimeStamp, const struct FString& HashValue, unsigned char Sex)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqLoginWithThailand");

	UBTTcpLink_Login_rfReqLoginWithThailand_Params params;
	params.USN = USN;
	params.BloodDisplayType = BloodDisplayType;
	params.PCBangType = PCBangType;
	params.UnixTimeStamp = UnixTimeStamp;
	params.HashValue = HashValue;
	params.Sex = Sex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckLogOut
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Result                         (Parm)
// unsigned char                  Reason                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckLogOut(unsigned char Result, unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckLogOut");

	UBTTcpLink_Login_rfAckLogOut_Params params;
	params.Result = Result;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqLogOut
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Reason                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqLogOut(unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqLogOut");

	UBTTcpLink_Login_rfReqLogOut_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckLoginWithTencentAuth
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  tc_AccountType                 (Parm)
// unsigned char                  tc_IsBlock                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckLoginWithTencentAuth(int Result, unsigned char tc_AccountType, unsigned char tc_IsBlock)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckLoginWithTencentAuth");

	UBTTcpLink_Login_rfAckLoginWithTencentAuth_Params params;
	params.Result = Result;
	params.tc_AccountType = tc_AccountType;
	params.tc_IsBlock = tc_IsBlock;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqLoginWithTencentAuth
// (Defined, Event, Public)
// Parameters:
// struct FString                 AccountID                      (Parm, NeedCtorLink)
// TArray<unsigned char>          Signature                      (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqLoginWithTencentAuth(const struct FString& AccountID, TArray<unsigned char> Signature)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqLoginWithTencentAuth");

	UBTTcpLink_Login_rfReqLoginWithTencentAuth_Params params;
	params.AccountID = AccountID;
	params.Signature = Signature;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckTencent_AASInfo
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// unsigned char                  IsAdult                        (Parm)
// unsigned char                  IsQQAuth                       (Parm)
// int                            AccumTimeSec                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckTencent_AASInfo(int UserID, unsigned char IsAdult, unsigned char IsQQAuth, int AccumTimeSec)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckTencent_AASInfo");

	UBTTcpLink_Login_rfAckTencent_AASInfo_Params params;
	params.UserID = UserID;
	params.IsAdult = IsAdult;
	params.IsQQAuth = IsQQAuth;
	params.AccumTimeSec = AccumTimeSec;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckEventNotify
// (Defined, Event, Public)
// Parameters:
// int                            Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckEventNotify(int Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckEventNotify");

	UBTTcpLink_Login_rfAckEventNotify_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqEventNotify
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqEventNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqEventNotify");

	UBTTcpLink_Login_rfReqEventNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckErrorReportServerAddr
// (Defined, Event, Public)
// Parameters:
// struct FString                 Addr                           (Parm, NeedCtorLink)
// int                            Port                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckErrorReportServerAddr(const struct FString& Addr, int Port)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckErrorReportServerAddr");

	UBTTcpLink_Login_rfAckErrorReportServerAddr_Params params;
	params.Addr = Addr;
	params.Port = Port;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqErrorReportServerAddr
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqErrorReportServerAddr()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqErrorReportServerAddr");

	UBTTcpLink_Login_rfReqErrorReportServerAddr_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckClientChecksum
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckClientChecksum(int Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckClientChecksum");

	UBTTcpLink_Login_rfAckClientChecksum_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqClientChecksum
// (Defined, Event, Public)
// Parameters:
// struct FString                 Key1                           (Parm, NeedCtorLink)
// struct FBtrDouble              Key2                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqClientChecksum(const struct FString& Key1, const struct FBtrDouble& Key2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqClientChecksum");

	UBTTcpLink_Login_rfReqClientChecksum_Params params;
	params.Key1 = Key1;
	params.Key2 = Key2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckClientChallenge
// (Defined, Event, Public)
// Parameters:
// struct FString                 Key1                           (Parm, NeedCtorLink)
// struct FBtrDouble              Key2                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckClientChallenge(const struct FString& Key1, const struct FBtrDouble& Key2)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckClientChallenge");

	UBTTcpLink_Login_rfAckClientChallenge_Params params;
	params.Key1 = Key1;
	params.Key2 = Key2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqClientChallenge
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqClientChallenge()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqClientChallenge");

	UBTTcpLink_Login_rfReqClientChallenge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckServerTime
// (Defined, Event, Public)
// Parameters:
// int                            Time                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckServerTime(int Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckServerTime");

	UBTTcpLink_Login_rfAckServerTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqServerTime
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqServerTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqServerTime");

	UBTTcpLink_Login_rfReqServerTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckGetCharBlockInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  IsAccountBlock                 (Parm)
// unsigned char                  IsChattingBlock                (Parm)
// struct FBtrDouble              ChattingBlockEndTime           (Parm)
// TArray<struct FString>         BlockedItemName                (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckGetCharBlockInfo(int Result, unsigned char IsAccountBlock, unsigned char IsChattingBlock, const struct FBtrDouble& ChattingBlockEndTime, TArray<struct FString> BlockedItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckGetCharBlockInfo");

	UBTTcpLink_Login_rfAckGetCharBlockInfo_Params params;
	params.Result = Result;
	params.IsAccountBlock = IsAccountBlock;
	params.IsChattingBlock = IsChattingBlock;
	params.ChattingBlockEndTime = ChattingBlockEndTime;
	params.BlockedItemName = BlockedItemName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqGetCharBlockInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqGetCharBlockInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqGetCharBlockInfo");

	UBTTcpLink_Login_rfReqGetCharBlockInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckRegisterMainPCBang
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckRegisterMainPCBang(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckRegisterMainPCBang");

	UBTTcpLink_Login_rfAckRegisterMainPCBang_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqRegisterMainPCBang
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqRegisterMainPCBang()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqRegisterMainPCBang");

	UBTTcpLink_Login_rfReqRegisterMainPCBang_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckPCBangUserListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckPCBangUserListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckPCBangUserListEnd");

	UBTTcpLink_Login_rfAckPCBangUserListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckPCBangUserList
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         FriendName                     (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLogOn                        (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    CM_Pattern                     (Parm, NeedCtorLink)
// TArray<int>                    CM_BG                          (Parm, NeedCtorLink)
// TArray<int>                    CM_BL                          (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<int>                    ClanGrade                      (Parm, NeedCtorLink)
// TArray<int>                    ClanWin                        (Parm, NeedCtorLink)
// TArray<int>                    ClanLose                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckPCBangUserList(TArray<struct FString> FriendName, TArray<unsigned char> IsLogOn, TArray<struct FString> ClanName, TArray<int> CM_Pattern, TArray<int> CM_BG, TArray<int> CM_BL, TArray<int> Level, TArray<int> ClanGrade, TArray<int> ClanWin, TArray<int> ClanLose)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckPCBangUserList");

	UBTTcpLink_Login_rfAckPCBangUserList_Params params;
	params.FriendName = FriendName;
	params.IsLogOn = IsLogOn;
	params.ClanName = ClanName;
	params.CM_Pattern = CM_Pattern;
	params.CM_BG = CM_BG;
	params.CM_BL = CM_BL;
	params.Level = Level;
	params.ClanGrade = ClanGrade;
	params.ClanWin = ClanWin;
	params.ClanLose = ClanLose;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckPCBangUserListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckPCBangUserListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckPCBangUserListStart");

	UBTTcpLink_Login_rfAckPCBangUserListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqPCBangUserList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqPCBangUserList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqPCBangUserList");

	UBTTcpLink_Login_rfReqPCBangUserList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckRegisteredPCBangInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// unsigned char                  IsRegisteredPCBang             (Parm)
// unsigned char                  IsMainPCBang                   (Parm)
// struct FString                 PCBangName                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckRegisteredPCBangInfo(int Result, const struct FString& ErrMsg, unsigned char IsRegisteredPCBang, unsigned char IsMainPCBang, const struct FString& PCBangName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckRegisteredPCBangInfo");

	UBTTcpLink_Login_rfAckRegisteredPCBangInfo_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.IsRegisteredPCBang = IsRegisteredPCBang;
	params.IsMainPCBang = IsMainPCBang;
	params.PCBangName = PCBangName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqRegisteredPCBangInfo
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqRegisteredPCBangInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqRegisteredPCBangInfo");

	UBTTcpLink_Login_rfReqRegisteredPCBangInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckCharInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            Level                          (Parm)
// int                            Exp                            (Parm)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckCharInfo(int Result, const struct FString& CharName, int Level, int Exp, const struct FString& ClanName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckCharInfo");

	UBTTcpLink_Login_rfAckCharInfo_Params params;
	params.Result = Result;
	params.CharName = CharName;
	params.Level = Level;
	params.Exp = Exp;
	params.ClanName = ClanName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqCharInfo
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqCharInfo(const struct FString& CharName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqCharInfo");

	UBTTcpLink_Login_rfReqCharInfo_Params params;
	params.CharName = CharName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqForceLogoutByOwner
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqForceLogoutByOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqForceLogoutByOwner");

	UBTTcpLink_Login_rfReqForceLogoutByOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqKeepAlive
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqKeepAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqKeepAlive");

	UBTTcpLink_Login_rfReqKeepAlive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckMaxUserExceed
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckMaxUserExceed()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckMaxUserExceed");

	UBTTcpLink_Login_rfAckMaxUserExceed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckClanMemberListFromClientEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckClanMemberListFromClientEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckClanMemberListFromClientEnd");

	UBTTcpLink_Login_rfAckClanMemberListFromClientEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckClanMemberListFromClient
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// TArray<struct FString>         CharName                       (Parm, NeedCtorLink)
// TArray<unsigned char>          ClanGrade                      (Parm, NeedCtorLink)
// TArray<struct FString>         ServerName                     (Parm, NeedCtorLink)
// TArray<struct FString>         ServerShortName                (Parm, NeedCtorLink)
// TArray<struct FString>         ServerIP                       (Parm, NeedCtorLink)
// TArray<int>                    serverPort                     (Parm, NeedCtorLink)
// TArray<unsigned char>          CurPos                         (Parm, NeedCtorLink)
// TArray<int>                    ChannelNum                     (Parm, NeedCtorLink)
// TArray<struct FString>         ChannelNickName                (Parm, NeedCtorLink)
// TArray<int>                    GameRoomNum                    (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckClanMemberListFromClient(int Result, const struct FString& ErrMsg, TArray<int> Level, TArray<struct FString> CharName, TArray<unsigned char> ClanGrade, TArray<struct FString> ServerName, TArray<struct FString> ServerShortName, TArray<struct FString> ServerIP, TArray<int> serverPort, TArray<unsigned char> CurPos, TArray<int> ChannelNum, TArray<struct FString> ChannelNickName, TArray<int> GameRoomNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckClanMemberListFromClient");

	UBTTcpLink_Login_rfAckClanMemberListFromClient_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;
	params.Level = Level;
	params.CharName = CharName;
	params.ClanGrade = ClanGrade;
	params.ServerName = ServerName;
	params.ServerShortName = ServerShortName;
	params.ServerIP = ServerIP;
	params.serverPort = serverPort;
	params.CurPos = CurPos;
	params.ChannelNum = ChannelNum;
	params.ChannelNickName = ChannelNickName;
	params.GameRoomNum = GameRoomNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckClanMemberListFromClientStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckClanMemberListFromClientStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckClanMemberListFromClientStart");

	UBTTcpLink_Login_rfAckClanMemberListFromClientStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqClanMemberListFromClient
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqClanMemberListFromClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqClanMemberListFromClient");

	UBTTcpLink_Login_rfReqClanMemberListFromClient_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckLoginWithWZAuth
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  wzp_AccountType                (Parm)
// unsigned char                  wzp_IsBlock                    (Parm)
// unsigned char                  wzp_AuthKeySuccess             (Parm)
// unsigned char                  ChannelType                    (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckLoginWithWZAuth(int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckLoginWithWZAuth");

	UBTTcpLink_Login_rfAckLoginWithWZAuth_Params params;
	params.Result = Result;
	params.wzp_AccountType = wzp_AccountType;
	params.wzp_IsBlock = wzp_IsBlock;
	params.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	params.ChannelType = ChannelType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqLoginWithWZAuth
// (Defined, Event, Public)
// Parameters:
// struct FString                 AccountID                      (Parm, NeedCtorLink)
// struct FString                 Guid                           (Parm, NeedCtorLink)
// struct FString                 AuthKey                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqLoginWithWZAuth(const struct FString& AccountID, const struct FString& Guid, const struct FString& AuthKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqLoginWithWZAuth");

	UBTTcpLink_Login_rfReqLoginWithWZAuth_Params params;
	params.AccountID = AccountID;
	params.Guid = Guid;
	params.AuthKey = AuthKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckProcessPreLoginUser
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckProcessPreLoginUser(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckProcessPreLoginUser");

	UBTTcpLink_Login_rfAckProcessPreLoginUser_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqProcessPreLoginUser
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// unsigned char                  Type                           (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqProcessPreLoginUser(const struct FString& CharName, unsigned char Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqProcessPreLoginUser");

	UBTTcpLink_Login_rfReqProcessPreLoginUser_Params params;
	params.CharName = CharName;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckLoginInHouseTest
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Sucess                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            TimeStamp                      (Parm)
// int                            LoginHash1                     (Parm)
// int                            LoginHash2                     (Parm)
// int                            LoginHash3                     (Parm)
// int                            LoginHash4                     (Parm)
// int                            LoginHash5                     (Parm)
// unsigned char                  NeedChar                       (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// struct FString                 BDay                           (Parm, NeedCtorLink)
// unsigned char                  Sex                            (Parm)
// struct FBtrDouble              ServerTime                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckLoginInHouseTest(unsigned char Sucess, const struct FString& CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, const struct FString& ErrMsg, const struct FString& BDay, unsigned char Sex, const struct FBtrDouble& ServerTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckLoginInHouseTest");

	UBTTcpLink_Login_rfAckLoginInHouseTest_Params params;
	params.Sucess = Sucess;
	params.CharName = CharName;
	params.TimeStamp = TimeStamp;
	params.LoginHash1 = LoginHash1;
	params.LoginHash2 = LoginHash2;
	params.LoginHash3 = LoginHash3;
	params.LoginHash4 = LoginHash4;
	params.LoginHash5 = LoginHash5;
	params.NeedChar = NeedChar;
	params.ErrMsg = ErrMsg;
	params.BDay = BDay;
	params.Sex = Sex;
	params.ServerTime = ServerTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqLoginInHouseTest
// (Defined, Event, Public)
// Parameters:
// struct FString                 UserName                       (Parm, NeedCtorLink)
// struct FString                 Password                       (Parm, NeedCtorLink)
// struct FString                 Guid                           (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqLoginInHouseTest(const struct FString& UserName, const struct FString& Password, const struct FString& Guid)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqLoginInHouseTest");

	UBTTcpLink_Login_rfReqLoginInHouseTest_Params params;
	params.UserName = UserName;
	params.Password = Password;
	params.Guid = Guid;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckAdvertisement
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// unsigned char                  Type                           (Parm)
// struct FString                 Address                        (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckAdvertisement(int Result, unsigned char Type, const struct FString& Address)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckAdvertisement");

	UBTTcpLink_Login_rfAckAdvertisement_Params params;
	params.Result = Result;
	params.Type = Type;
	params.Address = Address;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqAdvertisement
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqAdvertisement()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqAdvertisement");

	UBTTcpLink_Login_rfReqAdvertisement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckUserDetailInfo
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 UserName                       (Parm, NeedCtorLink)
// struct FString                 ClanName                       (Parm, NeedCtorLink)
// int                            Ranking                        (Parm)
// int                            MatchNum                       (Parm)
// int                            WinNum                         (Parm)
// int                            LoseNum                        (Parm)
// int                            CurrentEXP                     (Parm)
// int                            NextExp                        (Parm)
// int                            ForcedDisconnectedNum          (Parm)
// int                            PrimaryWeaponID                (Parm)
// int                            SubWeaponID                    (Parm)
// int                            Point                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckUserDetailInfo(int Result, const struct FString& UserName, const struct FString& ClanName, int Ranking, int MatchNum, int WinNum, int LoseNum, int CurrentEXP, int NextExp, int ForcedDisconnectedNum, int PrimaryWeaponID, int SubWeaponID, int Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckUserDetailInfo");

	UBTTcpLink_Login_rfAckUserDetailInfo_Params params;
	params.Result = Result;
	params.UserName = UserName;
	params.ClanName = ClanName;
	params.Ranking = Ranking;
	params.MatchNum = MatchNum;
	params.WinNum = WinNum;
	params.LoseNum = LoseNum;
	params.CurrentEXP = CurrentEXP;
	params.NextExp = NextExp;
	params.ForcedDisconnectedNum = ForcedDisconnectedNum;
	params.PrimaryWeaponID = PrimaryWeaponID;
	params.SubWeaponID = SubWeaponID;
	params.Point = Point;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqUserDetailInfo
// (Defined, Event, Public)
// Parameters:
// int                            UserID                         (Parm)
// struct FString                 UserName                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqUserDetailInfo(int UserID, const struct FString& UserName)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqUserDetailInfo");

	UBTTcpLink_Login_rfReqUserDetailInfo_Params params;
	params.UserID = UserID;
	params.UserName = UserName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckFriendsListEnd
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckFriendsListEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckFriendsListEnd");

	UBTTcpLink_Login_rfAckFriendsListEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckFriendsList
// (Defined, Event, Public)
// Parameters:
// unsigned char                  ListType                       (Parm)
// TArray<struct FString>         UserName                       (Parm, NeedCtorLink)
// TArray<unsigned char>          IsLogOn                        (Parm, NeedCtorLink)
// TArray<int>                    CMarkPattern                   (Parm, NeedCtorLink)
// TArray<int>                    CMarkBG                        (Parm, NeedCtorLink)
// TArray<int>                    CMarkBL                        (Parm, NeedCtorLink)
// TArray<struct FString>         ClanName                       (Parm, NeedCtorLink)
// TArray<int>                    Level                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckFriendsList(unsigned char ListType, TArray<struct FString> UserName, TArray<unsigned char> IsLogOn, TArray<int> CMarkPattern, TArray<int> CMarkBG, TArray<int> CMarkBL, TArray<struct FString> ClanName, TArray<int> Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckFriendsList");

	UBTTcpLink_Login_rfAckFriendsList_Params params;
	params.ListType = ListType;
	params.UserName = UserName;
	params.IsLogOn = IsLogOn;
	params.CMarkPattern = CMarkPattern;
	params.CMarkBG = CMarkBG;
	params.CMarkBL = CMarkBL;
	params.ClanName = ClanName;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckFriendsListStart
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// int                            TotalCount                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckFriendsListStart(int Result, int TotalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckFriendsListStart");

	UBTTcpLink_Login_rfAckFriendsListStart_Params params;
	params.Result = Result;
	params.TotalCount = TotalCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqFriendsList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqFriendsList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqFriendsList");

	UBTTcpLink_Login_rfReqFriendsList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckConnectChannelServer
// (Defined, Event, Public)
// Parameters:
// struct FString                 SessionKey                     (Parm, NeedCtorLink)
// int                            TimeStamp                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckConnectChannelServer(const struct FString& SessionKey, int TimeStamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckConnectChannelServer");

	UBTTcpLink_Login_rfAckConnectChannelServer_Params params;
	params.SessionKey = SessionKey;
	params.TimeStamp = TimeStamp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqConnectChannelServer
// (Defined, Event, Public)
// Parameters:
// struct FString                 ServerIP                       (Parm, NeedCtorLink)
// int                            serverPort                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqConnectChannelServer(const struct FString& ServerIP, int serverPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqConnectChannelServer");

	UBTTcpLink_Login_rfReqConnectChannelServer_Params params;
	params.ServerIP = ServerIP;
	params.serverPort = serverPort;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckServerList
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         CServername                    (Parm, NeedCtorLink)
// TArray<struct FString>         CServerShortName               (Parm, NeedCtorLink)
// TArray<struct FString>         ServerIP                       (Parm, NeedCtorLink)
// TArray<int>                    serverPort                     (Parm, NeedCtorLink)
// TArray<struct FString>         ChannelName                    (Parm, NeedCtorLink)
// TArray<struct FString>         ChannelNickName                (Parm, NeedCtorLink)
// TArray<int>                    ChannelNum                     (Parm, NeedCtorLink)
// TArray<int>                    chMaxUser                      (Parm, NeedCtorLink)
// TArray<int>                    chCurUser                      (Parm, NeedCtorLink)
// TArray<struct FString>         ServerGroupName                (Parm, NeedCtorLink)
// TArray<int>                    ServerGroupID                  (Parm, NeedCtorLink)
// TArray<int>                    ServerDispOrder                (Parm, NeedCtorLink)
// TArray<int>                    DataPort                       (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionCount_byte               (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionKey_byte                 (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionValue_byte               (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionCount_int                (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionKey_int                  (Parm, NeedCtorLink)
// TArray<int>                    OptionValue_int                (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionCount_float              (Parm, NeedCtorLink)
// TArray<unsigned char>          OptionKey_float                (Parm, NeedCtorLink)
// TArray<float>                  OptionValue_float              (Parm, NeedCtorLink)
// TArray<unsigned char>          IsClanChannel                  (Parm, NeedCtorLink)
// TArray<unsigned char>          IsUseDedicateHost              (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckServerList(TArray<struct FString> CServername, TArray<struct FString> CServerShortName, TArray<struct FString> ServerIP, TArray<int> serverPort, TArray<struct FString> ChannelName, TArray<struct FString> ChannelNickName, TArray<int> ChannelNum, TArray<int> chMaxUser, TArray<int> chCurUser, TArray<struct FString> ServerGroupName, TArray<int> ServerGroupID, TArray<int> ServerDispOrder, TArray<int> DataPort, TArray<unsigned char> OptionCount_byte, TArray<unsigned char> OptionKey_byte, TArray<unsigned char> OptionValue_byte, TArray<unsigned char> OptionCount_int, TArray<unsigned char> OptionKey_int, TArray<int> OptionValue_int, TArray<unsigned char> OptionCount_float, TArray<unsigned char> OptionKey_float, TArray<float> OptionValue_float, TArray<unsigned char> IsClanChannel, TArray<unsigned char> IsUseDedicateHost)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckServerList");

	UBTTcpLink_Login_rfAckServerList_Params params;
	params.CServername = CServername;
	params.CServerShortName = CServerShortName;
	params.ServerIP = ServerIP;
	params.serverPort = serverPort;
	params.ChannelName = ChannelName;
	params.ChannelNickName = ChannelNickName;
	params.ChannelNum = ChannelNum;
	params.chMaxUser = chMaxUser;
	params.chCurUser = chCurUser;
	params.ServerGroupName = ServerGroupName;
	params.ServerGroupID = ServerGroupID;
	params.ServerDispOrder = ServerDispOrder;
	params.DataPort = DataPort;
	params.OptionCount_byte = OptionCount_byte;
	params.OptionKey_byte = OptionKey_byte;
	params.OptionValue_byte = OptionValue_byte;
	params.OptionCount_int = OptionCount_int;
	params.OptionKey_int = OptionKey_int;
	params.OptionValue_int = OptionValue_int;
	params.OptionCount_float = OptionCount_float;
	params.OptionKey_float = OptionKey_float;
	params.OptionValue_float = OptionValue_float;
	params.IsClanChannel = IsClanChannel;
	params.IsUseDedicateHost = IsUseDedicateHost;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqServerList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqServerList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqServerList");

	UBTTcpLink_Login_rfReqServerList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckCreateChar
// (Defined, Event, Public)
// Parameters:
// int                            Success                        (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckCreateChar(int Success, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckCreateChar");

	UBTTcpLink_Login_rfAckCreateChar_Params params;
	params.Success = Success;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqCreateChar
// (Defined, Event, Public)
// Parameters:
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            HeadItemID                     (Parm)
// int                            HelmetItemID                   (Parm)
// int                            AccesoItemID                   (Parm)
// int                            BackpackItemID                 (Parm)
// int                            PouchItemID                    (Parm)
// int                            CamouflageItemID               (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqCreateChar(const struct FString& CharName, int HeadItemID, int HelmetItemID, int AccesoItemID, int BackpackItemID, int PouchItemID, int CamouflageItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqCreateChar");

	UBTTcpLink_Login_rfReqCreateChar_Params params;
	params.CharName = CharName;
	params.HeadItemID = HeadItemID;
	params.HelmetItemID = HelmetItemID;
	params.AccesoItemID = AccesoItemID;
	params.BackpackItemID = BackpackItemID;
	params.PouchItemID = PouchItemID;
	params.CamouflageItemID = CamouflageItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckAccesItemTypeList
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         AccesoItemName                 (Parm, NeedCtorLink)
// TArray<int>                    AccesoItemID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckAccesItemTypeList(TArray<struct FString> AccesoItemName, TArray<int> AccesoItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckAccesItemTypeList");

	UBTTcpLink_Login_rfAckAccesItemTypeList_Params params;
	params.AccesoItemName = AccesoItemName;
	params.AccesoItemID = AccesoItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqAccesItemTypeList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqAccesItemTypeList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqAccesItemTypeList");

	UBTTcpLink_Login_rfReqAccesItemTypeList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckHelmetItemTypeList
// (Defined, Event, Public)
// Parameters:
// TArray<struct FString>         HelmetItemName                 (Parm, NeedCtorLink)
// TArray<int>                    HelmetItemID                   (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckHelmetItemTypeList(TArray<struct FString> HelmetItemName, TArray<int> HelmetItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckHelmetItemTypeList");

	UBTTcpLink_Login_rfAckHelmetItemTypeList_Params params;
	params.HelmetItemName = HelmetItemName;
	params.HelmetItemID = HelmetItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqHelmetItemTypeList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqHelmetItemTypeList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqHelmetItemTypeList");

	UBTTcpLink_Login_rfReqHelmetItemTypeList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckHeadItemTypeList
// (Defined, Event, Public)
// Parameters:
// TArray<int>                    HeadItemID                     (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckHeadItemTypeList(TArray<int> HeadItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckHeadItemTypeList");

	UBTTcpLink_Login_rfAckHeadItemTypeList_Params params;
	params.HeadItemID = HeadItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqHeadItemTypeList
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqHeadItemTypeList()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqHeadItemTypeList");

	UBTTcpLink_Login_rfReqHeadItemTypeList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckLogin
// (Defined, Event, Public)
// Parameters:
// unsigned char                  Sucess                         (Parm)
// struct FString                 CharName                       (Parm, NeedCtorLink)
// int                            TimeStamp                      (Parm)
// int                            LoginHash1                     (Parm)
// int                            LoginHash2                     (Parm)
// int                            LoginHash3                     (Parm)
// int                            LoginHash4                     (Parm)
// int                            LoginHash5                     (Parm)
// unsigned char                  NeedChar                       (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckLogin(unsigned char Sucess, const struct FString& CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckLogin");

	UBTTcpLink_Login_rfAckLogin_Params params;
	params.Sucess = Sucess;
	params.CharName = CharName;
	params.TimeStamp = TimeStamp;
	params.LoginHash1 = LoginHash1;
	params.LoginHash2 = LoginHash2;
	params.LoginHash3 = LoginHash3;
	params.LoginHash4 = LoginHash4;
	params.LoginHash5 = LoginHash5;
	params.NeedChar = NeedChar;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqLogin
// (Defined, Event, Public)
// Parameters:
// struct FString                 PortalID                       (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqLogin(const struct FString& PortalID)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqLogin");

	UBTTcpLink_Login_rfReqLogin_Params params;
	params.PortalID = PortalID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckExceedMaxUser
// (Defined, Event, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckExceedMaxUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckExceedMaxUser");

	UBTTcpLink_Login_rfAckExceedMaxUser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfAckHash
// (Defined, Event, Public)
// Parameters:
// int                            Result                         (Parm)
// struct FString                 ErrMsg                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfAckHash(int Result, const struct FString& ErrMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfAckHash");

	UBTTcpLink_Login_rfAckHash_Params params;
	params.Result = Result;
	params.ErrMsg = ErrMsg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.rfReqHash
// (Defined, Event, Public)
// Parameters:
// int                            HashField0                     (Parm)
// int                            HashField1                     (Parm)
// int                            HashField2                     (Parm)
// int                            HashField3                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::rfReqHash(int HashField0, int HashField1, int HashField2, int HashField3)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.rfReqHash");

	UBTTcpLink_Login_rfReqHash_Params params;
	params.HashField0 = HashField0;
	params.HashField1 = HashField1;
	params.HashField2 = HashField2;
	params.HashField3 = HashField3;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.OnError
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)

void UBTTcpLink_Login::OnError(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.OnError");

	UBTTcpLink_Login_OnError_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Login.OnClose
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)

void UBTTcpLink_Login::OnClose(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.OnClose");

	UBTTcpLink_Login_OnClose_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Login.OnConnect
// (Defined, Event, Public)
// Parameters:
// int                            ErrCode                        (Parm)

void UBTTcpLink_Login::OnConnect(int ErrCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.OnConnect");

	UBTTcpLink_Login_OnConnect_Params params;
	params.ErrCode = ErrCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function BatteryNet.BTTcpLink_Login.Close
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::Close()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.Close");

	UBTTcpLink_Login_Close_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.ConnectDomain
// (Native, Public)
// Parameters:
// struct FString                 domain                         (Parm, NeedCtorLink)
// int                            nPort                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::ConnectDomain(const struct FString& domain, int nPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.ConnectDomain");

	UBTTcpLink_Login_ConnectDomain_Params params;
	params.domain = domain;
	params.nPort = nPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.Connect
// (Native, Public)
// Parameters:
// struct FString                 sIpaddr                        (Parm, NeedCtorLink)
// int                            nPort                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::Connect(const struct FString& sIpaddr, int nPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.Connect");

	UBTTcpLink_Login_Connect_Params params;
	params.sIpaddr = sIpaddr;
	params.nPort = nPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTTcpLink_Login.InitNetwork
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTTcpLink_Login::InitNetwork()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTTcpLink_Login.InitNetwork");

	UBTTcpLink_Login_InitNetwork_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTSteamMapping.GetPayURL
// (Native, Static, Public)
// Parameters:
// struct FString                 AccountID                      (Parm, NeedCtorLink)
// unsigned char                  connectAlpha                   (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ReturnParm, NeedCtorLink)

struct FString UBTSteamMapping::STATIC_GetPayURL(const struct FString& AccountID, unsigned char connectAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTSteamMapping.GetPayURL");

	UBTSteamMapping_GetPayURL_Params params;
	params.AccountID = AccountID;
	params.connectAlpha = connectAlpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.ProcessStep2
// (Defined, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTNatDiag::ProcessStep2()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.ProcessStep2");

	UBTNatDiag_ProcessStep2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.ProcessStep1
// (Defined, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTNatDiag::ProcessStep1()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.ProcessStep1");

	UBTNatDiag_ProcessStep1_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.GetNatType
// (Native, Public)
// Parameters:
// TEnumAsByte<ENAT_TYPE>         ReturnValue                    (Parm, OutParm, ReturnParm)

TEnumAsByte<ENAT_TYPE> UBTNatDiag::GetNatType()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.GetNatType");

	UBTNatDiag_GetNatType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.CheckPhrase2
// (Native, Public)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UBTNatDiag::CheckPhrase2()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.CheckPhrase2");

	UBTNatDiag_CheckPhrase2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.CheckPhrase1
// (Native, Public)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ReturnParm)

int UBTNatDiag::CheckPhrase1()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.CheckPhrase1");

	UBTNatDiag_CheckPhrase1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.SetSecondServer
// (Native, Public)
// Parameters:
// struct FString                 server_ip                      (Parm, NeedCtorLink)
// int                            nPort                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTNatDiag::SetSecondServer(const struct FString& server_ip, int nPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.SetSecondServer");

	UBTNatDiag_SetSecondServer_Params params;
	params.server_ip = server_ip;
	params.nPort = nPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.SetPrimaryServer
// (Native, Public)
// Parameters:
// struct FString                 server_ip                      (Parm, NeedCtorLink)
// int                            nPort                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTNatDiag::SetPrimaryServer(const struct FString& server_ip, int nPort)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.SetPrimaryServer");

	UBTNatDiag_SetPrimaryServer_Params params;
	params.server_ip = server_ip;
	params.nPort = nPort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.StartNatCheck
// (Native, Public)
// Parameters:
// struct FString                 nat_server_ip                  (Parm, NeedCtorLink)
// int                            nPort                          (Parm)
// struct FString                 sLocalBindAddr                 (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTNatDiag::StartNatCheck(const struct FString& nat_server_ip, int nPort, const struct FString& sLocalBindAddr)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.StartNatCheck");

	UBTNatDiag_StartNatCheck_Params params;
	params.nat_server_ip = nat_server_ip;
	params.nPort = nPort;
	params.sLocalBindAddr = sLocalBindAddr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.InitNatSocket
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTNatDiag::InitNatSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.InitNatSocket");

	UBTNatDiag_InitNatSocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.SetNatServerIp
// (Native, Public)
// Parameters:
// TArray<struct FString>         nat_server_ip                  (Parm, NeedCtorLink)
// TArray<int>                    nPorts                         (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTNatDiag::SetNatServerIp(TArray<struct FString> nat_server_ip, TArray<int> nPorts)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.SetNatServerIp");

	UBTNatDiag_SetNatServerIp_Params params;
	params.nat_server_ip = nat_server_ip;
	params.nPorts = nPorts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function BatteryNet.BTNatDiag.Start
// (Defined, Public)
// Parameters:
// TArray<struct FString>         ipaddresses                    (Parm, NeedCtorLink)
// TArray<int>                    ports                          (Parm, NeedCtorLink)
// bool                           ReturnValue                    (Parm, OutParm, ReturnParm)

bool UBTNatDiag::Start(TArray<struct FString> ipaddresses, TArray<int> ports)
{
	static auto fn = UObject::FindObject<UFunction>("Function BatteryNet.BTNatDiag.Start");

	UBTNatDiag_Start_Params params;
	params.ipaddresses = ipaddresses;
	params.ports = ports;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
