#pragma once
/*
# ======================================================================================== #
# > ArcticCombat SDK
# > Generated By HJSdkGen v1.06b
# ---------------------------------------------------------------------------------------- #
# > Package : Engine
# >    File : Structs.h
# ======================================================================================== #
*/

#ifdef _MSC_VER
#pragma pack ( push, 4 )
#endif


/*
# ======================================================================================== #
# > Structs
# ======================================================================================== #
*/

// Struct BatteryNet.BTTcpLink_Channel.KillDeathLog
class DLL_IMPORT FKillDeathLog
{
public:
	int                                                CharKillUID;                                      		// 0x0000 ( 0x0004
	float                                              KillXCoord;                                       		// 0x0004 ( 0x0004
	float                                              KillYCoord;                                       		// 0x0008 ( 0x0004
	float                                              KillZCoord;                                       		// 0x000C ( 0x0004
	int                                                KillPos;                                          		// 0x0010 ( 0x0004
	int                                                KillWeapon;                                       		// 0x0014 ( 0x0004
	int                                                KillWeaponPart;                                   		// 0x0018 ( 0x0004
	int                                                KillRange;                                        		// 0x001C ( 0x0004
	int                                                KillDamage;                                       		// 0x0020 ( 0x0004
	unsigned char                                      KillBodyPart;                                     		// 0x0024 ( 0x0001
	unsigned char                                      IsUAV;                                            		// 0x0025 ( 0x0001
	int                                                CharDeathUID;                                     		// 0x0028 ( 0x0004
	float                                              DeathXCoord;                                      		// 0x002C ( 0x0004
	float                                              DeathYCoord;                                      		// 0x0030 ( 0x0004
	float                                              DeathZCoord;                                      		// 0x0034 ( 0x0004
	int                                                DeathPos;                                         		// 0x0038 ( 0x0004
	int                                                DeathWeapon;                                      		// 0x003C ( 0x0004
	int                                                DeathWeaponPart;                                  		// 0x0040 ( 0x0004
	unsigned char                                      IsDropItem;                                       		// 0x0044 ( 0x0001
	int                                                DropItemID;                                       		// 0x0048 ( 0x0004

	// Public Imports
	struct FKillDeathLog &  operator=(struct FKillDeathLog const &);
}; // Size: 0x004C

// Struct BatteryNet.BTTcpLink_Channel.MatchState
class DLL_IMPORT FMatchState
{
public:
	int                                                iNumTeam;                                         		// 0x0000 ( 0x0004
	int                                                iGoalRound;                                       		// 0x0004 ( 0x0004
	unsigned char                                      bFriendlyFire;                                    		// 0x0008 ( 0x0001
	unsigned char                                      bAllowSpectate;                                   		// 0x0009 ( 0x0001
	unsigned char                                      bAutobalance;                                     		// 0x000A ( 0x0001
	unsigned char                                      bAllowJoin;                                       		// 0x000B ( 0x0001
	unsigned char                                      bAllow3rdPersonView;                              		// 0x000C ( 0x0001
	unsigned char                                      bChatVictimOnly;                                  		// 0x000D ( 0x0001
	int                                                iMinutesKickAFK;                                  		// 0x0010 ( 0x0004
	int                                                iMinPlayers;                                      		// 0x0014 ( 0x0004

	// Public Imports
	struct FMatchState &  operator=(struct FMatchState const &);
}; // Size: 0x0018

// Struct Engine.StaticMesh.StaticMeshMaterial
class DLL_IMPORT FStaticMeshMaterial
{
public:
	class UMaterial*                                   Material;                                         		// 0x0000 ( 0x0004[ CPF_Edit ]
	unsigned char                                      _0x0004[ 0x04 ];                                  		// 0x0004 ( 0x0004 )
	unsigned long                                      EnableCollision:1;                                		// 0x0008 ( 0x0004 [0x00000001][ CPF_Edit ]
	unsigned char                                      _0x000C[ 0x04 ];                                  		// 0x000C ( 0x0004 )

	// Public Imports
	FStaticMeshMaterial(class UMaterial *);
	class FStaticMeshMaterial &  operator=(class FStaticMeshMaterial const &);
}; // Size: 0x0010

// Struct Engine.StaticMesh.StaticMeshLod
struct DLL_IMPORT FStaticMeshLod
{
	class UStaticMesh*                                 LodMesh;                                          		// 0x0000 ( 0x0004[ CPF_Edit ]
	float                                              DisplayFactor;                                    		// 0x0004 ( 0x0004[ CPF_Edit ]
}; // Size: 0x0008

// Struct Engine.GameEngine.URL
class DLL_IMPORT FURL
{
public:
	struct FString                                     Protocol;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Host;                                             		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                Port;                                             		// 0x0018 ( 0x0004
	struct FString                                     Map;                                              		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FString >                     Op;                                               		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Portal;                                           		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                Valid;                                            		// 0x0040 ( 0x0004

	// Public Imports
	FURL(class FURL const &);
	FURL(class FURL *,unsigned short const *,enum ETravelType);
	FURL(unsigned short const *);
	~FURL(void);
	class FURL &  operator=(class FURL const &);
	int  operator==(class FURL const &)const ;
	void  AddOption(unsigned short const *);
	static class FString DefaultHost;
	static class FString DefaultLocalMap;
	static class FString DefaultMap;
	static class FString DefaultMapExt;
	static class FString DefaultName;
	static class FString DefaultNetBrowseMap;
	static int DefaultPort;
	static class FString DefaultPortal;
	static class FString DefaultProtocol;
	static class FString DefaultProtocolDescription;
	static class FString DefaultSaveExt;
	unsigned short const *  GetOption(unsigned short const *,unsigned short const *)const ;
	int  HasOption(unsigned short const *)const ;
	int  IsInternal(void)const ;
	int  IsLocalInternal(void)const ;
	void  LoadURLConfig(unsigned short const *,unsigned short const *);
	class FString  OptionString(int)const ;
	void  RemoveOption(unsigned short const *,unsigned short const *,unsigned short const *);
	void  SaveURLConfig(unsigned short const *,unsigned short const *,unsigned short const *)const ;
	static void  StaticExit(void);
	static void  StaticInit(void);
	class FString  String(int,int)const ;
}; // Size: 0x0044

// Struct Engine.Actor.KRBVec
struct DLL_IMPORT FKRBVec
{
	float                                              X;                                                		// 0x0000 ( 0x0004
	float                                              Y;                                                		// 0x0004 ( 0x0004
	float                                              Z;                                                		// 0x0008 ( 0x0004
}; // Size: 0x000C

// Struct Engine.Actor.KRigidBodyState
struct DLL_IMPORT FKRigidBodyState
{
	struct FKRBVec                                     Position;                                         		// 0x0000 ( 0x000C
	struct FQuat                                       Quaternion;                                       		// 0x000C ( 0x0010
	struct FKRBVec                                     LinVel;                                           		// 0x001C ( 0x000C
	struct FKRBVec                                     AngVel;                                           		// 0x0028 ( 0x000C
}; // Size: 0x0034

// Struct Engine.Actor.KSimParams
struct DLL_IMPORT FKSimParams
{
	float                                              GammaPerSec;                                      		// 0x0000 ( 0x0004
	float                                              Epsilon;                                          		// 0x0004 ( 0x0004
	float                                              PenetrationOffset;                                		// 0x0008 ( 0x0004
	float                                              PenetrationScale;                                 		// 0x000C ( 0x0004
	float                                              ContactSoftness;                                  		// 0x0010 ( 0x0004
	float                                              MaxPenetration;                                   		// 0x0014 ( 0x0004
	float                                              MaxTimestep;                                      		// 0x0018 ( 0x0004
}; // Size: 0x001C

// Struct Engine.Actor.CalCoordsW
class DLL_IMPORT FCalCoordsW
{
public:
	float                                              X1;                                               		// 0x0000 ( 0x0004
	float                                              Y1;                                               		// 0x0004 ( 0x0004
	float                                              X2;                                               		// 0x0008 ( 0x0004
	float                                              Y2;                                               		// 0x000C ( 0x0004
	float                                              XL;                                               		// 0x0010 ( 0x0004
	float                                              YL;                                               		// 0x0014 ( 0x0004
	float                                              U;                                                		// 0x0018 ( 0x0004
	float                                              V;                                                		// 0x001C ( 0x0004
	float                                              UL;                                               		// 0x0020 ( 0x0004
	float                                              VL;                                               		// 0x0024 ( 0x0004
	float                                              fWidth;                                           		// 0x0028 ( 0x0004
	float                                              fHeight;                                          		// 0x002C ( 0x0004

	// Public Imports
	struct FCalCoordsW &  operator=(struct FCalCoordsW const &);
}; // Size: 0x0030

// Struct Engine.Actor.NumericWidget
class DLL_IMPORT FNumericWidget
{
public:
	unsigned char                                      RenderStyle;                                      		// 0x0000 ( 0x0001
	int                                                MinDigitCount;                                    		// 0x0004 ( 0x0004
	float                                              TextureScale;                                     		// 0x0008 ( 0x0004
	unsigned char                                      DrawPivot;                                        		// 0x000C ( 0x0001
	float                                              PosX;                                             		// 0x0010 ( 0x0004
	float                                              PosY;                                             		// 0x0014 ( 0x0004
	int                                                OffsetX;                                          		// 0x0018 ( 0x0004
	int                                                OffsetY;                                          		// 0x001C ( 0x0004
	class FColor                                       Tints[ 0x02 ];                                    		// 0x0020 ( 0x0008
	int                                                bPadWithZeroes;                                   		// 0x0028 ( 0x0004
	int                                                Value;                                            		// 0x002C ( 0x0004[ CPF_Transient ]

	// Public Imports
	FNumericWidget(void);
	struct FNumericWidget &  operator=(struct FNumericWidget const &);
}; // Size: 0x0030

// Struct Engine.Actor.SpriteWidget
class DLL_IMPORT FSpriteWidget
{
public:
	class UMaterial*                                   WidgetTexture;                                    		// 0x0000 ( 0x0004
	unsigned char                                      RenderStyle;                                      		// 0x0004 ( 0x0001
	struct FIntBox                                     TextureCoords;                                    		// 0x0008 ( 0x0010
	float                                              TextureScale;                                     		// 0x0018 ( 0x0004
	unsigned char                                      DrawPivot;                                        		// 0x001C ( 0x0001
	float                                              PosX;                                             		// 0x0020 ( 0x0004
	float                                              PosY;                                             		// 0x0024 ( 0x0004
	int                                                OffsetX;                                          		// 0x0028 ( 0x0004
	int                                                OffsetY;                                          		// 0x002C ( 0x0004
	unsigned char                                      ScaleMode;                                        		// 0x0030 ( 0x0001
	float                                              Scale;                                            		// 0x0034 ( 0x0004
	class FColor                                       Tints[ 0x02 ];                                    		// 0x0038 ( 0x0008

	// Public Imports
	FSpriteWidget(void);
	struct FSpriteWidget &  operator=(struct FSpriteWidget const &);
}; // Size: 0x0040

// Struct Engine.Actor.DigitSet
class DLL_IMPORT FDigitSet
{
public:
	class UMaterial*                                   DigitTexture;                                     		// 0x0000 ( 0x0004
	struct FIntBox                                     TextureCoords[ 0x0B ];                            		// 0x0004 ( 0x00B0

	// Public Imports
	struct FDigitSet &  operator=(struct FDigitSet const &);
}; // Size: 0x00B4

// Struct Engine.Actor.FireProperties
struct DLL_IMPORT FFireProperties
{
	class UClass*                                      AmmoClass;                                        		// 0x0000 ( 0x0004
	class UClass*                                      ProjectileClass;                                  		// 0x0004 ( 0x0004
	float                                              WarnTargetPct;                                    		// 0x0008 ( 0x0004
	float                                              MaxRange;                                         		// 0x000C ( 0x0004
	unsigned long                                      bTossed:1;                                        		// 0x0010 ( 0x0004 [0x00000001]
	unsigned long                                      bTrySplash:1;                                     		// 0x0010 ( 0x0004 [0x00000002]
	unsigned long                                      bLeadTarget:1;                                    		// 0x0010 ( 0x0004 [0x00000004]
	unsigned long                                      bInstantHit:1;                                    		// 0x0010 ( 0x0004 [0x00000008]
	unsigned long                                      bInitialized:1;                                   		// 0x0010 ( 0x0004 [0x00000010]
}; // Size: 0x0014

// Struct Engine.Actor.AnimRep
struct DLL_IMPORT FAnimRep
{
	struct FName                                       AnimSequence;                                     		// 0x0000 ( 0x0004
	unsigned long                                      bAnimLoop:1;                                      		// 0x0004 ( 0x0004 [0x00000001]
	unsigned char                                      AnimRate;                                         		// 0x0008 ( 0x0001
	unsigned char                                      AnimFrame;                                        		// 0x0009 ( 0x0001
	unsigned char                                      TweenRate;                                        		// 0x000A ( 0x0001
}; // Size: 0x000C

// Struct Engine.Actor.StaticMeshProjectorRenderInfoPtr
struct DLL_IMPORT FStaticMeshProjectorRenderInfoPtr
{
	void*                                              Ptr;                                              		// 0x0000 ( 0x0004[ CPF_Transient ]
}; // Size: 0x0004

// Struct Engine.Actor.ProjectorRenderInfoPtr
struct DLL_IMPORT FProjectorRenderInfoPtr
{
	void*                                              Ptr;                                              		// 0x0000 ( 0x0004[ CPF_Transient ]
}; // Size: 0x0004

// Struct Engine.Actor.PointRegion
class DLL_IMPORT FPointRegion
{
public:
	class AZoneInfo*                                   Zone;                                             		// 0x0000 ( 0x0004
	int                                                iLeaf;                                            		// 0x0004 ( 0x0004
	unsigned char                                      ZoneNumber;                                       		// 0x0008 ( 0x0001

	// Public Imports
	FPointRegion(class AZoneInfo *);
	FPointRegion(class AZoneInfo *,int,unsigned char);
	FPointRegion(void);
	struct FPointRegion &  operator=(struct FPointRegion const &);
}; // Size: 0x000C

// Struct Engine.Actor.BatchReference
struct DLL_IMPORT FBatchReference
{
	int                                                BatchIndex;                                       		// 0x0000 ( 0x0004
	int                                                ElementIndex;                                     		// 0x0004 ( 0x0004
}; // Size: 0x0008

// Struct Engine.Actor.LightRenderDataPtr
struct DLL_IMPORT FLightRenderDataPtr
{
	void*                                              Ptr;                                              		// 0x0000 ( 0x0004[ CPF_Transient ]
}; // Size: 0x0004

// Struct Engine.Actor.ActorRenderDataPtr
struct DLL_IMPORT FActorRenderDataPtr
{
	void*                                              Ptr;                                              		// 0x0000 ( 0x0004[ CPF_Transient ]
}; // Size: 0x0004

// Struct Engine.wGameManager.WebzenShopCategory
class DLL_IMPORT FWebzenShopCategory
{
public:
	int                                                ParentCatagorySeq;                                		// 0x0000 ( 0x0004
	int                                                CatagorySeq;                                      		// 0x0004 ( 0x0004
	struct FString                                     CatagoryName;                                     		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                EventFlag;                                        		// 0x0014 ( 0x0004
	int                                                OpenFlag;                                         		// 0x0018 ( 0x0004
	class TArray< int >                                SubCategorySeqList;                               		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                PackageSeqList;                                   		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FWebzenShopCategory(struct FWebzenShopCategory const &);
	FWebzenShopCategory(void);
	~FWebzenShopCategory(void);
	struct FWebzenShopCategory &  operator=(struct FWebzenShopCategory const &);
}; // Size: 0x0034

// Struct Engine.wGameManager.WebzenShopProduct
class DLL_IMPORT FWebzenShopProduct
{
public:
	int                                                PriceSeq;                                         		// 0x0000 ( 0x0004
	int                                                PropertySeq;                                      		// 0x0004 ( 0x0004
	int                                                ProductSeq;                                       		// 0x0008 ( 0x0004
	struct FString                                     ProductName;                                      		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                Price;                                            		// 0x0018 ( 0x0004
	int                                                Value;                                            		// 0x001C ( 0x0004
	int                                                ItemID;                                           		// 0x0020 ( 0x0004

	// Public Imports
	FWebzenShopProduct(struct FWebzenShopProduct const &);
	FWebzenShopProduct(void);
	~FWebzenShopProduct(void);
	struct FWebzenShopProduct &  operator=(struct FWebzenShopProduct const &);
}; // Size: 0x0024

// Struct Engine.wGameManager.WebzenShopPackage
class DLL_IMPORT FWebzenShopPackage
{
public:
	int                                                CategorySeq;                                      		// 0x0000 ( 0x0004
	int                                                ViewOrder;                                        		// 0x0004 ( 0x0004
	int                                                PackageSeq;                                       		// 0x0008 ( 0x0004
	struct FString                                     PackageName;                                      		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                CashPrice;                                        		// 0x0018 ( 0x0004
	struct FString                                     CashName;                                         		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                PackageType;                                      		// 0x0028 ( 0x0004
	int                                                CapsuleFlag;                                      		// 0x002C ( 0x0004
	int                                                EventFlag;                                        		// 0x0030 ( 0x0004
	int                                                SalesFlag;                                        		// 0x0034 ( 0x0004
	int                                                GiftFlag;                                         		// 0x0038 ( 0x0004
	int                                                ImageTagType;                                     		// 0x003C ( 0x0004
	int                                                LeftCount;                                        		// 0x0040 ( 0x0004
	int                                                ItemID;                                           		// 0x0044 ( 0x0004
	struct FString                                     ItemDesc;                                         		// 0x0048 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ItemWarn;                                         		// 0x0054 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                StartDate_Year;                                   		// 0x0060 ( 0x0004
	int                                                StartDate_Month;                                  		// 0x0064 ( 0x0004
	int                                                StartDate_Day;                                    		// 0x0068 ( 0x0004
	int                                                StartDate_Hour;                                   		// 0x006C ( 0x0004
	int                                                StartDate_Min;                                    		// 0x0070 ( 0x0004
	int                                                StartDate_Sec;                                    		// 0x0074 ( 0x0004
	int                                                StartDate_YDay;                                   		// 0x0078 ( 0x0004
	int                                                EndDate_Year;                                     		// 0x007C ( 0x0004
	int                                                EndDate_Month;                                    		// 0x0080 ( 0x0004
	int                                                EndDate_Day;                                      		// 0x0084 ( 0x0004
	int                                                EndDate_Hour;                                     		// 0x0088 ( 0x0004
	int                                                EndDate_Min;                                      		// 0x008C ( 0x0004
	int                                                EndDate_Sec;                                      		// 0x0090 ( 0x0004
	int                                                EndDate_YDay;                                     		// 0x0094 ( 0x0004
	class TArray< struct FWebzenShopProduct >          ProductList;                                      		// 0x0098 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FWebzenShopProduct >          PriceList;                                        		// 0x00A4 ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FWebzenShopPackage(struct FWebzenShopPackage const &);
	FWebzenShopPackage(void);
	~FWebzenShopPackage(void);
	struct FWebzenShopPackage &  operator=(struct FWebzenShopPackage const &);
}; // Size: 0x00B0

// Struct Engine.PlayerController.StoredChatPassword
class DLL_IMPORT FStoredChatPassword
{
public:
	struct FString                                     ChatRoomName;                                     		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ChatRoomPassword;                                 		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FStoredChatPassword(struct FStoredChatPassword const &);
	FStoredChatPassword(void);
	~FStoredChatPassword(void);
	struct FStoredChatPassword &  operator=(struct FStoredChatPassword const &);
}; // Size: 0x0018

// Struct Engine.FinalEffect.LevelColorPreset
class DLL_IMPORT FLevelColorPreset
{
public:
	struct FPlane                                      preBase;                                          		// 0x0000 ( 0x0010
	struct FPlane                                      preBalance;                                       		// 0x0010 ( 0x0010
	struct FPlane                                      preHighlight;                                     		// 0x0020 ( 0x0010
	float                                              preFinalAdd;                                      		// 0x0030 ( 0x0004

	// Public Imports
	FLevelColorPreset(struct FLevelColorPreset const &);
	FLevelColorPreset(void);
	struct FLevelColorPreset &  operator=(struct FLevelColorPreset const &);
}; // Size: 0x0034

// Struct Engine.LevelInfo.ToneElement
class DLL_IMPORT FToneElement
{
public:
	struct FPlane                                      aBase;                                            		// 0x0000 ( 0x0010[ CPF_Edit ]
	struct FPlane                                      bBalance;                                         		// 0x0010 ( 0x0010[ CPF_Edit ]
	struct FPlane                                      cHighlight;                                       		// 0x0020 ( 0x0010[ CPF_Edit ]
	float                                              dFinalAdd;                                        		// 0x0030 ( 0x0004[ CPF_Edit ]

	// Public Imports
	FToneElement(struct FToneElement const &);
	FToneElement(void);
	struct FToneElement &  operator=(struct FToneElement const &);
}; // Size: 0x0034

// Struct Engine.PlayerController.ClientAdjustment
class DLL_IMPORT FClientAdjustment
{
public:
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004
	struct FName                                       NewState;                                         		// 0x0004 ( 0x0004
	unsigned char                                      newPhysics;                                       		// 0x0008 ( 0x0001
	struct FVector                                     NewLoc;                                           		// 0x000C ( 0x000C
	struct FVector                                     NewVel;                                           		// 0x0018 ( 0x000C
	class AActor*                                      NewBase;                                          		// 0x0024 ( 0x0004
	struct FVector                                     NewFloor;                                         		// 0x0028 ( 0x000C

	// Public Imports
	FClientAdjustment(void);
	struct FClientAdjustment &  operator=(struct FClientAdjustment const &);
}; // Size: 0x0034

// Struct Engine.PlayerController.PlayerNameInfo
class DLL_IMPORT FPlayerNameInfo
{
public:
	struct FString                                     mInfo;                                            		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class FColor                                       mColor;                                           		// 0x000C ( 0x0004
	float                                              mXPos;                                            		// 0x0010 ( 0x0004
	float                                              mYPos;                                            		// 0x0014 ( 0x0004

	// Public Imports
	FPlayerNameInfo(struct FPlayerNameInfo const &);
	FPlayerNameInfo(void);
	~FPlayerNameInfo(void);
	struct FPlayerNameInfo &  operator=(struct FPlayerNameInfo const &);
}; // Size: 0x0018

// Struct Engine.wMatchMaker.FriendStruct
class DLL_IMPORT FFriendStruct
{
public:
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	unsigned char                                      IsLogOn;                                          		// 0x000C ( 0x0001
	struct FString                                     ClanName;                                         		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                ClanPattern;                                      		// 0x001C ( 0x0004
	int                                                ClanBG;                                           		// 0x0020 ( 0x0004
	int                                                ClanBL;                                           		// 0x0024 ( 0x0004
	struct FString                                     ServerName;                                       		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ServerShortName;                                  		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ServerIP;                                         		// 0x0040 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                serverPort;                                       		// 0x004C ( 0x0004
	unsigned char                                      CurPos;                                           		// 0x0050 ( 0x0001
	int                                                ChannelNum;                                       		// 0x0054 ( 0x0004
	struct FString                                     ChannelNickName;                                  		// 0x0058 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                GameRoomNum;                                      		// 0x0064 ( 0x0004
	int                                                Level;                                            		// 0x0068 ( 0x0004
	int                                                ClanGrade;                                        		// 0x006C ( 0x0004
	unsigned char                                      IsCombat;                                         		// 0x0070 ( 0x0001
	int                                                ClanWin;                                          		// 0x0074 ( 0x0004
	int                                                ClanLose;                                         		// 0x0078 ( 0x0004
	int                                                IsLookForClan;                                    		// 0x007C ( 0x0004
	int                                                ClanLevel;                                        		// 0x0080 ( 0x0004
	int                                                LevelMarkID;                                      		// 0x0084 ( 0x0004
	int                                                TitleMarkID;                                      		// 0x0088 ( 0x0004
	int                                                Reserved1;                                        		// 0x008C ( 0x0004
	int                                                Reserved2;                                        		// 0x0090 ( 0x0004
	int                                                Reserved3;                                        		// 0x0094 ( 0x0004

	// Public Imports
	FFriendStruct(struct FFriendStruct const &);
	FFriendStruct(void);
	~FFriendStruct(void);
	struct FFriendStruct &  operator=(struct FFriendStruct const &);
}; // Size: 0x0098

// Struct Engine.wMatchMaker.PCBangStruct
class DLL_IMPORT FPCBangStruct
{
public:
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	unsigned char                                      IsLogOn;                                          		// 0x000C ( 0x0001
	struct FString                                     ClanName;                                         		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                ClanPattern;                                      		// 0x001C ( 0x0004
	int                                                ClanBG;                                           		// 0x0020 ( 0x0004
	int                                                ClanBL;                                           		// 0x0024 ( 0x0004
	struct FString                                     ServerName;                                       		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ServerShortName;                                  		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ServerIP;                                         		// 0x0040 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                serverPort;                                       		// 0x004C ( 0x0004
	unsigned char                                      CurPos;                                           		// 0x0050 ( 0x0001
	int                                                ChannelNum;                                       		// 0x0054 ( 0x0004
	struct FString                                     ChannelNickName;                                  		// 0x0058 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                GameRoomNum;                                      		// 0x0064 ( 0x0004
	int                                                Level;                                            		// 0x0068 ( 0x0004
	int                                                ClanGrade;                                        		// 0x006C ( 0x0004
	int                                                ClanWin;                                          		// 0x0070 ( 0x0004
	int                                                ClanLose;                                         		// 0x0074 ( 0x0004
	int                                                IsLookForClan;                                    		// 0x0078 ( 0x0004
	int                                                IsCombat;                                         		// 0x007C ( 0x0004
	int                                                ClanLevel;                                        		// 0x0080 ( 0x0004
	int                                                LevelMarkID;                                      		// 0x0084 ( 0x0004
	int                                                TitleMarkID;                                      		// 0x0088 ( 0x0004
	int                                                Reserved1;                                        		// 0x008C ( 0x0004
	int                                                Reserved2;                                        		// 0x0090 ( 0x0004
	int                                                Reserved3;                                        		// 0x0094 ( 0x0004

	// Public Imports
	FPCBangStruct(struct FPCBangStruct const &);
	FPCBangStruct(void);
	~FPCBangStruct(void);
	struct FPCBangStruct &  operator=(struct FPCBangStruct const &);
}; // Size: 0x0098

// Struct Engine.wMatchMaker.BlockStruct
class DLL_IMPORT FBlockStruct
{
public:
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FBlockStruct(struct FBlockStruct const &);
	FBlockStruct(void);
	~FBlockStruct(void);
	struct FBlockStruct &  operator=(struct FBlockStruct const &);
}; // Size: 0x000C

// Struct Engine.wMatchMaker.ClanStruct
class DLL_IMPORT FClanStruct
{
public:
	int                                                Level;                                            		// 0x0000 ( 0x0004
	struct FString                                     UserName;                                         		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	unsigned char                                      IsLogOn;                                          		// 0x0010 ( 0x0001
	unsigned char                                      ClanGrade;                                        		// 0x0011 ( 0x0001
	struct FString                                     ServerName;                                       		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ServerShortName;                                  		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ServerIP;                                         		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                serverPort;                                       		// 0x0038 ( 0x0004
	unsigned char                                      CurPos;                                           		// 0x003C ( 0x0001
	int                                                ChannelNum;                                       		// 0x0040 ( 0x0004
	struct FString                                     ChannelNickName;                                  		// 0x0044 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                GameRoomNum;                                      		// 0x0050 ( 0x0004
	unsigned char                                      IsCombat;                                         		// 0x0054 ( 0x0001
	int                                                ClanWin;                                          		// 0x0058 ( 0x0004
	int                                                ClanLose;                                         		// 0x005C ( 0x0004
	struct FString                                     ClanSelfIntro;                                    		// 0x0060 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                LevelMarkID;                                      		// 0x006C ( 0x0004
	int                                                TitleMarkID;                                      		// 0x0070 ( 0x0004
	int                                                Reserved1;                                        		// 0x0074 ( 0x0004
	int                                                Reserved2;                                        		// 0x0078 ( 0x0004
	int                                                Reserved3;                                        		// 0x007C ( 0x0004

	// Public Imports
	FClanStruct(struct FClanStruct const &);
	FClanStruct(void);
	~FClanStruct(void);
	struct FClanStruct &  operator=(struct FClanStruct const &);
}; // Size: 0x0080

// Struct Engine.wMatchMaker.PingTime
class DLL_IMPORT FPingTime
{
public:
	struct FString                                     IP;                                               		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                msec;                                             		// 0x000C ( 0x0004

	// Public Imports
	FPingTime(struct FPingTime const &);
	FPingTime(void);
	~FPingTime(void);
	struct FPingTime &  operator=(struct FPingTime const &);
}; // Size: 0x0010

// Struct Engine.wMatchMaker.LoadingMessageItem
class DLL_IMPORT FLoadingMessageItem
{
public:
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	unsigned char                                      LoadingState;                                     		// 0x000C ( 0x0001
	class FColor                                       NameColor;                                        		// 0x0010 ( 0x0004
	class FColor                                       StateColor;                                       		// 0x0014 ( 0x0004
	int                                                TeamNum;                                          		// 0x0018 ( 0x0004

	// Public Imports
	FLoadingMessageItem(struct FLoadingMessageItem const &);
	FLoadingMessageItem(void);
	~FLoadingMessageItem(void);
	struct FLoadingMessageItem &  operator=(struct FLoadingMessageItem const &);
}; // Size: 0x001C

// Struct Engine.wMatchMaker.MyMatchState
class DLL_IMPORT FMyMatchState
{
public:
	int                                                iTeam;                                            		// 0x0000 ( 0x0004
	struct FString                                     szName;                                           		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FMyMatchState(struct FMyMatchState const &);
	FMyMatchState(void);
	~FMyMatchState(void);
	struct FMyMatchState &  operator=(struct FMyMatchState const &);
}; // Size: 0x0010

// Struct Engine.wMatchMaker.EquippedItemInfo
class DLL_IMPORT FEquippedItemInfo
{
public:
	int                                                ItemID;                                           		// 0x0000 ( 0x0004
	int                                                SlotPosition;                                     		// 0x0004 ( 0x0004
	int                                                AddPartID;                                        		// 0x0008 ( 0x0004
	struct FBtrDouble                                  UniqueID;                                         		// 0x000C ( 0x0008
	int                                                ItemUsedSeconds;                                  		// 0x0014 ( 0x0004
	int                                                ItemUsedCount;                                    		// 0x0018 ( 0x0004
	unsigned char                                      ItemOnUse;                                        		// 0x001C ( 0x0001
	int                                                Painting_Item_ID;                                 		// 0x0020 ( 0x0004

	// Public Imports
	FEquippedItemInfo(struct FEquippedItemInfo const &);
	FEquippedItemInfo(void);
	struct FEquippedItemInfo &  operator=(struct FEquippedItemInfo const &);
}; // Size: 0x0024

// Struct Engine.wMatchMaker.EquippedQSlotInfo
class DLL_IMPORT FEquippedQSlotInfo
{
public:
	int                                                ItemID[ 0x04 ];                                   		// 0x0000 ( 0x0010
	int                                                PartsID[ 0x04 ];                                  		// 0x0010 ( 0x0010
	struct FBtrDouble                                  ItemUniqueID[ 0x04 ];                             		// 0x0020 ( 0x0020
	int                                                ItemUsedSeconds[ 0x04 ];                          		// 0x0040 ( 0x0010
	int                                                ItemUsedCount[ 0x04 ];                            		// 0x0050 ( 0x0010
	unsigned char                                      ItemOnUse[ 0x04 ];                                		// 0x0060 ( 0x0004
	int                                                SkillID[ 0x04 ];                                  		// 0x0064 ( 0x0010
	int                                                Painting_Item_ID[ 0x04 ];                         		// 0x0074 ( 0x0010

	// Public Imports
	FEquippedQSlotInfo(struct FEquippedQSlotInfo const &);
	FEquippedQSlotInfo(void);
	struct FEquippedQSlotInfo &  operator=(struct FEquippedQSlotInfo const &);
}; // Size: 0x0084

// Struct Engine.wMatchMaker.MissionItem
class DLL_IMPORT FMissionItem
{
public:
	int                                                QuestType;                                        		// 0x0000 ( 0x0004
	int                                                QuestID;                                          		// 0x0004 ( 0x0004
	int                                                MissionType;                                      		// 0x0008 ( 0x0004
	int                                                MissionOption1;                                   		// 0x000C ( 0x0004
	int                                                MissionOption2;                                   		// 0x0010 ( 0x0004
	int                                                MissionBotMode;                                   		// 0x0014 ( 0x0004
	struct FString                                     MissionDesc;                                      		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                CurrentProgress;                                  		// 0x0024 ( 0x0004
	int                                                MaxProgress;                                      		// 0x0028 ( 0x0004

	// Public Imports
	FMissionItem(struct FMissionItem const &);
	FMissionItem(void);
	~FMissionItem(void);
	struct FMissionItem &  operator=(struct FMissionItem const &);
}; // Size: 0x002C

// Struct Engine.wMatchMaker.QuestItem
class DLL_IMPORT FQuestItem
{
public:
	int                                                QuestID;                                          		// 0x0000 ( 0x0004
	int                                                CurrentProgress;                                  		// 0x0004 ( 0x0004

	// Public Imports
	struct FQuestItem &  operator=(struct FQuestItem const &);
}; // Size: 0x0008

// Struct Engine.wMatchMaker.DisplayMode
class DLL_IMPORT FDisplayMode
{
public:
	int                                                width;                                            		// 0x0000 ( 0x0004
	int                                                Height;                                           		// 0x0004 ( 0x0004
	int                                                RatioIndex;                                       		// 0x0008 ( 0x0004

	// Public Imports
	struct FDisplayMode &  operator=(struct FDisplayMode const &);
}; // Size: 0x000C

// Struct Engine.wMatchMaker.BootyInfo
class DLL_IMPORT FBootyInfo
{
public:
	int                                                PrizeWinUserID;                                   		// 0x0000 ( 0x0004
	struct FString                                     PrizeWinUserName;                                 		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                ItemID;                                           		// 0x0010 ( 0x0004
	int                                                PartsID;                                          		// 0x0014 ( 0x0004

	// Public Imports
	FBootyInfo(struct FBootyInfo const &);
	FBootyInfo(void);
	~FBootyInfo(void);
	struct FBootyInfo &  operator=(struct FBootyInfo const &);
}; // Size: 0x0018

// Struct Engine.wMatchMaker.ResultInfo
class DLL_IMPORT FResultInfo
{
public:
	int                                                UserID;                                           		// 0x0000 ( 0x0004
	int                                                Score;                                            		// 0x0004 ( 0x0004
	int                                                Team;                                             		// 0x0008 ( 0x0004
	struct FString                                     Nick;                                             		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                Kill;                                             		// 0x0018 ( 0x0004
	int                                                Assist;                                           		// 0x001C ( 0x0004
	int                                                Death;                                            		// 0x0020 ( 0x0004
	int                                                Exp;                                              		// 0x0024 ( 0x0004
	int                                                ExpBonus;                                         		// 0x0028 ( 0x0004
	int                                                Point;                                            		// 0x002C ( 0x0004
	int                                                PointBonus;                                       		// 0x0030 ( 0x0004
	unsigned long                                      IsMVP:1;                                          		// 0x0034 ( 0x0004 [0x00000001]
	unsigned long                                      IsLevelUp:1;                                      		// 0x0034 ( 0x0004 [0x00000002]
	int                                                BonusID[ 0x09 ];                                  		// 0x0038 ( 0x0024

	// Public Imports
	FResultInfo(struct FResultInfo const &);
	FResultInfo(void);
	~FResultInfo(void);
	struct FResultInfo &  operator=(struct FResultInfo const &);
}; // Size: 0x005C

// Struct Engine.wMatchMaker.EquippedSkillInfo
class DLL_IMPORT FEquippedSkillInfo
{
public:
	int                                                SkillID;                                          		// 0x0000 ( 0x0004
	int                                                SlotPosition;                                     		// 0x0004 ( 0x0004

	// Public Imports
	struct FEquippedSkillInfo &  operator=(struct FEquippedSkillInfo const &);
}; // Size: 0x0008

// Struct Engine.wMatchMaker.TeamScore
class DLL_IMPORT FTeamScore
{
public:
	int                                                iScore;                                           		// 0x0000 ( 0x0004

	// Public Imports
	struct FTeamScore &  operator=(struct FTeamScore const &);
}; // Size: 0x0004

// Struct Engine.wMatchMaker.PlayerScore
class DLL_IMPORT FPlayerScore
{
public:
	int                                                iScore;                                           		// 0x0000 ( 0x0004
	int                                                iKill;                                            		// 0x0004 ( 0x0004
	int                                                iDeath;                                           		// 0x0008 ( 0x0004

	// Public Imports
	struct FPlayerScore &  operator=(struct FPlayerScore const &);
}; // Size: 0x000C

// Struct Engine.wMatchMaker.TencentLoginInfo
class DLL_IMPORT FTencentLoginInfo
{
public:
	int                                                UIN;                                              		// 0x0000 ( 0x0004
	int                                                GameSignatureLen;                                 		// 0x0004 ( 0x0004
	unsigned char                                      GameSignature[ 0x80 ];                            		// 0x0008 ( 0x0080
	struct FString                                     SelectedServerIP;                                 		// 0x0088 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                SelectedServerPort;                               		// 0x0094 ( 0x0004

	// Public Imports
	FTencentLoginInfo(struct FTencentLoginInfo const &);
	FTencentLoginInfo(void);
	~FTencentLoginInfo(void);
	struct FTencentLoginInfo &  operator=(struct FTencentLoginInfo const &);
}; // Size: 0x0098

// Struct Engine.wGameManager.SEAXEffect
class DLL_IMPORT FSEAXEffect
{
public:
	struct FString                                     strClassName;                                     		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class UI3DL2Listener*                              EAXEffect;                                        		// 0x000C ( 0x0004

	// Public Imports
	FSEAXEffect(struct FSEAXEffect const &);
	FSEAXEffect(void);
	~FSEAXEffect(void);
	struct FSEAXEffect &  operator=(struct FSEAXEffect const &);
}; // Size: 0x0010

// Struct Engine.BTCustomDrawHK.Image
struct DLL_IMPORT FImage
{
	float                                              X;                                                		// 0x0000 ( 0x0004[ CPF_Edit ]
	float                                              Y;                                                		// 0x0004 ( 0x0004[ CPF_Edit ]
	float                                              width;                                            		// 0x0008 ( 0x0004[ CPF_Edit ]
	float                                              Height;                                           		// 0x000C ( 0x0004[ CPF_Edit ]
	class UMaterial*                                   Image;                                            		// 0x0010 ( 0x0004[ CPF_Edit ]
	unsigned char                                      DrawType;                                         		// 0x0014 ( 0x0001[ CPF_Edit ]
	class FColor                                       DrawColor;                                        		// 0x0018 ( 0x0004[ CPF_Edit ]
	class FColor                                       DrawShadowColor;                                  		// 0x001C ( 0x0004[ CPF_Edit ]
}; // Size: 0x0020

// Struct Engine.BTCustomDrawHK.Text
struct DLL_IMPORT FText
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	int                                                FontSize;                                         		// 0x000C ( 0x0004[ CPF_Edit ]
	unsigned char                                      FontDrawType;                                     		// 0x0010 ( 0x0001[ CPF_Edit ]
	class FColor                                       DrawColor;                                        		// 0x0014 ( 0x0004[ CPF_Edit ]
	class FColor                                       DrawShadowColor;                                  		// 0x0018 ( 0x0004[ CPF_Edit ]
}; // Size: 0x001C

// Struct Engine.wItemBoxHK.CustomPartInfo
struct DLL_IMPORT FCustomPartInfo
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004
	int                                                PartID;                                           		// 0x0004 ( 0x0004
	struct FString                                     Name;                                             		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                PointPrice;                                       		// 0x0020 ( 0x0004
	int                                                CashPrice;                                        		// 0x0024 ( 0x0004
	class UTexture*                                    PartImage;                                        		// 0x0028 ( 0x0004
	class UTexture*                                    PartIconImage;                                    		// 0x002C ( 0x0004
	int                                                SkillID;                                          		// 0x0030 ( 0x0004
	struct FString                                     SkillName;                                        		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
	class UTexture*                                    SkillImage;                                       		// 0x0040 ( 0x0004
	int                                                UI_DamageRange;                                   		// 0x0044 ( 0x0004
	int                                                ui_firesound;                                     		// 0x0048 ( 0x0004
	struct FString                                     UI_Zoom1;                                         		// 0x004C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     UI_Zoom2;                                         		// 0x0058 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                UI_Durability;                                    		// 0x0064 ( 0x0004
	int                                                ui_damage;                                        		// 0x0068 ( 0x0004
	int                                                ui_spread;                                        		// 0x006C ( 0x0004
	int                                                ui_view_kick;                                     		// 0x0070 ( 0x0004
	int                                                ui_rate_of_fire;                                  		// 0x0074 ( 0x0004
	int                                                ui_move;                                          		// 0x0078 ( 0x0004
	int                                                ui_range;                                         		// 0x007C ( 0x0004
}; // Size: 0x0080

// Struct Engine.wItemBoxHK.PaintInfo
struct DLL_IMPORT FPaintInfo
{
	int                                                PaintingID;                                       		// 0x0000 ( 0x0004
	struct FString                                     PaintingGroupID;                                  		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                PaintingNum;                                      		// 0x0010 ( 0x0004
	int                                                PaintingItemID;                                   		// 0x0014 ( 0x0004
	float                                              RepairCost;                                       		// 0x0018 ( 0x0004
	int                                                UI_Durability;                                    		// 0x001C ( 0x0004
	struct FString                                     strUI_Icon;                                       		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
	class UTexture*                                    UI_Icon;                                          		// 0x002C ( 0x0004
	class UTexture*                                    UI_Icon_Box;                                      		// 0x0030 ( 0x0004
}; // Size: 0x0034

// Struct Engine.wGameManager.GP20Product
class DLL_IMPORT FGP20Product
{
public:
	class TArray< int >                                ProductNo;                                        		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                ProductCost;                                      		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                ProductHour;                                      		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                ProductQuantity;                                  		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< unsigned char >                      SaleType;                                         		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                SaleStatus;                                       		// 0x003C ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                IsGift;                                           		// 0x0048 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ProductRowGuid;                                   		// 0x0054 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ServiceCode;                                      		// 0x0060 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ProductName;                                      		// 0x006C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ProductCode;                                      		// 0x0078 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ProductType;                                      		// 0x0084 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ItemSaleType;                                     		// 0x0090 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                SaleMasterFlag;                                   		// 0x009C ( 0x0004
	unsigned char                                      ISIncludeBonus;                                   		// 0x00A0 ( 0x0001
	int                                                TotalQuantity;                                    		// 0x00A4 ( 0x0004
	int                                                ReOrderTerms;                                     		// 0x00A8 ( 0x0004
	int                                                ReorderCount;                                     		// 0x00AC ( 0x0004
	int                                                PurchaseAvailableQuantity;                        		// 0x00B0 ( 0x0004
	int                                                AvailableMinLevel;                                		// 0x00B4 ( 0x0004
	int                                                AvailableMaxLevel;                                		// 0x00B8 ( 0x0004
	unsigned char                                      AvailableGender;                                  		// 0x00BC ( 0x0001
	int                                                InventoryKeepDays;                                		// 0x00C0 ( 0x0004
	struct FString                                     Description;                                      		// 0x00C4 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Property0;                                        		// 0x00D0 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Property1;                                        		// 0x00DC ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Property2;                                        		// 0x00E8 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Property3;                                        		// 0x00F4 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Property4;                                        		// 0x0100 ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FGP20Product(struct FGP20Product const &);
	FGP20Product(void);
	~FGP20Product(void);
	struct FGP20Product &  operator=(struct FGP20Product const &);
}; // Size: 0x010C

// Struct Engine.wGameManager.EventTimerStruct
class DLL_IMPORT FEventTimerStruct
{
public:
	int                                                EventType;                                        		// 0x0000 ( 0x0004
	struct FBtrDouble                                  EventTime;                                        		// 0x0004 ( 0x0008
	int                                                EventTimeAddMSec;                                 		// 0x000C ( 0x0004
	class UDelegateEventTimer*                         EventDelegate;                                    		// 0x0010 ( 0x0004
	int                                                EventCount;                                       		// 0x0014 ( 0x0004

	// Public Imports
	FEventTimerStruct(struct FEventTimerStruct const &);
	FEventTimerStruct(void);
	struct FEventTimerStruct &  operator=(struct FEventTimerStruct const &);
}; // Size: 0x0018

// Struct Engine.wGameManager.WebzenInven
class DLL_IMPORT FWebzenInven
{
public:
	int                                                Seq;                                              		// 0x0000 ( 0x0004
	int                                                ItemSeq;                                          		// 0x0004 ( 0x0004
	int                                                GroupCode;                                        		// 0x0008 ( 0x0004
	int                                                ShareFlag;                                        		// 0x000C ( 0x0004
	int                                                ProductSeq;                                       		// 0x0010 ( 0x0004
	int                                                PriceSeq;                                         		// 0x0014 ( 0x0004
	struct FString                                     CashName;                                         		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FBtrDouble                                  CashPoint;                                        		// 0x0024 ( 0x0008
	struct FString                                     SendAccountID;                                    		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     SendMessage;                                      		// 0x0038 ( 0x000C[ CPF_NeedCtorLink ]
	unsigned char                                      ItemType;                                         		// 0x0044 ( 0x0001
	unsigned char                                      RelationType;                                     		// 0x0045 ( 0x0001
	int                                                ProductType;                                      		// 0x0048 ( 0x0004

	// Public Imports
	FWebzenInven(struct FWebzenInven const &);
	FWebzenInven(void);
	~FWebzenInven(void);
	struct FWebzenInven &  operator=(struct FWebzenInven const &);
}; // Size: 0x004C

// Struct Engine.wGameManager.SDefenceGameParam
class DLL_IMPORT FSDefenceGameParam
{
public:
	class TArray< class UwDefenceGameParam* >          EasyLevel;                                        		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< class UwDefenceGameParam* >          NormalLevel;                                      		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< class UwDefenceGameParam* >          HardLevel;                                        		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< class UwDefenceGameParam* >          VeryHardLevel;                                    		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FSDefenceGameParam(struct FSDefenceGameParam const &);
	FSDefenceGameParam(void);
	~FSDefenceGameParam(void);
	struct FSDefenceGameParam &  operator=(struct FSDefenceGameParam const &);
}; // Size: 0x0030

// Struct Engine.wCharacterManager.PlayerProperty
class DLL_IMPORT FPlayerProperty
{
public:
	struct FString                                     Name;                                             		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                Level;                                            		// 0x000C ( 0x0004
	float                                              Exp;                                              		// 0x0010 ( 0x0004
	class UwInventory*                                 Inven;                                            		// 0x0014 ( 0x0004
	class UwSkills*                                    Skills;                                           		// 0x0018 ( 0x0004

	// Public Imports
	FPlayerProperty(struct FPlayerProperty const &);
	FPlayerProperty(void);
	~FPlayerProperty(void);
	struct FPlayerProperty &  operator=(struct FPlayerProperty const &);
}; // Size: 0x001C

// Struct Engine.wCharacterManager.PlayerPartsInfo
class DLL_IMPORT FPlayerPartsInfo
{
public:
	int                                                iIndex;                                           		// 0x0000 ( 0x0004
	int                                                iID;                                              		// 0x0004 ( 0x0004
	int                                                iType;                                            		// 0x0008 ( 0x0004
	struct FString                                     strName;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strMeshName;                                      		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strTexName;                                       		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	float                                              fSpHp;                                            		// 0x0030 ( 0x0004
	float                                              fSpDp;                                            		// 0x0034 ( 0x0004
	float                                              fSpStm;                                           		// 0x0038 ( 0x0004
	float                                              fSpSpeed;                                         		// 0x003C ( 0x0004
	float                                              fSpEtc;                                           		// 0x0040 ( 0x0004

	// Public Imports
	FPlayerPartsInfo(struct FPlayerPartsInfo const &);
	FPlayerPartsInfo(void);
	~FPlayerPartsInfo(void);
	struct FPlayerPartsInfo &  operator=(struct FPlayerPartsInfo const &);
}; // Size: 0x0044

// Struct Engine.wCharacterManager.PlayerSet
struct DLL_IMPORT FPlayerSet
{
	struct FString                                     strBodyName;                                      		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strHeadName;                                      		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strHelmetName;                                    		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strBackpackName;                                  		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
}; // Size: 0x0030

// Struct Engine.Pawn.PlayerDamageInfo
class DLL_IMPORT FPlayerDamageInfo
{
public:
	class APawn*                                       Attacker;                                         		// 0x0000 ( 0x0004
	class AController*                                 ac;                                               		// 0x0004 ( 0x0004
	int                                                AttackerUID;                                      		// 0x0008 ( 0x0004
	float                                              DamageAmount;                                     		// 0x000C ( 0x0004
	float                                              DamageTime;                                       		// 0x0010 ( 0x0004
	unsigned long                                      DamageStun:1;                                     		// 0x0014 ( 0x0004 [0x00000001]

	// Public Imports
	struct FPlayerDamageInfo &  operator=(struct FPlayerDamageInfo const &);
}; // Size: 0x0018

// Struct Engine.Pawn.sStartWeaponInfo
class DLL_IMPORT FsStartWeaponInfo
{
public:
	int                                                iWeaponID;                                        		// 0x0000 ( 0x0004
	int                                                iPartsID;                                         		// 0x0004 ( 0x0004
	struct FBtrDouble                                  iUniqueID;                                        		// 0x0008 ( 0x0008

	// Public Imports
	FsStartWeaponInfo(struct FsStartWeaponInfo const &);
	FsStartWeaponInfo(void);
	struct FsStartWeaponInfo &  operator=(struct FsStartWeaponInfo const &);
}; // Size: 0x0010

// Struct Engine.Pawn.HitFXData
class DLL_IMPORT FHitFXData
{
public:
	struct FName                                       Bone;                                             		// 0x0000 ( 0x0004[ CPF_Edit ]
	class UClass*                                      damtype;                                          		// 0x0004 ( 0x0004[ CPF_Edit ]
	unsigned long                                      bSever:1;                                         		// 0x0008 ( 0x0004 [0x00000001][ CPF_Edit ]
	struct FRotator                                    rotDir;                                           		// 0x000C ( 0x000C[ CPF_Edit ]
	int                                                iCollisionPart;                                   		// 0x0018 ( 0x0004[ CPF_Edit ]
	struct FVector                                     vHitLoc;                                          		// 0x001C ( 0x000C

	// Public Imports
	FHitFXData(void);
	struct FHitFXData &  operator=(struct FHitFXData const &);
}; // Size: 0x0028

// Struct Engine.GameInfo.KeyValuePair
class DLL_IMPORT FKeyValuePair
{
public:
	struct FString                                     key;                                              		// 0x0000 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x000C ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]

	// Public Imports
	FKeyValuePair(struct FKeyValuePair const &);
	FKeyValuePair(void);
	~FKeyValuePair(void);
	struct FKeyValuePair &  operator=(struct FKeyValuePair const &);
}; // Size: 0x0018

// Struct Engine.GameInfo.PlayerResponseLine
class DLL_IMPORT FPlayerResponseLine
{
public:
	int                                                PlayerNum;                                        		// 0x0000 ( 0x0004[ CPF_Edit ]
	struct FString                                     PlayerName;                                       		// 0x0004 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	int                                                Ping;                                             		// 0x0010 ( 0x0004[ CPF_Edit ]
	int                                                Score;                                            		// 0x0014 ( 0x0004[ CPF_Edit ]
	int                                                StatsID;                                          		// 0x0018 ( 0x0004[ CPF_Edit ]

	// Public Imports
	FPlayerResponseLine(struct FPlayerResponseLine const &);
	FPlayerResponseLine(void);
	~FPlayerResponseLine(void);
	struct FPlayerResponseLine &  operator=(struct FPlayerResponseLine const &);
}; // Size: 0x001C

// Struct Engine.GameInfo.ServerResponseLine
class DLL_IMPORT FServerResponseLine
{
public:
	int                                                ServerID;                                         		// 0x0000 ( 0x0004[ CPF_Edit ]
	struct FString                                     IP;                                               		// 0x0004 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	int                                                Port;                                             		// 0x0010 ( 0x0004[ CPF_Edit ]
	int                                                QueryPort;                                        		// 0x0014 ( 0x0004[ CPF_Edit ]
	struct FString                                     ServerName;                                       		// 0x0018 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	struct FString                                     MapName;                                          		// 0x0024 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	struct FString                                     GameType;                                         		// 0x0030 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	int                                                CurrentPlayers;                                   		// 0x003C ( 0x0004[ CPF_Edit ]
	int                                                MaxPlayers;                                       		// 0x0040 ( 0x0004[ CPF_Edit ]
	int                                                Ping;                                             		// 0x0044 ( 0x0004[ CPF_Edit ]
	int                                                Flags;                                            		// 0x0048 ( 0x0004[ CPF_Edit ]
	struct FString                                     SkillLevel;                                       		// 0x004C ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	class TArray< struct FKeyValuePair >               ServerInfo;                                       		// 0x0058 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	class TArray< struct FPlayerResponseLine >         PlayerInfo;                                       		// 0x0064 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]

	// Public Imports
	FServerResponseLine(struct FServerResponseLine const &);
	FServerResponseLine(void);
	~FServerResponseLine(void);
	struct FServerResponseLine &  operator=(struct FServerResponseLine const &);
}; // Size: 0x0070

// Struct Engine.Vehicle.SVehicleIcon
class DLL_IMPORT FSVehicleIcon
{
public:
	class UMaterial*                                   Material;                                         		// 0x0000 ( 0x0004
	float                                              X;                                                		// 0x0004 ( 0x0004
	float                                              Y;                                                		// 0x0008 ( 0x0004
	float                                              SizeX;                                            		// 0x000C ( 0x0004
	float                                              SizeY;                                            		// 0x0010 ( 0x0004
	unsigned long                                      bIsGreyScale:1;                                   		// 0x0014 ( 0x0004 [0x00000001]

	// Public Imports
	struct FSVehicleIcon &  operator=(struct FSVehicleIcon const &);
}; // Size: 0x0018

// Struct Engine.wItemBoxHK.PartInfo
struct DLL_IMPORT FPartInfo
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004
	struct FString                                     Name;                                             		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                PointPrice;                                       		// 0x001C ( 0x0004
	int                                                CashPrice;                                        		// 0x0020 ( 0x0004
	int                                                SightID;                                          		// 0x0024 ( 0x0004
	class UTexture*                                    SightImage;                                       		// 0x0028 ( 0x0004
	int                                                SilencerID;                                       		// 0x002C ( 0x0004
	class UTexture*                                    SilencerImage;                                    		// 0x0030 ( 0x0004
	int                                                CamoID;                                           		// 0x0034 ( 0x0004
	class UTexture*                                    CamoImage;                                        		// 0x0038 ( 0x0004
	int                                                PaintingID;                                       		// 0x003C ( 0x0004
	class UTexture*                                    PaintingImage;                                    		// 0x0040 ( 0x0004
	int                                                SkillID;                                          		// 0x0044 ( 0x0004
	struct FString                                     SkillName;                                        		// 0x0048 ( 0x000C[ CPF_NeedCtorLink ]
	class UTexture*                                    SkillImage;                                       		// 0x0054 ( 0x0004
	class UTexture*                                    UI_Image;                                         		// 0x0058 ( 0x0004
	int                                                UI_DamageRange;                                   		// 0x005C ( 0x0004
	int                                                ui_firesound;                                     		// 0x0060 ( 0x0004
	struct FString                                     UI_Zoom1;                                         		// 0x0064 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     UI_Zoom2;                                         		// 0x0070 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                UI_Durability;                                    		// 0x007C ( 0x0004
	float                                              display_3d_x;                                     		// 0x0080 ( 0x0004
	float                                              display_3d_y;                                     		// 0x0084 ( 0x0004
	float                                              display_3d_z;                                     		// 0x0088 ( 0x0004
	float                                              display_3d_rot_y;                                 		// 0x008C ( 0x0004
	float                                              Bootyitem_3d_x;                                   		// 0x0090 ( 0x0004
	float                                              Bootyitem_3d_y;                                   		// 0x0094 ( 0x0004
	float                                              Bootyitem_3d_z;                                   		// 0x0098 ( 0x0004
	float                                              Bootyitem_3d_rot_y;                               		// 0x009C ( 0x0004
}; // Size: 0x00A0

// Struct Engine.HUD.ConsoleMessage
class DLL_IMPORT FConsoleMessage
{
public:
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class FColor                                       TextColor;                                        		// 0x000C ( 0x0004
	float                                              MessageLife;                                      		// 0x0010 ( 0x0004
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0014 ( 0x0004

	// Public Imports
	FConsoleMessage(struct FConsoleMessage const &);
	FConsoleMessage(void);
	~FConsoleMessage(void);
	struct FConsoleMessage &  operator=(struct FConsoleMessage const &);
}; // Size: 0x0018

// Struct Engine.wMyPlayerStatus.sQuickSlot
class DLL_IMPORT FsQuickSlot
{
public:
	struct FString                                     strName;                                          		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                iUniqueSlotID;                                    		// 0x000C ( 0x0004
	int                                                iItemID[ 0x04 ];                                  		// 0x0010 ( 0x0010
	struct FBtrDouble                                  iUniqueItemUID[ 0x04 ];                           		// 0x0020 ( 0x0020
	int                                                iPartsID[ 0x04 ];                                 		// 0x0040 ( 0x0010
	int                                                iSkillID[ 0x04 ];                                 		// 0x0050 ( 0x0010
	int                                                iUniqueSkillID[ 0x04 ];                           		// 0x0060 ( 0x0010

	// Public Imports
	FsQuickSlot(struct FsQuickSlot const &);
	FsQuickSlot(void);
	~FsQuickSlot(void);
	struct FsQuickSlot &  operator=(struct FsQuickSlot const &);
}; // Size: 0x0070

// Struct Engine.wMyPlayerStatus.sItem
class DLL_IMPORT FsItem
{
public:
	struct FBtrDouble                                  iUniqueID;                                        		// 0x0000 ( 0x0008
	int                                                iItemID;                                          		// 0x0008 ( 0x0004
	int                                                iItemType;                                        		// 0x000C ( 0x0004
	int                                                iDurability;                                      		// 0x0010 ( 0x0004
	struct FBtrDouble                                  iUntilTime;                                       		// 0x0014 ( 0x0008
	int                                                iSlotPosition;                                    		// 0x001C ( 0x0004
	int                                                iDamageDegree;                                    		// 0x0020 ( 0x0004
	int                                                iItemUsed;                                        		// 0x0024 ( 0x0004
	int                                                iOverlapCount;                                    		// 0x0028 ( 0x0004
	int                                                iPartsID;                                         		// 0x002C ( 0x0004
	int                                                iPaintID;                                         		// 0x0030 ( 0x0004

	// Public Imports
	FsItem(struct FsItem const &);
	FsItem(void);
	struct FsItem &  operator=(struct FsItem const &);
}; // Size: 0x0034

// Struct Engine.wMyPlayerStatus.sSkill
class DLL_IMPORT FsSkill
{
public:
	int                                                iUniqueSkillID;                                   		// 0x0000 ( 0x0004
	int                                                iSkillID;                                         		// 0x0004 ( 0x0004
	struct FBtrDouble                                  iUntilTime;                                       		// 0x0008 ( 0x0008
	unsigned char                                      bySlotPosition;                                   		// 0x0010 ( 0x0001

	// Public Imports
	FsSkill(struct FsSkill const &);
	FsSkill(void);
	struct FsSkill &  operator=(struct FsSkill const &);
}; // Size: 0x0014

// Struct Engine.AnnouncerVoice.CachedSound
struct DLL_IMPORT FCachedSound
{
	struct FString                                     CacheName;                                        		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class USound*                                      CacheSound;                                       		// 0x000C ( 0x0004
}; // Size: 0x0010

// Struct Engine.AccessControl.AdminPlayer
struct DLL_IMPORT FAdminPlayer
{
	class UwAdminUser*                                 User;                                             		// 0x0000 ( 0x0004
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0004 ( 0x0004
}; // Size: 0x0008

// Struct Engine.FinalEffect.ColorPreset
class DLL_IMPORT FColorPreset
{
public:
	struct FPlane                                      preBase;                                          		// 0x0000 ( 0x0010
	struct FPlane                                      preBalance;                                       		// 0x0010 ( 0x0010
	struct FPlane                                      preHighlight;                                     		// 0x0020 ( 0x0010
	float                                              preFinalAdd;                                      		// 0x0030 ( 0x0004
	struct FString                                     preName;                                          		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FColorPreset(struct FColorPreset const &);
	FColorPreset(void);
	~FColorPreset(void);
	struct FColorPreset &  operator=(struct FColorPreset const &);
}; // Size: 0x0040

// Struct Engine.VoiceChatReplicationInfo.VoiceChatCodec
class DLL_IMPORT FVoiceChatCodec
{
public:
	struct FString                                     Codec;                                            		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     CodecName;                                        		// 0x000C ( 0x000C[ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CodecDescription;                                 		// 0x0018 ( 0x000C[ CPF_Localized | CPF_NeedCtorLink ]

	// Public Imports
	FVoiceChatCodec(struct FVoiceChatCodec const &);
	FVoiceChatCodec(void);
	~FVoiceChatCodec(void);
	struct FVoiceChatCodec &  operator=(struct FVoiceChatCodec const &);
}; // Size: 0x0024

// Struct Engine.BtrTraceResult.ResultData
class DLL_IMPORT FResultData
{
public:
	class AActor*                                      HitActor;                                         		// 0x0000 ( 0x0004
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C
	struct FVector                                     HitNormal;                                        		// 0x0010 ( 0x000C
	unsigned char                                      CollisionPart;                                    		// 0x001C ( 0x0001
	class UMaterial*                                   HitMaterial;                                      		// 0x0020 ( 0x0004

	// Public Imports
	FResultData(void);
	struct FResultData &  operator=(struct FResultData const &);
}; // Size: 0x0024

// Struct Engine.CacheManager.MapRecord
class DLL_IMPORT FMapRecord
{
public:
	struct FString                                     Acronym;                                          		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     MapName;                                          		// 0x000C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     TextName;                                         		// 0x0018 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     FriendlyName;                                     		// 0x0024 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Author;                                           		// 0x0030 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x003C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	int                                                PlayerCountMin;                                   		// 0x0048 ( 0x0004[ CPF_Edit | CPF_Const ]
	int                                                PlayerCountMax;                                   		// 0x004C ( 0x0004[ CPF_Edit | CPF_Const ]
	struct FString                                     ScreenshotRef;                                    		// 0x0050 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     ExtraInfo;                                        		// 0x005C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	int                                                RecordIndex;                                      		// 0x0068 ( 0x0004[ CPF_Const ]

	// Public Imports
	FMapRecord(struct FMapRecord const &);
	FMapRecord(void);
	~FMapRecord(void);
	struct FMapRecord &  operator=(struct FMapRecord const &);
}; // Size: 0x006C

// Struct Engine.CacheManager.MutatorRecord
class DLL_IMPORT FMutatorRecord
{
public:
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     FriendlyName;                                     		// 0x000C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x0018 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     IconMaterialName;                                 		// 0x0024 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     ConfigMenuClassName;                              		// 0x0030 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     GroupName;                                        		// 0x003C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	int                                                RecordIndex;                                      		// 0x0048 ( 0x0004[ CPF_Const ]
	unsigned char                                      bActivated;                                       		// 0x004C ( 0x0001[ CPF_Const ]

	// Public Imports
	FMutatorRecord(struct FMutatorRecord const &);
	FMutatorRecord(void);
	~FMutatorRecord(void);
	struct FMutatorRecord &  operator=(struct FMutatorRecord const &);
}; // Size: 0x0050

// Struct Engine.CacheManager.GameRecord
class DLL_IMPORT FGameRecord
{
public:
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     GameName;                                         		// 0x000C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x0018 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     TextName;                                         		// 0x0024 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     GameAcronym;                                      		// 0x0030 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     MapListClassName;                                 		// 0x003C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     MapPrefix;                                        		// 0x0048 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     ScreenshotRef;                                    		// 0x0054 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     HUDMenu;                                          		// 0x0060 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     RulesMenu;                                        		// 0x006C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	unsigned long                                      bTeamGame:1;                                      		// 0x0078 ( 0x0004 [0x00000001][ CPF_Edit | CPF_Const ]
	unsigned char                                      GameTypeGroup;                                    		// 0x007C ( 0x0001[ CPF_Edit | CPF_Const ]
	int                                                RecordIndex;                                      		// 0x0080 ( 0x0004[ CPF_Const ]

	// Public Imports
	FGameRecord(struct FGameRecord const &);
	FGameRecord(void);
	~FGameRecord(void);
	struct FGameRecord &  operator=(struct FGameRecord const &);
}; // Size: 0x0084

// Struct Engine.ClanMarkManager.sClanNameAndMark
struct DLL_IMPORT FsClanNameAndMark
{
	struct FString                                     ClanName;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                Pattern;                                          		// 0x000C ( 0x0004
	int                                                BG;                                               		// 0x0010 ( 0x0004
	int                                                BL;                                               		// 0x0014 ( 0x0004
	unsigned long                                      bClanLF:1;                                        		// 0x0018 ( 0x0004 [0x00000001]
	int                                                ClanLevel;                                        		// 0x001C ( 0x0004
}; // Size: 0x0020

// Struct Engine.AnnouncerQueueManager.QueueItem
struct DLL_IMPORT FQueueItem
{
	struct FString                                     Voice;                                            		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	float                                              Delay;                                            		// 0x000C ( 0x0004
	unsigned char                                      Switch;                                           		// 0x0010 ( 0x0001
}; // Size: 0x0014

// Struct Engine.XBoxPlayerInput.LookPreset
struct DLL_IMPORT FLookPreset
{
	struct FString                                     PresetName;                                       		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	float                                              HScale;                                           		// 0x000C ( 0x0004[ CPF_Edit ]
	float                                              HExponent;                                        		// 0x0010 ( 0x0004[ CPF_Edit ]
	float                                              VScale;                                           		// 0x0014 ( 0x0004[ CPF_Edit ]
	float                                              VExponent;                                        		// 0x0018 ( 0x0004[ CPF_Edit ]
}; // Size: 0x001C

// Struct Engine.wInventory.WeaponPart
class DLL_IMPORT FWeaponPart
{
public:
	unsigned char                                      byType;                                           		// 0x0000 ( 0x0001
	int                                                iID;                                              		// 0x0004 ( 0x0004
	struct FString                                     Name;                                             		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                Price;                                            		// 0x0014 ( 0x0004

	// Public Imports
	FWeaponPart(struct FWeaponPart const &);
	FWeaponPart(void);
	~FWeaponPart(void);
	struct FWeaponPart &  operator=(struct FWeaponPart const &);
}; // Size: 0x0018

// Struct Engine.DripEffect.WaterDrop
class DLL_IMPORT FWaterDrop
{
public:
	float                                              WaterPointX;                                      		// 0x0000 ( 0x0004
	float                                              WaterPointY;                                      		// 0x0004 ( 0x0004
	float                                              WaterScale;                                       		// 0x0008 ( 0x0004
	float                                              WaterColor;                                       		// 0x000C ( 0x0004
	float                                              WaterLifeTime;                                    		// 0x0010 ( 0x0004

	// Public Imports
	FWaterDrop(float,float,float,float,float);
	struct FWaterDrop &  operator=(struct FWaterDrop const &);
	int  operator==(struct FWaterDrop const &)const ;
}; // Size: 0x0014

// Struct Engine.WeaponAttachment.stMultiBulletPerFire
class DLL_IMPORT FstMultiBulletPerFire
{
public:
	class AActor*                                      mHitActor[ 0x06 ];                                		// 0x0000 ( 0x0018
	struct FVector                                     mHitNormal[ 0x06 ];                               		// 0x0018 ( 0x0048
	unsigned char                                      mCollisionPart[ 0x06 ];                           		// 0x0060 ( 0x0006
	class UMaterial*                                   mHitMaterial[ 0x06 ];                             		// 0x0068 ( 0x0018
	struct FVector                                     mvEffLocation[ 0x06 ];                            		// 0x0080 ( 0x0048
	int                                                mLastHitIdx;                                      		// 0x00C8 ( 0x0004

	// Public Imports
	FstMultiBulletPerFire(void);
	struct FstMultiBulletPerFire &  operator=(struct FstMultiBulletPerFire const &);
}; // Size: 0x00CC

// Struct Engine.PlayInfo.PlayInfoData
class DLL_IMPORT FPlayInfoData
{
public:
	class UProperty*                                   ThisProp;                                         		// 0x0000 ( 0x0004[ CPF_Const ]
	class UClass*                                      ClassFrom;                                        		// 0x0004 ( 0x0004[ CPF_Const ]
	struct FString                                     SettingName;                                      		// 0x0008 ( 0x000C[ CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     DisplayName;                                      		// 0x0014 ( 0x000C[ CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x0020 ( 0x000C[ CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Grouping;                                         		// 0x002C ( 0x000C[ CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Data;                                             		// 0x0038 ( 0x000C[ CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     ExtraPriv;                                        		// 0x0044 ( 0x000C[ CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0050 ( 0x000C[ CPF_Const | CPF_NeedCtorLink ]
	unsigned char                                      RenderType;                                       		// 0x005C ( 0x0001[ CPF_Const ]
	unsigned char                                      SecLevel;                                         		// 0x005D ( 0x0001[ CPF_Const ]
	unsigned char                                      Weight;                                           		// 0x005E ( 0x0001[ CPF_Const ]
	unsigned long                                      bMPOnly:1;                                        		// 0x0060 ( 0x0004 [0x00000001][ CPF_Const ]
	unsigned long                                      bAdvanced:1;                                      		// 0x0060 ( 0x0004 [0x00000002][ CPF_Const ]
	unsigned long                                      bGlobal:1;                                        		// 0x0060 ( 0x0004 [0x00000004][ CPF_Const ]
	unsigned long                                      bStruct:1;                                        		// 0x0060 ( 0x0004 [0x00000008][ CPF_Const ]
	int                                                ArrayDim;                                         		// 0x0064 ( 0x0004[ CPF_Const ]

	// Public Imports
	FPlayInfoData(struct FPlayInfoData const &);
	FPlayInfoData(void);
	~FPlayInfoData(void);
	struct FPlayInfoData &  operator=(struct FPlayInfoData const &);
}; // Size: 0x0068

// Struct Engine.MaplistRecord.MapItem
struct DLL_IMPORT FMapItem
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	struct FString                                     OptionString;                                     		// 0x000C ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	struct FString                                     FullURL;                                          		// 0x0018 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	class TArray< struct FKeyValuePair >               Options;                                          		// 0x0024 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
}; // Size: 0x0030

// Struct Engine.ParticleEmitter.ParticleColorScale
struct DLL_IMPORT FParticleColorScale
{
	float                                              RelativeTime;                                     		// 0x0000 ( 0x0004[ CPF_Edit ]
	class FColor                                       Color;                                            		// 0x0004 ( 0x0004[ CPF_Edit ]
}; // Size: 0x0008

// Struct Engine.ParticleEmitter.ParticleRevolutionScale
struct DLL_IMPORT FParticleRevolutionScale
{
	float                                              RelativeTime;                                     		// 0x0000 ( 0x0004[ CPF_Edit ]
	struct FVector                                     RelativeRevolution;                               		// 0x0004 ( 0x000C[ CPF_Edit ]
}; // Size: 0x0010

// Struct Engine.ParticleEmitter.ParticleTimeScale
struct DLL_IMPORT FParticleTimeScale
{
	float                                              RelativeTime;                                     		// 0x0000 ( 0x0004[ CPF_Edit ]
	float                                              RelativeSize;                                     		// 0x0004 ( 0x0004[ CPF_Edit ]
}; // Size: 0x0008

// Struct Engine.ParticleEmitter.ParticleSound
struct DLL_IMPORT FParticleSound
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Edit ]
	struct FRange                                      Radius;                                           		// 0x0004 ( 0x0008[ CPF_Edit ]
	struct FRange                                      Pitch;                                            		// 0x000C ( 0x0008[ CPF_Edit ]
	int                                                Weight;                                           		// 0x0014 ( 0x0004[ CPF_Edit ]
	struct FRange                                      Volume;                                           		// 0x0018 ( 0x0008[ CPF_Edit ]
	struct FRange                                      Probability;                                      		// 0x0020 ( 0x0008[ CPF_Edit ]
}; // Size: 0x0028

// Struct Engine.ParticleEmitter.Particle
struct DLL_IMPORT FParticle
{
	struct FVector                                     Location;                                         		// 0x0000 ( 0x000C
	struct FVector                                     OldLocation;                                      		// 0x000C ( 0x000C
	struct FVector                                     Velocity;                                         		// 0x0018 ( 0x000C
	struct FVector                                     StartSize;                                        		// 0x0024 ( 0x000C
	struct FVector                                     SpinsPerSecond;                                   		// 0x0030 ( 0x000C
	struct FVector                                     StartSpin;                                        		// 0x003C ( 0x000C
	struct FVector                                     RevolutionCenter;                                 		// 0x0048 ( 0x000C
	struct FVector                                     RevolutionsPerSecond;                             		// 0x0054 ( 0x000C
	struct FVector                                     RevolutionsMultiplier;                            		// 0x0060 ( 0x000C
	struct FVector                                     Size;                                             		// 0x006C ( 0x000C
	struct FVector                                     StartLocation;                                    		// 0x0078 ( 0x000C
	struct FVector                                     ColorMultiplier;                                  		// 0x0084 ( 0x000C
	struct FVector                                     VelocityMultiplier;                               		// 0x0090 ( 0x000C
	struct FVector                                     OldMeshLocation;                                  		// 0x009C ( 0x000C
	class FColor                                       Color;                                            		// 0x00A8 ( 0x0004
	float                                              Time;                                             		// 0x00AC ( 0x0004
	float                                              MaxLifetime;                                      		// 0x00B0 ( 0x0004
	float                                              Mass;                                             		// 0x00B4 ( 0x0004
	int                                                HitCount;                                         		// 0x00B8 ( 0x0004
	int                                                Flags;                                            		// 0x00BC ( 0x0004
	int                                                Subdivision;                                      		// 0x00C0 ( 0x0004
	int                                                BoneIndex;                                        		// 0x00C4 ( 0x0004
}; // Size: 0x00C8

// Struct Engine.ParticleEmitter.ParticleVelocityScale
struct DLL_IMPORT FParticleVelocityScale
{
	float                                              RelativeTime;                                     		// 0x0000 ( 0x0004[ CPF_Edit ]
	struct FVector                                     RelativeVelocity;                                 		// 0x0004 ( 0x000C[ CPF_Edit ]
}; // Size: 0x0010

// Struct Engine.CacheManager.AnnouncerRecord
class DLL_IMPORT FAnnouncerRecord
{
public:
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     FriendlyName;                                     		// 0x000C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     PackageName;                                      		// 0x0018 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     FallbackPackage;                                  		// 0x0024 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	unsigned long                                      bEnglishOnly:1;                                   		// 0x0030 ( 0x0004 [0x00000001][ CPF_Edit | CPF_Const ]
	int                                                RecordIndex;                                      		// 0x0034 ( 0x0004[ CPF_Const ]

	// Public Imports
	FAnnouncerRecord(struct FAnnouncerRecord const &);
	FAnnouncerRecord(void);
	~FAnnouncerRecord(void);
	struct FAnnouncerRecord &  operator=(struct FAnnouncerRecord const &);
}; // Size: 0x0038

// Struct Engine.CacheManager.CrosshairRecord
class DLL_IMPORT FCrosshairRecord
{
public:
	struct FString                                     FriendlyName;                                     		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	class UTexture*                                    CrosshairTexture;                                 		// 0x000C ( 0x0004[ CPF_Edit | CPF_Const ]
	int                                                RecordIndex;                                      		// 0x0010 ( 0x0004[ CPF_Const ]

	// Public Imports
	FCrosshairRecord(struct FCrosshairRecord const &);
	FCrosshairRecord(void);
	~FCrosshairRecord(void);
	struct FCrosshairRecord &  operator=(struct FCrosshairRecord const &);
}; // Size: 0x0014

// Struct Engine.CacheManager.VehicleRecord
class DLL_IMPORT FVehicleRecord
{
public:
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     FriendlyName;                                     		// 0x000C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x0018 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	int                                                RecordIndex;                                      		// 0x0024 ( 0x0004[ CPF_Const ]

	// Public Imports
	FVehicleRecord(struct FVehicleRecord const &);
	FVehicleRecord(void);
	~FVehicleRecord(void);
	struct FVehicleRecord &  operator=(struct FVehicleRecord const &);
}; // Size: 0x0028

// Struct Engine.CacheManager.WeaponRecord
class DLL_IMPORT FWeaponRecord
{
public:
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     PickupClassName;                                  		// 0x000C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     AttachmentClassName;                              		// 0x0018 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x0024 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     TextName;                                         		// 0x0030 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	struct FString                                     FriendlyName;                                     		// 0x003C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	int                                                RecordIndex;                                      		// 0x0048 ( 0x0004[ CPF_Const ]

	// Public Imports
	FWeaponRecord(struct FWeaponRecord const &);
	FWeaponRecord(void);
	~FWeaponRecord(void);
	struct FWeaponRecord &  operator=(struct FWeaponRecord const &);
}; // Size: 0x004C

// Struct Engine.CacheManager.Standard
class DLL_IMPORT FStandard
{
public:
	class TArray< struct FString >                     Classes;                                          		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Maps;                                             		// 0x000C ( 0x000C[ CPF_Edit | CPF_Const | CPF_NeedCtorLink ]

	// Public Imports
	FStandard(struct FStandard const &);
	FStandard(void);
	~FStandard(void);
	struct FStandard &  operator=(struct FStandard const &);
}; // Size: 0x0018

// Struct Engine.VotingHandler.AccumulationData
struct DLL_IMPORT FAccumulationData
{
	struct FString                                     Name;                                             		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                VoteCount;                                        		// 0x000C ( 0x0004
}; // Size: 0x0010

// Struct Engine.VotingHandler.KickVoteScore
struct DLL_IMPORT FKickVoteScore
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004
	int                                                Team;                                             		// 0x0004 ( 0x0004
	int                                                KickVoteCount;                                    		// 0x0008 ( 0x0004
}; // Size: 0x000C

// Struct Engine.VotingHandler.MapVoteScore
struct DLL_IMPORT FMapVoteScore
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004
	int                                                GameConfigIndex;                                  		// 0x0004 ( 0x0004
	int                                                VoteCount;                                        		// 0x0008 ( 0x0004
}; // Size: 0x000C

// Struct Engine.VotingHandler.MapHistoryInfo
struct DLL_IMPORT FMapHistoryInfo
{
	struct FString                                     M;                                                		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                P;                                                		// 0x000C ( 0x0004
	int                                                S;                                                		// 0x0010 ( 0x0004
	struct FString                                     G;                                                		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     U;                                                		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
}; // Size: 0x002C

// Struct Engine.VotingHandler.MapVoteMapList
struct DLL_IMPORT FMapVoteMapList
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                PlayCount;                                        		// 0x000C ( 0x0004
	int                                                Sequence;                                         		// 0x0010 ( 0x0004
	unsigned long                                      bEnabled:1;                                       		// 0x0014 ( 0x0004 [0x00000001]
}; // Size: 0x0018

// Struct Engine.VotingHandler.MapVoteGameConfigLite
struct DLL_IMPORT FMapVoteGameConfigLite
{
	struct FString                                     GameClass;                                        		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Prefix;                                           		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     GameName;                                         		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
}; // Size: 0x0024

// Struct Engine.VotingHandler.MapVoteGameConfig
struct DLL_IMPORT FMapVoteGameConfig
{
	struct FString                                     GameClass;                                        		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Prefix;                                           		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Acronym;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     GameName;                                         		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Mutators;                                         		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Options;                                          		// 0x003C ( 0x000C[ CPF_NeedCtorLink ]
}; // Size: 0x0048

// Struct Engine.TerrainInfo.TerrainLayer
struct DLL_IMPORT FTerrainLayer
{
	class UMaterial*                                   Texture;                                          		// 0x0000 ( 0x0004[ CPF_Edit ]
	class UTexture*                                    AlphaMap;                                         		// 0x0004 ( 0x0004[ CPF_Edit ]
	float                                              UScale;                                           		// 0x0008 ( 0x0004[ CPF_Edit ]
	float                                              VScale;                                           		// 0x000C ( 0x0004[ CPF_Edit ]
	float                                              UPan;                                             		// 0x0010 ( 0x0004[ CPF_Edit ]
	float                                              VPan;                                             		// 0x0014 ( 0x0004[ CPF_Edit ]
	unsigned char                                      TextureMapAxis;                                   		// 0x0018 ( 0x0001[ CPF_Edit ]
	float                                              TextureRotation;                                  		// 0x001C ( 0x0004[ CPF_Edit ]
	struct FRotator                                    LayerRotation;                                    		// 0x0020 ( 0x000C[ CPF_Edit ]
	struct FMatrix                                     TerrainMatrix;                                    		// 0x002C ( 0x0040
	float                                              KFriction;                                        		// 0x006C ( 0x0004[ CPF_Edit ]
	float                                              KRestitution;                                     		// 0x0070 ( 0x0004[ CPF_Edit ]
	class UTexture*                                    LayerWeightMap;                                   		// 0x0074 ( 0x0004[ CPF_Transient ]
}; // Size: 0x0078

// Struct Engine.TerrainInfo.DecorationLayer
struct DLL_IMPORT FDecorationLayer
{
	int                                                ShowOnTerrain;                                    		// 0x0000 ( 0x0004[ CPF_Edit ]
	class UTexture*                                    ScaleMap;                                         		// 0x0004 ( 0x0004[ CPF_Edit ]
	class UTexture*                                    DensityMap;                                       		// 0x0008 ( 0x0004[ CPF_Edit ]
	class UTexture*                                    ColorMap;                                         		// 0x000C ( 0x0004[ CPF_Edit ]
	class UStaticMesh*                                 StaticMesh;                                       		// 0x0010 ( 0x0004[ CPF_Edit ]
	struct FRangeVector                                ScaleMultiplier;                                  		// 0x0014 ( 0x0018[ CPF_Edit ]
	struct FRange                                      FadeoutRadius;                                    		// 0x002C ( 0x0008[ CPF_Edit ]
	struct FRange                                      DensityMultiplier;                                		// 0x0034 ( 0x0008[ CPF_Edit ]
	int                                                MaxPerQuad;                                       		// 0x003C ( 0x0004[ CPF_Edit ]
	int                                                Seed;                                             		// 0x0040 ( 0x0004[ CPF_Edit ]
	int                                                AlignToTerrain;                                   		// 0x0044 ( 0x0004[ CPF_Edit ]
	unsigned char                                      DrawOrder;                                        		// 0x0048 ( 0x0001[ CPF_Edit ]
	int                                                ShowOnInvisibleTerrain;                           		// 0x004C ( 0x0004[ CPF_Edit ]
	int                                                LitDirectional;                                   		// 0x0050 ( 0x0004[ CPF_Edit ]
	int                                                DisregardTerrainLighting;                         		// 0x0054 ( 0x0004[ CPF_Edit ]
	int                                                RandomYaw;                                        		// 0x0058 ( 0x0004[ CPF_Edit ]
	unsigned char                                      DetailMode;                                       		// 0x005C ( 0x0001[ CPF_Edit ]
}; // Size: 0x0060

// Struct Engine.TerrainInfo.DecoInfo
struct DLL_IMPORT FDecoInfo
{
	struct FVector                                     Location;                                         		// 0x0000 ( 0x000C
	struct FRotator                                    Rotation;                                         		// 0x000C ( 0x000C
	struct FVector                                     Scale;                                            		// 0x0018 ( 0x000C
	struct FVector                                     TempScale;                                        		// 0x0024 ( 0x000C
	class FColor                                       Color;                                            		// 0x0030 ( 0x0004
	int                                                Distance;                                         		// 0x0034 ( 0x0004
}; // Size: 0x0038

// Struct Engine.TerrainInfo.DecoSectorInfo
struct DLL_IMPORT FDecoSectorInfo
{
	class TArray< struct FDecoInfo >                   DecoInfo;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FVector                                     Location;                                         		// 0x000C ( 0x000C
	float                                              Radius;                                           		// 0x0018 ( 0x0004
}; // Size: 0x001C

// Struct Engine.TerrainInfo.DecorationLayerData
struct DLL_IMPORT FDecorationLayerData
{
	class TArray< struct FDecoSectorInfo >             Sectors;                                          		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
}; // Size: 0x000C

// Struct Engine.TerrainInfo.NormalPair
struct DLL_IMPORT FNormalPair
{
	struct FVector                                     Normal1;                                          		// 0x0000 ( 0x000C
	struct FVector                                     Normal2;                                          		// 0x000C ( 0x000C
}; // Size: 0x0018

// Struct Engine.SceneManager.Orientation
class DLL_IMPORT FOrientation
{
public:
	unsigned char                                      CamOrientation;                                   		// 0x0000 ( 0x0001[ CPF_Edit ]
	class AActor*                                      LookAt;                                           		// 0x0004 ( 0x0004[ CPF_Edit ]
	class AActor*                                      DollyWith;                                        		// 0x0008 ( 0x0004[ CPF_Edit ]
	float                                              EaseIntime;                                       		// 0x000C ( 0x0004[ CPF_Edit ]
	int                                                bReversePitch;                                    		// 0x0010 ( 0x0004[ CPF_Edit ]
	int                                                bReverseYaw;                                      		// 0x0014 ( 0x0004[ CPF_Edit ]
	int                                                bReverseRoll;                                     		// 0x0018 ( 0x0004[ CPF_Edit ]
	void*                                              MA;                                               		// 0x001C ( 0x0004[ CPF_Transient ]
	float                                              PctInStart;                                       		// 0x0020 ( 0x0004
	float                                              PctInEnd;                                         		// 0x0024 ( 0x0004
	float                                              PctInDuration;                                    		// 0x0028 ( 0x0004
	struct FRotator                                    StartingRotation;                                 		// 0x002C ( 0x000C

	// Public Imports
	FOrientation(void);
	struct FOrientation &  operator=(struct FOrientation);
	int  operator!=(struct FOrientation const &)const ;
}; // Size: 0x0038

// Struct Engine.SceneManager.Interpolator
struct DLL_IMPORT FInterpolator
{
	int                                                bDone;                                            		// 0x0000 ( 0x0004[ CPF_Edit ]
	float                                              _value;                                           		// 0x0004 ( 0x0004[ CPF_Edit ]
	float                                              _remainingTime;                                   		// 0x0008 ( 0x0004[ CPF_Edit ]
	float                                              _totalTime;                                       		// 0x000C ( 0x0004[ CPF_Edit ]
	float                                              _speed;                                           		// 0x0010 ( 0x0004[ CPF_Edit ]
	float                                              _acceleration;                                    		// 0x0014 ( 0x0004[ CPF_Edit ]
}; // Size: 0x0018

// Struct Engine.MaplistManager.MaplistRecordGroup
struct DLL_IMPORT FMaplistRecordGroup
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                Active;                                           		// 0x000C ( 0x0004
	int                                                LastActive;                                       		// 0x0010 ( 0x0004
	class TArray< struct FMapItem >                    AllMaps;                                          		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< class UMaplistRecord* >              Records;                                          		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
}; // Size: 0x002C

// Struct Engine.MaplistManager.GameRecordGroup
struct DLL_IMPORT FGameRecordGroup
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
	struct FString                                     ActiveMaplist;                                    		// 0x000C ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
}; // Size: 0x0018

// Struct Engine.UserzoneInfo.SUserGroupInfo
class DLL_IMPORT FSUserGroupInfo
{
public:
	int                                                nGroupIndex;                                      		// 0x0000 ( 0x0004
	int                                                nCalcTime;                                        		// 0x0004 ( 0x0004

	// Public Imports
	struct FSUserGroupInfo &  operator=(struct FSUserGroupInfo const &);
}; // Size: 0x0008

// Struct Engine.ParticleMaterial.ParticleProjectorInfo
struct DLL_IMPORT FParticleProjectorInfo
{
	class UBitmapMaterial*                             BitmapMaterial;                                   		// 0x0000 ( 0x0004
	struct FMatrix                                     Matrix;                                           		// 0x0004 ( 0x0040
	int                                                Projected;                                        		// 0x0044 ( 0x0004
	int                                                BlendMode;                                        		// 0x0048 ( 0x0004
}; // Size: 0x004C

// Struct Engine.DecorationList.DecorationType
struct DLL_IMPORT FDecorationType
{
	class UStaticMesh*                                 StaticMesh;                                       		// 0x0000 ( 0x0004[ CPF_Edit ]
	struct FRange                                      Count;                                            		// 0x0004 ( 0x0008[ CPF_Edit ]
	struct FRange                                      DrawScale;                                        		// 0x000C ( 0x0008[ CPF_Edit ]
	int                                                bAlign;                                           		// 0x0014 ( 0x0004[ CPF_Edit ]
	int                                                bRandomPitch;                                     		// 0x0018 ( 0x0004[ CPF_Edit ]
	int                                                bRandomYaw;                                       		// 0x001C ( 0x0004[ CPF_Edit ]
	int                                                bRandomRoll;                                      		// 0x0020 ( 0x0004[ CPF_Edit ]
}; // Size: 0x0024

// Struct Engine.StreamBase.FilePath
class DLL_IMPORT FFilePath
{
public:
	struct FString                                     FullPath;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Directory;                                        		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     fileName;                                         		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Extension;                                        		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FString >                     DirectoryParts;                                   		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FFilePath(class TArray<class FString> &,unsigned short const *,unsigned short const *,unsigned short const *);
	FFilePath(struct FFilePath const &);
	FFilePath(unsigned short const *,unsigned short const *,unsigned short const *);
	FFilePath(unsigned short const *);
	FFilePath(void);
	~FFilePath(void);
	struct FFilePath &  operator=(struct FFilePath const &);
}; // Size: 0x003C

// Struct Engine.StreamBase.ID3Field
class DLL_IMPORT FID3Field
{
public:
	void*                                              Reference;                                        		// 0x0000 ( 0x0004[ CPF_Transient ]
	struct FString                                     FieldName;                                        		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     FieldValue;                                       		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
	unsigned char                                      FieldID;                                          		// 0x001C ( 0x0001
	unsigned char                                      Code[ 0x04 ];                                     		// 0x001D ( 0x0004

	// Public Imports
	FID3Field(struct FID3Field const &);
	FID3Field(unsigned long,unsigned char);
	FID3Field(struct FID3V2Frame const *);
	~FID3Field(void);
	struct FID3Field &  operator=(struct FID3Field const &);
}; // Size: 0x0024

// Struct Engine.StreamPlaylistManager.PlaylistParser
struct DLL_IMPORT FPlaylistParser
{
	unsigned char                                      Type;                                             		// 0x0000 ( 0x0001[ CPF_Edit ]
	struct FString                                     ParserClass;                                      		// 0x0004 ( 0x000C[ CPF_Edit | CPF_NeedCtorLink ]
}; // Size: 0x0010

// Struct Engine.PlaylistParserBase.HtmlChar
struct DLL_IMPORT FHtmlChar
{
	struct FString                                     Plain;                                            		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Coded;                                            		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
}; // Size: 0x0018

// Struct Engine.wBTLoadingScreenDrawer.OtherLoadingStateItem
class DLL_IMPORT FOtherLoadingStateItem
{
public:
	struct FLoadingMessageItem                         LoadingMsgItem;                                   		// 0x0000 ( 0x001C[ CPF_NeedCtorLink ]
	struct FString                                     strLoadingMsg;                                    		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FOtherLoadingStateItem(struct FOtherLoadingStateItem const &);
	FOtherLoadingStateItem(void);
	~FOtherLoadingStateItem(void);
	struct FOtherLoadingStateItem &  operator=(struct FOtherLoadingStateItem const &);
}; // Size: 0x0028

// Struct Engine.TrailEmitter.ParticleTrailData
struct DLL_IMPORT FParticleTrailData
{
	struct FVector                                     Location;                                         		// 0x0000 ( 0x000C
	class FColor                                       Color;                                            		// 0x000C ( 0x0004
	float                                              Size;                                             		// 0x0010 ( 0x0004
	int                                                DoubleDummy1;                                     		// 0x0014 ( 0x0004
	int                                                DoubleDummy2;                                     		// 0x0018 ( 0x0004
}; // Size: 0x001C

// Struct Engine.TrailEmitter.ParticleTrailInfo
struct DLL_IMPORT FParticleTrailInfo
{
	int                                                TrailIndex;                                       		// 0x0000 ( 0x0004
	int                                                NumPoints;                                        		// 0x0004 ( 0x0004
	struct FVector                                     LastLocation;                                     		// 0x0008 ( 0x000C
	struct FVector                                     LastEmitterLocation;                              		// 0x0014 ( 0x000C
}; // Size: 0x0020

// Struct Engine.TerrainMaterial.TerrainMaterialLayer
class DLL_IMPORT FTerrainMaterialLayer
{
public:
	class UMaterial*                                   Texture;                                          		// 0x0000 ( 0x0004
	class UBitmapMaterial*                             AlphaWeight;                                      		// 0x0004 ( 0x0004
	struct FMatrix                                     TextureMatrix;                                    		// 0x0008 ( 0x0040

	// Public Imports
	FTerrainMaterialLayer(void);
	~FTerrainMaterialLayer(void);
	struct FTerrainMaterialLayer &  operator=(struct FTerrainMaterialLayer const &);
}; // Size: 0x0048

// Struct Engine.SparkEmitter.ParticleSparkData
struct DLL_IMPORT FParticleSparkData
{
	float                                              TimeBeforeVisible;                                		// 0x0000 ( 0x0004
	float                                              TimeBetweenSegments;                              		// 0x0004 ( 0x0004
	struct FVector                                     StartLocation;                                    		// 0x0008 ( 0x000C
	struct FVector                                     StartVelocity;                                    		// 0x0014 ( 0x000C
}; // Size: 0x0020

// Struct Engine.HardwareShader.SConstantsInfo
struct DLL_IMPORT FSConstantsInfo
{
	unsigned char                                      Type;                                             		// 0x0000 ( 0x0001[ CPF_Edit ]
	struct FPlane                                      Value;                                            		// 0x0004 ( 0x0010[ CPF_Edit ]
}; // Size: 0x0014

// Struct Engine.MaterialSequence.MaterialSequenceItem
class DLL_IMPORT FMaterialSequenceItem
{
public:
	class UMaterial*                                   Material;                                         		// 0x0000 ( 0x0004[ CPF_Edit | CPF_EditInline | CPF_EditInlineUse ]
	float                                              Time;                                             		// 0x0004 ( 0x0004[ CPF_Edit ]
	unsigned char                                      Action;                                           		// 0x0008 ( 0x0001[ CPF_Edit ]

	// Public Imports
	struct FMaterialSequenceItem &  operator=(struct FMaterialSequenceItem const &);
}; // Size: 0x000C

// Struct Engine.CrosshairPack.CrosshairItem
class DLL_IMPORT FCrosshairItem
{
public:
	struct FString                                     FriendlyName;                                     		// 0x0000 ( 0x000C[ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	class UTexture*                                    CrosshairTexture;                                 		// 0x000C ( 0x0004[ CPF_Edit ]

	// Public Imports
	FCrosshairItem(struct FCrosshairItem const &);
	FCrosshairItem(void);
	~FCrosshairItem(void);
	struct FCrosshairItem &  operator=(struct FCrosshairItem const &);
}; // Size: 0x0010

// Struct Engine.BeamEmitter.ParticleBeamEndPoint
struct DLL_IMPORT FParticleBeamEndPoint
{
	struct FName                                       ActorTag;                                         		// 0x0000 ( 0x0004[ CPF_Edit ]
	struct FRangeVector                                offset;                                           		// 0x0004 ( 0x0018[ CPF_Edit ]
	float                                              Weight;                                           		// 0x001C ( 0x0004[ CPF_Edit ]
}; // Size: 0x0020

// Struct Engine.BeamEmitter.ParticleBeamData
struct DLL_IMPORT FParticleBeamData
{
	struct FVector                                     Location;                                         		// 0x0000 ( 0x000C
	float                                              t;                                                		// 0x000C ( 0x0004
}; // Size: 0x0010

// Struct Engine.BeamEmitter.ParticleBeamScale
struct DLL_IMPORT FParticleBeamScale
{
	struct FVector                                     FrequencyScale;                                   		// 0x0000 ( 0x000C[ CPF_Edit ]
	float                                              RelativeLength;                                   		// 0x000C ( 0x0004[ CPF_Edit ]
}; // Size: 0x0010

// Struct Engine.AmbientLightVolume.AmbientCube
struct DLL_IMPORT FAmbientCube
{
	class FColor                                       cAmbientCube[ 0x06 ];                             		// 0x0000 ( 0x0018
}; // Size: 0x0018

// Struct Engine.TextToSpeechAlias.SpeechReplacement
class DLL_IMPORT FSpeechReplacement
{
public:
	class TArray< struct FString >                     MatchWords;                                       		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ReplaceWord;                                      		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]

	// Public Imports
	FSpeechReplacement(struct FSpeechReplacement const &);
	FSpeechReplacement(void);
	~FSpeechReplacement(void);
	struct FSpeechReplacement &  operator=(struct FSpeechReplacement const &);
}; // Size: 0x0018

// Struct Engine.AmbientSound.SoundEmitter
class DLL_IMPORT FSoundEmitter
{
public:
	float                                              EmitInterval;                                     		// 0x0000 ( 0x0004[ CPF_Edit ]
	float                                              EmitVariance;                                     		// 0x0004 ( 0x0004[ CPF_Edit ]
	float                                              EmitTime;                                         		// 0x0008 ( 0x0004[ CPF_Transient ]
	class USound*                                      EmitSound;                                        		// 0x000C ( 0x0004[ CPF_Edit ]

	// Public Imports
	struct FSoundEmitter &  operator=(struct FSoundEmitter const &);
}; // Size: 0x0010

// Struct Engine.wWeatherEffect.WeatherPcl
class DLL_IMPORT FWeatherPcl
{
public:
	struct FVector                                     pos;                                              		// 0x0000 ( 0x000C
	struct FVector                                     Vel;                                              		// 0x000C ( 0x000C
	float                                              Life;                                             		// 0x0018 ( 0x0004
	float                                              Size;                                             		// 0x001C ( 0x0004
	float                                              HitTime;                                          		// 0x0020 ( 0x0004
	float                                              InvLifeSpan;                                      		// 0x0024 ( 0x0004
	float                                              DistAtten;                                        		// 0x0028 ( 0x0004
	unsigned char                                      frame;                                            		// 0x002C ( 0x0001
	unsigned char                                      Dummy1;                                           		// 0x002D ( 0x0001
	unsigned char                                      Visible;                                          		// 0x002E ( 0x0001
	unsigned char                                      Dummy2;                                           		// 0x002F ( 0x0001

	// Public Imports
	FWeatherPcl(void);
	struct FWeatherPcl &  operator=(struct FWeatherPcl const &);
}; // Size: 0x0030

// Struct Engine.wProcMesh.ProcMeshVertex
class DLL_IMPORT FProcMeshVertex
{
public:
	struct FVector                                     Position;                                         		// 0x0000 ( 0x000C
	struct FVector                                     Normal;                                           		// 0x000C ( 0x000C
	class FColor                                       Color;                                            		// 0x0018 ( 0x0004
	float                                              U;                                                		// 0x001C ( 0x0004
	float                                              V;                                                		// 0x0020 ( 0x0004

	// Public Imports
	FProcMeshVertex(void);
	struct FProcMeshVertex &  operator=(struct FProcMeshVertex const &);
}; // Size: 0x0024

// Struct Engine.Input.Alias
struct DLL_IMPORT FAlias
{
	struct FName                                       Alias;                                            		// 0x0000 ( 0x0004[ CPF_Config ]
	struct FString                                     Command;                                          		// 0x0004 ( 0x000C[ CPF_Config | CPF_NeedCtorLink ]
}; // Size: 0x0010

// Struct Engine.Effect_ShadowController.LightGroup
struct DLL_IMPORT FLightGroup
{
	float                                              Priority;                                         		// 0x0000 ( 0x0004
	class AActor*                                      CurrentLight;                                     		// 0x0004 ( 0x0004
	class AActor*                                      LastLight;                                        		// 0x0008 ( 0x0004
}; // Size: 0x000C

#ifdef _MSC_VER
#pragma pack ( pop )
#endif

