#pragma once
/*
# ======================================================================================== #
# > ArcticCombat SDK
# > Generated By HJSdkGen v1.06b
# ---------------------------------------------------------------------------------------- #
# > Package : Engine
# >    File : ParamStructs.h
# ======================================================================================== #
*/

#ifdef _MSC_VER
#pragma pack ( push, 4 )
#endif

// Function Engine.wWeaponBaseParams.GetCrosshairType
// Flags: 
struct UwWeaponBaseParams_execGetCrosshairType_Parms
{
	struct FString                                     szValue;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponBaseParams.GetReloadType
// Flags: 
struct UwWeaponBaseParams_execGetReloadType_Parms
{
	struct FString                                     szValue;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponBaseParams.GetProjMoveType
// Flags: 
struct UwWeaponBaseParams_execGetProjMoveType_Parms
{
	struct FString                                     szValue;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponBaseParams.GetBulletType
// Flags: 
struct UwWeaponBaseParams_execGetBulletType_Parms
{
	struct FString                                     szValue;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponManager.PrecacheSound
// Flags: 
struct UwWeaponManager_execPrecacheSound_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
};

// Function Engine.wWeaponManager.PrecacheMaterials
// Flags: 
struct UwWeaponManager_execPrecacheMaterials_Parms
{
	class ALevelInfo*                                  Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                lp1;                                              		// 0x0004 ( 0x0004
};

// Function Engine.wWeaponManager.PrecacheClasses
// Flags: 
struct UwWeaponManager_execPrecacheClasses_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
};

// Function Engine.wWeaponManager.GetBaseParam
// Flags: [ FUNC_Event ]
struct UwWeaponManager_eventGetBaseParam_Parms
{
	int                                                id;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwWeaponBaseParams*                          ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                iLength;                                          		// 0x0008 ( 0x0004
//	int                                                iTemp;                                            		// 0x000C ( 0x0004
};

// Function Engine.wWeaponManager.LoadWeaponExParams
// Flags: 
struct UwWeaponManager_execLoadWeaponExParams_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	int                                                iIndex;                                           		// 0x0004 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0008 ( 0x0004 [0x00000001]
	struct FString                                     strData;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wWeaponManager.AddParams
// Flags: 
struct UwWeaponManager_execAddParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwWeaponBaseParams*                          wParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	int                                                iLength;                                          		// 0x000C ( 0x0004
	struct FString                                     strTemp;                                          		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wWeaponManager.LoadWeaponParams
// Flags: 
struct UwWeaponManager_execLoadWeaponParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wWeaponManager.AddWeaponRecoilParams
// Flags: 
struct UwWeaponManager_execAddWeaponRecoilParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iIndex;                                           		// 0x0004 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0014 ( 0x0004
	int                                                j;                                                		// 0x0018 ( 0x0004
	int                                                bounding_max;                                     		// 0x001C ( 0x0004
	int                                                ItemID;                                           		// 0x0020 ( 0x0004
	struct FString                                     strAim;                                           		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FString >                     strForTrim;                                       		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wWeaponManager.LoadWeaponRecoilParams
// Flags: 
struct UwWeaponManager_execLoadWeaponRecoilParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wWeaponManager.GetRes
// Flags: 
struct UwWeaponManager_execGetRes_Parms
{
	struct FString                                     szRes;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UClass*                                      ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wWeaponManager.InitWeaponPrecacheClasses
// Flags: [ FUNC_Event ]
struct UwWeaponManager_eventInitWeaponPrecacheClasses_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wWeaponManager.LoadWeaponRes
// Flags: [ FUNC_Event ]
struct UwWeaponManager_eventLoadWeaponRes_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wWeaponManager.DestroyScript
// Flags: [ FUNC_Event ]
struct UwWeaponManager_eventDestroyScript_Parms
{
};

// Function Engine.wWeaponManager.InitScript
// Flags: [ FUNC_Event ]
struct UwWeaponManager_eventInitScript_Parms
{
};

// Function Engine.ObjectPool.Shrink
// Flags: [ FUNC_Simulated ]
struct UObjectPool_execShrink_Parms
{
};

// Function Engine.ObjectPool.FreeObjectDupCheck
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct UObjectPool_execFreeObjectDupCheck_Parms
{
	class UObject*                                     obj;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UObject*                                     ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.ObjectPool.FreeObject
// Flags: [ FUNC_Simulated ]
struct UObjectPool_execFreeObject_Parms
{
	class UObject*                                     obj;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UObject*                                     ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.ObjectPool.AllocateObject
// Flags: [ FUNC_Simulated ]
struct UObjectPool_execAllocateObject_Parms
{
	class UClass*                                      ObjectClass;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UObject*                                     ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UObject*                                     Result;                                           		// 0x0008 ( 0x0004
};

// Function Engine.ObjectPool.PopObject
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct UObjectPool_execPopObject_Parms
{
	class UClass*                                      ObjectClass;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UObject*                                     ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAILevelBase.ClearReferences
// Flags: 
struct AwAILevelBase_execClearReferences_Parms
{
};

// Function Engine.wAILevelBase.KillBotsTeam
// Flags: 
struct AwAILevelBase_execKillBotsTeam_Parms
{
	int                                                Num;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                inTeam;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAILevelBase.KillBots
// Flags: 
struct AwAILevelBase_execKillBots_Parms
{
	int                                                Num;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAILevelBase.KillBot
// Flags: 
struct AwAILevelBase_execKillBot_Parms
{
	class AAIController*                               Bot;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAILevelBase.Initialize
// Flags: 
struct AwAILevelBase_execInitialize_Parms
{
};

// Function Engine.Actor.OnEndRound
// Flags: 
struct AActor_execOnEndRound_Parms
{
};

// Function Engine.Actor.OnBeginRound
// Flags: 
struct AActor_execOnBeginRound_Parms
{
};

// Function Engine.Actor.SunLightDirectionUpdate
// Flags: [ FUNC_Event ]
struct AActor_eventSunLightDirectionUpdate_Parms
{
	struct FVector                                     direction;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Actor.BlocksShotAt
// Flags: 
struct AActor_execBlocksShotAt_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PawnBaseDied
// Flags: 
struct AActor_execPawnBaseDied_Parms
{
};

// Function Engine.Actor.RecoverFromHostChange
// Flags: 
struct AActor_execRecoverFromHostChange_Parms
{
};

// Function Engine.Actor.GetAngleH
// Flags: 
struct AActor_execGetAngleH_Parms
{
	struct FVector                                     V;                                                		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetDotH
// Flags: 
struct AActor_execGetDotH_Parms
{
	struct FVector                                     V;                                                		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              Dot;                                              		// 0x0010 ( 0x0004
//	struct FVector                                     X;                                                		// 0x0014 ( 0x000C
//	struct FVector                                     Y;                                                		// 0x0020 ( 0x000C
//	struct FVector                                     Z;                                                		// 0x002C ( 0x000C
//	struct FVector                                     Dir;                                              		// 0x0038 ( 0x000C
};

// Function Engine.Actor.IsStationary
// Flags: 
struct AActor_execIsStationary_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.InitBot
// Flags: 
struct AActor_execInitBot_Parms
{
	int                                                Grade;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.rpclog
// Flags: [ FUNC_Event ]
struct AActor_eventrpclog_Parms
{
	struct FString                                     rpc;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.dblog
// Flags: [ FUNC_Event ]
struct AActor_eventdblog_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.crlog
// Flags: 
struct AActor_execcrlog_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.clog
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AActor_eventclog_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.ctlog
// Flags: [ FUNC_Event ]
struct AActor_eventctlog_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.alllog
// Flags: [ FUNC_Event ]
struct AActor_eventalllog_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.NotifyLocalPlayerTeamReceived
// Flags: 
struct AActor_execNotifyLocalPlayerTeamReceived_Parms
{
};

// Function Engine.Actor.NotifyLocalPlayerDead
// Flags: 
struct AActor_execNotifyLocalPlayerDead_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.SetDelayedDamageInstigatorController
// Flags: 
struct AActor_execSetDelayedDamageInstigatorController_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.TeamLink
// Flags: 
struct AActor_execTeamLink_Parms
{
	int                                                TeamNum;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SelfTriggered
// Flags: 
struct AActor_execSelfTriggered_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.EffectIsRelevant
// Flags: [ FUNC_Simulated ]
struct AActor_execEffectIsRelevant_Parms
{
	struct FVector                                     SpawnLocation;                                    		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      bForceDedicated:1;                                		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           P;                                                		// 0x0014 ( 0x0004
//	unsigned long                                      bResult:1;                                        		// 0x0018 ( 0x0004 [0x00000001]
};

// Function Engine.Actor.CheckMaxEffectDistance
// Flags: [ FUNC_Simulated ]
struct AActor_execCheckMaxEffectDistance_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     SpawnLocation;                                    		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SetOverlayMaterial
// Flags: [ FUNC_Simulated ]
struct AActor_execSetOverlayMaterial_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Time;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bOverride:1;                                      		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.Crash
// Flags: 
struct AActor_execCrash_Parms
{
};

// Function Engine.Actor.GetCollisionExtent
// Flags: 
struct AActor_execGetCollisionExtent_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     Extent;                                           		// 0x000C ( 0x000C
};

// Function Engine.Actor.CanSplash
// Flags: [ FUNC_Simulated ]
struct AActor_execCanSplash_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PlayTeleportEffect
// Flags: 
struct AActor_execPlayTeleportEffect_Parms
{
	unsigned long                                      bOut:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      bSound:1;                                         		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.IsInPain
// Flags: 
struct AActor_execIsInPain_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APhysicsVolume*                              V;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Actor.IsInVolume
// Flags: 
struct AActor_execIsInVolume_Parms
{
	class AVolume*                                     aVolume;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AVolume*                                     V;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Actor.UntriggerEvent
// Flags: 
struct AActor_execUntriggerEvent_Parms
{
	struct FName                                       EventName;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Other;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0008 ( 0x0004[ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x000C ( 0x0004
	class ANavigationPoint*                            N;                                                		// 0x0010 ( 0x0004
};

// Function Engine.Actor.TriggerEvent
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AActor_eventTriggerEvent_Parms
{
	struct FName                                       EventName;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Other;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0008 ( 0x0004[ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x000C ( 0x0004
	class ANavigationPoint*                            N;                                                		// 0x0010 ( 0x0004
};

// Function Engine.Actor.Reset
// Flags: 
struct AActor_execReset_Parms
{
};

// Function Engine.Actor.StartInterpolation
// Flags: [ FUNC_Simulated ]
struct AActor_execStartInterpolation_Parms
{
};

// Function Engine.Actor.TouchingActor
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct AActor_execTouchingActor_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     Dir;                                              		// 0x0008 ( 0x000C
};

// Function Engine.Actor.NearSpot
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct AActor_execNearSpot_Parms
{
	struct FVector                                     Spot;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     Dir;                                              		// 0x0010 ( 0x000C
};

// Function Engine.Actor.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct AActor_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FString                                     t;                                                		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	float                                              XL;                                               		// 0x0018 ( 0x0004
	int                                                i;                                                		// 0x001C ( 0x0004
	class AActor*                                      A;                                                		// 0x0020 ( 0x0004
	struct FName                                       Anim;                                             		// 0x0024 ( 0x0004
	float                                              frame;                                            		// 0x0028 ( 0x0004
	float                                              Rate;                                             		// 0x002C ( 0x0004
};

// Function Engine.Actor.GetDebugName
// Flags: 
struct AActor_execGetDebugName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.SetGRI
// Flags: 
struct AActor_execSetGRI_Parms
{
	class AGameReplicationInfo*                        GRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.MatchStarting
// Flags: 
struct AActor_execMatchStarting_Parms
{
};

// Function Engine.Actor.GetLocalString
// Flags: 
struct AActor_execGetLocalString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.SetDefaultDisplayProperties
// Flags: 
struct AActor_execSetDefaultDisplayProperties_Parms
{
};

// Function Engine.Actor.SetDisplayProperties
// Flags: 
struct AActor_execSetDisplayProperties_Parms
{
	unsigned char                                      NewStyle;                                         		// 0x0000 ( 0x0001[ CPF_Parm ]
	class UMaterial*                                   NewTexture;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bLighting:1;                                      		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.GetHumanReadableName
// Flags: [ FUNC_Simulated ]
struct AActor_execGetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.POVChanged
// Flags: 
struct AActor_execPOVChanged_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bBehindViewChanged:1;                             		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.BecomeViewTarget
// Flags: 
struct AActor_execBecomeViewTarget_Parms
{
};

// Function Engine.Actor.TravelPostAccept
// Flags: [ FUNC_Event ]
struct AActor_eventTravelPostAccept_Parms
{
};

// Function Engine.Actor.TravelPreAccept
// Flags: [ FUNC_Event ]
struct AActor_eventTravelPreAccept_Parms
{
};

// Function Engine.Actor.CheckForErrors
// Flags: 
struct AActor_execCheckForErrors_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.HurtRadius
// Flags: [ FUNC_Simulated ]
struct AActor_execHurtRadius_Parms
{
	float                                              DamageAmount;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              DamageRadius;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              Momentum;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0010 ( 0x000C[ CPF_Parm ]
	class AActor*                                      Victims;                                          		// 0x001C ( 0x0004
	float                                              damageScale;                                      		// 0x0020 ( 0x0004
	float                                              dist;                                             		// 0x0024 ( 0x0004
	struct FVector                                     Dir;                                              		// 0x0028 ( 0x000C
};

// Function Engine.Actor.PrecacheAnnouncer
// Flags: [ FUNC_Simulated ]
struct AActor_execPrecacheAnnouncer_Parms
{
	class AAnnouncerVoice*                             V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bRewardSounds:1;                                  		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.UpdateAnnouncements
// Flags: [ FUNC_Simulated ]
struct AActor_execUpdateAnnouncements_Parms
{
};

// Function Engine.Actor.UpdatePrecacheSkeletalMeshes
// Flags: [ FUNC_Simulated ]
struct AActor_execUpdatePrecacheSkeletalMeshes_Parms
{
};

// Function Engine.Actor.UpdatePrecacheStaticMeshes
// Flags: [ FUNC_Simulated ]
struct AActor_execUpdatePrecacheStaticMeshes_Parms
{
};

// Function Engine.Actor.UpdatePrecacheMaterials
// Flags: [ FUNC_Simulated ]
struct AActor_execUpdatePrecacheMaterials_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Actor.PostNetBeginPlay
// Flags: [ FUNC_Event ]
struct AActor_eventPostNetBeginPlay_Parms
{
};

// Function Engine.Actor.SetGRIInitialState
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AActor_eventSetGRIInitialState_Parms
{
};

// Function Engine.Actor.SetInitialState
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AActor_eventSetInitialState_Parms
{
};

// Function Engine.Actor.PostBeginPlay
// Flags: [ FUNC_Event ]
struct AActor_eventPostBeginPlay_Parms
{
};

// Function Engine.Actor.BroadcastLocalizedMessage
// Flags: [ FUNC_Event ]
struct AActor_eventBroadcastLocalizedMessage_Parms
{
	class UClass*                                      MessageClass;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.ForceBegin
// Flags: 
struct AActor_execForceBegin_Parms
{
};

// Function Engine.Actor.PreBeginPlay
// Flags: [ FUNC_Event ]
struct AActor_eventPreBeginPlay_Parms
{
};

// Function Engine.Actor.RenderTexture
// Flags: [ FUNC_Event ]
struct AActor_eventRenderTexture_Parms
{
	class UScriptedTexture*                            Tex;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.RenderOverlays
// Flags: 
struct AActor_execRenderOverlays_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.RecoverFromBadStateCode
// Flags: [ FUNC_Event ]
struct AActor_eventRecoverFromBadStateCode_Parms
{
};

// Function Engine.Actor.Multiply_ColorFloat
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000228 ( 552 )
struct AActor_execMultiply_ColorFloat_Parms
{
	class FColor                                       A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              B;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	class FColor                                       ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.Add_ColorColor
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000227 ( 551 )
struct AActor_execAdd_ColorColor_Parms
{
	class FColor                                       A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class FColor                                       B;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	class FColor                                       ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.Multiply_FloatColor
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000226 ( 550 )
struct AActor_execMultiply_FloatColor_Parms
{
	float                                              A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class FColor                                       B;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	class FColor                                       ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.Subtract_ColorColor
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000225 ( 549 )
struct AActor_execSubtract_ColorColor_Parms
{
	class FColor                                       A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class FColor                                       B;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	class FColor                                       ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.IterateObjectArray
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execIterateObjectArray_Parms
{
	class TArray< class UObject* >                     ObjectArray;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UClass*                                      baseClass;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
	class UObject*                                     Object;                                           		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.IterateActorArray
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execIterateActorArray_Parms
{
	class TArray< class AActor* >                      ActorArray;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UClass*                                      baseClass;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FName                                       MatchTag;                                         		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.CollidingActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000141 ( 321 )
struct AActor_execCollidingActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              Radius;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FVector                                     loc;                                              		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.VisibleCollidingActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000138 ( 312 )
struct AActor_execVisibleCollidingActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              Radius;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FVector                                     loc;                                              		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bIgnoreHidden:1;                                  		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.VisibleActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000137 ( 311 )
struct AActor_execVisibleActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              Radius;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     loc;                                              		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.RadiusActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000136 ( 310 )
struct AActor_execRadiusActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              Radius;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FVector                                     loc;                                              		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.TraceActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000135 ( 309 )
struct AActor_execTraceActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitLoc;                                           		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitNorm;                                          		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     End;                                              		// 0x0020 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Start;                                            		// 0x002C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     Extent;                                           		// 0x0038 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.TouchingActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000133 ( 307 )
struct AActor_execTouchingActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.BasedActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000132 ( 306 )
struct AActor_execBasedActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.ChildActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000131 ( 305 )
struct AActor_execChildActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.DynamicActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000139 ( 313 )
struct AActor_execDynamicActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FName                                       MatchTag;                                         		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.AllActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000130 ( 304 )
struct AActor_execAllActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FName                                       MatchTag;                                         		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.MoveCacheEntry
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execMoveCacheEntry_Parms
{
	struct FString                                     Guid;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     NewFilename;                                      		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetCacheEntry
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetCacheEntry_Parms
{
	int                                                Num;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Guid;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     fileName;                                         		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetAllIntDesc
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetAllIntDesc_Parms
{
	struct FString                                     MetaClass;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Entry;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Description;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.GetAllInt
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetAllInt_Parms
{
	struct FString                                     MetaClass;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Entries;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.GetNextIntDesc
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetNextIntDesc_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Num;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     Entry;                                            		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.GetNextInt
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetNextInt_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Num;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.GetURLMap
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000223 ( 547 )
struct AActor_execGetURLMap_Parms
{
	unsigned long                                      bIncludeOptions:1;                                		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.GetNextSkin
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000221 ( 545 )
struct AActor_execGetNextSkin_Parms
{
	struct FString                                     Prefix;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     CurrentSkin;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Dir;                                              		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FString                                     SkinName;                                         		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     SkinDesc;                                         		// 0x0028 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.GetMapName
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000021B ( 539 )
struct AActor_execGetMapName_Parms
{
	struct FString                                     NameEnding;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     MapName;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Dir;                                              		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.AddToPackageMap
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execAddToPackageMap_Parms
{
	struct FString                                     PackageName;                                      		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.ResetStaticFilterState
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execResetStaticFilterState_Parms
{
};

// Function Engine.Actor.BeginPlay
// Flags: [ FUNC_Event ]
struct AActor_eventBeginPlay_Parms
{
};

// Function Engine.Actor.PostTeleport
// Flags: [ FUNC_Event ]
struct AActor_eventPostTeleport_Parms
{
	class ATeleporter*                                 OutTeleporter;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.PreTeleport
// Flags: [ FUNC_Event ]
struct AActor_eventPreTeleport_Parms
{
	class ATeleporter*                                 InTeleporter;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SuggestFallVelocity
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSuggestFallVelocity_Parms
{
	struct FVector                                     Destination;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Start;                                            		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              MaxZ;                                             		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              MaxXYSpeed;                                       		// 0x001C ( 0x0004[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0020 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PlayerCanSeeMe
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000214 ( 532 )
struct AActor_execPlayerCanSeeMe_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.MakeNoise
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000200 ( 512 )
struct AActor_execMakeNoise_Parms
{
	float                                              Loudness;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.ForceFeedbackSupported
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execForceFeedbackSupported_Parms
{
	unsigned long                                      Enable:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.ChangeBaseParamsFeedbackEffect
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000239 ( 569 )
struct AActor_execChangeBaseParamsFeedbackEffect_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              DirectionX;                                       		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              DirectionY;                                       		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Gain;                                             		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.ChangeSpringFeedbackEffect
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000238 ( 568 )
struct AActor_execChangeSpringFeedbackEffect_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              CenterX;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              CenterY;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.StopFeedbackEffect
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000237 ( 567 )
struct AActor_execStopFeedbackEffect_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.PlayFeedbackEffect
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000236 ( 566 )
struct AActor_execPlayFeedbackEffect_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.GetSoundDuration
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetSoundDuration_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.IsSoundPlayingHK
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execIsSoundPlayingHK_Parms
{
	int                                                SourceID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.StopSoundHK
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execStopSoundHK_Parms
{
	int                                                SourceID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.StopLoopSoundByActor
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execStopLoopSoundByActor_Parms
{
};

// Function Engine.Actor.StopAllSoundByActor
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execStopAllSoundByActor_Parms
{
};

// Function Engine.Actor.StopAllSound
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execStopAllSound_Parms
{
};

// Function Engine.Actor.StopSound
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execStopSound_Parms
{
	unsigned char                                      Slot;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.DemoPlaySound
// Flags: [ FUNC_Simulated | FUNC_Event | FUNC_Native ]
struct AActor_eventDemoPlaySound_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.PlayOwnedSound
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execPlayOwnedSound_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PlaySound
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000108 ( 264 )
struct AActor_execPlaySound_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SpecPlaySoundHK2
// Flags: [ FUNC_Native ]
struct AActor_execSpecPlaySoundHK2_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     SoundLocation;                                    		// 0x0028 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0034 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PlaySoundHK2
// Flags: [ FUNC_Native ]
struct AActor_execPlaySoundHK2_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     SoundLocation;                                    		// 0x0028 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0034 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.ServerSpecPlaySoundHK
// Flags: 
struct AActor_execServerSpecPlaySoundHK_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SpecPlaySoundHK
// Flags: [ FUNC_Native ]
struct AActor_execSpecPlaySoundHK_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PlaySoundHK
// Flags: [ FUNC_Native ]
struct AActor_execPlaySoundHK_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.fPlaySound
// Flags: [ FUNC_Native ]
struct AActor_execfPlaySound_Parms
{
	struct FString                                     fileName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      Slot;                                             		// 0x000C ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0014 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x001C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0020 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PostLoadSavedGame
// Flags: [ FUNC_Event ]
struct AActor_eventPostLoadSavedGame_Parms
{
};

// Function Engine.Actor.PreSaveGame
// Flags: [ FUNC_Event ]
struct AActor_eventPreSaveGame_Parms
{
};

// Function Engine.Actor.SetTimer
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000118 ( 280 )
struct AActor_execSetTimer_Parms
{
	float                                              NewTimerRate;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bLoop:1;                                          		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.TornOff
// Flags: [ FUNC_Event ]
struct AActor_eventTornOff_Parms
{
};

// Function Engine.Actor.Destroy
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000117 ( 279 )
struct AActor_execDestroy_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.Spawn
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000116 ( 278 )
struct AActor_execSpawn_Parms
{
	class UClass*                                      SpawnClass;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      SpawnOwner;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FName                                       SpawnTag;                                         		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     SpawnLocation;                                    		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	struct FRotator                                    SpawnRotation;                                    		// 0x0018 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoCollisionFail:1;                               		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.TraceThisActorHitPart
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execTraceThisActorHitPart_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitNormal;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned char                                      HitCollisionPart;                                 		// 0x0018 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     TraceEnd;                                         		// 0x001C ( 0x000C[ CPF_Parm ]
	struct FVector                                     TraceStart;                                       		// 0x0028 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Extent;                                           		// 0x0034 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0040 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.TraceThisActor
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execTraceThisActor_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitNormal;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     TraceEnd;                                         		// 0x0018 ( 0x000C[ CPF_Parm ]
	struct FVector                                     TraceStart;                                       		// 0x0024 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Extent;                                           		// 0x0030 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x003C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.FastTrace
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000224 ( 548 )
struct AActor_execFastTrace_Parms
{
	struct FVector                                     TraceEnd;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     TraceStart;                                       		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.MultiTrace
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execMultiTrace_Parms
{
	class UBtrTraceResult*                             BtrResult;                                        		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     TraceEnd;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     TraceStart;                                       		// 0x0010 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bTraceActors:1;                                   		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bTraceMaterial:1;                                 		// 0x0020 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     Extent;                                           		// 0x0024 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.Trace
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000115 ( 277 )
struct AActor_execTrace_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitNormal;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     TraceEnd;                                         		// 0x0018 ( 0x000C[ CPF_Parm ]
	struct FVector                                     TraceStart;                                       		// 0x0024 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bTraceActors:1;                                   		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     Extent;                                           		// 0x0034 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	class UMaterial*                                   Material;                                         		// 0x0040 ( 0x0004[ CPF_OptionalParm | CPF_Parm | CPF_OutParm ]
	unsigned char                                      CollPart;                                         		// 0x0044 ( 0x0001[ CPF_OptionalParm | CPF_Parm | CPF_OutParm ]
	class AActor*                                      ReturnValue;                                      		// 0x0048 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetNameFromStr
// Flags: [ FUNC_Native ]
struct AActor_execGetNameFromStr_Parms
{
	struct FString                                     strName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FName                                       retName;                                          		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.TakeHeadRoundBullet
// Flags: [ FUNC_Event ]
struct AActor_eventTakeHeadRoundBullet_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	int                                                WeaponType;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.HealDamage
// Flags: 
struct AActor_execHealDamage_Parms
{
	int                                                Amount;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Healer;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.TakeDamage
// Flags: [ FUNC_Event ]
struct AActor_eventTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.KilledBy
// Flags: [ FUNC_Event ]
struct AActor_eventKilledBy_Parms
{
	class APawn*                                       EventInstigator;                                  		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.FellOutOfWorld
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AActor_eventFellOutOfWorld_Parms
{
	unsigned char                                      KillType;                                         		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Actor.UsedBy
// Flags: [ FUNC_Event ]
struct AActor_eventUsedBy_Parms
{
	class APawn*                                       User;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.EndedRotation
// Flags: [ FUNC_Event ]
struct AActor_eventEndedRotation_Parms
{
};

// Function Engine.Actor.FinishedInterpolation
// Flags: [ FUNC_Event ]
struct AActor_eventFinishedInterpolation_Parms
{
};

// Function Engine.Actor.RanInto
// Flags: [ FUNC_Event ]
struct AActor_eventRanInto_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.EncroachedBy
// Flags: [ FUNC_Event ]
struct AActor_eventEncroachedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.EncroachingOn
// Flags: [ FUNC_Event ]
struct AActor_eventEncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SpecialHandling
// Flags: [ FUNC_Event ]
struct AActor_eventSpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.Detach
// Flags: [ FUNC_Event ]
struct AActor_eventDetach_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.Attach
// Flags: [ FUNC_Event ]
struct AActor_eventAttach_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.BaseChange
// Flags: [ FUNC_Event ]
struct AActor_eventBaseChange_Parms
{
};

// Function Engine.Actor.Bump
// Flags: [ FUNC_Event ]
struct AActor_eventBump_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.UnTouch
// Flags: [ FUNC_Event ]
struct AActor_eventUnTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.PostTouch
// Flags: [ FUNC_Event ]
struct AActor_eventPostTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.Touch
// Flags: [ FUNC_Event ]
struct AActor_eventTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.PhysicsVolumeChange
// Flags: [ FUNC_Event ]
struct AActor_eventPhysicsVolumeChange_Parms
{
	class APhysicsVolume*                              NewVolume;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.ZoneChange
// Flags: [ FUNC_Event ]
struct AActor_eventZoneChange_Parms
{
	class AZoneInfo*                                   NewZone;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.Landed
// Flags: [ FUNC_Event ]
struct AActor_eventLanded_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Actor.Falling
// Flags: [ FUNC_Event ]
struct AActor_eventFalling_Parms
{
};

// Function Engine.Actor.HitWall
// Flags: [ FUNC_Event ]
struct AActor_eventHitWall_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      HitWall;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	class UMaterial*                                   HitMaterial;                                      		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.Timer
// Flags: [ FUNC_Event ]
struct AActor_eventTimer_Parms
{
};

// Function Engine.Actor.TimerPop
// Flags: [ FUNC_Simulated ]
struct AActor_execTimerPop_Parms
{
	class AVolumeTimer*                                t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.EndEvent
// Flags: [ FUNC_Event ]
struct AActor_eventEndEvent_Parms
{
};

// Function Engine.Actor.BeginEvent
// Flags: [ FUNC_Event ]
struct AActor_eventBeginEvent_Parms
{
};

// Function Engine.Actor.UnTrigger
// Flags: [ FUNC_Event ]
struct AActor_eventUnTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.Trigger
// Flags: [ FUNC_Event ]
struct AActor_eventTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.ClientTrigger
// Flags: [ FUNC_Event ]
struct AActor_eventClientTrigger_Parms
{
};

// Function Engine.Actor.PostNetReceive
// Flags: [ FUNC_Event ]
struct AActor_eventPostNetReceive_Parms
{
};

// Function Engine.Actor.Tick
// Flags: [ FUNC_Event ]
struct AActor_eventTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.LostChild
// Flags: [ FUNC_Event ]
struct AActor_eventLostChild_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.GainedChild
// Flags: [ FUNC_Event ]
struct AActor_eventGainedChild_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.CheckLifeSpanReplicated
// Flags: [ FUNC_Simulated ]
struct AActor_execCheckLifeSpanReplicated_Parms
{
};

// Function Engine.Actor.RegisterDestroyListener
// Flags: 
struct AActor_execRegisterDestroyListener_Parms
{
	class UObject*                                     o;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.Destroyed
// Flags: [ FUNC_Event ]
struct AActor_eventDestroyed_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
};

// Function Engine.Actor.IsPenetrate
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execIsPenetrate_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetMusicDuration
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetMusicDuration_Parms
{
	int                                                SongHandle;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.StopAllMusicAndClearQueue
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execStopAllMusicAndClearQueue_Parms
{
	float                                              FadeOutTime;                                      		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.StopAllMusic
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execStopAllMusic_Parms
{
	float                                              FadeOutTime;                                      		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.StopMusic
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execStopMusic_Parms
{
	int                                                SongHandle;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              FadeOutTime;                                      		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.IsPlayingMusic
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execIsPlayingMusic_Parms
{
	int                                                SongHandle;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PlayMusic
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execPlayMusic_Parms
{
	struct FString                                     Song;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              FadeInTime;                                       		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              InitialSeekTime;                                  		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PauseStream
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execPauseStream_Parms
{
	int                                                Handle;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.AdjustVolume
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execAdjustVolume_Parms
{
	int                                                Handle;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              NewVolume;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SeekStream
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSeekStream_Parms
{
	int                                                Handle;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Seconds;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.StopStream
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execStopStream_Parms
{
	int                                                Handle;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              FadeOutTime;                                      		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.PlayStream
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execPlayStream_Parms
{
	struct FString                                     Song;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      UseMusicVolume:1;                                 		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              FadeInTime;                                       		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              SeekTime;                                         		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x001C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.AllowMusicPlayback
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execAllowMusicPlayback_Parms
{
	unsigned long                                      Allow:1;                                          		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.UnClock
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execUnClock_Parms
{
	float                                              Time;                                             		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.Clock
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execClock_Parms
{
	float                                              Time;                                             		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.KUpdateState
// Flags: [ FUNC_Event ]
struct AActor_eventKUpdateState_Parms
{
	struct FKRigidBodyState                            NewState;                                         		// 0x0000 ( 0x0034[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0034 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KApplyForce
// Flags: [ FUNC_Event ]
struct AActor_eventKApplyForce_Parms
{
	struct FVector                                     Force;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     Torque;                                           		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.KSkelConvulse
// Flags: [ FUNC_Event ]
struct AActor_eventKSkelConvulse_Parms
{
};

// Function Engine.Actor.KVelDropBelow
// Flags: [ FUNC_Event ]
struct AActor_eventKVelDropBelow_Parms
{
};

// Function Engine.Actor.KImpact
// Flags: [ FUNC_Event ]
struct AActor_eventKImpact_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     pos;                                              		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     impactVel;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	struct FVector                                     impactNorm;                                       		// 0x001C ( 0x000C[ CPF_Parm ]
};

// Function Engine.Actor.KIsRagdollAvailable
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKIsRagdollAvailable_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KMakeRagdollAvailable
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKMakeRagdollAvailable_Parms
{
};

// Function Engine.Actor.KRemoveAllBoneLifters
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKRemoveAllBoneLifters_Parms
{
};

// Function Engine.Actor.KRemoveLifterFromBone
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKRemoveLifterFromBone_Parms
{
	struct FName                                       BoneName;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KAddBoneLifter
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKAddBoneLifter_Parms
{
	struct FName                                       BoneName;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FInterpCurve                                LiftVel;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              LateralFriction;                                  		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FInterpCurve                                Softness;                                         		// 0x0014 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.KScaleJointLimits
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKScaleJointLimits_Parms
{
	float                                              Scale;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              stiffness;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KFreezeRagdoll
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKFreezeRagdoll_Parms
{
};

// Function Engine.Actor.KGetSkelMass
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetSkelMass_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KSetSkelVel
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetSkelVel_Parms
{
	struct FVector                                     Velocity;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     AngVelocity;                                      		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      AddToCurrent:1;                                   		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.KEnableCollision
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKEnableCollision_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KDisableCollision
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKDisableCollision_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KGetActorGravScale
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetActorGravScale_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KSetActorGravScale
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetActorGravScale_Parms
{
	float                                              ActorGravScale;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KSetBlockKarma
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetBlockKarma_Parms
{
	unsigned long                                      newBlock:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.KSetStayUprightParams
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetStayUprightParams_Parms
{
	float                                              stiffness;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              damping;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KSetStayUpright
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetStayUpright_Parms
{
	unsigned long                                      stayUpright:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      allowRotate:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.KAddAngularImpulse
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKAddAngularImpulse_Parms
{
	struct FVector                                     AngImpulse;                                       		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Actor.KAddImpulse
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKAddImpulse_Parms
{
	struct FVector                                     Impulse;                                          		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Position;                                         		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FName                                       BoneName;                                         		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.KIsAwake
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKIsAwake_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KWake
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKWake_Parms
{
};

// Function Engine.Actor.KGetImpactThreshold
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetImpactThreshold_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KSetImpactThreshold
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetImpactThreshold_Parms
{
	float                                              thresh;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KGetCOMPosition
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetCOMPosition_Parms
{
	struct FVector                                     pos;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.KGetCOMOffset
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetCOMOffset_Parms
{
	struct FVector                                     offset;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.KSetCOMOffset
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetCOMOffset_Parms
{
	struct FVector                                     offset;                                           		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Actor.KGetRestitution
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetRestitution_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KSetRestitution
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetRestitution_Parms
{
	float                                              rest;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KGetFriction
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetFriction_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KSetFriction
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetFriction_Parms
{
	float                                              friction;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KGetDampingProps
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetDampingProps_Parms
{
	float                                              lindamp;                                          		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              angdamp;                                          		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.KSetDampingProps
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetDampingProps_Parms
{
	float                                              lindamp;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              angdamp;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KGetInertiaTensor
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetInertiaTensor_Parms
{
	struct FVector                                     it1;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     it2;                                              		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.KSetInertiaTensor
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetInertiaTensor_Parms
{
	struct FVector                                     it1;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     it2;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
};

// Function Engine.Actor.KGetMass
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetMass_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KSetMass
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetMass_Parms
{
	float                                              Mass;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.KRBVecFromVector
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKRBVecFromVector_Parms
{
	struct FVector                                     V;                                                		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FKRBVec                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KRBVecToVector
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKRBVecToVector_Parms
{
	struct FKRBVec                                     RBvec;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KDrawRigidBodyState
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKDrawRigidBodyState_Parms
{
	struct FKRigidBodyState                            RBstate;                                          		// 0x0000 ( 0x0034[ CPF_Parm ]
	unsigned long                                      AltColour:1;                                      		// 0x0034 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.KGetRigidBodyState
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetRigidBodyState_Parms
{
	struct FKRigidBodyState                            RBstate;                                          		// 0x0000 ( 0x0034[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.KGetRBQuaternion
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetRBQuaternion_Parms
{
	struct FQuat                                       ReturnValue;                                      		// 0x0000 ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.KSetSimParams
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKSetSimParams_Parms
{
	struct FKSimParams                                 SimParams;                                        		// 0x0000 ( 0x001C[ CPF_Parm ]
};

// Function Engine.Actor.KGetSimParams
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execKGetSimParams_Parms
{
	struct FKSimParams                                 SimParams;                                        		// 0x0000 ( 0x001C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.OnlyAffectPawns
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execOnlyAffectPawns_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.SetPhysics
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000F82 ( 3970 )
struct AActor_execSetPhysics_Parms
{
	unsigned char                                      newPhysics;                                       		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Actor.FinishInterpolation
// Flags: [ FUNC_Final | FUNC_Latent | FUNC_Native ]
// iNative: 0x0000012D ( 301 )
struct AActor_execFinishInterpolation_Parms
{
};

// Function Engine.Actor.DebugUnclock
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execDebugUnclock_Parms
{
};

// Function Engine.Actor.DebugClock
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execDebugClock_Parms
{
};

// Function Engine.Actor.ClearStayingDebugLines
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execClearStayingDebugLines_Parms
{
};

// Function Engine.Actor.DrawDebugSphere
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execDrawDebugSphere_Parms
{
	struct FVector                                     Base;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              Radius;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                NumDivisions;                                     		// 0x0010 ( 0x0004[ CPF_Parm ]
	unsigned char                                      R;                                                		// 0x0014 ( 0x0001[ CPF_Parm ]
	unsigned char                                      G;                                                		// 0x0015 ( 0x0001[ CPF_Parm ]
	unsigned char                                      B;                                                		// 0x0016 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Actor.DrawDebugCircle
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execDrawDebugCircle_Parms
{
	struct FVector                                     Base;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     X;                                                		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     Y;                                                		// 0x0018 ( 0x000C[ CPF_Parm ]
	float                                              Radius;                                           		// 0x0024 ( 0x0004[ CPF_Parm ]
	int                                                NumSides;                                         		// 0x0028 ( 0x0004[ CPF_Parm ]
	unsigned char                                      R;                                                		// 0x002C ( 0x0001[ CPF_Parm ]
	unsigned char                                      G;                                                		// 0x002D ( 0x0001[ CPF_Parm ]
	unsigned char                                      B;                                                		// 0x002E ( 0x0001[ CPF_Parm ]
};

// Function Engine.Actor.DrawStayingDebugLine
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execDrawStayingDebugLine_Parms
{
	struct FVector                                     LineStart;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     LineEnd;                                          		// 0x000C ( 0x000C[ CPF_Parm ]
	unsigned char                                      R;                                                		// 0x0018 ( 0x0001[ CPF_Parm ]
	unsigned char                                      G;                                                		// 0x0019 ( 0x0001[ CPF_Parm ]
	unsigned char                                      B;                                                		// 0x001A ( 0x0001[ CPF_Parm ]
};

// Function Engine.Actor.DrawDebugLine
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execDrawDebugLine_Parms
{
	struct FVector                                     LineStart;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     LineEnd;                                          		// 0x000C ( 0x000C[ CPF_Parm ]
	unsigned char                                      R;                                                		// 0x0018 ( 0x0001[ CPF_Parm ]
	unsigned char                                      G;                                                		// 0x0019 ( 0x0001[ CPF_Parm ]
	unsigned char                                      B;                                                		// 0x001A ( 0x0001[ CPF_Parm ]
};

// Function Engine.Actor.GetRenderBoundingSphere
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetRenderBoundingSphere_Parms
{
	struct FPlane                                      ReturnValue;                                      		// 0x0000 ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetUrlOption
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetUrlOption_Parms
{
	struct FString                                     Option;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.UpdateURL
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execUpdateURL_Parms
{
	struct FString                                     NewOption;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     NewValue;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bSaveDefault:1;                                   		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Actor.GetClosestBone
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetClosestBone_Parms
{
	struct FVector                                     loc;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ray;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              boneDist;                                         		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FName                                       BiasBone;                                         		// 0x001C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              BiasDistance;                                     		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FName                                       ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.AnimIsInGroup
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execAnimIsInGroup_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       GroupName;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetAnimParams
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetAnimParams_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       OutSeqName;                                       		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              OutAnimFrame;                                     		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              OutAnimRate;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Actor.SetBoneRotation
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execSetBoneRotation_Parms
{
	struct FName                                       BoneName;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    BoneTurn;                                         		// 0x0004 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	int                                                Space;                                            		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Alpha;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.SetBoneLocation
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetBoneLocation_Parms
{
	struct FName                                       BoneName;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     BoneTrans;                                        		// 0x0004 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	float                                              Alpha;                                            		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.SetBoneDirection
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetBoneDirection_Parms
{
	struct FName                                       BoneName;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    BoneTurn;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     BoneTrans;                                        		// 0x0010 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	float                                              Alpha;                                            		// 0x001C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Space;                                            		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.SetBoneScale
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetBoneScale_Parms
{
	int                                                Slot;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              BoneScale;                                        		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FName                                       BoneName;                                         		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.LockRootMotion
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execLockRootMotion_Parms
{
	int                                                Lock;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.DetachFromBone
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execDetachFromBone_Parms
{
	class AActor*                                      Attachment;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.AttachToBone
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execAttachToBone_Parms
{
	class AActor*                                      Attachment;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       BoneName;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetRootRotationDelta
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetRootRotationDelta_Parms
{
	struct FRotator                                    ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetRootLocationDelta
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetRootLocationDelta_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetRootRotation
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetRootRotation_Parms
{
	struct FRotator                                    ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetRootLocation
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetRootLocation_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetBoneRotation
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetBoneRotation_Parms
{
	struct FName                                       BoneName;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Space;                                            		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FRotator                                    ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetBoneCoords
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetBoneCoords_Parms
{
	struct FName                                       BoneName;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FCoords                                     ReturnValue;                                      		// 0x0004 ( 0x0030[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.AnimBlendToAlpha
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execAnimBlendToAlpha_Parms
{
	int                                                Stage;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              TargetAlpha;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              TimeInterval;                                     		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.AnimBlendParams
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execAnimBlendParams_Parms
{
	int                                                Stage;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              BlendAlpha;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              InTime;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              OutTime;                                          		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FName                                       BoneName;                                         		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bGlobalPose:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.BoneRefresh
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execBoneRefresh_Parms
{
};

// Function Engine.Actor.LinkMesh
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execLinkMesh_Parms
{
	class UMesh*                                       NewMesh;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bKeepAnim:1;                                      		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.LinkSkelAnim
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct AActor_execLinkSkelAnim_Parms
{
	class UMeshAnimation*                              Anim;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UMesh*                                       NewMesh;                                          		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.GetNotifyChannel
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetNotifyChannel_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.EnableChannelNotify
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execEnableChannelNotify_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.AnimEnd
// Flags: [ FUNC_Event ]
struct AActor_eventAnimEnd_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.LIPSincAnimEnd
// Flags: [ FUNC_Event ]
struct AActor_eventLIPSincAnimEnd_Parms
{
};

// Function Engine.Actor.CurrentLIPSincAnim
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execCurrentLIPSincAnim_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.IsPlayingLIPSincAnim
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execIsPlayingLIPSincAnim_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.HasLIPSincAnim
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execHasLIPSincAnim_Parms
{
	struct FName                                       LIPSincAnimName;                                  		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.StopLIPSincAnim
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execStopLIPSincAnim_Parms
{
};

// Function Engine.Actor.PlayLIPSincAnim
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execPlayLIPSincAnim_Parms
{
	struct FName                                       LIPSincAnimName;                                  		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Volume;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.AnimStopLooping
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execAnimStopLooping_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.IsTweening
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execIsTweening_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SetAnimFrame
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetAnimFrame_Parms
{
	float                                              Time;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Channel;                                          		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                UnitFlag;                                         		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.FreezeAnimAt
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execFreezeAnimAt_Parms
{
	float                                              Time;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Channel;                                          		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.StopAnimating
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execStopAnimating_Parms
{
	unsigned long                                      ClearAllButBase:1;                                		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.HasAnim
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000107 ( 263 )
struct AActor_execHasAnim_Parms
{
	struct FName                                       Sequence;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.FinishAnim
// Flags: [ FUNC_Final | FUNC_Latent | FUNC_Native ]
// iNative: 0x00000105 ( 261 )
struct AActor_execFinishAnim_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.IsAnimating
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000011A ( 282 )
struct AActor_execIsAnimating_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.TweenAnim
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000126 ( 294 )
struct AActor_execTweenAnim_Parms
{
	struct FName                                       Sequence;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Time;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Channel;                                          		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.LoopAnim
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000104 ( 260 )
struct AActor_execLoopAnim_Parms
{
	struct FName                                       Sequence;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Rate;                                             		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              TweenTime;                                        		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Channel;                                          		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.PlayAnim
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000103 ( 259 )
struct AActor_execPlayAnim_Parms
{
	struct FName                                       Sequence;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Rate;                                             		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              TweenTime;                                        		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Channel;                                          		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.GetMeshName
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execGetMeshName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.IsJoinedTo
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execIsJoinedTo_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SetOwner
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000110 ( 272 )
struct AActor_execSetOwner_Parms
{
	class AActor*                                      NewOwner;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.SetBase
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000012A ( 298 )
struct AActor_execSetBase_Parms
{
	class AActor*                                      NewBase;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     NewFloor;                                         		// 0x0004 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.SetBaseMaterial
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetBaseMaterial_Parms
{
	class UMaterial*                                   NewBaseMaterial;                                  		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.AutonomousPhysics
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000F83 ( 3971 )
struct AActor_execAutonomousPhysics_Parms
{
	float                                              DeltaSeconds;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.MoveSmooth
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000F81 ( 3969 )
struct AActor_execMoveSmooth_Parms
{
	struct FVector                                     Delta;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      TestCollide:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SetRelativeLocation
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetRelativeLocation_Parms
{
	struct FVector                                     NewLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SetRelativeRotation
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetRelativeRotation_Parms
{
	struct FRotator                                    NewRotation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SetRotation
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000012B ( 299 )
struct AActor_execSetRotation_Parms
{
	struct FRotator                                    NewRotation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SetLocation
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000010B ( 267 )
struct AActor_execSetLocation_Parms
{
	struct FVector                                     NewLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.Move
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000010A ( 266 )
struct AActor_execMove_Parms
{
	struct FVector                                     Delta;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SetDrawType
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetDrawType_Parms
{
	unsigned char                                      NewDrawType;                                      		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Actor.SetStaticMesh
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetStaticMesh_Parms
{
	class UStaticMesh*                                 NewStaticMesh;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.SetDrawScale3D
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetDrawScale3D_Parms
{
	struct FVector                                     NewScale3D;                                       		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Actor.SetDrawScale
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execSetDrawScale_Parms
{
	float                                              NewScale;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.SetCollisionSize
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000011B ( 283 )
struct AActor_execSetCollisionSize_Parms
{
	float                                              NewRadius;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              NewHeight;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.SetCollision
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000106 ( 262 )
struct AActor_execSetCollision_Parms
{
	unsigned long                                      NewColActors:1;                                   		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      NewBlockActors:1;                                 		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      NewBlockPlayers:1;                                		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Actor.Sleep
// Flags: [ FUNC_Final | FUNC_Latent | FUNC_Native ]
// iNative: 0x00000100 ( 256 )
struct AActor_execSleep_Parms
{
	float                                              Seconds;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.ShouldBeHidden
// Flags: [ FUNC_Final | FUNC_Native ]
struct AActor_execShouldBeHidden_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Actor.Error
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000000E9 ( 233 )
struct AActor_execError_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.Actor.TextToSpeech
// Flags: [ FUNC_Native ]
struct AActor_execTextToSpeech_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              Volume;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.CopyObjectToClipboard
// Flags: [ FUNC_Native ]
struct AActor_execCopyObjectToClipboard_Parms
{
	class UObject*                                     obj;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Actor.ConsoleCommand
// Flags: [ FUNC_Native ]
struct AActor_execConsoleCommand_Parms
{
	struct FString                                     Command;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bWriteToLog:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.SendUpdateUserPerformenceInfo
// Flags: 
struct UwMatchMaker_execSendUpdateUserPerformenceInfo_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                MinFps;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                MaxFps;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                AvgFps;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                MinPing;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                MaxPing;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                AvgPing;                                          		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.SetLastBuyItemInfo
// Flags: 
struct UwMatchMaker_execSetLastBuyItemInfo_Parms
{
	struct FString                                     ItemName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ItemType;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                ItemGrade;                                        		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.IsPCBangItem
// Flags: 
struct UwMatchMaker_execIsPCBangItem_Parms
{
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.CheckUsingItem
// Flags: 
struct UwMatchMaker_execCheckUsingItem_Parms
{
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.IsPlayingPCBangPlus
// Flags: 
struct UwMatchMaker_execIsPlayingPCBangPlus_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.IsPlayingPCBang
// Flags: 
struct UwMatchMaker_execIsPlayingPCBang_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetAASLevel
// Flags: 
struct UwMatchMaker_execSetAASLevel_Parms
{
	unsigned char                                      _level;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wMatchMaker.GetIsAASLevel
// Flags: 
struct UwMatchMaker_execGetIsAASLevel_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.IsSDRespawn
// Flags: 
struct UwMatchMaker_execIsSDRespawn_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwMapInfo*                                   mapInfo;                                          		// 0x0004 ( 0x0004
};

// Function Engine.wMatchMaker.IsFriendlyUser
// Flags: 
struct UwMatchMaker_execIsFriendlyUser_Parms
{
	struct FString                                     CharName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ClanName;                                         		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x001C ( 0x0004
};

// Function Engine.wMatchMaker.IsBlockUser
// Flags: 
struct UwMatchMaker_execIsBlockUser_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.UpdateBlockList
// Flags: 
struct UwMatchMaker_execUpdateBlockList_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdatePCBangList
// Flags: 
struct UwMatchMaker_execUpdatePCBangList_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateClanList
// Flags: 
struct UwMatchMaker_execUpdateClanList_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateFriendList
// Flags: 
struct UwMatchMaker_execUpdateFriendList_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.ReplaceBlockNickName
// Flags: 
struct UwMatchMaker_execReplaceBlockNickName_Parms
{
	struct FString                                     old_name;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     new_name;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                lp1;                                              		// 0x0018 ( 0x0004
};

// Function Engine.wMatchMaker.AddBlockList
// Flags: 
struct UwMatchMaker_execAddBlockList_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Last;                                             		// 0x000C ( 0x0004
};

// Function Engine.wMatchMaker.SetBlockListCount
// Flags: 
struct UwMatchMaker_execSetBlockListCount_Parms
{
	int                                                cnt;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.ClearBlockList
// Flags: 
struct UwMatchMaker_execClearBlockList_Parms
{
};

// Function Engine.wMatchMaker.AddClanList
// Flags: 
struct UwMatchMaker_execAddClanList_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      IsLogOn;                                          		// 0x000C ( 0x0001[ CPF_Parm ]
	int                                                Level;                                            		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                ClanGrade;                                        		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                ClanWin;                                          		// 0x0018 ( 0x0004[ CPF_Parm ]
	int                                                ClanLose;                                         		// 0x001C ( 0x0004[ CPF_Parm ]
	int                                                LevelMarkID;                                      		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                TitleMarkID;                                      		// 0x0024 ( 0x0004[ CPF_Parm ]
	int                                                Last;                                             		// 0x0028 ( 0x0004
};

// Function Engine.wMatchMaker.SetClanListCount
// Flags: 
struct UwMatchMaker_execSetClanListCount_Parms
{
	int                                                cnt;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.ClearClanList
// Flags: 
struct UwMatchMaker_execClearClanList_Parms
{
};

// Function Engine.wMatchMaker.AddPCBangList2
// Flags: 
struct UwMatchMaker_execAddPCBangList2_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      IsLogOn;                                          		// 0x000C ( 0x0001[ CPF_Parm ]
	int                                                ClanMark;                                         		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                ClanBG;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                ClanBL;                                           		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FString                                     ClanName;                                         		// 0x001C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Level;                                            		// 0x0028 ( 0x0004[ CPF_Parm ]
	int                                                ClanGrade;                                        		// 0x002C ( 0x0004[ CPF_Parm ]
	int                                                ClanWin;                                          		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                ClanLose;                                         		// 0x0034 ( 0x0004[ CPF_Parm ]
	int                                                IsLookForClan;                                    		// 0x0038 ( 0x0004[ CPF_Parm ]
	int                                                ClanLevel;                                        		// 0x003C ( 0x0004[ CPF_Parm ]
	int                                                LevelMarkID;                                      		// 0x0040 ( 0x0004[ CPF_Parm ]
	int                                                TitleMarkID;                                      		// 0x0044 ( 0x0004[ CPF_Parm ]
	int                                                Reserved1;                                        		// 0x0048 ( 0x0004[ CPF_Parm ]
	int                                                Reserved2;                                        		// 0x004C ( 0x0004[ CPF_Parm ]
	int                                                Reserved3;                                        		// 0x0050 ( 0x0004[ CPF_Parm ]
	int                                                Last;                                             		// 0x0054 ( 0x0004
};

// Function Engine.wMatchMaker.AddPCBangList
// Flags: 
struct UwMatchMaker_execAddPCBangList_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ClanMark;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                ClanBG;                                           		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                ClanBL;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
	struct FString                                     ClanName;                                         		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Level;                                            		// 0x0024 ( 0x0004[ CPF_Parm ]
	struct FString                                     ServerName;                                       		// 0x0028 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ServerShortName;                                  		// 0x0034 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ServerIP;                                         		// 0x0040 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                serverPort;                                       		// 0x004C ( 0x0004[ CPF_Parm ]
	int                                                CurPos;                                           		// 0x0050 ( 0x0004[ CPF_Parm ]
	int                                                ChannelNum;                                       		// 0x0054 ( 0x0004[ CPF_Parm ]
	struct FString                                     ChannelNickName;                                  		// 0x0058 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                RoomNum;                                          		// 0x0064 ( 0x0004[ CPF_Parm ]
	int                                                ClanGrade;                                        		// 0x0068 ( 0x0004[ CPF_Parm ]
	int                                                ClanWin;                                          		// 0x006C ( 0x0004[ CPF_Parm ]
	int                                                ClanLose;                                         		// 0x0070 ( 0x0004[ CPF_Parm ]
	int                                                IsLookForClan;                                    		// 0x0074 ( 0x0004[ CPF_Parm ]
	int                                                ClanLevel;                                        		// 0x0078 ( 0x0004[ CPF_Parm ]
	int                                                LevelMarkID;                                      		// 0x007C ( 0x0004[ CPF_Parm ]
	int                                                TitleMarkID;                                      		// 0x0080 ( 0x0004[ CPF_Parm ]
	int                                                Reserved1;                                        		// 0x0084 ( 0x0004[ CPF_Parm ]
	int                                                Reserved2;                                        		// 0x0088 ( 0x0004[ CPF_Parm ]
	int                                                Reserved3;                                        		// 0x008C ( 0x0004[ CPF_Parm ]
	int                                                Last;                                             		// 0x0090 ( 0x0004
};

// Function Engine.wMatchMaker.RemovePCBangList
// Flags: 
struct UwMatchMaker_execRemovePCBangList_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wMatchMaker.SetPCBangListCount
// Flags: 
struct UwMatchMaker_execSetPCBangListCount_Parms
{
	int                                                cnt;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.ClearPCBangList
// Flags: 
struct UwMatchMaker_execClearPCBangList_Parms
{
};

// Function Engine.wMatchMaker.AddFriendList
// Flags: 
struct UwMatchMaker_execAddFriendList_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      IsLogOn;                                          		// 0x000C ( 0x0001[ CPF_Parm ]
	int                                                ClanMark;                                         		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                ClanBG;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                ClanBL;                                           		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FString                                     ClanName;                                         		// 0x001C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Level;                                            		// 0x0028 ( 0x0004[ CPF_Parm ]
	unsigned char                                      IsLookForClan;                                    		// 0x002C ( 0x0001[ CPF_Parm ]
	int                                                ClanLevel;                                        		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                LevelMarkID;                                      		// 0x0034 ( 0x0004[ CPF_Parm ]
	int                                                Last;                                             		// 0x0038 ( 0x0004
};

// Function Engine.wMatchMaker.SetFriendListCount
// Flags: 
struct UwMatchMaker_execSetFriendListCount_Parms
{
	int                                                cnt;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.ClearFriendList
// Flags: 
struct UwMatchMaker_execClearFriendList_Parms
{
};

// Function Engine.wMatchMaker.IsDisconnectedUser
// Flags: 
struct UwMatchMaker_execIsDisconnectedUser_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetDisconnectedUser
// Flags: 
struct UwMatchMaker_execSetDisconnectedUser_Parms
{
	unsigned long                                      bSet:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                UserID;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMatchMaker.GetHostPoint
// Flags: 
struct UwMatchMaker_execGetHostPoint_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.CalculateHostPoint
// Flags: 
struct UwMatchMaker_execCalculateHostPoint_Parms
{
	unsigned long                                      bInGame:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                iPingPoint;                                       		// 0x0008 ( 0x0004
//	int                                                iFPSPoint;                                        		// 0x000C ( 0x0004
//	float                                              fPingPerSec;                                      		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.ReceivedPing
// Flags: 
struct UwMatchMaker_execReceivedPing_Parms
{
	struct FString                                     fromAddr;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                msec;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	int                                                iUserCount;                                       		// 0x0018 ( 0x0004
//	int                                                iSumPing;                                         		// 0x001C ( 0x0004
//	int                                                nResult;                                          		// 0x0020 ( 0x0004
//	class UwMatchUserInfo*                             kUserInfo;                                        		// 0x0024 ( 0x0004
};

// Function Engine.wMatchMaker.OnRecivedPing
// Flags: 
struct UwMatchMaker_execOnRecivedPing_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     fromAddr;                                         		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                msec;                                             		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.ReceivedPingHK
// Flags: 
struct UwMatchMaker_execReceivedPingHK_Parms
{
	struct FString                                     fromAddr;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                msec;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.ClearReceivedPingHK
// Flags: 
struct UwMatchMaker_execClearReceivedPingHK_Parms
{
};

// Function Engine.wMatchMaker.GetLastestPingValue
// Flags: 
struct UwMatchMaker_execGetLastestPingValue_Parms
{
	struct FString                                     fromAddr;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.SendPingHK
// Flags: 
struct UwMatchMaker_execSendPingHK_Parms
{
	struct FString                                     fromAddr;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wMatchMaker.SendPingToClient
// Flags: 
struct UwMatchMaker_execSendPingToClient_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	class UwMatchUserInfo*                             kUserInfo;                                        		// 0x0004 ( 0x0004
};

// Function Engine.wMatchMaker.DrawOtherLoadingState
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventDrawOtherLoadingState_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      bLoadingState;                                    		// 0x0004 ( 0x0001[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
	struct FString                                     OtherUserName;                                    		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FLoadingMessageItem                         Item;                                             		// 0x0018 ( 0x001C[ CPF_NeedCtorLink ]
	unsigned long                                      bHost:1;                                          		// 0x0034 ( 0x0004 [0x00000001]
};

// Function Engine.wMatchMaker.OnReqSuccessStartGame
// Flags: 
struct UwMatchMaker_execOnReqSuccessStartGame_Parms
{
	int                                                Step;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.ReqSuccessStartGame
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventReqSuccessStartGame_Parms
{
	int                                                Step;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.GetItemDurabilityInfo
// Flags: 
struct UwMatchMaker_execGetItemDurabilityInfo_Parms
{
	class TArray< int >                                OwnerID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< int >                                PlayedNumber;                                     		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< int >                                PlayedRound;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  UniqueItemID;                                     		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< int >                                UsingTime;                                        		// 0x0030 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< int >                                PlayedCount;                                      		// 0x003C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0048 ( 0x0004
	int                                                j;                                                		// 0x004C ( 0x0004
	int                                                k;                                                		// 0x0050 ( 0x0004
	int                                                iTemp;                                            		// 0x0054 ( 0x0004
	class UwMatchUserInfo*                             kUser;                                            		// 0x0058 ( 0x0004
	unsigned long                                      bFind:1;                                          		// 0x005C ( 0x0004 [0x00000001]
};

// Function Engine.wMatchMaker.ForceGameOver
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventForceGameOver_Parms
{
	class APlayerReplicationInfo*                      Winner;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.ProcessPendingChangeNewHostOrChangeNewGuest
// Flags: 
struct UwMatchMaker_execProcessPendingChangeNewHostOrChangeNewGuest_Parms
{
};

// Function Engine.wMatchMaker.PendingChangeNewGuest
// Flags: 
struct UwMatchMaker_execPendingChangeNewGuest_Parms
{
	struct FString                                     hostAddress;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.PendingChangeHost
// Flags: 
struct UwMatchMaker_execPendingChangeHost_Parms
{
	int                                                ClientNum;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.SetChangeHostMessageFlag
// Flags: 
struct UwMatchMaker_execSetChangeHostMessageFlag_Parms
{
};

// Function Engine.wMatchMaker.ChangeNewGuest
// Flags: 
struct UwMatchMaker_execChangeNewGuest_Parms
{
	struct FString                                     HostIP;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.ChangeHost
// Flags: 
struct UwMatchMaker_execChangeHost_Parms
{
	int                                                ClientNum;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetChangingHostFlag
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventSetChangingHostFlag_Parms
{
	unsigned long                                      flag:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wMatchMaker.ResetChangingHostGuest
// Flags: 
struct UwMatchMaker_execResetChangingHostGuest_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.IsLoading
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventIsLoading_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.EndLoading
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventEndLoading_Parms
{
};

// Function Engine.wMatchMaker.StartLoading
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventStartLoading_Parms
{
};

// Function Engine.wMatchMaker.GetMiniMapInfoImage
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventGetMiniMapInfoImage_Parms
{
	class UMaterial*                                   ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                ImageIndex;                                       		// 0x0004 ( 0x0004
};

// Function Engine.wMatchMaker.GetLoadingImage
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventGetLoadingImage_Parms
{
	class UMaterial*                                   ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     resourceName;                                     		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.InitializeMapSettings_DS_Server
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventInitializeMapSettings_DS_Server_Parms
{
};

// Function Engine.wMatchMaker.InitializeMapSettings
// Flags: 
struct UwMatchMaker_execInitializeMapSettings_Parms
{
};

// Function Engine.wMatchMaker.ClearConsole
// Flags: 
struct UwMatchMaker_execClearConsole_Parms
{
};

// Function Engine.wMatchMaker.EndMatch
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventEndMatch_Parms
{
	unsigned long                                      bForceEndMatch:1;                                 		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMatchMaker.ResetGameFlag
// Flags: 
struct UwMatchMaker_execResetGameFlag_Parms
{
};

// Function Engine.wMatchMaker.GetTeamCount
// Flags: 
struct UwMatchMaker_execGetTeamCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.GetGameModeNum
// Flags: 
struct UwMatchMaker_execGetGameModeNum_Parms
{
	struct FString                                     szGameClassName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetCurMatchState
// Flags: 
struct UwMatchMaker_execSetCurMatchState_Parms
{
	struct FMatchState                                 kState;                                           		// 0x0000 ( 0x0018[ CPF_Parm ]
};

// Function Engine.wMatchMaker.IsHost
// Flags: 
struct UwMatchMaker_execIsHost_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.SetNewHost
// Flags: 
struct UwMatchMaker_execSetNewHost_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                lp1;                                              		// 0x000C ( 0x0004
};

// Function Engine.wMatchMaker.GetUserClanNameByUserName
// Flags: 
struct UwMatchMaker_execGetUserClanNameByUserName_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0018 ( 0x0004
};

// Function Engine.wMatchMaker.GetUserLevelMarkIDByUserName
// Flags: 
struct UwMatchMaker_execGetUserLevelMarkIDByUserName_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.ReplaceUserName
// Flags: 
struct UwMatchMaker_execReplaceUserName_Parms
{
	struct FString                                     OldName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     NewName;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x001C ( 0x0004
};

// Function Engine.wMatchMaker.GetUserGradeByUserName
// Flags: 
struct UwMatchMaker_execGetUserGradeByUserName_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.GetUIDByUserName
// Flags: 
struct UwMatchMaker_execGetUIDByUserName_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwMatchUserInfo*                             User;                                             		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.GetUserInfoByUserName
// Flags: 
struct UwMatchMaker_execGetUserInfoByUserName_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UwMatchUserInfo*                             ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.GetUserInfoByUID
// Flags: 
struct UwMatchMaker_execGetUserInfoByUID_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwMatchUserInfo*                             ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0008 ( 0x0004
};

// Function Engine.wMatchMaker.SetMyTeam
// Flags: 
struct UwMatchMaker_execSetMyTeam_Parms
{
	int                                                iTeam;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.GetMyNetworkCheckFailedMsg
// Flags: 
struct UwMatchMaker_execGetMyNetworkCheckFailedMsg_Parms
{
	int                                                LoadingStep;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.GetHostNetworkCheckFailedMsg
// Flags: 
struct UwMatchMaker_execGetHostNetworkCheckFailedMsg_Parms
{
	int                                                LoadingStep;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.FailedNetworkChecking
// Flags: 
struct UwMatchMaker_execFailedNetworkChecking_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.StartNetworkChecking
// Flags: 
struct UwMatchMaker_execStartNetworkChecking_Parms
{
	int                                                ClientsCount;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bConnectGame:1;                                   		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SendPingToChannelServer
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventSendPingToChannelServer_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SendPingToOtherUser
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventSendPingToOtherUser_Parms
{
	struct FString                                     toAddr;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SendText
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventSendText_Parms
{
	struct FString                                     d_ip;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                d_port;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     dText;                                            		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SendErrorReportC
// Flags: 
struct UwMatchMaker_execSendErrorReportC_Parms
{
	int                                                Code;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                windowtype;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     ct;                                               		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.SendErrorReportS
// Flags: 
struct UwMatchMaker_execSendErrorReportS_Parms
{
	int                                                Code;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ct;                                               		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.CreatePingChecker
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventCreatePingChecker_Parms
{
	class UBTPingCheckerLinker*                        ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.GetHostBlocking
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventGetHostBlocking_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetHostBlocking
// Flags: [ FUNC_Event ]
struct UwMatchMaker_eventSetHostBlocking_Parms
{
	unsigned long                                      Blocking:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wMatchMaker.MakeHSResponseData
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execMakeHSResponseData_Parms
{
	class TArray< unsigned char >                      Data;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< unsigned char >                      Result;                                           		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.TenProtectRelease
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execTenProtectRelease_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.TenProtectCreate
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execTenProtectCreate_Parms
{
	int                                                QQUserID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.TenProtectDProtoEncrypt
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execTenProtectDProtoEncrypt_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.TenProtectDProtoDecrypt
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execTenProtectDProtoDecrypt_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.TenProtectUpdate_AntiBot
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execTenProtectUpdate_AntiBot_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.TenProtectStopLocalCheck
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execTenProtectStopLocalCheck_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.TenProtectStartLocalOnceCheck
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execTenProtectStartLocalOnceCheck_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.TenProtectSendInitData
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execTenProtectSendInitData_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.TenProtectSetInitData
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execTenProtectSetInitData_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.GetClientVersion
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execGetClientVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.ConsoleCmd_DS
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execConsoleCmd_DS_Parms
{
	struct FString                                     strCmd;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.ForceSetLoadingStep
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execForceSetLoadingStep_Parms
{
	int                                                LoadingStep;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.StartHolePunchingClient
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execStartHolePunchingClient_Parms
{
	int                                                GameType;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReqStartUserID;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.StartHolePunchingHost
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execStartHolePunchingHost_Parms
{
	int                                                GameType;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReqStartUserID;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetTcpTimeOutInTempReset
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execSetTcpTimeOutInTempReset_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetTcpTimeOutInGame
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execSetTcpTimeOutInGame_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetTcpTimeOutInUI
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execSetTcpTimeOutInUI_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.ForceDisconnectGameWithErrMessage
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execForceDisconnectGameWithErrMessage_Parms
{
	struct FString                                     strErrMsg;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetUDPConnectionTimeLimit
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execSetUDPConnectionTimeLimit_Parms
{
	float                                              fLimitSec;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.IsCompletedLoading
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execIsCompletedLoading_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.CheckHolePunchingResult
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execCheckHolePunchingResult_Parms
{
	int                                                Result;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Phrase;                                           		// 0x0004 ( 0x0001[ CPF_Parm ]
	int                                                InterventionUserID;                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Intervention;                                     		// 0x000C ( 0x0001[ CPF_Parm ]
	class TArray< int >                                FailedUserIDs;                                    		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.GetStrLoadingState
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execGetStrLoadingState_Parms
{
	unsigned char                                      bState;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.PrintLoadingMsg
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execPrintLoadingMsg_Parms
{
	struct FLoadingMessageItem                         Item;                                             		// 0x0000 ( 0x001C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.MakeMD5
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execMakeMD5_Parms
{
	struct FString                                     strsrc;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.DestoryLoadingStater
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execDestoryLoadingStater_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.CreateLoadingStater
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execCreateLoadingStater_Parms
{
	struct FString                                     LoginName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.LowRelayServerOff
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execLowRelayServerOff_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.LowRelayServerOn
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execLowRelayServerOn_Parms
{
	struct FString                                     RelayServerIP;                                    		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                RelayServerPortNum;                               		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.LowChangeClient
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execLowChangeClient_Parms
{
	struct FString                                     HostAddr;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.LowChangeServer
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execLowChangeServer_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.ForceDisconnectUDPConnectionClientSide
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execForceDisconnectUDPConnectionClientSide_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.ForceDisconnectUDPConnectionHostSide
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execForceDisconnectUDPConnectionHostSide_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.StartTickCheck
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execStartTickCheck_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetNatTypeToEngine
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execSetNatTypeToEngine_Parms
{
	int                                                NatType;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.ClientInitNatChecker
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execClientInitNatChecker_Parms
{
	int                                                HostUserID;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     HostIP;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                hostPortNum;                                      		// 0x0010 ( 0x0004[ CPF_Parm ]
	unsigned char                                      NatType;                                          		// 0x0014 ( 0x0001[ CPF_Parm ]
	unsigned char                                      Intervention;                                     		// 0x0015 ( 0x0001[ CPF_Parm ]
	struct FString                                     HostInnerIP;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                HostInnerPort;                                    		// 0x0024 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.HostInitNatChecker
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execHostInitNatChecker_Parms
{
	int                                                ClientUserID;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ClientIP;                                         		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                clientPortNum;                                    		// 0x0010 ( 0x0004[ CPF_Parm ]
	unsigned char                                      NatType;                                          		// 0x0014 ( 0x0001[ CPF_Parm ]
	unsigned char                                      Intervention_Own;                                 		// 0x0015 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.NatServerAddrStoreToEngine
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execNatServerAddrStoreToEngine_Parms
{
	struct FString                                     natServerIP1;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                natServerPortNum1;                                		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     natServerIP2;                                     		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                natServerPortNum2;                                		// 0x001C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.StartMatch
// Flags: [ FUNC_Native ]
struct UwMatchMaker_execStartMatch_Parms
{
	int                                                GameRoomNum;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bHost:1;                                          		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	struct FString                                     szHostAddr;                                       		// 0x0008 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	int                                                hostPortNum;                                      		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.UpdateQuest_WinnerInBotMode
// Flags: 
struct UwMatchMaker_execUpdateQuest_WinnerInBotMode_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecodeType;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_RoundCompletedInBotMode
// Flags: 
struct UwMatchMaker_execUpdateQuest_RoundCompletedInBotMode_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                CompletedRound;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_MatchCompletedInBotMode
// Flags: 
struct UwMatchMaker_execUpdateQuest_MatchCompletedInBotMode_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_SprintTime
// Flags: 
struct UwMatchMaker_execUpdateQuest_SprintTime_Parms
{
	int                                                sec;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_AcquireTrophy
// Flags: 
struct UwMatchMaker_execUpdateQuest_AcquireTrophy_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_MatchEndInBotMode
// Flags: 
struct UwMatchMaker_execUpdateQuest_MatchEndInBotMode_Parms
{
	int                                                difficult;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Map;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_KillInBotMode
// Flags: 
struct UwMatchMaker_execUpdateQuest_KillInBotMode_Parms
{
	int                                                difficult;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Map;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_MatchEnd
// Flags: 
struct UwMatchMaker_execUpdateQuest_MatchEnd_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Map;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_CombatTime
// Flags: 
struct UwMatchMaker_execUpdateQuest_CombatTime_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Map;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Min;                                              		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_ExecTime
// Flags: 
struct UwMatchMaker_execUpdateQuest_ExecTime_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Map;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Min;                                              		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_Death
// Flags: 
struct UwMatchMaker_execUpdateQuest_Death_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_Assist
// Flags: 
struct UwMatchMaker_execUpdateQuest_Assist_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_15Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_15Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_10Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_10Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_9Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_9Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_8Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_8Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_7Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_7Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_6Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_6Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_5Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_5Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_4Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_4Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_3Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_3Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_2Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_2Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_MeeleAttackKill
// Flags: 
struct UwMatchMaker_execUpdateQuest_MeeleAttackKill_Parms
{
};

// Function Engine.wMatchMaker.UpdateQuest_HeadshotKill
// Flags: 
struct UwMatchMaker_execUpdateQuest_HeadshotKill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_AimedKill
// Flags: 
struct UwMatchMaker_execUpdateQuest_AimedKill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateQuest_Kill
// Flags: 
struct UwMatchMaker_execUpdateQuest_Kill_Parms
{
	int                                                WeaponType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.QuestLog
// Flags: 
struct UwMatchMaker_execQuestLog_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.GetNextQuestID
// Flags: 
struct UwMatchMaker_execGetNextQuestID_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wMatchMaker.UpdateTutorial
// Flags: 
struct UwMatchMaker_execUpdateTutorial_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                AddCount;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wMatchMaker.UpdateQuest
// Flags: 
struct UwMatchMaker_execUpdateQuest_Parms
{
	int                                                MissionType;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                MissionOption1;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                MissionOption2;                                   		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                AddCount;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.CheckMissionProgress
// Flags: 
struct UwMatchMaker_execCheckMissionProgress_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                AddCount;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              prevperc;                                         		// 0x0008 ( 0x0004
	float                                              currperc;                                         		// 0x000C ( 0x0004
	int                                                SaveCurrentProgress;                              		// 0x0010 ( 0x0004
};

// Function Engine.wMatchMaker.AccomplishMission100Percent
// Flags: 
struct UwMatchMaker_execAccomplishMission100Percent_Parms
{
	struct FString                                     MissionDesc;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                cur;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Max;                                              		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.AccomplishMission75Percent
// Flags: 
struct UwMatchMaker_execAccomplishMission75Percent_Parms
{
	struct FString                                     MissionDesc;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                cur;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Max;                                              		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.AccomplishMission50Percent
// Flags: 
struct UwMatchMaker_execAccomplishMission50Percent_Parms
{
	struct FString                                     MissionDesc;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                cur;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Max;                                              		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.AccomplishMission25Percent
// Flags: 
struct UwMatchMaker_execAccomplishMission25Percent_Parms
{
	struct FString                                     MissionDesc;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                cur;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Max;                                              		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.GenerateMissionList
// Flags: 
struct UwMatchMaker_execGenerateMissionList_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	class UwQuestParam*                                q;                                                		// 0x0008 ( 0x0004
	struct FBtrDouble                                  CurrentTime;                                      		// 0x000C ( 0x0008
};

// Function Engine.wMatchMaker.SortQuestList
// Flags: 
struct UwMatchMaker_execSortQuestList_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	int                                                j;                                                		// 0x0008 ( 0x0004
	int                                                nTemp;                                            		// 0x000C ( 0x0004
	class UwQuestParam*                                QuestParam;                                       		// 0x0010 ( 0x0004
	struct FQuestItem                                  QuestItemTemp;                                    		// 0x0014 ( 0x0008
	class TArray< int >                                DisplayOderList;                                  		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.FindQuest
// Flags: 
struct UwMatchMaker_execFindQuest_Parms
{
	int                                                nQuestID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wMatchMaker.RemoveDailyQuestArray
// Flags: 
struct UwMatchMaker_execRemoveDailyQuestArray_Parms
{
	class TArray< int >                                QuestID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wMatchMaker.AddDailyQuestArray
// Flags: 
struct UwMatchMaker_execAddDailyQuestArray_Parms
{
	class TArray< int >                                QuestID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wMatchMaker.RemoveDailyQuest
// Flags: 
struct UwMatchMaker_execRemoveDailyQuest_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wMatchMaker.AddDailyQuest
// Flags: 
struct UwMatchMaker_execAddDailyQuest_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.RemoveQuestArray
// Flags: 
struct UwMatchMaker_execRemoveQuestArray_Parms
{
	class TArray< int >                                QuestID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wMatchMaker.AddQuestArray
// Flags: 
struct UwMatchMaker_execAddQuestArray_Parms
{
	class TArray< int >                                QuestID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wMatchMaker.RemoveQuest
// Flags: 
struct UwMatchMaker_execRemoveQuest_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wMatchMaker.AddQuest
// Flags: 
struct UwMatchMaker_execAddQuest_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.IsEnableAltTab
// Flags: 
struct UwMatchMaker_execIsEnableAltTab_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.SetCurSubPos
// Flags: 
struct UwMatchMaker_execSetCurSubPos_Parms
{
	int                                                CurSubPos;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.SetCurpos
// Flags: 
struct UwMatchMaker_execSetCurpos_Parms
{
	int                                                CurPos;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                CurSubPos;                                        		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMatchMaker.IsClanGrade
// Flags: 
struct UwMatchMaker_execIsClanGrade_Parms
{
	int                                                Grade;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.IsClanMember
// Flags: 
struct UwMatchMaker_execIsClanMember_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMatchMaker.RI_Clear
// Flags: 
struct UwMatchMaker_execRI_Clear_Parms
{
};

// Function Engine.wMatchMaker.PI_LeavelRoom
// Flags: 
struct UwMatchMaker_execPI_LeavelRoom_Parms
{
};

// Function Engine.wMatchMaker.RemoveGMList
// Flags: 
struct UwMatchMaker_execRemoveGMList_Parms
{
	int                                                GMUID;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wMatchMaker.AddGMList
// Flags: 
struct UwMatchMaker_execAddGMList_Parms
{
	int                                                GMUID;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.ClearGMList
// Flags: 
struct UwMatchMaker_execClearGMList_Parms
{
};

// Function Engine.wMatchMaker.PI_EnterRoom
// Flags: 
struct UwMatchMaker_execPI_EnterRoom_Parms
{
	int                                                RoomID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                TeamID;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.PI_LeaveChannel
// Flags: 
struct UwMatchMaker_execPI_LeaveChannel_Parms
{
};

// Function Engine.wMatchMaker.PI_EnterChannel
// Flags: 
struct UwMatchMaker_execPI_EnterChannel_Parms
{
	int                                                ServerGroupID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ServerGroupName;                                  		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ServerID;                                         		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FString                                     ServerName;                                       		// 0x0014 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ChannelID;                                        		// 0x0020 ( 0x0004[ CPF_Parm ]
	struct FString                                     ChannelName;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bClanWarChannel:1;                                		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ChannelTypeValue;                                 		// 0x0034 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      IsDedicatedServer:1;                              		// 0x0038 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateCharInfoAndReqClanUserList
// Flags: 
struct UwMatchMaker_execUpdateCharInfoAndReqClanUserList_Parms
{
};

// Function Engine.wMatchMaker.UpdateQuestList
// Flags: 
struct UwMatchMaker_execUpdateQuestList_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateRecv_CharInfo
// Flags: 
struct UwMatchMaker_execUpdateRecv_CharInfo_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdatePositionInfo
// Flags: 
struct UwMatchMaker_execUpdatePositionInfo_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateClanInfo
// Flags: 
struct UwMatchMaker_execUpdateClanInfo_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateMoneyInfo
// Flags: 
struct UwMatchMaker_execUpdateMoneyInfo_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateEquipItemInfo
// Flags: 
struct UwMatchMaker_execUpdateEquipItemInfo_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateRankingInfo
// Flags: 
struct UwMatchMaker_execUpdateRankingInfo_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateCharInfo
// Flags: 
struct UwMatchMaker_execUpdateCharInfo_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdateGameRoomInfo
// Flags: 
struct UwMatchMaker_execUpdateGameRoomInfo_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.UpdatePCBangInfo
// Flags: 
struct UwMatchMaker_execUpdatePCBangInfo_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchMaker.CMDHK
// Flags: 
struct UwMatchMaker_execCMDHK_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Param1;                                           		// 0x0004 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param2;                                           		// 0x0010 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     param3;                                           		// 0x001C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wMatchMaker.IsChannelRestrictionMaps
// Flags: 
struct UwMatchMaker_execIsChannelRestrictionMaps_Parms
{
	int                                                MapNum;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wMatchMaker.IsChannelRestrictionModes
// Flags: 
struct UwMatchMaker_execIsChannelRestrictionModes_Parms
{
	int                                                ModeNum;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wInstantFire.MakeFireNoise
// Flags: 
struct UwInstantFire_execMakeFireNoise_Parms
{
	class AwGun*                                       G;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wInstantFire.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct UwInstantFire_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.wInstantFire.CalcSpread
// Flags: 
struct UwInstantFire_execCalcSpread_Parms
{
	float                                              fSpreadMin;                                       		// 0x0000 ( 0x0004
	float                                              fSpreadMax;                                       		// 0x0004 ( 0x0004
};

// Function Engine.wInstantFire.SetSpreadStance
// Flags: 
struct UwInstantFire_execSetSpreadStance_Parms
{
	unsigned char                                      ss;                                               		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wInstantFire.StartMuzzleSmoke
// Flags: 
struct UwInstantFire_execStartMuzzleSmoke_Parms
{
	class AwGun*                                       G;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wInstantFire.DrawMuzzleFlash
// Flags: 
struct UwInstantFire_execDrawMuzzleFlash_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wInstantFire.DestroyEffects
// Flags: [ FUNC_Simulated ]
struct UwInstantFire_execDestroyEffects_Parms
{
};

// Function Engine.wInstantFire.InitEffects
// Flags: [ FUNC_Simulated ]
struct UwInstantFire_execInitEffects_Parms
{
};

// Function Engine.wInstantFire.wLoadOut
// Flags: [ FUNC_Simulated ]
struct UwInstantFire_execwLoadOut_Parms
{
};

// Function Engine.wInstantFire.FlashMuzzleFlash
// Flags: 
struct UwInstantFire_execFlashMuzzleFlash_Parms
{
	class AwGun*                                       G;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wInstantFire.DoTrace
// Flags: 
struct UwInstantFire_execDoTrace_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     X;                                                		// 0x0018 ( 0x000C
	struct FVector                                     End;                                              		// 0x0024 ( 0x000C
	float                                              DamageCurr;                                       		// 0x0030 ( 0x0004
	float                                              fDamageAmp;                                       		// 0x0034 ( 0x0004
	int                                                i;                                                		// 0x0038 ( 0x0004
	int                                                j;                                                		// 0x003C ( 0x0004
	class UBtrTraceResult*                             TrResult;                                         		// 0x0040 ( 0x0004
	struct FResultData                                 TrData;                                           		// 0x0044 ( 0x0024
	class TArray< float >                              arrResultDist;                                    		// 0x0068 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FResultData >                 arrVictim;                                        		// 0x0074 ( 0x000C[ CPF_NeedCtorLink ]
	struct FResultData                                 SortTempResult;                                   		// 0x0080 ( 0x0024
	float                                              SortTempResultDist;                               		// 0x00A4 ( 0x0004
	struct FResultData                                 Victim;                                           		// 0x00A8 ( 0x0024
	unsigned long                                      bHeadRound:1;                                     		// 0x00CC ( 0x0004 [0x00000001]
	float                                              frange;                                           		// 0x00D0 ( 0x0004
	float                                              fRangeLerp;                                       		// 0x00D4 ( 0x0004
	int                                                iTutorialZoomCheckID;                             		// 0x00D8 ( 0x0004
};

// Function Engine.wInstantFire.DoTraceForClient
// Flags: 
struct UwInstantFire_execDoTraceForClient_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     X;                                                		// 0x0018 ( 0x000C
	struct FVector                                     End;                                              		// 0x0024 ( 0x000C
	float                                              DamageCurr;                                       		// 0x0030 ( 0x0004
	float                                              fDamageAmp;                                       		// 0x0034 ( 0x0004
	int                                                i;                                                		// 0x0038 ( 0x0004
	int                                                j;                                                		// 0x003C ( 0x0004
	class UBtrTraceResult*                             TrResult;                                         		// 0x0040 ( 0x0004
	struct FResultData                                 TrData;                                           		// 0x0044 ( 0x0024
	class TArray< float >                              arrResultDist;                                    		// 0x0068 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FResultData >                 arrVictim;                                        		// 0x0074 ( 0x000C[ CPF_NeedCtorLink ]
	struct FResultData                                 SortTempResult;                                   		// 0x0080 ( 0x0024
	float                                              SortTempResultDist;                               		// 0x00A4 ( 0x0004
	struct FResultData                                 Victim;                                           		// 0x00A8 ( 0x0024
	unsigned long                                      bHeadRound:1;                                     		// 0x00CC ( 0x0004 [0x00000001]
	float                                              frange;                                           		// 0x00D0 ( 0x0004
	float                                              fRangeLerp;                                       		// 0x00D4 ( 0x0004
	int                                                iTutorialZoomCheckID;                             		// 0x00D8 ( 0x0004
	class UBtrTraceResult*                             ReverseTrResult;                                  		// 0x00DC ( 0x0004
	class TArray< unsigned long >                      arrIsWallShot;                                    		// 0x00E0 ( 0x000C[ CPF_NeedCtorLink ]
	float                                              DamageEff;                                        		// 0x00EC ( 0x0004
	float                                              DamageOuter;                                      		// 0x00F0 ( 0x0004
	int                                                EffCnt;                                           		// 0x00F4 ( 0x0004
	struct FVector                                     LastHitTrace;                                     		// 0x00F8 ( 0x000C
};

// Function Engine.wInstantFire.DoFireEffectForClient
// Flags: 
struct UwInstantFire_execDoFireEffectForClient_Parms
{
	struct FVector                                     StartTrace;                                       		// 0x0000 ( 0x000C
	struct FRotator                                    R;                                                		// 0x000C ( 0x000C
	struct FRotator                                    Aim;                                              		// 0x0018 ( 0x000C
};

// Function Engine.wInstantFire.DoTraceNative
// Flags: [ FUNC_Native ]
struct UwInstantFire_execDoTraceNative_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
};

// Function Engine.wInstantFire.DoFireEffect
// Flags: 
struct UwInstantFire_execDoFireEffect_Parms
{
	struct FVector                                     StartTrace;                                       		// 0x0000 ( 0x000C
	struct FRotator                                    R;                                                		// 0x000C ( 0x000C
	struct FRotator                                    Aim;                                              		// 0x0018 ( 0x000C
	int                                                i;                                                		// 0x0024 ( 0x0004
};

// Function Engine.wInstantFire.ModeTick
// Flags: [ FUNC_Event ]
struct UwInstantFire_eventModeTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wInstantFire.MaxRange
// Flags: 
struct UwInstantFire_execMaxRange_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wInstantFire.ServerPlayFiring
// Flags: 
struct UwInstantFire_execServerPlayFiring_Parms
{
	class AwGun*                                       G;                                                		// 0x0000 ( 0x0004
	float                                              fFireSoundRad;                                    		// 0x0004 ( 0x0004
};

// Function Engine.wInstantFire.PlayFiring
// Flags: 
struct UwInstantFire_execPlayFiring_Parms
{
	struct FName                                       locFireAnim;                                      		// 0x0000 ( 0x0004
	struct FName                                       locFireLoopAnim;                                  		// 0x0004 ( 0x0004
	float                                              locFireAnimRate;                                  		// 0x0008 ( 0x0004
	float                                              locFireLoopAnimRate;                              		// 0x000C ( 0x0004
	class AwGun*                                       G;                                                		// 0x0010 ( 0x0004
	unsigned long                                      bSkipAnim:1;                                      		// 0x0014 ( 0x0004 [0x00000001]
	float                                              fFireSoundRad;                                    		// 0x0018 ( 0x0004
};

// Function Engine.wInstantFire.AllowFire
// Flags: [ FUNC_Simulated ]
struct UwInstantFire_execAllowFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.wInstantFire.ModeDoFire
// Flags: [ FUNC_Event ]
struct UwInstantFire_eventModeDoFire_Parms
{
};

// Function Engine.wWeaponFire.DamageLog
// Flags: [ FUNC_Event ]
struct UwWeaponFire_eventDamageLog_Parms
{
	class APawn*                                       Victim;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fDam;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              fDist;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned char                                      CParts;                                           		// 0x000C ( 0x0001[ CPF_Parm ]
	struct FString                                     szType;                                           		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     szName;                                           		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     szParts;                                          		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wWeaponFire.MakeFireNoise
// Flags: 
struct UwWeaponFire_execMakeFireNoise_Parms
{
};

// Function Engine.wWeaponFire.SetSpreadStance
// Flags: 
struct UwWeaponFire_execSetSpreadStance_Parms
{
	unsigned char                                      ss;                                               		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wWeaponFire.wLoadOut
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execwLoadOut_Parms
{
};

// Function Engine.wWeaponFire.Trace
// Flags: 
struct UwWeaponFire_execTrace_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitNormal;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     TraceEnd;                                         		// 0x0018 ( 0x000C[ CPF_Parm ]
	struct FVector                                     TraceStart;                                       		// 0x0024 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bTraceActors:1;                                   		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     Extent;                                           		// 0x0034 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	class UMaterial*                                   Material;                                         		// 0x0040 ( 0x0004[ CPF_OptionalParm | CPF_Parm | CPF_OutParm ]
	class AActor*                                      ReturnValue;                                      		// 0x0044 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponFire.Spawn
// Flags: 
struct UwWeaponFire_execSpawn_Parms
{
	class UClass*                                      SpawnClass;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      SpawnOwner;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FName                                       SpawnTag;                                         		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     SpawnLocation;                                    		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	struct FRotator                                    SpawnRotation;                                    		// 0x0018 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponFire.MaxRange
// Flags: 
struct UwWeaponFire_execMaxRange_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponFire.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.wWeaponFire.GetFireStart
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execGetFireStart_Parms
{
	struct FVector                                     X;                                                		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Y;                                                		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     Z;                                                		// 0x0018 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponFire.AdjustAim
// Flags: 
struct UwWeaponFire_execAdjustAim_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              InAimError;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FRotator                                    ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponFire.PlayFireEnd
// Flags: 
struct UwWeaponFire_execPlayFireEnd_Parms
{
};

// Function Engine.wWeaponFire.PlayFiring
// Flags: 
struct UwWeaponFire_execPlayFiring_Parms
{
};

// Function Engine.wWeaponFire.PlayStartHold
// Flags: 
struct UwWeaponFire_execPlayStartHold_Parms
{
};

// Function Engine.wWeaponFire.PlayPreFire
// Flags: 
struct UwWeaponFire_execPlayPreFire_Parms
{
};

// Function Engine.wWeaponFire.PlaySoundTeam
// Flags: 
struct UwWeaponFire_execPlaySoundTeam_Parms
{
	struct FString                                     strSound;                                         		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                iCodeID;                                          		// 0x000C ( 0x0004
	float                                              fRadius;                                          		// 0x0010 ( 0x0004
	float                                              fMessageRange;                                    		// 0x0014 ( 0x0004
	struct FVector                                     vLocation;                                        		// 0x0018 ( 0x000C
};

// Function Engine.wWeaponFire.ServerPlayFiring
// Flags: 
struct UwWeaponFire_execServerPlayFiring_Parms
{
};

// Function Engine.wWeaponFire.AllowFire
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execAllowFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponFire.ModeHoldFire
// Flags: [ FUNC_Event ]
struct UwWeaponFire_eventModeHoldFire_Parms
{
};

// Function Engine.wWeaponFire.ModeDoFire
// Flags: [ FUNC_Event ]
struct UwWeaponFire_eventModeDoFire_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wWeaponFire.SyncRandSeed
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execSyncRandSeed_Parms
{
	int                                                RandSeed;                                         		// 0x0000 ( 0x0004
	int                                                DeathCount;                                       		// 0x0004 ( 0x0004
};

// Function Engine.wWeaponFire.ModeTick
// Flags: [ FUNC_Event ]
struct UwWeaponFire_eventModeTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeaponFire.IsFiring
// Flags: 
struct UwWeaponFire_execIsFiring_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponFire.StopFiring
// Flags: 
struct UwWeaponFire_execStopFiring_Parms
{
};

// Function Engine.wWeaponFire.StartFiring
// Flags: 
struct UwWeaponFire_execStartFiring_Parms
{
};

// Function Engine.wWeaponFire.Update
// Flags: 
struct UwWeaponFire_execUpdate_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeaponFire.StopForceFeedback
// Flags: 
struct UwWeaponFire_execStopForceFeedback_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerController*                           PC;                                               		// 0x000C ( 0x0004
};

// Function Engine.wWeaponFire.ClientPlayForceFeedback
// Flags: 
struct UwWeaponFire_execClientPlayForceFeedback_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerController*                           PC;                                               		// 0x000C ( 0x0004
};

// Function Engine.wWeaponFire.ShakeView
// Flags: 
struct UwWeaponFire_execShakeView_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004
	struct FRotator                                    rMin;                                             		// 0x0004 ( 0x000C
	struct FRotator                                    rMax;                                             		// 0x0010 ( 0x000C
	int                                                iPitch;                                           		// 0x001C ( 0x0004
	int                                                iYaw;                                             		// 0x0020 ( 0x0004
	float                                              fDecayFastBeginTime;                              		// 0x0024 ( 0x0004
	struct FRotator                                    Range;                                            		// 0x0028 ( 0x000C
	float                                              frange;                                           		// 0x0034 ( 0x0004
	float                                              frangeY;                                          		// 0x0038 ( 0x0004
	unsigned long                                      bUseWT:1;                                         		// 0x003C ( 0x0004 [0x00000001]
};

// Function Engine.wWeaponFire.StartMuzzleSmoke
// Flags: 
struct UwWeaponFire_execStartMuzzleSmoke_Parms
{
};

// Function Engine.wWeaponFire.FlashMuzzleFlash
// Flags: 
struct UwWeaponFire_execFlashMuzzleFlash_Parms
{
	class AActor*                                      ac;                                               		// 0x0000 ( 0x0004
};

// Function Engine.wWeaponFire.DrawMuzzleFlash
// Flags: 
struct UwWeaponFire_execDrawMuzzleFlash_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeaponFire.DoFireEffectForClient
// Flags: 
struct UwWeaponFire_execDoFireEffectForClient_Parms
{
};

// Function Engine.wWeaponFire.DoFireEffect
// Flags: 
struct UwWeaponFire_execDoFireEffect_Parms
{
};

// Function Engine.wWeaponFire.InitEffects
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execInitEffects_Parms
{
};

// Function Engine.wWeaponFire.DestroyEffects
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execDestroyEffects_Parms
{
};

// Function Engine.wWeaponFire.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execPostBeginPlay_Parms
{
};

// Function Engine.wWeaponFire.SetInitialState
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct UwWeaponFire_eventSetInitialState_Parms
{
};

// Function Engine.wWeaponFire.PostNetBeginPlay
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execPostNetBeginPlay_Parms
{
};

// Function Engine.wWeaponFire.BeginPlay
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execBeginPlay_Parms
{
};

// Function Engine.wWeaponFire.PreBeginPlay
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execPreBeginPlay_Parms
{
};

// Function Engine.wWeaponFire.Timer
// Flags: [ FUNC_Event ]
struct UwWeaponFire_eventTimer_Parms
{
};

// Function Engine.wWeaponFire.SetTimer
// Flags: [ FUNC_Simulated ]
struct UwWeaponFire_execSetTimer_Parms
{
	float                                              NewTimerRate;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bLoop:1;                                          		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wMapInfo.CopyTo
// Flags: 
struct UwMapInfo_execCopyTo_Parms
{
	class UwMapInfo*                                   Dest;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wQuestParam.IsEnabledEventQuest
// Flags: 
struct UwQuestParam_execIsEnabledEventQuest_Parms
{
	struct FBtrDouble                                  CurrentTime;                                      		// 0x0000 ( 0x0008[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wQuestParam.IsEventQuest
// Flags: 
struct UwQuestParam_execIsEventQuest_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckSpCharItem
// Flags: 
struct UwGameManager_execCheckSpCharItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckAccessoryItem
// Flags: 
struct UwGameManager_execCheckAccessoryItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckFaceItem
// Flags: 
struct UwGameManager_execCheckFaceItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckHeadItem
// Flags: 
struct UwGameManager_execCheckHeadItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckThrowingWeapon
// Flags: 
struct UwGameManager_execCheckThrowingWeapon_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckLvMark
// Flags: 
struct UwGameManager_execCheckLvMark_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckRandBoxItem
// Flags: 
struct UwGameManager_execCheckRandBoxItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckUseItem
// Flags: 
struct UwGameManager_execCheckUseItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckItemBox
// Flags: 
struct UwGameManager_execCheckItemBox_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckSkillItem
// Flags: 
struct UwGameManager_execCheckSkillItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckPistolItem
// Flags: 
struct UwGameManager_execCheckPistolItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckMGItem
// Flags: 
struct UwGameManager_execCheckMGItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckSGItem
// Flags: 
struct UwGameManager_execCheckSGItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckSRItem
// Flags: 
struct UwGameManager_execCheckSRItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckSMGItem
// Flags: 
struct UwGameManager_execCheckSMGItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckARItem
// Flags: 
struct UwGameManager_execCheckARItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.CheckEquipQuickSlotItem
// Flags: 
struct UwGameManager_execCheckEquipQuickSlotItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      eType;                                            		// 0x0008 ( 0x0001
};

// Function Engine.wGameManager.CheckMainQuickSlotItem
// Flags: 
struct UwGameManager_execCheckMainQuickSlotItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      eType;                                            		// 0x0008 ( 0x0001
};

// Function Engine.wGameManager.CheckQuickSlotItem
// Flags: 
struct UwGameManager_execCheckQuickSlotItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      eType;                                            		// 0x0008 ( 0x0001
};

// Function Engine.wGameManager.CheckSubWeaponItem
// Flags: 
struct UwGameManager_execCheckSubWeaponItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      eType;                                            		// 0x0008 ( 0x0001
};

// Function Engine.wGameManager.CheckMainWeaponItem
// Flags: 
struct UwGameManager_execCheckMainWeaponItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      eType;                                            		// 0x0008 ( 0x0001
};

// Function Engine.wGameManager.CheckWeaponItem
// Flags: 
struct UwGameManager_execCheckWeaponItem_Parms
{
	int                                                iItemType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      eType;                                            		// 0x0008 ( 0x0001
};

// Function Engine.wGameManager.GetEAXEffect
// Flags: [ FUNC_Simulated ]
struct UwGameManager_execGetEAXEffect_Parms
{
	struct FString                                     strEffectClassName;                               		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UI3DL2Listener*                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	struct FSEAXEffect                                 sEffect;                                          		// 0x0014 ( 0x0010[ CPF_NeedCtorLink ]
//	class UClass*                                      EffectClass;                                      		// 0x0024 ( 0x0004
};

// Function Engine.wGameManager.GetLevelImageString
// Flags: 
struct UwGameManager_execGetLevelImageString_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                LevelMarkID;                                      		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                idx;                                              		// 0x0014 ( 0x0004
};

// Function Engine.wGameManager.GetLevelImageCoordi
// Flags: 
struct UwGameManager_execGetLevelImageCoordi_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                LevelMarkID;                                      		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FFloatBox                                   ReturnValue;                                      		// 0x0008 ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FFloatBox                                   Coordi;                                           		// 0x0018 ( 0x0010
//	int                                                imgX;                                             		// 0x0028 ( 0x0004
//	int                                                imgY;                                             		// 0x002C ( 0x0004
};

// Function Engine.wGameManager.GetClanLevelImages
// Flags: 
struct UwGameManager_execGetClanLevelImages_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.GetLevelByLevelMarkID
// Flags: 
struct UwGameManager_execGetLevelByLevelMarkID_Parms
{
	int                                                LevelMarkID;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Level;                                            		// 0x0008 ( 0x0004
//	class UwItemBaseParam*                             ItemParam;                                        		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.GetLevel
// Flags: 
struct UwGameManager_execGetLevel_Parms
{
	int                                                Exp;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.LoadSupplyRandomTable
// Flags: 
struct UwGameManager_execLoadSupplyRandomTable_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	float                                              fValue;                                           		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.LoadMapInfos
// Flags: 
struct UwGameManager_execLoadMapInfos_Parms
{
	class UBTNetMapData*                               mapData;                                          		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	float                                              fValue;                                           		// 0x0008 ( 0x0004
	int                                                iIndex;                                           		// 0x000C ( 0x0004
	class UwMapInfo*                                   Info;                                             		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.GetPaintingItemIDbyPaintingID
// Flags: 
struct UwGameManager_execGetPaintingItemIDbyPaintingID_Parms
{
	int                                                PaintingID;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.GetPaintGroupParamsIndex
// Flags: 
struct UwGameManager_execGetPaintGroupParamsIndex_Parms
{
	int                                                PaintingID;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.GetPaintGroupParam
// Flags: 
struct UwGameManager_execGetPaintGroupParam_Parms
{
	int                                                iPaintingID;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwPaintGroupParam*                           ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwPaintGroupParam*                           PaintParam;                                       		// 0x0008 ( 0x0004
//	int                                                PaintingIdx;                                      		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.GetPaintingUIIcon
// Flags: 
struct UwGameManager_execGetPaintingUIIcon_Parms
{
	int                                                iItemID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.AddPaintGroupParam_NullData
// Flags: 
struct UwGameManager_execAddPaintGroupParam_NullData_Parms
{
	class UwPaintGroupParam*                           cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.AddPaintGroupParams
// Flags: 
struct UwGameManager_execAddPaintGroupParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwPaintGroupParam*                           cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.LoadPaintGroupParameters
// Flags: 
struct UwGameManager_execLoadPaintGroupParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.GetPartsGroupPainting
// Flags: 
struct UwGameManager_execGetPartsGroupPainting_Parms
{
	int                                                iItemID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iPartsID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bThird:1;                                         		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                iPainting_Item_ID;                                		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UMaterial*                                   ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwWeaponCustomInfoParam*                     wcip;                                             		// 0x0014 ( 0x0004
//	class UwItemResourceParam*                         resParam;                                         		// 0x0018 ( 0x0004
//	struct FString                                     strName;                                          		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
//	class UMaterial*                                   matResult;                                        		// 0x0028 ( 0x0004
};

// Function Engine.wGameManager.GetDefaultAddPartsGroupParam
// Flags: 
struct UwGameManager_execGetDefaultAddPartsGroupParam_Parms
{
	int                                                iItemID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwPartsGroupParam*                           ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBaseParam*                             baseParam;                                        		// 0x0008 ( 0x0004
//	int                                                iTemp;                                            		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.GetAddPartsGroupParam
// Flags: 
struct UwGameManager_execGetAddPartsGroupParam_Parms
{
	int                                                iPartsGrouplID;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwPartsGroupParam*                           ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.AddAddPartsGroupParam_NullData
// Flags: 
struct UwGameManager_execAddAddPartsGroupParam_NullData_Parms
{
	class UwPartsGroupParam*                           cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.AddAddPartsGroupParams
// Flags: 
struct UwGameManager_execAddAddPartsGroupParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwPartsGroupParam*                           cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.LoadAddPartsGroupParameters
// Flags: 
struct UwGameManager_execLoadAddPartsGroupParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.AddItemBoxParams
// Flags: 
struct UwGameManager_execAddItemBoxParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemBoxParam*                              cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0018 ( 0x0004
	struct FString                                     ItemID;                                           		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     PartID;                                           		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.AddItemBoxParam_NullData
// Flags: 
struct UwGameManager_execAddItemBoxParam_NullData_Parms
{
	class UwItemBoxParam*                              cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.LoadItemBoxParameters
// Flags: 
struct UwGameManager_execLoadItemBoxParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.GetClanMark128
// Flags: 
struct UwGameManager_execGetClanMark128_Parms
{
	int                                                clanmarkid;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      ReturnValue;                                      		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Index;                                            		// 0x0024 ( 0x0004
};

// Function Engine.wGameManager.GetClanMark32
// Flags: 
struct UwGameManager_execGetClanMark32_Parms
{
	int                                                clanmarkid;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      ReturnValue;                                      		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Index;                                            		// 0x0024 ( 0x0004
};

// Function Engine.wGameManager.GetMyClanBL
// Flags: 
struct UwGameManager_execGetMyClanBL_Parms
{
	struct FImage                                      ReturnValue;                                      		// 0x0000 ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetMyClanBG
// Flags: 
struct UwGameManager_execGetMyClanBG_Parms
{
	struct FImage                                      ReturnValue;                                      		// 0x0000 ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetMyClanPattern
// Flags: 
struct UwGameManager_execGetMyClanPattern_Parms
{
	struct FImage                                      ReturnValue;                                      		// 0x0000 ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.FindClanMarkIndex
// Flags: 
struct UwGameManager_execFindClanMarkIndex_Parms
{
	int                                                clanmarkid;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindClanMarkParams
// Flags: 
struct UwGameManager_execFindClanMarkParams_Parms
{
	int                                                clanmarkid;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwClanMarkParam*                             ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.AddClanMarkParams
// Flags: 
struct UwGameManager_execAddClanMarkParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwClanMarkParam*                             cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.AddClanMarkParam_NullData
// Flags: 
struct UwGameManager_execAddClanMarkParam_NullData_Parms
{
	class UwClanMarkParam*                             cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.LoadModeDOAParameters
// Flags: 
struct UwGameManager_execLoadModeDOAParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	class UwModeDOAParam*                              Param;                                            		// 0x0008 ( 0x0004
	int                                                iIndex;                                           		// 0x000C ( 0x0004
	int                                                i;                                                		// 0x0010 ( 0x0004
	int                                                tmpVal;                                           		// 0x0014 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.GetRandBoxItems
// Flags: 
struct UwGameManager_execGetRandBoxItems_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RandNum;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	class TArray< int >                                ItemIDs;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< int >                                PartIDs;                                          		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0024 ( 0x0004
//	int                                                j;                                                		// 0x0028 ( 0x0004
};

// Function Engine.wGameManager.GetRandBoxItemsCount
// Flags: 
struct UwGameManager_execGetRandBoxItemsCount_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                MaxIndex;                                         		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.AddRandBoxParams
// Flags: 
struct UwGameManager_execAddRandBoxParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwRandBoxParam*                              cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	int                                                i;                                                		// 0x000C ( 0x0004
	struct FString                                     strTemp;                                          		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.AddRandBoxParam_NullData
// Flags: 
struct UwGameManager_execAddRandBoxParam_NullData_Parms
{
	class UwRandBoxParam*                              cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.LoadRandBoxParameters
// Flags: 
struct UwGameManager_execLoadRandBoxParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.GetLastDailyQuestID
// Flags: 
struct UwGameManager_execGetLastDailyQuestID_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwQuestParam*                                q;                                                		// 0x0008 ( 0x0004
//	int                                                DailyQuestType;                                   		// 0x000C ( 0x0004
//	int                                                Step;                                             		// 0x0010 ( 0x0004
//	int                                                ServerTime;                                       		// 0x0014 ( 0x0004
};

// Function Engine.wGameManager.GetPrevDailyQuestID
// Flags: 
struct UwGameManager_execGetPrevDailyQuestID_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwQuestParam*                                q;                                                		// 0x0008 ( 0x0004
//	int                                                DailyQuestType;                                   		// 0x000C ( 0x0004
//	int                                                Step;                                             		// 0x0010 ( 0x0004
//	int                                                ServerTime;                                       		// 0x0014 ( 0x0004
};

// Function Engine.wGameManager.GetDailyQuestIDFromTypeAndStep
// Flags: 
struct UwGameManager_execGetDailyQuestIDFromTypeAndStep_Parms
{
	int                                                ServerTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                DailyQuestType;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Step;                                             		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class TArray< class UwDailyQuestParam* >           Arr;                                              		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x001C ( 0x0004
};

// Function Engine.wGameManager.GetDailyQuestType
// Flags: 
struct UwGameManager_execGetDailyQuestType_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.AddDailyQuestParams
// Flags: 
struct UwGameManager_execAddDailyQuestParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwDailyQuestParam*                           cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.AddDailyQuestParam_NullData
// Flags: 
struct UwGameManager_execAddDailyQuestParam_NullData_Parms
{
	class UwDailyQuestParam*                           cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.LoadDailyQuestParameters
// Flags: 
struct UwGameManager_execLoadDailyQuestParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.TimeStringToBtrTime
// Flags: 
struct UwGameManager_execTimeStringToBtrTime_Parms
{
	struct FString                                     strInTime;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FBtrTime                                    ReturnValue;                                      		// 0x000C ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     strDate;                                          		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     strTime;                                          		// 0x0038 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     strTemp;                                          		// 0x0044 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FBtrTime                                    resultBtrTime;                                    		// 0x0050 ( 0x0020
};

// Function Engine.wGameManager.HasEnableEventQuest
// Flags: 
struct UwGameManager_execHasEnableEventQuest_Parms
{
	struct FBtrDouble                                  ServerTime;                                       		// 0x0000 ( 0x0008[ CPF_Parm ]
	class UwMatchMaker*                                wMM;                                              		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.GetLinkQuestMaxStep
// Flags: 
struct UwGameManager_execGetLinkQuestMaxStep_Parms
{
	int                                                LinkQuestID;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                maxstep;                                          		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.GetLinkQuestInfo
// Flags: 
struct UwGameManager_execGetLinkQuestInfo_Parms
{
	int                                                LinkQuestID;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                LinkQuestStep;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwQuestParam*                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.GetQuestInfoIndex
// Flags: 
struct UwGameManager_execGetQuestInfoIndex_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.GetQuestInfoFromIndex
// Flags: 
struct UwGameManager_execGetQuestInfoFromIndex_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwQuestParam*                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetQuestInfo
// Flags: 
struct UwGameManager_execGetQuestInfo_Parms
{
	int                                                QuestID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwQuestParam*                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.GetItemType
// Flags: 
struct UwGameManager_execGetItemType_Parms
{
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                iItemType;                                        		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.IsEnableWeaponModify
// Flags: 
struct UwGameManager_execIsEnableWeaponModify_Parms
{
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.AddQuestParams
// Flags: 
struct UwGameManager_execAddQuestParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwQuestParam*                                cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FBtrTime                                    EventTime;                                        		// 0x0018 ( 0x0020
};

// Function Engine.wGameManager.AddQuestParam_NullData
// Flags: 
struct UwGameManager_execAddQuestParam_NullData_Parms
{
	class UwQuestParam*                                cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.LoadQuestParameters
// Flags: 
struct UwGameManager_execLoadQuestParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.GetPromotionItems
// Flags: 
struct UwGameManager_execGetPromotionItems_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< class UwPromotionParam* >            arrItems;                                         		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0010 ( 0x0004
	int                                                Count;                                            		// 0x0014 ( 0x0004
};

// Function Engine.wGameManager.GetPromotionItemsCount
// Flags: 
struct UwGameManager_execGetPromotionItemsCount_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                Count;                                            		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.AddPromotionParams
// Flags: 
struct UwGameManager_execAddPromotionParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwPromotionParam*                            cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.AddPromotionParam_NullData
// Flags: 
struct UwGameManager_execAddPromotionParam_NullData_Parms
{
	class UwPromotionParam*                            cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.LoadPromotionParameters
// Flags: 
struct UwGameManager_execLoadPromotionParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.AddClanLevelInfoParams
// Flags: 
struct UwGameManager_execAddClanLevelInfoParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwClanLevelInfoParam*                        cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.AddClanLevelInfoParam_NullData
// Flags: 
struct UwGameManager_execAddClanLevelInfoParam_NullData_Parms
{
	class UwClanLevelInfoParam*                        cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.LoadClanLevelInfoParams
// Flags: 
struct UwGameManager_execLoadClanLevelInfoParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.AddLevelInfoParams
// Flags: 
struct UwGameManager_execAddLevelInfoParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwLevelInfoParam*                            cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.AddLevelInfoParam_NullData
// Flags: 
struct UwGameManager_execAddLevelInfoParam_NullData_Parms
{
	class UwLevelInfoParam*                            cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.LoadLevelInfoParams
// Flags: 
struct UwGameManager_execLoadLevelInfoParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.GetSkillParam
// Flags: 
struct UwGameManager_execGetSkillParam_Parms
{
	int                                                iSkillID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwSkillBaseParam*                            ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.AddSkillParam_NullData
// Flags: 
struct UwGameManager_execAddSkillParam_NullData_Parms
{
	class UwSkillBaseParam*                            cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.AddSkillParams
// Flags: 
struct UwGameManager_execAddSkillParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwSkillBaseParam*                            cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.LoadSkillParameters
// Flags: 
struct UwGameManager_execLoadSkillParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.GetItemResourceStaticMesh
// Flags: 
struct UwGameManager_execGetItemResourceStaticMesh_Parms
{
	int                                                iItemID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      b3rd:1;                                           		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      byTeam;                                           		// 0x0008 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      byCase;                                           		// 0x0009 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	class UStaticMesh*                                 ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemResourceParam*                         cResParam;                                        		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.GetItemResourceMesh
// Flags: 
struct UwGameManager_execGetItemResourceMesh_Parms
{
	int                                                iItemID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      b3rd:1;                                           		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      byTeam;                                           		// 0x0008 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      byCase;                                           		// 0x0009 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	class UMesh*                                       ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemResourceParam*                         cResParam;                                        		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.PrecacheItemResources
// Flags: 
struct UwGameManager_execPrecacheItemResources_Parms
{
	class ALevelInfo*                                  Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                lp1;                                              		// 0x0004 ( 0x0004
	class UwItemBaseParam*                             Item;                                             		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.GetItemResourceParam
// Flags: 
struct UwGameManager_execGetItemResourceParam_Parms
{
	int                                                iItemID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemResourceParam*                         ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.AddItemResourceParam_NullData
// Flags: 
struct UwGameManager_execAddItemResourceParam_NullData_Parms
{
	class UwItemResourceParam*                         cParam;                                           		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.AddItemResourceParams
// Flags: 
struct UwGameManager_execAddItemResourceParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemResourceParam*                         cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strTemp;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.LoadItemResourceParams
// Flags: 
struct UwGameManager_execLoadItemResourceParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.GetItemParam
// Flags: 
struct UwGameManager_execGetItemParam_Parms
{
	int                                                iItemID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemBaseParam*                             ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.AddItemParam_NullData
// Flags: 
struct UwGameManager_execAddItemParam_NullData_Parms
{
	class UwItemBaseParam*                             tmParam;                                          		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.AddItemParams
// Flags: 
struct UwGameManager_execAddItemParams_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemBaseParam*                             cParam;                                           		// 0x0004 ( 0x0004
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	int                                                ItemID;                                           		// 0x000C ( 0x0004
	int                                                i;                                                		// 0x0010 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0014 ( 0x0004 [0x00000001]
	struct FString                                     strTemp;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FString >                     strArrayTemp;                                     		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.LoadItemParameters
// Flags: 
struct UwGameManager_execLoadItemParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.DestroyScript
// Flags: [ FUNC_Event ]
struct UwGameManager_eventDestroyScript_Parms
{
};

// Function Engine.wGameManager.ContainsBadNicks
// Flags: 
struct UwGameManager_execContainsBadNicks_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     badword;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x001C ( 0x0004
};

// Function Engine.wGameManager.FilterBadWords
// Flags: 
struct UwGameManager_execFilterBadWords_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x0010 ( 0x0004
//	int                                                lp1;                                              		// 0x0014 ( 0x0004
//	int                                                badlen;                                           		// 0x0018 ( 0x0004
//	struct FString                                     capped;                                           		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     Repl;                                             		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
//	unsigned long                                      bRet:1;                                           		// 0x0034 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.ContainsBadWords
// Flags: 
struct UwGameManager_execContainsBadWords_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     badword;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x001C ( 0x0004
};

// Function Engine.wGameManager.LoadBadwords
// Flags: 
struct UwGameManager_execLoadBadwords_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     S;                                                		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.LoadAlienGameInfo
// Flags: 
struct UwGameManager_execLoadAlienGameInfo_Parms
{
};

// Function Engine.wGameManager.GetDefenceGameRoundCount2
// Flags: 
struct UwGameManager_execGetDefenceGameRoundCount2_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                MapID;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
//	int                                                RoundNum;                                         		// 0x0010 ( 0x0004
//	class TArray< class UwDefenceGameParam* >          params;                                           		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.GetDefenceGameBotGradeList2
// Flags: 
struct UwGameManager_execGetDefenceGameBotGradeList2_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                MapID;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Round;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
	class TArray< int >                                GradeList;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0018 ( 0x0004
	int                                                j;                                                		// 0x001C ( 0x0004
	unsigned long                                      bFind:1;                                          		// 0x0020 ( 0x0004 [0x00000001]
	class TArray< class UwDefenceGameParam* >          params;                                           		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.GetDefenceGamePrams2
// Flags: 
struct UwGameManager_execGetDefenceGamePrams2_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                MapID;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Round;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
	class TArray< int >                                DelayTime;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< int >                                RegenLoc;                                         		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< int >                                Grade;                                            		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< int >                                Unit;                                             		// 0x0030 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x003C ( 0x0004
	class TArray< class UwDefenceGameParam* >          params;                                           		// 0x0040 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.LoadDefenceGameInfo
// Flags: 
struct UwGameManager_execLoadDefenceGameInfo_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	int                                                i;                                                		// 0x000C ( 0x0004
	int                                                j;                                                		// 0x0010 ( 0x0004
	int                                                iLevel;                                           		// 0x0014 ( 0x0004
	int                                                MapID;                                            		// 0x0018 ( 0x0004
	class TArray< class UwDefenceGameParam* >          params;                                           		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
	class UwDefenceGameParam*                          Param;                                            		// 0x0028 ( 0x0004
};

// Function Engine.wGameManager.LoadClanMarkParameters
// Flags: 
struct UwGameManager_execLoadClanMarkParameters_Parms
{
	class UBTNetGameData*                              GameData;                                         		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.GetLevelDefenceGameParam
// Flags: 
struct UwGameManager_execGetLevelDefenceGameParam_Parms
{
	int                                                iLevel;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< class UwDefenceGameParam* >          params;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.SetLevelDefenceGameParam
// Flags: 
struct UwGameManager_execSetLevelDefenceGameParam_Parms
{
	int                                                iLevel;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< class UwDefenceGameParam* >          params;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.LoadNPCActionGroup
// Flags: 
struct UwGameManager_execLoadNPCActionGroup_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strActionGroupID;                                 		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strActionID;                                      		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	class UwNPCActionGroupParam*                       Param;                                            		// 0x0024 ( 0x0004
};

// Function Engine.wGameManager.LoadNPCItemGroup
// Flags: 
struct UwGameManager_execLoadNPCItemGroup_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strGroupID;                                       		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strItemID;                                        		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strPartsID;                                       		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	class UwNPCItemGroupParam*                         Param;                                            		// 0x0030 ( 0x0004
};

// Function Engine.wGameManager.LoadNPCNameGroup
// Flags: 
struct UwGameManager_execLoadNPCNameGroup_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strGroupID;                                       		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strNickname;                                      		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	class UwNPCNameGroupParam*                         Param;                                            		// 0x0024 ( 0x0004
};

// Function Engine.wGameManager.LoadNPC
// Flags: 
struct UwGameManager_execLoadNPC_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strID;                                            		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strNameGroupID;                                   		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strLv;                                            		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strType;                                          		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strMainWeapon;                                    		// 0x003C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strPistol;                                        		// 0x0048 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strGrenade1;                                      		// 0x0054 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strGrenade2;                                      		// 0x0060 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strSprintRate;                                    		// 0x006C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strActiveSkill;                                   		// 0x0078 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strPassive1;                                      		// 0x0084 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strPassive2;                                      		// 0x0090 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strPassive3;                                      		// 0x009C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strSpChar_AF;                                     		// 0x00A8 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strSpChar_RSA;                                    		// 0x00B4 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strHead;                                          		// 0x00C0 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strFace;                                          		// 0x00CC ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strAccessory;                                     		// 0x00D8 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strHP;                                            		// 0x00E4 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ActionGroupID;                                    		// 0x00F0 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     DamageRate;                                       		// 0x00FC ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ExplosionDmageRate;                               		// 0x0108 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     MeleeDamageRate;                                  		// 0x0114 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ReactionTime;                                     		// 0x0120 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     DetourRate;                                       		// 0x012C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     DetourWeightMin;                                  		// 0x0138 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     DetourWeightMax;                                  		// 0x0144 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     SafeWeightMin;                                    		// 0x0150 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     SafeWeightMax;                                    		// 0x015C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     HeadshotChance;                                   		// 0x0168 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     RotationgSpeed;                                   		// 0x0174 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     MeleeActionRange;                                 		// 0x0180 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     MeleeRange;                                       		// 0x018C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     EffectiveRange;                                   		// 0x0198 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     CloseRange;                                       		// 0x01A4 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     OuterRangeSpreadMin;                              		// 0x01B0 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     OuterRangeSpreadMax;                              		// 0x01BC ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     EffectiveRangeSpreadMin;                          		// 0x01C8 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     EffectiveRangeSpreadMax;                          		// 0x01D4 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     CloseRangeSpreadMin;                              		// 0x01E0 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     CloseRangeSpreadMax;                              		// 0x01EC ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ZeroRangeSpreadMin;                               		// 0x01F8 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ZeroRangeSpreadMax;                               		// 0x0204 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     HeadshotChanceMG;                                 		// 0x0210 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     HeadshotSpreadRate;                               		// 0x021C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strDefaultRunSpeed;                               		// 0x0228 ( 0x000C[ CPF_NeedCtorLink ]
	class UwNPCParam*                                  Param;                                            		// 0x0234 ( 0x0004
};

// Function Engine.wGameManager.LoadNPCSpawn
// Flags: 
struct UwGameManager_execLoadNPCSpawn_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	int                                                iIndex;                                           		// 0x0008 ( 0x0004
	struct FString                                     strGrade;                                         		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strType;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strID;                                            		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	class UwNPCSpawnParam*                             Param;                                            		// 0x0030 ( 0x0004
};

// Function Engine.wGameManager.LoadLevelTextures
// Flags: 
struct UwGameManager_execLoadLevelTextures_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wGameManager.InitPrecacheItems
// Flags: [ FUNC_Event ]
struct UwGameManager_eventInitPrecacheItems_Parms
{
};

// Function Engine.wGameManager.InitHK
// Flags: [ FUNC_Event ]
struct UwGameManager_eventInitHK_Parms
{
};

// Function Engine.wGameManager.LoadWeaponCustomPartsParameters
// Flags: 
struct UwGameManager_execLoadWeaponCustomPartsParameters_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	int                                                iIndex;                                           		// 0x0004 ( 0x0004
	int                                                iBit;                                             		// 0x0008 ( 0x0004
	int                                                iUnionedPartID;                                   		// 0x000C ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0010 ( 0x0004 [0x00000001]
	class UwWeaponCustomPartsParam*                    wcp;                                              		// 0x0014 ( 0x0004
	struct FString                                     strData;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.LoadWeaponCustomInfoParameters
// Flags: 
struct UwGameManager_execLoadWeaponCustomInfoParameters_Parms
{
	class UBTNetExcelData*                             excel;                                            		// 0x0000 ( 0x0004
	int                                                iIndex;                                           		// 0x0004 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0008 ( 0x0004 [0x00000001]
	class UwWeaponCustomInfoParam*                     wci;                                              		// 0x000C ( 0x0004
	struct FString                                     strData;                                          		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
	class UwWeaponCustomPartsParam*                    wcpp;                                             		// 0x001C ( 0x0004
};

// Function Engine.wGameManager.GetWeaponCustomInfoParam
// Flags: 
struct UwGameManager_execGetWeaponCustomInfoParam_Parms
{
	int                                                iInItemID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwWeaponCustomInfoParam*                     ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetWeaponCustomPartsParamByUnionedPartID
// Flags: 
struct UwGameManager_execGetWeaponCustomPartsParamByUnionedPartID_Parms
{
	int                                                iInUnionedPartID;                                 		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwWeaponCustomPartsParam*                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetWeaponCustomPartsParamByItemID
// Flags: 
struct UwGameManager_execGetWeaponCustomPartsParamByItemID_Parms
{
	int                                                iInItemID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwWeaponCustomPartsParam*                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                iTemp;                                            		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.InitScript
// Flags: [ FUNC_Event ]
struct UwGameManager_eventInitScript_Parms
{
};

// Function Engine.wGameManager.GetWeaponCustomPartsIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execGetWeaponCustomPartsIndex_Parms
{
	int                                                iUnionedPartID;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.SetWeaponCustomPartsIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execSetWeaponCustomPartsIndex_Parms
{
	int                                                iUnionedPartID;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iArrayIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.GetWeaponCustomInfoIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execGetWeaponCustomInfoIndex_Parms
{
	int                                                iItemIndex;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.SetWeaponCustomInfoIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execSetWeaponCustomInfoIndex_Parms
{
	int                                                iItemIndex;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iArrayIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.GetPartsGroupArrayIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execGetPartsGroupArrayIndex_Parms
{
	int                                                iPartsGroupIndex;                                 		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.SetPartsGroupIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execSetPartsGroupIndex_Parms
{
	int                                                iPartsGroupIndex;                                 		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iArrayIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.GetSkillArrayIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execGetSkillArrayIndex_Parms
{
	int                                                iSkillIndex;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.SetSkillIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execSetSkillIndex_Parms
{
	int                                                iSkillIndex;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iArrayIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.GetItemArrayIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execGetItemArrayIndex_Parms
{
	int                                                iItemIndex;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.SetItemIndex
// Flags: [ FUNC_Native ]
struct UwGameManager_execSetItemIndex_Parms
{
	int                                                iItemIndex;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iArrayIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.GetSubWeaponUniqueID
// Flags: 
struct UwGameManager_execGetSubWeaponUniqueID_Parms
{
	struct FBtrDouble                                  ReturnValue;                                      		// 0x0000 ( 0x0008[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.GetMainWeaponUniqueID
// Flags: 
struct UwGameManager_execGetMainWeaponUniqueID_Parms
{
	struct FBtrDouble                                  ReturnValue;                                      		// 0x0000 ( 0x0008[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.GetSubWeaponID
// Flags: 
struct UwGameManager_execGetSubWeaponID_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetMainWeaponID
// Flags: 
struct UwGameManager_execGetMainWeaponID_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.ClearInstanceItem
// Flags: 
struct UwGameManager_execClearInstanceItem_Parms
{
};

// Function Engine.wGameManager.FindInstanceItemIDBySlotPos
// Flags: 
struct UwGameManager_execFindInstanceItemIDBySlotPos_Parms
{
	int                                                SlotPos;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindInstanceItemBySlotPos
// Flags: 
struct UwGameManager_execFindInstanceItemBySlotPos_Parms
{
	int                                                SlotPos;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemBoxInstanceHK*                         ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindInstanceItemReturnIndexByUniqueSkillID
// Flags: 
struct UwGameManager_execFindInstanceItemReturnIndexByUniqueSkillID_Parms
{
	int                                                UniqueSkillID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindInstanceItemReturnIndex
// Flags: 
struct UwGameManager_execFindInstanceItemReturnIndex_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.RemoveInstanceItemByUniqueSkillID
// Flags: 
struct UwGameManager_execRemoveInstanceItemByUniqueSkillID_Parms
{
	int                                                UniqueSkillID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Index;                                            		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.RemoveInstanceItem
// Flags: 
struct UwGameManager_execRemoveInstanceItem_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Index;                                            		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.FindInstanceSkillItemReturnIndex
// Flags: 
struct UwGameManager_execFindInstanceSkillItemReturnIndex_Parms
{
	int                                                UniqueID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindFirstInstanceItemByItemID
// Flags: 
struct UwGameManager_execFindFirstInstanceItemByItemID_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemBoxInstanceHK*                         ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindInstanceSkillItem
// Flags: 
struct UwGameManager_execFindInstanceSkillItem_Parms
{
	int                                                UniqueID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemBoxInstanceHK*                         ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindInstanceItemSameWeapon
// Flags: 
struct UwGameManager_execFindInstanceItemSameWeapon_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                PartID;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwItemBoxInstanceHK*                         ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
//	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.FindInstanceItem
// Flags: 
struct UwGameManager_execFindInstanceItem_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	class UwItemBoxInstanceHK*                         ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.ChangeInstance_SkillSlotPos
// Flags: 
struct UwGameManager_execChangeInstance_SkillSlotPos_Parms
{
	int                                                SkillUniqueID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                SlotPos;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.ChangeInstance_ItemSlotPos
// Flags: 
struct UwGameManager_execChangeInstance_ItemSlotPos_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                SlotPos;                                          		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.ChangeInstance_StackCount
// Flags: 
struct UwGameManager_execChangeInstance_StackCount_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                StackCount;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.ChangeInstance_ItemReduceDurability
// Flags: 
struct UwGameManager_execChangeInstance_ItemReduceDurability_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                dur;                                              		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.ChangeInstance_ItemDamageDegree
// Flags: 
struct UwGameManager_execChangeInstance_ItemDamageDegree_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                dd;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.ChangeInstance_ItemDurability
// Flags: 
struct UwGameManager_execChangeInstance_ItemDurability_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                dur;                                              		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.ChangeInstance_DefaultWeapon
// Flags: 
struct UwGameManager_execChangeInstance_DefaultWeapon_Parms
{
	int                                                SlotPos;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.ChangeInstance_ItemLeftTime
// Flags: 
struct UwGameManager_execChangeInstance_ItemLeftTime_Parms
{
	struct FBtrDouble                                  CurrentTime;                                      		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
	struct FBtrTime                                    t;                                                		// 0x000C ( 0x0020
	struct FBtrTime                                    t2;                                               		// 0x002C ( 0x0020
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x004C ( 0x0004
};

// Function Engine.wGameManager.AddInstanceItem
// Flags: 
struct UwGameManager_execAddInstanceItem_Parms
{
	class UwItemBoxInstanceHK*                         Item;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.AddCashItem
// Flags: 
struct UwGameManager_execAddCashItem_Parms
{
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FString                                     strEndDate;                                       		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                j;                                                		// 0x0018 ( 0x0004
//	struct FGP20Product                                gp20P;                                            		// 0x001C ( 0x010C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.AddInstanceItemByParameter
// Flags: 
struct UwGameManager_execAddInstanceItemByParameter_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FBtrDouble                                  UniqueID;                                         		// 0x0004 ( 0x0008[ CPF_Parm ]
	int                                                UniqueSkillID;                                    		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                SlotPos;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                ItemState;                                        		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                Durability;                                       		// 0x0018 ( 0x0004[ CPF_Parm ]
	int                                                PartID;                                           		// 0x001C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                PaintID;                                          		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                StackCount;                                       		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                DamageDegree;                                     		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FBtrDouble                                  UntilTime;                                        		// 0x002C ( 0x0008[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bStackAdd:1;                                      		// 0x0034 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                TradeCount;                                       		// 0x0038 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UwItemBoxInstanceHK*                         ReturnValue;                                      		// 0x003C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FBtrTime                                    t;                                                		// 0x0040 ( 0x0020
//	struct FBtrTime                                    tServer;                                          		// 0x0060 ( 0x0020
//	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0080 ( 0x0004
//	unsigned long                                      bIsSkill:1;                                       		// 0x0084 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.AddInstanceSkillItemFromSkillBoxList
// Flags: 
struct UwGameManager_execAddInstanceSkillItemFromSkillBoxList_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
//	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindUIItemReturnIndex
// Flags: 
struct UwGameManager_execFindUIItemReturnIndex_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindUIItem
// Flags: 
struct UwGameManager_execFindUIItem_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemBoxHK*                                 ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.AddUIItem
// Flags: 
struct UwGameManager_execAddUIItem_Parms
{
	class UwItemBoxHK*                                 Item;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.CompareLE_UIShowItemLists
// Flags: 
struct UwGameManager_execCompareLE_UIShowItemLists_Parms
{
	class UwItemBoxHK*                                 L;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwItemBoxHK*                                 R;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.SetQuickSlotBox_Skill
// Flags: 
struct UwGameManager_execSetQuickSlotBox_Skill_Parms
{
	int                                                DispOrder;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                SlotPos;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                SkillID;                                          		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                UniqueSkillID;                                    		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.SetQuickSlotBox_Item
// Flags: 
struct UwGameManager_execSetQuickSlotBox_Item_Parms
{
	int                                                DispOrder;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                SlotPos;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ItemID;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FBtrDouble                                  UniqueID;                                         		// 0x000C ( 0x0008[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.RemoveQuickSlotItem
// Flags: 
struct UwGameManager_execRemoveQuickSlotItem_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
	int                                                j;                                                		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.SetQuickSlotBox_ID
// Flags: 
struct UwGameManager_execSetQuickSlotBox_ID_Parms
{
	int                                                DispOrder;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                QuickSlotID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.SetQuickSlotBox_Name
// Flags: 
struct UwGameManager_execSetQuickSlotBox_Name_Parms
{
	int                                                DispOrder;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     QSName;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.AllocateQuickSlotBoxList
// Flags: 
struct UwGameManager_execAllocateQuickSlotBoxList_Parms
{
	int                                                Len;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	class UwQuickSlotBoxHK*                            qsbox;                                            		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.ClearQuickSlotBoxList
// Flags: 
struct UwGameManager_execClearQuickSlotBoxList_Parms
{
};

// Function Engine.wGameManager.ReplaceQuickSkillSlotItem
// Flags: 
struct UwGameManager_execReplaceQuickSkillSlotItem_Parms
{
	int                                                SkillID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                UniqueSkillID;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
	int                                                j;                                                		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.RemoveQuickSlotBoxSkillItem
// Flags: 
struct UwGameManager_execRemoveQuickSlotBoxSkillItem_Parms
{
	int                                                UniqueID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                j;                                                		// 0x000C ( 0x0004
//	unsigned long                                      bRemovedItem:1;                                   		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.GetQuickSlotIndexOfBoxSkillItem
// Flags: 
struct UwGameManager_execGetQuickSlotIndexOfBoxSkillItem_Parms
{
	int                                                UniqueSkillID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< int >                                ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< int >                                QuickSlotIdx;                                     		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x001C ( 0x0004
//	int                                                j;                                                		// 0x0020 ( 0x0004
};

// Function Engine.wGameManager.IsQuickSlotBoxSkillItem
// Flags: 
struct UwGameManager_execIsQuickSlotBoxSkillItem_Parms
{
	int                                                UniqueSkillID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                j;                                                		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.ReplaceQuickSlotBoxItem
// Flags: 
struct UwGameManager_execReplaceQuickSlotBoxItem_Parms
{
	struct FBtrDouble                                  OldUniqueID;                                      		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                ItemID;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FBtrDouble                                  NewUniqueID;                                      		// 0x000C ( 0x0008[ CPF_Parm ]
	int                                                i;                                                		// 0x0014 ( 0x0004
	int                                                j;                                                		// 0x0018 ( 0x0004
};

// Function Engine.wGameManager.GetQuickSlotIndexOfBoxItem
// Flags: 
struct UwGameManager_execGetQuickSlotIndexOfBoxItem_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
//	int                                                j;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.IsQuickSlotBoxItem
// Flags: 
struct UwGameManager_execIsQuickSlotBoxItem_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
//	int                                                j;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wGameManager.RemoveQuickSlotBoxItem
// Flags: 
struct UwGameManager_execRemoveQuickSlotBoxItem_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
//	int                                                j;                                                		// 0x0010 ( 0x0004
//	unsigned long                                      bRemovedItem:1;                                   		// 0x0014 ( 0x0004 [0x00000001]
};

// Function Engine.wGameManager.AddUISkillBox
// Flags: 
struct UwGameManager_execAddUISkillBox_Parms
{
	unsigned char                                      SlotPos;                                          		// 0x0000 ( 0x0001[ CPF_Parm ]
	int                                                SkillID;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                UniqueSkillID;                                    		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FBtrDouble                                  UntilTime;                                        		// 0x000C ( 0x0008[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwSkillBoxHK*                                SkillBox;                                         		// 0x0018 ( 0x0004
};

// Function Engine.wGameManager.ChangeSkillBox_SlotPos
// Flags: 
struct UwGameManager_execChangeSkillBox_SlotPos_Parms
{
	int                                                SkillUniqueID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                SlotPos;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwSkillBoxHK*                                SkillBox;                                         		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindSkillBoxBySlotPos
// Flags: 
struct UwGameManager_execFindSkillBoxBySlotPos_Parms
{
	int                                                SlotPos;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwSkillBoxHK*                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.FindSkillBox
// Flags: 
struct UwGameManager_execFindSkillBox_Parms
{
	int                                                UniqueSkillID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwSkillBoxHK*                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.ClearSkillBoxList
// Flags: 
struct UwGameManager_execClearSkillBoxList_Parms
{
};

// Function Engine.wGameManager.LoadUILists
// Flags: 
struct UwGameManager_execLoadUILists_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
	int                                                pgcount;                                          		// 0x0004 ( 0x0004
	int                                                i;                                                		// 0x0008 ( 0x0004
	int                                                ItemID;                                           		// 0x000C ( 0x0004
	class UwItemBoxHK*                                 itemBox;                                          		// 0x0010 ( 0x0004
	class UwPaintGroupParam*                           pntgp;                                            		// 0x0014 ( 0x0004
	class UwItemBaseParam*                             cItemParam;                                       		// 0x0018 ( 0x0004
	class UwSkillBaseParam*                            cSkillParam;                                      		// 0x001C ( 0x0004
	class UwItemResourceParam*                         cItemResParam;                                    		// 0x0020 ( 0x0004
	class UwItemResourceParam*                         cPartResParam;                                    		// 0x0024 ( 0x0004
	class UwWeaponCustomInfoParam*                     wcip;                                             		// 0x0028 ( 0x0004
	class UwWeaponCustomPartsParam*                    wcpp;                                             		// 0x002C ( 0x0004
};

// Function Engine.wGameManager.IsEnableRemovePart
// Flags: 
struct UwGameManager_execIsEnableRemovePart_Parms
{
	class UwItemBaseParam*                             Inip;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      InType;                                           		// 0x0004 ( 0x0001[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwWeaponCustomInfoParam*                     wcip;                                             		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.IsUsablePartItem
// Flags: 
struct UwGameManager_execIsUsablePartItem_Parms
{
	int                                                iItemID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iPartsArrayIndex;                                 		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBaseParam*                             ibp;                                              		// 0x000C ( 0x0004
//	class UwWeaponCustomInfoParam*                     wcip;                                             		// 0x0010 ( 0x0004
//	class UwWeaponCustomPartsParam*                    wcpp;                                             		// 0x0014 ( 0x0004
};

// Function Engine.wGameManager.IsExistShopItemList
// Flags: 
struct UwGameManager_execIsExistShopItemList_Parms
{
	int                                                iItemID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.GetClanLevelMarkInfo
// Flags: 
struct UwGameManager_execGetClanLevelMarkInfo_Parms
{
	struct FString                                     ClanName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ClanPattern;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                ClanBG;                                           		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                ClanBL;                                           		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x001C ( 0x0004
};

// Function Engine.wGameManager.GetClanLevelImage
// Flags: 
struct UwGameManager_execGetClanLevelImage_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      ReturnValue;                                      		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetClanLevelTexture
// Flags: 
struct UwGameManager_execGetClanLevelTexture_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UTexture*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetClanLevelName
// Flags: 
struct UwGameManager_execGetClanLevelName_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.GetClanEndExp
// Flags: 
struct UwGameManager_execGetClanEndExp_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetClanStartExp
// Flags: 
struct UwGameManager_execGetClanStartExp_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetLevelTexture
// Flags: 
struct UwGameManager_execGetLevelTexture_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                LevelMarkID;                                      		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UTexture*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.GetLevelImage
// Flags: 
struct UwGameManager_execGetLevelImage_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                LevelMarkID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FImage                                      LevelImage;                                       		// 0x0008 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	int                                                idx;                                              		// 0x0028 ( 0x0004
	int                                                imgX;                                             		// 0x002C ( 0x0004
	int                                                imgY;                                             		// 0x0030 ( 0x0004
};

// Function Engine.wGameManager.GetLevelName
// Flags: 
struct UwGameManager_execGetLevelName_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.GetEndExp
// Flags: 
struct UwGameManager_execGetEndExp_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.GetStartExp
// Flags: 
struct UwGameManager_execGetStartExp_Parms
{
	int                                                Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.dele_UpdateEventTimer
// Flags: 
struct UwGameManager_execdele_UpdateEventTimer_Parms
{
	int                                                EventType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FBtrDouble                                  EventTime;                                        		// 0x0004 ( 0x0008[ CPF_Parm ]
};

// Function Engine.wGameManager.NextEventTime
// Flags: 
struct UwGameManager_execNextEventTime_Parms
{
	struct FBtrDouble                                  t;                                                		// 0x0000 ( 0x0008[ CPF_Parm ]
	struct FBtrDouble                                  ReturnValue;                                      		// 0x0008 ( 0x0008[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FBtrDouble                                  ret;                                              		// 0x0010 ( 0x0008
//	struct FBtrDouble                                  empty;                                            		// 0x0018 ( 0x0008
};

// Function Engine.wGameManager.UpdateEventTimer
// Flags: 
struct UwGameManager_execUpdateEventTimer_Parms
{
	struct FBtrDouble                                  st;                                               		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                msec;                                             		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                i;                                                		// 0x000C ( 0x0004
	int                                                TimeOverIndex;                                    		// 0x0010 ( 0x0004
	struct FBtrTime                                    t;                                                		// 0x0014 ( 0x0020
};

// Function Engine.wGameManager.LogEventTimerList
// Flags: 
struct UwGameManager_execLogEventTimerList_Parms
{
	int                                                AddItemIndex;                                     		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	struct FBtrTime                                    t;                                                		// 0x0008 ( 0x0020
};

// Function Engine.wGameManager.GetEventTimerCount
// Flags: 
struct UwGameManager_execGetEventTimerCount_Parms
{
	int                                                EventType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                Count;                                            		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.GetLeftEventTime
// Flags: 
struct UwGameManager_execGetLeftEventTime_Parms
{
	int                                                EventType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FBtrDouble                                  ReturnValue;                                      		// 0x0004 ( 0x0008[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
//	struct FBtrDouble                                  curD;                                             		// 0x0010 ( 0x0008
};

// Function Engine.wGameManager.RemoveEventTimer
// Flags: 
struct UwGameManager_execRemoveEventTimer_Parms
{
	int                                                EventType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wGameManager.AddEventTimerCount
// Flags: 
struct UwGameManager_execAddEventTimerCount_Parms
{
	int                                                EventType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wGameManager.AddEventTimer
// Flags: 
struct UwGameManager_execAddEventTimer_Parms
{
	int                                                EventType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FBtrDouble                                  EventTime;                                        		// 0x0004 ( 0x0008[ CPF_Parm ]
	class UDelegateEventTimer*                         EventDelegate;                                    		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                EventMSec;                                        		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                i;                                                		// 0x0014 ( 0x0004
};

// Function Engine.wGameManager.IsBlockedItemIdx
// Flags: 
struct UwGameManager_execIsBlockedItemIdx_Parms
{
	struct FBtrDouble                                  D;                                                		// 0x0000 ( 0x0008[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wGameManager.AddBlockedItem
// Flags: 
struct UwGameManager_execAddBlockedItem_Parms
{
	struct FBtrDouble                                  D;                                                		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wGameManager.ClearBlockedItem
// Flags: 
struct UwGameManager_execClearBlockedItem_Parms
{
};

// Function Engine.wGameManager.AddEventTimerHMS
// Flags: 
struct UwGameManager_execAddEventTimerHMS_Parms
{
	int                                                EventType;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Hour;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Min;                                              		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                sec;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	class UDelegateEventTimer*                         EventDelegate;                                    		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                msec;                                             		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FBtrDouble                                  CurBtrD;                                          		// 0x0018 ( 0x0008
	struct FBtrDouble                                  PlusBtrD;                                         		// 0x0020 ( 0x0008
	struct FBtrDouble                                  PlusBtrD2;                                        		// 0x0028 ( 0x0008
	struct FBtrTime                                    PlusTime;                                         		// 0x0030 ( 0x0020
	struct FBtrTime                                    PlusTime2;                                        		// 0x0050 ( 0x0020
	int                                                Day;                                              		// 0x0070 ( 0x0004
};

// Function Engine.wGameManager.GetClientTime
// Flags: 
struct UwGameManager_execGetClientTime_Parms
{
	unsigned long                                      bUpdate:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FBtrDouble                                  ReturnValue;                                      		// 0x0004 ( 0x0008[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameManager.UpdateClientTime
// Flags: 
struct UwGameManager_execUpdateClientTime_Parms
{
	struct FBtrTime                                    t;                                                		// 0x0000 ( 0x0020
};

// Function Engine.wGameManager.SetServerTime
// Flags: 
struct UwGameManager_execSetServerTime_Parms
{
	struct FBtrDouble                                  S;                                                		// 0x0000 ( 0x0008[ CPF_Parm ]
	struct FBtrDouble                                  L;                                                		// 0x0008 ( 0x0008
};

// Function Engine.wGameManager.UpdateQuickSlotBoxList
// Flags: 
struct UwGameManager_execUpdateQuickSlotBoxList_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.UpdateSkillBoxList
// Flags: 
struct UwGameManager_execUpdateSkillBoxList_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.UpdateWebzenItemList
// Flags: 
struct UwGameManager_execUpdateWebzenItemList_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.UpdateItemList
// Flags: 
struct UwGameManager_execUpdateItemList_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.UpdateWebzenShopItemList
// Flags: 
struct UwGameManager_execUpdateWebzenShopItemList_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.UpdateWebzenShopVerInfo
// Flags: 
struct UwGameManager_execUpdateWebzenShopVerInfo_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.UpdateServerTime
// Flags: 
struct UwGameManager_execUpdateServerTime_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.DownloadWebzenShopItemList
// Flags: [ FUNC_Native ]
struct UwGameManager_execDownloadWebzenShopItemList_Parms
{
	int                                                Year;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                YearId;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                salescode;                                        		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameManager.GetGP20ProductNo
// Flags: 
struct UwGameManager_execGetGP20ProductNo_Parms
{
	int                                                ProductCode;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ProductCost;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      SaleType;                                         		// 0x0008 ( 0x0001[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	int                                                iResult;                                          		// 0x0014 ( 0x0004
//	int                                                ProductNo;                                        		// 0x0018 ( 0x0004
//	struct FGP20Product                                gp20P;                                            		// 0x001C ( 0x010C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.GetGP20ProductFromCode
// Flags: 
struct UwGameManager_execGetGP20ProductFromCode_Parms
{
	int                                                ProductCode;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iResult;                                          		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FGP20Product                                ReturnValue;                                      		// 0x0008 ( 0x010C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0114 ( 0x0004
//	struct FGP20Product                                gp20P;                                            		// 0x0118 ( 0x010C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameManager.GetWebzenShopPackage2
// Flags: 
struct UwGameManager_execGetWebzenShopPackage2_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iResult;                                          		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FWebzenShopPackage                          ReturnValue;                                      		// 0x0008 ( 0x00B0[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x00B8 ( 0x0004
};

// Function Engine.wGameManager.GetWebzenShopProduct
// Flags: 
struct UwGameManager_execGetWebzenShopProduct_Parms
{
	int                                                ProductSeq;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                PriceSeq;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FWebzenShopProduct                          ReturnValue;                                      		// 0x0008 ( 0x0024[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x002C ( 0x0004
//	int                                                j;                                                		// 0x0030 ( 0x0004
};

// Function Engine.wGameManager.GetWebzenShopPackage
// Flags: 
struct UwGameManager_execGetWebzenShopPackage_Parms
{
	int                                                ProductSeq;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                PriceSeq;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FWebzenShopPackage                          ReturnValue;                                      		// 0x0008 ( 0x00B0[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x00B8 ( 0x0004
//	int                                                j;                                                		// 0x00BC ( 0x0004
};

// Function Engine.wCharacterManager.RemoveBasePlayers
// Flags: [ FUNC_Event ]
struct UwCharacterManager_eventRemoveBasePlayers_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wCharacterManager.AddBasePlayers
// Flags: [ FUNC_Event ]
struct UwCharacterManager_eventAddBasePlayers_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wCharacterManager.InitMyPlayer
// Flags: [ FUNC_Event ]
struct UwCharacterManager_eventInitMyPlayer_Parms
{
};

// Function Engine.wCharacterManager.LoadCacheMoveParam
// Flags: 
struct UwCharacterManager_execLoadCacheMoveParam_Parms
{
};

// Function Engine.wCharacterManager.LoadPartsData
// Flags: 
struct UwCharacterManager_execLoadPartsData_Parms
{
	class UBTNetPlayerData*                            PlayerData;                                       		// 0x0000 ( 0x0004
	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
	float                                              fValue;                                           		// 0x0008 ( 0x0004
	int                                                iIndex;                                           		// 0x000C ( 0x0004
	int                                                iLength;                                          		// 0x0010 ( 0x0004
	struct FPlayerPartsInfo                            Info;                                             		// 0x0014 ( 0x0044[ CPF_NeedCtorLink ]
};

// Function Engine.wCharacterManager.GetPartsById
// Flags: [ FUNC_Final ]
struct UwCharacterManager_execGetPartsById_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FPlayerPartsInfo                            ReturnValue;                                      		// 0x0004 ( 0x0044[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FPlayerPartsInfo                            Result;                                           		// 0x0048 ( 0x0044[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x008C ( 0x0004
};

// Function Engine.wCharacterManager.GetPlayerSetTest
// Flags: [ FUNC_Final ]
struct UwCharacterManager_execGetPlayerSetTest_Parms
{
	struct FString                                     TestName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FPlayerSet                                  ReturnValue;                                      		// 0x000C ( 0x0030[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FPlayerSet                                  Result;                                           		// 0x003C ( 0x0030[ CPF_NeedCtorLink ]
//	struct FPlayerPartsInfo                            BodyParts;                                        		// 0x006C ( 0x0044[ CPF_NeedCtorLink ]
//	struct FPlayerPartsInfo                            HeadParts;                                        		// 0x00B0 ( 0x0044[ CPF_NeedCtorLink ]
//	struct FPlayerPartsInfo                            HelmetParts;                                      		// 0x00F4 ( 0x0044[ CPF_NeedCtorLink ]
//	struct FPlayerPartsInfo                            BackpackParts;                                    		// 0x0138 ( 0x0044[ CPF_NeedCtorLink ]
};

// Function Engine.wCharacterManager.GetMyStatus
// Flags: [ FUNC_Final ]
struct UwCharacterManager_execGetMyStatus_Parms
{
	class UwMyPlayerStatus*                            ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wCharacterManager.DestroyScript
// Flags: [ FUNC_Event ]
struct UwCharacterManager_eventDestroyScript_Parms
{
};

// Function Engine.wCharacterManager.InitScript
// Flags: [ FUNC_Event ]
struct UwCharacterManager_eventInitScript_Parms
{
};

// Function Engine.wCharacterManager.InitNative
// Flags: [ FUNC_Final | FUNC_Native ]
struct UwCharacterManager_execInitNative_Parms
{
};

// Function Engine.wCharacterManager.Get
// Flags: [ FUNC_Final | FUNC_Native ]
struct UwCharacterManager_execGet_Parms
{
	class AActor*                                      P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMyPlayerStatus.SetQSlotList
// Flags: 
struct UwMyPlayerStatus_execSetQSlotList_Parms
{
	class TArray< int >                                QSlotID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     QSlotName;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< unsigned char >                      QSlotDispOrder;                                   		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  MWItemID;                                         		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  PistolItemID;                                     		// 0x0030 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  TWItemID1;                                        		// 0x003C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  TWItemID2;                                        		// 0x0048 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                Skill1;                                           		// 0x0054 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                Skill2;                                           		// 0x0060 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                Skill3;                                           		// 0x006C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                Skill4;                                           		// 0x0078 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0084 ( 0x0004
	int                                                j;                                                		// 0x0088 ( 0x0004
	int                                                k;                                                		// 0x008C ( 0x0004
	int                                                iIndex;                                           		// 0x0090 ( 0x0004
};

// Function Engine.wMyPlayerStatus.SetSkillListEnd
// Flags: 
struct UwMyPlayerStatus_execSetSkillListEnd_Parms
{
};

// Function Engine.wMyPlayerStatus.SetSkillList
// Flags: 
struct UwMyPlayerStatus_execSetSkillList_Parms
{
	class TArray< int >                                UniqueSkillID;                                    		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                SkillID;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  UntilTime;                                        		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< unsigned char >                      SlotPosition;                                     		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0030 ( 0x0004
	int                                                iTempTotalCount;                                  		// 0x0034 ( 0x0004
	struct FsSkill                                     tmSkill;                                          		// 0x0038 ( 0x0014
};

// Function Engine.wMyPlayerStatus.SetSkillListStart
// Flags: 
struct UwMyPlayerStatus_execSetSkillListStart_Parms
{
	int                                                Count;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMyPlayerStatus.SetItemListEnd
// Flags: 
struct UwMyPlayerStatus_execSetItemListEnd_Parms
{
};

// Function Engine.wMyPlayerStatus.SetItemList
// Flags: 
struct UwMyPlayerStatus_execSetItemList_Parms
{
	class TArray< struct FBtrDouble >                  UniqueID;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                ItemID;                                           		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                ItemType;                                         		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                Durability;                                       		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  UntilTime;                                        		// 0x0030 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                SlotPosition;                                     		// 0x003C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                AddPartsID;                                       		// 0x0048 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                DamageDegree;                                     		// 0x0054 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< unsigned char >                      ItemState;                                        		// 0x0060 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                StackCount;                                       		// 0x006C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                PaintID;                                          		// 0x0078 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0084 ( 0x0004
	int                                                iTempTotalCount;                                  		// 0x0088 ( 0x0004
	struct FsItem                                      tmItem;                                           		// 0x008C ( 0x0034
};

// Function Engine.wMyPlayerStatus.SetItemListStart
// Flags: 
struct UwMyPlayerStatus_execSetItemListStart_Parms
{
	int                                                Count;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMyPlayerStatus.RemoveQuickSlotSkillItem
// Flags: 
struct UwMyPlayerStatus_execRemoveQuickSlotSkillItem_Parms
{
	int                                                UniqueID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	int                                                j;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wMyPlayerStatus.RemoveQuickSlotItem
// Flags: 
struct UwMyPlayerStatus_execRemoveQuickSlotItem_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
	int                                                j;                                                		// 0x000C ( 0x0004
};

// Function Engine.wMyPlayerStatus.RemoveItem
// Flags: 
struct UwMyPlayerStatus_execRemoveItem_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wMyPlayerStatus.IsQuickSlotSkillItem
// Flags: 
struct UwMyPlayerStatus_execIsQuickSlotSkillItem_Parms
{
	int                                                UniqueID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                j;                                                		// 0x000C ( 0x0004
};

// Function Engine.wMyPlayerStatus.IsQuickSlotItem
// Flags: 
struct UwMyPlayerStatus_execIsQuickSlotItem_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
//	int                                                j;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wMyPlayerStatus.FindSkillItemIndexByUniqueID
// Flags: 
struct UwMyPlayerStatus_execFindSkillItemIndexByUniqueID_Parms
{
	int                                                UniqueID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wMyPlayerStatus.FindItemIndexByUniqueID
// Flags: 
struct UwMyPlayerStatus_execFindItemIndexByUniqueID_Parms
{
	struct FBtrDouble                                  UniqueID;                                         		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wMyPlayerStatus.FindItemIDBySlotPos
// Flags: 
struct UwMyPlayerStatus_execFindItemIDBySlotPos_Parms
{
	int                                                SlotPos;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wBtrIni.RegistMap
// Flags: [ FUNC_Event ]
struct UwBtrIni_eventRegistMap_Parms
{
};

// Function Engine.wBtrIni.AddBoolToMap
// Flags: [ FUNC_Native ]
struct UwBtrIni_execAddBoolToMap_Parms
{
	struct FString                                     key;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      Value:1;                                          		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wBtrIni.AddFloatToMap
// Flags: [ FUNC_Native ]
struct UwBtrIni_execAddFloatToMap_Parms
{
	struct FString                                     key;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              Value;                                            		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wBtrIni.AddIntToMap
// Flags: [ FUNC_Native ]
struct UwBtrIni_execAddIntToMap_Parms
{
	struct FString                                     key;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Value;                                            		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wBtrIni.AddStringToMap
// Flags: [ FUNC_Native ]
struct UwBtrIni_execAddStringToMap_Parms
{
	struct FString                                     key;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamTag.DumpTag
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamTag_execDumpTag_Parms
{
};

// Function Engine.StreamTag.DumpScriptTag
// Flags: 
struct UStreamTag_execDumpScriptTag_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.StreamTag.OnRefresh
// Flags: 
struct UStreamTag_execOnRefresh_Parms
{
};

// Function Engine.StreamBase.HandleDebugExec
// Flags: 
struct UStreamBase_execHandleDebugExec_Parms
{
	struct FString                                     Command;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamBase.CompareNames
// Flags: 
struct UStreamBase_execCompareNames_Parms
{
	struct FString                                     NameA;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     NameB;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamBase.ConvertToFileType
// Flags: [ FUNC_Final | FUNC_Event ]
struct UStreamBase_eventConvertToFileType_Parms
{
	struct FString                                     Extension;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     Ext;                                              		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamBase.ConvertToFileExtension
// Flags: [ FUNC_Final | FUNC_Event ]
struct UStreamBase_eventConvertToFileExtension_Parms
{
	unsigned char                                      Type;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamBase.FormatTimeDisplay
// Flags: [ FUNC_Final ]
struct UStreamBase_execFormatTimeDisplay_Parms
{
	float                                              Seconds;                                          		// 0x0000 ( 0x0004[ CPF_Parm | CPF_CoerceParm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	struct FString                                     TimeString;                                       		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamBase.RevInStr
// Flags: [ FUNC_Final ]
struct UStreamBase_execRevInStr_Parms
{
	struct FString                                     Src;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Match;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                pos;                                              		// 0x001C ( 0x0004
//	int                                                i;                                                		// 0x0020 ( 0x0004
//	struct FString                                     S;                                                		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamBase.ParseDirectories
// Flags: [ FUNC_Final | FUNC_Event ]
struct UStreamBase_eventParseDirectories_Parms
{
	struct FString                                     InPath;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FString >                     Directories;                                      		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     root;                                             		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamBase.ParseExtension
// Flags: [ FUNC_Final | FUNC_Event ]
struct UStreamBase_eventParseExtension_Parms
{
	struct FString                                     FileNameWithExtension;                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	struct FString                                     Ext;                                              		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamBase.ParsePath
// Flags: [ FUNC_Final | FUNC_Event ]
struct UStreamBase_eventParsePath_Parms
{
	struct FString                                     InPath;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FFilePath                                   ParsedPath;                                       		// 0x000C ( 0x003C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0048 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x004C ( 0x0004
};

// Function Engine.StreamBase.HasExtension
// Flags: [ FUNC_Final | FUNC_Event ]
struct UStreamBase_eventHasExtension_Parms
{
	struct FString                                     Test;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamBase.GetPathRoot
// Flags: [ FUNC_Final | FUNC_Event ]
struct UStreamBase_eventGetPathRoot_Parms
{
	struct FString                                     InPath;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	struct FString                                     root;                                             		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamBase.IsCaseSensitive
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamBase_execIsCaseSensitive_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamBase.GetPathSeparator
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamBase_execGetPathSeparator_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamBase.MultiplyEqual_StrStr
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamBase_execMultiplyEqual_StrStr_Parms
{
	struct FString                                     A;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     B;                                                		// 0x000C ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamBase.Multiply_StrStr
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamBase_execMultiply_StrStr_Parms
{
	struct FString                                     A;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FString                                     B;                                                		// 0x000C ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Stream.DumpTags
// Flags: 
struct UStream_execDumpTags_Parms
{
};

// Function Engine.Stream.DumpScriptTag
// Flags: 
struct UStream_execDumpScriptTag_Parms
{
};

// Function Engine.Stream.SetHandle
// Flags: [ FUNC_Event ]
struct UStream_eventSetHandle_Parms
{
	int                                                NewHandle;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Stream.GetSongTitle
// Flags: 
struct UStream_execGetSongTitle_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Stream.GetFullName
// Flags: 
struct UStream_execGetFullName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Stream.GetPath
// Flags: 
struct UStream_execGetPath_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Stream.GetExtension
// Flags: 
struct UStream_execGetExtension_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Stream.GetFileName
// Flags: 
struct UStream_execGetFileName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Stream.GetDirectory
// Flags: 
struct UStream_execGetDirectory_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Stream.GetType
// Flags: 
struct UStream_execGetType_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Stream.GetTag
// Flags: 
struct UStream_execGetTag_Parms
{
	class UStreamTag*                                  ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Stream.GetHandle
// Flags: 
struct UStream_execGetHandle_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Stream.IsReadOnly
// Flags: 
struct UStream_execIsReadOnly_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Stream.LoadID3Tag
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStream_execLoadID3Tag_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Stream.SaveID3Tag
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStream_execSaveID3Tag_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInterface.HandleDebugExec
// Flags: 
struct UStreamInterface_execHandleDebugExec_Parms
{
	struct FString                                     Command;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     str;                                              		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< struct FString >                     Test;                                             		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0034 ( 0x0004
};

// Function Engine.StreamInterface.ChangeDirectory
// Flags: 
struct UStreamInterface_execChangeDirectory_Parms
{
	struct FString                                     DirectoryName;                                    		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bSave:1;                                          		// 0x000C ( 0x0004 [0x00000001]
};

// Function Engine.StreamInterface.GetCurrentDirectory
// Flags: 
struct UStreamInterface_execGetCurrentDirectory_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamInterface.LoadPlaylist
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInterface_execLoadPlaylist_Parms
{
	struct FString                                     fileName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Lines;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      bStrict:1;                                        		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInterface.ValidFile
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInterface_execValidFile_Parms
{
	struct FString                                     fileName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInterface.CreateStream
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInterface_execCreateStream_Parms
{
	struct FString                                     fileName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bStrict:1;                                        		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class UStream*                                     ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInterface.ValidDirectory
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInterface_execValidDirectory_Parms
{
	struct FString                                     DirectoryPath;                                    		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInterface.RemoveDirectory
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInterface_execRemoveDirectory_Parms
{
	struct FString                                     DirectoryName;                                    		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInterface.CreateDirectory
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInterface_execCreateDirectory_Parms
{
	struct FString                                     DirectoryName;                                    		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamInterface.GetDirectoryContents
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInterface_execGetDirectoryContents_Parms
{
	class TArray< struct FString >                     contents;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     DirectoryName;                                    		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      FileType;                                         		// 0x0018 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInterface.GetDriveLetters
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInterface_execGetDriveLetters_Parms
{
	class TArray< struct FString >                     Letters;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInterface.GetBaseDirectory
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInterface_execGetBaseDirectory_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamInteraction.streamdebug
// Flags: [ FUNC_Exec ]
struct UStreamInteraction_execstreamdebug_Parms
{
	struct FString                                     Command;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.StreamInteraction.PC
// Flags: 
struct UStreamInteraction_execPC_Parms
{
	class APlayerController*                           ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.KillMusic
// Flags: 
struct UStreamInteraction_execKillMusic_Parms
{
};

// Function Engine.StreamInteraction.ClearSongInfo
// Flags: 
struct UStreamInteraction_execClearSongInfo_Parms
{
};

// Function Engine.StreamInteraction.HasPlayer
// Flags: 
struct UStreamInteraction_execHasPlayer_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.IsPlaying
// Flags: 
struct UStreamInteraction_execIsPlaying_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.GetStreamDuration
// Flags: 
struct UStreamInteraction_execGetStreamDuration_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.GetStreamVolume
// Flags: 
struct UStreamInteraction_execGetStreamVolume_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.GetStreamPosition
// Flags: 
struct UStreamInteraction_execGetStreamPosition_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.PlayStream
// Flags: 
struct UStreamInteraction_execPlayStream_Parms
{
	struct FString                                     fileName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                SeekSeconds;                                      		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                LastSongHandle;                                   		// 0x0010 ( 0x0004
};

// Function Engine.StreamInteraction.Seek
// Flags: 
struct UStreamInteraction_execSeek_Parms
{
	float                                              SeekSeconds;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.SeekStream
// Flags: [ FUNC_Exec ]
struct UStreamInteraction_execSeekStream_Parms
{
	float                                              Seconds;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.StreamInteraction.SetMusicVolume
// Flags: [ FUNC_Exec ]
struct UStreamInteraction_execSetMusicVolume_Parms
{
	float                                              NewVolume;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.StreamInteraction.StopSong
// Flags: [ FUNC_Exec ]
struct UStreamInteraction_execStopSong_Parms
{
};

// Function Engine.StreamInteraction.PlaySong
// Flags: [ FUNC_Exec ]
struct UStreamInteraction_execPlaySong_Parms
{
	struct FString                                     SongName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              InitialTime;                                      		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.StreamInteraction.PauseSong
// Flags: [ FUNC_Exec ]
struct UStreamInteraction_execPauseSong_Parms
{
};

// Function Engine.StreamInteraction.PrevSong
// Flags: [ FUNC_Exec ]
struct UStreamInteraction_execPrevSong_Parms
{
	unsigned long                                      bForce:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.StreamInteraction.NextSong
// Flags: [ FUNC_Exec ]
struct UStreamInteraction_execNextSong_Parms
{
	unsigned long                                      bForce:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.StreamInteraction.CurrentHandle
// Flags: 
struct UStreamInteraction_execCurrentHandle_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.GetCurrentStream
// Flags: [ FUNC_Exec ]
struct UStreamInteraction_execGetCurrentStream_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamInteraction.NotifyLevelChange
// Flags: [ FUNC_Event ]
struct UStreamInteraction_eventNotifyLevelChange_Parms
{
};

// Function Engine.StreamInteraction.StreamFinished
// Flags: 
struct UStreamInteraction_execStreamFinished_Parms
{
	int                                                Handle;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Reason;                                           		// 0x0004 ( 0x0001[ CPF_Parm ]
};

// Function Engine.StreamInteraction.SetStreamAttachment
// Flags: 
struct UStreamInteraction_execSetStreamAttachment_Parms
{
	class UStream*                                     StreamObj;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UStreamTag*                                  sTag;                                             		// 0x0004 ( 0x0004
};

// Function Engine.StreamInteraction.IsPaused
// Flags: [ FUNC_Final | FUNC_Native ]
struct UStreamInteraction_execIsPaused_Parms
{
	int                                                SongHandle;                                       		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.Tick
// Flags: [ FUNC_Event ]
struct UStreamInteraction_eventTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.StreamInteraction.QueueNextSong
// Flags: 
struct UStreamInteraction_execQueueNextSong_Parms
{
};

// Function Engine.StreamInteraction.CreatePlaylistManager
// Flags: 
struct UStreamInteraction_execCreatePlaylistManager_Parms
{
	class UStreamPlaylistManager*                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UClass*                                      PlaylistManagerClass;                             		// 0x0004 ( 0x0004
};

// Function Engine.StreamInteraction.CreateFileManager
// Flags: 
struct UStreamInteraction_execCreateFileManager_Parms
{
	class UStreamInterface*                            ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamInteraction.Initialized
// Flags: [ FUNC_Event ]
struct UStreamInteraction_eventInitialized_Parms
{
};

// Function Engine.StreamInteraction.OnAdjustVolume
// Flags: 
struct UStreamInteraction_execOnAdjustVolume_Parms
{
	float                                              NewVolume;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.StreamInteraction.OnStreamingStopped
// Flags: 
struct UStreamInteraction_execOnStreamingStopped_Parms
{
};

// Function Engine.StreamInteraction.OnStreamChanged
// Flags: 
struct UStreamInteraction_execOnStreamChanged_Parms
{
	struct FString                                     NewStreamFileName;                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Interaction.OnIME_Notify
// Flags: [ FUNC_Event ]
struct UInteraction_eventOnIME_Notify_Parms
{
	int                                                Type;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                LangID;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     strText;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                StartPos;                                         		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                Size;                                             		// 0x0018 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Interaction.EnableInteraction
// Flags: [ FUNC_Event ]
struct UInteraction_eventEnableInteraction_Parms
{
};

// Function Engine.Interaction.DisableInteraction
// Flags: [ FUNC_Event ]
struct UInteraction_eventDisableInteraction_Parms
{
};

// Function Engine.Interaction.NotifyMusicChange
// Flags: [ FUNC_Event ]
struct UInteraction_eventNotifyMusicChange_Parms
{
};

// Function Engine.Interaction.StreamFinished
// Flags: 
struct UInteraction_execStreamFinished_Parms
{
	int                                                Handle;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Reason;                                           		// 0x0004 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Interaction.Tick
// Flags: 
struct UInteraction_execTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Interaction.SetFocus
// Flags: 
struct UInteraction_execSetFocus_Parms
{
};

// Function Engine.Interaction.PostRender
// Flags: 
struct UInteraction_execPostRender_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Interaction.PreRender
// Flags: 
struct UInteraction_execPreRender_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Interaction.KeyEvent
// Flags: 
struct UInteraction_execKeyEvent_Parms
{
	unsigned char                                      key;                                              		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	unsigned char                                      Action;                                           		// 0x0001 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	float                                              Delta;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Interaction.KeyType
// Flags: 
struct UInteraction_execKeyType_Parms
{
	unsigned char                                      key;                                              		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	struct FString                                     Unicode;                                          		// 0x0004 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Interaction.Message
// Flags: 
struct UInteraction_execMessage_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	float                                              MsgLife;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Interaction.NotifyLevelChange
// Flags: [ FUNC_Event ]
struct UInteraction_eventNotifyLevelChange_Parms
{
};

// Function Engine.Interaction.Initialized
// Flags: [ FUNC_Event ]
struct UInteraction_eventInitialized_Parms
{
};

// Function Engine.Interaction.ScreenToWorld
// Flags: [ FUNC_Native ]
struct UInteraction_execScreenToWorld_Parms
{
	struct FVector                                     Location;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     CameraLocation;                                   		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0018 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Interaction.WorldToScreen
// Flags: [ FUNC_Native ]
struct UInteraction_execWorldToScreen_Parms
{
	struct FVector                                     Location;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     CameraLocation;                                   		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0018 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Interaction.ConsoleCommand
// Flags: [ FUNC_Native ]
struct UInteraction_execConsoleCommand_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Interaction.Initialize
// Flags: [ FUNC_Native ]
struct UInteraction_execInitialize_Parms
{
};

// Function Engine.Interactions.IsMouseKey
// Flags: 
struct UInteractions_execIsMouseKey_Parms
{
	unsigned char                                      key;                                              		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Interactions.IsKeyboardKey
// Flags: 
struct UInteractions_execIsKeyboardKey_Parms
{
	unsigned char                                      key;                                              		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Interactions.GetFriendlyName
// Flags: 
struct UInteractions_execGetFriendlyName_Parms
{
	unsigned char                                      iKey;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Spline.NextSplineRot
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct USpline_execNextSplineRot_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    D;                                                		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    V;                                                		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    A;                                                		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	float                                              outdt;                                            		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      bSmoothDt:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bAccumDeltas:1;                                   		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0034 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Spline.NextSplinePos
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct USpline_execNextSplinePos_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     D;                                                		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     V;                                                		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     A;                                                		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	float                                              outdt;                                            		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      bSmoothDt:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bAccumDeltas:1;                                   		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0034 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Spline.InitSplineRot
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct USpline_execInitSplineRot_Parms
{
	float                                              t0;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    d0;                                               		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    v0;                                               		// 0x0010 ( 0x000C[ CPF_Parm ]
	float                                              t1;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	struct FRotator                                    d1;                                               		// 0x0020 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    v1;                                               		// 0x002C ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0038 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Spline.InitSplinePath
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct USpline_execInitSplinePath_Parms
{
	float                                              t0;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     d0;                                               		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     v0;                                               		// 0x0010 ( 0x000C[ CPF_Parm ]
	float                                              t1;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	struct FVector                                     d1;                                               		// 0x0020 ( 0x000C[ CPF_Parm ]
	struct FVector                                     v1;                                               		// 0x002C ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0038 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wBTLoadingScreenDrawer.DrawLoadingScreen
// Flags: [ FUNC_Event ]
struct UwBTLoadingScreenDrawer_eventDrawLoadingScreen_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	int                                                ModeIndex;                                        		// 0x0008 ( 0x0004
	int                                                SupplyAddCount;                                   		// 0x000C ( 0x0004
	float                                              ratioX;                                           		// 0x0010 ( 0x0004
	float                                              ratioY;                                           		// 0x0014 ( 0x0004
	float                                              listStepX;                                        		// 0x0018 ( 0x0004
	struct FFloatBox                                   fb;                                               		// 0x001C ( 0x0010
	struct FFloatBox                                   fbRSA;                                            		// 0x002C ( 0x0010
	struct FImage                                      img;                                              		// 0x003C ( 0x0020
	int                                                StrLenPerOneLine;                                 		// 0x005C ( 0x0004
	struct FString                                     tmpStrTip;                                        		// 0x0060 ( 0x000C[ CPF_NeedCtorLink ]
	float                                              loadingBarWidth;                                  		// 0x006C ( 0x0004
	class FColor                                       kShadowColor;                                     		// 0x0070 ( 0x0004
};

// Function Engine.wBTLoadingScreenDrawer.ClearOtherLoadingState
// Flags: [ FUNC_Event ]
struct UwBTLoadingScreenDrawer_eventClearOtherLoadingState_Parms
{
};

// Function Engine.wBTLoadingScreenDrawer.UpdateOtherLoadingState
// Flags: [ FUNC_Event ]
struct UwBTLoadingScreenDrawer_eventUpdateOtherLoadingState_Parms
{
	struct FLoadingMessageItem                         Item;                                             		// 0x0000 ( 0x001C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     strMsg;                                           		// 0x001C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0028 ( 0x0004
};

// Function Engine.wBTLoadingScreenDrawer.UpdateMyLoadingState
// Flags: [ FUNC_Event ]
struct UwBTLoadingScreenDrawer_eventUpdateMyLoadingState_Parms
{
	struct FString                                     LoadingState;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wBTLoadingScreenDrawer.UpdateProgress
// Flags: [ FUNC_Event ]
struct UwBTLoadingScreenDrawer_eventUpdateProgress_Parms
{
	int                                                CurrenetProgress;                                 		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wBTLoadingScreenDrawer.DestroyBackGroundImage
// Flags: [ FUNC_Event ]
struct UwBTLoadingScreenDrawer_eventDestroyBackGroundImage_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wBTLoadingScreenDrawer.CreateBackGroundImage
// Flags: [ FUNC_Event ]
struct UwBTLoadingScreenDrawer_eventCreateBackGroundImage_Parms
{
	class UwMatchMaker*                                MatchMaker;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class TArray< struct FGameModeInfo >               GameModeInfos;                                    		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	struct FString                                     strSupplyResource;                                		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wBTLoadingScreenDrawer.Initialize
// Flags: [ FUNC_Event ]
struct UwBTLoadingScreenDrawer_eventInitialize_Parms
{
};

// Function Engine.wBTLoadingScreenDrawer.RemoveFromRoot
// Flags: [ FUNC_Native ]
struct UwBTLoadingScreenDrawer_execRemoveFromRoot_Parms
{
	class UMaterial*                                   Image;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wBTLoadingScreenDrawer.AddToRoot
// Flags: [ FUNC_Native ]
struct UwBTLoadingScreenDrawer_execAddToRoot_Parms
{
	class UMaterial*                                   Image;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerChatManager.ChatDebug
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execChatDebug_Parms
{
};

// Function Engine.PlayerChatManager.Count
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.GetPlayerRestriction
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execGetPlayerRestriction_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      ReturnValue;                                      		// 0x0004 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.ClientIsBanned
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execClientIsBanned_Parms
{
	struct FString                                     PlayerHash;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.IsBanned
// Flags: 
struct APlayerChatManager_execIsBanned_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.ClearRestrictionID
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execClearRestrictionID_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Type;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.ClearRestriction
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execClearRestriction_Parms
{
	struct FString                                     PlayerHash;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      Type;                                             		// 0x000C ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.AddRestrictionID
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execAddRestrictionID_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Type;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.AddRestriction
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execAddRestriction_Parms
{
	struct FString                                     PlayerHash;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      Type;                                             		// 0x000C ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.SetRestrictionID
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execSetRestrictionID_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Type;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.SetRestriction
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execSetRestriction_Parms
{
	struct FString                                     PlayerHash;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      Type;                                             		// 0x000C ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.AcceptVoice
// Flags: [ FUNC_Event ]
struct APlayerChatManager_eventAcceptVoice_Parms
{
	class APlayerReplicationInfo*                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.AcceptSpeech
// Flags: 
struct APlayerChatManager_execAcceptSpeech_Parms
{
	class APlayerReplicationInfo*                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.AcceptLocalized
// Flags: 
struct APlayerChatManager_execAcceptLocalized_Parms
{
	class AActor*                                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      Message;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     obj;                                              		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.AcceptText
// Flags: 
struct APlayerChatManager_execAcceptText_Parms
{
	class APlayerReplicationInfo*                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Msg;                                              		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerChatManager.UnTrackPlayer
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execUnTrackPlayer_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerChatManager.TrackNewPlayer
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execTrackNewPlayer_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     PlayerHash;                                       		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PlayerAddress;                                    		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerChatManager.ReceiveBanInfo
// Flags: [ FUNC_Simulated ]
struct APlayerChatManager_execReceiveBanInfo_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerChatManager.PostBeginPlay
// Flags: [ FUNC_Event ]
struct APlayerChatManager_eventPostBeginPlay_Parms
{
};

// Function Engine.Info.GetDescriptionText
// Flags: [ FUNC_Event ]
struct AInfo_eventGetDescriptionText_Parms
{
	struct FString                                     PropName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Info.GetSecurityLevel
// Flags: [ FUNC_Event ]
struct AInfo_eventGetSecurityLevel_Parms
{
	struct FString                                     PropName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Info.AllowClassRemoval
// Flags: [ FUNC_Event ]
struct AInfo_eventAllowClassRemoval_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Info.AcceptPlayInfoProperty
// Flags: [ FUNC_Event ]
struct AInfo_eventAcceptPlayInfoProperty_Parms
{
	struct FString                                     PropertyName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Info.FillPlayInfo
// Flags: 
struct AInfo_execFillPlayInfo_Parms
{
	class UPlayInfo*                                   PlayInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatRoom.NotifyTeamChange
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execNotifyTeamChange_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                NewTeamIndex;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.RemoveChild
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execRemoveChild_Parms
{
	class AVoiceChatRoom*                              Child;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.AddChild
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execAddChild_Parms
{
	class AVoiceChatRoom*                              NewChild;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.SetChannelPassword
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execSetChannelPassword_Parms
{
	struct FString                                     InPassword;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatRoom.SetMemberMask
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execSetMemberMask_Parms
{
	int                                                NewMask;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatRoom.SetTeam
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execSetTeam_Parms
{
	int                                                NewTeam;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatRoom.RemoveMember
// Flags: 
struct AVoiceChatRoom_execRemoveMember_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatRoom.AddMember
// Flags: 
struct AVoiceChatRoom_execAddMember_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatRoom.LeaveChannel
// Flags: 
struct AVoiceChatRoom_execLeaveChannel_Parms
{
	class APlayerReplicationInfo*                      LeavingPRI;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.JoinChannel
// Flags: 
struct AVoiceChatRoom_execJoinChannel_Parms
{
	class APlayerReplicationInfo*                      NewPRI;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     InPassword;                                       		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x0010 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.IsMember
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVoiceChatRoom_eventIsMember_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bNoCascade:1;                                     		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.VoiceChatRoom.IsFull
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execIsFull_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.CanJoinChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execCanJoinChannel_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.IsPrivateChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execIsPrivateChannel_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.IsTeamChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execIsTeamChannel_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.IsPublicChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execIsPublicChannel_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.GetTeam
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execGetTeam_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.GetTitle
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execGetTitle_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatRoom.ValidMask
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execValidMask_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.GetPassword
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execGetPassword_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatRoom.GetMask
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execGetMask_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.GetMaxChatters
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execGetMaxChatters_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatRoom.GetMembers
// Flags: [ FUNC_Simulated ]
struct AVoiceChatRoom_execGetMembers_Parms
{
	class TArray< class APlayerReplicationInfo* >      ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.GetTitle
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetTitle_Parms
{
	class AVoiceChatRoom*                              Room;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.GetMask
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetMask_Parms
{
	class AVoiceChatRoom*                              Room;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.SetMask
// Flags: 
struct AVoiceChatReplicationInfo_execSetMask_Parms
{
	class AVoiceChatRoom*                              Room;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                NewMask;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatReplicationInfo.ValidRoom
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execValidRoom_Parms
{
	class AVoiceChatRoom*                              Room;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.GetCodecInfo
// Flags: 
struct AVoiceChatReplicationInfo_execGetCodecInfo_Parms
{
	struct FString                                     Codec;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     CodecName;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     CodecDescription;                                 		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0028 ( 0x0004
};

// Function Engine.VoiceChatReplicationInfo.GetInstalledCodecs
// Flags: 
struct AVoiceChatReplicationInfo_execGetInstalledCodecs_Parms
{
	class TArray< struct FString >                     Codecs;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.VoiceChatReplicationInfo.GetDescriptionText
// Flags: [ FUNC_Event ]
struct AVoiceChatReplicationInfo_eventGetDescriptionText_Parms
{
	struct FString                                     PropName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.FillPlayInfo
// Flags: 
struct AVoiceChatReplicationInfo_execFillPlayInfo_Parms
{
	class UPlayInfo*                                   PlayInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatReplicationInfo.CheckChannels
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execCheckChannels_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.VoiceChatReplicationInfo.DestroyVoiceChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execDestroyVoiceChannel_Parms
{
	class AVoiceChatRoom*                              Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatReplicationInfo.CreateNewVoiceChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execCreateNewVoiceChannel_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AVoiceChatRoom*                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.IsMember
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execIsMember_Parms
{
	class APlayerReplicationInfo*                      TestPRI;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ChannelIndex;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bNoCascade:1;                                     		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.GetPlayerChannelCount
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetPlayerChannelCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.GetPublicChannelCount
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetPublicChannelCount_Parms
{
	unsigned long                                      bSingleTeam:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.GetPlayerChannels
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetPlayerChannels_Parms
{
	class TArray< class AVoiceChatRoom* >              ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.GetPublicChannels
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetPublicChannels_Parms
{
	class TArray< class AVoiceChatRoom* >              ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.GetChannels
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetChannels_Parms
{
	class TArray< class AVoiceChatRoom* >              ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.GetDefaultChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetDefaultChannel_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.GetMemberChannels
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetMemberChannels_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< int >                                ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.GetChannelMembersAt
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetChannelMembersAt_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< int >                                ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.GetChannelMembers
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetChannelMembers_Parms
{
	struct FString                                     ChatRoomName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                TeamIndex;                                        		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class TArray< int >                                ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VoiceChatReplicationInfo.GetChannelAt
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetChannelAt_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AVoiceChatRoom*                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.GetChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execGetChannel_Parms
{
	struct FString                                     ChatRoomName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                TeamIndex;                                        		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AVoiceChatRoom*                              ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.GetChannelIndex
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVoiceChatReplicationInfo_eventGetChannelIndex_Parms
{
	struct FString                                     ChannelTitle;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                TeamIndex;                                        		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.GetChannelCount
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVoiceChatReplicationInfo_eventGetChannelCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.NotifyTeamChange
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execNotifyTeamChange_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                TeamIndex;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatReplicationInfo.RemoveVoiceChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execRemoveVoiceChannel_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.AddVoiceChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execAddVoiceChannel_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AVoiceChatRoom*                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.LeaveChannel
// Flags: 
struct AVoiceChatReplicationInfo_execLeaveChannel_Parms
{
	struct FString                                     ChannelTitle;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.JoinChannelAt
// Flags: 
struct AVoiceChatReplicationInfo_execJoinChannelAt_Parms
{
	int                                                ChannelIndex;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Password;                                         		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x0014 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.JoinChannel
// Flags: 
struct AVoiceChatReplicationInfo_execJoinChannel_Parms
{
	struct FString                                     ChannelTitle;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     Password;                                         		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x001C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.CanJoinChannel
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execCanJoinChannel_Parms
{
	struct FString                                     ChannelTitle;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VoiceChatReplicationInfo.RemoveVoiceChatter
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execRemoveVoiceChatter_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatReplicationInfo.AddVoiceChatter
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execAddVoiceChatter_Parms
{
	class APlayerReplicationInfo*                      NewPRI;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VoiceChatReplicationInfo.InitChannels
// Flags: [ FUNC_Simulated ]
struct AVoiceChatReplicationInfo_execInitChannels_Parms
{
};

// Function Engine.VoiceChatReplicationInfo.PostNetBeginPlay
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVoiceChatReplicationInfo_eventPostNetBeginPlay_Parms
{
};

// Function Engine.VoiceChatReplicationInfo.PostBeginPlay
// Flags: [ FUNC_Event ]
struct AVoiceChatReplicationInfo_eventPostBeginPlay_Parms
{
};

// Function Engine.VoiceChatReplicationInfo.Timer
// Flags: [ FUNC_Event ]
struct AVoiceChatReplicationInfo_eventTimer_Parms
{
};

// Function Engine.VertMeshActor.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct AVertMeshActor_execPostBeginPlay_Parms
{
};

// Function Engine.TrailEmitter.ResetTrail
// Flags: [ FUNC_Final | FUNC_Native ]
struct UTrailEmitter_execResetTrail_Parms
{
};

// Function Engine.ParticleEmitter.Reset
// Flags: [ FUNC_Native ]
struct UParticleEmitter_execReset_Parms
{
};

// Function Engine.ParticleEmitter.Trigger
// Flags: [ FUNC_Native ]
struct UParticleEmitter_execTrigger_Parms
{
};

// Function Engine.ParticleEmitter.SpawnParticle
// Flags: [ FUNC_Native ]
struct UParticleEmitter_execSpawnParticle_Parms
{
	int                                                Amount;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Material.MaterialVSize
// Flags: [ FUNC_Native ]
struct UMaterial_execMaterialVSize_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Material.MaterialUSize
// Flags: [ FUNC_Native ]
struct UMaterial_execMaterialUSize_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Material.Trigger
// Flags: 
struct UMaterial_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Material.Reset
// Flags: 
struct UMaterial_execReset_Parms
{
};

// Function Engine.TerrainInfo.PokeTerrain
// Flags: [ FUNC_Final | FUNC_Native ]
struct ATerrainInfo_execPokeTerrain_Parms
{
	struct FVector                                     WorldLocation;                                    		// 0x0000 ( 0x000C[ CPF_Parm ]
	int                                                Radius;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                MaxDepth;                                         		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicle.Destroyed
// Flags: [ FUNC_Simulated ]
struct ASVehicle_execDestroyed_Parms
{
};

// Function Engine.SVehicle.Tick
// Flags: [ FUNC_Simulated ]
struct ASVehicle_execTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicle.KApplyForce
// Flags: [ FUNC_Simulated ]
struct ASVehicle_execKApplyForce_Parms
{
	struct FVector                                     Force;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     Torque;                                           		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	float                                              torqueScale;                                      		// 0x0018 ( 0x0004
	struct FVector                                     worldUp;                                          		// 0x001C ( 0x000C
	struct FVector                                     torqueAxis;                                       		// 0x0028 ( 0x000C
};

// Function Engine.SVehicle.Flip
// Flags: 
struct ASVehicle_execFlip_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              ForceScale;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicle.SVehicleUpdateParams
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct ASVehicle_eventSVehicleUpdateParams_Parms
{
};

// Function Engine.SVehicle.JumpOffPawn
// Flags: 
struct ASVehicle_execJumpOffPawn_Parms
{
};

// Function Engine.SVehicle.PostNetBeginPlay
// Flags: [ FUNC_Simulated ]
struct ASVehicle_execPostNetBeginPlay_Parms
{
};

// Function Engine.SVehicle.UpdateVehicle
// Flags: [ FUNC_Event | FUNC_Native ]
struct ASVehicle_eventUpdateVehicle_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicle.VehicleStateReceived
// Flags: [ FUNC_Event ]
struct ASVehicle_eventVehicleStateReceived_Parms
{
};

// Function Engine.SVehicle.GraphData
// Flags: [ FUNC_Final | FUNC_Native ]
struct ASVehicle_execGraphData_Parms
{
	struct FString                                     DataName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              DataValue;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.SetExitViewRotation
// Flags: 
struct AVehicle_execSetExitViewRotation_Parms
{
	class APawn*                                       Driver;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.SetEntryViewRotation
// Flags: 
struct AVehicle_execSetEntryViewRotation_Parms
{
	struct FRotator                                    R;                                                		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Vehicle.IsArtillery
// Flags: 
struct AVehicle_execIsArtillery_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.ImportantVehicle
// Flags: 
struct AVehicle_execImportantVehicle_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.ShootMissile
// Flags: 
struct AVehicle_execShootMissile_Parms
{
	class AwProjectile*                                P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.ShouldTargetMissile
// Flags: 
struct AVehicle_execShouldTargetMissile_Parms
{
	class AwProjectile*                                P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AAIController*                               C;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Vehicle.AlternateTarget
// Flags: [ FUNC_Simulated ]
struct AVehicle_execAlternateTarget_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.VerifyLock
// Flags: [ FUNC_Event ]
struct AVehicle_eventVerifyLock_Parms
{
	class AActor*                                      Aggressor;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      NewTarget;                                        		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.CheckSuperBerserk
// Flags: 
struct AVehicle_execCheckSuperBerserk_Parms
{
};

// Function Engine.Vehicle.GetTurrets
// Flags: 
struct AVehicle_execGetTurrets_Parms
{
	class TArray< class AVehicle* >                    ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Vehicle.PlayTakeHit
// Flags: 
struct AVehicle_execPlayTakeHit_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	int                                                Damage;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                SoundNum;                                         		// 0x0014 ( 0x0004
};

// Function Engine.Vehicle.POVChanged
// Flags: [ FUNC_Simulated ]
struct AVehicle_execPOVChanged_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bBehindViewChanged:1;                             		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Vehicle.IncrementSpree
// Flags: 
struct AVehicle_execIncrementSpree_Parms
{
};

// Function Engine.Vehicle.GetSpree
// Flags: 
struct AVehicle_execGetSpree_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.StaticPrecache
// Flags: 
struct AVehicle_execStaticPrecache_Parms
{
	class ALevelInfo*                                  L;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.AdjustedStrength
// Flags: 
struct AVehicle_execAdjustedStrength_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.HasOccupiedTurret
// Flags: 
struct AVehicle_execHasOccupiedTurret_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.IsVehicleEmpty
// Flags: [ FUNC_Event ]
struct AVehicle_eventIsVehicleEmpty_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.GetBotPassenger
// Flags: 
struct AVehicle_execGetBotPassenger_Parms
{
	class AAIController*                               ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.GetInstigator
// Flags: 
struct AVehicle_execGetInstigator_Parms
{
	class APawn*                                       ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.NumPassengers
// Flags: [ FUNC_Simulated ]
struct AVehicle_execNumPassengers_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.ServerPlayHorn
// Flags: 
struct AVehicle_execServerPlayHorn_Parms
{
	int                                                HornIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.StopForceFeedback
// Flags: [ FUNC_Simulated ]
struct AVehicle_execStopForceFeedback_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerController*                           PC;                                               		// 0x000C ( 0x0004
};

// Function Engine.Vehicle.ClientPlayForceFeedback
// Flags: [ FUNC_Simulated ]
struct AVehicle_execClientPlayForceFeedback_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerController*                           PC;                                               		// 0x000C ( 0x0004
};

// Function Engine.Vehicle.ChargeBar
// Flags: [ FUNC_Simulated ]
struct AVehicle_execChargeBar_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.Flip
// Flags: 
struct AVehicle_execFlip_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              ForceScale;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.NeedsFlip
// Flags: [ FUNC_Event ]
struct AVehicle_eventNeedsFlip_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     worldUp;                                          		// 0x0004 ( 0x000C
//	struct FVector                                     gravUp;                                           		// 0x0010 ( 0x000C
//	float                                              GravMag;                                          		// 0x001C ( 0x0004
};

// Function Engine.Vehicle.TeamLink
// Flags: 
struct AVehicle_execTeamLink_Parms
{
	int                                                TeamNum;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.PrevWeapon
// Flags: [ FUNC_Simulated ]
struct AVehicle_execPrevWeapon_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.Vehicle.NextWeapon
// Flags: [ FUNC_Simulated ]
struct AVehicle_execNextWeapon_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.Vehicle.UnStalled
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVehicle_eventUnStalled_Parms
{
};

// Function Engine.Vehicle.Stalled
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVehicle_eventStalled_Parms
{
};

// Function Engine.Vehicle.ShootSpecial
// Flags: 
struct AVehicle_execShootSpecial_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AController*                                 OldController;                                    		// 0x0008 ( 0x0004
};

// Function Engine.Vehicle.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct AVehicle_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Vehicle.TeamChanged
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVehicle_eventTeamChanged_Parms
{
};

// Function Engine.Vehicle.SetTeamNum
// Flags: 
struct AVehicle_execSetTeamNum_Parms
{
	unsigned char                                      t;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Vehicle.NotifyEnemyLostLock
// Flags: [ FUNC_Event ]
struct AVehicle_eventNotifyEnemyLostLock_Parms
{
};

// Function Engine.Vehicle.IncomingMissile
// Flags: 
struct AVehicle_execIncomingMissile_Parms
{
	class AwProjectile*                                P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.NotifyEnemyLockedOn
// Flags: [ FUNC_Event ]
struct AVehicle_eventNotifyEnemyLockedOn_Parms
{
};

// Function Engine.Vehicle.GetTeamNum
// Flags: [ FUNC_Simulated ]
struct AVehicle_execGetTeamNum_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.PlayDying
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVehicle_eventPlayDying_Parms
{
	class UClass*                                      DamageType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLoc;                                           		// 0x0004 ( 0x000C[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Vehicle.PlayTeleportEffect
// Flags: 
struct AVehicle_execPlayTeleportEffect_Parms
{
	unsigned long                                      bOut:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      bSound:1;                                         		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0008 ( 0x0004
	class UClass*                                      TransEffect;                                      		// 0x000C ( 0x0004
};

// Function Engine.Vehicle.PointOfView
// Flags: [ FUNC_Simulated ]
struct AVehicle_execPointOfView_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.LockOnWarning
// Flags: [ FUNC_Event ]
struct AVehicle_eventLockOnWarning_Parms
{
	class UClass*                                      LockOnClass;                                      		// 0x0000 ( 0x0004
};

// Function Engine.Vehicle.TakeWaterDamage
// Flags: [ FUNC_Event ]
struct AVehicle_eventTakeWaterDamage_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C
	struct FVector                                     HitNormal;                                        		// 0x0010 ( 0x000C
	class AActor*                                      EntryActor;                                       		// 0x001C ( 0x0004
};

// Function Engine.Vehicle.DrivingStatusChanged
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVehicle_eventDrivingStatusChanged_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.Vehicle.GetMoveTargetFor
// Flags: 
struct AVehicle_execGetMoveTargetFor_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AVehicle*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.GetBestEntry
// Flags: 
struct AVehicle_execGetBestEntry_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.IndependentVehicle
// Flags: [ FUNC_Simulated ]
struct AVehicle_execIndependentVehicle_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.OpenPositionFor
// Flags: 
struct AVehicle_execOpenPositionFor_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AVehicle*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.SetReservation
// Flags: 
struct AVehicle_execSetReservation_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.SpokenFor
// Flags: 
struct AVehicle_execSpokenFor_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.ChangedReservation
// Flags: 
struct AVehicle_execChangedReservation_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.NewReservationCostMultiplier
// Flags: 
struct AVehicle_execNewReservationCostMultiplier_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.ReservationCostMultiplier
// Flags: 
struct AVehicle_execReservationCostMultiplier_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.Occupied
// Flags: 
struct AVehicle_execOccupied_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.CheckTauntValid
// Flags: [ FUNC_Simulated ]
struct AVehicle_execCheckTauntValid_Parms
{
	struct FName                                       Sequence;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.FindValidTaunt
// Flags: [ FUNC_Simulated ]
struct AVehicle_execFindValidTaunt_Parms
{
	struct FName                                       Sequence;                                         		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.EncroachingOn
// Flags: 
struct AVehicle_execEncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.RanInto
// Flags: [ FUNC_Event ]
struct AVehicle_eventRanInto_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0004 ( 0x000C
	float                                              Speed;                                            		// 0x0010 ( 0x0004
};

// Function Engine.Vehicle.EncroachedBy
// Flags: [ FUNC_Event ]
struct AVehicle_eventEncroachedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.SetAnimAction
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVehicle_eventSetAnimAction_Parms
{
	struct FName                                       NewAction;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.FaceRotation
// Flags: [ FUNC_Simulated ]
struct AVehicle_execFaceRotation_Parms
{
	struct FRotator                                    NewRotation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              DeltaTime;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.UpdateEyeHeight
// Flags: [ FUNC_Event ]
struct AVehicle_eventUpdateEyeHeight_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Vehicle.StopWeaponFiring
// Flags: 
struct AVehicle_execStopWeaponFiring_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bResult:1;                                        		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.Vehicle.VehicleCeaseFire
// Flags: 
struct AVehicle_execVehicleCeaseFire_Parms
{
	unsigned long                                      bWasAltFire:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Vehicle.VehicleFire
// Flags: 
struct AVehicle_execVehicleFire_Parms
{
	unsigned long                                      bWasAltFire:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Vehicle.ClientVehicleCeaseFire
// Flags: 
struct AVehicle_execClientVehicleCeaseFire_Parms
{
	unsigned long                                      bWasAltFire:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Vehicle.AltFire
// Flags: 
struct AVehicle_execAltFire_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Vehicle.Fire
// Flags: 
struct AVehicle_execFire_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Vehicle.UsedBy
// Flags: 
struct AVehicle_execUsedBy_Parms
{
	class APawn*                                       User;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.EjectDriver
// Flags: 
struct AVehicle_execEjectDriver_Parms
{
	class APawn*                                       OldPawn;                                          		// 0x0000 ( 0x0004
	struct FVector                                     EjectVel;                                         		// 0x0004 ( 0x000C
};

// Function Engine.Vehicle.AdjustDriverDamage
// Flags: 
struct AVehicle_execAdjustDriverDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.Died
// Flags: 
struct AVehicle_execDied_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0020 ( 0x0004
	class AController*                                 C;                                                		// 0x0024 ( 0x0004
};

// Function Engine.Vehicle.DriverDied
// Flags: 
struct AVehicle_execDriverDied_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Vehicle.DriverRadiusDamage
// Flags: 
struct AVehicle_execDriverRadiusDamage_Parms
{
	float                                              DamageAmount;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              DamageRadius;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AController*                                 EventInstigator;                                  		// 0x0008 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              Momentum;                                         		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0014 ( 0x000C[ CPF_Parm ]
	float                                              damageScale;                                      		// 0x0020 ( 0x0004
	float                                              dist;                                             		// 0x0024 ( 0x0004
	struct FVector                                     Dir;                                              		// 0x0028 ( 0x000C
};

// Function Engine.Vehicle.HealDamage
// Flags: 
struct AVehicle_execHealDamage_Parms
{
	int                                                Amount;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Healer;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.TakeDamage
// Flags: 
struct AVehicle_execTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ActualDamage;                                     		// 0x0030 ( 0x0004
	class AController*                                 Killer;                                           		// 0x0034 ( 0x0004
};

// Function Engine.Vehicle.CheckForHeadShot
// Flags: 
struct AVehicle_execCheckForHeadShot_Parms
{
	struct FVector                                     loc;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ray;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              AdditionalScale;                                  		// 0x0018 ( 0x0004[ CPF_Parm ]
	class APawn*                                       ReturnValue;                                      		// 0x001C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.PlaceExitingDriver
// Flags: 
struct AVehicle_execPlaceExitingDriver_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
//	int                                                j;                                                		// 0x0008 ( 0x0004
//	struct FVector                                     tryPlace;                                         		// 0x000C ( 0x000C
//	struct FVector                                     Extent;                                           		// 0x0018 ( 0x000C
//	struct FVector                                     HitLocation;                                      		// 0x0024 ( 0x000C
//	struct FVector                                     HitNormal;                                        		// 0x0030 ( 0x000C
//	struct FVector                                     ZOffset;                                          		// 0x003C ( 0x000C
//	struct FVector                                     RandomSphereLoc;                                  		// 0x0048 ( 0x000C
//	float                                              BestDir;                                          		// 0x0054 ( 0x0004
//	float                                              NewDir;                                           		// 0x0058 ( 0x0004
};

// Function Engine.Vehicle.DetachDriver
// Flags: [ FUNC_Simulated ]
struct AVehicle_execDetachDriver_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.AttachDriver
// Flags: [ FUNC_Simulated ]
struct AVehicle_execAttachDriver_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     AttachPos;                                        		// 0x0004 ( 0x000C
};

// Function Engine.Vehicle.FixPCRotation
// Flags: [ FUNC_Simulated ]
struct AVehicle_execFixPCRotation_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.ActivateOverlay
// Flags: [ FUNC_Simulated ]
struct AVehicle_execActivateOverlay_Parms
{
	unsigned long                                      bActive:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Vehicle.ClientKDriverLeave
// Flags: [ FUNC_Simulated ]
struct AVehicle_execClientKDriverLeave_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.ClientClearController
// Flags: [ FUNC_Simulated ]
struct AVehicle_execClientClearController_Parms
{
};

// Function Engine.Vehicle.ClientKDriverEnter
// Flags: [ FUNC_Simulated ]
struct AVehicle_execClientKDriverEnter_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.UpdateTiltForceFeedback
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVehicle_eventUpdateTiltForceFeedback_Parms
{
	struct FRotator                                    SpringCenter;                                     		// 0x0000 ( 0x000C
	float                                              Pitch;                                            		// 0x000C ( 0x0004
	float                                              Roll;                                             		// 0x0010 ( 0x0004
	class APlayerController*                           PC;                                               		// 0x0014 ( 0x0004
};

// Function Engine.Vehicle.DriverLeft
// Flags: 
struct AVehicle_execDriverLeft_Parms
{
};

// Function Engine.Vehicle.KDriverLeave
// Flags: [ FUNC_Event ]
struct AVehicle_eventKDriverLeave_Parms
{
	unsigned long                                      bForceLeave:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AController*                                 C;                                                		// 0x0008 ( 0x0004
//	class APlayerController*                           PC;                                               		// 0x000C ( 0x0004
//	unsigned long                                      havePlaced:1;                                     		// 0x0010 ( 0x0004 [0x00000001]
//	unsigned long                                      bOldHardAttach:1;                                 		// 0x0014 ( 0x0004 [0x00000001]
//	unsigned long                                      bOldCollideWorld:1;                               		// 0x0018 ( 0x0004 [0x00000001]
//	unsigned long                                      bOldCollideActors:1;                              		// 0x001C ( 0x0004 [0x00000001]
//	unsigned long                                      bOldBlockActors:1;                                		// 0x0020 ( 0x0004 [0x00000001]
};

// Function Engine.Vehicle.SetWheelsScale
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVehicle_eventSetWheelsScale_Parms
{
	float                                              NewScale;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.AttachFlag
// Flags: 
struct AVehicle_execAttachFlag_Parms
{
	class AActor*                                      FlagActor;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.KDriverEnter
// Flags: 
struct AVehicle_execKDriverEnter_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Vehicle.UnPossessed
// Flags: 
struct AVehicle_execUnPossessed_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
	class AController*                                 NewController;                                    		// 0x0004 ( 0x0004
	unsigned long                                      bWasPlayer:1;                                     		// 0x0008 ( 0x0004 [0x00000001]
};

// Function Engine.Vehicle.PossessedBy
// Flags: 
struct AVehicle_execPossessedBy_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.Vehicle.VehicleLocked
// Flags: [ FUNC_Event ]
struct AVehicle_eventVehicleLocked_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vehicle.TryToDrive
// Flags: 
struct AVehicle_execTryToDrive_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.FindEntryVehicle
// Flags: 
struct AVehicle_execFindEntryVehicle_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AVehicle*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.SpectatorSpecialCalcView
// Flags: [ FUNC_Simulated ]
struct AVehicle_execSpectatorSpecialCalcView_Parms
{
	class APlayerController*                           Viewer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ViewActor;                                        		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CameraLocation;                                   		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FRotator                                    DummyRotation;                                    		// 0x0024 ( 0x000C
};

// Function Engine.Vehicle.SpecialCalcView
// Flags: [ FUNC_Simulated ]
struct AVehicle_execSpecialCalcView_Parms
{
	class AActor*                                      ViewActor;                                        		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CameraLocation;                                   		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           PC;                                               		// 0x0020 ( 0x0004
};

// Function Engine.Vehicle.SpecialCalcFirstPersonView
// Flags: [ FUNC_Simulated ]
struct AVehicle_execSpecialCalcFirstPersonView_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ViewActor;                                        		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CameraLocation;                                   		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FQuat                                       CarQuat;                                          		// 0x0020 ( 0x0010
	struct FQuat                                       LookQuat;                                         		// 0x0030 ( 0x0010
	struct FQuat                                       ResultQuat;                                       		// 0x0040 ( 0x0010
	struct FVector                                     VehicleZ;                                         		// 0x0050 ( 0x000C
	struct FVector                                     CamViewOffsetWorld;                               		// 0x005C ( 0x000C
	struct FVector                                     X;                                                		// 0x0068 ( 0x000C
	struct FVector                                     Y;                                                		// 0x0074 ( 0x000C
	struct FVector                                     Z;                                                		// 0x0080 ( 0x000C
	float                                              CamViewOffsetZAmount;                             		// 0x008C ( 0x0004
};

// Function Engine.Vehicle.SpecialCalcBehindView
// Flags: [ FUNC_Simulated ]
struct AVehicle_execSpecialCalcBehindView_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ViewActor;                                        		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CameraLocation;                                   		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CamLookAt;                                        		// 0x0020 ( 0x000C
	struct FVector                                     HitLocation;                                      		// 0x002C ( 0x000C
	struct FVector                                     HitNormal;                                        		// 0x0038 ( 0x000C
	struct FVector                                     OffsetVector;                                     		// 0x0044 ( 0x000C
	class AActor*                                      HitActor;                                         		// 0x0050 ( 0x0004
	struct FVector                                     X;                                                		// 0x0054 ( 0x000C
	struct FVector                                     Y;                                                		// 0x0060 ( 0x000C
	struct FVector                                     Z;                                                		// 0x006C ( 0x000C
};

// Function Engine.Vehicle.GetCameraLocationStart
// Flags: [ FUNC_Simulated ]
struct AVehicle_execGetCameraLocationStart_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.Destroyed_HandleDriver
// Flags: [ FUNC_Simulated ]
struct AVehicle_execDestroyed_HandleDriver_Parms
{
	class APawn*                                       OldDriver;                                        		// 0x0000 ( 0x0004
};

// Function Engine.Vehicle.Destroyed
// Flags: [ FUNC_Simulated ]
struct AVehicle_execDestroyed_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004
	class AVehicle*                                    Prev;                                             		// 0x0004 ( 0x0004
};

// Function Engine.Vehicle.BotDesireability
// Flags: 
struct AVehicle_execBotDesireability_Parms
{
	class AActor*                                      S;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                TeamIndex;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Objective;                                        		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bSameTeam:1;                                      		// 0x0010 ( 0x0004 [0x00000001]
//	class APlayerController*                           P;                                                		// 0x0014 ( 0x0004
};

// Function Engine.Vehicle.StronglyRecommended
// Flags: 
struct AVehicle_execStronglyRecommended_Parms
{
	class AActor*                                      S;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                TeamIndex;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Objective;                                        		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.SetInitialState
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVehicle_eventSetInitialState_Parms
{
};

// Function Engine.Vehicle.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct AVehicle_execPostBeginPlay_Parms
{
};

// Function Engine.Vehicle.RegisterTurret
// Flags: [ FUNC_Event ]
struct AVehicle_eventRegisterTurret_Parms
{
	class AController*                                 NewController;                                    		// 0x0000 ( 0x0004
};

// Function Engine.Vehicle.CheatFly
// Flags: 
struct AVehicle_execCheatFly_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.CheatGhost
// Flags: 
struct AVehicle_execCheatGhost_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.CheatWalk
// Flags: 
struct AVehicle_execCheatWalk_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vehicle.Suicide
// Flags: 
struct AVehicle_execSuicide_Parms
{
};

// Function Engine.Vehicle.GetVehiclePositionString
// Flags: [ FUNC_Simulated ]
struct AVehicle_execGetVehiclePositionString_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Vehicle.SetBaseEyeheight
// Flags: [ FUNC_Simulated ]
struct AVehicle_execSetBaseEyeheight_Parms
{
};

// Function Engine.Vehicle.PlayerChangedTeam
// Flags: 
struct AVehicle_execPlayerChangedTeam_Parms
{
};

// Function Engine.Vehicle.PreBeginPlay
// Flags: 
struct AVehicle_execPreBeginPlay_Parms
{
};

// Function Engine.Pawn.GetBaseStaminaTime
// Flags: 
struct APawn_execGetBaseStaminaTime_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.Set1stFov
// Flags: [ FUNC_Exec ]
struct APawn_execSet1stFov_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.SetInfiniteAmmoTutorial
// Flags: 
struct APawn_execSetInfiniteAmmoTutorial_Parms
{
	unsigned long                                      bDeleteGranade:1;                                 		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                iGranadeCount;                                    		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.CanQuickWeaponChange
// Flags: 
struct APawn_execCanQuickWeaponChange_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SetRemoveWeaponSkill
// Flags: 
struct APawn_execSetRemoveWeaponSkill_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.SetWeaponQuickChange
// Flags: 
struct APawn_execSetWeaponQuickChange_Parms
{
	unsigned long                                      bOn:1;                                            		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.SetWeaponQuickReload
// Flags: 
struct APawn_execSetWeaponQuickReload_Parms
{
	unsigned long                                      bOn:1;                                            		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.SetWeaponQuickAimZoom
// Flags: 
struct APawn_execSetWeaponQuickAimZoom_Parms
{
	unsigned long                                      bOn:1;                                            		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.AddWeaponMagazine
// Flags: 
struct APawn_execAddWeaponMagazine_Parms
{
};

// Function Engine.Pawn.IsEnableBombSetting
// Flags: [ FUNC_Simulated ]
struct APawn_execIsEnableBombSetting_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FName                                       Anim;                                             		// 0x0004 ( 0x0004
//	float                                              frame;                                            		// 0x0008 ( 0x0004
//	float                                              Rate;                                             		// 0x000C ( 0x0004
};

// Function Engine.Pawn.GetWeaponAttachmentInfo
// Flags: [ FUNC_Simulated ]
struct APawn_execGetWeaponAttachmentInfo_Parms
{
	unsigned char                                      byFlashCount;                                     		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	unsigned char                                      byFiringMode;                                     		// 0x0001 ( 0x0001[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Pawn.QuickTurn
// Flags: [ FUNC_Simulated ]
struct APawn_execQuickTurn_Parms
{
};

// Function Engine.Pawn.SetDesiredRotationCheck
// Flags: 
struct APawn_execSetDesiredRotationCheck_Parms
{
	unsigned long                                      Yaw:1;                                            		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      Pitch:1;                                          		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Roll:1;                                           		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.ServerRefreshCollisionHash
// Flags: 
struct APawn_execServerRefreshCollisionHash_Parms
{
};

// Function Engine.Pawn.AddWeapon
// Flags: 
struct APawn_execAddWeapon_Parms
{
	struct FBtrDouble                                  iUniqueID;                                        		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                iWeaponID;                                        		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      bPickupChange:1;                                  		// 0x0010 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                iPainting_Item_ID;                                		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    W;                                                		// 0x001C ( 0x0004
//	class UwWeaponBaseParams*                          WBP;                                              		// 0x0020 ( 0x0004
//	struct FString                                     strName;                                          		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
//	unsigned long                                      bUniqueID:1;                                      		// 0x0030 ( 0x0004 [0x00000001]
//	class APlayerController*                           PC;                                               		// 0x0034 ( 0x0004
//	float                                              MaxAmmoPrimary;                                   		// 0x0038 ( 0x0004
//	float                                              CurAmmoPrimary;                                   		// 0x003C ( 0x0004
};

// Function Engine.Pawn.AddWeaponFromSkill
// Flags: 
struct APawn_execAddWeaponFromSkill_Parms
{
	struct FBtrDouble                                  iUniqueID;                                        		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                iWeaponID;                                        		// 0x0008 ( 0x0004[ CPF_Parm ]
	class AInventory*                                  Inv;                                              		// 0x000C ( 0x0004
	class AwWeapon*                                    W;                                                		// 0x0010 ( 0x0004
};

// Function Engine.Pawn.ServerAddWeapon
// Flags: 
struct APawn_execServerAddWeapon_Parms
{
	struct FBtrDouble                                  iUniqueID;                                        		// 0x0000 ( 0x0008[ CPF_Parm ]
	int                                                iWeaponID;                                        		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.UAVScan
// Flags: [ FUNC_Simulated ]
struct APawn_execUAVScan_Parms
{
};

// Function Engine.Pawn.GetCurHealth
// Flags: [ FUNC_Simulated ]
struct APawn_execGetCurHealth_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GetMaxHealth
// Flags: [ FUNC_Simulated ]
struct APawn_execGetMaxHealth_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.UpdateLastKnownPosAndTime
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventUpdateLastKnownPosAndTime_Parms
{
	struct FVector                                     loc;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              Time;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.CalcRadioMessageTime
// Flags: [ FUNC_Simulated ]
struct APawn_execCalcRadioMessageTime_Parms
{
};

// Function Engine.Pawn.MakeRadioMessage
// Flags: [ FUNC_Simulated ]
struct APawn_execMakeRadioMessage_Parms
{
};

// Function Engine.Pawn.CalcFireNoiseTime
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventCalcFireNoiseTime_Parms
{
};

// Function Engine.Pawn.MakeFireNoise
// Flags: [ FUNC_Simulated ]
struct APawn_execMakeFireNoise_Parms
{
};

// Function Engine.Pawn.SetEaxEffect
// Flags: [ FUNC_Simulated ]
struct APawn_execSetEaxEffect_Parms
{
	class UI3DL2Listener*                              EAXEffect;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fTime;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.Tick
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventTick_Parms
{
	float                                              Delta;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ServerSetTypeOfWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execServerSetTypeOfWeapon_Parms
{
	unsigned char                                      ty;                                               		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Pawn.ClientSetWaitingPreAnimMode
// Flags: 
struct APawn_execClientSetWaitingPreAnimMode_Parms
{
	unsigned long                                      bWaiting:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.ServerSetWaitingPreAnimMode
// Flags: [ FUNC_Simulated ]
struct APawn_execServerSetWaitingPreAnimMode_Parms
{
	unsigned long                                      bWaiting:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.ClientSetWasReloadMode
// Flags: 
struct APawn_execClientSetWasReloadMode_Parms
{
	unsigned long                                      bReload:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.ServerSetWasReloadMode
// Flags: [ FUNC_Simulated ]
struct APawn_execServerSetWasReloadMode_Parms
{
	unsigned long                                      bReload:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.ClientSetReloadMode
// Flags: 
struct APawn_execClientSetReloadMode_Parms
{
	unsigned long                                      bReload:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.ServerSetReloadMode
// Flags: [ FUNC_Simulated ]
struct APawn_execServerSetReloadMode_Parms
{
	unsigned long                                      bReload:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.ClientSetTurretingMode
// Flags: 
struct APawn_execClientSetTurretingMode_Parms
{
	unsigned long                                      bTurret:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.ServerSetTurretingMode
// Flags: [ FUNC_Simulated ]
struct APawn_execServerSetTurretingMode_Parms
{
	unsigned long                                      bTurret:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.SetTurretIdleAnimFrame
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventSetTurretIdleAnimFrame_Parms
{
	float                                              frame;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              UpDownFrame;                                      		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FName                                       CurrentAnim;                                      		// 0x0008 ( 0x0004
	float                                              CurrentFrame;                                     		// 0x000C ( 0x0004
	float                                              CurrentRate;                                      		// 0x0010 ( 0x0004
};

// Function Engine.Pawn.PlayTurretIdleAnim
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventPlayTurretIdleAnim_Parms
{
	unsigned long                                      UpDown:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.SetDriverFrame
// Flags: [ FUNC_Simulated ]
struct APawn_execSetDriverFrame_Parms
{
	float                                              frame;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              UpDownFrame;                                      		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.SetAimModeValueOnly
// Flags: [ FUNC_Simulated ]
struct APawn_execSetAimModeValueOnly_Parms
{
	unsigned long                                      bToggle:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.SetAimMode
// Flags: [ FUNC_Simulated ]
struct APawn_execSetAimMode_Parms
{
	unsigned long                                      bToggle:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.GetTargetLocation
// Flags: [ FUNC_Simulated ]
struct APawn_execGetTargetLocation_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.RangedAttackTime
// Flags: 
struct APawn_execRangedAttackTime_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.CheatFly
// Flags: 
struct APawn_execCheatFly_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.CheatGhost
// Flags: 
struct APawn_execCheatGhost_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.CheatWalk
// Flags: 
struct APawn_execCheatWalk_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.Suicide
// Flags: 
struct APawn_execSuicide_Parms
{
};

// Function Engine.Pawn.RawInput
// Flags: [ FUNC_Simulated ]
struct APawn_execRawInput_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              aBaseX;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              aBaseY;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              aBaseZ;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              aMouseX;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              aMouseY;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              aForward;                                         		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              aTurn;                                            		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              aStrafe;                                          		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              aUp;                                              		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              aLookUp;                                          		// 0x0028 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.IncrementSpree
// Flags: 
struct APawn_execIncrementSpree_Parms
{
};

// Function Engine.Pawn.GetSpree
// Flags: 
struct APawn_execGetSpree_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GetVehicleBase
// Flags: 
struct APawn_execGetVehicleBase_Parms
{
	class AVehicle*                                    ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.PlayVictoryAnimation
// Flags: 
struct APawn_execPlayVictoryAnimation_Parms
{
};

// Function Engine.Pawn.PlayLandingAnimation
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventPlayLandingAnimation_Parms
{
	float                                              impactVel;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.PlayLanded
// Flags: 
struct APawn_execPlayLanded_Parms
{
	float                                              impactVel;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.CheckProneAni
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventCheckProneAni_Parms
{
	unsigned long                                      bGoProne:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.PlayRechamber
// Flags: [ FUNC_Simulated ]
struct APawn_execPlayRechamber_Parms
{
};

// Function Engine.Pawn.PlayReload
// Flags: [ FUNC_Simulated ]
struct APawn_execPlayReload_Parms
{
};

// Function Engine.Pawn.PlayWaiting
// Flags: [ FUNC_Simulated ]
struct APawn_execPlayWaiting_Parms
{
};

// Function Engine.Pawn.PlayMoving
// Flags: [ FUNC_Simulated ]
struct APawn_execPlayMoving_Parms
{
};

// Function Engine.Pawn.PlayFalling
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventPlayFalling_Parms
{
};

// Function Engine.Pawn.PlayJump
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventPlayJump_Parms
{
};

// Function Engine.Pawn.CannotJumpNow
// Flags: 
struct APawn_execCannotJumpNow_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.AnimEnd
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventAnimEnd_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ChangeAnimation
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventChangeAnimation_Parms
{
};

// Function Engine.Pawn.PlayTakeHit
// Flags: 
struct APawn_execPlayTakeHit_Parms
{
	struct FVector                                     HitLoc;                                           		// 0x0000 ( 0x000C[ CPF_Parm ]
	int                                                Damage;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
	class USound*                                      DesiredSound;                                     		// 0x0014 ( 0x0004
};

// Function Engine.Pawn.StopPlayFiring
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventStopPlayFiring_Parms
{
};

// Function Engine.Pawn.ServerThrowsWeaponAnim
// Flags: [ FUNC_Simulated ]
struct APawn_execServerThrowsWeaponAnim_Parms
{
	unsigned long                                      bQuick:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.ServerPlayPutdownWeaponAnim
// Flags: [ FUNC_Simulated ]
struct APawn_execServerPlayPutdownWeaponAnim_Parms
{
	unsigned long                                      bQuick:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.PlayWeaponSwitch
// Flags: 
struct APawn_execPlayWeaponSwitch_Parms
{
	class AwWeapon*                                    newWeapon;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.PlayFiring
// Flags: [ FUNC_Simulated ]
struct APawn_execPlayFiring_Parms
{
	float                                              Rate;                                             		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FName                                       FiringMode;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.PlayDying
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventPlayDying_Parms
{
	class UClass*                                      DamageType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLoc;                                           		// 0x0004 ( 0x000C[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.SetAnimAction
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventSetAnimAction_Parms
{
	struct FName                                       NewAction;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ServerSetAnimAction
// Flags: 
struct APawn_execServerSetAnimAction_Parms
{
	struct FName                                       NewAction;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.IsInLoadout
// Flags: 
struct APawn_execIsInLoadout_Parms
{
	class UClass*                                      InventoryClass;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.TurnOff
// Flags: [ FUNC_Simulated ]
struct APawn_execTurnOff_Parms
{
};

// Function Engine.Pawn.ChunkUp
// Flags: [ FUNC_Simulated ]
struct APawn_execChunkUp_Parms
{
	struct FRotator                                    HitRotation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              ChunkPerterbation;                                		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.PlayHit
// Flags: 
struct APawn_execPlayHit_Parms
{
	float                                              Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0014 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0018 ( 0x000C[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     BloodOffset;                                      		// 0x0028 ( 0x000C
	struct FVector                                     Mo;                                               		// 0x0034 ( 0x000C
	struct FVector                                     HitNormal;                                        		// 0x0040 ( 0x000C
	class UClass*                                      DesiredEffect;                                    		// 0x004C ( 0x0004
	class UClass*                                      DesiredEmitter;                                   		// 0x0050 ( 0x0004
	class APlayerController*                           Hearer;                                           		// 0x0054 ( 0x0004
};

// Function Engine.Pawn.PlayDyingSound
// Flags: 
struct APawn_execPlayDyingSound_Parms
{
};

// Function Engine.Pawn.PlayMoverHitSound
// Flags: 
struct APawn_execPlayMoverHitSound_Parms
{
};

// Function Engine.Pawn.DoJump
// Flags: 
struct APawn_execDoJump_Parms
{
	unsigned long                                      bUpdating:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.Dodge
// Flags: 
struct APawn_execDodge_Parms
{
	unsigned char                                      DoubleClickMove;                                  		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.ProcessMove
// Flags: 
struct APawn_execProcessMove_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     NewAccel;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned char                                      DoubleClickMove;                                  		// 0x0010 ( 0x0001[ CPF_Parm ]
	struct FRotator                                    DeltaRot;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.UpdateRocketAcceleration
// Flags: 
struct APawn_execUpdateRocketAcceleration_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YawChange;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              PitchChange;                                      		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.CanMultiJump
// Flags: 
struct APawn_execCanMultiJump_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.CanDoubleJump
// Flags: 
struct APawn_execCanDoubleJump_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.DoDoubleJump
// Flags: 
struct APawn_execDoDoubleJump_Parms
{
	unsigned long                                      bUpdating:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.CheckWaterJump
// Flags: 
struct APawn_execCheckWaterJump_Parms
{
	struct FVector                                     WallNormal;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AActor*                                      HitActor;                                         		// 0x0010 ( 0x0004
//	struct FVector                                     HitLocation;                                      		// 0x0014 ( 0x000C
//	struct FVector                                     HitNormal;                                        		// 0x0020 ( 0x000C
//	struct FVector                                     checkpoint;                                       		// 0x002C ( 0x000C
//	struct FVector                                     Start;                                            		// 0x0038 ( 0x000C
//	struct FVector                                     checkNorm;                                        		// 0x0044 ( 0x000C
};

// Function Engine.Pawn.TakeDrowningDamage
// Flags: 
struct APawn_execTakeDrowningDamage_Parms
{
};

// Function Engine.Pawn.BreathTimer
// Flags: [ FUNC_Event ]
struct APawn_eventBreathTimer_Parms
{
};

// Function Engine.Pawn.IsInPain
// Flags: 
struct APawn_execIsInPain_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APhysicsVolume*                              V;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.TouchingWaterVolume
// Flags: 
struct APawn_execTouchingWaterVolume_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APhysicsVolume*                              V;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.HeadVolumeChange
// Flags: [ FUNC_Event ]
struct APawn_eventHeadVolumeChange_Parms
{
	class APhysicsVolume*                              newHeadVolume;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.Landed
// Flags: [ FUNC_Event ]
struct APawn_eventLanded_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.PlayLandedSound
// Flags: [ FUNC_Event ]
struct APawn_eventPlayLandedSound_Parms
{
	int                                                SurfType;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.HitWall
// Flags: [ FUNC_Event ]
struct APawn_eventHitWall_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      Wall;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	class UMaterial*                                   HitMaterial;                                      		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.Falling
// Flags: [ FUNC_Event ]
struct APawn_eventFalling_Parms
{
};

// Function Engine.Pawn.RemovePowerups
// Flags: 
struct APawn_execRemovePowerups_Parms
{
};

// Function Engine.Pawn.Died
// Flags: 
struct APawn_execDied_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     TossVel;                                          		// 0x0020 ( 0x000C
	class ATrigger*                                    t;                                                		// 0x002C ( 0x0004
	class ANavigationPoint*                            N;                                                		// 0x0030 ( 0x0004
	unsigned long                                      bTossWeapon:1;                                    		// 0x0034 ( 0x0004 [0x00000001]
	unsigned long                                      bSkillWeapon:1;                                   		// 0x0038 ( 0x0004 [0x00000001]
	class UwItemBaseParam*                             ItemParam;                                        		// 0x003C ( 0x0004
};

// Function Engine.Pawn.CalcItemUsedTime
// Flags: 
struct APawn_execCalcItemUsedTime_Parms
{
	class UwMatchUserInfo*                             kUser;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	int                                                j;                                                		// 0x0008 ( 0x0004
	float                                              Time;                                             		// 0x000C ( 0x0004
};

// Function Engine.Pawn.CalcItemUsedTimeSelf
// Flags: 
struct APawn_execCalcItemUsedTimeSelf_Parms
{
};

// Function Engine.Pawn.GetKillerController
// Flags: 
struct APawn_execGetKillerController_Parms
{
	class AController*                                 ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GetTeam
// Flags: 
struct APawn_execGetTeam_Parms
{
	class ATeamInfo*                                   ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GetTeamNum
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct APawn_execGetTeamNum_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SetDelayedDamageInstigatorController
// Flags: 
struct APawn_execSetDelayedDamageInstigatorController_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.GetAssistList
// Flags: 
struct APawn_execGetAssistList_Parms
{
	class APawn*                                       Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< class AController* >                 ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FPlayerDamageInfo >           ADmInfo;                                          		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FPlayerDamageInfo                           tmSrcInfo;                                        		// 0x001C ( 0x0018
//	int                                                i;                                                		// 0x0034 ( 0x0004
//	int                                                j;                                                		// 0x0038 ( 0x0004
//	int                                                AssistGainTime;                                   		// 0x003C ( 0x0004
//	int                                                AssistMinDamage;                                  		// 0x0040 ( 0x0004
//	unsigned long                                      bFind:1;                                          		// 0x0044 ( 0x0004 [0x00000001]
};

// Function Engine.Pawn.GetAssistScore
// Flags: 
struct APawn_execGetAssistScore_Parms
{
	int                                                UID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FPlayerDamageInfo                           tmSrcInfo;                                        		// 0x0008 ( 0x0018
//	int                                                i;                                                		// 0x0020 ( 0x0004
//	unsigned long                                      bFindStun:1;                                      		// 0x0024 ( 0x0004 [0x00000001]
};

// Function Engine.Pawn.AddDamageInfo
// Flags: 
struct APawn_execAddDamageInfo_Parms
{
	class APawn*                                       instigatedBy;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Damage;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FPlayerDamageInfo                           DInfo;                                            		// 0x000C ( 0x0018
	struct FString                                     strDamageType;                                    		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.Pawn.TakeDamage
// Flags: 
struct APawn_execTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ActualDamage;                                     		// 0x0030 ( 0x0004
	class AController*                                 Killer;                                           		// 0x0034 ( 0x0004
};

// Function Engine.Pawn.GetDamagedByKiller
// Flags: 
struct APawn_execGetDamagedByKiller_Parms
{
	class UClass*                                      DamageType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AController*                                 ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AController*                                 Killer;                                           		// 0x000C ( 0x0004
};

// Function Engine.Pawn.ApplyDealDamageRatio
// Flags: 
struct APawn_execApplyDealDamageRatio_Parms
{
	class APawn*                                       instigatedBy;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                ActualDamage;                                     		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Pawn.GetDelayedInstigatorController
// Flags: 
struct APawn_execGetDelayedInstigatorController_Parms
{
	class APawn*                                       instigatedBy;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AController*                                 Killer;                                           		// 0x0008 ( 0x0004
//	class AController*                                 C;                                                		// 0x000C ( 0x0004
};

// Function Engine.Pawn.TakeDamageSound
// Flags: 
struct APawn_execTakeDamageSound_Parms
{
	int                                                LeftHealth;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ActualDamage;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x001C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 Killer;                                           		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.TakeHeadRoundBullet
// Flags: 
struct APawn_execTakeHeadRoundBullet_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	int                                                WeaponType;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FVector                                     loctohit;                                         		// 0x0010 ( 0x000C
};

// Function Engine.Pawn.ShieldAbsorb
// Flags: 
struct APawn_execShieldAbsorb_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.HasUDamage
// Flags: 
struct APawn_execHasUDamage_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GiveHealth
// Flags: 
struct APawn_execGiveHealth_Parms
{
	int                                                HealAmount;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                HealMax;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SetMovementPhysics
// Flags: 
struct APawn_execSetMovementPhysics_Parms
{
};

// Function Engine.Pawn.Gasp
// Flags: 
struct APawn_execGasp_Parms
{
};

// Function Engine.Pawn.SetMesh
// Flags: [ FUNC_Simulated ]
struct APawn_execSetMesh_Parms
{
};

// Function Engine.Pawn.SetShadowLight
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventSetShadowLight_Parms
{
	struct FVector                                     vLightDir;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.PostNetBeginPlay
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventPostNetBeginPlay_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Pawn.PostBeginPlay
// Flags: [ FUNC_Event ]
struct APawn_eventPostBeginPlay_Parms
{
	class AAIScript*                                   A;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Pawn.PreBeginPlay
// Flags: [ FUNC_Event ]
struct APawn_eventPreBeginPlay_Parms
{
};

// Function Engine.Pawn.Destroyed
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventDestroyed_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
};

// Function Engine.Pawn.EyePosition
// Flags: [ FUNC_Simulated ]
struct APawn_execEyePosition_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.UpdateEyeHeightScript
// Flags: 
struct APawn_execUpdateEyeHeightScript_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              smooth;                                           		// 0x0004 ( 0x0004
	float                                              MaxEyeHeight;                                     		// 0x0008 ( 0x0004
	float                                              OldEyeHeight;                                     		// 0x000C ( 0x0004
	class AActor*                                      HitActor;                                         		// 0x0010 ( 0x0004
	struct FVector                                     HitLocation;                                      		// 0x0014 ( 0x000C
	struct FVector                                     HitNormal;                                        		// 0x0020 ( 0x000C
};

// Function Engine.Pawn.UpdateEyeHeight
// Flags: [ FUNC_Event ]
struct APawn_eventUpdateEyeHeight_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.UpdateEyeHeightNative
// Flags: [ FUNC_Native ]
struct APawn_execUpdateEyeHeightNative_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.BaseChange
// Flags: [ FUNC_Event ]
struct APawn_eventBaseChange_Parms
{
	float                                              decorMass;                                        		// 0x0000 ( 0x0004
	int                                                footdamage;                                       		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.JumpOffPawn
// Flags: 
struct APawn_execJumpOffPawn_Parms
{
};

// Function Engine.Pawn.gibbedBy
// Flags: 
struct APawn_execgibbedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.EncroachedBy
// Flags: [ FUNC_Event ]
struct APawn_eventEncroachedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.EncroachingOn
// Flags: [ FUNC_Event ]
struct APawn_eventEncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.IsHeadShot
// Flags: 
struct APawn_execIsHeadShot_Parms
{
	struct FVector                                     loc;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ray;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              AdditionalScale;                                  		// 0x0018 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FCoords                                     C;                                                		// 0x0020 ( 0x0030
//	struct FVector                                     HeadLoc;                                          		// 0x0050 ( 0x000C
//	struct FVector                                     B;                                                		// 0x005C ( 0x000C
//	struct FVector                                     M;                                                		// 0x0068 ( 0x000C
//	struct FVector                                     diff;                                             		// 0x0074 ( 0x000C
//	float                                              t;                                                		// 0x0080 ( 0x0004
//	float                                              DotMM;                                            		// 0x0084 ( 0x0004
//	float                                              Distance;                                         		// 0x0088 ( 0x0004
//	int                                                look;                                             		// 0x008C ( 0x0004
};

// Function Engine.Pawn.ServerChangedWeapon
// Flags: 
struct APawn_execServerChangedWeapon_Parms
{
	class AwWeapon*                                    OldWeapon;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    newWeapon;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0008 ( 0x0004
};

// Function Engine.Pawn.GetWeaponBoneFor
// Flags: 
struct APawn_execGetWeaponBoneFor_Parms
{
	class AInventory*                                  i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GetOffhandBoneFor
// Flags: 
struct APawn_execGetOffhandBoneFor_Parms
{
	class AInventory*                                  i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.ChangedWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execChangedWeapon_Parms
{
	class AwWeapon*                                    OldWeapon;                                        		// 0x0000 ( 0x0004
};

// Function Engine.Pawn.ClientForceChangedWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execClientForceChangedWeapon_Parms
{
	class AwWeapon*                                    newWeapon;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.DeleteInventory
// Flags: 
struct APawn_execDeleteInventory_Parms
{
	class AInventory*                                  Item;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Link;                                             		// 0x0004 ( 0x0004
	int                                                Count;                                            		// 0x0008 ( 0x0004
};

// Function Engine.Pawn.DeleteInventoryFromStorage
// Flags: 
struct APawn_execDeleteInventoryFromStorage_Parms
{
	class AInventory*                                  Item;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
	struct FString                                     sWeapon;                                          		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.Pawn.DeleteInventoriesFromStorage
// Flags: 
struct APawn_execDeleteInventoriesFromStorage_Parms
{
	class AInventory*                                  Item;                                             		// 0x0000 ( 0x0004
};

// Function Engine.Pawn.AddInventory
// Flags: 
struct APawn_execAddInventory_Parms
{
	class AInventory*                                  NewItem;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Inv;                                              		// 0x0008 ( 0x0004
//	class AActor*                                      Last;                                             		// 0x000C ( 0x0004
//	class AActor*                                      Prev;                                             		// 0x0010 ( 0x0004
//	unsigned long                                      bAddedInOrder:1;                                  		// 0x0014 ( 0x0004 [0x00000001]
};

// Function Engine.Pawn.FindInventoryType
// Flags: 
struct APawn_execFindInventoryType_Parms
{
	class UClass*                                      DesiredClass;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AInventory*                                  ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Inv;                                              		// 0x0008 ( 0x0004
//	int                                                Count;                                            		// 0x000C ( 0x0004
};

// Function Engine.Pawn.NextItem
// Flags: [ FUNC_Exec ]
struct APawn_execNextItem_Parms
{
};

// Function Engine.Pawn.ServerNoTranslocator
// Flags: 
struct APawn_execServerNoTranslocator_Parms
{
};

// Function Engine.Pawn.SwitchWeaponWClass
// Flags: [ FUNC_Simulated ]
struct APawn_execSwitchWeaponWClass_Parms
{
	struct FName                                       ClassName;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     sReason;                                          		// 0x0004 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	class AwWeapon*                                    newWeapon;                                        		// 0x0010 ( 0x0004
};

// Function Engine.Pawn.SwitchWeaponByWeaponItem
// Flags: [ FUNC_Simulated ]
struct APawn_execSwitchWeaponByWeaponItem_Parms
{
	class AwWeapon*                                    wSwitchWeapon;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bQuickGr:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    newWeapon;                                        		// 0x000C ( 0x0004
};

// Function Engine.Pawn.SwitchWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execSwitchWeapon_Parms
{
	unsigned char                                      f;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      bQuickGr:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    newWeapon;                                        		// 0x000C ( 0x0004
//	class UwMatchMaker*                                kMM;                                              		// 0x0010 ( 0x0004
};

// Function Engine.Pawn.SelectPrevWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execSelectPrevWeapon_Parms
{
};

// Function Engine.Pawn.NextWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execNextWeapon_Parms
{
};

// Function Engine.Pawn.PrevWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execPrevWeapon_Parms
{
};

// Function Engine.Pawn.SwitchToLastWeapon_ThrowsWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execSwitchToLastWeapon_ThrowsWeapon_Parms
{
};

// Function Engine.Pawn.SwitchToLastWeapon
// Flags: [ FUNC_Exec ]
struct APawn_execSwitchToLastWeapon_Parms
{
};

// Function Engine.Pawn.ClientPickupWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execClientPickupWeapon_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.Pawn.ServerPickupWeapon
// Flags: 
struct APawn_execServerPickupWeapon_Parms
{
};

// Function Engine.Pawn.CheckEntryVehicle
// Flags: 
struct APawn_execCheckEntryVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004
	int                                                lp1;                                              		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.CheckTouchWeaponPickup
// Flags: 
struct APawn_execCheckTouchWeaponPickup_Parms
{
	class AwWeaponPickup*                              WPick;                                            		// 0x0000 ( 0x0004
};

// Function Engine.Pawn.TossWeapon
// Flags: 
struct APawn_execTossWeapon_Parms
{
	struct FVector                                     TossVel;                                          		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    rToss;                                            		// 0x000C ( 0x000C
};

// Function Engine.Pawn.CanThrowWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execCanThrowWeapon_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.CanUseShield
// Flags: 
struct APawn_execCanUseShield_Parms
{
	int                                                Amount;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.AddShieldStrength
// Flags: 
struct APawn_execAddShieldStrength_Parms
{
	int                                                Amount;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GetShieldStrength
// Flags: 
struct APawn_execGetShieldStrength_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GetShieldStrengthMax
// Flags: 
struct APawn_execGetShieldStrengthMax_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.DisableUDamage
// Flags: 
struct APawn_execDisableUDamage_Parms
{
};

// Function Engine.Pawn.EnableUDamage
// Flags: 
struct APawn_execEnableUDamage_Parms
{
	float                                              Amount;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.InCurrentCombo
// Flags: 
struct APawn_execInCurrentCombo_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.DoComboName
// Flags: 
struct APawn_execDoComboName_Parms
{
	struct FString                                     ComboClassName;                                   		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Pawn.ClientDying
// Flags: 
struct APawn_execClientDying_Parms
{
	class UClass*                                      DamageType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.LimitPitch
// Flags: 
struct APawn_execLimitPitch_Parms
{
	int                                                Pitch;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.FaceRotation
// Flags: [ FUNC_Simulated ]
struct APawn_execFaceRotation_Parms
{
	struct FRotator                                    NewRotation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              DeltaTime;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ClientSetRotation
// Flags: 
struct APawn_execClientSetRotation_Parms
{
	struct FRotator                                    NewRotation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.ClientSetLocation
// Flags: 
struct APawn_execClientSetLocation_Parms
{
	struct FVector                                     NewLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    NewRotation;                                      		// 0x000C ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.ClientReStart
// Flags: 
struct APawn_execClientReStart_Parms
{
};

// Function Engine.Pawn.TakeFallingDamage
// Flags: 
struct APawn_execTakeFallingDamage_Parms
{
	float                                              Shake;                                            		// 0x0000 ( 0x0004
	float                                              EffectiveSpeed;                                   		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.KilledBy
// Flags: 
struct APawn_execKilledBy_Parms
{
	class APawn*                                       EventInstigator;                                  		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killer;                                           		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.AddVelocity
// Flags: 
struct APawn_execAddVelocity_Parms
{
	struct FVector                                     NewVelocity;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.RestartPlayer
// Flags: 
struct APawn_execRestartPlayer_Parms
{
};

// Function Engine.Pawn.StartProne
// Flags: [ FUNC_Event ]
struct APawn_eventStartProne_Parms
{
	float                                              HeightAdjust;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.EndProne
// Flags: [ FUNC_Event ]
struct APawn_eventEndProne_Parms
{
	float                                              HeightAdjust;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.StartCrouch
// Flags: [ FUNC_Event ]
struct APawn_eventStartCrouch_Parms
{
	float                                              HeightAdjust;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.EndCrouch
// Flags: [ FUNC_Event ]
struct APawn_eventEndCrouch_Parms
{
	float                                              HeightAdjust;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ServerSetUseKeyState
// Flags: [ FUNC_Simulated ]
struct APawn_execServerSetUseKeyState_Parms
{
	unsigned char                                      byKey;                                            		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Pawn.ShouldProne
// Flags: 
struct APawn_execShouldProne_Parms
{
	unsigned long                                      Prone:1;                                          		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.ShouldCrouch
// Flags: 
struct APawn_execShouldCrouch_Parms
{
	unsigned long                                      crouch:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.FellOutOfWorld
// Flags: [ FUNC_Event ]
struct APawn_eventFellOutOfWorld_Parms
{
	unsigned char                                      KillType;                                         		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Pawn.ModifyVelocity
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventModifyVelocity_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     OldVelocity;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.JumpOutOfWater
// Flags: 
struct APawn_execJumpOutOfWater_Parms
{
	struct FVector                                     jumpDir;                                          		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.FinishedInterpolation
// Flags: 
struct APawn_execFinishedInterpolation_Parms
{
};

// Function Engine.Pawn.SetDefaultDisplayProperties
// Flags: 
struct APawn_execSetDefaultDisplayProperties_Parms
{
};

// Function Engine.Pawn.SetDisplayProperties
// Flags: 
struct APawn_execSetDisplayProperties_Parms
{
	unsigned char                                      NewStyle;                                         		// 0x0000 ( 0x0001[ CPF_Parm ]
	class UMaterial*                                   NewTexture;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bLighting:1;                                      		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.GiveWeapon
// Flags: 
struct APawn_execGiveWeapon_Parms
{
	struct FString                                     aClassName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UClass*                                      WeaponClass;                                      		// 0x000C ( 0x0004
	class AwWeapon*                                    newWeapon;                                        		// 0x0010 ( 0x0004
};

// Function Engine.Pawn.CreateInventory
// Flags: 
struct APawn_execCreateInventory_Parms
{
	struct FString                                     InventoryClassName;                               		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AInventory*                                  ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.CanTrigger
// Flags: 
struct APawn_execCanTrigger_Parms
{
	class ATrigger*                                    t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.Trigger
// Flags: 
struct APawn_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ClientMessage
// Flags: [ FUNC_Event ]
struct APawn_eventClientMessage_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.ReceiveLocalizedMessage
// Flags: 
struct APawn_execReceiveLocalizedMessage_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.HandlePickup
// Flags: 
struct APawn_execHandlePickup_Parms
{
	class APickup*                                     pick;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.AdjustedStrength
// Flags: 
struct APawn_execAdjustedStrength_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.ShootSpecial
// Flags: 
struct APawn_execShootSpecial_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.AdjustAim
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct APawn_execAdjustAim_Parms
{
	struct FFireProperties                             FiredAmmunition;                                  		// 0x0000 ( 0x0014[ CPF_Parm ]
	struct FVector                                     projStart;                                        		// 0x0014 ( 0x000C[ CPF_Parm ]
	int                                                AimError;                                         		// 0x0020 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.LineOfSightTo
// Flags: 
struct APawn_execLineOfSightTo_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SetMoveTarget
// Flags: 
struct APawn_execSetMoveTarget_Parms
{
	class AActor*                                      NewTarget;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.GetMoveTarget
// Flags: 
struct APawn_execGetMoveTarget_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.PressingAltFire
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct APawn_execPressingAltFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.PressingFire
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct APawn_execPressingFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.NearMoveTarget
// Flags: 
struct APawn_execNearMoveTarget_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.InGodMode
// Flags: [ FUNC_Final ]
struct APawn_execInGodMode_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SetViewRotation
// Flags: [ FUNC_Simulated ]
struct APawn_execSetViewRotation_Parms
{
	struct FRotator                                    NewRotation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pawn.GetViewRotationForFP
// Flags: [ FUNC_Simulated ]
struct APawn_execGetViewRotationForFP_Parms
{
	struct FRotator                                    ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GetViewRotation
// Flags: [ FUNC_Simulated ]
struct APawn_execGetViewRotation_Parms
{
	struct FRotator                                    ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           PC;                                               		// 0x000C ( 0x0004
//	struct FRotator                                    rReturn;                                          		// 0x0010 ( 0x000C
};

// Function Engine.Pawn.IsLocalPlayerViewtarget
// Flags: [ FUNC_Simulated ]
struct APawn_execIsLocalPlayerViewtarget_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.IsFirstPerson
// Flags: [ FUNC_Simulated ]
struct APawn_execIsFirstPerson_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.IsLocallyControlled
// Flags: [ FUNC_Simulated ]
struct APawn_execIsLocallyControlled_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.IsHumanControlled
// Flags: [ FUNC_Simulated ]
struct APawn_execIsHumanControlled_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.WasPlayerPawn
// Flags: [ FUNC_Simulated ]
struct APawn_execWasPlayerPawn_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.IsPlayerPawn
// Flags: [ FUNC_Simulated ]
struct APawn_execIsPlayerPawn_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.CheckTauntValid
// Flags: [ FUNC_Simulated ]
struct APawn_execCheckTauntValid_Parms
{
	struct FName                                       Sequence;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.FindValidTaunt
// Flags: [ FUNC_Simulated ]
struct APawn_execFindValidTaunt_Parms
{
	struct FName                                       Sequence;                                         		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.StopDriving
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventStopDriving_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.StartDriving
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventStartDriving_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 VehicleController;                                		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.ForceStandup
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct APawn_execForceStandup_Parms
{
};

// Function Engine.Pawn.InitialPlayer
// Flags: [ FUNC_Simulated ]
struct APawn_execInitialPlayer_Parms
{
};

// Function Engine.Pawn.CheckBob
// Flags: 
struct APawn_execCheckBob_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Y;                                                		// 0x0004 ( 0x000C[ CPF_Parm ]
	float                                              Speed2D;                                          		// 0x0010 ( 0x0004
	float                                              BobCamera;                                        		// 0x0014 ( 0x0004
	float                                              MaxSpeed;                                         		// 0x0018 ( 0x0004
	float                                              fRatioSpeed;                                      		// 0x001C ( 0x0004
	struct FRotator                                    rotTemp;                                          		// 0x0020 ( 0x000C
	unsigned long                                      bWeaponBobZ:1;                                    		// 0x002C ( 0x0004 [0x00000001]
	float                                              fBobAdd;                                          		// 0x0030 ( 0x0004
	float                                              fBobZ;                                            		// 0x0034 ( 0x0004
	float                                              fBobCameraZ;                                      		// 0x0038 ( 0x0004
	float                                              fBobRot;                                          		// 0x003C ( 0x0004
};

// Function Engine.Pawn.GetBobParam
// Flags: 
struct APawn_execGetBobParam_Parms
{
	float                                              Bob;                                              		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              BobCamera;                                        		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              fBobZ;                                            		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              fBobCameraZ;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              fSprintIntensity;                                 		// 0x0010 ( 0x0004
};

// Function Engine.Pawn.GetMaxSpeed
// Flags: 
struct APawn_execGetMaxSpeed_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              MaxSpeed;                                         		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.WeaponBob
// Flags: [ FUNC_Simulated ]
struct APawn_execWeaponBob_Parms
{
	float                                              BobDamping;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     WBob;                                             		// 0x0010 ( 0x000C
};

// Function Engine.Pawn.ModifiedPlayerViewOffset
// Flags: [ FUNC_Simulated ]
struct APawn_execModifiedPlayerViewOffset_Parms
{
	class AInventory*                                  Inv;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.CameraShake
// Flags: [ FUNC_Simulated ]
struct APawn_execCameraShake_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     X;                                                		// 0x000C ( 0x000C
//	struct FVector                                     Y;                                                		// 0x0018 ( 0x000C
//	struct FVector                                     Z;                                                		// 0x0024 ( 0x000C
//	struct FVector                                     shakevect;                                        		// 0x0030 ( 0x000C
//	class APlayerController*                           PC;                                               		// 0x003C ( 0x0004
};

// Function Engine.Pawn.CalcFPSpectatorDrawOffset
// Flags: [ FUNC_Simulated ]
struct APawn_execCalcFPSpectatorDrawOffset_Parms
{
	struct FVector                                     VOffset;                                          		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    rRotation;                                        		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     vBobOffset;                                       		// 0x0018 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     DrawOffset;                                       		// 0x0030 ( 0x000C
};

// Function Engine.Pawn.CalcDrawOffset
// Flags: [ FUNC_Simulated ]
struct APawn_execCalcDrawOffset_Parms
{
	class AInventory*                                  Inv;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     DrawOffset;                                       		// 0x0010 ( 0x000C
};

// Function Engine.Pawn.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct APawn_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FName                                       Anim;                                             		// 0x000C ( 0x0004
	float                                              frame;                                            		// 0x0010 ( 0x0004
	float                                              Rate;                                             		// 0x0014 ( 0x0004
	struct FVector                                     camLoc;                                           		// 0x0018 ( 0x000C
	struct FVector                                     AxisX;                                            		// 0x0024 ( 0x000C
	struct FVector                                     AxisY;                                            		// 0x0030 ( 0x000C
	struct FVector                                     AxisZ;                                            		// 0x003C ( 0x000C
	struct FRotator                                    camRot;                                           		// 0x0048 ( 0x000C
	struct FString                                     t;                                                		// 0x0054 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.Pawn.ClimbLadder
// Flags: 
struct APawn_execClimbLadder_Parms
{
	class ALadderVolume*                               L;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.EndClimbLadder
// Flags: 
struct APawn_execEndClimbLadder_Parms
{
	class ALadderVolume*                               OldLadder;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.CanSplash
// Flags: [ FUNC_Simulated ]
struct APawn_execCanSplash_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SetSprinting
// Flags: [ FUNC_Event ]
struct APawn_eventSetSprinting_Parms
{
	unsigned long                                      bNewIsSprinting:1;                                		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.CanGrabLadder
// Flags: 
struct APawn_execCanGrabLadder_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.DropToGround
// Flags: 
struct APawn_execDropToGround_Parms
{
};

// Function Engine.Pawn.BecomeViewTarget
// Flags: 
struct APawn_execBecomeViewTarget_Parms
{
};

// Function Engine.Pawn.PointOfView
// Flags: [ FUNC_Simulated ]
struct APawn_execPointOfView_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.UnPossessed
// Flags: 
struct APawn_execUnPossessed_Parms
{
};

// Function Engine.Pawn.PossessedBy
// Flags: 
struct APawn_execPossessedBy_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ChangeInventoryByQSlot
// Flags: 
struct APawn_execChangeInventoryByQSlot_Parms
{
};

// Function Engine.Pawn.AddDefaultSkills
// Flags: 
struct APawn_execAddDefaultSkills_Parms
{
	unsigned long                                      bQuickslotChange:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.NotifyTeamChanged
// Flags: 
struct APawn_execNotifyTeamChanged_Parms
{
};

// Function Engine.Pawn.PerformDodge
// Flags: 
struct APawn_execPerformDodge_Parms
{
	unsigned char                                      DoubleClickMove;                                  		// 0x0000 ( 0x0001[ CPF_Parm ]
	struct FVector                                     Dir;                                              		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Cross;                                            		// 0x0010 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.DropFlag
// Flags: 
struct APawn_execDropFlag_Parms
{
	struct FString                                     sReason;                                          		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Pawn.HoldFlag
// Flags: 
struct APawn_execHoldFlag_Parms
{
	class AActor*                                      FlagActor;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.PlayTeleportEffect
// Flags: 
struct APawn_execPlayTeleportEffect_Parms
{
	unsigned long                                      bOut:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      bSound:1;                                         		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Pawn.GetHumanReadableName
// Flags: [ FUNC_Simulated ]
struct APawn_execGetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Pawn.SpectatorSpecialCalcView
// Flags: 
struct APawn_execSpectatorSpecialCalcView_Parms
{
	class APlayerController*                           Viewer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ViewActor;                                        		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CameraLocation;                                   		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SpecialCalcView
// Flags: 
struct APawn_execSpecialCalcView_Parms
{
	class AActor*                                      ViewActor;                                        		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CameraLocation;                                   		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SpecialDrawCrosshair
// Flags: [ FUNC_Simulated ]
struct APawn_execSpecialDrawCrosshair_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.DrawHUD
// Flags: 
struct APawn_execDrawHUD_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ModifyThreat
// Flags: 
struct APawn_execModifyThreat_Parms
{
	float                                              Current;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       Threat;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.NeedToTurn
// Flags: 
struct APawn_execNeedToTurn_Parms
{
	struct FVector                                     targ;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     LookDir;                                          		// 0x0010 ( 0x000C
//	struct FVector                                     AimDir;                                           		// 0x001C ( 0x000C
};

// Function Engine.Pawn.FireOnRelease
// Flags: 
struct APawn_execFireOnRelease_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.IsWeaponSingleFire
// Flags: 
struct APawn_execIsWeaponSingleFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.IsFiring
// Flags: 
struct APawn_execIsFiring_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.RefireRate
// Flags: 
struct APawn_execRefireRate_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.TooCloseToAttack
// Flags: 
struct APawn_execTooCloseToAttack_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.CanAttack
// Flags: 
struct APawn_execCanAttack_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.RecommendLongRangedAttack
// Flags: 
struct APawn_execRecommendLongRangedAttack_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.AltFire
// Flags: [ FUNC_Simulated ]
struct APawn_execAltFire_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.Fire
// Flags: [ FUNC_Simulated ]
struct APawn_execFire_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.StopWeaponFiring
// Flags: 
struct APawn_execStopWeaponFiring_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.ChooseFireAt
// Flags: 
struct APawn_execChooseFireAt_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.GetWeaponByInvenGroup
// Flags: 
struct APawn_execGetWeaponByInvenGroup_Parms
{
	int                                                nInvenGroupID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  i;                                                		// 0x0008 ( 0x0004
//	class AwWeapon*                                    W;                                                		// 0x000C ( 0x0004
};

// Function Engine.Pawn.HasWeaponByWeaponID
// Flags: 
struct APawn_execHasWeaponByWeaponID_Parms
{
	int                                                weaponID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  i;                                                		// 0x0008 ( 0x0004
//	class AwWeapon*                                    W;                                                		// 0x000C ( 0x0004
};

// Function Engine.Pawn.HasWeapon
// Flags: 
struct APawn_execHasWeapon_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.Reset
// Flags: 
struct APawn_execReset_Parms
{
};

// Function Engine.Pawn.PlayerChangedTeam
// Flags: 
struct APawn_execPlayerChangedTeam_Parms
{
};

// Function Engine.Pawn.GetPathTo
// Flags: 
struct APawn_execGetPathTo_Parms
{
	class AActor*                                      Dest;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.DeactivateSpawnProtection
// Flags: 
struct APawn_execDeactivateSpawnProtection_Parms
{
};

// Function Engine.Pawn.GetAimTarget
// Flags: 
struct APawn_execGetAimTarget_Parms
{
	class APawn*                                       ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.GetIsFiring
// Flags: [ FUNC_Simulated ]
struct APawn_execGetIsFiring_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SetBaseEyeheight
// Flags: [ FUNC_Simulated ]
struct APawn_execSetBaseEyeheight_Parms
{
};

// Function Engine.Pawn.GetDemoRecordingWeapon
// Flags: [ FUNC_Simulated ]
struct APawn_execGetDemoRecordingWeapon_Parms
{
	class AwWeapon*                                    ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Inv;                                              		// 0x0004 ( 0x0004
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Pawn.GetPostureIndex
// Flags: 
struct APawn_execGetPostureIndex_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SpawnMedals
// Flags: 
struct APawn_execSpawnMedals_Parms
{
};

// Function Engine.Pawn.SpawnSupplyItem
// Flags: 
struct APawn_execSpawnSupplyItem_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.MakeShellEffect_Rechamber
// Flags: [ FUNC_Simulated ]
struct APawn_execMakeShellEffect_Rechamber_Parms
{
};

// Function Engine.Pawn.MakeShellEffect
// Flags: [ FUNC_Simulated ]
struct APawn_execMakeShellEffect_Parms
{
};

// Function Engine.Pawn.ForcePlayIdle
// Flags: [ FUNC_Native ]
struct APawn_execForcePlayIdle_Parms
{
};

// Function Engine.Pawn.CheckProneRotate
// Flags: [ FUNC_Native ]
struct APawn_execCheckProneRotate_Parms
{
	int                                                CurYaw;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                NewYaw;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.RefreshCollisionHash
// Flags: [ FUNC_Native ]
struct APawn_execRefreshCollisionHash_Parms
{
};

// Function Engine.Pawn.ForceCrouch
// Flags: [ FUNC_Native ]
struct APawn_execForceCrouch_Parms
{
};

// Function Engine.Pawn.ReachedDestination
// Flags: [ FUNC_Native ]
struct APawn_execReachedDestination_Parms
{
	class AActor*                                      Goal;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.PostRender2D
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventPostRender2D_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ScreenLocX;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ScreenLocY;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x000C ( 0x0004
};

// Function Engine.Pawn.GetDetailOffset
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct APawn_execGetDetailOffset_Parms
{
	struct FVector                                     vLoc;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    rRot;                                             		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.AddNoWeaponChangeMessage
// Flags: [ FUNC_Simulated ]
struct APawn_execAddNoWeaponChangeMessage_Parms
{
	unsigned char                                      bySlot;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Pawn.SetHeadScale
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APawn_eventSetHeadScale_Parms
{
	float                                              NewScale;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.GetIsEnableProne
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct APawn_execGetIsEnableProne_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.Get4WayDirection
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct APawn_execGet4WayDirection_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pawn.SetTwistLook
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct APawn_execSetTwistLook_Parms
{
	int                                                twist;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                look;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.SetViewPitch
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct APawn_execSetViewPitch_Parms
{
	int                                                NewPitch;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.StaticPrecache
// Flags: 
struct APawn_execStaticPrecache_Parms
{
	class ALevelInfo*                                  L;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ServerStanceChanged
// Flags: 
struct APawn_execServerStanceChanged_Parms
{
	unsigned char                                      ss;                                               		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Pawn.ServerSetPlayerScoreInfo
// Flags: [ FUNC_Event ]
struct APawn_eventServerSetPlayerScoreInfo_Parms
{
	int                                                TeamIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Kills;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Assists;                                          		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                Deaths;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                EXPs;                                             		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                Points;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                Scores;                                           		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ClientSetPlayerScoreInfo
// Flags: [ FUNC_Event ]
struct APawn_eventClientSetPlayerScoreInfo_Parms
{
};

// Function Engine.Pawn.StorePlayerScoreInfo
// Flags: [ FUNC_Event ]
struct APawn_eventStorePlayerScoreInfo_Parms
{
};

// Function Engine.Pawn.ServerSetWeaponInfo
// Flags: [ FUNC_Event ]
struct APawn_eventServerSetWeaponInfo_Parms
{
	int                                                WeaponClassNumber;                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                WeaponAddPartsID;                                 		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                WeaponTotalAmmo;                                  		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                WeaponCurrentAmmo;                                		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.ClientSetWeaponInfo
// Flags: [ FUNC_Event ]
struct APawn_eventClientSetWeaponInfo_Parms
{
};

// Function Engine.Pawn.StoreWeaponInfo
// Flags: [ FUNC_Event ]
struct APawn_eventStoreWeaponInfo_Parms
{
};

// Function Engine.Pawn.PlayEquipHitSound
// Flags: [ FUNC_Simulated ]
struct APawn_execPlayEquipHitSound_Parms
{
};

// Function Engine.Pawn.PlayBreathSounds
// Flags: [ FUNC_Simulated ]
struct APawn_execPlayBreathSounds_Parms
{
};

// Function Engine.Pawn.PlayBreathSound
// Flags: [ FUNC_Simulated ]
struct APawn_execPlayBreathSound_Parms
{
};

// Function Engine.Pawn.FootStepping
// Flags: [ FUNC_Simulated ]
struct APawn_execFootStepping_Parms
{
	int                                                side;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pawn.CanSee
// Flags: [ FUNC_Native ]
struct APawn_execCanSee_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Pawn.IsNetReady
// Flags: [ FUNC_Native ]
struct APawn_execIsNetReady_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Pawn.CheckRelevantTimeOut
// Flags: [ FUNC_Native ]
struct APawn_execCheckRelevantTimeOut_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Pawn.HasChannel
// Flags: [ FUNC_Native ]
struct APawn_execHasChannel_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Pawn.ServerStopLoopSoundByActor
// Flags: 
struct APawn_execServerStopLoopSoundByActor_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Pawn.ServerStopAllSoundByActor
// Flags: 
struct APawn_execServerStopAllSoundByActor_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
	class AController*                                 NextC;                                            		// 0x0004 ( 0x0004
};

// Function Engine.Pawn.ServerPlaySound
// Flags: 
struct APawn_execServerPlaySound_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Pawn.OnReachedDestination
// Flags: 
struct APawn_execOnReachedDestination_Parms
{
	struct FVector                                     Dir;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      GoalActor;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StaticMeshActor.PreBeginPlay
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AStaticMeshActor_eventPreBeginPlay_Parms
{
};

// Function Engine.AnimNotify_Scripted.Notify
// Flags: [ FUNC_Event ]
struct UAnimNotify_Scripted_eventNotify_Parms
{
	class AActor*                                      Owner;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Security.ClientMessage
// Flags: [ FUNC_Simulated ]
struct ASecurity_execClientMessage_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Security.BadClient
// Flags: 
struct ASecurity_execBadClient_Parms
{
	int                                                Code;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Data;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Security.Perform
// Flags: 
struct ASecurity_execPerform_Parms
{
	int                                                SecType;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Param1;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param2;                                           		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              TimeOut;                                          		// 0x001C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Security.ServerCallback
// Flags: [ FUNC_Event ]
struct ASecurity_eventServerCallback_Parms
{
	int                                                SecType;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Data;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Security.ClientPerform
// Flags: [ FUNC_Simulated ]
struct ASecurity_execClientPerform_Parms
{
	int                                                SecType;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Param1;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param2;                                           		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Security.LocalPerform
// Flags: [ FUNC_Native ]
struct ASecurity_execLocalPerform_Parms
{
	int                                                SecType;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Param1;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param2;                                           		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Results;                                          		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.Security.NativePerform
// Flags: [ FUNC_Native ]
struct ASecurity_execNativePerform_Parms
{
	int                                                SecType;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Param1;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param2;                                           		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.ScriptedTexture.DrawPortal
// Flags: [ FUNC_Final | FUNC_Native ]
struct UScriptedTexture_execDrawPortal_Parms
{
	int                                                X;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                width;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                Height;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	class AActor*                                      CamActor;                                         		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FVector                                     CamLocation;                                      		// 0x0014 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    CamRotation;                                      		// 0x0020 ( 0x000C[ CPF_Parm ]
	int                                                FOV;                                              		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ClearZ:1;                                         		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.ScriptedTexture.DrawTile
// Flags: [ FUNC_Final | FUNC_Native ]
struct UScriptedTexture_execDrawTile_Parms
{
	float                                              X;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              U;                                                		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              V;                                                		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              UL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              VL;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	class UMaterial*                                   Material;                                         		// 0x0020 ( 0x0004[ CPF_Parm ]
	class FColor                                       Color;                                            		// 0x0024 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ScriptedTexture.TextSize
// Flags: [ FUNC_Final | FUNC_Native ]
struct UScriptedTexture_execTextSize_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	class UFont*                                       Font;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                width;                                            		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                Height;                                           		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.ScriptedTexture.DrawText
// Flags: [ FUNC_Final | FUNC_Native ]
struct UScriptedTexture_execDrawText_Parms
{
	int                                                StartX;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                StartY;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	class UFont*                                       Font;                                             		// 0x0014 ( 0x0004[ CPF_Parm ]
	class FColor                                       Color;                                            		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ScriptedTexture.SetSize
// Flags: [ FUNC_Final | FUNC_Native ]
struct UScriptedTexture_execSetSize_Parms
{
	int                                                width;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Height;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.BtrTraceResult.clearResultArray
// Flags: [ FUNC_Event ]
struct UBtrTraceResult_eventclearResultArray_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.BtrTraceResult.getResult
// Flags: [ FUNC_Event ]
struct UBtrTraceResult_eventgetResult_Parms
{
	struct FResultData                                 Data;                                             		// 0x0000 ( 0x0024[ CPF_Parm | CPF_OutParm ]
	int                                                Index;                                            		// 0x0024 ( 0x0004[ CPF_Parm ]
};

// Function Engine.BtrTraceResult.addResult
// Flags: [ FUNC_Native ]
struct UBtrTraceResult_execaddResult_Parms
{
	struct FResultData                                 Data;                                             		// 0x0000 ( 0x0024[ CPF_Parm ]
};

// Function Engine.SceneManager.SceneEnded
// Flags: [ FUNC_Event ]
struct ASceneManager_eventSceneEnded_Parms
{
};

// Function Engine.SceneManager.SceneStarted
// Flags: [ FUNC_Event ]
struct ASceneManager_eventSceneStarted_Parms
{
	class AController*                                 P;                                                		// 0x0000 ( 0x0004
	class AAIScript*                                   S;                                                		// 0x0004 ( 0x0004
};

// Function Engine.SceneManager.Trigger
// Flags: 
struct ASceneManager_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SceneManager.BeginPlay
// Flags: [ FUNC_Simulated ]
struct ASceneManager_execBeginPlay_Parms
{
};

// Function Engine.SceneManager.AbortScene
// Flags: [ FUNC_Native ]
struct ASceneManager_execAbortScene_Parms
{
};

// Function Engine.SceneManager.GetTotalSceneTime
// Flags: [ FUNC_Native ]
struct ASceneManager_execGetTotalSceneTime_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Projector.UpdateSunLight
// Flags: [ FUNC_Event ]
struct AProjector_eventUpdateSunLight_Parms
{
	struct FVector                                     SunDir;                                           		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Projector.LightUpdate
// Flags: [ FUNC_Event ]
struct AProjector_eventLightUpdate_Parms
{
	class TArray< class AActor* >                      LightSources;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Projector.UnTouch
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AProjector_eventUnTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Projector.Touch
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AProjector_eventTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Projector.PostBeginPlay
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AProjector_eventPostBeginPlay_Parms
{
};

// Function Engine.Projector.DetachActor
// Flags: [ FUNC_Native ]
struct AProjector_execDetachActor_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Projector.AttachActor
// Flags: [ FUNC_Native ]
struct AProjector_execAttachActor_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Projector.AbandonProjector
// Flags: [ FUNC_Native ]
struct AProjector_execAbandonProjector_Parms
{
	float                                              Lifetime;                                         		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Projector.DetachProjector
// Flags: [ FUNC_Native ]
struct AProjector_execDetachProjector_Parms
{
	unsigned long                                      Force:1;                                          		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Projector.AttachProjector
// Flags: [ FUNC_Native ]
struct AProjector_execAttachProjector_Parms
{
	float                                              FadeInTime;                                       		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.FinalEffect.FadeToColor
// Flags: 
struct UFinalEffect_execFadeToColor_Parms
{
	float                                              inFadeTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.FinalEffect.FadeToBlackWhite
// Flags: 
struct UFinalEffect_execFadeToBlackWhite_Parms
{
	float                                              inFadeTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.FinalEffect.InitNewPresets
// Flags: 
struct UFinalEffect_execInitNewPresets_Parms
{
	struct FColorPreset                                tmPreset;                                         		// 0x0000 ( 0x0040[ CPF_NeedCtorLink ]
	unsigned long                                      bEnd:1;                                           		// 0x0040 ( 0x0004 [0x00000001]
};

// Function Engine.FinalEffect.InitPresets
// Flags: [ FUNC_Event ]
struct UFinalEffect_eventInitPresets_Parms
{
};

// Function Engine.PlayInfo.SplitStringToArray
// Flags: [ FUNC_Final ]
struct UPlayInfo_execSplitStringToArray_Parms
{
	class TArray< struct FString >                     Parts;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     Source;                                           		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Delim;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayInfo.GetGameInfo
// Flags: [ FUNC_Final ]
struct UPlayInfo_execGetGameInfo_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.PlayInfo.Init
// Flags: [ FUNC_Final ]
struct UPlayInfo_execInit_Parms
{
	class TArray< class UClass* >                      Classes;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bStrict:1;                                        		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	int                                                j;                                                		// 0x0018 ( 0x0004
//	unsigned long                                      B:1;                                              		// 0x001C ( 0x0004 [0x00000001]
};

// Function Engine.PlayInfo.Dump
// Flags: [ FUNC_Final ]
struct UPlayInfo_execDump_Parms
{
	struct FString                                     Group;                                            		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.PlayInfo.Sort
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002C5 ( 709 )
struct UPlayInfo_execSort_Parms
{
	unsigned char                                      SortingMethod;                                    		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayInfo.FindIndex
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002C4 ( 708 )
struct UPlayInfo_execFindIndex_Parms
{
	struct FString                                     SettingName;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayInfo.GetSettings
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002C3 ( 707 )
struct UPlayInfo_execGetSettings_Parms
{
	struct FString                                     GroupName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FPlayInfoData >               GroupSettings;                                    		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayInfo.StoreSetting
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002C2 ( 706 )
struct UPlayInfo_execStoreSetting_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     NewVal;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FString                                     RangeData;                                        		// 0x0010 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayInfo.SaveSettings
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002C1 ( 705 )
struct UPlayInfo_execSaveSettings_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayInfo.AddSetting
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002C0 ( 704 )
struct UPlayInfo_execAddSetting_Parms
{
	struct FString                                     Group;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PropertyName;                                     		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Description;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      SecLevel;                                         		// 0x0024 ( 0x0001[ CPF_Parm ]
	unsigned char                                      Weight;                                           		// 0x0025 ( 0x0001[ CPF_Parm ]
	struct FString                                     RenderType;                                       		// 0x0028 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Extras;                                           		// 0x0034 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ExtraPrivs;                                       		// 0x0040 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bMultiPlayerOnly:1;                               		// 0x004C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bAdvanced:1;                                      		// 0x0050 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0054 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayInfo.PopClass
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002BF ( 703 )
struct UPlayInfo_execPopClass_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayInfo.RemoveClass
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002BE ( 702 )
struct UPlayInfo_execRemoveClass_Parms
{
	class UClass*                                      RemovingClass;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayInfo.AddClass
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002BD ( 701 )
struct UPlayInfo_execAddClass_Parms
{
	class UClass*                                      AddingClass;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayInfo.Clear
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000002BC ( 700 )
struct UPlayInfo_execClear_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Emitter.Reset
// Flags: [ FUNC_Simulated ]
struct AEmitter_execReset_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Emitter.SpawnParticle
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AEmitter_eventSpawnParticle_Parms
{
	int                                                Amount;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Emitter.Trigger
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AEmitter_eventTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Emitter.UpdatePrecacheMaterials
// Flags: [ FUNC_Simulated ]
struct AEmitter_execUpdatePrecacheMaterials_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Emitter.SetFadeOutTime
// Flags: [ FUNC_Simulated ]
struct AEmitter_execSetFadeOutTime_Parms
{
	float                                              fTotal;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fFadeOutGap;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Emitter.Kill
// Flags: [ FUNC_Native ]
struct AEmitter_execKill_Parms
{
};

// Function Engine.Mover.UpdatePrecacheStaticMeshes
// Flags: [ FUNC_Simulated ]
struct AMover_execUpdatePrecacheStaticMeshes_Parms
{
};

// Function Engine.Mover.BaseFinished
// Flags: 
struct AMover_execBaseFinished_Parms
{
};

// Function Engine.Mover.BaseStarted
// Flags: 
struct AMover_execBaseStarted_Parms
{
};

// Function Engine.Mover.MoverLooped
// Flags: 
struct AMover_execMoverLooped_Parms
{
};

// Function Engine.Mover.SetStoppedPosition
// Flags: 
struct AMover_execSetStoppedPosition_Parms
{
	unsigned char                                      NewPos;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Mover.EnableTrigger
// Flags: 
struct AMover_execEnableTrigger_Parms
{
};

// Function Engine.Mover.DisableTrigger
// Flags: 
struct AMover_execDisableTrigger_Parms
{
};

// Function Engine.Mover.TakeDamage
// Flags: 
struct AMover_execTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Mover.Bump
// Flags: 
struct AMover_execBump_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Mover.EncroachingOn
// Flags: 
struct AMover_execEncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APawn*                                       P;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Mover.MakeGroupReturn
// Flags: 
struct AMover_execMakeGroupReturn_Parms
{
};

// Function Engine.Mover.MakeGroupStop
// Flags: 
struct AMover_execMakeGroupStop_Parms
{
};

// Function Engine.Mover.Reset
// Flags: 
struct AMover_execReset_Parms
{
};

// Function Engine.Mover.SetResetStatus
// Flags: 
struct AMover_execSetResetStatus_Parms
{
	unsigned long                                      bNewStatus:1;                                     		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Mover.PostBeginPlay
// Flags: 
struct AMover_execPostBeginPlay_Parms
{
	class AMover*                                      M;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Mover.BeginPlay
// Flags: [ FUNC_Simulated ]
struct AMover_execBeginPlay_Parms
{
	class AAntiPortalActor*                            AntiPortalA;                                      		// 0x0000 ( 0x0004
};

// Function Engine.Mover.DoClose
// Flags: 
struct AMover_execDoClose_Parms
{
};

// Function Engine.Mover.DoOpen
// Flags: 
struct AMover_execDoOpen_Parms
{
};

// Function Engine.Mover.FinishedOpening
// Flags: 
struct AMover_execFinishedOpening_Parms
{
};

// Function Engine.Mover.FinishedClosing
// Flags: 
struct AMover_execFinishedClosing_Parms
{
	class AMover*                                      M;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Mover.FinishNotify
// Flags: 
struct AMover_execFinishNotify_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Mover.KeyFrameReached
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AMover_eventKeyFrameReached_Parms
{
	unsigned char                                      OldKeyNum;                                        		// 0x0000 ( 0x0001
	class AMover*                                      M;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Mover.SetKeyframe
// Flags: [ FUNC_Final ]
struct AMover_execSetKeyframe_Parms
{
	unsigned char                                      NewKeyNum;                                        		// 0x0000 ( 0x0001[ CPF_Parm ]
	struct FVector                                     NewLocation;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    NewRotation;                                      		// 0x0010 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Mover.InterpolateTo
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct AMover_execInterpolateTo_Parms
{
	unsigned char                                      NewKeyNum;                                        		// 0x0000 ( 0x0001[ CPF_Parm ]
	float                                              Seconds;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AMover*                                      M;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Mover.Timer
// Flags: [ FUNC_Simulated ]
struct AMover_execTimer_Parms
{
};

// Function Engine.Mover.StartInterpolation
// Flags: [ FUNC_Simulated ]
struct AMover_execStartInterpolation_Parms
{
};

// Function Engine.Mover.SpecialHandling
// Flags: 
struct AMover_execSpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AActor*                                      A;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Mover.SelfTriggered
// Flags: 
struct AMover_execSelfTriggered_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Modifier.Trigger
// Flags: 
struct UModifier_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Modifier.Reset
// Flags: 
struct UModifier_execReset_Parms
{
};

// Function Engine.MaterialSequence.Trigger
// Flags: 
struct UMaterialSequence_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.MaterialSequence.Reset
// Flags: 
struct UMaterialSequence_execReset_Parms
{
};

// Function Engine.MaterialSwitch.Trigger
// Flags: 
struct UMaterialSwitch_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.MaterialSwitch.Reset
// Flags: 
struct UMaterialSwitch_execReset_Parms
{
};

// Function Engine.TexOscillatorTriggered.Reset
// Flags: 
struct UTexOscillatorTriggered_execReset_Parms
{
};

// Function Engine.TexOscillatorTriggered.Trigger
// Flags: 
struct UTexOscillatorTriggered_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.TexPannerTriggered.Reset
// Flags: 
struct UTexPannerTriggered_execReset_Parms
{
};

// Function Engine.TexPannerTriggered.Trigger
// Flags: 
struct UTexPannerTriggered_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.DecalShader.Trigger
// Flags: 
struct UDecalShader_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.DecalShader.Reset
// Flags: 
struct UDecalShader_execReset_Parms
{
};

// Function Engine.BlendShader.Trigger
// Flags: 
struct UBlendShader_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.BlendShader.Reset
// Flags: 
struct UBlendShader_execReset_Parms
{
};

// Function Engine.Shader.Trigger
// Flags: 
struct UShader_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Shader.Reset
// Flags: 
struct UShader_execReset_Parms
{
};

// Function Engine.InteractionMaster.EnableInteractions
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventEnableInteractions_Parms
{
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Index;                                            		// 0x000C ( 0x0004
};

// Function Engine.InteractionMaster.DisableInteractions
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventDisableInteractions_Parms
{
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Index;                                            		// 0x000C ( 0x0004
};

// Function Engine.InteractionMaster.NotifyLevelChange
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventNotifyLevelChange_Parms
{
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Index;                                            		// 0x000C ( 0x0004
};

// Function Engine.InteractionMaster.Process_Message
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventProcess_Message_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	float                                              MsgLife;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Index;                                            		// 0x001C ( 0x0004
};

// Function Engine.InteractionMaster.Process_Tick
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventProcess_Tick_Parms
{
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              DeltaTime;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Index;                                            		// 0x0010 ( 0x0004
};

// Function Engine.InteractionMaster.Process_PostRender
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventProcess_PostRender_Parms
{
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UCanvas*                                     Canvas;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Index;                                            		// 0x0010 ( 0x0004
};

// Function Engine.InteractionMaster.Process_PreRender
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventProcess_PreRender_Parms
{
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UCanvas*                                     Canvas;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Index;                                            		// 0x0010 ( 0x0004
};

// Function Engine.InteractionMaster.Process_KeyEvent
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventProcess_KeyEvent_Parms
{
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      key;                                              		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm ]
	unsigned char                                      Action;                                           		// 0x000D ( 0x0001[ CPF_Parm | CPF_OutParm ]
	float                                              Delta;                                            		// 0x0010 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Index;                                            		// 0x0018 ( 0x0004
};

// Function Engine.InteractionMaster.Process_KeyType
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventProcess_KeyType_Parms
{
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      key;                                              		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm ]
	struct FString                                     Unicode;                                          		// 0x0010 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Index;                                            		// 0x0020 ( 0x0004
};

// Function Engine.InteractionMaster.SetFocusTo
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventSetFocusTo_Parms
{
	class UInteraction*                                Inter;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UPlayer*                                     ViewportOwner;                                    		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class TArray< class UInteraction* >                InteractionArray;                                 		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	class UInteraction*                                temp;                                             		// 0x0014 ( 0x0004
	int                                                i;                                                		// 0x0018 ( 0x0004
	int                                                iIndex;                                           		// 0x001C ( 0x0004
};

// Function Engine.InteractionMaster.RemoveInteraction
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventRemoveInteraction_Parms
{
	class UInteraction*                                RemoveMe;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Index;                                            		// 0x0004 ( 0x0004
};

// Function Engine.InteractionMaster.AddInteraction
// Flags: [ FUNC_Event ]
struct UInteractionMaster_eventAddInteraction_Parms
{
	struct FString                                     InteractionName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UPlayer*                                     AttachTo;                                         		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UInteraction*                                ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UInteraction*                                NewInteraction;                                   		// 0x0014 ( 0x0004
//	class UClass*                                      NewInteractionClass;                              		// 0x0018 ( 0x0004
};

// Function Engine.InteractionMaster.Travel
// Flags: [ FUNC_Native ]
struct UInteractionMaster_execTravel_Parms
{
	struct FString                                     URL;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.BaseGUIController.SetTime
// Flags: 
struct UBaseGUIController_execSetTime_Parms
{
	int                                                newTime;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.BaseGUIController.NeedToOffIME
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventNeedToOffIME_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BaseGUIController.SetRequiredGameResolution
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventSetRequiredGameResolution_Parms
{
	struct FString                                     GameRes;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.BaseGUIController.NeedsMenuResolution
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventNeedsMenuResolution_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BaseGUIController.InitializeController
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventInitializeController_Parms
{
};

// Function Engine.BaseGUIController.SetControllerStatus
// Flags: 
struct UBaseGUIController_execSetControllerStatus_Parms
{
	unsigned long                                      On:1;                                             		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.BaseGUIController.ClickCloseWndBtn
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventClickCloseWndBtn_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BaseGUIController.CloseAll
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventCloseAll_Parms
{
	unsigned long                                      bCancel:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      bForced:1;                                        		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.BaseGUIController.CloseMenu
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventCloseMenu_Parms
{
	unsigned long                                      bCanceled:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BaseGUIController.ReplaceMenu
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventReplaceMenu_Parms
{
	struct FString                                     NewMenuName;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param1;                                           		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param2;                                           		// 0x0018 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bCancelled:1;                                     		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BaseGUIController.AutoLoadMenus
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventAutoLoadMenus_Parms
{
};

// Function Engine.BaseGUIController.OpenMenu
// Flags: [ FUNC_Event ]
struct UBaseGUIController_eventOpenMenu_Parms
{
	struct FString                                     NewMenuName;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param1;                                           		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param2;                                           		// 0x0018 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BaseGUIController.OnAdminReply
// Flags: 
struct UBaseGUIController_execOnAdminReply_Parms
{
	struct FString                                     Reply;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Console.NeedToOffIME
// Flags: [ FUNC_Event ]
struct UConsole_eventNeedToOffIME_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Console.IsInputTimeTooIdle
// Flags: 
struct UConsole_execIsInputTimeTooIdle_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Console.IsBGMPlaying
// Flags: 
struct UConsole_execIsBGMPlaying_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Console.SetTermBetweenBGM
// Flags: 
struct UConsole_execSetTermBetweenBGM_Parms
{
	float                                              val;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Console.UpdateBGM
// Flags: 
struct UConsole_execUpdateBGM_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Console.NextBGM
// Flags: 
struct UConsole_execNextBGM_Parms
{
};

// Function Engine.Console.SetBGMAdvanced
// Flags: 
struct UConsole_execSetBGMAdvanced_Parms
{
	class TArray< struct FString >                     List;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      partialPlay:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                partialDuration;                                  		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class TArray< struct FIntArray >                   initialSeeks;                                     		// 0x0014 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Console.SetBGM
// Flags: 
struct UConsole_execSetBGM_Parms
{
	class TArray< struct FString >                     List;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Console.SetOneBGM
// Flags: 
struct UConsole_execSetOneBGM_Parms
{
	struct FString                                     List;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Console.SetOneChangeIgnore
// Flags: 
struct UConsole_execSetOneChangeIgnore_Parms
{
};

// Function Engine.Console.StopBGM
// Flags: 
struct UConsole_execStopBGM_Parms
{
};

// Function Engine.Console.GetCurrentBGM
// Flags: 
struct UConsole_execGetCurrentBGM_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Console.ClearMessageItems
// Flags: 
struct UConsole_execClearMessageItems_Parms
{
};

// Function Engine.Console.AddMessageItem
// Flags: 
struct UConsole_execAddMessageItem_Parms
{
	struct FMessageItem                                Item;                                             		// 0x0000 ( 0x0020[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Console.ConstructMessageItem
// Flags: 
struct UConsole_execConstructMessageItem_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      MessageType;                                      		// 0x000C ( 0x0001[ CPF_Parm ]
	struct FMessageItem                                ReturnValue;                                      		// 0x0010 ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Console.SetInitialMusic
// Flags: 
struct UConsole_execSetInitialMusic_Parms
{
	struct FString                                     NewSong;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Console.SetMusic
// Flags: 
struct UConsole_execSetMusic_Parms
{
	struct FString                                     NewSong;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Console.ConnectFailure
// Flags: [ FUNC_Event ]
struct UConsole_eventConnectFailure_Parms
{
	struct FString                                     FailCode;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     URL;                                              		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Console.Tick
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct UConsole_eventTick_Parms
{
	float                                              Delta;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Console.TypingClose
// Flags: 
struct UConsole_execTypingClose_Parms
{
};

// Function Engine.Console.TypingOpen
// Flags: 
struct UConsole_execTypingOpen_Parms
{
};

// Function Engine.Console.KeyEvent
// Flags: [ FUNC_Event ]
struct UConsole_eventKeyEvent_Parms
{
	unsigned char                                      key;                                              		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned char                                      Action;                                           		// 0x0001 ( 0x0001[ CPF_Parm ]
	float                                              Delta;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Console.ProcessCheat
// Flags: 
struct UConsole_execProcessCheat_Parms
{
	unsigned char                                      key;                                              		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned char                                      Action;                                           		// 0x0001 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Console.HasCheat
// Flags: 
struct UConsole_execHasCheat_Parms
{
	struct FString                                     str;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Console.Message
// Flags: [ FUNC_Event ]
struct UConsole_eventMessage_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	float                                              MsgLife;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Console.Chat
// Flags: 
struct UConsole_execChat_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	float                                              MsgLife;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Console.DelayedConsoleCommand
// Flags: 
struct UConsole_execDelayedConsoleCommand_Parms
{
	struct FString                                     Command;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Console.NotifyLevelChange
// Flags: [ FUNC_Event ]
struct UConsole_eventNotifyLevelChange_Parms
{
};

// Function Engine.Console.StopRollingDemo
// Flags: [ FUNC_Exec ]
struct UConsole_execStopRollingDemo_Parms
{
};

// Function Engine.Console.StartRollingDemo
// Flags: [ FUNC_Exec ]
struct UConsole_execStartRollingDemo_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                tryCount;                                         		// 0x0004 ( 0x0004
};

// Function Engine.Console.ConsoleToggle
// Flags: [ FUNC_Exec ]
struct UConsole_execConsoleToggle_Parms
{
};

// Function Engine.Console.ConsoleClose
// Flags: [ FUNC_Exec ]
struct UConsole_execConsoleClose_Parms
{
};

// Function Engine.Console.ConsoleOpen
// Flags: [ FUNC_Exec ]
struct UConsole_execConsoleOpen_Parms
{
};

// Function Engine.Console.TeamTalk
// Flags: [ FUNC_Exec ]
struct UConsole_execTeamTalk_Parms
{
};

// Function Engine.Console.Talk
// Flags: [ FUNC_Exec ]
struct UConsole_execTalk_Parms
{
};

// Function Engine.Console.Type
// Flags: [ FUNC_Exec ]
struct UConsole_execType_Parms
{
};

// Function Engine.Console.UnPressButtons
// Flags: 
struct UConsole_execUnPressButtons_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.Console.NativeConsoleOpen
// Flags: [ FUNC_Event ]
struct UConsole_eventNativeConsoleOpen_Parms
{
};

// Function Engine.Console.ViewportInitialized
// Flags: [ FUNC_Event ]
struct UConsole_eventViewportInitialized_Parms
{
};

// Function Engine.Console.Initialized
// Flags: [ FUNC_Event ]
struct UConsole_eventInitialized_Parms
{
};

// Function Engine.Console.RecordOn_Exception
// Flags: 
struct UConsole_execRecordOn_Exception_Parms
{
	int                                                retCode;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.MaplistManagerBase.GetCacheMapList
// Flags: 
struct AMaplistManagerBase_execGetCacheMapList_Parms
{
	struct FString                                     Acronym;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManagerBase.FindCacheGameIndex
// Flags: 
struct AMaplistManagerBase_execFindCacheGameIndex_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.ShiftMap
// Flags: 
struct AMaplistManagerBase_execShiftMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Count;                                            		// 0x0014 ( 0x0004[ CPF_Parm ]
};

// Function Engine.MaplistManagerBase.SaveMapList
// Flags: 
struct AMaplistManagerBase_execSaveMapList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.SaveGame
// Flags: 
struct AMaplistManagerBase_execSaveGame_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.MapChange
// Flags: 
struct AMaplistManagerBase_execMapChange_Parms
{
	struct FString                                     NewMapName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManagerBase.ApplyMapList
// Flags: 
struct AMaplistManagerBase_execApplyMapList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.GetActiveMap
// Flags: 
struct AMaplistManagerBase_execGetActiveMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.SetActiveList
// Flags: 
struct AMaplistManagerBase_execSetActiveList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                NewActive;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.GetActiveList
// Flags: 
struct AMaplistManagerBase_execGetActiveList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.GetMapList
// Flags: 
struct AMaplistManagerBase_execGetMapList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManagerBase.GetCurrentMapRotation
// Flags: 
struct AMaplistManagerBase_execGetCurrentMapRotation_Parms
{
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManagerBase.GetMapListNames
// Flags: 
struct AMaplistManagerBase_execGetMapListNames_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManagerBase.GetMapListTitle
// Flags: 
struct AMaplistManagerBase_execGetMapListTitle_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManagerBase.GetRecordIndex
// Flags: 
struct AMaplistManagerBase_execGetRecordIndex_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapListName;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.GetMapIndex
// Flags: 
struct AMaplistManagerBase_execGetMapIndex_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.GetGameIndex
// Flags: 
struct AMaplistManagerBase_execGetGameIndex_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.RemoveMap
// Flags: 
struct AMaplistManagerBase_execRemoveMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                MapIndex;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.AddMap
// Flags: 
struct AMaplistManagerBase_execAddMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.ClearList
// Flags: 
struct AMaplistManagerBase_execClearList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.RenameList
// Flags: 
struct AMaplistManagerBase_execRenameList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     NewName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.ResetList
// Flags: 
struct AMaplistManagerBase_execResetList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.MaplistManagerBase.ResetGame
// Flags: 
struct AMaplistManagerBase_execResetGame_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.MaplistManagerBase.RemoveList
// Flags: 
struct AMaplistManagerBase_execRemoveList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.AddList
// Flags: 
struct AMaplistManagerBase_execAddList_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     NewName;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Maps;                                             		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.ValidGameIndex
// Flags: 
struct AMaplistManagerBase_execValidGameIndex_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.ValidCacheGameIndex
// Flags: 
struct AMaplistManagerBase_execValidCacheGameIndex_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.ValidName
// Flags: 
struct AMaplistManagerBase_execValidName_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManagerBase.ValidGameType
// Flags: 
struct AMaplistManagerBase_execValidGameType_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.FluidSurfaceInfo.Touch
// Flags: [ FUNC_Simulated ]
struct AFluidSurfaceInfo_execTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     touchLocation;                                    		// 0x0004 ( 0x000C
};

// Function Engine.FluidSurfaceInfo.TakeDamage
// Flags: [ FUNC_Simulated ]
struct AFluidSurfaceInfo_execTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.FluidSurfaceInfo.Pling
// Flags: [ FUNC_Final | FUNC_Native ]
struct AFluidSurfaceInfo_execPling_Parms
{
	struct FVector                                     Position;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              Strength;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.AdminBase.SplitParams
// Flags: 
struct UAdminBase_execSplitParams_Parms
{
	struct FString                                     params;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FString >                     Splitted;                                         		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     Delim;                                            		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                P;                                                		// 0x0030 ( 0x0004
//	int                                                Start;                                            		// 0x0034 ( 0x0004
};

// Function Engine.AdminBase.IsNumeric
// Flags: 
struct UAdminBase_execIsNumeric_Parms
{
	struct FString                                     Param;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bPositiveOnly:1;                                  		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                P;                                                		// 0x0014 ( 0x0004
};

// Function Engine.AdminBase.MaskedCompare
// Flags: 
struct UAdminBase_execMaskedCompare_Parms
{
	struct FString                                     SettingName;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Mask;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bMaskLeft:1;                                      		// 0x001C ( 0x0004 [0x00000001]
//	unsigned long                                      bMaskRight:1;                                     		// 0x0020 ( 0x0004 [0x00000001]
//	int                                                MaskLen;                                          		// 0x0024 ( 0x0004
};

// Function Engine.AdminBase.SendComplexMsg
// Flags: 
struct UAdminBase_execSendComplexMsg_Parms
{
	class TArray< struct FString >                     Arr;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Title;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0018 ( 0x0004
	int                                                Longest;                                          		// 0x001C ( 0x0004
	struct FString                                     Line;                                             		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Border;                                           		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Prefix;                                           		// 0x0038 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Suffix;                                           		// 0x0044 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.FindGameType
// Flags: 
struct UAdminBase_execFindGameType_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	class TArray< struct FGameRecord >                 Records;                                          		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.CanPerform
// Flags: 
struct UAdminBase_execCanPerform_Parms
{
	struct FString                                     priv;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AdminBase.Switch
// Flags: [ FUNC_Exec ]
struct UAdminBase_execSwitch_Parms
{
	struct FString                                     URL;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.MapList
// Flags: [ FUNC_Exec ]
struct UAdminBase_execMapList_Parms
{
	struct FString                                     Cmd;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Extra;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.Map
// Flags: [ FUNC_Exec ]
struct UAdminBase_execMap_Parms
{
	struct FString                                     Cmd;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.NextMap
// Flags: [ FUNC_Exec ]
struct UAdminBase_execNextMap_Parms
{
};

// Function Engine.AdminBase.RestartMap
// Flags: [ FUNC_Exec ]
struct UAdminBase_execRestartMap_Parms
{
};

// Function Engine.AdminBase.KickBan
// Flags: [ FUNC_Exec ]
struct UAdminBase_execKickBan_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.Kick
// Flags: [ FUNC_Exec ]
struct UAdminBase_execKick_Parms
{
	struct FString                                     Cmd;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Extra;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     params;                                           		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< class APlayerReplicationInfo* >      AllPRI;                                           		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	class AController*                                 C;                                                		// 0x0030 ( 0x0004
	class AController*                                 NextC;                                            		// 0x0034 ( 0x0004
	int                                                i;                                                		// 0x0038 ( 0x0004
};

// Function Engine.AdminBase.PlayerList
// Flags: [ FUNC_Exec ]
struct UAdminBase_execPlayerList_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004
};

// Function Engine.AdminBase.RestartCurrentMap
// Flags: 
struct UAdminBase_execRestartCurrentMap_Parms
{
};

// Function Engine.AdminBase.MaplistCommand
// Flags: 
struct UAdminBase_execMaplistCommand_Parms
{
	struct FString                                     Cmd;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Extra;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Values;                                           		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     str;                                              		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0030 ( 0x0004
	int                                                C;                                                		// 0x0034 ( 0x0004
};

// Function Engine.AdminBase.GetMapListNames
// Flags: 
struct UAdminBase_execGetMapListNames_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	class TArray< struct FString >                     AR;                                               		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.ShowCurrentMapList
// Flags: 
struct UAdminBase_execShowCurrentMapList_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                C;                                                		// 0x0004 ( 0x0004
	class TArray< struct FString >                     AR;                                               		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.GoToNextMap
// Flags: 
struct UAdminBase_execGoToNextMap_Parms
{
};

// Function Engine.AdminBase.DoSwitch
// Flags: 
struct UAdminBase_execDoSwitch_Parms
{
	struct FString                                     URL;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.DoLogout
// Flags: 
struct UAdminBase_execDoLogout_Parms
{
};

// Function Engine.AdminBase.DoLogin
// Flags: 
struct UAdminBase_execDoLogin_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Password;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.AdminBase.Created
// Flags: 
struct UAdminBase_execCreated_Parms
{
};

// Function Engine.PlayerInput.CheckForDoubleClickMove
// Flags: 
struct UPlayerInput_execCheckForDoubleClickMove_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      ReturnValue;                                      		// 0x0004 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      DoubleClickMove;                                  		// 0x0005 ( 0x0001
//	unsigned char                                      OldDoubleClick;                                   		// 0x0006 ( 0x0001
};

// Function Engine.PlayerInput.ChangeSnapView
// Flags: 
struct UPlayerInput_execChangeSnapView_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerInput.InvertMouse
// Flags: 
struct UPlayerInput_execInvertMouse_Parms
{
	struct FString                                     Invert;                                           		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerInput.UpdateSmoothing
// Flags: 
struct UPlayerInput_execUpdateSmoothing_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerInput.UpdateAccel
// Flags: 
struct UPlayerInput_execUpdateAccel_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerInput.UpdateSensitivityForAim
// Flags: 
struct UPlayerInput_execUpdateSensitivityForAim_Parms
{
	unsigned long                                      bZoom:1;                                          		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerInput.UpdateSensitivity
// Flags: 
struct UPlayerInput_execUpdateSensitivity_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bZooming:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerInput.SmoothMouse
// Flags: 
struct UPlayerInput_execSmoothMouse_Parms
{
	float                                              aMouse;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              DeltaTime;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      SampleCount;                                      		// 0x0008 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	int                                                Index;                                            		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	int                                                sum;                                              		// 0x0018 ( 0x0004
};

// Function Engine.PlayerInput.AccelerateMouse
// Flags: 
struct UPlayerInput_execAccelerateMouse_Parms
{
	float                                              aMouse;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              Accel;                                            		// 0x0008 ( 0x0004
};

// Function Engine.PlayerInput.SetSmoothingStrength
// Flags: [ FUNC_Exec ]
struct UPlayerInput_execSetSmoothingStrength_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerInput.SetSmoothingMode
// Flags: [ FUNC_Exec ]
struct UPlayerInput_execSetSmoothingMode_Parms
{
	unsigned char                                      B;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerInput.PlayerInput
// Flags: [ FUNC_Event ]
struct UPlayerInput_eventPlayerInput_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              FOVScale;                                         		// 0x0004 ( 0x0004
	float                                              MouseScale;                                       		// 0x0008 ( 0x0004
};

// Function Engine.PlayerInput.InvertLook
// Flags: 
struct UPlayerInput_execInvertLook_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.CheatManager.ShowAllPlayers
// Flags: [ FUNC_Exec ]
struct UCheatManager_execShowAllPlayers_Parms
{
};

// Function Engine.CheatManager.ruler
// Flags: [ FUNC_Exec ]
struct UCheatManager_execruler_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x0000 ( 0x0004
};

// Function Engine.CheatManager.DisableNextObjective
// Flags: [ FUNC_Exec ]
struct UCheatManager_execDisableNextObjective_Parms
{
};

// Function Engine.CheatManager.WeakObjectives
// Flags: [ FUNC_Exec ]
struct UCheatManager_execWeakObjectives_Parms
{
};

// Function Engine.CheatManager.ReportCheat
// Flags: 
struct UCheatManager_execReportCheat_Parms
{
	struct FString                                     cheat;                                            		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.CheatManager.areCheatsEnabled
// Flags: 
struct UCheatManager_execareCheatsEnabled_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.CheatManager.EnableCheats
// Flags: [ FUNC_Exec ]
struct UCheatManager_execEnableCheats_Parms
{
};

// Function Engine.CheatManager.WinMatch
// Flags: [ FUNC_Exec ]
struct UCheatManager_execWinMatch_Parms
{
};

// Function Engine.CheatManager.JumpMatch
// Flags: [ FUNC_Exec ]
struct UCheatManager_execJumpMatch_Parms
{
	int                                                ladderrung;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.SkipMatch
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSkipMatch_Parms
{
};

// Function Engine.CheatManager.AllWeapons
// Flags: [ FUNC_Exec ]
struct UCheatManager_execAllWeapons_Parms
{
};

// Function Engine.CheatManager.Loaded
// Flags: [ FUNC_Exec ]
struct UCheatManager_execLoaded_Parms
{
	class AInventory*                                  Inv;                                              		// 0x0000 ( 0x0004
};

// Function Engine.CheatManager.ViewClass
// Flags: [ FUNC_Exec ]
struct UCheatManager_execViewClass_Parms
{
	class UClass*                                      aClass;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bQuiet:1;                                         		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bCheat:1;                                         		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class AActor*                                      Other;                                            		// 0x000C ( 0x0004
	class AActor*                                      first;                                            		// 0x0010 ( 0x0004
	unsigned long                                      bFound:1;                                         		// 0x0014 ( 0x0004 [0x00000001]
};

// Function Engine.CheatManager.ViewTurret
// Flags: [ FUNC_Exec ]
struct UCheatManager_execViewTurret_Parms
{
	class AActor*                                      first;                                            		// 0x0000 ( 0x0004
	unsigned long                                      bFound:1;                                         		// 0x0004 ( 0x0004 [0x00000001]
	class AController*                                 C;                                                		// 0x0008 ( 0x0004
};

// Function Engine.CheatManager.ViewNext
// Flags: 
struct UCheatManager_execViewNext_Parms
{
	struct FName                                       nameController;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      first;                                            		// 0x0004 ( 0x0004
	unsigned long                                      bFound:1;                                         		// 0x0008 ( 0x0004 [0x00000001]
	class AController*                                 C;                                                		// 0x000C ( 0x0004
};

// Function Engine.CheatManager.ViewBot
// Flags: [ FUNC_Exec ]
struct UCheatManager_execViewBot_Parms
{
};

// Function Engine.CheatManager.VAI
// Flags: [ FUNC_Exec ]
struct UCheatManager_execVAI_Parms
{
};

// Function Engine.CheatManager.VHD
// Flags: [ FUNC_Exec ]
struct UCheatManager_execVHD_Parms
{
};

// Function Engine.CheatManager.VH
// Flags: [ FUNC_Exec ]
struct UCheatManager_execVH_Parms
{
};

// Function Engine.CheatManager.ViewFlag
// Flags: [ FUNC_Exec ]
struct UCheatManager_execViewFlag_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
};

// Function Engine.CheatManager.ViewActor
// Flags: [ FUNC_Exec ]
struct UCheatManager_execViewActor_Parms
{
	struct FName                                       ActorName;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0004 ( 0x0004
};

// Function Engine.CheatManager.ViewPlayer
// Flags: [ FUNC_Exec ]
struct UCheatManager_execViewPlayer_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AController*                                 P;                                                		// 0x000C ( 0x0004
};

// Function Engine.CheatManager.ViewSelf
// Flags: [ FUNC_Exec ]
struct UCheatManager_execViewSelf_Parms
{
	unsigned long                                      bQuiet:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.CheatManager.RememberSpot
// Flags: [ FUNC_Exec ]
struct UCheatManager_execRememberSpot_Parms
{
};

// Function Engine.CheatManager.CheatView
// Flags: [ FUNC_Exec ]
struct UCheatManager_execCheatView_Parms
{
	class UClass*                                      aClass;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bQuiet:1;                                         		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.CheatManager.ClearAllDebugLines
// Flags: [ FUNC_Exec ]
struct UCheatManager_execClearAllDebugLines_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
};

// Function Engine.CheatManager.FreezeAll
// Flags: [ FUNC_Exec ]
struct UCheatManager_execFreezeAll_Parms
{
};

// Function Engine.CheatManager.PlayersOnly
// Flags: [ FUNC_Exec ]
struct UCheatManager_execPlayersOnly_Parms
{
};

// Function Engine.CheatManager.Summon
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSummon_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UClass*                                      NewClass;                                         		// 0x000C ( 0x0004
	struct FVector                                     SpawnLoc;                                         		// 0x0010 ( 0x000C
};

// Function Engine.CheatManager.Avatar
// Flags: [ FUNC_Exec ]
struct UCheatManager_execAvatar_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UClass*                                      NewClass;                                         		// 0x000C ( 0x0004
	class APawn*                                       P;                                                		// 0x0010 ( 0x0004
};

// Function Engine.CheatManager.KillPawns
// Flags: [ FUNC_Exec ]
struct UCheatManager_execKillPawns_Parms
{
};

// Function Engine.CheatManager.SetSpeed
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetSpeed_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.SetPriction
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetPriction_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.SetGravity
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetGravity_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.SetJumpLandDrop
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetJumpLandDrop_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.SetJumpZ
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetJumpZ_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.doSlomo
// Flags: 
struct UCheatManager_execdoSlomo_Parms
{
	float                                              t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.SloMo
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSloMo_Parms
{
	float                                              t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.God
// Flags: [ FUNC_Exec ]
struct UCheatManager_execGod_Parms
{
};

// Function Engine.CheatManager.Phil
// Flags: [ FUNC_Exec ]
struct UCheatManager_execPhil_Parms
{
};

// Function Engine.CheatManager.Invisible
// Flags: [ FUNC_Exec ]
struct UCheatManager_execInvisible_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.CheatManager.AllAmmo
// Flags: [ FUNC_Exec ]
struct UCheatManager_execAllAmmo_Parms
{
	class AInventory*                                  Inv;                                              		// 0x0000 ( 0x0004
};

// Function Engine.CheatManager.Ghost
// Flags: [ FUNC_Exec ]
struct UCheatManager_execGhost_Parms
{
};

// Function Engine.CheatManager.Walk
// Flags: [ FUNC_Exec ]
struct UCheatManager_execWalk_Parms
{
};

// Function Engine.CheatManager.Fly
// Flags: [ FUNC_Exec ]
struct UCheatManager_execFly_Parms
{
};

// Function Engine.CheatManager.Amphibious
// Flags: [ FUNC_Exec ]
struct UCheatManager_execAmphibious_Parms
{
};

// Function Engine.CheatManager.CauseEvent
// Flags: [ FUNC_Exec ]
struct UCheatManager_execCauseEvent_Parms
{
	struct FName                                       EventName;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.FreeCamera
// Flags: [ FUNC_Exec ]
struct UCheatManager_execFreeCamera_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.CheatManager.EndPath
// Flags: [ FUNC_Exec ]
struct UCheatManager_execEndPath_Parms
{
};

// Function Engine.CheatManager.SetCameraDist
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetCameraDist_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.LockCamera
// Flags: [ FUNC_Exec ]
struct UCheatManager_execLockCamera_Parms
{
	struct FVector                                     LockedLocation;                                   		// 0x0000 ( 0x000C
	struct FRotator                                    LockedRot;                                        		// 0x000C ( 0x000C
	class AActor*                                      LockedActor;                                      		// 0x0018 ( 0x0004
};

// Function Engine.CheatManager.ChangeSize
// Flags: [ FUNC_Exec ]
struct UCheatManager_execChangeSize_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.Teleport
// Flags: [ FUNC_Exec ]
struct UCheatManager_execTeleport_Parms
{
	class AActor*                                      HitActor;                                         		// 0x0000 ( 0x0004
	struct FVector                                     HitNormal;                                        		// 0x0004 ( 0x000C
	struct FVector                                     HitLocation;                                      		// 0x0010 ( 0x000C
};

// Function Engine.CheatManager.LogScriptedSequences
// Flags: [ FUNC_Exec ]
struct UCheatManager_execLogScriptedSequences_Parms
{
	class AAIScript*                                   S;                                                		// 0x0000 ( 0x0004
};

// Function Engine.CheatManager.KillViewedActor
// Flags: [ FUNC_Exec ]
struct UCheatManager_execKillViewedActor_Parms
{
};

// Function Engine.CheatManager.SetFogB
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetFogB_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.SetFogG
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetFogG_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.SetFogR
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetFogR_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.SetFlash
// Flags: [ FUNC_Exec ]
struct UCheatManager_execSetFlash_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.WriteToLog
// Flags: [ FUNC_Exec ]
struct UCheatManager_execWriteToLog_Parms
{
	struct FString                                     Param;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.CheatManager.FreezeFrame
// Flags: [ FUNC_Exec ]
struct UCheatManager_execFreezeFrame_Parms
{
	float                                              Delay;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.CheatManager.Pause
// Flags: [ FUNC_Exec ]
struct UCheatManager_execPause_Parms
{
	unsigned long                                      bPause:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.CheatManager.ListDynamicActors
// Flags: [ FUNC_Exec ]
struct UCheatManager_execListDynamicActors_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.CheatManager.ReviewJumpSpots
// Flags: [ FUNC_Exec ]
struct UCheatManager_execReviewJumpSpots_Parms
{
	struct FName                                       TestLabel;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawScreenText
// Flags: [ FUNC_Simulated ]
struct UCanvas_execDrawScreenText_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              X;                                                		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0010 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Pivot;                                            		// 0x0014 ( 0x0001[ CPF_Parm ]
	int                                                TextScreenWidth;                                  		// 0x0018 ( 0x0004
	int                                                TextScreenHeight;                                 		// 0x001C ( 0x0004
	float                                              UL;                                               		// 0x0020 ( 0x0004
	float                                              VL;                                               		// 0x0024 ( 0x0004
};

// Function Engine.Canvas.DrawBox
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct UCanvas_execDrawBox_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              width;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              Height;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawBracket
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct UCanvas_execDrawBracket_Parms
{
	float                                              width;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Height;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              bracket_size;                                     		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              X;                                                		// 0x000C ( 0x0004
	float                                              Y;                                                		// 0x0010 ( 0x0004
};

// Function Engine.Canvas.DrawLine
// Flags: [ FUNC_Final ]
struct UCanvas_execDrawLine_Parms
{
	int                                                direction;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Size;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              cX;                                               		// 0x0008 ( 0x0004
	float                                              cY;                                               		// 0x000C ( 0x0004
};

// Function Engine.Canvas.DrawHorizontal
// Flags: [ FUNC_Final ]
struct UCanvas_execDrawHorizontal_Parms
{
	float                                              Y;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              width;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              cX;                                               		// 0x0008 ( 0x0004
	float                                              cY;                                               		// 0x000C ( 0x0004
};

// Function Engine.Canvas.DrawVertical
// Flags: [ FUNC_Final ]
struct UCanvas_execDrawVertical_Parms
{
	float                                              X;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Height;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              cX;                                               		// 0x0008 ( 0x0004
	float                                              cY;                                               		// 0x000C ( 0x0004
};

// Function Engine.Canvas.MakeColorNoEmpty
// Flags: [ FUNC_Final ]
struct UCanvas_execMakeColorNoEmpty_Parms
{
	unsigned char                                      R;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned char                                      G;                                                		// 0x0001 ( 0x0001[ CPF_Parm ]
	unsigned char                                      B;                                                		// 0x0002 ( 0x0001[ CPF_Parm ]
	unsigned char                                      A;                                                		// 0x0003 ( 0x0001[ CPF_Parm ]
	class FColor                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class FColor                                       C;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Canvas.MakeColor
// Flags: [ FUNC_Final ]
struct UCanvas_execMakeColor_Parms
{
	unsigned char                                      R;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned char                                      G;                                                		// 0x0001 ( 0x0001[ CPF_Parm ]
	unsigned char                                      B;                                                		// 0x0002 ( 0x0001[ CPF_Parm ]
	unsigned char                                      A;                                                		// 0x0003 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	class FColor                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class FColor                                       C;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Canvas.SetDrawColor
// Flags: [ FUNC_Final ]
struct UCanvas_execSetDrawColor_Parms
{
	unsigned char                                      R;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned char                                      G;                                                		// 0x0001 ( 0x0001[ CPF_Parm ]
	unsigned char                                      B;                                                		// 0x0002 ( 0x0001[ CPF_Parm ]
	unsigned char                                      A;                                                		// 0x0003 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	class FColor                                       C;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Canvas.DrawRect
// Flags: [ FUNC_Final ]
struct UCanvas_execDrawRect_Parms
{
	class UTexture*                                    Tex;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              RectX;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              RectY;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawIcon
// Flags: [ FUNC_Final ]
struct UCanvas_execDrawIcon_Parms
{
	class UTexture*                                    Tex;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Scale;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawPattern
// Flags: [ FUNC_Final ]
struct UCanvas_execDrawPattern_Parms
{
	class UMaterial*                                   Tex;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              Scale;                                            		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.SetClip
// Flags: [ FUNC_Final ]
struct UCanvas_execSetClip_Parms
{
	float                                              X;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.SetOrigin
// Flags: [ FUNC_Final ]
struct UCanvas_execSetOrigin_Parms
{
	float                                              X;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.SetPos
// Flags: [ FUNC_Final ]
struct UCanvas_execSetPos_Parms
{
	float                                              X;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.Reset
// Flags: [ FUNC_Event ]
struct UCanvas_eventReset_Parms
{
};

// Function Engine.Canvas.BtrDrawTextJustifiedWithVolumeLineCache
// Flags: 
struct UCanvas_execBtrDrawTextJustifiedWithVolumeLineCache_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned char                                      Justification;                                    		// 0x000C ( 0x0001[ CPF_Parm ]
	float                                              X1;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	int                                                fntSize;                                          		// 0x0020 ( 0x0004[ CPF_Parm ]
	class FColor                                       shadowC;                                          		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                dropSX;                                           		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                dropSY;                                           		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Level;                                            		// 0x0030 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class FColor                                       temp;                                             		// 0x0034 ( 0x0004
};

// Function Engine.Canvas.BtrDrawTextJustifiedWithVolumeLine
// Flags: 
struct UCanvas_execBtrDrawTextJustifiedWithVolumeLine_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned char                                      Justification;                                    		// 0x000C ( 0x0001[ CPF_Parm ]
	float                                              X1;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	int                                                fntSize;                                          		// 0x0020 ( 0x0004[ CPF_Parm ]
	class FColor                                       shadowC;                                          		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                dropSX;                                           		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                dropSY;                                           		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Level;                                            		// 0x0030 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseD3DFont:1;                                    		// 0x0034 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              perc;                                             		// 0x0038 ( 0x0004
	class FColor                                       SaveBackColor;                                    		// 0x003C ( 0x0004
	class FColor                                       saveC;                                            		// 0x0040 ( 0x0004
	struct FPlane                                      saveMColor;                                       		// 0x0044 ( 0x0010
	struct FPlane                                      mColor;                                           		// 0x0054 ( 0x0010
};

// Function Engine.Canvas.BtrDrawTextJustifiedWithVolumeLineNoCache
// Flags: 
struct UCanvas_execBtrDrawTextJustifiedWithVolumeLineNoCache_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned char                                      Justification;                                    		// 0x000C ( 0x0001[ CPF_Parm ]
	float                                              X1;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	int                                                fntSize;                                          		// 0x0020 ( 0x0004[ CPF_Parm ]
	class FColor                                       shadowC;                                          		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                dropSX;                                           		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                dropSY;                                           		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Level;                                            		// 0x0030 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.Flush
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execFlush_Parms
{
};

// Function Engine.Canvas.DrawTileExactWithRotation
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTileExactWithRotation_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              U;                                                		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              V;                                                		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              UL;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              VL;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    R;                                                		// 0x0024 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Canvas.DrawTileExact
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTileExact_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              U;                                                		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              V;                                                		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              UL;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              VL;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.BtrDrawTextJustifiedCache
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrDrawTextJustifiedCache_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned char                                      Justification;                                    		// 0x000C ( 0x0001[ CPF_Parm ]
	float                                              X1;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	int                                                FontSize;                                         		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                Level;                                            		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.DrawTileCache
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTileCache_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              U;                                                		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              V;                                                		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              UL;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              VL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	int                                                Level;                                            		// 0x001C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.EndCache
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execEndCache_Parms
{
};

// Function Engine.Canvas.BeginCache
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBeginCache_Parms
{
};

// Function Engine.Canvas.BtrTextSizeOLD
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrTextSizeOLD_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	int                                                FontSize;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YL;                                               		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Canvas.BtrTextSizeLH
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrTextSizeLH_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	int                                                FontSize;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YL;                                               		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Canvas.BtrTextSize
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrTextSize_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	int                                                FontSize;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YL;                                               		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Canvas.BtrDrawTextHK_UseModulateColor
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrDrawTextHK_UseModulateColor_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	float                                              X1;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	int                                                FontSize;                                         		// 0x001C ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUseD3DFont:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      GCLevel;                                          		// 0x0024 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      PresetIndex;                                      		// 0x0025 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseModulateColor:1;                              		// 0x0028 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FPlane                                      mColor;                                           		// 0x002C ( 0x0010[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.BtrDrawTextHK
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrDrawTextHK_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	float                                              X1;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	int                                                FontSize;                                         		// 0x001C ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUseD3DFont:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      GCLevel;                                          		// 0x0024 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      PresetIndex;                                      		// 0x0025 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.BtrFontTextureGC
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrFontTextureGC_Parms
{
};

// Function Engine.Canvas.BtrFontReset
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrFontReset_Parms
{
};

// Function Engine.Canvas.BtrToggleUseD3DFont
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrToggleUseD3DFont_Parms
{
};

// Function Engine.Canvas.BtrSaveTexture
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrSaveTexture_Parms
{
};

// Function Engine.Canvas.BtrDrawTextJustified
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execBtrDrawTextJustified_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned char                                      Justification;                                    		// 0x000C ( 0x0001[ CPF_Parm ]
	float                                              X1;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	int                                                FontSize;                                         		// 0x0020 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bCache:1;                                         		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.DrawActorClipped
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawActorClipped_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      Wireframe:1;                                      		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	float                                              Left;                                             		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              Top;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              width;                                            		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Height;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ClearZ:1;                                         		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              DisplayFOV;                                       		// 0x001C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.DrawTextJustified
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTextJustified_Parms
{
	struct FString                                     String;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned char                                      Justification;                                    		// 0x000C ( 0x0001[ CPF_Parm ]
	float                                              X1;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawTileScaled
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTileScaled_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XScale;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              YScale;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawTileJustified
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTileJustified_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Justification;                                    		// 0x0004 ( 0x0001[ CPF_Parm ]
	float                                              XL;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawTileCroppedStretched
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTileCroppedStretched_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              UL;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              VL;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawTileStretched
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTileStretched_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawTilePartialStretched
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTilePartialStretched_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.WrapText
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execWrapText_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     Line;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	float                                              dx;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	class UFont*                                       f;                                                		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              FontScaleX;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.WrapStringToArray
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execWrapStringToArray_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     OutArray;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	float                                              dx;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FString                                     EOL;                                              		// 0x001C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Canvas.Clear
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execClear_Parms
{
	unsigned long                                      ClearRGB:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ClearZ:1;                                         		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.DrawScreenActorWithViewport
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawScreenActorWithViewport_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X1;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y1;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                X2;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Y2;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              AspectRatio;                                      		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              FOV;                                              		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Wireframe:1;                                      		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ClearZ:1;                                         		// 0x0020 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.DrawScreenActor
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawScreenActor_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              FOV;                                              		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Wireframe:1;                                      		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ClearZ:1;                                         		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.SetScreenProjector
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execSetScreenProjector_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Position;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	class FColor                                       Color;                                            		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Radius;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
	class UTexture*                                    Tex;                                              		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.SetScreenLight
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execSetScreenLight_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Position;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	class FColor                                       LightColor;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Radius;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.SetFontScale
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execSetFontScale_Parms
{
	float                                              fX;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fY;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.Draw2DPoint
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDraw2DPoint_Parms
{
	float                                              X;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	class FColor                                       PointColor;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.Draw2DLine
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDraw2DLine_Parms
{
	float                                              X1;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class FColor                                       LineColor;                                        		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.SetCameraRotation
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execSetCameraRotation_Parms
{
	struct FRotator                                    CameraRotation;                                   		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Canvas.SetCameraLocation
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execSetCameraLocation_Parms
{
	struct FVector                                     CameraLocation;                                   		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Canvas.GetCameraLocation
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execGetCameraLocation_Parms
{
	struct FVector                                     CameraLocation;                                   		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Canvas.WorldToScreen
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execWorldToScreen_Parms
{
	struct FVector                                     WorldLoc;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Canvas.DrawPortal
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000001E0 ( 480 )
struct UCanvas_execDrawPortal_Parms
{
	int                                                X;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                width;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                Height;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	class AActor*                                      CamActor;                                         		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FVector                                     CamLocation;                                      		// 0x0014 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    CamRotation;                                      		// 0x0020 ( 0x000C[ CPF_Parm ]
	int                                                FOV;                                              		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ClearZ:1;                                         		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.TextSize
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000001D6 ( 470 )
struct UCanvas_execTextSize_Parms
{
	struct FString                                     String;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	float                                              XL;                                               		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YL;                                               		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Canvas.DrawTextClipped
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000001D5 ( 469 )
struct UCanvas_execDrawTextClipped_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned long                                      bCheckHotKey:1;                                   		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.DrawTileClipped
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000001D4 ( 468 )
struct UCanvas_execDrawTileClipped_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              U;                                                		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              V;                                                		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              UL;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              VL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawActor
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000001D3 ( 467 )
struct UCanvas_execDrawActor_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      Wireframe:1;                                      		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ClearZ:1;                                         		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              DisplayFOV;                                       		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.DrawTile
// Flags: [ FUNC_Final | FUNC_Native ]
struct UCanvas_execDrawTile_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              U;                                                		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              V;                                                		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              UL;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              VL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Canvas.DrawText
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000001D1 ( 465 )
struct UCanvas_execDrawText_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned long                                      cR:1;                                             		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Canvas.StrLen
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x000001D0 ( 464 )
struct UCanvas_execStrLen_Parms
{
	struct FString                                     String;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	float                                              XL;                                               		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YL;                                               		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.CacheManager.GetAnnouncerRecord
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000373 ( 883 )
struct UCacheManager_execGetAnnouncerRecord_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FAnnouncerRecord                            ReturnValue;                                      		// 0x000C ( 0x0038[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetVehicleRecord
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000372 ( 882 )
struct UCacheManager_execGetVehicleRecord_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FVehicleRecord                              ReturnValue;                                      		// 0x000C ( 0x0028[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetWeaponRecord
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000371 ( 881 )
struct UCacheManager_execGetWeaponRecord_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FWeaponRecord                               ReturnValue;                                      		// 0x000C ( 0x004C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetMutatorRecord
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000370 ( 880 )
struct UCacheManager_execGetMutatorRecord_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FMutatorRecord                              ReturnValue;                                      		// 0x000C ( 0x0050[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetMapRecord
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000333 ( 819 )
struct UCacheManager_execGetMapRecord_Parms
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FMapRecord                                  ReturnValue;                                      		// 0x000C ( 0x006C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetGameRecord
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000332 ( 818 )
struct UCacheManager_execGetGameRecord_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FGameRecord                                 ReturnValue;                                      		// 0x000C ( 0x0084[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetTeamSymbolList
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x0000032B ( 811 )
struct UCacheManager_execGetTeamSymbolList_Parms
{
	class TArray< struct FString >                     SymbolNames;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      bNoSinglePlayer:1;                                		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.CacheManager.GetAnnouncerList
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x0000032A ( 810 )
struct UCacheManager_execGetAnnouncerList_Parms
{
	class TArray< struct FAnnouncerRecord >            AnnouncerRecords;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetMutatorList
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000329 ( 809 )
struct UCacheManager_execGetMutatorList_Parms
{
	class TArray< struct FMutatorRecord >              MutatorRecords;                                   		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetCrosshairList
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000328 ( 808 )
struct UCacheManager_execGetCrosshairList_Parms
{
	class TArray< struct FCrosshairRecord >            CrosshairRecords;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetVehicleList
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000327 ( 807 )
struct UCacheManager_execGetVehicleList_Parms
{
	class TArray< struct FVehicleRecord >              VehicleRecords;                                   		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetWeaponList
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000326 ( 806 )
struct UCacheManager_execGetWeaponList_Parms
{
	class TArray< struct FWeaponRecord >               WeaponRecords;                                    		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetMapList
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000325 ( 805 )
struct UCacheManager_execGetMapList_Parms
{
	class TArray< struct FMapRecord >                  MapRecords;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     Acronym;                                          		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.GetGameTypeList
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000324 ( 804 )
struct UCacheManager_execGetGameTypeList_Parms
{
	class TArray< struct FGameRecord >                 GameRecords;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     FilterType;                                       		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.CacheManager.IsDefaultContent
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x0000033E ( 830 )
struct UCacheManager_execIsDefaultContent_Parms
{
	struct FString                                     Item;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.CacheManager.IsBPContent
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000323 ( 803 )
struct UCacheManager_execIsBPContent_Parms
{
	struct FString                                     Item;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.CacheManager.Is2004Content
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000322 ( 802 )
struct UCacheManager_execIs2004Content_Parms
{
	struct FString                                     Item;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.CacheManager.Is2003Content
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
// iNative: 0x00000321 ( 801 )
struct UCacheManager_execIs2003Content_Parms
{
	struct FString                                     Item;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.CacheManager.InitCache
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000320 ( 800 )
struct UCacheManager_execInitCache_Parms
{
};

// Function Engine.BTPingCheckerLinker.ReceivedPingAck
// Flags: [ FUNC_Event ]
struct UBTPingCheckerLinker_eventReceivedPingAck_Parms
{
	class TArray< struct FString >                     fromAddr;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                ElapsedMiliSec;                                   		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0018 ( 0x0004
};

// Function Engine.BTPingCheckerLinker.SendText
// Flags: [ FUNC_Native ]
struct UBTPingCheckerLinker_execSendText_Parms
{
	struct FString                                     strDest_IP;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nDest_Port;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     strTextData;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BTPingCheckerLinker.SendPing
// Flags: [ FUNC_Native ]
struct UBTPingCheckerLinker_execSendPing_Parms
{
	struct FString                                     toAddr;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Volume.DisplayDebug
// Flags: 
struct AVolume_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Volume.PostBeginPlay
// Flags: 
struct AVolume_execPostBeginPlay_Parms
{
};

// Function Engine.Volume.Encompasses
// Flags: [ FUNC_Native ]
struct AVolume_execEncompasses_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.NavigationPoint.PlayerToucherDied
// Flags: 
struct ANavigationPoint_execPlayerToucherDied_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.NavigationPoint.MoverClosed
// Flags: 
struct ANavigationPoint_execMoverClosed_Parms
{
};

// Function Engine.NavigationPoint.MoverOpened
// Flags: 
struct ANavigationPoint_execMoverOpened_Parms
{
};

// Function Engine.NavigationPoint.ProceedWithMove
// Flags: 
struct ANavigationPoint_execProceedWithMove_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.NavigationPoint.SuggestMovePreparation
// Flags: [ FUNC_Event ]
struct ANavigationPoint_eventSuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.NavigationPoint.DetourWeight
// Flags: [ FUNC_Event ]
struct ANavigationPoint_eventDetourWeight_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              PathWeight;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.NavigationPoint.Accept
// Flags: [ FUNC_Event ]
struct ANavigationPoint_eventAccept_Parms
{
	class AActor*                                      Incoming;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Source;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.NavigationPoint.SpecialCost
// Flags: [ FUNC_Event ]
struct ANavigationPoint_eventSpecialCost_Parms
{
	class APawn*                                       Seeker;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UReachSpec*                                  Path;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.NavigationPoint.SetBaseVisibility
// Flags: 
struct ANavigationPoint_execSetBaseVisibility_Parms
{
	int                                                BaseNum;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ANavigationPoint*                            N;                                                		// 0x0004 ( 0x0004
};

// Function Engine.NavigationPoint.SetBaseDistance
// Flags: [ FUNC_Final | FUNC_Native ]
struct ANavigationPoint_execSetBaseDistance_Parms
{
	int                                                BaseNum;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.NavigationPoint.PostBeginPlay
// Flags: 
struct ANavigationPoint_execPostBeginPlay_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wArrangeTurret.ForceSpawnVehicle
// Flags: 
struct AwArrangeTurret_execForceSpawnVehicle_Parms
{
};

// Function Engine.wArrangeTurret.ForceDestroyVehicle
// Flags: 
struct AwArrangeTurret_execForceDestroyVehicle_Parms
{
};

// Function Engine.wArrangeTurret.Trigger
// Flags: [ FUNC_Event ]
struct AwArrangeTurret_eventTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AVehicle*                                    CreatedVehicle;                                   		// 0x0008 ( 0x0004
};

// Function Engine.wArrangeTurret.VehicleUnPossessed
// Flags: [ FUNC_Event ]
struct AwArrangeTurret_eventVehicleUnPossessed_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wArrangeTurret.VehiclePossessed
// Flags: [ FUNC_Event ]
struct AwArrangeTurret_eventVehiclePossessed_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wArrangeTurret.VehicleDestroyed
// Flags: [ FUNC_Event ]
struct AwArrangeTurret_eventVehicleDestroyed_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wArrangeTurret.PreBeginPlay
// Flags: 
struct AwArrangeTurret_execPreBeginPlay_Parms
{
};

// Function Engine.AnnouncerVoice.PrecacheList
// Flags: 
struct AAnnouncerVoice_execPrecacheList_Parms
{
};

// Function Engine.AnnouncerVoice.PrecacheAnnouncements
// Flags: 
struct AAnnouncerVoice_execPrecacheAnnouncements_Parms
{
	unsigned long                                      bRewardSounds:1;                                  		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class UClass*                                      GameClass;                                        		// 0x0004 ( 0x0004
	class AActor*                                      A;                                                		// 0x0008 ( 0x0004
};

// Function Engine.AnnouncerVoice.PrecacheFallbackPackage
// Flags: 
struct AAnnouncerVoice_execPrecacheFallbackPackage_Parms
{
	struct FString                                     Package;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     AName;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     strFullName;                                      		// 0x0018 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	class USound*                                      ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class USound*                                      NewSound;                                         		// 0x0028 ( 0x0004
//	int                                                i;                                                		// 0x002C ( 0x0004
//	int                                                iLength;                                          		// 0x0030 ( 0x0004
//	struct FString                                     FullName;                                         		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.AnnouncerVoice.ResetPrecacheSound
// Flags: 
struct AAnnouncerVoice_execResetPrecacheSound_Parms
{
};

// Function Engine.AnnouncerVoice.PrecacheSound
// Flags: 
struct AAnnouncerVoice_execPrecacheSound_Parms
{
	struct FString                                     AName;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     strFullName;                                      		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	class USound*                                      ReturnValue;                                      		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class USound*                                      NewSound;                                         		// 0x001C ( 0x0004
};

// Function Engine.AnnouncerVoice.GetSound
// Flags: [ FUNC_Event ]
struct AAnnouncerVoice_eventGetSound_Parms
{
	struct FString                                     AName;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class USound*                                      ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class USound*                                      NewSound;                                         		// 0x0010 ( 0x0004
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	struct FString                                     strSoundName;                                     		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.HoverPathNode.SpecialCost
// Flags: [ FUNC_Event ]
struct AHoverPathNode_eventSpecialCost_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UReachSpec*                                  Path;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameProfile.CanChangeTeam
// Flags: 
struct UGameProfile_execCanChangeTeam_Parms
{
	class AController*                                 Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                NewTeam;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameProfile.ReportCheat
// Flags: 
struct UGameProfile_execReportCheat_Parms
{
	class APlayerController*                           Cheater;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     cheat;                                            		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameProfile.ClearTeammates
// Flags: 
struct UGameProfile_execClearTeammates_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.GameProfile.ReleaseTeammate
// Flags: 
struct UGameProfile_execReleaseTeammate_Parms
{
	struct FString                                     botname;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	int                                                j;                                                		// 0x0014 ( 0x0004
};

// Function Engine.GameProfile.AddTeammate
// Flags: 
struct UGameProfile_execAddTeammate_Parms
{
	struct FString                                     botname;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.GameProfile.SetLineup
// Flags: 
struct UGameProfile_execSetLineup_Parms
{
	int                                                lineuppos;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                teampos;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                oldlineuppos;                                     		// 0x0008 ( 0x0004
	int                                                oldteammate;                                      		// 0x000C ( 0x0004
	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.GameProfile.SetPosition
// Flags: 
struct UGameProfile_execSetPosition_Parms
{
	int                                                lineupnum;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     posn;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameProfile.GetPositionDescription
// Flags: 
struct UGameProfile_execGetPositionDescription_Parms
{
	int                                                PlayerNum;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameProfile.EnumPositionDescription
// Flags: 
struct UGameProfile_execEnumPositionDescription_Parms
{
	struct FString                                     posnval;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      retval;                                           		// 0x000D ( 0x0001
};

// Function Engine.GameProfile.TextPositionDescription
// Flags: 
struct UGameProfile_execTextPositionDescription_Parms
{
	int                                                posnval;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     retval;                                           		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameProfile.GetNumTeammatesForMatch
// Flags: 
struct UGameProfile_execGetNumTeammatesForMatch_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UMatchInfo*                                  M;                                                		// 0x0004 ( 0x0004
};

// Function Engine.GameProfile.GetNumPositions
// Flags: 
struct UGameProfile_execGetNumPositions_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameProfile.GetMatchDescription
// Flags: 
struct UGameProfile_execGetMatchDescription_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameProfile.ContinueSinglePlayerGame
// Flags: 
struct UGameProfile_execContinueSinglePlayerGame_Parms
{
	class ALevelInfo*                                  Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bReplace:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.GameProfile.FindFirstUnfinishedLadder
// Flags: 
struct UGameProfile_execFindFirstUnfinishedLadder_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.GameProfile.StartNewMatch
// Flags: 
struct UGameProfile_execStartNewMatch_Parms
{
	int                                                PickedLadder;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ALevelInfo*                                  CurrentLevel;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0008 ( 0x0004
};

// Function Engine.GameProfile.RegisterGame
// Flags: 
struct UGameProfile_execRegisterGame_Parms
{
	class AGameInfo*                                   currentGame;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameProfile.GetMatchInfo
// Flags: 
struct UGameProfile_execGetMatchInfo_Parms
{
	int                                                Ladder;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                rung;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UMatchInfo*                                  ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameProfile.CheatJumpMatch
// Flags: 
struct UGameProfile_execCheatJumpMatch_Parms
{
	class AGameInfo*                                   currentGame;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Param;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0008 ( 0x0004
	int                                                newladder;                                        		// 0x000C ( 0x0004
	int                                                newrung;                                          		// 0x0010 ( 0x0004
};

// Function Engine.GameProfile.CheatSkipMatch
// Flags: 
struct UGameProfile_execCheatSkipMatch_Parms
{
	class AGameInfo*                                   currentGame;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameProfile.Initialize
// Flags: 
struct UGameProfile_execInitialize_Parms
{
	class AGameInfo*                                   currentGame;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     pn;                                               		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AController*                                 C;                                                		// 0x0010 ( 0x0004
};

// Function Engine.Mutator.DriverLeftVehicle
// Flags: 
struct AMutator_execDriverLeftVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Mutator.CanLeaveVehicle
// Flags: 
struct AMutator_execCanLeaveVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Mutator.DriverEnteredVehicle
// Flags: 
struct AMutator_execDriverEnteredVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Mutator.CanEnterVehicle
// Flags: 
struct AMutator_execCanEnterVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Mutator.ServerTraveling
// Flags: 
struct AMutator_execServerTraveling_Parms
{
	struct FString                                     URL;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bItems:1;                                         		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Mutator.OverrideDownload
// Flags: [ FUNC_Event ]
struct AMutator_eventOverrideDownload_Parms
{
	struct FString                                     PlayerIP;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PlayerID;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PlayerURL;                                        		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     RedirectURL;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0030 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Mutator.MutatorFillPlayInfo
// Flags: 
struct AMutator_execMutatorFillPlayInfo_Parms
{
	class UPlayInfo*                                   PlayInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Mutator.ParseChatPercVar
// Flags: 
struct AMutator_execParseChatPercVar_Parms
{
	class AController*                                 Who;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Cmd;                                              		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Mutator.GetServerPlayers
// Flags: 
struct AMutator_execGetServerPlayers_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x0000 ( 0x0070[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.Mutator.GetServerDetails
// Flags: 
struct AMutator_execGetServerDetails_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x0000 ( 0x0070[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0070 ( 0x0004
};

// Function Engine.Mutator.PlayerChangedClass
// Flags: 
struct AMutator_execPlayerChangedClass_Parms
{
	class AController*                                 aPlayer;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Mutator.CheckReplacement
// Flags: 
struct AMutator_execCheckReplacement_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      bSuperRelevant;                                   		// 0x0004 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Mutator.CheckRelevance
// Flags: 
struct AMutator_execCheckRelevance_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bResult:1;                                        		// 0x0008 ( 0x0004 [0x00000001]
//	unsigned char                                      bSuperRelevant;                                   		// 0x000C ( 0x0001
};

// Function Engine.Mutator.IsRelevant
// Flags: 
struct AMutator_execIsRelevant_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      bSuperRelevant;                                   		// 0x0004 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bResult:1;                                        		// 0x000C ( 0x0004 [0x00000001]
};

// Function Engine.Mutator.AlwaysKeep
// Flags: 
struct AMutator_execAlwaysKeep_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Mutator.ReplaceWith
// Flags: 
struct AMutator_execReplaceWith_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     aClassName;                                       		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AActor*                                      A;                                                		// 0x0014 ( 0x0004
//	class UClass*                                      aClass;                                           		// 0x0018 ( 0x0004
};

// Function Engine.Mutator.NewRecommendCombo
// Flags: 
struct AMutator_execNewRecommendCombo_Parms
{
	struct FString                                     ComboName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AAIController*                               C;                                                		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     NewComboName;                                     		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.Mutator.RecommendCombo
// Flags: 
struct AMutator_execRecommendCombo_Parms
{
	struct FString                                     ComboName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Mutator.AddMutator
// Flags: 
struct AMutator_execAddMutator_Parms
{
	class AMutator*                                    M;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Mutator.MyDefaultWeapon
// Flags: 
struct AMutator_execMyDefaultWeapon_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Mutator.GetInventoryClassOverride
// Flags: 
struct AMutator_execGetInventoryClassOverride_Parms
{
	struct FString                                     InventoryClassName;                               		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Mutator.GetInventoryClass
// Flags: 
struct AMutator_execGetInventoryClass_Parms
{
	struct FString                                     InventoryClassName;                               		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UClass*                                      ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Mutator.GetDefaultWeapon
// Flags: 
struct AMutator_execGetDefaultWeapon_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UClass*                                      W;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Mutator.ModifyPlayer
// Flags: 
struct AMutator_execModifyPlayer_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Mutator.NotifyLogout
// Flags: 
struct AMutator_execNotifyLogout_Parms
{
	class AController*                                 Exiting;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Mutator.ModifyLogin
// Flags: 
struct AMutator_execModifyLogin_Parms
{
	struct FString                                     Portal;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     Options;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.Mutator.Mutate
// Flags: 
struct AMutator_execMutate_Parms
{
	struct FString                                     MutateString;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerController*                           Sender;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Mutator.Destroyed
// Flags: 
struct AMutator_execDestroyed_Parms
{
	class AMutator*                                    M;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Mutator.MutatorIsAllowed
// Flags: 
struct AMutator_execMutatorIsAllowed_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Mutator.PreBeginPlay
// Flags: [ FUNC_Event ]
struct AMutator_eventPreBeginPlay_Parms
{
};

// Function Engine.AvoidMarker.StartleBots
// Flags: 
struct AAvoidMarker_execStartleBots_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004
};

// Function Engine.AvoidMarker.RelevantTo
// Flags: 
struct AAvoidMarker_execRelevantTo_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AvoidMarker.Touch
// Flags: 
struct AAvoidMarker_execTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.JumpDest.SuggestMovePreparation
// Flags: [ FUNC_Event ]
struct AJumpDest_eventSuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Num;                                              		// 0x0008 ( 0x0004
};

// Function Engine.JumpDest.DoJump
// Flags: 
struct AJumpDest_execDoJump_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.JumpDest.SpecialCost
// Flags: [ FUNC_Event ]
struct AJumpDest_eventSpecialCost_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UReachSpec*                                  Path;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Num;                                              		// 0x000C ( 0x0004
};

// Function Engine.JumpDest.GetPathIndex
// Flags: 
struct AJumpDest_execGetPathIndex_Parms
{
	class UReachSpec*                                  Path;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.JumpPad.PostTouch
// Flags: [ FUNC_Event ]
struct AJumpPad_eventPostTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004
};

// Function Engine.JumpPad.Touch
// Flags: [ FUNC_Event ]
struct AJumpPad_eventTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.JumpPad.Reset
// Flags: 
struct AJumpPad_execReset_Parms
{
};

// Function Engine.JumpPad.PostBeginPlay
// Flags: 
struct AJumpPad_execPostBeginPlay_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x0000 ( 0x0004
};

// Function Engine.WeaponAttachment.GetBoneTipLocation1st
// Flags: [ FUNC_Simulated ]
struct AWeaponAttachment_execGetBoneTipLocation1st_Parms
{
	struct FCoords                                     ReturnValue;                                      		// 0x0000 ( 0x0030[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WeaponAttachment.GetBoneTipLocation3rd
// Flags: [ FUNC_Simulated ]
struct AWeaponAttachment_execGetBoneTipLocation3rd_Parms
{
	struct FCoords                                     ReturnValue;                                      		// 0x0000 ( 0x0030[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WeaponAttachment.GetBoneNameRotation
// Flags: [ FUNC_Simulated ]
struct AWeaponAttachment_execGetBoneNameRotation_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WeaponAttachment.GetBoneNameTip
// Flags: [ FUNC_Simulated ]
struct AWeaponAttachment_execGetBoneNameTip_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WeaponAttachment.wLoadOut
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AWeaponAttachment_eventwLoadOut_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwWeaponManager*                             wMani;                                            		// 0x0008 ( 0x0004
	class UwWeaponBaseParams*                          wBase;                                            		// 0x000C ( 0x0004
	class UClass*                                      wRes;                                             		// 0x0010 ( 0x0004
	int                                                i;                                                		// 0x0014 ( 0x0004
	int                                                j;                                                		// 0x0018 ( 0x0004
};

// Function Engine.WeaponAttachment.UpdatePenetrateHit
// Flags: [ FUNC_Event ]
struct AWeaponAttachment_eventUpdatePenetrateHit_Parms
{
	class AActor*                                      mHitActor[ 0x06 ];                                		// 0x0000 ( 0x0018[ CPF_Parm ]
	struct FVector                                     mHitLocation[ 0x06 ];                             		// 0x0018 ( 0x0048[ CPF_Parm ]
	struct FVector                                     mHitNormal[ 0x06 ];                               		// 0x0060 ( 0x0048[ CPF_Parm ]
	class UMaterial*                                   mHitMaterial[ 0x06 ];                             		// 0x00A8 ( 0x0018[ CPF_Parm ]
	int                                                mLastHitIdx;                                      		// 0x00C0 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x00C4 ( 0x0004
	int                                                j;                                                		// 0x00C8 ( 0x0004
};

// Function Engine.WeaponAttachment.UpdateHit
// Flags: [ FUNC_Event ]
struct AWeaponAttachment_eventUpdateHit_Parms
{
	class AActor*                                      HitActor;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     HitNormal;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	class UMaterial*                                   HitMaterial;                                      		// 0x001C ( 0x0004[ CPF_Parm ]
};

// Function Engine.WeaponAttachment.CheckForSplash
// Flags: [ FUNC_Simulated ]
struct AWeaponAttachment_execCheckForSplash_Parms
{
	int                                                nIndex;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AActor*                                      HitActor;                                         		// 0x0008 ( 0x0004
	struct FVector                                     HitNormal;                                        		// 0x000C ( 0x000C
	struct FVector                                     HitLocation;                                      		// 0x0018 ( 0x000C
};

// Function Engine.WeaponAttachment.ThirdPersonEffects
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AWeaponAttachment_eventThirdPersonEffects_Parms
{
};

// Function Engine.WeaponAttachment.FakeThirdPersonEffects
// Flags: [ FUNC_Simulated ]
struct AWeaponAttachment_execFakeThirdPersonEffects_Parms
{
	class AActor*                                      HitActor;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     HitNormal;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	class UMaterial*                                   HitMaterial;                                      		// 0x001C ( 0x0004[ CPF_Parm ]
};

// Function Engine.WeaponAttachment.FakeUpdateTracer
// Flags: [ FUNC_Simulated ]
struct AWeaponAttachment_execFakeUpdateTracer_Parms
{
	struct FVector                                     LastHitLocation;                                  		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.WeaponAttachment.Destroyed
// Flags: [ FUNC_Simulated ]
struct AWeaponAttachment_execDestroyed_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                j;                                                		// 0x0004 ( 0x0004
};

// Function Engine.WeaponAttachment.ClearArray
// Flags: [ FUNC_Simulated ]
struct AWeaponAttachment_execClearArray_Parms
{
};

// Function Engine.InventoryAttachment.InitFor
// Flags: 
struct AInventoryAttachment_execInitFor_Parms
{
	class AInventory*                                  i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.TeamInfo.GetAllCharacters
// Flags: 
struct ATeamInfo_execGetAllCharacters_Parms
{
	class TArray< struct FString >                     Chars;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.TeamInfo.SetCharacters
// Flags: 
struct ATeamInfo_execSetCharacters_Parms
{
	class TArray< struct FString >                     Chars;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.TeamInfo.RemoveFromTeam
// Flags: 
struct ATeamInfo_execRemoveFromTeam_Parms
{
	class AController*                                 Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.TeamInfo.AddToTeam
// Flags: 
struct ATeamInfo_execAddToTeam_Parms
{
	class AController*                                 Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AController*                                 P;                                                		// 0x0008 ( 0x0004
//	unsigned long                                      bSuccess:1;                                       		// 0x000C ( 0x0004 [0x00000001]
};

// Function Engine.TeamInfo.GetHumanReadableName
// Flags: [ FUNC_Simulated ]
struct ATeamInfo_execGetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.TeamInfo.BelongsOnTeam
// Flags: 
struct ATeamInfo_execBelongsOnTeam_Parms
{
	class UClass*                                      PawnClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.TeamInfo.GetUAVTime
// Flags: [ FUNC_Simulated ]
struct ATeamInfo_execGetUAVTime_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.TeamInfo.IsUAVOn
// Flags: [ FUNC_Simulated ]
struct ATeamInfo_execIsUAVOn_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.TeamInfo.SetUAV
// Flags: 
struct ATeamInfo_execSetUAV_Parms
{
};

// Function Engine.Door.SuggestMovePreparation
// Flags: [ FUNC_Event ]
struct ADoor_eventSuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Door.ProceedWithMove
// Flags: 
struct ADoor_execProceedWithMove_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Door.SpecialHandling
// Flags: 
struct ADoor_execSpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Door.MoverClosed
// Flags: 
struct ADoor_execMoverClosed_Parms
{
};

// Function Engine.Door.MoverOpened
// Flags: 
struct ADoor_execMoverOpened_Parms
{
};

// Function Engine.Door.PostBeginPlay
// Flags: 
struct ADoor_execPostBeginPlay_Parms
{
	struct FVector                                     dist;                                             		// 0x0000 ( 0x000C
};

// Function Engine.Ladder.SuggestMovePreparation
// Flags: [ FUNC_Event ]
struct ALadder_eventSuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.UserzoneInfo.GetMaxCalcTime
// Flags: [ FUNC_Event ]
struct UUserzoneInfo_eventGetMaxCalcTime_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                nMaxCalcTime;                                     		// 0x0004 ( 0x0004
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                j;                                                		// 0x000C ( 0x0004
};

// Function Engine.UserzoneInfo.SetScoreboardHud
// Flags: 
struct UUserzoneInfo_execSetScoreboardHud_Parms
{
	class AHUD*                                        _hud;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.UserzoneInfo.GetScreenPos
// Flags: [ FUNC_Event ]
struct UUserzoneInfo_eventGetScreenPos_Parms
{
	int                                                nGroupIndex;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nPosX;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                nPosY;                                            		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.UserzoneInfo.GetCellIndex
// Flags: 
struct UUserzoneInfo_execGetCellIndex_Parms
{
	struct FVector                                     kPos;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                nCellIndex;                                       		// 0x0010 ( 0x0004
//	float                                              fMx;                                              		// 0x0014 ( 0x0004
//	float                                              fMy;                                              		// 0x0018 ( 0x0004
};

// Function Engine.UserzoneInfo.GetInterpolationPos
// Flags: 
struct UUserzoneInfo_execGetInterpolationPos_Parms
{
	struct FVector                                     kStartPos;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     kEndPos;                                          		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              A;                                                		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     kIntPos;                                          		// 0x0028 ( 0x000C
};

// Function Engine.UserzoneInfo.AddCalcTime
// Flags: [ FUNC_Event ]
struct UUserzoneInfo_eventAddCalcTime_Parms
{
	struct FVector                                     kStartPos;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     kEndPos;                                          		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              fTime;                                            		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              i;                                                		// 0x001C ( 0x0004
	struct FVector                                     kIntPos;                                          		// 0x0020 ( 0x000C
	int                                                nIndex;                                           		// 0x002C ( 0x0004
	float                                              A;                                                		// 0x0030 ( 0x0004
};

// Function Engine.UserzoneInfo.ResetCalcTime
// Flags: 
struct UUserzoneInfo_execResetCalcTime_Parms
{
	int                                                nLength;                                          		// 0x0000 ( 0x0004
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.UserzoneInfo.Destroy
// Flags: 
struct UUserzoneInfo_execDestroy_Parms
{
};

// Function Engine.UserzoneInfo.CalcMapSize
// Flags: 
struct UUserzoneInfo_execCalcMapSize_Parms
{
	float                                              _fCellSize;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fMinimapW;                                        		// 0x0004 ( 0x0004
	float                                              fMinimapH;                                        		// 0x0008 ( 0x0004
	int                                                nTotalCount;                                      		// 0x000C ( 0x0004
};

// Function Engine.PotentialClimbWatcher.Tick
// Flags: [ FUNC_Simulated ]
struct APotentialClimbWatcher_execTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    PawnRot;                                          		// 0x0004 ( 0x000C
	class ALadderVolume*                               L;                                                		// 0x0010 ( 0x0004
	unsigned long                                      bFound:1;                                         		// 0x0014 ( 0x0004 [0x00000001]
};

// Function Engine.LadderVolume.PhysicsChangedFor
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct ALadderVolume_eventPhysicsChangedFor_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.LadderVolume.PawnLeavingVolume
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct ALadderVolume_eventPawnLeavingVolume_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0004 ( 0x0004
};

// Function Engine.LadderVolume.PawnEnteredVolume
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct ALadderVolume_eventPawnEnteredVolume_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    PawnRot;                                          		// 0x0004 ( 0x000C
};

// Function Engine.LadderVolume.InUse
// Flags: 
struct ALadderVolume_execInUse_Parms
{
	class APawn*                                       Ignored;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APawn*                                       StillClimbing;                                    		// 0x0008 ( 0x0004
};

// Function Engine.LadderVolume.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct ALadderVolume_execPostBeginPlay_Parms
{
	class ALadder*                                     L;                                                		// 0x0000 ( 0x0004
	class ALadder*                                     M;                                                		// 0x0004 ( 0x0004
	struct FVector                                     Dir;                                              		// 0x0008 ( 0x000C
};

// Function Engine.PhysicsVolume.CausePainTo
// Flags: 
struct APhysicsVolume_execCausePainTo_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              depth;                                            		// 0x0004 ( 0x0004
	class APawn*                                       P;                                                		// 0x0008 ( 0x0004
};

// Function Engine.PhysicsVolume.PlayExitSplash
// Flags: [ FUNC_Simulated ]
struct APhysicsVolume_execPlayExitSplash_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PhysicsVolume.UnTouch
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APhysicsVolume_eventUnTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PhysicsVolume.PlayEntrySplash
// Flags: [ FUNC_Simulated ]
struct APhysicsVolume_execPlayEntrySplash_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     StartLoc;                                         		// 0x0004 ( 0x000C
	struct FVector                                     Vel2D;                                            		// 0x0010 ( 0x000C
};

// Function Engine.PhysicsVolume.Touch
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APhysicsVolume_eventTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004
	unsigned long                                      bFoundPawn:1;                                     		// 0x0008 ( 0x0004 [0x00000001]
};

// Function Engine.PhysicsVolume.Trigger
// Flags: 
struct APhysicsVolume_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0008 ( 0x0004
};

// Function Engine.PhysicsVolume.TimerPop
// Flags: 
struct APhysicsVolume_execTimerPop_Parms
{
	class AVolumeTimer*                                t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0004 ( 0x0004
	unsigned long                                      bFound:1;                                         		// 0x0008 ( 0x0004 [0x00000001]
};

// Function Engine.PhysicsVolume.BaseChange
// Flags: [ FUNC_Event ]
struct APhysicsVolume_eventBaseChange_Parms
{
};

// Function Engine.PhysicsVolume.PlayerPawnDiedInVolume
// Flags: 
struct APhysicsVolume_execPlayerPawnDiedInVolume_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PhysicsVolume.PawnLeavingVolume
// Flags: [ FUNC_Event ]
struct APhysicsVolume_eventPawnLeavingVolume_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PhysicsVolume.PawnEnteredVolume
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APhysicsVolume_eventPawnEnteredVolume_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C
	struct FVector                                     HitNormal;                                        		// 0x0010 ( 0x000C
	class AActor*                                      SpawnedEntryActor;                                		// 0x001C ( 0x0004
};

// Function Engine.PhysicsVolume.ActorLeavingVolume
// Flags: [ FUNC_Event ]
struct APhysicsVolume_eventActorLeavingVolume_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PhysicsVolume.ActorEnteredVolume
// Flags: [ FUNC_Event ]
struct APhysicsVolume_eventActorEnteredVolume_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PhysicsVolume.PhysicsChangedFor
// Flags: [ FUNC_Event ]
struct APhysicsVolume_eventPhysicsChangedFor_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PhysicsVolume.Reset
// Flags: 
struct APhysicsVolume_execReset_Parms
{
};

// Function Engine.PhysicsVolume.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct APhysicsVolume_execPostBeginPlay_Parms
{
};

// Function Engine.PhysicsVolume.PreBeginPlay
// Flags: [ FUNC_Simulated ]
struct APhysicsVolume_execPreBeginPlay_Parms
{
};

// Function Engine.DefaultPhysicsVolume.Destroyed
// Flags: 
struct ADefaultPhysicsVolume_execDestroyed_Parms
{
};

// Function Engine.LineOfSightTrigger.Timer
// Flags: 
struct ALineOfSightTrigger_execTimer_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.LineOfSightTrigger.Trigger
// Flags: 
struct ALineOfSightTrigger_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.LineOfSightTrigger.PlayerSeesMe
// Flags: [ FUNC_Event ]
struct ALineOfSightTrigger_eventPlayerSeesMe_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.LineOfSightTrigger.PostBeginPlay
// Flags: 
struct ALineOfSightTrigger_execPostBeginPlay_Parms
{
};

// Function Engine.AIScript.TakeOver
// Flags: 
struct AAIScript_execTakeOver_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.AIScript.GetMoveTarget
// Flags: 
struct AAIScript_execGetMoveTarget_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AIScript.SpawnControllerFor
// Flags: 
struct AAIScript_execSpawnControllerFor_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AAIController*                               C;                                                		// 0x0004 ( 0x0004
};

// Function Engine.DamageType.GetWeaponClass
// Flags: 
struct ADamageType_execGetWeaponClass_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.DamageType.GetHitEffects
// Flags: 
struct ADamageType_execGetHitEffects_Parms
{
	class UClass*                                      HitEffects[ 0x04 ];                               		// 0x0000 ( 0x0010[ CPF_Parm | CPF_OutParm ]
	int                                                VictemHealth;                                     		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.DamageType.IsOfType
// Flags: 
struct ADamageType_execIsOfType_Parms
{
	int                                                Description;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Result;                                           		// 0x0008 ( 0x0004
};

// Function Engine.DamageType.GetPawnDamageSound
// Flags: 
struct ADamageType_execGetPawnDamageSound_Parms
{
	class USound*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.DamageType.GetPawnDamageEmitter
// Flags: 
struct ADamageType_execGetPawnDamageEmitter_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              Damage;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0010 ( 0x000C[ CPF_Parm ]
	class APawn*                                       Victim;                                           		// 0x001C ( 0x0004[ CPF_Parm ]
	unsigned long                                      bLowDetail:1;                                     		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm ]
	class UClass*                                      ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.DamageType.GetPawnDamageEffect
// Flags: 
struct ADamageType_execGetPawnDamageEffect_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              Damage;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0010 ( 0x000C[ CPF_Parm ]
	class APawn*                                       Victim;                                           		// 0x001C ( 0x0004[ CPF_Parm ]
	unsigned long                                      bLowDetail:1;                                     		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm ]
	class UClass*                                      ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.DamageType.SuicideMessage
// Flags: 
struct ADamageType_execSuicideMessage_Parms
{
	class APlayerReplicationInfo*                      Victim;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.DamageType.DeathMessage
// Flags: 
struct ADamageType_execDeathMessage_Parms
{
	class APlayerReplicationInfo*                      Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      Victim;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.DamageType.ScoreKill
// Flags: 
struct ADamageType_execScoreKill_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killed;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.DamageType.IncrementKills
// Flags: 
struct ADamageType_execIncrementKills_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicleTrigger.Reset
// Flags: 
struct ASVehicleTrigger_execReset_Parms
{
};

// Function Engine.SVehicleTrigger.UsedBy
// Flags: 
struct ASVehicleTrigger_execUsedBy_Parms
{
	class APawn*                                       User;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicleTrigger.Trigger
// Flags: [ FUNC_Event ]
struct ASVehicleTrigger_eventTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicleTrigger.PostBeginPlay
// Flags: 
struct ASVehicleTrigger_execPostBeginPlay_Parms
{
};

// Function Engine.SVehicleFactory.Trigger
// Flags: [ FUNC_Event ]
struct ASVehicleFactory_eventTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AVehicle*                                    CreatedVehicle;                                   		// 0x0008 ( 0x0004
};

// Function Engine.SVehicleFactory.VehicleUnPossessed
// Flags: [ FUNC_Event ]
struct ASVehicleFactory_eventVehicleUnPossessed_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicleFactory.VehiclePossessed
// Flags: [ FUNC_Event ]
struct ASVehicleFactory_eventVehiclePossessed_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicleFactory.VehicleDestroyed
// Flags: [ FUNC_Event ]
struct ASVehicleFactory_eventVehicleDestroyed_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SVehicleFactory.PreBeginPlay
// Flags: 
struct ASVehicleFactory_execPreBeginPlay_Parms
{
};

// Function Engine.VehiclePart.Activate
// Flags: 
struct AVehiclePart_execActivate_Parms
{
	unsigned long                                      bActive:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.VehiclePart.Update
// Flags: 
struct AVehiclePart_execUpdate_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerSendCheatMsg
// Flags: 
struct APlayerController_execServerSendCheatMsg_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SendCheatMsg
// Flags: [ FUNC_Exec ]
struct APlayerController_execSendCheatMsg_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.DisplayDebugPHJ
// Flags: 
struct APlayerController_execDisplayDebugPHJ_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.DisplayDebugChan1
// Flags: 
struct APlayerController_execDisplayDebugChan1_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
	class UPlayerInput*                                pInput;                                           		// 0x0008 ( 0x0004
	class AwGun*                                       Gun;                                              		// 0x000C ( 0x0004
	struct FName                                       Anim;                                             		// 0x0010 ( 0x0004
	float                                              frame;                                            		// 0x0014 ( 0x0004
	float                                              Rate;                                             		// 0x0018 ( 0x0004
};

// Function Engine.PlayerController.input_weapon
// Flags: [ FUNC_Exec ]
struct APlayerController_execinput_weapon_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     arrs;                                             		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	unsigned char                                      i;                                                		// 0x0018 ( 0x0001
};

// Function Engine.PlayerController.input_weaponex
// Flags: [ FUNC_Exec ]
struct APlayerController_execinput_weaponex_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     arrs;                                             		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	unsigned char                                      i;                                                		// 0x0018 ( 0x0001
};

// Function Engine.PlayerController.SetWeaponTraceAim
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetWeaponTraceAim_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
	int                                                Index;                                            		// 0x0010 ( 0x0004
	int                                                max_wt;                                           		// 0x0014 ( 0x0004
	class TArray< struct FString >                     arrs;                                             		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SetWeaponTrace
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetWeaponTrace_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
	int                                                Index;                                            		// 0x0010 ( 0x0004
	int                                                max_wt;                                           		// 0x0014 ( 0x0004
	class TArray< struct FString >                     arrs;                                             		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ResetWeaponTrace
// Flags: [ FUNC_Exec ]
struct APlayerController_execResetWeaponTrace_Parms
{
};

// Function Engine.PlayerController.ResetWeaponTraceIndex
// Flags: [ FUNC_Exec ]
struct APlayerController_execResetWeaponTraceIndex_Parms
{
};

// Function Engine.PlayerController.UnsetTestAim
// Flags: [ FUNC_Exec ]
struct APlayerController_execUnsetTestAim_Parms
{
};

// Function Engine.PlayerController.SetTestAim
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetTestAim_Parms
{
};

// Function Engine.PlayerController.PlusCollisionHeight
// Flags: [ FUNC_Exec ]
struct APlayerController_execPlusCollisionHeight_Parms
{
	float                                              A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ShowWebzenShop
// Flags: [ FUNC_Exec ]
struct APlayerController_execShowWebzenShop_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                j;                                                		// 0x0004 ( 0x0004
	class UwGameManager*                               GameMgr;                                          		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.ClientChangeTcpTimeLimit
// Flags: 
struct APlayerController_execClientChangeTcpTimeLimit_Parms
{
	class UwMatchMaker*                                kMM;                                              		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.setsdrespawn
// Flags: [ FUNC_Exec ]
struct APlayerController_execsetsdrespawn_Parms
{
	class UwMatchMaker*                                kMM;                                              		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.setautostart
// Flags: [ FUNC_Exec ]
struct APlayerController_execsetautostart_Parms
{
	class UwMatchMaker*                                kMM;                                              		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ClientUseSupplyItem
// Flags: 
struct APlayerController_execClientUseSupplyItem_Parms
{
	unsigned char                                      byType;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerUseSupplyItem
// Flags: 
struct APlayerController_execServerUseSupplyItem_Parms
{
	unsigned char                                      byType;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerController.SMWL
// Flags: [ FUNC_Exec ]
struct APlayerController_execSMWL_Parms
{
	struct FString                                     swmode;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Test3
// Flags: [ FUNC_Exec ]
struct APlayerController_execTest3_Parms
{
	float                                              fActive;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     sTemp;                                            		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Test2
// Flags: [ FUNC_Exec ]
struct APlayerController_execTest2_Parms
{
	float                                              fAniFrame;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     sTemp;                                            		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Test1
// Flags: [ FUNC_Exec ]
struct APlayerController_execTest1_Parms
{
	float                                              fAniFrame;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     sTemp;                                            		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.CheckChangeHostShowQS
// Flags: [ FUNC_Simulated ]
struct APlayerController_execCheckChangeHostShowQS_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.Bob
// Flags: [ FUNC_Exec ]
struct APlayerController_execBob_Parms
{
	int                                                idvalue;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Value;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.Mark
// Flags: [ FUNC_Exec ]
struct APlayerController_execMark_Parms
{
};

// Function Engine.PlayerController.LODBias
// Flags: [ FUNC_Exec ]
struct APlayerController_execLODBias_Parms
{
	float                                              fBias;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.EverySetPktLoss
// Flags: [ FUNC_Exec ]
struct APlayerController_execEverySetPktLoss_Parms
{
	int                                                ms;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.ClientSetPktLoss
// Flags: [ FUNC_Exec ]
struct APlayerController_execClientSetPktLoss_Parms
{
	int                                                ms;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.EverySetPktLag
// Flags: [ FUNC_Exec ]
struct APlayerController_execEverySetPktLag_Parms
{
	int                                                ms;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.ClientSetPktLag
// Flags: [ FUNC_Exec ]
struct APlayerController_execClientSetPktLag_Parms
{
	int                                                ms;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.EverySos
// Flags: [ FUNC_Exec ]
struct APlayerController_execEverySos_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ClientSos
// Flags: [ FUNC_Exec ]
struct APlayerController_execClientSos_Parms
{
};

// Function Engine.PlayerController.Sos
// Flags: [ FUNC_Exec ]
struct APlayerController_execSos_Parms
{
};

// Function Engine.PlayerController.everysmall
// Flags: [ FUNC_Exec ]
struct APlayerController_execeverysmall_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ClientSmall
// Flags: [ FUNC_Exec ]
struct APlayerController_execClientSmall_Parms
{
};

// Function Engine.PlayerController.small
// Flags: [ FUNC_Exec ]
struct APlayerController_execsmall_Parms
{
};

// Function Engine.PlayerController.ShowE
// Flags: [ FUNC_Exec ]
struct APlayerController_execShowE_Parms
{
};

// Function Engine.PlayerController.ClientHoldFlag
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientHoldFlag_Parms
{
	class AwWeapon*                                    wDP;                                              		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.GetDemoPackToMyInven
// Flags: [ FUNC_Simulated ]
struct APlayerController_execGetDemoPackToMyInven_Parms
{
	class AwWeapon*                                    ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Inv;                                              		// 0x0004 ( 0x0004
//	class AwWeapon*                                    Wpn;                                              		// 0x0008 ( 0x0004
//	int                                                InvenCount;                                       		// 0x000C ( 0x0004
};

// Function Engine.PlayerController.DestroyEmitter
// Flags: [ FUNC_Simulated ]
struct APlayerController_execDestroyEmitter_Parms
{
	class AEmitter*                                    FindEmitter;                                      		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.PushAASNotice
// Flags: [ FUNC_Simulated ]
struct APlayerController_execPushAASNotice_Parms
{
	struct FString                                     sNotice;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              beginTime;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned char                                      byLevel;                                          		// 0x0010 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerController.PushGameNotice
// Flags: [ FUNC_Simulated ]
struct APlayerController_execPushGameNotice_Parms
{
	struct FString                                     sNotice;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.AllClientDeleteSuppliesPositions
// Flags: [ FUNC_Simulated ]
struct APlayerController_execAllClientDeleteSuppliesPositions_Parms
{
};

// Function Engine.PlayerController.ClientDeleteSuppliesPositions
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientDeleteSuppliesPositions_Parms
{
	class AActor*                                      act;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ChangeVoiceObjectLanguage
// Flags: 
struct APlayerController_execChangeVoiceObjectLanguage_Parms
{
	struct FString                                     voiceObjectName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     VoicePackageName;                                 		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     frontDivide;                                      		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     rearDivide;                                       		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.VoiceObjectNameSetting
// Flags: 
struct APlayerController_execVoiceObjectNameSetting_Parms
{
};

// Function Engine.PlayerController.SetVoiceLanguage
// Flags: 
struct APlayerController_execSetVoiceLanguage_Parms
{
	int                                                iTeamIndex;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     VoiceLanguage;                                    		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	unsigned long                                      bPackageChanged:1;                                		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.ClientSpawnInLogin
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSpawnInLogin_Parms
{
	int                                                iTeamIndex;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SpawnInLogin
// Flags: [ FUNC_Simulated ]
struct APlayerController_execSpawnInLogin_Parms
{
	int                                                iTeamIndex;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientIncHealthPack
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientIncHealthPack_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerIncHealthPack
// Flags: 
struct APlayerController_execServerIncHealthPack_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientBombDetection
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientBombDetection_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerBombDetection
// Flags: 
struct APlayerController_execServerBombDetection_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientQuickDemolition
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientQuickDemolition_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerQuickDemolition
// Flags: 
struct APlayerController_execServerQuickDemolition_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientQuickRespawn
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientQuickRespawn_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerQuickRespawn
// Flags: 
struct APlayerController_execServerQuickRespawn_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientIncExplosion
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientIncExplosion_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerIncExplosion
// Flags: 
struct APlayerController_execServerIncExplosion_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientAddStamina
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientAddStamina_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerAddStamina
// Flags: 
struct APlayerController_execServerAddStamina_Parms
{
	unsigned long                                      bAdd:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientCheckSkill
// Flags: 
struct APlayerController_execClientCheckSkill_Parms
{
};

// Function Engine.PlayerController.IsBombDetection
// Flags: 
struct APlayerController_execIsBombDetection_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ClientTestAllWeapons
// Flags: 
struct APlayerController_execClientTestAllWeapons_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ServerRequestWeapon
// Flags: 
struct APlayerController_execServerRequestWeapon_Parms
{
	int                                                iaWeaponID;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientTestWeapon
// Flags: 
struct APlayerController_execClientTestWeapon_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iaWeaponID;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              MaxAmmoPrimary;                                   		// 0x0008 ( 0x0004
	float                                              CurAmmoPrimary;                                   		// 0x000C ( 0x0004
};

// Function Engine.PlayerController.ClientSetHidden
// Flags: 
struct APlayerController_execClientSetHidden_Parms
{
};

// Function Engine.PlayerController.SelectPrevWeapon
// Flags: [ FUNC_Exec ]
struct APlayerController_execSelectPrevWeapon_Parms
{
};

// Function Engine.PlayerController.UpdateOption
// Flags: 
struct APlayerController_execUpdateOption_Parms
{
};

// Function Engine.PlayerController.PlaySoundRadioMessage
// Flags: 
struct APlayerController_execPlaySoundRadioMessage_Parms
{
	int                                                iKey;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iType;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                iCodeID;                                          		// 0x0008 ( 0x0004
	int                                                iTeam;                                            		// 0x000C ( 0x0004
	class AController*                                 C;                                                		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.SelectRadioMessage
// Flags: 
struct APlayerController_execSelectRadioMessage_Parms
{
	int                                                iKey;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fDeltaTime;                                       		// 0x0004 ( 0x0004
	float                                              fSendMessageLockTime;                             		// 0x0008 ( 0x0004
	int                                                iSendMessage;                                     		// 0x000C ( 0x0004
};

// Function Engine.PlayerController.PlaySoundKilled
// Flags: 
struct APlayerController_execPlaySoundKilled_Parms
{
	struct FString                                     strSound;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.NotifyKilled
// Flags: 
struct APlayerController_execNotifyKilled_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killed;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APawn*                                       Other;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTargetDied
// Flags: 
struct APlayerController_execClientSetViewTargetDied_Parms
{
	class AActor*                                      Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.HCheck
// Flags: [ FUNC_Exec ]
struct APlayerController_execHCheck_Parms
{
};

// Function Engine.PlayerController.Air
// Flags: [ FUNC_Exec ]
struct APlayerController_execAir_Parms
{
	class AwWeapon*                                    wAS;                                              		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.DLog
// Flags: [ FUNC_Exec ]
struct APlayerController_execDLog_Parms
{
	unsigned long                                      bEnable:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.SelectQSlot
// Flags: [ FUNC_Simulated ]
struct APlayerController_execSelectQSlot_Parms
{
	int                                                iIndex;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetGRITimes
// Flags: 
struct APlayerController_execClientSetGRITimes_Parms
{
	int                                                RemainingTime;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ElapsedTime;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                RemainingMinute;                                  		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSelectQSlot
// Flags: 
struct APlayerController_execClientSelectQSlot_Parms
{
	int                                                iIndex;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ForceChangeQSlotIndex
// Flags: 
struct APlayerController_execForceChangeQSlotIndex_Parms
{
	int                                                iIndex;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerSelectQSlot
// Flags: 
struct APlayerController_execServerSelectQSlot_Parms
{
	int                                                iIndex;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerWarp
// Flags: 
struct APlayerController_execServerWarp_Parms
{
};

// Function Engine.PlayerController.gggb
// Flags: [ FUNC_Exec ]
struct APlayerController_execgggb_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ggga
// Flags: [ FUNC_Exec ]
struct APlayerController_execggga_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ServerCallAirStrike
// Flags: 
struct APlayerController_execServerCallAirStrike_Parms
{
	class AController*                                 Caller;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ServerCallHelicopter
// Flags: 
struct APlayerController_execServerCallHelicopter_Parms
{
	class APawn*                                       lastHeliPawn;                                     		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 Caller;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ShowResultMenu
// Flags: [ FUNC_Simulated ]
struct APlayerController_execShowResultMenu_Parms
{
};

// Function Engine.PlayerController.DisplayDebug
// Flags: 
struct APlayerController_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.PlayerController.ShowVoteMenu
// Flags: [ FUNC_Exec ]
struct APlayerController_execShowVoteMenu_Parms
{
};

// Function Engine.PlayerController.LostChild
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventLostChild_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.GainedChild
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventGainedChild_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerChatRestriction
// Flags: 
struct APlayerController_execServerChatRestriction_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Type;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0008 ( 0x0004
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.PlayerController.ServerRequestBanInfo
// Flags: 
struct APlayerController_execServerRequestBanInfo_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerChatDebug
// Flags: 
struct APlayerController_execServerChatDebug_Parms
{
};

// Function Engine.PlayerController.ChatDebug
// Flags: [ FUNC_Exec ]
struct APlayerController_execChatDebug_Parms
{
};

// Function Engine.PlayerController.ClientSetActiveRoom
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetActiveRoom_Parms
{
	int                                                ChannelIndex;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerChangeVoiceChatMode
// Flags: 
struct APlayerController_execServerChangeVoiceChatMode_Parms
{
	unsigned long                                      bEnable:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerSetChatPassword
// Flags: 
struct APlayerController_execServerSetChatPassword_Parms
{
	struct FString                                     NewPassword;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ServerSpeak
// Flags: 
struct APlayerController_execServerSpeak_Parms
{
	int                                                ChannelIndex;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ChannelPassword;                                  		// 0x0004 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	class AVoiceChatRoom*                              VCR;                                              		// 0x0010 ( 0x0004
	int                                                Index;                                            		// 0x0014 ( 0x0004
};

// Function Engine.PlayerController.ServerLeaveVoiceChannel
// Flags: 
struct APlayerController_execServerLeaveVoiceChannel_Parms
{
	int                                                ChannelIndex;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AVoiceChatRoom*                              VCR;                                              		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.ServerJoinVoiceChannel
// Flags: 
struct APlayerController_execServerJoinVoiceChannel_Parms
{
	int                                                ChannelIndex;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ChannelPassword;                                  		// 0x0004 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x0010 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AVoiceChatRoom*                              VCR;                                              		// 0x0014 ( 0x0004
//	unsigned char                                      Result;                                           		// 0x0018 ( 0x0001
};

// Function Engine.PlayerController.FindChannelPassword
// Flags: [ FUNC_Simulated ]
struct APlayerController_execFindChannelPassword_Parms
{
	struct FString                                     ChannelName;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
};

// Function Engine.PlayerController.SetChannelPassword
// Flags: [ FUNC_Simulated ]
struct APlayerController_execSetChannelPassword_Parms
{
	struct FString                                     ChannelName;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ChannelPassword;                                  		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0018 ( 0x0004
};

// Function Engine.PlayerController.ChatBan
// Flags: [ FUNC_Simulated ]
struct APlayerController_execChatBan_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Type;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ChangeVoiceChatMode
// Flags: [ FUNC_Simulated ]
struct APlayerController_execChangeVoiceChatMode_Parms
{
	unsigned long                                      bEnable:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.AutoJoinVoiceChat
// Flags: [ FUNC_Simulated ]
struct APlayerController_execAutoJoinVoiceChat_Parms
{
};

// Function Engine.PlayerController.GetDefaultActiveChannel
// Flags: [ FUNC_Simulated ]
struct APlayerController_execGetDefaultActiveChannel_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     DefaultChannel;                                   		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.InitPrivateChatRoom
// Flags: 
struct APlayerController_execInitPrivateChatRoom_Parms
{
};

// Function Engine.PlayerController.InitializeVoiceChat
// Flags: [ FUNC_Simulated ]
struct APlayerController_execInitializeVoiceChat_Parms
{
};

// Function Engine.PlayerController.DisableVoiceChat
// Flags: [ FUNC_Exec ]
struct APlayerController_execDisableVoiceChat_Parms
{
	unsigned long                                      bCurrent:1;                                       		// 0x0000 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.EnableVoiceChat
// Flags: [ FUNC_Exec ]
struct APlayerController_execEnableVoiceChat_Parms
{
	unsigned long                                      bCurrent:1;                                       		// 0x0000 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.SetChatPassword
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetChatPassword_Parms
{
	struct FString                                     NewPassword;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SpeakLast
// Flags: [ FUNC_Exec ]
struct APlayerController_execSpeakLast_Parms
{
};

// Function Engine.PlayerController.SpeakDefault
// Flags: [ FUNC_Exec ]
struct APlayerController_execSpeakDefault_Parms
{
	struct FString                                     str;                                              		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Speak
// Flags: [ FUNC_Exec ]
struct APlayerController_execSpeak_Parms
{
	struct FString                                     ChannelTitle;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                idx;                                              		// 0x000C ( 0x0004
	class AVoiceChatRoom*                              VCR;                                              		// 0x0010 ( 0x0004
	struct FString                                     ChanPwd;                                          		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Leave
// Flags: [ FUNC_Exec ]
struct APlayerController_execLeave_Parms
{
	struct FString                                     ChannelTitle;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AVoiceChatRoom*                              VCR;                                              		// 0x000C ( 0x0004
	int                                                idx;                                              		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.Join
// Flags: [ FUNC_Exec ]
struct APlayerController_execJoin_Parms
{
	struct FString                                     ChanName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ChanPwd;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0018 ( 0x0004
	int                                                idx;                                              		// 0x001C ( 0x0004
	class AVoiceChatRoom*                              VCR;                                              		// 0x0020 ( 0x0004
};

// Function Engine.PlayerController.ServerVoiceCommand
// Flags: 
struct APlayerController_execServerVoiceCommand_Parms
{
	struct FString                                     RecognizedString;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Command
// Flags: [ FUNC_Exec ]
struct APlayerController_execCommand_Parms
{
	struct FString                                     RecognizedString;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.VoiceCommand
// Flags: [ FUNC_Event ]
struct APlayerController_eventVoiceCommand_Parms
{
	struct FString                                     RecognizedString;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     RawString;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.NeedNetNotify
// Flags: [ FUNC_Simulated ]
struct APlayerController_execNeedNetNotify_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.SetCustomRewardAnnouncerClass
// Flags: [ FUNC_Simulated ]
struct APlayerController_execSetCustomRewardAnnouncerClass_Parms
{
	struct FString                                     NewAnnouncerClass;                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SetCustomStatusAnnouncerClass
// Flags: [ FUNC_Simulated ]
struct APlayerController_execSetCustomStatusAnnouncerClass_Parms
{
	struct FString                                     NewAnnouncerClass;                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.GetCustomRewardAnnouncerClass
// Flags: [ FUNC_Simulated ]
struct APlayerController_execGetCustomRewardAnnouncerClass_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.GetCustomStatusAnnouncerClass
// Flags: [ FUNC_Simulated ]
struct APlayerController_execGetCustomStatusAnnouncerClass_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.DemoClientSetHUD
// Flags: [ FUNC_Simulated ]
struct APlayerController_execDemoClientSetHUD_Parms
{
	class UClass*                                      newHUDClass;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      newScoringClass;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerSetClientDemo
// Flags: 
struct APlayerController_execServerSetClientDemo_Parms
{
};

// Function Engine.PlayerController.StartClientDemoRec
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventStartClientDemoRec_Parms
{
};

// Function Engine.PlayerController.AdminGUI
// Flags: [ FUNC_Exec ]
struct APlayerController_execAdminGUI_Parms
{
};

// Function Engine.PlayerController.AdminLogout
// Flags: [ FUNC_Exec ]
struct APlayerController_execAdminLogout_Parms
{
};

// Function Engine.PlayerController.AdminReply
// Flags: 
struct APlayerController_execAdminReply_Parms
{
	struct FString                                     Reply;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ReportAdmin
// Flags: 
struct APlayerController_execReportAdmin_Parms
{
	struct FString                                     ReportText;                                       		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     str;                                              		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.AdminCommand
// Flags: 
struct APlayerController_execAdminCommand_Parms
{
	struct FString                                     CommandLine;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ServerAdminLogin
// Flags: 
struct APlayerController_execServerAdminLogin_Parms
{
	struct FString                                     CmdLine;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     uname;                                            		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     upass;                                            		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.AdminLogin
// Flags: [ FUNC_Exec ]
struct APlayerController_execAdminLogin_Parms
{
	struct FString                                     CmdLine;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.AdminDebug
// Flags: [ FUNC_Exec ]
struct APlayerController_execAdminDebug_Parms
{
	struct FString                                     CommandLine;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Admin
// Flags: [ FUNC_Exec ]
struct APlayerController_execAdmin_Parms
{
	struct FString                                     CommandLine;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Result;                                           		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.CanRestartPlayer
// Flags: 
struct APlayerController_execCanRestartPlayer_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.InvertLook
// Flags: [ FUNC_Exec ]
struct APlayerController_execInvertLook_Parms
{
	unsigned long                                      Result:1;                                         		// 0x0000 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.UseAdvCamShake
// Flags: [ FUNC_Simulated ]
struct APlayerController_execUseAdvCamShake_Parms
{
	unsigned long                                      bUse:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.UseStanceToggle
// Flags: [ FUNC_Simulated ]
struct APlayerController_execUseStanceToggle_Parms
{
	unsigned long                                      bUse:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.UseMouseRevision
// Flags: [ FUNC_Simulated ]
struct APlayerController_execUseMouseRevision_Parms
{
	unsigned long                                      bUse:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.InvertMouse
// Flags: [ FUNC_Exec ]
struct APlayerController_execInvertMouse_Parms
{
	struct FString                                     Invert;                                           		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.IsMouseInverted
// Flags: [ FUNC_Simulated ]
struct APlayerController_execIsMouseInverted_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ClientNetworkMessage
// Flags: [ FUNC_Event ]
struct APlayerController_eventClientNetworkMessage_Parms
{
	struct FString                                     ParamA;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ParamB;                                           		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ClientCloseMenu
// Flags: [ FUNC_Event ]
struct APlayerController_eventClientCloseMenu_Parms
{
	unsigned long                                      bCloseAll:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bCancel:1;                                        		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ClientReplaceMenu
// Flags: [ FUNC_Event ]
struct APlayerController_eventClientReplaceMenu_Parms
{
	struct FString                                     Menu;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bDisconnect:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     Msg1;                                             		// 0x0010 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Msg2;                                             		// 0x001C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ClientOpenMenu
// Flags: [ FUNC_Event ]
struct APlayerController_eventClientOpenMenu_Parms
{
	struct FString                                     Menu;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bDisconnect:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     Msg1;                                             		// 0x0010 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Msg2;                                             		// 0x001C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.UnPressButtons
// Flags: [ FUNC_Event ]
struct APlayerController_eventUnPressButtons_Parms
{
};

// Function Engine.PlayerController.ChangeAlwaysMouseLook
// Flags: 
struct APlayerController_execChangeAlwaysMouseLook_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ChangeStairLook
// Flags: 
struct APlayerController_execChangeStairLook_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.StopPawnsAndControllers
// Flags: [ FUNC_Simulated ]
struct APlayerController_execStopPawnsAndControllers_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004
	class AController*                                 C;                                                		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.ClientFadeToColor
// Flags: 
struct APlayerController_execClientFadeToColor_Parms
{
};

// Function Engine.PlayerController.ClientFadeToBlackWhite2
// Flags: 
struct APlayerController_execClientFadeToBlackWhite2_Parms
{
};

// Function Engine.PlayerController.ClientFadeToBlackWhite
// Flags: 
struct APlayerController_execClientFadeToBlackWhite_Parms
{
};

// Function Engine.PlayerController.ClientOnEndIntervented
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientOnEndIntervented_Parms
{
};

// Function Engine.PlayerController.ClientOnBeginIntervented
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientOnBeginIntervented_Parms
{
};

// Function Engine.PlayerController.ClientOnBeginRound
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientOnBeginRound_Parms
{
};

// Function Engine.PlayerController.ClientOnEndWaitingForStart
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientOnEndWaitingForStart_Parms
{
};

// Function Engine.PlayerController.ClientOnBeginWaitingForStart
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientOnBeginWaitingForStart_Parms
{
};

// Function Engine.PlayerController.GotoDefaultState
// Flags: [ FUNC_Event ]
struct APlayerController_eventGotoDefaultState_Parms
{
};

// Function Engine.PlayerController.TryServerViewNextPlayer
// Flags: 
struct APlayerController_execTryServerViewNextPlayer_Parms
{
	unsigned long                                      cannotPickSelf:1;                                 		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      IsBack:1;                                         		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ViewStyle;                                        		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.IsSpecialMode_Grenade
// Flags: 
struct APlayerController_execIsSpecialMode_Grenade_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bPermit:1;                                        		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.IsSpecialMode_Pistol
// Flags: 
struct APlayerController_execIsSpecialMode_Pistol_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bPermit:1;                                        		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.IsSpecialMode_MG
// Flags: 
struct APlayerController_execIsSpecialMode_MG_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bPermit:1;                                        		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.IsSpecialMode_SG
// Flags: 
struct APlayerController_execIsSpecialMode_SG_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bPermit:1;                                        		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.IsSpecialMode_FlameThrower
// Flags: 
struct APlayerController_execIsSpecialMode_FlameThrower_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bPermit:1;                                        		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.IsSpecialMode_TEST
// Flags: 
struct APlayerController_execIsSpecialMode_TEST_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bPermit:1;                                        		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.IsSpecialMode_Hold_Weapon
// Flags: 
struct APlayerController_execIsSpecialMode_Hold_Weapon_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bPermit:1;                                        		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.IsSpecialMode_Knife
// Flags: 
struct APlayerController_execIsSpecialMode_Knife_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.IsSpecialMode_SR
// Flags: 
struct APlayerController_execIsSpecialMode_SR_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.IsSpecialMode_RPG
// Flags: 
struct APlayerController_execIsSpecialMode_RPG_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.IsPermitSpecialMode
// Flags: 
struct APlayerController_execIsPermitSpecialMode_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	int                                                KeyF;                                             		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwMatchMaker*                                kMM;                                              		// 0x0014 ( 0x0004
//	unsigned long                                      bPermit:1;                                        		// 0x0018 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.ProcessSelectQuickSlot
// Flags: 
struct APlayerController_execProcessSelectQuickSlot_Parms
{
	int                                                iIndex;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SelectQuickSlot
// Flags: 
struct APlayerController_execSelectQuickSlot_Parms
{
	int                                                iIndex;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientBecameActivePlayer
// Flags: 
struct APlayerController_execClientBecameActivePlayer_Parms
{
};

// Function Engine.PlayerController.BecomeActivePlayer
// Flags: 
struct APlayerController_execBecomeActivePlayer_Parms
{
};

// Function Engine.PlayerController.ClientBecameSpectator
// Flags: 
struct APlayerController_execClientBecameSpectator_Parms
{
};

// Function Engine.PlayerController.BecomeSpectator
// Flags: 
struct APlayerController_execBecomeSpectator_Parms
{
};

// Function Engine.PlayerController.ServerSpectate
// Flags: 
struct APlayerController_execServerSpectate_Parms
{
	unsigned long                                      cannotPickSelf:1;                                 		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.LoadPlayers
// Flags: 
struct APlayerController_execLoadPlayers_Parms
{
};

// Function Engine.PlayerController.ServerViewSelf
// Flags: 
struct APlayerController_execServerViewSelf_Parms
{
};

// Function Engine.PlayerController.FindLostSpectators
// Flags: 
struct APlayerController_execFindLostSpectators_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.ServerViewNextPlayer
// Flags: 
struct APlayerController_execServerViewNextPlayer_Parms
{
	unsigned long                                      cannotPickSelf:1;                                 		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      IsPrevious:1;                                     		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ViewStyle;                                        		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x000C ( 0x0004
	class AController*                                 pick;                                             		// 0x0010 ( 0x0004
	class AController*                                 iterC;                                            		// 0x0014 ( 0x0004
	class AController*                                 iterStart;                                        		// 0x0018 ( 0x0004
	unsigned long                                      bFound:1;                                         		// 0x001C ( 0x0004 [0x00000001]
	unsigned long                                      bRealSpec:1;                                      		// 0x0020 ( 0x0004 [0x00000001]
	unsigned long                                      bWasSpec:1;                                       		// 0x0024 ( 0x0004 [0x00000001]
	class ATeamInfo*                                   RealTeam;                                         		// 0x0028 ( 0x0004
};

// Function Engine.PlayerController.IsSpectating
// Flags: 
struct APlayerController_execIsSpectating_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.FixedVelocity
// Flags: 
struct APlayerController_execFixedVelocity_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UPlayerInput*                                pInput;                                           		// 0x0004 ( 0x0004
	float                                              fTest;                                            		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.FixedSprintState
// Flags: 
struct APlayerController_execFixedSprintState_Parms
{
};

// Function Engine.PlayerController.SetDodging
// Flags: [ FUNC_Simulated ]
struct APlayerController_execSetDodging_Parms
{
	unsigned long                                      Enabled:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.DodgingIsEnabled
// Flags: [ FUNC_Simulated ]
struct APlayerController_execDodgingIsEnabled_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ClearDoubleClick
// Flags: 
struct APlayerController_execClearDoubleClick_Parms
{
};

// Function Engine.PlayerController.UpdateRotation
// Flags: 
struct APlayerController_execUpdateRotation_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              maxPitch;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    NewRotation;                                      		// 0x0008 ( 0x000C
	struct FRotator                                    ViewRotation;                                     		// 0x0014 ( 0x000C
	int                                                NewYaw;                                           		// 0x0020 ( 0x0004
};

// Function Engine.PlayerController.TurnAround
// Flags: 
struct APlayerController_execTurnAround_Parms
{
};

// Function Engine.PlayerController.TurnTowardNearestEnemy
// Flags: 
struct APlayerController_execTurnTowardNearestEnemy_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.SetViewValue
// Flags: 
struct APlayerController_execSetViewValue_Parms
{
};

// Function Engine.PlayerController.ServerSetViewValue
// Flags: 
struct APlayerController_execServerSetViewValue_Parms
{
	int                                                iShake;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iShock;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                iBreath;                                          		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.wViewBreath
// Flags: 
struct APlayerController_execwViewBreath_Parms
{
};

// Function Engine.PlayerController.ServerSetwBreathRotation
// Flags: 
struct APlayerController_execServerSetwBreathRotation_Parms
{
	int                                                iBreath;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.wViewShock
// Flags: 
struct APlayerController_execwViewShock_Parms
{
	float                                              fDeltaTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerSetwShockRotation
// Flags: 
struct APlayerController_execServerSetwShockRotation_Parms
{
	int                                                iShock;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SetShakeState
// Flags: 
struct APlayerController_execSetShakeState_Parms
{
	unsigned char                                      EShakeState;                                      		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerController.wViewShake
// Flags: 
struct APlayerController_execwViewShake_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     v1;                                               		// 0x0004 ( 0x000C
	int                                                i1;                                               		// 0x0010 ( 0x0004
	int                                                i2;                                               		// 0x0014 ( 0x0004
	float                                              fDecayStayTime;                                   		// 0x0018 ( 0x0004
	float                                              fDecayRatio;                                      		// 0x001C ( 0x0004
	float                                              fInputValue1;                                     		// 0x0020 ( 0x0004
	float                                              fInputValue2;                                     		// 0x0024 ( 0x0004
	int                                                iCount;                                           		// 0x0028 ( 0x0004
	float                                              fovSpeed;                                         		// 0x002C ( 0x0004
};

// Function Engine.PlayerController.ReCalDecayVelocity
// Flags: 
struct APlayerController_execReCalDecayVelocity_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                iDist1;                                           		// 0x000C ( 0x0004
//	int                                                iDist2;                                           		// 0x0010 ( 0x0004
//	struct FVector                                     TempShakeVelocity;                                		// 0x0014 ( 0x000C
};

// Function Engine.PlayerController.wViewAttacked
// Flags: 
struct APlayerController_execwViewAttacked_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.GetFovSpeed
// Flags: 
struct APlayerController_execGetFovSpeed_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ServerSetwShakeRotation
// Flags: 
struct APlayerController_execServerSetwShakeRotation_Parms
{
	int                                                iShake;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ViewShake
// Flags: 
struct APlayerController_execViewShake_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    TmShakeRot;                                       		// 0x0004 ( 0x000C
};

// Function Engine.PlayerController.ServerSetShakeRotation
// Flags: [ FUNC_Simulated ]
struct APlayerController_execServerSetShakeRotation_Parms
{
	struct FRotator                                    OrgShakeRot;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.PlayerController.UpdateShakeRotComponent
// Flags: 
struct APlayerController_execUpdateShakeRotComponent_Parms
{
	float                                              Max;                                              		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                Current;                                          		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              Rate;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              Time;                                             		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              dt;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bHigher:1;                                        		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm ]
	float                                              fCurrent;                                         		// 0x0018 ( 0x0004
};

// Function Engine.PlayerController.CheckShake
// Flags: 
struct APlayerController_execCheckShake_Parms
{
	float                                              MaxOffset;                                        		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              offset;                                           		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              Rate;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              Time;                                             		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              dt;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bHigher:1;                                        		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm ]
	float                                              fTemp;                                            		// 0x0018 ( 0x0004
	float                                              fTempRate;                                        		// 0x001C ( 0x0004
};

// Function Engine.PlayerController.BlendRot
// Flags: 
struct APlayerController_execBlendRot_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                BlendC;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                NewC;                                             		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.PlayerCalcView
// Flags: [ FUNC_Event ]
struct APlayerController_eventPlayerCalcView_Parms
{
	class AActor*                                      ViewActor;                                        		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CameraLocation;                                   		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	class APawn*                                       PTarget;                                          		// 0x001C ( 0x0004
	struct FVector                                     vDir;                                             		// 0x0020 ( 0x000C
};

// Function Engine.PlayerController.DummyRotation
// Flags: 
struct APlayerController_execDummyRotation_Parms
{
	struct FRotator                                    NewRotation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.PlayerController.CacheCalcView
// Flags: 
struct APlayerController_execCacheCalcView_Parms
{
	class AActor*                                      ViewActor;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     CameraLocation;                                   		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0010 ( 0x000C[ CPF_Parm ]
};

// Function Engine.PlayerController.GetViewRotation
// Flags: [ FUNC_Simulated ]
struct APlayerController_execGetViewRotation_Parms
{
	struct FRotator                                    ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.RemoveAllPostProcessEffects
// Flags: [ FUNC_Exec ]
struct APlayerController_execRemoveAllPostProcessEffects_Parms
{
};

// Function Engine.PlayerController.AdditionalPPEffectsOff
// Flags: 
struct APlayerController_execAdditionalPPEffectsOff_Parms
{
	int                                                PP_EffectIndex;                                   		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.SSAO
// Flags: [ FUNC_Exec ]
struct APlayerController_execSSAO_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.FadeToBlackWhite
// Flags: [ FUNC_Exec ]
struct APlayerController_execFadeToBlackWhite_Parms
{
	float                                              f_Fade_Time;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                PP_EffectIndex;                                   		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.FadeToColor
// Flags: [ FUNC_Exec ]
struct APlayerController_execFadeToColor_Parms
{
	float                                              f_Fade_Time;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                PP_EffectIndex;                                   		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.PPEffectOff
// Flags: [ FUNC_Exec ]
struct APlayerController_execPPEffectOff_Parms
{
	struct FName                                       PP_EffectClass;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                PP_EffectIndex;                                   		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.PPEffectOn
// Flags: [ FUNC_Exec ]
struct APlayerController_execPPEffectOn_Parms
{
	struct FName                                       PP_EffectClass;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                PP_EffectIndex;                                   		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.CP
// Flags: [ FUNC_Exec ]
struct APlayerController_execCP_Parms
{
	class UClass*                                      PP_EffectClass;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.CreatePostProcessEffect
// Flags: [ FUNC_Exec ]
struct APlayerController_execCreatePostProcessEffect_Parms
{
	class UClass*                                      PP_EffectClass;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.RemovePostProcessEffect
// Flags: [ FUNC_Event ]
struct APlayerController_eventRemovePostProcessEffect_Parms
{
	class UPostProcessEffect*                          PP_ExEffect;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                PP_EffectIndex;                                   		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.AddPostProcessEffect
// Flags: [ FUNC_Event ]
struct APlayerController_eventAddPostProcessEffect_Parms
{
	class UPostProcessEffect*                          PP_NewEffect;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      PP_RemoveExisting:1;                              		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      ElementIndex;                                     		// 0x0008 ( 0x0001
};

// Function Engine.PlayerController.RemoveAllCameraEffects
// Flags: [ FUNC_Exec ]
struct APlayerController_execRemoveAllCameraEffects_Parms
{
};

// Function Engine.PlayerController.CreateCameraEffect
// Flags: [ FUNC_Exec ]
struct APlayerController_execCreateCameraEffect_Parms
{
	class UClass*                                      EffectClass;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.RemoveCameraEffect
// Flags: [ FUNC_Event ]
struct APlayerController_eventRemoveCameraEffect_Parms
{
	class UCameraEffect*                               ExEffect;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                EffectIndex;                                      		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.AddCameraEffect
// Flags: [ FUNC_Event ]
struct APlayerController_eventAddCameraEffect_Parms
{
	class UCameraEffect*                               NewEffect;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      RemoveExisting:1;                                 		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.RotateByAttacked
// Flags: 
struct APlayerController_execRotateByAttacked_Parms
{
	struct FVector                                     CameraLocation;                                   		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.PlayerController.CalcFirstPersonView
// Flags: 
struct APlayerController_execCalcFirstPersonView_Parms
{
	struct FVector                                     CameraLocation;                                   		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     X;                                                		// 0x0018 ( 0x000C
	struct FVector                                     Y;                                                		// 0x0024 ( 0x000C
	struct FVector                                     Z;                                                		// 0x0030 ( 0x000C
	struct FVector                                     AmbShakeOffset;                                   		// 0x003C ( 0x000C
	struct FVector                                     vTemp;                                            		// 0x0048 ( 0x000C
	struct FRotator                                    AmbShakeRot;                                      		// 0x0054 ( 0x000C
	float                                              FalloffScaling;                                   		// 0x0060 ( 0x0004
};

// Function Engine.PlayerController.CalcBehindView
// Flags: 
struct APlayerController_execCalcBehindView_Parms
{
	struct FVector                                     CameraLocation;                                   		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	float                                              dist;                                             		// 0x0018 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bDiedSelf:1;                                      		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FRotator                                    killerRot;                                        		// 0x0020 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     View;                                             		// 0x002C ( 0x000C
	struct FVector                                     HitLocation;                                      		// 0x0038 ( 0x000C
	struct FVector                                     HitNormal;                                        		// 0x0044 ( 0x000C
	float                                              ViewDist;                                         		// 0x0050 ( 0x0004
	float                                              RealDist;                                         		// 0x0054 ( 0x0004
	struct FVector                                     globalX;                                          		// 0x0058 ( 0x000C
	struct FVector                                     globalY;                                          		// 0x0064 ( 0x000C
	struct FVector                                     globalZ;                                          		// 0x0070 ( 0x000C
	struct FVector                                     localX;                                           		// 0x007C ( 0x000C
	struct FVector                                     localY;                                           		// 0x0088 ( 0x000C
	struct FVector                                     localZ;                                           		// 0x0094 ( 0x000C
};

// Function Engine.PlayerController.AdjustView
// Flags: [ FUNC_Event ]
struct APlayerController_eventAdjustView_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fFOVSpeed;                                        		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.NotifyLanded
// Flags: 
struct APlayerController_execNotifyLanded_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.AdjustAim
// Flags: 
struct APlayerController_execAdjustAim_Parms
{
	struct FFireProperties                             FiredAmmunition;                                  		// 0x0000 ( 0x0014[ CPF_Parm ]
	struct FVector                                     projStart;                                        		// 0x0014 ( 0x000C[ CPF_Parm ]
	int                                                AimError;                                         		// 0x0020 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.TestMeleeAttackMode
// Flags: 
struct APlayerController_execTestMeleeAttackMode_Parms
{
	unsigned long                                      bMelee:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.SetAimMode
// Flags: 
struct APlayerController_execSetAimMode_Parms
{
	unsigned long                                      bAim:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerToggleAimMode
// Flags: [ FUNC_Simulated ]
struct APlayerController_execServerToggleAimMode_Parms
{
	unsigned long                                      bToggle:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientToggleAimMode
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientToggleAimMode_Parms
{
	unsigned long                                      bToggle:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.PlayerMove
// Flags: 
struct APlayerController_execPlayerMove_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.IsBehindView
// Flags: 
struct APlayerController_execIsBehindView_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.SendPingInGame
// Flags: [ FUNC_Simulated ]
struct APlayerController_execSendPingInGame_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwMatchMaker*                                kMM;                                              		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.ServerSetDClickMove
// Flags: 
struct APlayerController_execServerSetDClickMove_Parms
{
};

// Function Engine.PlayerController.DoPosture_CHINA
// Flags: 
struct APlayerController_execDoPosture_CHINA_Parms
{
};

// Function Engine.PlayerController.DoPosture_KR
// Flags: 
struct APlayerController_execDoPosture_KR_Parms
{
};

// Function Engine.PlayerController.DoPosture
// Flags: 
struct APlayerController_execDoPosture_Parms
{
};

// Function Engine.PlayerController.TickInput
// Flags: [ FUNC_Simulated ]
struct APlayerController_execTickInput_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.CheckPerformence
// Flags: [ FUNC_Simulated ]
struct APlayerController_execCheckPerformence_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwMatchMaker*                                MM;                                               		// 0x0004 ( 0x0004
	int                                                iResultAvgFPS;                                    		// 0x0008 ( 0x0004
	int                                                iResultAvgPing;                                   		// 0x000C ( 0x0004
	int                                                iPing;                                            		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.PlayerTick
// Flags: [ FUNC_Event ]
struct APlayerController_eventPlayerTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwMatchMaker*                                MM;                                               		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.TravelPostAccept
// Flags: [ FUNC_Event ]
struct APlayerController_eventTravelPostAccept_Parms
{
};

// Function Engine.PlayerController.ChangedWeapon
// Flags: 
struct APlayerController_execChangedWeapon_Parms
{
};

// Function Engine.PlayerController.ServerToggleBehindView
// Flags: 
struct APlayerController_execServerToggleBehindView_Parms
{
};

// Function Engine.PlayerController.ToggleBehindView
// Flags: [ FUNC_Exec ]
struct APlayerController_execToggleBehindView_Parms
{
};

// Function Engine.PlayerController.BehindView
// Flags: [ FUNC_Exec ]
struct APlayerController_execBehindView_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientReStart
// Flags: 
struct APlayerController_execClientReStart_Parms
{
	class APawn*                                       NewPawn;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bNewViewTarget:1;                                 		// 0x0004 ( 0x0004 [0x00000001]
	int                                                RandQSlot;                                        		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.EnterStartState
// Flags: 
struct APlayerController_execEnterStartState_Parms
{
	struct FName                                       NewState;                                         		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.Restart
// Flags: 
struct APlayerController_execRestart_Parms
{
};

// Function Engine.PlayerController.SetProgressTime
// Flags: [ FUNC_Exec | FUNC_Event ]
struct APlayerController_eventSetProgressTime_Parms
{
	float                                              t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SetProgressMessage
// Flags: [ FUNC_Exec | FUNC_Event ]
struct APlayerController_eventSetProgressMessage_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     S;                                                		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class FColor                                       C;                                                		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClearProgressMessages
// Flags: [ FUNC_Exec ]
struct APlayerController_execClearProgressMessages_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ProgressCommand
// Flags: [ FUNC_Event ]
struct APlayerController_eventProgressCommand_Parms
{
	struct FString                                     Cmd;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Msg1;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Msg2;                                             		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     C;                                                		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     V;                                                		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SwitchLevel
// Flags: [ FUNC_Exec ]
struct APlayerController_execSwitchLevel_Parms
{
	struct FString                                     URL;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ServerChangeTeam3
// Flags: 
struct APlayerController_execServerChangeTeam3_Parms
{
	int                                                N;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ATeamInfo*                                   OldTeam;                                          		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.ServerChangeTeam
// Flags: 
struct APlayerController_execServerChangeTeam_Parms
{
	int                                                N;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ATeamInfo*                                   OldTeam;                                          		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.ChangeTeam
// Flags: [ FUNC_Exec ]
struct APlayerController_execChangeTeam_Parms
{
	int                                                N;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SwitchTeam3
// Flags: [ FUNC_Exec ]
struct APlayerController_execSwitchTeam3_Parms
{
};

// Function Engine.PlayerController.SwitchTeam
// Flags: [ FUNC_Exec ]
struct APlayerController_execSwitchTeam_Parms
{
};

// Function Engine.PlayerController.ChangeName
// Flags: 
struct APlayerController_execChangeName_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ChangeVoiceType
// Flags: 
struct APlayerController_execChangeVoiceType_Parms
{
	struct FString                                     NewVoiceType;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SetVoice
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetVoice_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SetName
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetName_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Suicide
// Flags: [ FUNC_Exec ]
struct APlayerController_execSuicide_Parms
{
	float                                              MinSuicideInterval;                               		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ServerUse
// Flags: 
struct APlayerController_execServerUse_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AActor*                                      A;                                                		// 0x0004 ( 0x0004
//	class AVehicle*                                    DrivenVehicle;                                    		// 0x0008 ( 0x0004
//	class AVehicle*                                    EntryVehicle;                                     		// 0x000C ( 0x0004
//	class AVehicle*                                    V;                                                		// 0x0010 ( 0x0004
//	class AwWeapon*                                    OldWeapon;                                        		// 0x0014 ( 0x0004
};

// Function Engine.PlayerController.Use
// Flags: [ FUNC_Exec ]
struct APlayerController_execUse_Parms
{
};

// Function Engine.PlayerController.AltFire
// Flags: [ FUNC_Exec ]
struct APlayerController_execAltFire_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.Fire
// Flags: [ FUNC_Exec ]
struct APlayerController_execFire_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ActivateItem
// Flags: [ FUNC_Exec ]
struct APlayerController_execActivateItem_Parms
{
};

// Function Engine.PlayerController.PrevItem
// Flags: [ FUNC_Exec ]
struct APlayerController_execPrevItem_Parms
{
	class AInventory*                                  Inv;                                              		// 0x0000 ( 0x0004
	class APowerups*                                   LastItem;                                         		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.IsSpecialGrenade
// Flags: 
struct APlayerController_execIsSpecialGrenade_Parms
{
	class AwWeapon*                                    kWeapon;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.IsFragGrenade
// Flags: 
struct APlayerController_execIsFragGrenade_Parms
{
	class AwWeapon*                                    kWeapon;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.GetWeaponByWeaponType
// Flags: [ FUNC_Simulated ]
struct APlayerController_execGetWeaponByWeaponType_Parms
{
	unsigned char                                      nWeaponType;                                      		// 0x0000 ( 0x0001[ CPF_Parm ]
	class AInventory*                                  SkipWeapon;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Inv;                                              		// 0x000C ( 0x0004
//	int                                                Count;                                            		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.GetWeaponByInventoryGroup
// Flags: [ FUNC_Simulated ]
struct APlayerController_execGetWeaponByInventoryGroup_Parms
{
	unsigned char                                      f;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	class AInventory*                                  SkipWeapon;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Inv;                                              		// 0x000C ( 0x0004
//	int                                                Count;                                            		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.GetWeaponByID
// Flags: [ FUNC_Simulated ]
struct APlayerController_execGetWeaponByID_Parms
{
	int                                                iWeaponID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AInventory*                                  SkipWeapon;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Inv;                                              		// 0x000C ( 0x0004
//	int                                                Count;                                            		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.GetWeapon
// Flags: [ FUNC_Exec ]
struct APlayerController_execGetWeapon_Parms
{
	class UClass*                                      NewWeaponClass;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AInventory*                                  Inv;                                              		// 0x0004 ( 0x0004
	int                                                Count;                                            		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.ThrowsTheWeapon
// Flags: [ FUNC_Exec ]
struct APlayerController_execThrowsTheWeapon_Parms
{
	unsigned long                                      hasBomb:1;                                        		// 0x0000 ( 0x0004 [0x00000001]
	unsigned long                                      bEnableThrowBomb:1;                               		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.SwitchWeapon
// Flags: [ FUNC_Exec ]
struct APlayerController_execSwitchWeapon_Parms
{
	unsigned char                                      f;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      bQuickGr:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.PipedSwitchWeapon
// Flags: [ FUNC_Exec ]
struct APlayerController_execPipedSwitchWeapon_Parms
{
	unsigned char                                      f;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerController.NextWeapon
// Flags: [ FUNC_Exec ]
struct APlayerController_execNextWeapon_Parms
{
};

// Function Engine.PlayerController.PrevWeapon
// Flags: [ FUNC_Exec ]
struct APlayerController_execPrevWeapon_Parms
{
};

// Function Engine.PlayerController.ServerThrowWeapon
// Flags: 
struct APlayerController_execServerThrowWeapon_Parms
{
	struct FVector                                     TossVel;                                          		// 0x0000 ( 0x000C
};

// Function Engine.PlayerController.ThrowWeapon
// Flags: [ FUNC_Exec ]
struct APlayerController_execThrowWeapon_Parms
{
};

// Function Engine.PlayerController.ActivateInventoryItem
// Flags: [ FUNC_Exec ]
struct APlayerController_execActivateInventoryItem_Parms
{
	class UClass*                                      InvItem;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APowerups*                                   Inv;                                              		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.ShowMidGameMenu
// Flags: 
struct APlayerController_execShowMidGameMenu_Parms
{
	unsigned long                                      bPause:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ShowMenu
// Flags: [ FUNC_Exec ]
struct APlayerController_execShowMenu_Parms
{
	unsigned long                                      bCloseHUDScreen:1;                                		// 0x0000 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.ServerPause
// Flags: 
struct APlayerController_execServerPause_Parms
{
};

// Function Engine.PlayerController.Pause
// Flags: [ FUNC_Exec ]
struct APlayerController_execPause_Parms
{
};

// Function Engine.PlayerController.SetPause
// Flags: 
struct APlayerController_execSetPause_Parms
{
	unsigned long                                      bPause:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.QuickLoad
// Flags: [ FUNC_Exec ]
struct APlayerController_execQuickLoad_Parms
{
};

// Function Engine.PlayerController.QuickSave
// Flags: [ FUNC_Exec ]
struct APlayerController_execQuickSave_Parms
{
};

// Function Engine.PlayerController.LocalTravel
// Flags: [ FUNC_Exec ]
struct APlayerController_execLocalTravel_Parms
{
	struct FString                                     URL;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.RestartLevel
// Flags: [ FUNC_Exec ]
struct APlayerController_execRestartLevel_Parms
{
};

// Function Engine.PlayerController.ServerSpeech
// Flags: 
struct APlayerController_execServerSpeech_Parms
{
	struct FName                                       Type;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Index;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Callsign;                                         		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Speech
// Flags: [ FUNC_Exec ]
struct APlayerController_execSpeech_Parms
{
	struct FName                                       Type;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Index;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Callsign;                                         		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.DoProneBtn
// Flags: 
struct APlayerController_execDoProneBtn_Parms
{
	unsigned char                                      byDown;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerController.DoDuckBtn
// Flags: 
struct APlayerController_execDoDuckBtn_Parms
{
	unsigned char                                      byDown;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerController.DoDuckBtn_New
// Flags: 
struct APlayerController_execDoDuckBtn_New_Parms
{
	unsigned char                                      byDown;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerController.DoProne
// Flags: 
struct APlayerController_execDoProne_Parms
{
};

// Function Engine.PlayerController.DoDuck
// Flags: 
struct APlayerController_execDoDuck_Parms
{
};

// Function Engine.PlayerController.Jump
// Flags: [ FUNC_Exec ]
struct APlayerController_execJump_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.Typing
// Flags: 
struct APlayerController_execTyping_Parms
{
	unsigned long                                      bTyping:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.damageAttitudeTo
// Flags: 
struct APlayerController_execdamageAttitudeTo_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Damage;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ShakeViewEvent
// Flags: [ FUNC_Event ]
struct APlayerController_eventShakeViewEvent_Parms
{
	struct FVector                                     shRotMag;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     shRotRate;                                        		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              shRotTime;                                        		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FVector                                     shOffsetMag;                                      		// 0x001C ( 0x000C[ CPF_Parm ]
	struct FVector                                     shOffsetRate;                                     		// 0x0028 ( 0x000C[ CPF_Parm ]
	float                                              shOffsetTime;                                     		// 0x0034 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SetAmbientShake
// Flags: [ FUNC_Event ]
struct APlayerController_eventSetAmbientShake_Parms
{
	float                                              FalloffStartTime;                                 		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              FalloffTime;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     OffsetMag;                                        		// 0x0008 ( 0x000C[ CPF_Parm ]
	float                                              OffsetFreq;                                       		// 0x0014 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    RotMag;                                           		// 0x0018 ( 0x000C[ CPF_Parm ]
	float                                              RotFreq;                                          		// 0x0024 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.StopViewShaking
// Flags: 
struct APlayerController_execStopViewShaking_Parms
{
};

// Function Engine.PlayerController.wShakeView
// Flags: 
struct APlayerController_execwShakeView_Parms
{
	int                                                iPitch;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iYaw;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              fSpeed;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              fDecel;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              fStayTime;                                        		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              fDecay;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              fDecayFastTime;                                   		// 0x0018 ( 0x0004[ CPF_Parm ]
	int                                                iDist1;                                           		// 0x001C ( 0x0004
	int                                                iDist2;                                           		// 0x0020 ( 0x0004
};

// Function Engine.PlayerController.wShockView
// Flags: 
struct APlayerController_execwShockView_Parms
{
	float                                              fForce;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     vDir;                                             		// 0x0004 ( 0x000C
	struct FRotator                                    rDir;                                             		// 0x0010 ( 0x000C
};

// Function Engine.PlayerController.wBreathView
// Flags: 
struct APlayerController_execwBreathView_Parms
{
	struct FRotator                                    rBreath;                                          		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.PlayerController.ShakeView
// Flags: 
struct APlayerController_execShakeView_Parms
{
	struct FVector                                     shRotMag;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     shRotRate;                                        		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              shRotTime;                                        		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FVector                                     shOffsetMag;                                      		// 0x001C ( 0x000C[ CPF_Parm ]
	struct FVector                                     shOffsetRate;                                     		// 0x0028 ( 0x000C[ CPF_Parm ]
	float                                              shOffsetTime;                                     		// 0x0034 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientDamageShake
// Flags: 
struct APlayerController_execClientDamageShake_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.CientSetHitSprintDelay
// Flags: 
struct APlayerController_execCientSetHitSprintDelay_Parms
{
};

// Function Engine.PlayerController.DamageShake
// Flags: 
struct APlayerController_execDamageShake_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientAdjustGlow
// Flags: 
struct APlayerController_execClientAdjustGlow_Parms
{
	float                                              Scale;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     fog;                                              		// 0x0004 ( 0x000C[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientFlash
// Flags: 
struct APlayerController_execClientFlash_Parms
{
	float                                              Scale;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     fog;                                              		// 0x0004 ( 0x000C[ CPF_Parm ]
};

// Function Engine.PlayerController.SetFlashScaling
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetFlashScaling_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SetFOVAngle
// Flags: 
struct APlayerController_execSetFOVAngle_Parms
{
	float                                              NewFOV;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerRestartGame
// Flags: 
struct APlayerController_execServerRestartGame_Parms
{
};

// Function Engine.PlayerController.CallServerMove
// Flags: 
struct APlayerController_execCallServerMove_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel;                                          		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbRun:1;                                        		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbPendingJumpStatus:1;                          		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbJumpStatus:1;                                 		// 0x002C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDoubleJump:1;                                 		// 0x0030 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      DoubleClickMove;                                  		// 0x0034 ( 0x0001[ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x0035 ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x0038 ( 0x0004[ CPF_Parm ]
	unsigned char                                      OldTimeDelta;                                     		// 0x003C ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	int                                                OldAccel;                                         		// 0x0040 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      PendingCompress;                                  		// 0x0044 ( 0x0001
	unsigned long                                      bCombine:1;                                       		// 0x0048 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.ReplicateMove
// Flags: 
struct APlayerController_execReplicateMove_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     NewAccel;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned char                                      DoubleClickMove;                                  		// 0x0010 ( 0x0001[ CPF_Parm ]
	struct FRotator                                    DeltaRot;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class ASavedMove*                                  NewMove;                                          		// 0x0020 ( 0x0004
	class ASavedMove*                                  OldMove;                                          		// 0x0024 ( 0x0004
	class ASavedMove*                                  AlmostLastMove;                                   		// 0x0028 ( 0x0004
	class ASavedMove*                                  LastMove;                                         		// 0x002C ( 0x0004
	unsigned char                                      ClientRoll;                                       		// 0x0030 ( 0x0001
	float                                              OldTimeDelta;                                     		// 0x0034 ( 0x0004
	float                                              NetMoveDelta;                                     		// 0x0038 ( 0x0004
	int                                                OldAccel;                                         		// 0x003C ( 0x0004
	struct FVector                                     BuildAccel;                                       		// 0x0040 ( 0x000C
	struct FVector                                     AccelNorm;                                        		// 0x004C ( 0x000C
	struct FVector                                     MoveLoc;                                          		// 0x0058 ( 0x000C
	struct FVector                                     CompareAccel;                                     		// 0x0064 ( 0x000C
	unsigned long                                      bPendingJumpStatus:1;                             		// 0x0070 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.CompressAccel
// Flags: 
struct APlayerController_execCompressAccel_Parms
{
	int                                                C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.GetFreeMove
// Flags: [ FUNC_Final ]
struct APlayerController_execGetFreeMove_Parms
{
	class ASavedMove*                                  ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class ASavedMove*                                  S;                                                		// 0x0004 ( 0x0004
//	class ASavedMove*                                  first;                                            		// 0x0008 ( 0x0004
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.PlayerController.ClientUpdatePosition
// Flags: 
struct APlayerController_execClientUpdatePosition_Parms
{
	class ASavedMove*                                  CurrentMove;                                      		// 0x0000 ( 0x0004
	int                                                realbRun;                                         		// 0x0004 ( 0x0004
	int                                                realbDuck;                                        		// 0x0008 ( 0x0004
	int                                                realbProne;                                       		// 0x000C ( 0x0004
	unsigned long                                      bRealJump:1;                                      		// 0x0010 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.ServerUpdatePing
// Flags: 
struct APlayerController_execServerUpdatePing_Parms
{
	int                                                NewPing;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.LongClientAdjustPosition
// Flags: 
struct APlayerController_execLongClientAdjustPosition_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       NewState;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      newPhysics;                                       		// 0x0008 ( 0x0001[ CPF_Parm ]
	float                                              NewLocX;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              NewLocY;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              NewLocZ;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              NewVelX;                                          		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              NewVelY;                                          		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              NewVelZ;                                          		// 0x0020 ( 0x0004[ CPF_Parm ]
	class AActor*                                      NewBase;                                          		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              NewFloorX;                                        		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              NewFloorY;                                        		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              NewFloorZ;                                        		// 0x0030 ( 0x0004[ CPF_Parm ]
	struct FVector                                     NewLocation;                                      		// 0x0034 ( 0x000C
	struct FVector                                     NewVelocity;                                      		// 0x0040 ( 0x000C
	struct FVector                                     NewFloor;                                         		// 0x004C ( 0x000C
	class AActor*                                      MoveActor;                                        		// 0x0058 ( 0x0004
	class ASavedMove*                                  CurrentMove;                                      		// 0x005C ( 0x0004
	float                                              NewPing;                                          		// 0x0060 ( 0x0004
};

// Function Engine.PlayerController.ClientAdjustPosition
// Flags: 
struct APlayerController_execClientAdjustPosition_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       NewState;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      newPhysics;                                       		// 0x0008 ( 0x0001[ CPF_Parm ]
	float                                              NewLocX;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              NewLocY;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              NewLocZ;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              NewVelX;                                          		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              NewVelY;                                          		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              NewVelZ;                                          		// 0x0020 ( 0x0004[ CPF_Parm ]
	class AActor*                                      NewBase;                                          		// 0x0024 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Floor;                                            		// 0x0028 ( 0x000C
};

// Function Engine.PlayerController.ShortClientAdjustPosition
// Flags: 
struct APlayerController_execShortClientAdjustPosition_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       NewState;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      newPhysics;                                       		// 0x0008 ( 0x0001[ CPF_Parm ]
	float                                              NewLocX;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              NewLocY;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              NewLocZ;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	class AActor*                                      NewBase;                                          		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Floor;                                            		// 0x001C ( 0x000C
};

// Function Engine.PlayerController.VeryShortClientAdjustPosition
// Flags: 
struct APlayerController_execVeryShortClientAdjustPosition_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              NewLocX;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              NewLocY;                                          		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              NewLocZ;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	class AActor*                                      NewBase;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Floor;                                            		// 0x0014 ( 0x000C
};

// Function Engine.PlayerController.MoveAutonomous
// Flags: [ FUNC_Final | FUNC_Event ]
struct APlayerController_eventMoveAutonomous_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      NewbRun:1;                                        		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbPressedJump:1;                                		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDoubleJump:1;                                 		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      DoubleClickMove;                                  		// 0x0018 ( 0x0001[ CPF_Parm ]
	struct FVector                                     NewAccel;                                         		// 0x001C ( 0x000C[ CPF_Parm ]
	struct FRotator                                    DeltaRot;                                         		// 0x0028 ( 0x000C[ CPF_Parm ]
};

// Function Engine.PlayerController.ProcessMove
// Flags: 
struct APlayerController_execProcessMove_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     NewAccel;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned char                                      DoubleClickMove;                                  		// 0x0010 ( 0x0001[ CPF_Parm ]
	struct FRotator                                    DeltaRot;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
};

// Function Engine.PlayerController.ProcessDrive
// Flags: 
struct APlayerController_execProcessDrive_Parms
{
	float                                              InForward;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              InStrafe;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              InUp;                                             		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      InJump:1;                                         		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerDrive
// Flags: 
struct APlayerController_execServerDrive_Parms
{
	float                                              InForward;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              InStrafe;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              aUp;                                              		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      InJump:1;                                         		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                View;                                             		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    ViewRotation;                                     		// 0x0014 ( 0x000C
};

// Function Engine.PlayerController.SendClientAdjustment
// Flags: [ FUNC_Event ]
struct APlayerController_eventSendClientAdjustment_Parms
{
};

// Function Engine.PlayerController.ServerMoveScript
// Flags: 
struct APlayerController_execServerMoveScript_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel;                                          		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbRun:1;                                        		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbJumpStatus:1;                                 		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDoubleJump:1;                                 		// 0x002C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      DoubleClickMove;                                  		// 0x0030 ( 0x0001[ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x0031 ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x0034 ( 0x0004[ CPF_Parm ]
	unsigned char                                      OldTimeDelta;                                     		// 0x0038 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	int                                                OldAccel;                                         		// 0x003C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              DeltaTime;                                        		// 0x0040 ( 0x0004
	float                                              clientErr;                                        		// 0x0044 ( 0x0004
	float                                              OldTimeStamp;                                     		// 0x0048 ( 0x0004
	struct FRotator                                    DeltaRot;                                         		// 0x004C ( 0x000C
	struct FRotator                                    Rot;                                              		// 0x0058 ( 0x000C
	struct FRotator                                    ViewRot;                                          		// 0x0064 ( 0x000C
	struct FVector                                     Accel;                                            		// 0x0070 ( 0x000C
	struct FVector                                     LocDiff;                                          		// 0x007C ( 0x000C
	int                                                maxPitch;                                         		// 0x0088 ( 0x0004
	int                                                ViewPitch;                                        		// 0x008C ( 0x0004
	int                                                ViewYaw;                                          		// 0x0090 ( 0x0004
	unsigned long                                      NewbPressedJump:1;                                		// 0x0094 ( 0x0004 [0x00000001]
	unsigned long                                      OldbRun:1;                                        		// 0x0098 ( 0x0004 [0x00000001]
	unsigned long                                      OldbDoubleJump:1;                                 		// 0x009C ( 0x0004 [0x00000001]
	unsigned char                                      OldDoubleClickMove;                               		// 0x00A0 ( 0x0001
};

// Function Engine.PlayerController.ServerMove
// Flags: 
struct APlayerController_execServerMove_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel;                                          		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbRun:1;                                        		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbJumpStatus:1;                                 		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDoubleJump:1;                                 		// 0x002C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      DoubleClickMove;                                  		// 0x0030 ( 0x0001[ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x0031 ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x0034 ( 0x0004[ CPF_Parm ]
	unsigned char                                      OldTimeDelta;                                     		// 0x0038 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	int                                                OldAccel;                                         		// 0x003C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ServerMoveNative
// Flags: [ FUNC_Native ]
struct APlayerController_execServerMoveNative_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel;                                          		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbRun:1;                                        		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbJumpStatus:1;                                 		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDoubleJump:1;                                 		// 0x002C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      DoubleClickMove;                                  		// 0x0030 ( 0x0001[ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x0031 ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x0034 ( 0x0004[ CPF_Parm ]
	unsigned char                                      OldTimeDelta;                                     		// 0x0038 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	int                                                OldAccel;                                         		// 0x003C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.DualServerMove
// Flags: 
struct APlayerController_execDualServerMove_Parms
{
	float                                              TimeStamp0;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel0;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned char                                      PendingCompress;                                  		// 0x0010 ( 0x0001[ CPF_Parm ]
	unsigned char                                      DoubleClickMove0;                                 		// 0x0011 ( 0x0001[ CPF_Parm ]
	int                                                View0;                                            		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              TimeStamp;                                        		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel;                                          		// 0x001C ( 0x000C[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0028 ( 0x000C[ CPF_Parm ]
	unsigned char                                      DoubleClickMove;                                  		// 0x0034 ( 0x0001[ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x0035 ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x0038 ( 0x0004[ CPF_Parm ]
	unsigned char                                      OldTimeDelta;                                     		// 0x003C ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	int                                                OldAccel;                                         		// 0x0040 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      NewbRun0:1;                                       		// 0x0044 ( 0x0004 [0x00000001]
	unsigned long                                      NewbDuck0:1;                                      		// 0x0048 ( 0x0004 [0x00000001]
	unsigned long                                      NewbProne0:1;                                     		// 0x004C ( 0x0004 [0x00000001]
	unsigned long                                      NewbJumpStatus0:1;                                		// 0x0050 ( 0x0004 [0x00000001]
	unsigned long                                      NewbDoubleJump0:1;                                		// 0x0054 ( 0x0004 [0x00000001]
	unsigned long                                      NewbRun:1;                                        		// 0x0058 ( 0x0004 [0x00000001]
	unsigned long                                      NewbDuck:1;                                       		// 0x005C ( 0x0004 [0x00000001]
	unsigned long                                      NewbProne:1;                                      		// 0x0060 ( 0x0004 [0x00000001]
	unsigned long                                      NewbJumpStatus:1;                                 		// 0x0064 ( 0x0004 [0x00000001]
	unsigned long                                      NewbDoubleJump:1;                                 		// 0x0068 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.ShortServerMove
// Flags: 
struct APlayerController_execShortServerMove_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbRun:1;                                        		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbJumpStatus:1;                                 		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x0020 ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x0024 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.DualTurretServerMove
// Flags: 
struct APlayerController_execDualTurretServerMove_Parms
{
	float                                              TimeStamp0;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      NewbDuck0:1;                                      		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne0:1;                                     		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      ClientRoll0;                                      		// 0x000C ( 0x0001[ CPF_Parm ]
	int                                                View0;                                            		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              TimeStamp;                                        		// 0x0014 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0018 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x002C ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x0030 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.TurretServerMove
// Flags: 
struct APlayerController_execTurretServerMove_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x0018 ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x001C ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.DualSpaceFighterServerMove
// Flags: 
struct APlayerController_execDualSpaceFighterServerMove_Parms
{
	float                                              TimeStamp0;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel0;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbDuck0:1;                                      		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne0:1;                                     		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                ViewPitch0;                                       		// 0x0018 ( 0x0004[ CPF_Parm ]
	int                                                ViewYaw0;                                         		// 0x001C ( 0x0004[ CPF_Parm ]
	int                                                ViewRoll0;                                        		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              TimeStamp;                                        		// 0x0024 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel;                                          		// 0x0028 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0034 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x0040 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0044 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                ViewPitch;                                        		// 0x0048 ( 0x0004[ CPF_Parm ]
	int                                                ViewYaw;                                          		// 0x004C ( 0x0004[ CPF_Parm ]
	int                                                ViewRoll;                                         		// 0x0050 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    BackupView;                                       		// 0x0054 ( 0x000C
};

// Function Engine.PlayerController.SpaceFighterServerMove
// Flags: 
struct APlayerController_execSpaceFighterServerMove_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel;                                          		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                ViewPitch;                                        		// 0x0024 ( 0x0004[ CPF_Parm ]
	int                                                ViewYaw;                                          		// 0x0028 ( 0x0004[ CPF_Parm ]
	int                                                ViewRoll;                                         		// 0x002C ( 0x0004[ CPF_Parm ]
	struct FRotator                                    BackupView;                                       		// 0x0030 ( 0x000C
};

// Function Engine.PlayerController.DualRocketServerMove
// Flags: 
struct APlayerController_execDualRocketServerMove_Parms
{
	float                                              TimeStamp0;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel0;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbDuck0:1;                                      		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne0:1;                                     		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      ClientRoll0;                                      		// 0x0018 ( 0x0001[ CPF_Parm ]
	int                                                View0;                                            		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              TimeStamp;                                        		// 0x0020 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel;                                          		// 0x0024 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0030 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x003C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0040 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x0044 ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x0048 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.RocketServerMove
// Flags: 
struct APlayerController_execRocketServerMove_Parms
{
	float                                              TimeStamp;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     InAccel;                                          		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ClientLoc;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	unsigned long                                      NewbDuck:1;                                       		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      NewbProne:1;                                      		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned char                                      ClientRoll;                                       		// 0x0024 ( 0x0001[ CPF_Parm ]
	int                                                View;                                             		// 0x0028 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ForceDeathUpdate
// Flags: 
struct APlayerController_execForceDeathUpdate_Parms
{
};

// Function Engine.PlayerController.ClientVoiceMessage
// Flags: 
struct APlayerController_execClientVoiceMessage_Parms
{
	class APlayerReplicationInfo*                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      Recipient;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FName                                       MessageType;                                      		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned char                                      MessageID;                                        		// 0x000C ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetBehindView
// Flags: 
struct APlayerController_execClientSetBehindView_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      bWasBehindView:1;                                 		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.ClientSetFixedCamera
// Flags: 
struct APlayerController_execClientSetFixedCamera_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.PreClientTravel
// Flags: [ FUNC_Event ]
struct APlayerController_eventPreClientTravel_Parms
{
};

// Function Engine.PlayerController.ShowGun
// Flags: [ FUNC_Exec ]
struct APlayerController_execShowGun_Parms
{
};

// Function Engine.PlayerController.IsDead
// Flags: 
struct APlayerController_execIsDead_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.SetWeaponHand
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetWeaponHand_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SetHand
// Flags: 
struct APlayerController_execSetHand_Parms
{
	int                                                IntValue;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerSetHandedness
// Flags: 
struct APlayerController_execServerSetHandedness_Parms
{
	float                                              Hand;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SetAutoTaunt
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetAutoTaunt_Parms
{
	unsigned long                                      Value:1;                                          		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerSetAutoTaunt
// Flags: 
struct APlayerController_execServerSetAutoTaunt_Parms
{
	unsigned long                                      Value:1;                                          		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ServerTeamSay
// Flags: 
struct APlayerController_execServerTeamSay_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.TeamSay
// Flags: [ FUNC_Exec ]
struct APlayerController_execTeamSay_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.PopMessage
// Flags: 
struct APlayerController_execPopMessage_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      sameTeamOnly:1;                                   		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientPopMessage
// Flags: 
struct APlayerController_execClientPopMessage_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Msg;                                              		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0018 ( 0x0004
};

// Function Engine.PlayerController.ServerPopMessage
// Flags: 
struct APlayerController_execServerPopMessage_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      sameTeamOnly:1;                                   		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                Team;                                             		// 0x0010 ( 0x0004
	class AController*                                 C;                                                		// 0x0014 ( 0x0004
	class AController*                                 NextC;                                            		// 0x0018 ( 0x0004
};

// Function Engine.PlayerController.ServerSay
// Flags: 
struct APlayerController_execServerSay_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.Say
// Flags: [ FUNC_Exec ]
struct APlayerController_execSay_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.AllowTextMessage
// Flags: 
struct APlayerController_execAllowTextMessage_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.ForceReload
// Flags: [ FUNC_Exec ]
struct APlayerController_execForceReload_Parms
{
};

// Function Engine.PlayerController.SetMouseAccel
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetMouseAccel_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SetMouseSmoothing
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetMouseSmoothing_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.GetSensitivityAim
// Flags: 
struct APlayerController_execGetSensitivityAim_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.GetSensitivity
// Flags: 
struct APlayerController_execGetSensitivity_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.GetSensitivityActive
// Flags: 
struct APlayerController_execGetSensitivityActive_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.SetSensitivity
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetSensitivity_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bZooming:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ServerMutate
// Flags: 
struct APlayerController_execServerMutate_Parms
{
	struct FString                                     MutateString;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.Mutate
// Flags: [ FUNC_Exec ]
struct APlayerController_execMutate_Parms
{
	struct FString                                     MutateString;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.FOV
// Flags: [ FUNC_Exec ]
struct APlayerController_execFOV_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.SetAimDiff
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetAimDiff_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     arrs;                                             		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	float                                              fX;                                               		// 0x0018 ( 0x0004
	float                                              fY;                                               		// 0x001C ( 0x0004
	float                                              fZ;                                               		// 0x0020 ( 0x0004
};

// Function Engine.PlayerController.ClientResetAim
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientResetAim_Parms
{
};

// Function Engine.PlayerController.ResetFOV
// Flags: 
struct APlayerController_execResetFOV_Parms
{
};

// Function Engine.PlayerController.SetFOV
// Flags: 
struct APlayerController_execSetFOV_Parms
{
	float                                              NewFOV;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.FixFOV
// Flags: [ FUNC_Simulated ]
struct APlayerController_execFixFOV_Parms
{
};

// Function Engine.PlayerController.EndZoom
// Flags: 
struct APlayerController_execEndZoom_Parms
{
};

// Function Engine.PlayerController.ZoomFOV
// Flags: 
struct APlayerController_execZoomFOV_Parms
{
	float                                              fFOV;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bInstant:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetInitialMusic
// Flags: 
struct APlayerController_execClientSetInitialMusic_Parms
{
	struct FString                                     NewSong;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      NewTransition;                                    		// 0x000C ( 0x0001[ CPF_Parm ]
	struct FString                                     SongName;                                         		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ClientSetMusic
// Flags: 
struct APlayerController_execClientSetMusic_Parms
{
	struct FString                                     NewSong;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      NewTransition;                                    		// 0x000C ( 0x0001[ CPF_Parm ]
	float                                              FadeIn;                                           		// 0x0010 ( 0x0004
	float                                              FadeOut;                                          		// 0x0014 ( 0x0004
};

// Function Engine.PlayerController.Destroyed
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventDestroyed_Parms
{
	class ASavedMove*                                  Next;                                             		// 0x0000 ( 0x0004
	class AVehicle*                                    DrivenVehicle;                                    		// 0x0004 ( 0x0004
	class APawn*                                       Driver;                                           		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.ClientReliablePlaySound
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientReliablePlaySound_Parms
{
	class USound*                                      ASound;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bVolumeControl:1;                                 		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ClientQueueAnnouncement
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientQueueAnnouncement_Parms
{
	struct FName                                       ASoundName;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      AnnouncementLevel;                                		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned char                                      Priority;                                         		// 0x0005 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      Switch;                                           		// 0x0006 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ClientPlaySoundHK
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientPlaySoundHK_Parms
{
	class USound*                                      ASound;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     SoundLocation;                                    		// 0x0028 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ClientStopLoopSoundByActor
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientStopLoopSoundByActor_Parms
{
	class AActor*                                      Target;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ClientStopAllSoundByActor
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientStopAllSoundByActor_Parms
{
	class AActor*                                      Target;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ClientPlayVoiceSound
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientPlayVoiceSound_Parms
{
	struct FString                                     strSoundName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bVolumeControl:1;                                 		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              inAtten;                                          		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0014 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Atten;                                            		// 0x0018 ( 0x0004
	class USound*                                      ASound;                                           		// 0x001C ( 0x0004
};

// Function Engine.PlayerController.ClientPlaySound
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientPlaySound_Parms
{
	class USound*                                      ASound;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bVolumeControl:1;                                 		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              inAtten;                                          		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x000C ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Atten;                                            		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.ClientChangeSlot6
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientChangeSlot6_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientChangeSlot5
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientChangeSlot5_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bAddSkill:1;                                      		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.AllowVoiceMessage
// Flags: 
struct APlayerController_execAllowVoiceMessage_Parms
{
	struct FName                                       MessageType;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.QueueAnnouncement
// Flags: [ FUNC_Simulated ]
struct APlayerController_execQueueAnnouncement_Parms
{
	struct FString                                     ASoundName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      AnnouncementLevel;                                		// 0x000C ( 0x0001[ CPF_Parm ]
	unsigned char                                      Priority;                                         		// 0x000D ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      Switch;                                           		// 0x000E ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.CustomizeAnnouncer
// Flags: 
struct APlayerController_execCustomizeAnnouncer_Parms
{
	class USound*                                      AnnouncementSound;                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class USound*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.PlayAnnouncement
// Flags: [ FUNC_Simulated ]
struct APlayerController_execPlayAnnouncement_Parms
{
	class USound*                                      ASound;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      AnnouncementLevel;                                		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned long                                      bForce:1;                                         		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Atten;                                            		// 0x000C ( 0x0004
};

// Function Engine.PlayerController.PlayRewardAnnouncement
// Flags: [ FUNC_Simulated ]
struct APlayerController_execPlayRewardAnnouncement_Parms
{
	struct FName                                       AName;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      AnnouncementLevel;                                		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned long                                      bForce:1;                                         		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x000C ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Atten;                                            		// 0x0010 ( 0x0004
	class USound*                                      ASound;                                           		// 0x0014 ( 0x0004
};

// Function Engine.PlayerController.PlayStatusAnnouncement
// Flags: [ FUNC_Simulated ]
struct APlayerController_execPlayStatusAnnouncement_Parms
{
	struct FString                                     AName;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      AnnouncementLevel;                                		// 0x000C ( 0x0001[ CPF_Parm ]
	unsigned long                                      bForce:1;                                         		// 0x0010 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Atten;                                            		// 0x0014 ( 0x0004
	class USound*                                      ASound;                                           		// 0x0018 ( 0x0004
};

// Function Engine.PlayerController.PrecacheAnnouncements
// Flags: [ FUNC_Simulated ]
struct APlayerController_execPrecacheAnnouncements_Parms
{
};

// Function Engine.PlayerController.PlayBeepSound
// Flags: [ FUNC_Simulated ]
struct APlayerController_execPlayBeepSound_Parms
{
};

// Function Engine.PlayerController.TeamMessage
// Flags: [ FUNC_Event ]
struct APlayerController_eventTeamMessage_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     S;                                                		// 0x0004 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.AllowTextToSpeech
// Flags: 
struct APlayerController_execAllowTextToSpeech_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       Type;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ClientMessage
// Flags: [ FUNC_Event ]
struct APlayerController_eventClientMessage_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.PlayerController.ChatRoomMessage
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventChatRoomMessage_Parms
{
	int                                                Result;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ChannelIndex;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AVoiceChatRoom*                              VCR;                                              		// 0x000C ( 0x0004
	struct FString                                     str;                                              		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ReceiveMessage_QuestType3
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventReceiveMessage_QuestType3_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRDifficult;                                      		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMap;                                            		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UwMatchMaker*                                kMM;                                              		// 0x0010 ( 0x0004
	class UwMapInfo*                                   mapInfo;                                          		// 0x0014 ( 0x0004
};

// Function Engine.PlayerController.ReceiveMessage_QuestType2
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventReceiveMessage_QuestType2_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMode;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMap;                                            		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMin;                                            		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRSec;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UwMatchMaker*                                kMM;                                              		// 0x0018 ( 0x0004
	class UwMapInfo*                                   mapInfo;                                          		// 0x001C ( 0x0004
};

// Function Engine.PlayerController.ReceiveMessage_QuestType1
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventReceiveMessage_QuestType1_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRWeaponType;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRweaponId;                                       		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UwMatchMaker*                                kMM;                                              		// 0x0010 ( 0x0004
};

// Function Engine.PlayerController.ReceiveLocalizedMessageWithKillerInfo
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventReceiveLocalizedMessageWithKillerInfo_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killer;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     str;                                              		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	class AActor*                                      A;                                                		// 0x0024 ( 0x0004
};

// Function Engine.PlayerController.ReceiveLocalizedMessage
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventReceiveLocalizedMessage_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     str;                                              		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	class AActor*                                      A;                                                		// 0x0020 ( 0x0004
};

// Function Engine.PlayerController.ReceiveLocalizedMessage2
// Flags: [ FUNC_Simulated ]
struct APlayerController_execReceiveLocalizedMessage2_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Reserved1;                                        		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Reserved2;                                        		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     strMessage;                                       		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.EndFlash
// Flags: 
struct APlayerController_execEndFlash_Parms
{
};

// Function Engine.PlayerController.ViewFlash
// Flags: 
struct APlayerController_execViewFlash_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     goalFog;                                          		// 0x0004 ( 0x000C
	float                                              goalscale;                                        		// 0x0010 ( 0x0004
	float                                              Delta;                                            		// 0x0014 ( 0x0004
	float                                              Step;                                             		// 0x0018 ( 0x0004
	class APhysicsVolume*                              ViewVolume;                                       		// 0x001C ( 0x0004
};

// Function Engine.PlayerController.UpdateFlashComponent
// Flags: [ FUNC_Final ]
struct APlayerController_execUpdateFlashComponent_Parms
{
	float                                              Current;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Step;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              Goal;                                             		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ClientStopForceFeedback
// Flags: 
struct APlayerController_execClientStopForceFeedback_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.StopForceFeedback
// Flags: [ FUNC_Simulated ]
struct APlayerController_execStopForceFeedback_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ClientPlayForceFeedback
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientPlayForceFeedback_Parms
{
	struct FString                                     EffectName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ClientSetHUD
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetHUD_Parms
{
	class UClass*                                      newHUDClass;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      newScoringClass;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      newResultClass;                                   		// 0x0008 ( 0x0004[ CPF_Parm ]
	class UClass*                                      newResultBootyClass;                              		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientUpdateFlagHolder
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientUpdateFlagHolder_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.PawnDied
// Flags: 
struct APlayerController_execPawnDied_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ViewNextBot
// Flags: 
struct APlayerController_execViewNextBot_Parms
{
};

// Function Engine.PlayerController.UnPossess
// Flags: 
struct APlayerController_execUnPossess_Parms
{
};

// Function Engine.PlayerController.ServerAcknowledgePossession
// Flags: 
struct APlayerController_execServerAcknowledgePossession_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              NewHand;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bNewAutoTaunt:1;                                  		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.AcknowledgePossession
// Flags: 
struct APlayerController_execAcknowledgePossession_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.Possess
// Flags: 
struct APlayerController_execPossess_Parms
{
	class APawn*                                       aPawn;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwMatchMaker*                                MM;                                               		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.GetFacingDirection
// Flags: 
struct APlayerController_execGetFacingDirection_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     X;                                                		// 0x0004 ( 0x000C
//	struct FVector                                     Y;                                                		// 0x0010 ( 0x000C
//	struct FVector                                     Z;                                                		// 0x001C ( 0x000C
//	struct FVector                                     Dir;                                              		// 0x0028 ( 0x000C
};

// Function Engine.PlayerController.ClientLogPawns
// Flags: 
struct APlayerController_execClientLogPawns_Parms
{
};

// Function Engine.PlayerController.DoLogPawns
// Flags: 
struct APlayerController_execDoLogPawns_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.EveryLogPawns
// Flags: [ FUNC_Exec ]
struct APlayerController_execEveryLogPawns_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.LogPawns
// Flags: [ FUNC_Exec ]
struct APlayerController_execLogPawns_Parms
{
};

// Function Engine.PlayerController.GivePawn
// Flags: [ FUNC_Event ]
struct APlayerController_eventGivePawn_Parms
{
	class APawn*                                       NewPawn;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.AskForPawn
// Flags: 
struct APlayerController_execAskForPawn_Parms
{
};

// Function Engine.PlayerController.ClientGotoState
// Flags: 
struct APlayerController_execClientGotoState_Parms
{
	struct FName                                       NewState;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       NewLabel;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.InitInputSystem
// Flags: [ FUNC_Event ]
struct APlayerController_eventInitInputSystem_Parms
{
};

// Function Engine.PlayerController.preB
// Flags: [ FUNC_Exec ]
struct APlayerController_execpreB_Parms
{
	class UMesh*                                       M;                                                		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.preA
// Flags: [ FUNC_Exec ]
struct APlayerController_execpreA_Parms
{
	class UObject*                                     o;                                                		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.tests
// Flags: [ FUNC_Exec ]
struct APlayerController_exectests_Parms
{
	class UClass*                                      runTestsClass;                                    		// 0x0000 ( 0x0004
	class ARunTestsBase*                               runTests;                                         		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.CleanOutSavedMoves
// Flags: 
struct APlayerController_execCleanOutSavedMoves_Parms
{
	class ASavedMove*                                  Next;                                             		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ChatResetInput
// Flags: 
struct APlayerController_execChatResetInput_Parms
{
};

// Function Engine.PlayerController.ScriptResetInput
// Flags: 
struct APlayerController_execScriptResetInput_Parms
{
};

// Function Engine.PlayerController.ClientReset
// Flags: [ FUNC_Event ]
struct APlayerController_eventClientReset_Parms
{
};

// Function Engine.PlayerController.Reset
// Flags: 
struct APlayerController_execReset_Parms
{
	class AVehicle*                                    DrivenVehicle;                                    		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.SpawnDefaultHUD
// Flags: 
struct APlayerController_execSpawnDefaultHUD_Parms
{
};

// Function Engine.PlayerController.ServerVerifyViewTarget
// Flags: 
struct APlayerController_execServerVerifyViewTarget_Parms
{
};

// Function Engine.PlayerController.ClientSetViewTargetZZ
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventClientSetViewTargetZZ_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bNewViewTarget:1;                                 		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.PlayerController.ClientSetViewTarget_NATIVE
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventClientSetViewTarget_NATIVE_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_S
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_S_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_R
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_R_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_Q
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_Q_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_P
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_P_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_O
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_O_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_N
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_N_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_M
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_M_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_L
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_L_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_K
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_K_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_J
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_J_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_I
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_I_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_H
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_H_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_G
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_G_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_F
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_F_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_E
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_E_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_D
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_D_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_C
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_C_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_B
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_B_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetViewTarget_A
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientSetViewTarget_A_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.HandlePickup
// Flags: 
struct APlayerController_execHandlePickup_Parms
{
	class APickup*                                     pick;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.MakeAdmin
// Flags: 
struct APlayerController_execMakeAdmin_Parms
{
};

// Function Engine.PlayerController.AddCheats
// Flags: 
struct APlayerController_execAddCheats_Parms
{
};

// Function Engine.PlayerController.PendingStasis
// Flags: 
struct APlayerController_execPendingStasis_Parms
{
};

// Function Engine.PlayerController.ClientCapBandwidth
// Flags: 
struct APlayerController_execClientCapBandwidth_Parms
{
	int                                                Cap;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ServerGivePawn
// Flags: 
struct APlayerController_execServerGivePawn_Parms
{
};

// Function Engine.PlayerController.ServerSpectateSpeed
// Flags: 
struct APlayerController_execServerSpectateSpeed_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ClientSetClassicView
// Flags: 
struct APlayerController_execClientSetClassicView_Parms
{
};

// Function Engine.PlayerController.ClientSetWeaponViewShake
// Flags: 
struct APlayerController_execClientSetWeaponViewShake_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.SetSpectateSpeed
// Flags: [ FUNC_Exec ]
struct APlayerController_execSetSpectateSpeed_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ss
// Flags: [ FUNC_Exec ]
struct APlayerController_execss_Parms
{
	struct FString                                     t;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ToggleScreenShotMode
// Flags: [ FUNC_Exec ]
struct APlayerController_execToggleScreenShotMode_Parms
{
};

// Function Engine.PlayerController.KillAllPawns
// Flags: 
struct APlayerController_execKillAllPawns_Parms
{
	class UClass*                                      aClass;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004
};

// Function Engine.PlayerController.KillAll
// Flags: [ FUNC_Exec ]
struct APlayerController_execKillAll_Parms
{
	class UClass*                                      aClass;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0004 ( 0x0004
	class AController*                                 C;                                                		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.StreamFinished
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventStreamFinished_Parms
{
	int                                                StreamHandle;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Reason;                                           		// 0x0004 ( 0x0001[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.PlayerController.GetPathTo
// Flags: 
struct APlayerController_execGetPathTo_Parms
{
	class AActor*                                      Dest;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	class AActor*                                      Best;                                             		// 0x000C ( 0x0004
//	struct FVector                                     Dir;                                              		// 0x0010 ( 0x000C
};

// Function Engine.PlayerController.ServerShortTimeout
// Flags: 
struct APlayerController_execServerShortTimeout_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ResetTimeMarginNative
// Flags: [ FUNC_Native ]
struct APlayerController_execResetTimeMarginNative_Parms
{
};

// Function Engine.PlayerController.ResetTimeMargin
// Flags: 
struct APlayerController_execResetTimeMargin_Parms
{
};

// Function Engine.PlayerController.KickWarning
// Flags: [ FUNC_Event ]
struct APlayerController_eventKickWarning_Parms
{
};

// Function Engine.PlayerController.BeyondViewDistance
// Flags: [ FUNC_Simulated ]
struct APlayerController_execBeyondViewDistance_Parms
{
	struct FVector                                     OtherLocation;                                    		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              CullDistance;                                     		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              dist;                                             		// 0x0014 ( 0x0004
};

// Function Engine.PlayerController.ClientEndChangeHost
// Flags: [ FUNC_Simulated ]
struct APlayerController_execClientEndChangeHost_Parms
{
};

// Function Engine.PlayerController.EndChangeHost
// Flags: [ FUNC_Simulated ]
struct APlayerController_execEndChangeHost_Parms
{
	class UwMatchMaker*                                kMM;                                              		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.SendAllUserGameStateDataToInterventionUser
// Flags: [ FUNC_Event ]
struct APlayerController_eventSendAllUserGameStateDataToInterventionUser_Parms
{
};

// Function Engine.PlayerController.DestroyGameStateStorageSender
// Flags: [ FUNC_Event ]
struct APlayerController_eventDestroyGameStateStorageSender_Parms
{
};

// Function Engine.PlayerController.CreateGameStateStorageSender
// Flags: [ FUNC_Event ]
struct APlayerController_eventCreateGameStateStorageSender_Parms
{
};

// Function Engine.PlayerController.PostBeginPlay
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerController_eventPostBeginPlay_Parms
{
	class UClass*                                      PlayerChatClass;                                  		// 0x0000 ( 0x0004
};

// Function Engine.PlayerController.ServerGetWeaponStats
// Flags: 
struct APlayerController_execServerGetWeaponStats_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.testRS
// Flags: [ FUNC_Exec ]
struct APlayerController_exectestRS_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
	int                                                lp2;                                              		// 0x0004 ( 0x0004
	int                                                lpStance;                                         		// 0x0008 ( 0x0004
	int                                                t;                                                		// 0x000C ( 0x0004
	int                                                Num;                                              		// 0x0010 ( 0x0004
	class ANavigationPoint*                            N;                                                		// 0x0014 ( 0x0004
	class UReachSpec*                                  R;                                                		// 0x0018 ( 0x0004
	struct FString                                     S;                                                		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Header;                                           		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FString >                     headers;                                          		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.GetWeaponStats
// Flags: [ FUNC_Exec ]
struct APlayerController_execGetWeaponStats_Parms
{
};

// Function Engine.PlayerController.NotifyEndLoading
// Flags: [ FUNC_Event ]
struct APlayerController_eventNotifyEndLoading_Parms
{
};

// Function Engine.PlayerController.NotifyRecordException
// Flags: [ FUNC_Event ]
struct APlayerController_eventNotifyRecordException_Parms
{
	int                                                retCode;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.GetPlayerInput
// Flags: 
struct APlayerController_execGetPlayerInput_Parms
{
	class UPlayerInput*                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ServerNotifyEndLoading
// Flags: 
struct APlayerController_execServerNotifyEndLoading_Parms
{
};

// Function Engine.PlayerController.LocalNotifyEndLoading
// Flags: 
struct APlayerController_execLocalNotifyEndLoading_Parms
{
};

// Function Engine.PlayerController.ServerSetPrecached
// Flags: 
struct APlayerController_execServerSetPrecached_Parms
{
};

// Function Engine.PlayerController.SetPrecached
// Flags: [ FUNC_Event ]
struct APlayerController_eventSetPrecached_Parms
{
};

// Function Engine.PlayerController.LocalSetPrecached
// Flags: 
struct APlayerController_execLocalSetPrecached_Parms
{
};

// Function Engine.PlayerController.ShowPathToActor
// Flags: [ FUNC_Simulated ]
struct APlayerController_execShowPathToActor_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.GetStateStrName
// Flags: 
struct APlayerController_execGetStateStrName_Parms
{
	struct FString                                     strName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FName                                       ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.SetTimeOutInPlaying
// Flags: [ FUNC_Native ]
struct APlayerController_execSetTimeOutInPlaying_Parms
{
};

// Function Engine.PlayerController.Cmd
// Flags: [ FUNC_Exec ]
struct APlayerController_execCmd_Parms
{
	struct FString                                     P1;                                               		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     P2;                                               		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     p3;                                               		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     p4;                                               		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     p5;                                               		// 0x0030 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SaveParams
// Flags: [ FUNC_Exec | FUNC_Native ]
struct APlayerController_execSaveParams_Parms
{
};

// Function Engine.PlayerController.SplitForInputWeapon
// Flags: [ FUNC_Native ]
struct APlayerController_execSplitForInputWeapon_Parms
{
	struct FString                                     Src;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Parts;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ClientHearSound
// Flags: [ FUNC_Event | FUNC_Native ]
struct APlayerController_eventClientHearSound_Parms
{
	class AActor*                                      Actor;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                id;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	class USound*                                      S;                                                		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FVector                                     SoundLocation;                                    		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     Parameters;                                       		// 0x0018 ( 0x000C[ CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.fClientHearSound
// Flags: [ FUNC_Event | FUNC_Native ]
struct APlayerController_eventfClientHearSound_Parms
{
	class AActor*                                      Actor;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                id;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     soundName;                                        		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FVector                                     SoundLocation;                                    		// 0x0014 ( 0x000C[ CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.FindStairRotation
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000020C ( 524 )
struct APlayerController_execFindStairRotation_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.SendWebLog
// Flags: [ FUNC_Native ]
struct APlayerController_execSendWebLog_Parms
{
	int                                                sectionID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                FailCode;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ResetKeySleepTime
// Flags: [ FUNC_Native ]
struct APlayerController_execResetKeySleepTime_Parms
{
};

// Function Engine.PlayerController.GetKeySleepTime
// Flags: [ FUNC_Native ]
struct APlayerController_execGetKeySleepTime_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.CloseWeb
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execCloseWeb_Parms
{
	struct FString                                     C;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.OpenWeb
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execOpenWeb_Parms
{
	struct FString                                     C;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                X;                                                		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                width;                                            		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                Height;                                           		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.CheckSpeedHack
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execCheckSpeedHack_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ServerValidationResponse
// Flags: [ FUNC_Event | FUNC_Native ]
struct APlayerController_eventServerValidationResponse_Parms
{
	struct FString                                     R;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ClientValidate
// Flags: [ FUNC_Event | FUNC_Native ]
struct APlayerController_eventClientValidate_Parms
{
	struct FString                                     C;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.PasteFromClipboard
// Flags: [ FUNC_Native ]
struct APlayerController_execPasteFromClipboard_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.CopyToClipboard
// Flags: [ FUNC_Native ]
struct APlayerController_execCopyToClipboard_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.GetDefaultURL
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execGetDefaultURL_Parms
{
	struct FString                                     Option;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.GetURLProtocol
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execGetURLProtocol_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.ClientTravel
// Flags: [ FUNC_Event | FUNC_Native ]
struct APlayerController_eventClientTravel_Parms
{
	struct FString                                     URL;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      TravelType;                                       		// 0x000C ( 0x0001[ CPF_Parm ]
	unsigned long                                      bItems:1;                                         		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerController.SetViewTarget
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execSetViewTarget_Parms
{
	class AActor*                                      NewViewTarget;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerController.ResetInput
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execResetInput_Parms
{
};

// Function Engine.PlayerController.ResetKeyboard
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000220 ( 544 )
struct APlayerController_execResetKeyboard_Parms
{
};

// Function Engine.PlayerController.GetEntryLevel
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execGetEntryLevel_Parms
{
	class ALevelInfo*                                  ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerController.ConsoleCommand
// Flags: [ FUNC_Native ]
struct APlayerController_execConsoleCommand_Parms
{
	struct FString                                     Command;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bWriteToLog:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.GetServerNetworkAddress
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execGetServerNetworkAddress_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.GetPlayerNetworkAddress
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execGetPlayerNetworkAddress_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.GetPlayerIDHash
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execGetPlayerIDHash_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerController.SetNetSpeed
// Flags: [ FUNC_Final | FUNC_Native ]
struct APlayerController_execSetNetSpeed_Parms
{
	int                                                NewSpeed;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.IsSpecialMode_Pistol
// Flags: 
struct AController_execIsSpecialMode_Pistol_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsSpecialMode_Grenade
// Flags: 
struct AController_execIsSpecialMode_Grenade_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsSpecialMode_MG
// Flags: 
struct AController_execIsSpecialMode_MG_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsSpecialMode_FlameThrower
// Flags: 
struct AController_execIsSpecialMode_FlameThrower_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsSpecialMode_SG
// Flags: 
struct AController_execIsSpecialMode_SG_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsSpecialMode_Hold_Weapon
// Flags: 
struct AController_execIsSpecialMode_Hold_Weapon_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsSpecialMode_SR
// Flags: 
struct AController_execIsSpecialMode_SR_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsSpecialMode_RPG
// Flags: 
struct AController_execIsSpecialMode_RPG_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsSpecialMode_Knife
// Flags: 
struct AController_execIsSpecialMode_Knife_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsPermitSpecialMode
// Flags: 
struct AController_execIsPermitSpecialMode_Parms
{
	unsigned long                                      bLimitInvenGroup:1;                               		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                InvenGroup;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      QWeaponType;                                      		// 0x0008 ( 0x0001[ CPF_Parm ]
	int                                                KeyF;                                             		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.NotifyVehicle
// Flags: 
struct AController_execNotifyVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.ClientUAV
// Flags: [ FUNC_Simulated ]
struct AController_execClientUAV_Parms
{
	int                                                UAVDuration;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              uavEndTime;                                       		// 0x0004 ( 0x0004
};

// Function Engine.Controller.AllowFire
// Flags: [ FUNC_Simulated ]
struct AController_execAllowFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.ReceiveMessage_QuestType4
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AController_eventReceiveMessage_QuestType4_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRDifficult;                                      		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRRound;                                          		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Controller.ReceiveMessage_QuestType3
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AController_eventReceiveMessage_QuestType3_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRDifficult;                                      		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMap;                                            		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Controller.ReceiveMessage_QuestType2
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AController_eventReceiveMessage_QuestType2_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMode;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMap;                                            		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMin;                                            		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRSec;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Controller.ReceiveMessage_QuestType1
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AController_eventReceiveMessage_QuestType1_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRWeaponType;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRweaponId;                                       		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Controller.ServerUAV
// Flags: 
struct AController_execServerUAV_Parms
{
	class AController*                                 P;                                                		// 0x0000 ( 0x0004
	int                                                CurrentTime;                                      		// 0x0004 ( 0x0004
};

// Function Engine.Controller.IsActiveUAV
// Flags: 
struct AController_execIsActiveUAV_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsActiveHelicopter
// Flags: 
struct AController_execIsActiveHelicopter_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.IsActiveAirFire
// Flags: 
struct AController_execIsActiveAirFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.CallUAV
// Flags: 
struct AController_execCallUAV_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.CallHelicopter
// Flags: 
struct AController_execCallHelicopter_Parms
{
	unsigned long                                      ignoreSupply:1;                                   		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.CallAirFire
// Flags: 
struct AController_execCallAirFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.ZoomFOV
// Flags: 
struct AController_execZoomFOV_Parms
{
	float                                              fFOV;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bInstant:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Controller.ClientOnEndIntervented
// Flags: [ FUNC_Simulated ]
struct AController_execClientOnEndIntervented_Parms
{
};

// Function Engine.Controller.ClientOnBeginIntervented
// Flags: [ FUNC_Simulated ]
struct AController_execClientOnBeginIntervented_Parms
{
};

// Function Engine.Controller.ClientOnBeginRound
// Flags: [ FUNC_Simulated ]
struct AController_execClientOnBeginRound_Parms
{
};

// Function Engine.Controller.ClientOnEndWaitingForStart
// Flags: [ FUNC_Simulated ]
struct AController_execClientOnEndWaitingForStart_Parms
{
};

// Function Engine.Controller.ClientOnBeginWaitingForStart
// Flags: [ FUNC_Simulated ]
struct AController_execClientOnBeginWaitingForStart_Parms
{
};

// Function Engine.Controller.ClientStopAllSound
// Flags: 
struct AController_execClientStopAllSound_Parms
{
	class AActor*                                      aactor;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Controller.StopAllSoundHK
// Flags: 
struct AController_execStopAllSoundHK_Parms
{
	class AActor*                                      aactor;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Controller.SetMoveAtt
// Flags: [ FUNC_Exec ]
struct AController_execSetMoveAtt_Parms
{
	struct FString                                     gmv;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     gmt;                                              		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     gmd;                                              		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      isSet:1;                                          		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Controller.WeaponReload
// Flags: [ FUNC_Exec ]
struct AController_execWeaponReload_Parms
{
	class AwGun*                                       Gun;                                              		// 0x0000 ( 0x0004
};

// Function Engine.Controller.ParseChatPercVar
// Flags: 
struct AController_execParseChatPercVar_Parms
{
	struct FString                                     Cmd;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Controller.DontReuseTaunt
// Flags: 
struct AController_execDontReuseTaunt_Parms
{
	int                                                t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.AutoTaunt
// Flags: 
struct AController_execAutoTaunt_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.StartMonitoring
// Flags: 
struct AController_execStartMonitoring_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              MaxDist;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.MonitoredPawnAlert
// Flags: [ FUNC_Event ]
struct AController_eventMonitoredPawnAlert_Parms
{
};

// Function Engine.Controller.ServerGivePawn
// Flags: 
struct AController_execServerGivePawn_Parms
{
};

// Function Engine.Controller.ServerReStartPlayer
// Flags: 
struct AController_execServerReStartPlayer_Parms
{
};

// Function Engine.Controller.ChangedWeapon
// Flags: 
struct AController_execChangedWeapon_Parms
{
};

// Function Engine.Controller.GetPRI
// Flags: 
struct AController_execGetPRI_Parms
{
	class APlayerReplicationInfo*                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.CheckFutureSight
// Flags: 
struct AController_execCheckFutureSight_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.SetPawnFemale
// Flags: 
struct AController_execSetPawnFemale_Parms
{
};

// Function Engine.Controller.SetPawnClass
// Flags: 
struct AController_execSetPawnClass_Parms
{
	struct FString                                     inClass;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     InCharacter;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UClass*                                      pClass;                                           		// 0x0018 ( 0x0004
};

// Function Engine.Controller.ClientSetWeapon
// Flags: 
struct AController_execClientSetWeapon_Parms
{
	class UClass*                                      WeaponClass;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AInventory*                                  Inv;                                              		// 0x0004 ( 0x0004
	int                                                Count;                                            		// 0x0008 ( 0x0004
};

// Function Engine.Controller.ClientSwitchToBestWeapon
// Flags: 
struct AController_execClientSwitchToBestWeapon_Parms
{
};

// Function Engine.Controller.SwitchToBestWeapon
// Flags: [ FUNC_Exec ]
struct AController_execSwitchToBestWeapon_Parms
{
	float                                              rating;                                           		// 0x0000 ( 0x0004
};

// Function Engine.Controller.DelayedWarning
// Flags: [ FUNC_Event ]
struct AController_eventDelayedWarning_Parms
{
};

// Function Engine.Controller.ReceiveProjectileWarning
// Flags: 
struct AController_execReceiveProjectileWarning_Parms
{
	class AProjectile*                                 proj;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.ReceiveWarning
// Flags: [ FUNC_Event ]
struct AController_eventReceiveWarning_Parms
{
	class APawn*                                       shooter;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              projSpeed;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     FireDir;                                          		// 0x0008 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Controller.InstantWarnTarget
// Flags: 
struct AController_execInstantWarnTarget_Parms
{
	class AActor*                                      Target;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FFireProperties                             FiredAmmunition;                                  		// 0x0004 ( 0x0014[ CPF_Parm ]
	struct FVector                                     FireDir;                                          		// 0x0018 ( 0x000C[ CPF_Parm ]
	float                                              dist;                                             		// 0x0024 ( 0x0004
};

// Function Engine.Controller.AdjustAim
// Flags: 
struct AController_execAdjustAim_Parms
{
	struct FFireProperties                             FiredAmmunition;                                  		// 0x0000 ( 0x0014[ CPF_Parm ]
	struct FVector                                     projStart;                                        		// 0x0014 ( 0x000C[ CPF_Parm ]
	int                                                AimError;                                         		// 0x0020 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.WeaponPreference
// Flags: 
struct AController_execWeaponPreference_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.RateWeapon
// Flags: [ FUNC_Simulated ]
struct AController_execRateWeapon_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.StopFiring
// Flags: 
struct AController_execStopFiring_Parms
{
};

// Function Engine.Controller.FireWeaponAt
// Flags: 
struct AController_execFireWeaponAt_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.AdjustDesireFor
// Flags: 
struct AController_execAdjustDesireFor_Parms
{
	class APickup*                                     P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.damageAttitudeTo
// Flags: 
struct AController_execdamageAttitudeTo_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Damage;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.NotifyKilled
// Flags: 
struct AController_execNotifyKilled_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killed;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APawn*                                       Other;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.ShakeView
// Flags: 
struct AController_execShakeView_Parms
{
	struct FVector                                     shRotMag;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     shRotRate;                                        		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              shRotTime;                                        		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FVector                                     shOffsetMag;                                      		// 0x001C ( 0x000C[ CPF_Parm ]
	struct FVector                                     shOffsetRate;                                     		// 0x0028 ( 0x000C[ CPF_Parm ]
	float                                              shOffsetTime;                                     		// 0x0034 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.DamageShake
// Flags: 
struct AController_execDamageShake_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.EnemyNotVisible
// Flags: [ FUNC_Event ]
struct AController_eventEnemyNotVisible_Parms
{
};

// Function Engine.Controller.SeeMonster
// Flags: [ FUNC_Event ]
struct AController_eventSeeMonster_Parms
{
	class APawn*                                       Seen;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.SeePlayer
// Flags: [ FUNC_Event ]
struct AController_eventSeePlayer_Parms
{
	class APawn*                                       Seen;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.HearNoise
// Flags: [ FUNC_Event ]
struct AController_eventHearNoise_Parms
{
	float                                              Loudness;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      NoiseMaker;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.SetupSpecialPathAbilities
// Flags: [ FUNC_Event ]
struct AController_eventSetupSpecialPathAbilities_Parms
{
};

// Function Engine.Controller.SuperDesireability
// Flags: [ FUNC_Event ]
struct AController_eventSuperDesireability_Parms
{
	class APickup*                                     P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.Desireability
// Flags: [ FUNC_Event ]
struct AController_eventDesireability_Parms
{
	class APickup*                                     P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.FearThisSpot
// Flags: 
struct AController_execFearThisSpot_Parms
{
	class AAvoidMarker*                                aSpot;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Controller.UnderLift
// Flags: 
struct AController_execUnderLift_Parms
{
	class AMover*                                      M;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.MoverFinished
// Flags: 
struct AController_execMoverFinished_Parms
{
};

// Function Engine.Controller.WaitForMover
// Flags: 
struct AController_execWaitForMover_Parms
{
	class AMover*                                      M;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.PrepareForMove
// Flags: [ FUNC_Event ]
struct AController_eventPrepareForMove_Parms
{
	class ANavigationPoint*                            Goal;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UReachSpec*                                  Path;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.AdjustToss
// Flags: 
struct AController_execAdjustToss_Parms
{
	float                                              TSpeed;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Start;                                            		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     End;                                              		// 0x0010 ( 0x000C[ CPF_Parm ]
	unsigned long                                      bNormalize:1;                                     		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0020 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     Dest2D;                                           		// 0x002C ( 0x000C
//	struct FVector                                     Result;                                           		// 0x0038 ( 0x000C
//	struct FVector                                     Vel2D;                                            		// 0x0044 ( 0x000C
//	float                                              Dist2D;                                           		// 0x0050 ( 0x0004
};

// Function Engine.Controller.WouldReactToSeeing
// Flags: 
struct AController_execWouldReactToSeeing_Parms
{
	class APawn*                                       Seen;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.WouldReactToNoise
// Flags: 
struct AController_execWouldReactToNoise_Parms
{
	float                                              Loudness;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      NoiseMaker;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.BotVoiceMessage
// Flags: 
struct AController_execBotVoiceMessage_Parms
{
	struct FName                                       MessageType;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      MessageID;                                        		// 0x0004 ( 0x0001[ CPF_Parm ]
	class AController*                                 Sender;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.ClientVoiceMessage
// Flags: 
struct AController_execClientVoiceMessage_Parms
{
	class APlayerReplicationInfo*                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      Recipient;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FName                                       MessageType;                                      		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned char                                      MessageID;                                        		// 0x000C ( 0x0001[ CPF_Parm ]
};

// Function Engine.Controller.SendVoiceMessage
// Flags: 
struct AController_execSendVoiceMessage_Parms
{
	class APlayerReplicationInfo*                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      Recipient;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FName                                       MessageType;                                      		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned char                                      MessageID;                                        		// 0x000C ( 0x0001[ CPF_Parm ]
	struct FName                                       BroadcastType;                                    		// 0x0010 ( 0x0004[ CPF_Parm ]
	class AController*                                 P;                                                		// 0x0014 ( 0x0004
};

// Function Engine.Controller.AllowVoiceMessage
// Flags: 
struct AController_execAllowVoiceMessage_Parms
{
	struct FName                                       MessageType;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.SendMessage
// Flags: 
struct AController_execSendMessage_Parms
{
	class APlayerReplicationInfo*                      Recipient;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       MessageType;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      MessageID;                                        		// 0x0008 ( 0x0001[ CPF_Parm ]
	float                                              wait;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FName                                       BroadcastType;                                    		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.GetMessageIndex
// Flags: 
struct AController_execGetMessageIndex_Parms
{
	struct FName                                       PhraseName;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      ReturnValue;                                      		// 0x0004 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.GetFacingDirection
// Flags: 
struct AController_execGetFacingDirection_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.RenderSpectatorFPWeapon
// Flags: [ FUNC_Simulated ]
struct AController_execRenderSpectatorFPWeapon_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bClearedZBuffer:1;                                		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Controller.RenderOverlays
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AController_eventRenderOverlays_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.StopPawnsAndControllers
// Flags: [ FUNC_Simulated ]
struct AController_execStopPawnsAndControllers_Parms
{
};

// Function Engine.Controller.ClientRoundEnded
// Flags: 
struct AController_execClientRoundEnded_Parms
{
};

// Function Engine.Controller.RoundHasEnded
// Flags: 
struct AController_execRoundHasEnded_Parms
{
};

// Function Engine.Controller.ClientGameEnded
// Flags: 
struct AController_execClientGameEnded_Parms
{
};

// Function Engine.Controller.GameHasEnded
// Flags: 
struct AController_execGameHasEnded_Parms
{
};

// Function Engine.Controller.WantsSmoothedViewNative
// Flags: [ FUNC_Native ]
struct AController_execWantsSmoothedViewNative_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.WantsSmoothedView
// Flags: 
struct AController_execWantsSmoothedView_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.AdjustView
// Flags: [ FUNC_Event ]
struct AController_eventAdjustView_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Controller.AllowDetourTo
// Flags: [ FUNC_Event ]
struct AController_eventAllowDetourTo_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.Destroyed
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AController_eventDestroyed_Parms
{
};

// Function Engine.Controller.DestroyPlayerReplicationInfo
// Flags: [ FUNC_Event ]
struct AController_eventDestroyPlayerReplicationInfo_Parms
{
};

// Function Engine.Controller.HandlePickup
// Flags: 
struct AController_execHandlePickup_Parms
{
	class APickup*                                     pick;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.SameTeamAs
// Flags: 
struct AController_execSameTeamAs_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.GetTeamNum
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct AController_execGetTeamNum_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.InitPlayerReplicationInfo
// Flags: 
struct AController_execInitPlayerReplicationInfo_Parms
{
};

// Function Engine.Controller.PostBeginPlay
// Flags: [ FUNC_Event ]
struct AController_eventPostBeginPlay_Parms
{
};

// Function Engine.Controller.PreBeginPlay
// Flags: [ FUNC_Event ]
struct AController_eventPreBeginPlay_Parms
{
};

// Function Engine.Controller.HandleWalking
// Flags: 
struct AController_execHandleWalking_Parms
{
};

// Function Engine.Controller.Jump
// Flags: [ FUNC_Exec ]
struct AController_execJump_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Controller.TickStance
// Flags: 
struct AController_execTickStance_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      OldCrouch:1;                                      		// 0x0004 ( 0x0004 [0x00000001]
	unsigned long                                      OldProne:1;                                       		// 0x0008 ( 0x0004 [0x00000001]
};

// Function Engine.Controller.SendMessageSprintTime
// Flags: 
struct AController_execSendMessageSprintTime_Parms
{
	int                                                iSendSprintTime;                                  		// 0x0000 ( 0x0004
};

// Function Engine.Controller.TickSprint
// Flags: 
struct AController_execTickSprint_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UPlayerInput*                                pInput;                                           		// 0x0004 ( 0x0004
	class AwGun*                                       Gun;                                              		// 0x0008 ( 0x0004
	class APlayerController*                           PC;                                               		// 0x000C ( 0x0004
	float                                              fStaminaRecovery;                                 		// 0x0010 ( 0x0004
};

// Function Engine.Controller.ServerSetVel
// Flags: 
struct AController_execServerSetVel_Parms
{
	struct FVector                                     Vel;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Controller.ServerSetOldRun
// Flags: 
struct AController_execServerSetOldRun_Parms
{
	unsigned char                                      bSetVal;                                          		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned char                                      bHitVal;                                          		// 0x0001 ( 0x0001[ CPF_Parm ]
};

// Function Engine.Controller.IsBehindView
// Flags: 
struct AController_execIsBehindView_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.PawnIsInPain
// Flags: 
struct AController_execPawnIsInPain_Parms
{
	class APhysicsVolume*                              PainVolume;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.SetFall
// Flags: 
struct AController_execSetFall_Parms
{
};

// Function Engine.Controller.NotifyTakeHit
// Flags: 
struct AController_execNotifyTakeHit_Parms
{
	class APawn*                                       instigatedBy;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
	int                                                Damage;                                           		// 0x0010 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0014 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0018 ( 0x000C[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Controller.NotifyAddInventory
// Flags: 
struct AController_execNotifyAddInventory_Parms
{
	class AInventory*                                  NewItem;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.SetDoubleJump
// Flags: 
struct AController_execSetDoubleJump_Parms
{
};

// Function Engine.Controller.NotifyMissedJump
// Flags: [ FUNC_Event ]
struct AController_eventNotifyMissedJump_Parms
{
};

// Function Engine.Controller.NotifyJumpApex
// Flags: [ FUNC_Event ]
struct AController_eventNotifyJumpApex_Parms
{
};

// Function Engine.Controller.NotifyHitMover
// Flags: [ FUNC_Event ]
struct AController_eventNotifyHitMover_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AMover*                                      Wall;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.NotifyBump
// Flags: [ FUNC_Event ]
struct AController_eventNotifyBump_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.NotifyFallingHitWall
// Flags: [ FUNC_Event ]
struct AController_eventNotifyFallingHitWall_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      Wall;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.NotifyHitWall
// Flags: [ FUNC_Event ]
struct AController_eventNotifyHitWall_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      Wall;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.NotifyPostLanded
// Flags: [ FUNC_Event ]
struct AController_eventNotifyPostLanded_Parms
{
};

// Function Engine.Controller.NotifyLanded
// Flags: [ FUNC_Event ]
struct AController_eventNotifyLanded_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.NotifyHeadVolumeChange
// Flags: [ FUNC_Event ]
struct AController_eventNotifyHeadVolumeChange_Parms
{
	class APhysicsVolume*                              NewVolume;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.NotifyPhysicsVolumeChange
// Flags: [ FUNC_Event ]
struct AController_eventNotifyPhysicsVolumeChange_Parms
{
	class APhysicsVolume*                              NewVolume;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.LongFall
// Flags: [ FUNC_Event ]
struct AController_eventLongFall_Parms
{
};

// Function Engine.Controller.Restart
// Flags: 
struct AController_execRestart_Parms
{
};

// Function Engine.Controller.PawnDied
// Flags: 
struct AController_execPawnDied_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.GetLastWeapon
// Flags: 
struct AController_execGetLastWeapon_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.WasKilledBy
// Flags: 
struct AController_execWasKilledBy_Parms
{
	class AController*                                 Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.UnPossess
// Flags: 
struct AController_execUnPossess_Parms
{
};

// Function Engine.Controller.Possess
// Flags: 
struct AController_execPossess_Parms
{
	class APawn*                                       aPawn;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.SoakStop
// Flags: [ FUNC_Event ]
struct AController_eventSoakStop_Parms
{
	struct FString                                     problem;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Controller.AIHearSound
// Flags: [ FUNC_Event ]
struct AController_eventAIHearSound_Parms
{
	class AActor*                                      Actor;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                id;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	class USound*                                      S;                                                		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FVector                                     SoundLocation;                                    		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     Parameters;                                       		// 0x0018 ( 0x000C[ CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0024 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.Controller.ClientDying
// Flags: 
struct AController_execClientDying_Parms
{
	class UClass*                                      DamageType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Controller.ClientSetRotation
// Flags: 
struct AController_execClientSetRotation_Parms
{
	struct FRotator                                    NewRotation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Controller.ClientSetLocation
// Flags: 
struct AController_execClientSetLocation_Parms
{
	struct FVector                                     NewLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    NewRotation;                                      		// 0x000C ( 0x000C[ CPF_Parm ]
};

// Function Engine.Controller.AvoidCertainDeath
// Flags: 
struct AController_execAvoidCertainDeath_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.Reset
// Flags: 
struct AController_execReset_Parms
{
};

// Function Engine.Controller.GetViewRotation
// Flags: [ FUNC_Simulated ]
struct AController_execGetViewRotation_Parms
{
	struct FRotator                                    ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.GetHumanReadableName
// Flags: [ FUNC_Simulated ]
struct AController_execGetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Controller.DisplayDebug
// Flags: 
struct AController_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FString                                     DebugString;                                      		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.Controller.ClientTestAllWeapons
// Flags: 
struct AController_execClientTestAllWeapons_Parms
{
};

// Function Engine.Controller.ClientTestWeapon
// Flags: 
struct AController_execClientTestWeapon_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iaWeaponID;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.NeedsAdrenaline
// Flags: 
struct AController_execNeedsAdrenaline_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.AwardAdrenaline
// Flags: 
struct AController_execAwardAdrenaline_Parms
{
	float                                              Amount;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.wClientFreeze
// Flags: 
struct AController_execwClientFreeze_Parms
{
	float                                              fTime;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.wViewFlash
// Flags: 
struct AController_execwViewFlash_Parms
{
	float                                              fDeltaTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.wClientFlash
// Flags: 
struct AController_execwClientFlash_Parms
{
	float                                              fTime;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Controller.PendingStasis
// Flags: 
struct AController_execPendingStasis_Parms
{
};

// Function Engine.Controller.Cmd
// Flags: [ FUNC_Exec ]
struct AController_execCmd_Parms
{
	struct FString                                     P1;                                               		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     P2;                                               		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     p3;                                               		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     p4;                                               		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     p5;                                               		// 0x0030 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Controller.MissedDodge
// Flags: [ FUNC_Event ]
struct AController_eventMissedDodge_Parms
{
};

// Function Engine.Controller.MayDodgeToMoveTarget
// Flags: [ FUNC_Event ]
struct AController_eventMayDodgeToMoveTarget_Parms
{
};

// Function Engine.Controller.MayFall
// Flags: [ FUNC_Event ]
struct AController_eventMayFall_Parms
{
};

// Function Engine.Controller.CanMakePathTo
// Flags: [ FUNC_Final | FUNC_Native ]
struct AController_execCanMakePathTo_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.EndClimbLadder
// Flags: [ FUNC_Native ]
struct AController_execEndClimbLadder_Parms
{
};

// Function Engine.Controller.StopWaiting
// Flags: [ FUNC_Native ]
struct AController_execStopWaiting_Parms
{
};

// Function Engine.Controller.InLatentExecution
// Flags: [ FUNC_Final | FUNC_Native ]
struct AController_execInLatentExecution_Parms
{
	int                                                LatentActionNumber;                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.PickAnyTarget
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000216 ( 534 )
struct AController_execPickAnyTarget_Parms
{
	float                                              bestAim;                                          		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              BestDist;                                         		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     FireDir;                                          		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     projStart;                                        		// 0x0014 ( 0x000C[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0020 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.PickTarget
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000213 ( 531 )
struct AController_execPickTarget_Parms
{
	float                                              bestAim;                                          		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              BestDist;                                         		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     FireDir;                                          		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     projStart;                                        		// 0x0014 ( 0x000C[ CPF_Parm ]
	float                                              MaxRange;                                         		// 0x0020 ( 0x0004[ CPF_Parm ]
	class APawn*                                       ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.RemoveController
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000212 ( 530 )
struct AController_execRemoveController_Parms
{
};

// Function Engine.Controller.AddController
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000211 ( 529 )
struct AController_execAddController_Parms
{
};

// Function Engine.Controller.FindBestSuperPickup
// Flags: [ FUNC_Final | FUNC_Native ]
struct AController_execFindBestSuperPickup_Parms
{
	float                                              MaxDist;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.FindBestInventoryPath
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000021C ( 540 )
struct AController_execFindBestInventoryPath_Parms
{
	float                                              MinWeight;                                        		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.WaitForLanding
// Flags: [ FUNC_Final | FUNC_Latent | FUNC_Native ]
// iNative: 0x0000020F ( 527 )
struct AController_execWaitForLanding_Parms
{
};

// Function Engine.Controller.PickWallAdjust
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000020E ( 526 )
struct AController_execPickWallAdjust_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.actorReachable
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000208 ( 520 )
struct AController_execactorReachable_Parms
{
	class AActor*                                      anActor;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.pointReachable
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000209 ( 521 )
struct AController_execpointReachable_Parms
{
	struct FVector                                     aPoint;                                           		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.EAdjustJump
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000020B ( 523 )
struct AController_execEAdjustJump_Parms
{
	float                                              BaseZ;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XYSpeed;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.FindRandomDest
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000020D ( 525 )
struct AController_execFindRandomDest_Parms
{
	class ANavigationPoint*                            ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.FindPathTowardNearest
// Flags: [ FUNC_Final | FUNC_Native ]
struct AController_execFindPathTowardNearest_Parms
{
	class UClass*                                      GoalClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bWeightDetours:1;                                 		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.FindPathToIntercept
// Flags: [ FUNC_Final | FUNC_Native ]
struct AController_execFindPathToIntercept_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      RouteGoal;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bWeightDetours:1;                                 		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.FindPathToward
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000205 ( 517 )
struct AController_execFindPathToward_Parms
{
	class AActor*                                      anActor;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bWeightDetours:1;                                 		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.FindPathTo
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000206 ( 518 )
struct AController_execFindPathTo_Parms
{
	struct FVector                                     aPoint;                                           		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.CanSee
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000215 ( 533 )
struct AController_execCanSee_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.LineOfSightTo
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000202 ( 514 )
struct AController_execLineOfSightTo_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Controller.FinishRotation
// Flags: [ FUNC_Final | FUNC_Latent | FUNC_Native ]
// iNative: 0x000001FC ( 508 )
struct AController_execFinishRotation_Parms
{
};

// Function Engine.Controller.MoveToward
// Flags: [ FUNC_Final | FUNC_Latent | FUNC_Native ]
// iNative: 0x000001F6 ( 502 )
struct AController_execMoveToward_Parms
{
	class AActor*                                      NewTarget;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ViewFocus;                                        		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              DestinationOffset;                                		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseStrafing:1;                                   		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bShouldSprint:1;                                  		// 0x0010 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Controller.MoveTo
// Flags: [ FUNC_Final | FUNC_Latent | FUNC_Native ]
// iNative: 0x000001F4 ( 500 )
struct AController_execMoveTo_Parms
{
	struct FVector                                     NewDestination;                                   		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      ViewFocus;                                        		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bShouldSprint:1;                                  		// 0x0010 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     FocalPoint;                                       		// 0x0014 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.AIController.Startle
// Flags: 
struct AAIController_execStartle_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.AIController.PriorityObjective
// Flags: 
struct AAIController_execPriorityObjective_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AIController.UnderLift
// Flags: 
struct AAIController_execUnderLift_Parms
{
	class AMover*                                      M;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ANavigationPoint*                            N;                                                		// 0x0004 ( 0x0004
};

// Function Engine.AIController.MoverFinished
// Flags: 
struct AAIController_execMoverFinished_Parms
{
};

// Function Engine.AIController.WaitForMover
// Flags: 
struct AAIController_execWaitForMover_Parms
{
	class AMover*                                      M;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.AIController.PrepareForMove
// Flags: [ FUNC_Event ]
struct AAIController_eventPrepareForMove_Parms
{
	class ANavigationPoint*                            Goal;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UReachSpec*                                  Path;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.AIController.GetOrders
// Flags: 
struct AAIController_execGetOrders_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AIController.GetOrderObject
// Flags: 
struct AAIController_execGetOrderObject_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AIController.SetOrders
// Flags: 
struct AAIController_execSetOrders_Parms
{
	struct FName                                       NewOrders;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 OrderGiver;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.AIController.AdjustView
// Flags: [ FUNC_Event ]
struct AAIController_eventAdjustView_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              TargetYaw;                                        		// 0x0004 ( 0x0004
	float                                              TargetPitch;                                      		// 0x0008 ( 0x0004
	struct FRotator                                    OldViewRotation;                                  		// 0x000C ( 0x000C
	struct FRotator                                    ViewRotation;                                     		// 0x0018 ( 0x000C
};

// Function Engine.AIController.GetFacingDirection
// Flags: 
struct AAIController_execGetFacingDirection_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              strafeMag;                                        		// 0x0004 ( 0x0004
//	struct FVector                                     Focus2D;                                          		// 0x0008 ( 0x000C
//	struct FVector                                     Loc2D;                                            		// 0x0014 ( 0x000C
//	struct FVector                                     Dest2D;                                           		// 0x0020 ( 0x000C
//	struct FVector                                     Dir;                                              		// 0x002C ( 0x000C
//	struct FVector                                     LookDir;                                          		// 0x0038 ( 0x000C
//	struct FVector                                     Y;                                                		// 0x0044 ( 0x000C
};

// Function Engine.AIController.AdjustDesireFor
// Flags: 
struct AAIController_execAdjustDesireFor_Parms
{
	class APickup*                                     P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AIController.DisplayDebug
// Flags: 
struct AAIController_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                i;                                                		// 0x000C ( 0x0004
	struct FString                                     t;                                                		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.AIController.TriggerScript
// Flags: 
struct AAIController_execTriggerScript_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AIController.WeaponFireAgain
// Flags: 
struct AAIController_execWeaponFireAgain_Parms
{
	float                                              RefireRate;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bFinishedFire:1;                                  		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AIController.Trigger
// Flags: 
struct AAIController_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.AIController.RateWeapon
// Flags: [ FUNC_Simulated ]
struct AAIController_execRateWeapon_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AIController.Reset
// Flags: 
struct AAIController_execReset_Parms
{
};

// Function Engine.AIController.PreBeginPlay
// Flags: [ FUNC_Event ]
struct AAIController_eventPreBeginPlay_Parms
{
};

// Function Engine.AIController.WaitToSeeEnemy
// Flags: [ FUNC_Final | FUNC_Latent | FUNC_Native ]
// iNative: 0x000001FE ( 510 )
struct AAIController_execWaitToSeeEnemy_Parms
{
};

// Function Engine.wAmmunition.AddAmmo
// Flags: [ FUNC_Simulated ]
struct AwAmmunition_execAddAmmo_Parms
{
	int                                                AmmoToAdd;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAmmunition.HandlePickupQuery
// Flags: 
struct AwAmmunition_execHandlePickupQuery_Parms
{
	class APickup*                                     Item;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAmmunition.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct AwAmmunition_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.wAmmunition.HasAmmo
// Flags: [ FUNC_Simulated ]
struct AwAmmunition_execHasAmmo_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAmmunition.UseAmmo
// Flags: [ FUNC_Simulated ]
struct AwAmmunition_execUseAmmo_Parms
{
	int                                                AmountNeeded;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bAmountNeededIsMax:1;                             		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAmmunition.CheckOutOfAmmo
// Flags: [ FUNC_Simulated ]
struct AwAmmunition_execCheckOutOfAmmo_Parms
{
};

// Function Engine.Inventory.StaticItemName
// Flags: 
struct AInventory_execStaticItemName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Inventory.SetOwnerDisplay
// Flags: 
struct AInventory_execSetOwnerDisplay_Parms
{
};

// Function Engine.Inventory.OwnerEvent
// Flags: 
struct AInventory_execOwnerEvent_Parms
{
	struct FName                                       EventName;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Inventory.PrioritizeArmor
// Flags: 
struct AInventory_execPrioritizeArmor_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	class AArmor*                                      ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AArmor*                                      FirstArmor;                                       		// 0x0018 ( 0x0004
};

// Function Engine.Inventory.NextWeapon
// Flags: [ FUNC_Simulated ]
struct AInventory_execNextWeapon_Parms
{
	class AwWeapon*                                    CurrentChoice;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    CurrentWeapon;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Inventory.PrevWeapon
// Flags: [ FUNC_Simulated ]
struct AInventory_execPrevWeapon_Parms
{
	class AwWeapon*                                    CurrentChoice;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    CurrentWeapon;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Inventory.WeaponChangeWID
// Flags: [ FUNC_Simulated ]
struct AInventory_execWeaponChangeWID_Parms
{
	int                                                iWeaponID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Inventory.WeaponChangeWClass
// Flags: [ FUNC_Simulated ]
struct AInventory_execWeaponChangeWClass_Parms
{
	struct FName                                       wClass;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Inventory.WeaponChange
// Flags: [ FUNC_Simulated ]
struct AInventory_execWeaponChange_Parms
{
	unsigned char                                      f;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      bSilent:1;                                        		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Inventory.Use
// Flags: 
struct AInventory_execUse_Parms
{
	float                                              Value;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Inventory.DropFrom
// Flags: 
struct AInventory_execDropFrom_Parms
{
	struct FVector                                     StartLocation;                                    		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    StartRotation;                                    		// 0x000C ( 0x000C[ CPF_Parm ]
	class APickup*                                     P;                                                		// 0x0018 ( 0x0004
};

// Function Engine.Inventory.SelectNext
// Flags: 
struct AInventory_execSelectNext_Parms
{
	class APowerups*                                   ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Inventory.HandlePickupQuery
// Flags: 
struct AInventory_execHandlePickupQuery_Parms
{
	class APickup*                                     Item;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Inventory.GiveTo
// Flags: 
struct AInventory_execGiveTo_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APickup*                                     Pickup;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Inventory.Destroyed
// Flags: 
struct AInventory_execDestroyed_Parms
{
};

// Function Engine.Inventory.TravelPostAccept
// Flags: 
struct AInventory_execTravelPostAccept_Parms
{
};

// Function Engine.Inventory.TravelPreAccept
// Flags: [ FUNC_Event ]
struct AInventory_eventTravelPreAccept_Parms
{
};

// Function Engine.Inventory.RecommendWeapon
// Flags: [ FUNC_Simulated ]
struct AInventory_execRecommendWeapon_Parms
{
	float                                              rating;                                           		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Inventory.PickupFunction
// Flags: 
struct AInventory_execPickupFunction_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Inventory.GetHumanReadableName
// Flags: [ FUNC_Simulated ]
struct AInventory_execGetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Inventory.RenderOverlays
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AInventory_eventRenderOverlays_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Inventory.DetachFromPawn
// Flags: 
struct AInventory_execDetachFromPawn_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Inventory.updaterelative
// Flags: [ FUNC_Exec ]
struct AInventory_execupdaterelative_Parms
{
	int                                                Pitch;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Yaw;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Roll;                                             		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FRotator                                    NewRot;                                           		// 0x000C ( 0x000C
};

// Function Engine.Inventory.AttachToPawn
// Flags: 
struct AInventory_execAttachToPawn_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       BoneName;                                         		// 0x0004 ( 0x0004
};

// Function Engine.Powerups.GetLocalString
// Flags: 
struct APowerups_execGetLocalString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Powerups.UsedUp
// Flags: 
struct APowerups_execUsedUp_Parms
{
};

// Function Engine.Powerups.FireEffect
// Flags: 
struct APowerups_execFireEffect_Parms
{
};

// Function Engine.Powerups.UseCharge
// Flags: 
struct APowerups_execUseCharge_Parms
{
	float                                              Amount;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Powerups.HandlePickupQuery
// Flags: 
struct APowerups_execHandlePickupQuery_Parms
{
	class APickup*                                     Item;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Powerups.Activate
// Flags: 
struct APowerups_execActivate_Parms
{
};

// Function Engine.Powerups.SelectNext
// Flags: 
struct APowerups_execSelectNext_Parms
{
	class APowerups*                                   ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Powerups.PickupFunction
// Flags: 
struct APowerups_execPickupFunction_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Powerups.TravelPreAccept
// Flags: [ FUNC_Event ]
struct APowerups_eventTravelPreAccept_Parms
{
};

// Function Engine.wWeaponPickup.Tick
// Flags: [ FUNC_Simulated ]
struct AwWeaponPickup_execTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeaponPickup.InitDroppedPickupFor
// Flags: 
struct AwWeaponPickup_execInitDroppedPickupFor_Parms
{
	class AInventory*                                  Inv;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    W;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wWeaponPickup.UnTouch
// Flags: 
struct AwWeaponPickup_execUnTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wWeaponPickup.CheckIsTouchingPawn
// Flags: 
struct AwWeaponPickup_execCheckIsTouchingPawn_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wWeaponPickup.AddTouchingPawn
// Flags: 
struct AwWeaponPickup_execAddTouchingPawn_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wWeaponPickup.Destroyed
// Flags: 
struct AwWeaponPickup_execDestroyed_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wWeaponPickup.PickWeapon
// Flags: 
struct AwWeaponPickup_execPickWeapon_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AInventory*                                  Copy;                                             		// 0x0004 ( 0x0004
};

// Function Engine.wWeaponPickup.ValidTouch
// Flags: 
struct AwWeaponPickup_execValidTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponPickup.SetSkin
// Flags: [ FUNC_Simulated ]
struct AwWeaponPickup_execSetSkin_Parms
{
	int                                                iWeaponID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwWeaponCustomInfoParam*                     wcip;                                             		// 0x0008 ( 0x0004
};

// Function Engine.wWeaponPickup.wLoadOut
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwWeaponPickup_eventwLoadOut_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwWeaponManager*                             wMani;                                            		// 0x0008 ( 0x0004
	class UwWeaponBaseParams*                          wBase;                                            		// 0x000C ( 0x0004
	class UClass*                                      wRes;                                             		// 0x0010 ( 0x0004
};

// Function Engine.wWeaponPickup.Reset
// Flags: 
struct AwWeaponPickup_execReset_Parms
{
};

// Function Engine.wWeaponPickup.GetRespawnTime
// Flags: 
struct AwWeaponPickup_execGetRespawnTime_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponPickup.BotDesireability
// Flags: 
struct AwWeaponPickup_execBotDesireability_Parms
{
	class APawn*                                       Bot;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    AlreadyHas;                                       		// 0x0008 ( 0x0004
//	class UClass*                                      AmmoPickupClass;                                  		// 0x000C ( 0x0004
//	float                                              desire;                                           		// 0x0010 ( 0x0004
};

// Function Engine.wWeaponPickup.DetourWeight
// Flags: 
struct AwWeaponPickup_execDetourWeight_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              PathWeight;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    AlreadyHas;                                       		// 0x000C ( 0x0004
};

// Function Engine.wWeaponPickup.ForceBegin
// Flags: 
struct AwWeaponPickup_execForceBegin_Parms
{
};

// Function Engine.wWeaponPickup.AllowRepeatPickup
// Flags: 
struct AwWeaponPickup_execAllowRepeatPickup_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponPickup.StartSleeping
// Flags: 
struct AwWeaponPickup_execStartSleeping_Parms
{
};

// Function Engine.wWeaponPickup.UpdateHUD
// Flags: [ FUNC_Simulated ]
struct AwWeaponPickup_execUpdateHUD_Parms
{
	class AHUD*                                        H;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeaponPickup.SetWeaponStay
// Flags: 
struct AwWeaponPickup_execSetWeaponStay_Parms
{
};

// Function Engine.wWeaponPickup.PostNetBeginPlay
// Flags: [ FUNC_Event ]
struct AwWeaponPickup_eventPostNetBeginPlay_Parms
{
};

// Function Engine.wWeaponPickup.PostBeginPlay
// Flags: 
struct AwWeaponPickup_execPostBeginPlay_Parms
{
};

// Function Engine.Pickup.GetRespawnTime
// Flags: 
struct APickup_execGetRespawnTime_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pickup.Landed
// Flags: [ FUNC_Event ]
struct APickup_eventLanded_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Pickup.ReadyToPickup
// Flags: 
struct APickup_execReadyToPickup_Parms
{
	float                                              MaxWait;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pickup.InitDroppedPack
// Flags: 
struct APickup_execInitDroppedPack_Parms
{
};

// Function Engine.Pickup.InitDroppedPickupFor
// Flags: 
struct APickup_execInitDroppedPickupFor_Parms
{
	class AInventory*                                  Inv;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pickup.GetLocalString
// Flags: 
struct APickup_execGetLocalString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Pickup.SetRespawn
// Flags: 
struct APickup_execSetRespawn_Parms
{
};

// Function Engine.Pickup.AnnouncePickup
// Flags: 
struct APickup_execAnnouncePickup_Parms
{
	class APawn*                                       Receiver;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pickup.StartSleeping
// Flags: 
struct APickup_execStartSleeping_Parms
{
};

// Function Engine.Pickup.SpawnCopy
// Flags: 
struct APickup_execSpawnCopy_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AInventory*                                  ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Copy;                                             		// 0x0008 ( 0x0004
};

// Function Engine.Pickup.BotDesireability
// Flags: 
struct APickup_execBotDesireability_Parms
{
	class APawn*                                       Bot;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  AlreadyHas;                                       		// 0x0008 ( 0x0004
//	float                                              desire;                                           		// 0x000C ( 0x0004
};

// Function Engine.Pickup.DetourWeight
// Flags: 
struct APickup_execDetourWeight_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              PathWeight;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pickup.Transmogrify
// Flags: 
struct APickup_execTransmogrify_Parms
{
	class UClass*                                      NewClass;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APickup*                                     ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APickup*                                     NewPickup;                                        		// 0x0008 ( 0x0004
};

// Function Engine.Pickup.RespawnEffect
// Flags: 
struct APickup_execRespawnEffect_Parms
{
};

// Function Engine.Pickup.Reset
// Flags: 
struct APickup_execReset_Parms
{
};

// Function Engine.Pickup.UpdateHUD
// Flags: [ FUNC_Simulated ]
struct APickup_execUpdateHUD_Parms
{
	class AHUD*                                        H;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pickup.IsSuperItem
// Flags: 
struct APickup_execIsSuperItem_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Pickup.GetHumanReadableName
// Flags: [ FUNC_Simulated ]
struct APickup_execGetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Pickup.Destroyed
// Flags: 
struct APickup_execDestroyed_Parms
{
};

// Function Engine.Pickup.StaticPrecache
// Flags: 
struct APickup_execStaticPrecache_Parms
{
	class ALevelInfo*                                  L;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Pickup.RemoveFromNavigation
// Flags: [ FUNC_Final | FUNC_Native ]
struct APickup_execRemoveFromNavigation_Parms
{
};

// Function Engine.Pickup.AddToNavigation
// Flags: [ FUNC_Final | FUNC_Native ]
struct APickup_execAddToNavigation_Parms
{
};

// Function Engine.Ammo.SpawnCopy
// Flags: 
struct AAmmo_execSpawnCopy_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AInventory*                                  ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Copy;                                             		// 0x0008 ( 0x0004
};

// Function Engine.Ammo.BotDesireability
// Flags: 
struct AAmmo_execBotDesireability_Parms
{
	class APawn*                                       Bot;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Inv;                                              		// 0x0008 ( 0x0004
//	class AwWeapon*                                    W;                                                		// 0x000C ( 0x0004
//	float                                              desire;                                           		// 0x0010 ( 0x0004
//	class AwAmmunition*                                M;                                                		// 0x0014 ( 0x0004
};

// Function Engine.Ammo.DetourWeight
// Flags: 
struct AAmmo_execDetourWeight_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              PathWeight;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AInventory*                                  Inv;                                              		// 0x000C ( 0x0004
//	class AwWeapon*                                    W;                                                		// 0x0010 ( 0x0004
//	float                                              desire;                                           		// 0x0014 ( 0x0004
};

// Function Engine.Ammo.UpdateHUD
// Flags: [ FUNC_Simulated ]
struct AAmmo_execUpdateHUD_Parms
{
	class AHUD*                                        H;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.LogEntry.Count
// Flags: [ FUNC_Simulated ]
struct ULogEntry_execCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Num;                                              		// 0x0004 ( 0x0004
//	class ULogEntry*                                   le;                                               		// 0x0008 ( 0x0004
};

// Function Engine.LogEntry.Delete
// Flags: [ FUNC_Simulated ]
struct ULogEntry_execDelete_Parms
{
	class ULogEntry*                                   delLE;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ULogEntry*                                   ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class ULogEntry*                                   head;                                             		// 0x0008 ( 0x0004
//	class ULogEntry*                                   Prev;                                             		// 0x000C ( 0x0004
//	class ULogEntry*                                   cur;                                              		// 0x0010 ( 0x0004
};

// Function Engine.LogEntry.Insert
// Flags: [ FUNC_Simulated ]
struct ULogEntry_execInsert_Parms
{
	class ULogEntry*                                   newLE;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ULogEntry*                                   cur;                                              		// 0x0004 ( 0x0004
};

// Function Engine.GameReplicationInfo.SetMaxLives
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execSetMaxLives_Parms
{
	int                                                iMaxLives;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameReplicationInfo.GetMaxLives
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execGetMaxLives_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameReplicationInfo.IsGhostChatting
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execIsGhostChatting_Parms
{
	class AActor*                                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameReplicationInfo.IsDefender
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execIsDefender_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameReplicationInfo.SyncRemainingTime
// Flags: 
struct AGameReplicationInfo_execSyncRemainingTime_Parms
{
};

// Function Engine.GameReplicationInfo.GetDescriptionText
// Flags: [ FUNC_Event ]
struct AGameReplicationInfo_eventGetDescriptionText_Parms
{
	struct FString                                     PropName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameReplicationInfo.FillPlayInfo
// Flags: 
struct AGameReplicationInfo_execFillPlayInfo_Parms
{
	class UPlayInfo*                                   PlayInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.GameReplicationInfo.GetPRIArray
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execGetPRIArray_Parms
{
	class TArray< class APlayerReplicationInfo* >      pris;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
	int                                                Num;                                              		// 0x0010 ( 0x0004
};

// Function Engine.GameReplicationInfo.RemovePRI
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execRemovePRI_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.GameReplicationInfo.AddPRI
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execAddPRI_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      NewVoiceID;                                       		// 0x0004 ( 0x0001
	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.GameReplicationInfo.ForcedRemovePRI
// Flags: [ FUNC_Event ]
struct AGameReplicationInfo_eventForcedRemovePRI_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameReplicationInfo.ForcedAddPRI
// Flags: [ FUNC_Event ]
struct AGameReplicationInfo_eventForcedAddPRI_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameReplicationInfo.FindPlayerByID
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execFindPlayerByID_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.GameReplicationInfo.GetWinTeamIndex
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execGetWinTeamIndex_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                winTeamIndex;                                     		// 0x0004 ( 0x0004
//	class TArray< int >                                TeamScores;                                       		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameReplicationInfo.GetTeamScores
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execGetTeamScores_Parms
{
	class TArray< int >                                ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x000C ( 0x0004
//	class TArray< int >                                TeamScores;                                       		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameReplicationInfo.GetRemainingTime
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execGetRemainingTime_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameReplicationInfo.PlayTimerSound
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execPlayTimerSound_Parms
{
};

// Function Engine.GameReplicationInfo.Timer
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execTimer_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	class APlayerReplicationInfo*                      OldHolder[ 0x02 ];                                		// 0x0004 ( 0x0008
	class AController*                                 C;                                                		// 0x000C ( 0x0004
};

// Function Engine.GameReplicationInfo.Reset
// Flags: 
struct AGameReplicationInfo_execReset_Parms
{
};

// Function Engine.GameReplicationInfo.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execPostBeginPlay_Parms
{
};

// Function Engine.GameReplicationInfo.EventForceBegin
// Flags: [ FUNC_Event ]
struct AGameReplicationInfo_eventEventForceBegin_Parms
{
};

// Function Engine.GameReplicationInfo.UpdatePrecacheMaterials
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execUpdatePrecacheMaterials_Parms
{
};

// Function Engine.GameReplicationInfo.TeamSymbolNotify
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execTeamSymbolNotify_Parms
{
};

// Function Engine.GameReplicationInfo.PostNetBeginPlay
// Flags: [ FUNC_Simulated ]
struct AGameReplicationInfo_execPostNetBeginPlay_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004
};

// Function Engine.InternetInfo.GetBeaconText
// Flags: 
struct AInternetInfo_execGetBeaconText_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.InternetInfo.GetBeaconAddress
// Flags: 
struct AInternetInfo_execGetBeaconAddress_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.InternetInfo.GetBeaconCount
// Flags: 
struct AInternetInfo_execGetBeaconCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerReplicationInfo.GetCheckFriendOrClanMember
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execGetCheckFriendOrClanMember_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                fl1;                                              		// 0x0004 ( 0x0004
//	int                                                nUID;                                             		// 0x0008 ( 0x0004
//	int                                                nUID2;                                            		// 0x000C ( 0x0004
};

// Function Engine.PlayerReplicationInfo.SetQuickSlotIdx
// Flags: 
struct APlayerReplicationInfo_execSetQuickSlotIdx_Parms
{
	int                                                nIdx;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerReplicationInfo.GetUID
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execGetUID_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerReplicationInfo.GetIsSendGameStartTime
// Flags: 
struct APlayerReplicationInfo_execGetIsSendGameStartTime_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerReplicationInfo.SetIsSendGameStartTime
// Flags: 
struct APlayerReplicationInfo_execSetIsSendGameStartTime_Parms
{
	unsigned long                                      bSend:1;                                          		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerReplicationInfo.GetNameCallSign
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerReplicationInfo_eventGetNameCallSign_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerReplicationInfo.GetCallSign
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execGetCallSign_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerReplicationInfo.SetVoiceMemberMask
// Flags: 
struct APlayerReplicationInfo_execSetVoiceMemberMask_Parms
{
	int                                                NewMask;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerReplicationInfo.SetChatPassword
// Flags: 
struct APlayerReplicationInfo_execSetChatPassword_Parms
{
	struct FString                                     InPassword;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerReplicationInfo.SetWaitingPlayer
// Flags: 
struct APlayerReplicationInfo_execSetWaitingPlayer_Parms
{
	unsigned long                                      B:1;                                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.PlayerReplicationInfo.SetPlayerName
// Flags: 
struct APlayerReplicationInfo_execSetPlayerName_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerReplicationInfo.Timer
// Flags: 
struct APlayerReplicationInfo_execTimer_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
};

// Function Engine.PlayerReplicationInfo.ClientNameChange
// Flags: [ FUNC_Event ]
struct APlayerReplicationInfo_eventClientNameChange_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.PlayerReplicationInfo.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.PlayerReplicationInfo.UpdatePlayerLocation
// Flags: 
struct APlayerReplicationInfo_execUpdatePlayerLocation_Parms
{
	class AVolume*                                     V;                                                		// 0x0000 ( 0x0004
	class AVolume*                                     Best;                                             		// 0x0004 ( 0x0004
	class APawn*                                       P;                                                		// 0x0008 ( 0x0004
	class AController*                                 C;                                                		// 0x000C ( 0x0004
};

// Function Engine.PlayerReplicationInfo.UpdatePlayerState
// Flags: 
struct APlayerReplicationInfo_execUpdatePlayerState_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
};

// Function Engine.PlayerReplicationInfo.UpdateCharacter
// Flags: [ FUNC_Event ]
struct APlayerReplicationInfo_eventUpdateCharacter_Parms
{
};

// Function Engine.PlayerReplicationInfo.GetPortrait
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execGetPortrait_Parms
{
	class UMaterial*                                   ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerReplicationInfo.GetLocationName
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execGetLocationName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     VehicleString;                                    		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
//	class AVehicle*                                    V;                                                		// 0x0018 ( 0x0004
};

// Function Engine.PlayerReplicationInfo.GetHumanReadableName
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execGetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerReplicationInfo.Reset
// Flags: 
struct APlayerReplicationInfo_execReset_Parms
{
};

// Function Engine.PlayerReplicationInfo.SetCharacterEquipItem
// Flags: 
struct APlayerReplicationInfo_execSetCharacterEquipItem_Parms
{
	int                                                iBodyID_AF;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iBodyID_RSA;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                iHeadID;                                          		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                iHelmetID;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                iAccessoryID;                                     		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerReplicationInfo.SetCharacterName
// Flags: 
struct APlayerReplicationInfo_execSetCharacterName_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerReplicationInfo.SetCharacterVoice
// Flags: 
struct APlayerReplicationInfo_execSetCharacterVoice_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.PlayerReplicationInfo.LoadLevelMark
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerReplicationInfo_eventLoadLevelMark_Parms
{
};

// Function Engine.PlayerReplicationInfo.ServerSetUAV
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execServerSetUAV_Parms
{
	float                                              Begin;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              End;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PlayerReplicationInfo.Destroyed
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execDestroyed_Parms
{
	class AGameReplicationInfo*                        GRI;                                              		// 0x0000 ( 0x0004
};

// Function Engine.PlayerReplicationInfo.PostNetReceive
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerReplicationInfo_eventPostNetReceive_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.PlayerReplicationInfo.NeedNetNotify
// Flags: [ FUNC_Simulated ]
struct APlayerReplicationInfo_execNeedNetNotify_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlayerReplicationInfo.PostNetBeginPlay
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct APlayerReplicationInfo_eventPostNetBeginPlay_Parms
{
	class AGameReplicationInfo*                        GRI;                                              		// 0x0000 ( 0x0004
	class AVoiceChatReplicationInfo*                   VRI;                                              		// 0x0004 ( 0x0004
};

// Function Engine.PlayerReplicationInfo.PostBeginPlay
// Flags: [ FUNC_Event ]
struct APlayerReplicationInfo_eventPostBeginPlay_Parms
{
};

// Function Engine.LiftExit.SuggestMovePreparation
// Flags: [ FUNC_Event ]
struct ALiftExit_eventSuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AController*                                 C;                                                		// 0x0008 ( 0x0004
};

// Function Engine.LiftExit.CanBeReachedFromLiftBy
// Flags: 
struct ALiftExit_execCanBeReachedFromLiftBy_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              RealJumpZ;                                        		// 0x0008 ( 0x0004
};

// Function Engine.LiftExit.PostBeginPlay
// Flags: 
struct ALiftExit_execPostBeginPlay_Parms
{
};

// Function Engine.LiftCenter.ProceedWithMove
// Flags: 
struct ALiftCenter_execProceedWithMove_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class ALiftExit*                                   Start;                                            		// 0x0008 ( 0x0004
//	float                                              Dist2D;                                           		// 0x000C ( 0x0004
//	struct FVector                                     Dir;                                              		// 0x0010 ( 0x000C
};

// Function Engine.LiftCenter.SuggestMovePreparation
// Flags: 
struct ALiftCenter_execSuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LiftCenter.SpecialHandling
// Flags: 
struct ALiftCenter_execSpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LiftCenter.PostBeginPlay
// Flags: 
struct ALiftCenter_execPostBeginPlay_Parms
{
};

// Function Engine.SavedMove.SetMoveFor
// Flags: [ FUNC_Final ]
struct ASavedMove_execSetMoveFor_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              DeltaTime;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     NewAccel;                                         		// 0x0008 ( 0x000C[ CPF_Parm ]
	unsigned char                                      InDoubleClick;                                    		// 0x0014 ( 0x0001[ CPF_Parm ]
};

// Function Engine.SavedMove.SetInitialPosition
// Flags: [ FUNC_Final ]
struct ASavedMove_execSetInitialPosition_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SavedMove.GetStartLocation
// Flags: 
struct ASavedMove_execGetStartLocation_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.SavedMove.IsJumpMove
// Flags: [ FUNC_Final ]
struct ASavedMove_execIsJumpMove_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.SavedMove.PostUpdate
// Flags: [ FUNC_Final ]
struct ASavedMove_execPostUpdate_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.SavedMove.Clear
// Flags: [ FUNC_Final ]
struct ASavedMove_execClear_Parms
{
};

// Function Engine.HUD.InsertUsingSkillList
// Flags: [ FUNC_Simulated ]
struct AHUD_execInsertUsingSkillList_Parms
{
	int                                                SkillID;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                SubSkillID;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.GetCurGameTime
// Flags: 
struct AHUD_execGetCurGameTime_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.CacheSpecialPositions
// Flags: [ FUNC_Simulated ]
struct AHUD_execCacheSpecialPositions_Parms
{
};

// Function Engine.HUD.GetUAVScanLineTexturePos
// Flags: [ FUNC_Simulated ]
struct AHUD_execGetUAVScanLineTexturePos_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.UpdateUAV
// Flags: [ FUNC_Simulated ]
struct AHUD_execUpdateUAV_Parms
{
};

// Function Engine.HUD.IsUAVOn
// Flags: [ FUNC_Simulated ]
struct AHUD_execIsUAVOn_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.IsUAVScanning
// Flags: [ FUNC_Simulated ]
struct AHUD_execIsUAVScanning_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.GetUAVScanProgress
// Flags: [ FUNC_Simulated ]
struct AHUD_execGetUAVScanProgress_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.OnClientReceiveDeathMessage
// Flags: 
struct AHUD_execOnClientReceiveDeathMessage_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.OnClientReceiveFlyingDefenceBotDeathMessage
// Flags: 
struct AHUD_execOnClientReceiveFlyingDefenceBotDeathMessage_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      attackerPRI;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      victimPRI;                                        		// 0x0008 ( 0x0004[ CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.OnClientReceiveHeliDeathMessage
// Flags: 
struct AHUD_execOnClientReceiveHeliDeathMessage_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      attackerPRI;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      victimPRI;                                        		// 0x0008 ( 0x0004[ CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.NotifyTakeHit
// Flags: 
struct AHUD_execNotifyTakeHit_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	int                                                Damage;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.NotifyDeath
// Flags: 
struct AHUD_execNotifyDeath_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.OnEndChangedHost
// Flags: 
struct AHUD_execOnEndChangedHost_Parms
{
};

// Function Engine.HUD.RemoveHudOverlay
// Flags: [ FUNC_Simulated ]
struct AHUD_execRemoveHudOverlay_Parms
{
	class AHudOverlay*                                 Overlay;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.HUD.AddHudOverlay
// Flags: [ FUNC_Simulated ]
struct AHUD_execAddHudOverlay_Parms
{
	class AHudOverlay*                                 Overlay;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.HUD.DisplayHit
// Flags: 
struct AHUD_execDisplayHit_Parms
{
	struct FVector                                     HitDir;                                           		// 0x0000 ( 0x000C[ CPF_Parm ]
	int                                                Damage;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawTargeting
// Flags: [ FUNC_Simulated ]
struct AHUD_execDrawTargeting_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.AnnouncementPlayed
// Flags: [ FUNC_Event ]
struct AHUD_eventAnnouncementPlayed_Parms
{
	struct FString                                     AnnouncerSound;                                   		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      Switch;                                           		// 0x000C ( 0x0001[ CPF_Parm ]
};

// Function Engine.HUD.LoadProgressFont
// Flags: [ FUNC_Simulated ]
struct AHUD_execLoadProgressFont_Parms
{
	class UFont*                                       ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.LargerFontThan
// Flags: 
struct AHUD_execLargerFontThan_Parms
{
	class UFont*                                       aFont;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UFont*                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.HUD.GetMediumFont
// Flags: 
struct AHUD_execGetMediumFont_Parms
{
	float                                              Size;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UFont*                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.HUD.GetMediumFontFor
// Flags: 
struct AHUD_execGetMediumFontFor_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UFont*                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.HUD.GetFontSizeIndex
// Flags: 
struct AHUD_execGetFontSizeIndex_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                FontSize;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UFont*                                       ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.GetConsoleFont
// Flags: 
struct AHUD_execGetConsoleFont_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UFont*                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                FontSize;                                         		// 0x0008 ( 0x0004
};

// Function Engine.HUD.LoadFont
// Flags: [ FUNC_Simulated ]
struct AHUD_execLoadFont_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UFont*                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.LoadFontStatic
// Flags: 
struct AHUD_execLoadFontStatic_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UFont*                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.SetCropping
// Flags: [ FUNC_Simulated ]
struct AHUD_execSetCropping_Parms
{
	unsigned long                                      Active:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.HUD.DrawCrosshair
// Flags: [ FUNC_Simulated ]
struct AHUD_execDrawCrosshair_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.SetTargeting
// Flags: [ FUNC_Simulated ]
struct AHUD_execSetTargeting_Parms
{
	unsigned long                                      bShow:1;                                          		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	struct FVector                                     TargetLocation;                                   		// 0x0004 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	float                                              Size;                                             		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.FadeZoom
// Flags: 
struct AHUD_execFadeZoom_Parms
{
};

// Function Engine.HUD.ShrinkHUD
// Flags: [ FUNC_Exec ]
struct AHUD_execShrinkHUD_Parms
{
};

// Function Engine.HUD.GrowHUD
// Flags: [ FUNC_Exec ]
struct AHUD_execGrowHUD_Parms
{
};

// Function Engine.HUD.AddTextMessage
// Flags: 
struct AHUD_execAddTextMessage_Parms
{
	struct FString                                     M;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UClass*                                      MessageClass;                                     		// 0x000C ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DisplayMessages
// Flags: 
struct AHUD_execDisplayMessages_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	int                                                j;                                                		// 0x0008 ( 0x0004
	int                                                XPos;                                             		// 0x000C ( 0x0004
	int                                                YPos;                                             		// 0x0010 ( 0x0004
	int                                                MessageCount;                                     		// 0x0014 ( 0x0004
	float                                              XL;                                               		// 0x0018 ( 0x0004
	float                                              YL;                                               		// 0x001C ( 0x0004
};

// Function Engine.HUD.DisplayPortrait
// Flags: 
struct AHUD_execDisplayPortrait_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.Message
// Flags: [ FUNC_Simulated ]
struct AHUD_execMessage_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Msg;                                              		// 0x0004 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       MsgType;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.LinkActors
// Flags: [ FUNC_Simulated ]
struct AHUD_execLinkActors_Parms
{
};

// Function Engine.HUD.ShowFont
// Flags: [ FUNC_Exec ]
struct AHUD_execShowFont_Parms
{
};

// Function Engine.HUD.ShowHud
// Flags: [ FUNC_Exec ]
struct AHUD_execShowHud_Parms
{
};

// Function Engine.HUD.SetScoreBoardClass
// Flags: [ FUNC_Simulated ]
struct AHUD_execSetScoreBoardClass_Parms
{
	class UClass*                                      ScoreboardClass;                                  		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      ResultBoardClass;                                 		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      ResultBoardBootyClass;                            		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawTypingPrompt
// Flags: [ FUNC_Simulated ]
struct AHUD_execDrawTypingPrompt_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                pos;                                              		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              XPos;                                             		// 0x0014 ( 0x0004
	float                                              YPos;                                             		// 0x0018 ( 0x0004
	float                                              XL;                                               		// 0x001C ( 0x0004
	float                                              YL;                                               		// 0x0020 ( 0x0004
};

// Function Engine.HUD.LocalizedMessage2
// Flags: [ FUNC_Simulated ]
struct AHUD_execLocalizedMessage2_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     CriticalString;                                   		// 0x0008 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.HUD.LocalizedMessage
// Flags: [ FUNC_Simulated ]
struct AHUD_execLocalizedMessage_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     CriticalString;                                   		// 0x0014 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.HUD.IsInCinematic
// Flags: 
struct AHUD_execIsInCinematic_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.DisplayBadConnectionAlert
// Flags: 
struct AHUD_execDisplayBadConnectionAlert_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.TutorialEvent
// Flags: 
struct AHUD_execTutorialEvent_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FName                                       reserv;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.CallRadioMessage
// Flags: 
struct AHUD_execCallRadioMessage_Parms
{
	int                                                iKey;                                             		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iReservation1;                                    		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iReservation2;                                    		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.CallEvent
// Flags: 
struct AHUD_execCallEvent_Parms
{
	unsigned long                                      ItemCheck:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                iReservation1;                                    		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iReservation2;                                    		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.CallSkill
// Flags: 
struct AHUD_execCallSkill_Parms
{
	int                                                iKey;                                             		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bRequire:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      iSucess:1;                                        		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.DrawLevelAction
// Flags: 
struct AHUD_execDrawLevelAction_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.DrawGMSpectatingHud
// Flags: 
struct AHUD_execDrawGMSpectatingHud_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawSpectatingHud
// Flags: 
struct AHUD_execDrawSpectatingHud_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawHUD
// Flags: 
struct AHUD_execDrawHUD_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.ResetHud
// Flags: 
struct AHUD_execResetHud_Parms
{
};

// Function Engine.HUD.DisplayProgressMessages
// Flags: [ FUNC_Simulated ]
struct AHUD_execDisplayProgressMessages_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	int                                                LineCount;                                        		// 0x0008 ( 0x0004
	class AGameReplicationInfo*                        GRI;                                              		// 0x000C ( 0x0004
	float                                              FontDX;                                           		// 0x0010 ( 0x0004
	float                                              FontDY;                                           		// 0x0014 ( 0x0004
	float                                              X;                                                		// 0x0018 ( 0x0004
	float                                              Y;                                                		// 0x001C ( 0x0004
	int                                                Alpha;                                            		// 0x0020 ( 0x0004
	float                                              TimeLeft;                                         		// 0x0024 ( 0x0004
};

// Function Engine.HUD.DrawRoute
// Flags: [ FUNC_Simulated ]
struct AHUD_execDrawRoute_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	class AController*                                 C;                                                		// 0x0004 ( 0x0004
	struct FVector                                     Start;                                            		// 0x0008 ( 0x000C
	struct FVector                                     End;                                              		// 0x0014 ( 0x000C
	struct FVector                                     RealStart;                                        		// 0x0020 ( 0x000C
	unsigned long                                      bPath:1;                                          		// 0x002C ( 0x0004 [0x00000001]
};

// Function Engine.HUD.CanvasDrawActors
// Flags: 
struct AHUD_execCanvasDrawActors_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bClearedZBuffer:1;                                		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.HUD.SetInstructionKeyText
// Flags: [ FUNC_Simulated ]
struct AHUD_execSetInstructionKeyText_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.HUD.SetInstructionText
// Flags: [ FUNC_Simulated ]
struct AHUD_execSetInstructionText_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.HUD.DrawInstructionGfx
// Flags: [ FUNC_Simulated ]
struct AHUD_execDrawInstructionGfx_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawCinematicHUD
// Flags: [ FUNC_Simulated ]
struct AHUD_execDrawCinematicHUD_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.HUD.DrawDebugStates
// Flags: 
struct AHUD_execDrawDebugStates_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.HUD.DrawChangeHostGuest
// Flags: 
struct AHUD_execDrawChangeHostGuest_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.PostRender
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AHUD_eventPostRender_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XPos;                                             		// 0x0004 ( 0x0004
	float                                              YPos;                                             		// 0x0008 ( 0x0004
	struct FPlane                                      OldModulate;                                      		// 0x000C ( 0x0010
	struct FPlane                                      OM;                                               		// 0x001C ( 0x0010
	class FColor                                       OldColor;                                         		// 0x002C ( 0x0004
	int                                                i;                                                		// 0x0030 ( 0x0004
	int                                                Y;                                                		// 0x0034 ( 0x0004
	class APlayerController*                           PC;                                               		// 0x0038 ( 0x0004
};

// Function Engine.HUD.DisplayDebug
// Flags: 
struct AHUD_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.HUD.NeedToDrawSpectatingHud
// Flags: [ FUNC_Simulated ]
struct AHUD_execNeedToDrawSpectatingHud_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.HUD.ResetKillMessageTexture
// Flags: [ FUNC_Simulated ]
struct AHUD_execResetKillMessageTexture_Parms
{
};

// Function Engine.HUD.DrawDebug3
// Flags: 
struct AHUD_execDrawDebug3_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class UwMatchMaker*                                kMM;                                              		// 0x0010 ( 0x0004
	class APawn*                                       Wpn;                                              		// 0x0014 ( 0x0004
};

// Function Engine.HUD.DrawDebug_HostPoint
// Flags: 
struct AHUD_execDrawDebug_HostPoint_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class UwMatchMaker*                                kMM;                                              		// 0x0010 ( 0x0004
	class UwMatchUserInfo*                             kUserInfo;                                        		// 0x0014 ( 0x0004
	int                                                i;                                                		// 0x0018 ( 0x0004
};

// Function Engine.HUD.DrawDebug2
// Flags: 
struct AHUD_execDrawDebug2_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawDebug_AllPlayerStates2
// Flags: 
struct AHUD_execDrawDebug_AllPlayerStates2_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class AController*                                 PC;                                               		// 0x0010 ( 0x0004
	class APawn*                                       P;                                                		// 0x0014 ( 0x0004
};

// Function Engine.HUD.DrawDebug
// Flags: 
struct AHUD_execDrawDebug_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawDebug_AllPawnNetStates
// Flags: 
struct AHUD_execDrawDebug_AllPawnNetStates_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0010 ( 0x0004
};

// Function Engine.HUD.DrawDebug_AllPlayerStates
// Flags: 
struct AHUD_execDrawDebug_AllPlayerStates_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class AController*                                 PC;                                               		// 0x0010 ( 0x0004
	class APawn*                                       P;                                                		// 0x0014 ( 0x0004
};

// Function Engine.HUD.DrawDebug_Helicopter
// Flags: 
struct AHUD_execDrawDebug_Helicopter_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class AAIController*                               H;                                                		// 0x0010 ( 0x0004
	class AInventory*                                  i;                                                		// 0x0014 ( 0x0004
	float                                              Max;                                              		// 0x0018 ( 0x0004
	float                                              cur;                                              		// 0x001C ( 0x0004
};

// Function Engine.HUD.DrawDebug_Time
// Flags: 
struct AHUD_execDrawDebug_Time_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawDebug_Spectating
// Flags: 
struct AHUD_execDrawDebug_Spectating_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawDebug_SpectatingAllPlayers
// Flags: 
struct AHUD_execDrawDebug_SpectatingAllPlayers_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class AController*                                 co;                                               		// 0x0010 ( 0x0004
	class APlayerController*                           pco;                                              		// 0x0014 ( 0x0004
};

// Function Engine.HUD.DrawDebug_GSSS
// Flags: 
struct AHUD_execDrawDebug_GSSS_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y;                                                		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                dy;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0010 ( 0x0004
};

// Function Engine.HUD.PostRenderActors
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AHUD_eventPostRenderActors_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.GetLocalStatsScreen
// Flags: 
struct AHUD_execGetLocalStatsScreen_Parms
{
};

// Function Engine.HUD.ConnectFailure
// Flags: [ FUNC_Event ]
struct AHUD_eventConnectFailure_Parms
{
	struct FString                                     FailCode;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     URL;                                              		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.HUD.CheckCountdown
// Flags: 
struct AHUD_execCheckCountdown_Parms
{
	class AGameReplicationInfo*                        GRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.WorldSpaceOverlays
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AHUD_eventWorldSpaceOverlays_Parms
{
};

// Function Engine.HUD.ShowDebug3
// Flags: [ FUNC_Exec ]
struct AHUD_execShowDebug3_Parms
{
};

// Function Engine.HUD.ShowDebug2
// Flags: [ FUNC_Exec ]
struct AHUD_execShowDebug2_Parms
{
};

// Function Engine.HUD.ShowDebug1
// Flags: [ FUNC_Exec ]
struct AHUD_execShowDebug1_Parms
{
};

// Function Engine.HUD.ShowDebugChan
// Flags: [ FUNC_Exec ]
struct AHUD_execShowDebugChan_Parms
{
};

// Function Engine.HUD.ShowDebug
// Flags: [ FUNC_Exec ]
struct AHUD_execShowDebug_Parms
{
};

// Function Engine.HUD.NextStats
// Flags: [ FUNC_Exec ]
struct AHUD_execNextStats_Parms
{
};

// Function Engine.HUD.ShowStats
// Flags: [ FUNC_Exec ]
struct AHUD_execShowStats_Parms
{
};

// Function Engine.HUD.HideMapInfo
// Flags: [ FUNC_Exec ]
struct AHUD_execHideMapInfo_Parms
{
};

// Function Engine.HUD.ShowMapInfo
// Flags: [ FUNC_Exec ]
struct AHUD_execShowMapInfo_Parms
{
};

// Function Engine.HUD.HideScores
// Flags: [ FUNC_Exec ]
struct AHUD_execHideScores_Parms
{
};

// Function Engine.HUD.ShowScores
// Flags: [ FUNC_Exec ]
struct AHUD_execShowScores_Parms
{
};

// Function Engine.HUD.Destroyed
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AHUD_eventDestroyed_Parms
{
};

// Function Engine.HUD.CreateKeyMenus
// Flags: [ FUNC_Simulated ]
struct AHUD_execCreateKeyMenus_Parms
{
};

// Function Engine.HUD.Reset
// Flags: 
struct AHUD_execReset_Parms
{
};

// Function Engine.HUD.PostBeginPlay
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AHUD_eventPostBeginPlay_Parms
{
};

// Function Engine.HUD.BuildMOTD
// Flags: [ FUNC_Simulated ]
struct AHUD_execBuildMOTD_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	class TArray< struct FString >                     InMOTD;                                           		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.HUD.DrawCustomBeacon
// Flags: 
struct AHUD_execDrawCustomBeacon_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ScreenLocX;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              ScreenLocY;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	class UTexture*                                    BeaconTex;                                        		// 0x0010 ( 0x0004
	float                                              XL;                                               		// 0x0014 ( 0x0004
	float                                              YL;                                               		// 0x0018 ( 0x0004
};

// Function Engine.HUD.AllDeleteAASNotice
// Flags: [ FUNC_Simulated ]
struct AHUD_execAllDeleteAASNotice_Parms
{
};

// Function Engine.HUD.PushAASNotice
// Flags: [ FUNC_Simulated ]
struct AHUD_execPushAASNotice_Parms
{
	struct FString                                     sNotice;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              beginTime;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned char                                      byLevel;                                          		// 0x0010 ( 0x0001[ CPF_Parm ]
};

// Function Engine.HUD.AllDeleteGameNotice
// Flags: [ FUNC_Simulated ]
struct AHUD_execAllDeleteGameNotice_Parms
{
};

// Function Engine.HUD.PushGameNotice
// Flags: [ FUNC_Simulated ]
struct AHUD_execPushGameNotice_Parms
{
	struct FString                                     sGameNotice;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.HUD.AllDeleteSuppliesPositions
// Flags: [ FUNC_Simulated ]
struct AHUD_execAllDeleteSuppliesPositions_Parms
{
};

// Function Engine.HUD.DeleteSuppliesPositions
// Flags: [ FUNC_Simulated ]
struct AHUD_execDeleteSuppliesPositions_Parms
{
	class AActor*                                      act;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.CacheSuppliesPositions
// Flags: [ FUNC_Simulated ]
struct AHUD_execCacheSuppliesPositions_Parms
{
	class AActor*                                      act;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.ChangeWeaponSlot5Hud
// Flags: 
struct AHUD_execChangeWeaponSlot5Hud_Parms
{
	class AwWeapon*                                    newWeapon;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bAddSkill:1;                                      		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.HUD.ChangeWeaponSlot6Hud
// Flags: 
struct AHUD_execChangeWeaponSlot6Hud_Parms
{
	class AwWeapon*                                    newWeapon;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.OnBuildMOTD
// Flags: 
struct AHUD_execOnBuildMOTD_Parms
{
	class AHUD*                                        Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.OnPostRender
// Flags: 
struct AHUD_execOnPostRender_Parms
{
	class AHUD*                                        Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UCanvas*                                     C;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.CalculateMinimapSize
// Flags: 
struct AHUD_execCalculateMinimapSize_Parms
{
	float                                              fWidth;                                           		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              fHeight;                                          		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.HUD.CalculateWorldPostionToMinimapPosition
// Flags: 
struct AHUD_execCalculateWorldPostionToMinimapPosition_Parms
{
	struct FVector                                     Location;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              mx;                                               		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              my;                                               		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.HUD.StaticDrawCanvasLine
// Flags: [ FUNC_Final | FUNC_Native ]
struct AHUD_execStaticDrawCanvasLine_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              X1;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	class FColor                                       LineColor;                                        		// 0x0014 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawCanvasLine
// Flags: [ FUNC_Final | FUNC_Native ]
struct AHUD_execDrawCanvasLine_Parms
{
	float                                              X1;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	class FColor                                       LineColor;                                        		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawDirectionalArrow
// Flags: [ FUNC_Final | FUNC_Native ]
struct AHUD_execDrawDirectionalArrow_Parms
{
	struct FVector                                     InLocation;                                       		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    InRotation;                                       		// 0x000C ( 0x000C[ CPF_Parm ]
	class FColor                                       InColor;                                          		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              InDrawScale;                                      		// 0x001C ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawSphere
// Flags: [ FUNC_Final | FUNC_Native ]
struct AHUD_execDrawSphere_Parms
{
	struct FVector                                     Base;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
	class FColor                                       Color;                                            		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                NumDivisions;                                     		// 0x0014 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawCircle
// Flags: [ FUNC_Final | FUNC_Native ]
struct AHUD_execDrawCircle_Parms
{
	struct FVector                                     Base;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     X;                                                		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     Y;                                                		// 0x0018 ( 0x000C[ CPF_Parm ]
	class FColor                                       Color;                                            		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              Radius;                                           		// 0x0028 ( 0x0004[ CPF_Parm ]
	int                                                NumSides;                                         		// 0x002C ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.DrawBox
// Flags: [ FUNC_Final | FUNC_Native ]
struct AHUD_execDrawBox_Parms
{
	struct FVector                                     Min;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Max;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	class FColor                                       Color;                                            		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.HUD.Draw3DLine
// Flags: [ FUNC_Final | FUNC_Native ]
struct AHUD_execDraw3DLine_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     End;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	class FColor                                       LineColor;                                        		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.WarpZoneMarker.SpecialHandling
// Flags: 
struct AWarpZoneMarker_execSpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WarpZoneMarker.FindTriggerActor
// Flags: 
struct AWarpZoneMarker_execFindTriggerActor_Parms
{
	class AZoneTrigger*                                Z;                                                		// 0x0000 ( 0x0004
};

// Function Engine.WarpZoneMarker.PostBeginPlay
// Flags: 
struct AWarpZoneMarker_execPostBeginPlay_Parms
{
};

// Function Engine.Trigger.UnTouch
// Flags: 
struct ATrigger_execUnTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Trigger.TakeDamage
// Flags: 
struct ATrigger_execTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Trigger.Timer
// Flags: 
struct ATrigger_execTimer_Parms
{
	unsigned long                                      bKeepTiming:1;                                    		// 0x0000 ( 0x0004 [0x00000001]
	class AActor*                                      A;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Trigger.Touch
// Flags: 
struct ATrigger_execTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Trigger.FindInstigator
// Flags: 
struct ATrigger_execFindInstigator_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Trigger.IsRelevant
// Flags: 
struct ATrigger_execIsRelevant_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AActor*                                      Inst;                                             		// 0x0008 ( 0x0004
};

// Function Engine.Trigger.CheckTouchList
// Flags: 
struct ATrigger_execCheckTouchList_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Trigger.SpecialHandling
// Flags: 
struct ATrigger_execSpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AActor*                                      A;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Trigger.FindTriggerActor
// Flags: 
struct ATrigger_execFindTriggerActor_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Trigger.Reset
// Flags: 
struct ATrigger_execReset_Parms
{
};

// Function Engine.Trigger.PostBeginPlay
// Flags: 
struct ATrigger_execPostBeginPlay_Parms
{
};

// Function Engine.Trigger.PreBeginPlay
// Flags: 
struct ATrigger_execPreBeginPlay_Parms
{
};

// Function Engine.Trigger.SelfTriggered
// Flags: 
struct ATrigger_execSelfTriggered_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Trigger.PlayerToucherDied
// Flags: 
struct ATrigger_execPlayerToucherDied_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.InventorySpot.DetourWeight
// Flags: [ FUNC_Event ]
struct AInventorySpot_eventDetourWeight_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              PathWeight;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.InventorySpot.GetMoveTargetFor
// Flags: 
struct AInventorySpot_execGetMoveTargetFor_Parms
{
	class AAIController*                               B;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              MaxWait;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Teleporter.SpecialCost
// Flags: [ FUNC_Event ]
struct ATeleporter_eventSpecialCost_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UReachSpec*                                  Path;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Teleporter.SpecialHandling
// Flags: 
struct ATeleporter_execSpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     Dist2D;                                           		// 0x0008 ( 0x000C
};

// Function Engine.Teleporter.PostTouch
// Flags: [ FUNC_Simulated ]
struct ATeleporter_execPostTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ATeleporter*                                 D;                                                		// 0x0004 ( 0x0004
	class ATeleporter*                                 Dest[ 0x10 ];                                     		// 0x0008 ( 0x0040
	int                                                i;                                                		// 0x0048 ( 0x0004
};

// Function Engine.Teleporter.Touch
// Flags: [ FUNC_Event ]
struct ATeleporter_eventTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Teleporter.Trigger
// Flags: 
struct ATeleporter_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0008 ( 0x0004
};

// Function Engine.Teleporter.Accept
// Flags: [ FUNC_Simulated ]
struct ATeleporter_execAccept_Parms
{
	class AActor*                                      Incoming;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Source;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FRotator                                    NewRot;                                           		// 0x000C ( 0x000C
//	struct FRotator                                    OldRot;                                           		// 0x0018 ( 0x000C
//	float                                              mag;                                              		// 0x0024 ( 0x0004
//	struct FVector                                     oldDir;                                           		// 0x0028 ( 0x000C
//	class AController*                                 P;                                                		// 0x0034 ( 0x0004
};

// Function Engine.Teleporter.FindTriggerActor
// Flags: 
struct ATeleporter_execFindTriggerActor_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Teleporter.PostBeginPlay
// Flags: 
struct ATeleporter_execPostBeginPlay_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.WarpZoneInfo.ActorLeaving
// Flags: [ FUNC_Event ]
struct AWarpZoneInfo_eventActorLeaving_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.WarpZoneInfo.ActorEntered
// Flags: [ FUNC_Simulated ]
struct AWarpZoneInfo_execActorEntered_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     L;                                                		// 0x0004 ( 0x000C
	struct FRotator                                    R;                                                		// 0x0010 ( 0x000C
	class AController*                                 P;                                                		// 0x001C ( 0x0004
};

// Function Engine.WarpZoneInfo.ForceGenerate
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AWarpZoneInfo_eventForceGenerate_Parms
{
};

// Function Engine.WarpZoneInfo.Generate
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AWarpZoneInfo_eventGenerate_Parms
{
};

// Function Engine.WarpZoneInfo.Trigger
// Flags: 
struct AWarpZoneInfo_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                nextPick;                                         		// 0x0008 ( 0x0004
};

// Function Engine.WarpZoneInfo.PreBeginPlay
// Flags: 
struct AWarpZoneInfo_execPreBeginPlay_Parms
{
};

// Function Engine.WarpZoneInfo.UnWarp
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000013B ( 315 )
struct AWarpZoneInfo_execUnWarp_Parms
{
	struct FVector                                     loc;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     Vel;                                              		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    R;                                                		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.WarpZoneInfo.Warp
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x0000013A ( 314 )
struct AWarpZoneInfo_execWarp_Parms
{
	struct FVector                                     loc;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     Vel;                                              		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    R;                                                		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.ZoneInfo.ActorLeaving
// Flags: [ FUNC_Event ]
struct AZoneInfo_eventActorLeaving_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ZoneInfo.ActorEntered
// Flags: [ FUNC_Event ]
struct AZoneInfo_eventActorEntered_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ZoneInfo.PreBeginPlay
// Flags: [ FUNC_Simulated ]
struct AZoneInfo_execPreBeginPlay_Parms
{
};

// Function Engine.ZoneInfo.LinkToSkybox
// Flags: [ FUNC_Simulated ]
struct AZoneInfo_execLinkToSkybox_Parms
{
	class ASkyZoneInfo*                                TempSkyZone;                                      		// 0x0000 ( 0x0004
};

// Function Engine.ZoneInfo.ZoneActors
// Flags: [ FUNC_Final | FUNC_Native ]
// iNative: 0x00000134 ( 308 )
struct AZoneInfo_execZoneActors_Parms
{
	class UClass*                                      baseClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Actor;                                            		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.Projectile.SufferEffect
// Flags: [ FUNC_Simulated ]
struct AProjectile_execSufferEffect_Parms
{
	class APawn*                                       Victim;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fDist;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              fReduceRate;                                      		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Projectile.PostRender2D
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AProjectile_eventPostRender2D_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ScreenLocX;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ScreenLocY;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Projectile.IsStationary
// Flags: 
struct AProjectile_execIsStationary_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Projectile.GetRange
// Flags: [ FUNC_Simulated ]
struct AProjectile_execGetRange_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Projectile.RandSpin
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct AProjectile_execRandSpin_Parms
{
	float                                              spinRate;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Projectile.Explode
// Flags: [ FUNC_Simulated ]
struct AProjectile_execExplode_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     HitNormal;                                        		// 0x000C ( 0x000C[ CPF_Parm ]
};

// Function Engine.Projectile.BlowUp
// Flags: [ FUNC_Simulated ]
struct AProjectile_execBlowUp_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Projectile.HitWall
// Flags: [ FUNC_Simulated ]
struct AProjectile_execHitWall_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      Wall;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	class UMaterial*                                   HitMaterial;                                      		// 0x0010 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0014 ( 0x0004
};

// Function Engine.Projectile.ProcessTouch
// Flags: [ FUNC_Simulated ]
struct AProjectile_execProcessTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Projectile.ClientSideTouch
// Flags: [ FUNC_Simulated ]
struct AProjectile_execClientSideTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Projectile.Touch
// Flags: [ FUNC_Simulated ]
struct AProjectile_execTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C
	struct FVector                                     HitNormal;                                        		// 0x0010 ( 0x000C
};

// Function Engine.Projectile.EncroachingOn
// Flags: 
struct AProjectile_execEncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Projectile.HurtRadius
// Flags: [ FUNC_Simulated ]
struct AProjectile_execHurtRadius_Parms
{
	float                                              DamageAmount;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              DamageRadius;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              Momentum;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0010 ( 0x000C[ CPF_Parm ]
	class AActor*                                      Victims;                                          		// 0x001C ( 0x0004
	float                                              damageScale;                                      		// 0x0020 ( 0x0004
	float                                              dist;                                             		// 0x0024 ( 0x0004
	struct FVector                                     Dir;                                              		// 0x0028 ( 0x000C
	float                                              fActualMomentum;                                  		// 0x0034 ( 0x0004
};

// Function Engine.Projectile.CheckMaxEffectDistance
// Flags: [ FUNC_Simulated ]
struct AProjectile_execCheckMaxEffectDistance_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     SpawnLocation;                                    		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Projectile.Reset
// Flags: 
struct AProjectile_execReset_Parms
{
};

// Function Engine.Projectile.OnEndRound
// Flags: 
struct AProjectile_execOnEndRound_Parms
{
};

// Function Engine.Projectile.CanSplash
// Flags: [ FUNC_Simulated ]
struct AProjectile_execCanSplash_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Projectile.SpecialCalcView
// Flags: 
struct AProjectile_execSpecialCalcView_Parms
{
	class AActor*                                      ViewActor;                                        		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CameraLocation;                                   		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      bBehindView:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Projectile.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct AProjectile_execPostBeginPlay_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.Projectile.GetInstigatorsDirectionbyDot
// Flags: [ FUNC_Native ]
struct AProjectile_execGetInstigatorsDirectionbyDot_Parms
{
	struct FRotator                                    pawnRotation;                                     		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     pawnVelocity;                                     		// 0x000C ( 0x000C[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Decoration.Bump
// Flags: 
struct ADecoration_execBump_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Speed;                                            		// 0x0004 ( 0x0004
	float                                              OldZ;                                             		// 0x0008 ( 0x0004
};

// Function Engine.Decoration.Timer
// Flags: 
struct ADecoration_execTimer_Parms
{
};

// Function Engine.Decoration.Destroyed
// Flags: [ FUNC_Simulated ]
struct ADecoration_execDestroyed_Parms
{
	class AInventory*                                  dropped;                                          		// 0x0000 ( 0x0004
	int                                                i;                                                		// 0x0004 ( 0x0004
	class AFragment*                                   S;                                                		// 0x0008 ( 0x0004
	float                                              BaseSize;                                         		// 0x000C ( 0x0004
};

// Function Engine.Decoration.BaseChange
// Flags: 
struct ADecoration_execBaseChange_Parms
{
};

// Function Engine.Decoration.Trigger
// Flags: 
struct ADecoration_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Decoration.PhysicsVolumeChange
// Flags: 
struct ADecoration_execPhysicsVolumeChange_Parms
{
	class APhysicsVolume*                              NewVolume;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Decoration.TakeDamage
// Flags: 
struct ADecoration_execTakeDamage_Parms
{
	int                                                NDamage;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.Decoration.HitWall
// Flags: 
struct ADecoration_execHitWall_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      Wall;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	class UMaterial*                                   HitMaterial;                                      		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Decoration.Landed
// Flags: 
struct ADecoration_execLanded_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    NewRot;                                           		// 0x000C ( 0x000C
};

// Function Engine.Decoration.Drop
// Flags: 
struct ADecoration_execDrop_Parms
{
	struct FVector                                     NewVel;                                           		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FString                                     sReason;                                          		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Decoration.CanSplash
// Flags: 
struct ADecoration_execCanSplash_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Decoration.NotReachableBy
// Flags: [ FUNC_Event ]
struct ADecoration_eventNotReachableBy_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Scout.PreBeginPlay
// Flags: [ FUNC_Simulated ]
struct AScout_execPreBeginPlay_Parms
{
};

// Function Engine.GameInfo.PermitWeaponChangeInSpecialMode
// Flags: 
struct AGameInfo_execPermitWeaponChangeInSpecialMode_Parms
{
};

// Function Engine.GameInfo.rfAckGetBotID
// Flags: 
struct AGameInfo_execrfAckGetBotID_Parms
{
	int                                                Result;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      RequestedAFCount;                                 		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned char                                      RequestedRSACount;                                		// 0x0005 ( 0x0001[ CPF_Parm ]
	class TArray< int >                                AFBotID;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< int >                                RSABotID;                                         		// 0x0014 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetNearFlag
// Flags: [ FUNC_Event ]
struct AGameInfo_eventGetNearFlag_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetGameSpecificPurposes
// Flags: 
struct AGameInfo_execGetGameSpecificPurposes_Parms
{
	class AController*                                 Owner;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< class UObject* >                     purposes;                                         		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetGameSpecificActions
// Flags: 
struct AGameInfo_execGetGameSpecificActions_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwNPCActions*                                npcActions;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	class TArray< class UObject* >                     Actions;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetDeathPosArray
// Flags: 
struct AGameInfo_execGetDeathPosArray_Parms
{
	class TArray< struct FVector >                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.PushDeathPos
// Flags: 
struct AGameInfo_execPushDeathPos_Parms
{
	struct FVector                                     vPos;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.GameInfo.Kill
// Flags: 
struct AGameInfo_execKill_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.GetFlagsInfo
// Flags: 
struct AGameInfo_execGetFlagsInfo_Parms
{
	int                                                outNumFlags;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                outNumCapturedFlagsByTeam1;                       		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                outNumCapturedFlagsByTeam2;                       		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.GameInfo.GetSupplyRandom
// Flags: 
struct AGameInfo_execGetSupplyRandom_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              fReturn;                                          		// 0x0004 ( 0x0004
};

// Function Engine.GameInfo.CanPawnTakeDamage
// Flags: 
struct AGameInfo_execCanPawnTakeDamage_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.SendRoundStartTime
// Flags: 
struct AGameInfo_execSendRoundStartTime_Parms
{
	class TArray< int >                                aPlayerIDs;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.SendGameStartTime
// Flags: 
struct AGameInfo_execSendGameStartTime_Parms
{
	class TArray< int >                                aPlayerIDs;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.SendReqChangeWeaponSet
// Flags: 
struct AGameInfo_execSendReqChangeWeaponSet_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                SlotIndex;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.SendReqUpdateMyHostPriorityPoint
// Flags: 
struct AGameInfo_execSendReqUpdateMyHostPriorityPoint_Parms
{
	int                                                Point;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.IsWarpPossible
// Flags: 
struct AGameInfo_execIsWarpPossible_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.IsRightTimeForRespawn
// Flags: 
struct AGameInfo_execIsRightTimeForRespawn_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.SendMatchOverEnd
// Flags: 
struct AGameInfo_execSendMatchOverEnd_Parms
{
};

// Function Engine.GameInfo.SendMatchOver
// Flags: 
struct AGameInfo_execSendMatchOver_Parms
{
};

// Function Engine.GameInfo.GetTotalPlayedTime
// Flags: 
struct AGameInfo_execGetTotalPlayedTime_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.CountPlayers
// Flags: 
struct AGameInfo_execCountPlayers_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
//	int                                                Count;                                            		// 0x0008 ( 0x0004
};

// Function Engine.GameInfo.SendMatchResult
// Flags: 
struct AGameInfo_execSendMatchResult_Parms
{
};

// Function Engine.GameInfo.SendRawMatchResult
// Flags: 
struct AGameInfo_execSendRawMatchResult_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
	int                                                UID;                                              		// 0x0004 ( 0x0004
	class TArray< int >                                RoundJoin;                                        		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                TimeJoin;                                         		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                UserIDs;                                          		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                Kills;                                            		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                Assists;                                          		// 0x0038 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                Deaths;                                           		// 0x0044 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                EXPs;                                             		// 0x0050 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                Points;                                           		// 0x005C ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                Scores;                                           		// 0x0068 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                PlayedOwnerID;                                    		// 0x0074 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                PlayedTime;                                       		// 0x0080 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                PlayedSeconds;                                    		// 0x008C ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                PlayedCount;                                      		// 0x0098 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< int >                                PlayedRound;                                      		// 0x00A4 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FString >                     Names;                                            		// 0x00B0 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  PlayedUniqueItemID;                               		// 0x00BC ( 0x000C[ CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x00C8 ( 0x0004
	class TArray< int >                                TeamScores;                                       		// 0x00CC ( 0x000C[ CPF_NeedCtorLink ]
	class UwMatchUserInfo*                             UserInfo;                                         		// 0x00D8 ( 0x0004
	class AController*                                 C;                                                		// 0x00DC ( 0x0004
	class APlayerController*                           P;                                                		// 0x00E0 ( 0x0004
	int                                                iCode_Message;                                    		// 0x00E4 ( 0x0004
};

// Function Engine.GameInfo.GetTeamScores
// Flags: 
struct AGameInfo_execGetTeamScores_Parms
{
	class TArray< int >                                ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetResultPointRatio_Intervention
// Flags: 
struct AGameInfo_execGetResultPointRatio_Intervention_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.CalcResultPoints
// Flags: 
struct AGameInfo_execCalcResultPoints_Parms
{
};

// Function Engine.GameInfo.DeadUse
// Flags: 
struct AGameInfo_execDeadUse_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.IsPawnAlive
// Flags: 
struct AGameInfo_execIsPawnAlive_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.IsRespawnRestrictionTime
// Flags: [ FUNC_Simulated ]
struct AGameInfo_execIsRespawnRestrictionTime_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.DisableNextObjective
// Flags: 
struct AGameInfo_execDisableNextObjective_Parms
{
};

// Function Engine.GameInfo.WeakObjectives
// Flags: 
struct AGameInfo_execWeakObjectives_Parms
{
};

// Function Engine.GameInfo.MultiMinPlayers
// Flags: 
struct AGameInfo_execMultiMinPlayers_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.JustStarted
// Flags: 
struct AGameInfo_execJustStarted_Parms
{
	float                                              t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.StripColor
// Flags: 
struct AGameInfo_execStripColor_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                P;                                                		// 0x0018 ( 0x0004
};

// Function Engine.GameInfo.AddServerDetail
// Flags: 
struct AGameInfo_execAddServerDetail_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x0000 ( 0x0070[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     RuleName;                                         		// 0x0070 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     RuleValue;                                        		// 0x007C ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0088 ( 0x0004
};

// Function Engine.GameInfo.AllowMutator
// Flags: 
struct AGameInfo_execAllowMutator_Parms
{
	struct FString                                     MutatorClassName;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.IsVehicleMutator
// Flags: 
struct AGameInfo_execIsVehicleMutator_Parms
{
	struct FString                                     MutatorClassName;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetBindWeight
// Flags: 
struct AGameInfo_execGetBindWeight_Parms
{
	unsigned char                                      KeyNumber;                                        		// 0x0000 ( 0x0001[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.MakeColorCode
// Flags: 
struct AGameInfo_execMakeColorCode_Parms
{
	class FColor                                       NewColor;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetNextLoadHint
// Flags: 
struct AGameInfo_execGetNextLoadHint_Parms
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetKeyBindName
// Flags: 
struct AGameInfo_execGetKeyBindName_Parms
{
	struct FString                                     Cmd;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerController*                           Ref;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     BindStr;                                          		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< struct FString >                     Bindings;                                         		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0034 ( 0x0004
//	int                                                idx;                                              		// 0x0038 ( 0x0004
//	int                                                BestIdx;                                          		// 0x003C ( 0x0004
//	int                                                Weight;                                           		// 0x0040 ( 0x0004
//	int                                                BestWeight;                                       		// 0x0044 ( 0x0004
};

// Function Engine.GameInfo.ParseLoadingHint
// Flags: 
struct AGameInfo_execParseLoadingHint_Parms
{
	struct FString                                     Hint;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerController*                           Ref;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	class FColor                                       HintColor;                                        		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     CurrentHint;                                      		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     Cmd;                                              		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     Result;                                           		// 0x0038 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                pos;                                              		// 0x0044 ( 0x0004
};

// Function Engine.GameInfo.GetLoadingHint
// Flags: 
struct AGameInfo_execGetLoadingHint_Parms
{
	class APlayerController*                           Ref;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class FColor                                       HintColor;                                        		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     Hint;                                             		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                Attempt;                                          		// 0x002C ( 0x0004
};

// Function Engine.GameInfo.GetAllLoadHints
// Flags: 
struct AGameInfo_execGetAllLoadHints_Parms
{
	unsigned long                                      bThisClassOnly:1;                                 		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.NoTranslocatorKeyPressed
// Flags: [ FUNC_Event ]
struct AGameInfo_eventNoTranslocatorKeyPressed_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.SceneAbort
// Flags: [ FUNC_Event ]
struct AGameInfo_eventSceneAbort_Parms
{
};

// Function Engine.GameInfo.SceneEnded
// Flags: [ FUNC_Event ]
struct AGameInfo_eventSceneEnded_Parms
{
	class ASceneManager*                               SM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Other;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.SceneStarted
// Flags: [ FUNC_Event ]
struct AGameInfo_eventSceneStarted_Parms
{
	class ASceneManager*                               SM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Other;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.AdjustBotInterface
// Flags: 
struct AGameInfo_execAdjustBotInterface_Parms
{
	unsigned long                                      bSinglePlayer:1;                                  		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.GameInfo.ParseVoiceCommand
// Flags: 
struct AGameInfo_execParseVoiceCommand_Parms
{
	class APlayerController*                           Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     RecognizedString;                                 		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetPlayerControllerList
// Flags: 
struct AGameInfo_execGetPlayerControllerList_Parms
{
	class TArray< class APlayerController* >           ControllerArray;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class AController*                                 C;                                                		// 0x000C ( 0x0004
	class APlayerController*                           PC;                                               		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.LoadSRGrammar
// Flags: [ FUNC_Native ]
struct AGameInfo_execLoadSRGrammar_Parms
{
	struct FString                                     Grammar;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.SetGrammar
// Flags: [ FUNC_Event ]
struct AGameInfo_eventSetGrammar_Parms
{
};

// Function Engine.GameInfo.GetDefenderNum
// Flags: 
struct AGameInfo_execGetDefenderNum_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.FindSpecGoalFor
// Flags: 
struct AGameInfo_execFindSpecGoalFor_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                TeamIndex;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.RegisterVehicle
// Flags: 
struct AGameInfo_execRegisterVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.AdminSay
// Flags: [ FUNC_Exec ]
struct AGameInfo_execAdminSay_Parms
{
	struct FString                                     Msg;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AController*                                 C;                                                		// 0x000C ( 0x0004
};

// Function Engine.GameInfo.KillBots
// Flags: [ FUNC_Exec ]
struct AGameInfo_execKillBots_Parms
{
	int                                                Num;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.OtherTeam
// Flags: 
struct AGameInfo_execOtherTeam_Parms
{
	class ATeamInfo*                                   Requester;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ATeamInfo*                                   ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.DriverLeftVehicle
// Flags: 
struct AGameInfo_execDriverLeftVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.CanLeaveVehicle
// Flags: 
struct AGameInfo_execCanLeaveVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.DriverEnteredVehicle
// Flags: 
struct AGameInfo_execDriverEnteredVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.CanEnterVehicle
// Flags: 
struct AGameInfo_execCanEnterVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.NewRecommendCombo
// Flags: 
struct AGameInfo_execNewRecommendCombo_Parms
{
	struct FString                                     ComboName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AAIController*                               C;                                                		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     NewComboName;                                     		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.RecommendCombo
// Flags: 
struct AGameInfo_execRecommendCombo_Parms
{
	struct FString                                     ComboName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.ReviewJumpSpots
// Flags: 
struct AGameInfo_execReviewJumpSpots_Parms
{
	struct FName                                       TestLabel;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.OrderToIndex
// Flags: 
struct AGameInfo_execOrderToIndex_Parms
{
	int                                                Order;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.AcceptPlayInfoProperty
// Flags: [ FUNC_Event ]
struct AGameInfo_eventAcceptPlayInfoProperty_Parms
{
	struct FString                                     PropName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetDescriptionText
// Flags: 
struct AGameInfo_execGetDescriptionText_Parms
{
	struct FString                                     PropName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetDisplayText
// Flags: 
struct AGameInfo_execGetDisplayText_Parms
{
	struct FString                                     PropName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.FillPlayInfo
// Flags: 
struct AGameInfo_execFillPlayInfo_Parms
{
	class UPlayInfo*                                   PlayInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.ParseMessageString
// Flags: 
struct AGameInfo_execParseMessageString_Parms
{
	class AMutator*                                    BaseMutator;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Who;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Message;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.ParseChatPercVar
// Flags: 
struct AGameInfo_execParseChatPercVar_Parms
{
	class AMutator*                                    BaseMutator;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Who;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Cmd;                                              		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.FindTeamDesignation
// Flags: 
struct AGameInfo_execFindTeamDesignation_Parms
{
	class AGameReplicationInfo*                        GRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetRandomTeamSymbol
// Flags: 
struct AGameInfo_execGetRandomTeamSymbol_Parms
{
	int                                                Base;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UTexture*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.TooManyBots
// Flags: 
struct AGameInfo_execTooManyBots_Parms
{
	class AController*                                 botToRemove;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetMultykillBonusPoint
// Flags: 
struct AGameInfo_execGetMultykillBonusPoint_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                AddExp;                                           		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                AddPoint;                                         		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                MultyKill;                                        		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.SendMessageAddScore
// Flags: 
struct AGameInfo_execSendMessageAddScore_Parms
{
	class AController*                                 ReceiveController;                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killer;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AController*                                 Other;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                KillWeapon;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                iConKillorHeadShot;                               		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                addScore;                                         		// 0x0014 ( 0x0004
	int                                                iCode_Message;                                    		// 0x0018 ( 0x0004
};

// Function Engine.GameInfo.SetAssistPoint
// Flags: 
struct AGameInfo_execSetAssistPoint_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Other;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	class TArray< class AController* >                 AssistList;                                       		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                iTemp;                                            		// 0x0014 ( 0x0004
	int                                                iMessageCode;                                     		// 0x0018 ( 0x0004
	int                                                AssisterUID;                                      		// 0x001C ( 0x0004
	float                                              fAssistScore;                                     		// 0x0020 ( 0x0004
	unsigned char                                      byAssistType;                                     		// 0x0024 ( 0x0001
};

// Function Engine.GameInfo.GetAssistScore
// Flags: 
struct AGameInfo_execGetAssistScore_Parms
{
	unsigned char                                      byAssistType;                                     		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	int                                                iMessageCode;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              fAssistScore;                                     		// 0x000C ( 0x0004
};

// Function Engine.GameInfo.SendSeverScoreAndAssist
// Flags: 
struct AGameInfo_execSendSeverScoreAndAssist_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Other;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AController*                                 PC;                                               		// 0x0008 ( 0x0004
	class TArray< class AController* >                 AssistList;                                       		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                iTemp;                                            		// 0x0018 ( 0x0004
	int                                                iPlayerID;                                        		// 0x001C ( 0x0004
};

// Function Engine.GameInfo.ScoreKill
// Flags: 
struct AGameInfo_execScoreKill_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Other;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                AddExp;                                           		// 0x0008 ( 0x0004
	int                                                AddPoint;                                         		// 0x000C ( 0x0004
	float                                              addScore;                                         		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.GetAddScore
// Flags: 
struct AGameInfo_execGetAddScore_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Other;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.ScoreObjective
// Flags: 
struct AGameInfo_execScoreObjective_Parms
{
	class APlayerReplicationInfo*                      Scorer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Score;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.TeamScoreEvent
// Flags: 
struct AGameInfo_execTeamScoreEvent_Parms
{
	int                                                Team;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Points;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Desc;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.ScoreEvent
// Flags: 
struct AGameInfo_execScoreEvent_Parms
{
	class APlayerReplicationInfo*                      Who;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Points;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Desc;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.CheckScore
// Flags: 
struct AGameInfo_execCheckScore_Parms
{
	class APlayerReplicationInfo*                      Scorer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.RatePlayerStart
// Flags: 
struct AGameInfo_execRatePlayerStart_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Team;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	class AController*                                 Player;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerStart*                                P;                                                		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.FindPlayerStart_TU
// Flags: 
struct AGameInfo_execFindPlayerStart_TU_Parms
{
	class AController*                                 Player;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      inTeam;                                           		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     incomingName;                                     		// 0x0008 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	class ANavigationPoint*                            ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class ANavigationPoint*                            respawnPoint;                                     		// 0x0018 ( 0x0004
};

// Function Engine.GameInfo.FindPlayerStart
// Flags: 
struct AGameInfo_execFindPlayerStart_Parms
{
	class AController*                                 Player;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      inTeam;                                           		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     incomingName;                                     		// 0x0008 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	class ANavigationPoint*                            ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class ANavigationPoint*                            N;                                                		// 0x0018 ( 0x0004
//	class ANavigationPoint*                            BestStart;                                        		// 0x001C ( 0x0004
//	class ATeleporter*                                 Tel;                                              		// 0x0020 ( 0x0004
//	float                                              BestRating;                                       		// 0x0024 ( 0x0004
//	float                                              NewRating;                                        		// 0x0028 ( 0x0004
//	unsigned char                                      Team;                                             		// 0x002C ( 0x0001
//	class APawn*                                       pickedAlly;                                       		// 0x0030 ( 0x0004
//	class ANavigationPoint*                            respawnPoint;                                     		// 0x0034 ( 0x0004
};

// Function Engine.GameInfo.IsSDRespawnTime
// Flags: [ FUNC_Event ]
struct AGameInfo_eventIsSDRespawnTime_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.LogNavigationPoints
// Flags: 
struct AGameInfo_execLogNavigationPoints_Parms
{
	class TArray< class ANavigationPoint* >            ns;                                               		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                lp1;                                              		// 0x000C ( 0x0004
	class APlayerStart*                                S;                                                		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.FindPlayerStart_SD
// Flags: 
struct AGameInfo_execFindPlayerStart_SD_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	class ANavigationPoint*                            ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerStart_SD*                             S;                                                		// 0x0008 ( 0x0004
//	int                                                Len;                                              		// 0x000C ( 0x0004
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
//	class ANavigationPoint*                            N;                                                		// 0x0014 ( 0x0004
//	class ANavigationPoint*                            respawn;                                          		// 0x0018 ( 0x0004
//	unsigned char                                      Type;                                             		// 0x001C ( 0x0001
//	class TArray< class APlayerStart_SD* >             candidates;                                       		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.LogFinalRespawnPoint
// Flags: 
struct AGameInfo_execLogFinalRespawnPoint_Parms
{
	class ANavigationPoint*                            respawnPoint;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Team;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	class TArray< class AActor* >                      enemies;                                          		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                lp1;                                              		// 0x0014 ( 0x0004
	float                                              minDist;                                          		// 0x0018 ( 0x0004
	float                                              dist;                                             		// 0x001C ( 0x0004
	class APawn*                                       Pawn;                                             		// 0x0020 ( 0x0004
};

// Function Engine.GameInfo.GetRespawnPointRatingEnemy
// Flags: 
struct AGameInfo_execGetRespawnPointRatingEnemy_Parms
{
	unsigned long                                      giveNearnessScore:1;                              		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class TArray< class ANavigationPoint* >            respawnCandidates;                                		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      Team;                                             		// 0x0010 ( 0x0001[ CPF_Parm ]
	class ANavigationPoint*                            ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              DISABLE_DISTANCE;                                 		// 0x0018 ( 0x0004
//	int                                                MAX_SAFE_CHECK;                                   		// 0x001C ( 0x0004
//	int                                                lpCandidate;                                      		// 0x0020 ( 0x0004
//	int                                                lpEnemy;                                          		// 0x0024 ( 0x0004
//	int                                                lp1;                                              		// 0x0028 ( 0x0004
//	int                                                lp2;                                              		// 0x002C ( 0x0004
//	float                                              Distance;                                         		// 0x0030 ( 0x0004
//	float                                              closestDistance;                                  		// 0x0034 ( 0x0004
//	int                                                checkLeft;                                        		// 0x0038 ( 0x0004
//	class ANavigationPoint*                            tempPoint;                                        		// 0x003C ( 0x0004
//	float                                              tempScore;                                        		// 0x0040 ( 0x0004
//	unsigned char                                      tempEnable;                                       		// 0x0044 ( 0x0001
//	int                                                SHUFFLE_COUNT;                                    		// 0x0048 ( 0x0004
//	int                                                A;                                                		// 0x004C ( 0x0004
//	int                                                B;                                                		// 0x0050 ( 0x0004
//	class TArray< float >                              respawnCandidateScores;                           		// 0x0054 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< unsigned char >                      respawnCandidateEnabled;                          		// 0x0060 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< class AActor* >                      enemyList;                                        		// 0x006C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetRespawnPointsSortedByClosenessTo
// Flags: 
struct AGameInfo_execGetRespawnPointsSortedByClosenessTo_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Team;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	int                                                Count;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
	class TArray< class ANavigationPoint* >            ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< class ANavigationPoint* >            candidates;                                       		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< class ANavigationPoint* >            returnList;                                       		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< float >                              candidateDists;                                   		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
//	class APlayerStart*                                S;                                                		// 0x003C ( 0x0004
//	class APawn*                                       P;                                                		// 0x0040 ( 0x0004
//	int                                                lp1;                                              		// 0x0044 ( 0x0004
};

// Function Engine.GameInfo.SortNavigationPoints2
// Flags: 
struct AGameInfo_execSortNavigationPoints2_Parms
{
	struct FVector                                     centerLoc;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class TArray< class ANavigationPoint* >            candidates;                                       		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< float >                              candidateDists;                                   		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                lp1;                                              		// 0x0024 ( 0x0004
	int                                                lp2;                                              		// 0x0028 ( 0x0004
	float                                              dist;                                             		// 0x002C ( 0x0004
	class ANavigationPoint*                            N;                                                		// 0x0030 ( 0x0004
};

// Function Engine.GameInfo.SortNavigationPoints
// Flags: 
struct AGameInfo_execSortNavigationPoints_Parms
{
	class AActor*                                      center;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< class ANavigationPoint* >            candidates;                                       		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class TArray< float >                              candidateDists;                                   		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.IsSafeFromEnemySight
// Flags: 
struct AGameInfo_execIsSafeFromEnemySight_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Team;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x000C ( 0x0004
//	class TArray< class AActor* >                      enemies;                                          		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FVector                                     Foot;                                             		// 0x001C ( 0x000C
//	struct FVector                                     crouch;                                           		// 0x0028 ( 0x000C
//	struct FVector                                     stand;                                            		// 0x0034 ( 0x000C
//	struct FVector                                     enemyFoot;                                        		// 0x0040 ( 0x000C
//	struct FVector                                     enemyCrouch;                                      		// 0x004C ( 0x000C
//	struct FVector                                     enemyStand;                                       		// 0x0058 ( 0x000C
};

// Function Engine.GameInfo.PickAlly
// Flags: 
struct AGameInfo_execPickAlly_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	class APawn*                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class TArray< class APawn* >                       recentlySpawnedAllyList;                          		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< class APawn* >                       safeAllyList;                                     		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< class APawn* >                       allyList;                                         		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
//	class APawn*                                       pickedAlly;                                       		// 0x002C ( 0x0004
};

// Function Engine.GameInfo.GetPersonalEnemyList
// Flags: 
struct AGameInfo_execGetPersonalEnemyList_Parms
{
	class APawn*                                       myPawn;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< class AActor* >                      ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
//	class APawn*                                       P;                                                		// 0x0014 ( 0x0004
//	class TArray< class AActor* >                      enemies;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetEveryEnemyList2
// Flags: 
struct AGameInfo_execGetEveryEnemyList2_Parms
{
	unsigned char                                      myTeam;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
	class TArray< class AActor* >                      ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
//	int                                                lp2;                                              		// 0x0014 ( 0x0004
//	class APawn*                                       P;                                                		// 0x0018 ( 0x0004
//	class TArray< class AActor* >                      enemies;                                          		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
//	class AActor*                                      tmp;                                              		// 0x0028 ( 0x0004
};

// Function Engine.GameInfo.GetEveryEnemyList
// Flags: 
struct AGameInfo_execGetEveryEnemyList_Parms
{
	unsigned char                                      myTeam;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
	class TArray< class AActor* >                      ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
//	class APawn*                                       P;                                                		// 0x0014 ( 0x0004
//	class TArray< class AActor* >                      enemies;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.UpdatePositionLog
// Flags: 
struct AGameInfo_execUpdatePositionLog_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004
	struct FVector                                     vMoveDir;                                         		// 0x0008 ( 0x000C
};

// Function Engine.GameInfo.GetEveryAllyList
// Flags: 
struct AGameInfo_execGetEveryAllyList_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	class TArray< class APawn* >                       ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
//	class APawn*                                       P;                                                		// 0x0014 ( 0x0004
//	class TArray< class APawn* >                       allies;                                           		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.IsAnyAllyAlive
// Flags: 
struct AGameInfo_execIsAnyAllyAlive_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AController*                                 C;                                                		// 0x0008 ( 0x0004
};

// Function Engine.GameInfo.GetSafeAllyList
// Flags: 
struct AGameInfo_execGetSafeAllyList_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	class TArray< class APawn* >                       ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
//	int                                                lpEnemy;                                          		// 0x0014 ( 0x0004
//	class APawn*                                       ally;                                             		// 0x0018 ( 0x0004
//	class TArray< class APawn* >                       allies;                                           		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< class APawn* >                       safeAllies;                                       		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< class AActor* >                      enemies;                                          		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
//	float                                              dist;                                             		// 0x0040 ( 0x0004
//	unsigned long                                      hasCloseEnemy:1;                                  		// 0x0044 ( 0x0004 [0x00000001]
};

// Function Engine.GameInfo.GetRecentlySpawnedAllyList
// Flags: 
struct AGameInfo_execGetRecentlySpawnedAllyList_Parms
{
	class TArray< class APawn* >                       ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< class APawn* >                       allies;                                           		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetSafetestRespawnPoint
// Flags: 
struct AGameInfo_execGetSafetestRespawnPoint_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	class TArray< class ANavigationPoint* >            starts;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      skipAppropriateCheck:1;                           		// 0x0010 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class ANavigationPoint*                            ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class ANavigationPoint*                            S;                                                		// 0x0018 ( 0x0004
//	class TArray< class AActor* >                      enemies;                                          		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< class ANavigationPoint* >            candidates;                                       		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< class ANavigationPoint* >            candidates2;                                      		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< float >                              candidateMinDists;                                		// 0x0040 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< float >                              candidateMinDists2;                               		// 0x004C ( 0x000C[ CPF_NeedCtorLink ]
//	class ANavigationPoint*                            tempPoint;                                        		// 0x0058 ( 0x0004
//	int                                                lp1;                                              		// 0x005C ( 0x0004
//	int                                                lp2;                                              		// 0x0060 ( 0x0004
//	int                                                A;                                                		// 0x0064 ( 0x0004
//	int                                                B;                                                		// 0x0068 ( 0x0004
//	float                                              dist;                                             		// 0x006C ( 0x0004
//	float                                              minDist;                                          		// 0x0070 ( 0x0004
//	int                                                MAX_TRY;                                          		// 0x0074 ( 0x0004
//	int                                                SHUFFLE_COUNT;                                    		// 0x0078 ( 0x0004
//	int                                                pickRandom;                                       		// 0x007C ( 0x0004
};

// Function Engine.GameInfo.IsAppropriateRespawnPoint
// Flags: 
struct AGameInfo_execIsAppropriateRespawnPoint_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Team;                                             		// 0x0004 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.IsRespawnPointFailedRecently
// Flags: 
struct AGameInfo_execIsRespawnPointFailedRecently_Parms
{
	class ANavigationPoint*                            S;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.IsAnyPawnWithinRadius
// Flags: 
struct AGameInfo_execIsAnyPawnWithinRadius_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0008 ( 0x0004
//	float                                              dist;                                             		// 0x000C ( 0x0004
//	float                                              PAWN_RADIUS;                                      		// 0x0010 ( 0x0004
//	class APawn*                                       P;                                                		// 0x0014 ( 0x0004
};

// Function Engine.GameInfo.IsRespawnSpecialCase
// Flags: 
struct AGameInfo_execIsRespawnSpecialCase_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.EndLogging
// Flags: 
struct AGameInfo_execEndLogging_Parms
{
	struct FString                                     Reason;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.TieOnTimeOver
// Flags: 
struct AGameInfo_execTieOnTimeOver_Parms
{
};

// Function Engine.GameInfo.EndGame
// Flags: 
struct AGameInfo_execEndGame_Parms
{
	class APlayerReplicationInfo*                      Winner;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Reason;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.CheckEndGameCondition
// Flags: [ FUNC_Event ]
struct AGameInfo_eventCheckEndGameCondition_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.CheckEndGame
// Flags: 
struct AGameInfo_execCheckEndGame_Parms
{
	class APlayerReplicationInfo*                      Winner;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Reason;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AController*                                 P;                                                		// 0x0014 ( 0x0004
};

// Function Engine.GameInfo.BroadcastLocalized
// Flags: [ FUNC_Event ]
struct AGameInfo_eventBroadcastLocalized_Parms
{
	class AActor*                                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      Message;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.GameInfo.BroadcastTeam
// Flags: 
struct AGameInfo_execBroadcastTeam_Parms
{
	class AController*                                 Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Msg;                                              		// 0x0004 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.GameInfo.Broadcast
// Flags: [ FUNC_Event ]
struct AGameInfo_eventBroadcast_Parms
{
	class AActor*                                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Msg;                                              		// 0x0004 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.GameInfo.ChangeVoiceChannel
// Flags: 
struct AGameInfo_execChangeVoiceChannel_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                NewChannelIndex;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                OldChannelIndex;                                  		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.GetMapList
// Flags: 
struct AGameInfo_execGetMapList_Parms
{
	struct FString                                     MapListClassType;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AMapList*                                    ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UClass*                                      MapListClass;                                     		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.GetMapRotation
// Flags: 
struct AGameInfo_execGetMapRotation_Parms
{
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.RestartGame
// Flags: 
struct AGameInfo_execRestartGame_Parms
{
	struct FString                                     NextMap;                                          		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class AMapList*                                    MyList;                                           		// 0x000C ( 0x0004
};

// Function Engine.GameInfo.SendPlayer
// Flags: 
struct AGameInfo_execSendPlayer_Parms
{
	class APlayerController*                           aPlayer;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     URL;                                              		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.PickTeam
// Flags: 
struct AGameInfo_execPickTeam_Parms
{
	unsigned char                                      Current;                                          		// 0x0000 ( 0x0001[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      ReturnValue;                                      		// 0x0008 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.ChangeTeam
// Flags: 
struct AGameInfo_execChangeTeam_Parms
{
	class AController*                                 Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                N;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bNewTeam:1;                                       		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.ForcedChangeTeam
// Flags: [ FUNC_Event ]
struct AGameInfo_eventForcedChangeTeam_Parms
{
	class AController*                                 Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                N;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bNewTeam:1;                                       		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.ChangeName
// Flags: 
struct AGameInfo_execChangeName_Parms
{
	class AController*                                 Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     S;                                                		// 0x0004 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	unsigned long                                      bNameChange:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0014 ( 0x0004
};

// Function Engine.GameInfo.DiscardInventory
// Flags: 
struct AGameInfo_execDiscardInventory_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.PickupQuery
// Flags: 
struct AGameInfo_execPickupQuery_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APickup*                                     Item;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      bAllowPickup;                                     		// 0x000C ( 0x0001
};

// Function Engine.GameInfo.ShouldRespawn
// Flags: 
struct AGameInfo_execShouldRespawn_Parms
{
	class APickup*                                     Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.ReduceDamage
// Flags: 
struct AGameInfo_execReduceDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       injured;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	class UClass*                                      DamageType;                                       		// 0x0024 ( 0x0004[ CPF_Parm ]
	int                                                iWeaponType;                                      		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x002C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                OriginalDamage;                                   		// 0x0030 ( 0x0004
//	class AArmor*                                      FirstArmor;                                       		// 0x0034 ( 0x0004
//	class AArmor*                                      NextArmor;                                        		// 0x0038 ( 0x0004
};

// Function Engine.GameInfo.CanSpectate
// Flags: 
struct AGameInfo_execCanSpectate_Parms
{
	class APlayerController*                           Viewer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bOnlySpectator:1;                                 		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AActor*                                      ViewTarget;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.IsOnTeam
// Flags: 
struct AGameInfo_execIsOnTeam_Parms
{
	class AController*                                 Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                TeamNum;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                OtherTeam;                                        		// 0x000C ( 0x0004
};

// Function Engine.GameInfo.SameTeam
// Flags: 
struct AGameInfo_execSameTeam_Parms
{
	class AController*                                 A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 B;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.KickBan
// Flags: 
struct AGameInfo_execKickBan_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.SessionKickBan
// Flags: 
struct AGameInfo_execSessionKickBan_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.Kick
// Flags: 
struct AGameInfo_execKick_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.ParseKillMessage
// Flags: [ FUNC_Native ]
struct AGameInfo_execParseKillMessage_Parms
{
	struct FString                                     KillerName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     VictimName;                                       		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     DeathMessage;                                     		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.BroadcastDeathMessage
// Flags: 
struct AGameInfo_execBroadcastDeathMessage_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Other;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                TempSwitch;                                       		// 0x0014 ( 0x0004
	int                                                IsHeadShot;                                       		// 0x0018 ( 0x0004
	int                                                IsEnableAim;                                      		// 0x001C ( 0x0004
	int                                                IsAimShot;                                        		// 0x0020 ( 0x0004
	int                                                IsPinPointKill;                                   		// 0x0024 ( 0x0004
	class UClass*                                      TempDamageType;                                   		// 0x0028 ( 0x0004
};

// Function Engine.GameInfo.GetWDamageType
// Flags: 
struct AGameInfo_execGetWDamageType_Parms
{
	class UClass*                                      DamageType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                IsHeadShot;                                       		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                IsEnableAim;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	class UClass*                                      ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      MyCollisionPart;                                  		// 0x0018 ( 0x0001
//	unsigned char                                      MyWeaponType;                                     		// 0x0019 ( 0x0001
};

// Function Engine.GameInfo.PreventSever
// Flags: 
struct AGameInfo_execPreventSever_Parms
{
	class APawn*                                       Killed;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       BoneName;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Damage;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.PreventDeath
// Flags: 
struct AGameInfo_execPreventDeath_Parms
{
	class APawn*                                       Killed;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killer;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x000C ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.Killed
// Flags: 
struct AGameInfo_execKilled_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killed;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APawn*                                       KilledPawn;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class AVehicle*                                    V;                                                		// 0x001C ( 0x0004
	struct FString                                     strDamageType;                                    		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                iUID;                                             		// 0x002C ( 0x0004
	int                                                supplyID;                                         		// 0x0030 ( 0x0004
	unsigned long                                      updateScore:1;                                    		// 0x0034 ( 0x0004 [0x00000001]
	int                                                iConKillorHeadShot;                               		// 0x0038 ( 0x0004
};

// Function Engine.GameInfo.ExceptionKillWeapon
// Flags: 
struct AGameInfo_execExceptionKillWeapon_Parms
{
	int                                                iKillWeaponID;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                iResult;                                          		// 0x0010 ( 0x0004
//	struct FString                                     sDamageType;                                      		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.KDLOG_Finalize_HeliCopter
// Flags: 
struct AGameInfo_execKDLOG_Finalize_HeliCopter_Parms
{
	int                                                KillerUID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killer;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AController*                                 HeliCopter;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x000C ( 0x0004
	int                                                iPlayerID;                                        		// 0x0010 ( 0x0004
	class UwMatchUserInfo*                             UserInfo;                                         		// 0x0014 ( 0x0004
	float                                              fKillXCoord;                                      		// 0x0018 ( 0x0004
	float                                              fKillYCoord;                                      		// 0x001C ( 0x0004
	float                                              fKillZCoord;                                      		// 0x0020 ( 0x0004
	int                                                iKillPos;                                         		// 0x0024 ( 0x0004
	int                                                iKillWeapon;                                      		// 0x0028 ( 0x0004
	int                                                iKillWeaponPart;                                  		// 0x002C ( 0x0004
	int                                                iKillRange;                                       		// 0x0030 ( 0x0004
	int                                                iKillDamage;                                      		// 0x0034 ( 0x0004
	int                                                iChopperCallerID;                                 		// 0x0038 ( 0x0004
	struct FString                                     strChopperCallerName;                             		// 0x003C ( 0x000C[ CPF_NeedCtorLink ]
	float                                              fDeathXCoord;                                     		// 0x0048 ( 0x0004
	float                                              fDeathYCoord;                                     		// 0x004C ( 0x0004
	float                                              fDeathZCoord;                                     		// 0x0050 ( 0x0004
};

// Function Engine.GameInfo.KDLOG_Finalize
// Flags: 
struct AGameInfo_execKDLOG_Finalize_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                iPlayerID;                                        		// 0x0004 ( 0x0004
	int                                                iAssi;                                            		// 0x0008 ( 0x0004
	class UwMatchUserInfo*                             Killer;                                           		// 0x000C ( 0x0004
	class UwMatchUserInfo*                             Killed;                                           		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.KDLOG_Initialize
// Flags: 
struct AGameInfo_execKDLOG_Initialize_Parms
{
	struct FKillDeathLog                               empty;                                            		// 0x0000 ( 0x004C
};

// Function Engine.GameInfo.DoProcessKillMessage
// Flags: 
struct AGameInfo_execDoProcessKillMessage_Parms
{
	class UClass*                                      DamageType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.SendQuest_KillSuccession
// Flags: 
struct AGameInfo_execSendQuest_KillSuccession_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      byKillSuccession;                                 		// 0x0004 ( 0x0001[ CPF_Parm ]
	int                                                iCode_Message;                                    		// 0x0008 ( 0x0004
};

// Function Engine.GameInfo.SendMessageKillSuccssion
// Flags: 
struct AGameInfo_execSendMessageKillSuccssion_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      byKillSuccession;                                 		// 0x0008 ( 0x0001[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                iArray;                                           		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.ProcessKillMessage
// Flags: 
struct AGameInfo_execProcessKillMessage_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killed;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iConKillorHeadShot;                               		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm | CPF_OutParm ]
	unsigned long                                      bWallShot:1;                                      		// 0x0014 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x0018 ( 0x0004
	class APlayerController*                           PC;                                               		// 0x001C ( 0x0004
	float                                              fDist;                                            		// 0x0020 ( 0x0004
	unsigned char                                      byKillSuccession;                                 		// 0x0024 ( 0x0001
	int                                                iArray;                                           		// 0x0028 ( 0x0004
	unsigned char                                      MyCollisionPart;                                  		// 0x002C ( 0x0001
	unsigned char                                      MyWeaponType;                                     		// 0x002D ( 0x0001
	int                                                iCode_Message;                                    		// 0x0030 ( 0x0004
	int                                                iSoundCase;                                       		// 0x0034 ( 0x0004
};

// Function Engine.GameInfo.KillEvent
// Flags: 
struct AGameInfo_execKillEvent_Parms
{
	struct FString                                     KillType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      Killer;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      Victim;                                           		// 0x0010 ( 0x0004[ CPF_Parm ]
	class UClass*                                      Damage;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.NotifyKilled
// Flags: 
struct AGameInfo_execNotifyKilled_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killed;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APawn*                                       KilledPawn;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x000C ( 0x0004
};

// Function Engine.GameInfo.SetPlayerDefaults
// Flags: 
struct AGameInfo_execSetPlayerDefaults_Parms
{
	class APawn*                                       PlayerPawn;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.AddDefaultInventory
// Flags: 
struct AGameInfo_execAddDefaultInventory_Parms
{
	class APawn*                                       PlayerPawn;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    newWeapon;                                        		// 0x0004 ( 0x0004
	class UClass*                                      WeapClass;                                        		// 0x0008 ( 0x0004
};

// Function Engine.GameInfo.AddGameSpecificInventory
// Flags: 
struct AGameInfo_execAddGameSpecificInventory_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    newWeapon;                                        		// 0x0004 ( 0x0004
	class UClass*                                      WeapClass;                                        		// 0x0008 ( 0x0004
};

// Function Engine.GameInfo.AcceptInventory
// Flags: [ FUNC_Event ]
struct AGameInfo_eventAcceptInventory_Parms
{
	class APawn*                                       PlayerPawn;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.NotifyLogout
// Flags: 
struct AGameInfo_execNotifyLogout_Parms
{
	class AController*                                 Exiting;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 C;                                                		// 0x0004 ( 0x0004
	class APlayerController*                           PC;                                               		// 0x0008 ( 0x0004
};

// Function Engine.GameInfo.NotifyLogin
// Flags: 
struct AGameInfo_execNotifyLogin_Parms
{
	int                                                NewPlayerID;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	class TArray< class APlayerController* >           PCArray;                                          		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.Logout
// Flags: 
struct AGameInfo_execLogout_Parms
{
	class AController*                                 Exiting;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bMessage:1;                                       		// 0x0004 ( 0x0004 [0x00000001]
};

// Function Engine.GameInfo.SetWeaponViewShake
// Flags: 
struct AGameInfo_execSetWeaponViewShake_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.PostLogin
// Flags: [ FUNC_Event ]
struct AGameInfo_eventPostLogin_Parms
{
	class APlayerController*                           NewPlayer;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      HudClass;                                         		// 0x0004 ( 0x0004
	class UClass*                                      ScoreboardClass;                                  		// 0x0008 ( 0x0004
	class UClass*                                      ResultScoreboardClass;                            		// 0x000C ( 0x0004
	class UClass*                                      ResultScoreboardBootyClass;                       		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.GetDefaultPlayerClass
// Flags: 
struct AGameInfo_execGetDefaultPlayerClass_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           PC;                                               		// 0x0008 ( 0x0004
//	struct FString                                     PawnClassName;                                    		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
//	class UClass*                                      PawnClass;                                        		// 0x0018 ( 0x0004
};

// Function Engine.GameInfo.EndWaitingForStart
// Flags: 
struct AGameInfo_execEndWaitingForStart_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
};

// Function Engine.GameInfo.BeginWaitingForStart
// Flags: 
struct AGameInfo_execBeginWaitingForStart_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
};

// Function Engine.GameInfo.RestartPlayer
// Flags: 
struct AGameInfo_execRestartPlayer_Parms
{
	class AController*                                 aPlayer;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ANavigationPoint*                            StartSpot;                                        		// 0x0004 ( 0x0004
	int                                                TeamNum;                                          		// 0x0008 ( 0x0004
	class AVehicle*                                    V;                                                		// 0x000C ( 0x0004
	class AVehicle*                                    Best;                                             		// 0x0010 ( 0x0004
	struct FVector                                     ViewDir;                                          		// 0x0014 ( 0x000C
	float                                              BestDist;                                         		// 0x0020 ( 0x0004
	float                                              dist;                                             		// 0x0024 ( 0x0004
	class APlayerController*                           PC;                                               		// 0x0028 ( 0x0004
	class APlayerStart*                                ps;                                               		// 0x002C ( 0x0004
	int                                                lp1;                                              		// 0x0030 ( 0x0004
	int                                                tries;                                            		// 0x0034 ( 0x0004
	int                                                iPlayerID;                                        		// 0x0038 ( 0x0004
	class TArray< int >                                aPlayerIDs;                                       		// 0x003C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.RefreshMaxPlayersDuringGame
// Flags: 
struct AGameInfo_execRefreshMaxPlayersDuringGame_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.GameInfo.logrep
// Flags: [ FUNC_Exec ]
struct AGameInfo_execlogrep_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
};

// Function Engine.GameInfo.GameAddDefaultInventory
// Flags: 
struct AGameInfo_execGameAddDefaultInventory_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.PlayerCanRestartGame
// Flags: 
struct AGameInfo_execPlayerCanRestartGame_Parms
{
	class APlayerController*                           aPlayer;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.PlayerCanRestart
// Flags: 
struct AGameInfo_execPlayerCanRestart_Parms
{
	class APlayerController*                           aPlayer;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.StartAIPlayers
// Flags: 
struct AGameInfo_execStartAIPlayers_Parms
{
	class AController*                                 P;                                                		// 0x0000 ( 0x0004
};

// Function Engine.GameInfo.StartHumanPlayers
// Flags: 
struct AGameInfo_execStartHumanPlayers_Parms
{
	class AController*                                 P;                                                		// 0x0000 ( 0x0004
	class TArray< int >                                aPlayerIDs;                                       		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0010 ( 0x0004
	int                                                PlayerID;                                         		// 0x0014 ( 0x0004
};

// Function Engine.GameInfo.StartMatch
// Flags: 
struct AGameInfo_execStartMatch_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
};

// Function Engine.GameInfo.TestLevel
// Flags: 
struct AGameInfo_execTestLevel_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
	class AActor*                                      Found;                                            		// 0x0004 ( 0x0004
	unsigned long                                      bFoundErrors:1;                                   		// 0x0008 ( 0x0004 [0x00000001]
};

// Function Engine.GameInfo.ContinueMatch
// Flags: 
struct AGameInfo_execContinueMatch_Parms
{
};

// Function Engine.GameInfo.GotoNextGameState
// Flags: 
struct AGameInfo_execGotoNextGameState_Parms
{
};

// Function Engine.GameInfo.SimpleLogin
// Flags: [ FUNC_Event ]
struct AGameInfo_eventSimpleLogin_Parms
{
	class APlayerController*                           NewPlayer;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       NewPawn;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwGameStateStorageSender*                    GSSS;                                             		// 0x000C ( 0x0004
//	struct FVector                                     OldLocation;                                      		// 0x0010 ( 0x000C
//	struct FRotator                                    OldRotation;                                      		// 0x001C ( 0x000C
//	int                                                OldHealth;                                        		// 0x0028 ( 0x0004
//	class APlayerReplicationInfo*                      PRI;                                              		// 0x002C ( 0x0004
//	unsigned long                                      bFoundOldPRI:1;                                   		// 0x0030 ( 0x0004 [0x00000001]
//	unsigned char                                      oldUseKey;                                        		// 0x0034 ( 0x0001
//	class TArray< class ANavigationPoint* >            navs;                                             		// 0x0038 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< float >                              dists;                                            		// 0x0044 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0050 ( 0x0004
//	class ANavigationPoint*                            nav;                                              		// 0x0054 ( 0x0004
};

// Function Engine.GameInfo.SetPlayerID
// Flags: [ FUNC_Event ]
struct AGameInfo_eventSetPlayerID_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.ForcedStartMatch
// Flags: [ FUNC_Event ]
struct AGameInfo_eventForcedStartMatch_Parms
{
};

// Function Engine.GameInfo.SetPRI4Intervention
// Flags: 
struct AGameInfo_execSetPRI4Intervention_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.IsNewPlayerGotoSpectating
// Flags: 
struct AGameInfo_execIsNewPlayerGotoSpectating_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.Login
// Flags: [ FUNC_Event ]
struct AGameInfo_eventLogin_Parms
{
	struct FString                                     Portal;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Options;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Error;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class APlayerController*                           ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class ANavigationPoint*                            StartSpot;                                        		// 0x0028 ( 0x0004
//	class APlayerController*                           NewPlayer;                                        		// 0x002C ( 0x0004
//	class APlayerController*                           TestPlayer;                                       		// 0x0030 ( 0x0004
//	struct FString                                     InName;                                           		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     InAdminName;                                      		// 0x0040 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     InPassword;                                       		// 0x004C ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     InChecksum;                                       		// 0x0058 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     InCharacter;                                      		// 0x0064 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     InSex;                                            		// 0x0070 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     InIntervention;                                   		// 0x007C ( 0x000C[ CPF_NeedCtorLink ]
//	unsigned char                                      inTeam;                                           		// 0x0088 ( 0x0001
//	unsigned char                                      iSellectTeam;                                     		// 0x0089 ( 0x0001
//	unsigned long                                      bSpectator:1;                                     		// 0x008C ( 0x0004 [0x00000001]
//	unsigned long                                      bAdmin:1;                                         		// 0x0090 ( 0x0004 [0x00000001]
//	class UClass*                                      MySecurityClass;                                  		// 0x0094 ( 0x0004
//	class APawn*                                       TestPawn;                                         		// 0x0098 ( 0x0004
//	class APawn*                                       OldPawn;                                          		// 0x009C ( 0x0004
//	class AWaitView*                                   startWaitView;                                    		// 0x00A0 ( 0x0004
//	unsigned long                                      bAdminSpectator:1;                                		// 0x00A4 ( 0x0004 [0x00000001]
};

// Function Engine.GameInfo.GetWaitView
// Flags: 
struct AGameInfo_execGetWaitView_Parms
{
	class UClass*                                      classWaitView;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AWaitView*                                   ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0008 ( 0x0004
//	class AWaitView*                                   wv;                                               		// 0x000C ( 0x0004
//	class TArray< class AWaitView* >                   candidates;                                       		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetWaitViewClass
// Flags: 
struct AGameInfo_execGetWaitViewClass_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	class UClass*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.CheckOverlapUserName
// Flags: 
struct AGameInfo_execCheckOverlapUserName_Parms
{
	struct FString                                     LoginedUserName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ErrMsg;                                           		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AController*                                 C;                                                		// 0x001C ( 0x0004
//	class APlayerController*                           PC_ForCheckName;                                  		// 0x0020 ( 0x0004
};

// Function Engine.GameInfo.PopNextTeam
// Flags: 
struct AGameInfo_execPopNextTeam_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetPawn4ChangeHost
// Flags: 
struct AGameInfo_execGetPawn4ChangeHost_Parms
{
	struct FString                                     nn;                                               		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APawn*                                       ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APawn*                                       P;                                                		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.InitSavedLevel
// Flags: 
struct AGameInfo_execInitSavedLevel_Parms
{
};

// Function Engine.GameInfo.AtCapacity
// Flags: 
struct AGameInfo_execAtCapacity_Parms
{
	unsigned long                                      bSpectator:1;                                     		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.AllowBecomeActivePlayer
// Flags: 
struct AGameInfo_execAllowBecomeActivePlayer_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.BecomeSpectator
// Flags: 
struct AGameInfo_execBecomeSpectator_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetIntOption
// Flags: 
struct AGameInfo_execGetIntOption_Parms
{
	struct FString                                     Options;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ParseString;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                CurrentValue;                                     		// 0x0018 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x001C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     InOpt;                                            		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.PreLogin
// Flags: [ FUNC_Event ]
struct AGameInfo_eventPreLogin_Parms
{
	struct FString                                     Options;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Address;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PlayerID;                                         		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Error;                                            		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     FailCode;                                         		// 0x0030 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      bSpectator:1;                                     		// 0x003C ( 0x0004 [0x00000001]
};

// Function Engine.GameInfo.ProcessServerTravel
// Flags: 
struct AGameInfo_execProcessServerTravel_Parms
{
	struct FString                                     URL;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bItems:1;                                         		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
	class APlayerController*                           P;                                                		// 0x0010 ( 0x0004
	class APlayerController*                           LocalPlayer;                                      		// 0x0014 ( 0x0004
};

// Function Engine.GameInfo.GetBeaconText
// Flags: [ FUNC_Event ]
struct AGameInfo_eventGetBeaconText_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.AddGameModifier
// Flags: 
struct AGameInfo_execAddGameModifier_Parms
{
	class AGameRules*                                  NewRule;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.AddMutator
// Flags: 
struct AGameInfo_execAddMutator_Parms
{
	struct FString                                     mutname;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bUserAdded:1;                                     		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class UClass*                                      mutClass;                                         		// 0x0010 ( 0x0004
	class AMutator*                                    mut;                                              		// 0x0014 ( 0x0004
};

// Function Engine.GameInfo.InitGame
// Flags: [ FUNC_Event ]
struct AGameInfo_eventInitGame_Parms
{
	struct FString                                     Options;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Error;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     InOpt;                                            		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     LeftOpt;                                          		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                pos;                                              		// 0x0030 ( 0x0004
	class UClass*                                      ACClass;                                          		// 0x0034 ( 0x0004
	class UClass*                                      GRClass;                                          		// 0x0038 ( 0x0004
	unsigned long                                      bIsTutorial:1;                                    		// 0x003C ( 0x0004 [0x00000001]
};

// Function Engine.GameInfo.HasOption
// Flags: 
struct AGameInfo_execHasOption_Parms
{
	struct FString                                     Options;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     InKey;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     Pair;                                             		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     key;                                              		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     Value;                                            		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.ParseOption
// Flags: 
struct AGameInfo_execParseOption_Parms
{
	struct FString                                     Options;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     InKey;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     Pair;                                             		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     key;                                              		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     Value;                                            		// 0x003C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GetKeyValue
// Flags: 
struct AGameInfo_execGetKeyValue_Parms
{
	struct FString                                     Pair;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     key;                                              		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.GrabOption
// Flags: 
struct AGameInfo_execGrabOption_Parms
{
	struct FString                                     Options;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     Result;                                           		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.DetailChange
// Flags: [ FUNC_Event ]
struct AGameInfo_eventDetailChange_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
	class AZoneInfo*                                   Z;                                                		// 0x0004 ( 0x0004
};

// Function Engine.GameInfo.SetRPPFPS
// Flags: [ FUNC_Exec ]
struct AGameInfo_execSetRPPFPS_Parms
{
	float                                              fps;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004
};

// Function Engine.GameInfo.SetRPPTime
// Flags: [ FUNC_Exec ]
struct AGameInfo_execSetRPPTime_Parms
{
	float                                              limit;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004
};

// Function Engine.GameInfo.gamego
// Flags: [ FUNC_Exec ]
struct AGameInfo_execgamego_Parms
{
};

// Function Engine.GameInfo.gamestop
// Flags: [ FUNC_Exec ]
struct AGameInfo_execgamestop_Parms
{
};

// Function Engine.GameInfo.gamesetspeed
// Flags: [ FUNC_Exec ]
struct AGameInfo_execgamesetspeed_Parms
{
	float                                              t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.showrespawn
// Flags: [ FUNC_Exec ]
struct AGameInfo_execshowrespawn_Parms
{
};

// Function Engine.GameInfo.SetSpeed
// Flags: 
struct AGameInfo_execSetSpeed_Parms
{
	float                                              t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              OldSpeed;                                         		// 0x0004 ( 0x0004
};

// Function Engine.GameInfo.SetGameSpeed
// Flags: 
struct AGameInfo_execSetGameSpeed_Parms
{
	float                                              t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.AllowGameSpeedChange
// Flags: 
struct AGameInfo_execAllowGameSpeedChange_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.SetPause
// Flags: 
struct AGameInfo_execSetPause_Parms
{
	unsigned long                                      bPause:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class APlayerController*                           P;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetServerPort
// Flags: 
struct AGameInfo_execGetServerPort_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     S;                                                		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.GetServerPlayers
// Flags: 
struct AGameInfo_execGetServerPlayers_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x0000 ( 0x0070[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class AMutator*                                    M;                                                		// 0x0070 ( 0x0004
	class AController*                                 C;                                                		// 0x0074 ( 0x0004
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0078 ( 0x0004
	int                                                i;                                                		// 0x007C ( 0x0004
	int                                                TeamFlag[ 0x02 ];                                 		// 0x0080 ( 0x0008
};

// Function Engine.GameInfo.GetServerDetails
// Flags: 
struct AGameInfo_execGetServerDetails_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x0000 ( 0x0070[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	class AMutator*                                    M;                                                		// 0x0070 ( 0x0004
	class AGameRules*                                  G;                                                		// 0x0074 ( 0x0004
	int                                                i;                                                		// 0x0078 ( 0x0004
	int                                                Len;                                              		// 0x007C ( 0x0004
	int                                                NumMutators;                                      		// 0x0080 ( 0x0004
	struct FString                                     MutatorName;                                      		// 0x0084 ( 0x000C[ CPF_NeedCtorLink ]
	unsigned long                                      bFound:1;                                         		// 0x0090 ( 0x0004 [0x00000001]
};

// Function Engine.GameInfo.GetNumPlayers
// Flags: 
struct AGameInfo_execGetNumPlayers_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetServerInfo
// Flags: 
struct AGameInfo_execGetServerInfo_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x0000 ( 0x0070[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                RealSkillLevel;                                   		// 0x0070 ( 0x0004
};

// Function Engine.GameInfo.GetNetworkNumber
// Flags: [ FUNC_Native ]
struct AGameInfo_execGetNetworkNumber_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.InitMaplistHandler
// Flags: 
struct AGameInfo_execInitMaplistHandler_Parms
{
};

// Function Engine.GameInfo.InitVoiceReplicationInfo
// Flags: 
struct AGameInfo_execInitVoiceReplicationInfo_Parms
{
};

// Function Engine.GameInfo.InitGameReplicationInfo
// Flags: 
struct AGameInfo_execInitGameReplicationInfo_Parms
{
};

// Function Engine.GameInfo.KickIdler
// Flags: [ FUNC_Event ]
struct AGameInfo_eventKickIdler_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.GameEnding
// Flags: [ FUNC_Event ]
struct AGameInfo_eventGameEnding_Parms
{
};

// Function Engine.GameInfo.Timer
// Flags: 
struct AGameInfo_execTimer_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x0000 ( 0x0004
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.GameInfo.InitLogging
// Flags: 
struct AGameInfo_execInitLogging_Parms
{
	class UClass*                                      MyGameStatsClass;                                 		// 0x0000 ( 0x0004
};

// Function Engine.GameInfo.Reset
// Flags: 
struct AGameInfo_execReset_Parms
{
};

// Function Engine.GameInfo.LogRespawnStatistics
// Flags: 
struct AGameInfo_execLogRespawnStatistics_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
	int                                                lp2;                                              		// 0x0004 ( 0x0004
	class APlayerStart*                                minN;                                             		// 0x0008 ( 0x0004
	float                                              totalDist;                                        		// 0x000C ( 0x0004
	float                                              totalMinDist;                                     		// 0x0010 ( 0x0004
	float                                              dist;                                             		// 0x0014 ( 0x0004
	float                                              minDist;                                          		// 0x0018 ( 0x0004
};

// Function Engine.GameInfo.InitializeEveryPlayerStarts
// Flags: 
struct AGameInfo_execInitializeEveryPlayerStarts_Parms
{
	class APlayerStart*                                N;                                                		// 0x0000 ( 0x0004
	class APlayerStart_SD*                             S;                                                		// 0x0004 ( 0x0004
	class APlayerStart_Defence*                        f;                                                		// 0x0008 ( 0x0004
};

// Function Engine.GameInfo.PostBeginPlay
// Flags: 
struct AGameInfo_execPostBeginPlay_Parms
{
};

// Function Engine.GameInfo.NoBlood
// Flags: 
struct AGameInfo_execNoBlood_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.UseLowGore
// Flags: 
struct AGameInfo_execUseLowGore_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.ChangeMap
// Flags: 
struct AGameInfo_execChangeMap_Parms
{
	int                                                ContextID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AMapList*                                    MyList;                                           		// 0x0004 ( 0x0004
	class UClass*                                      ML;                                               		// 0x0008 ( 0x0004
	struct FString                                     MapString;                                        		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.TeamQueueAnnouncement
// Flags: 
struct AGameInfo_execTeamQueueAnnouncement_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	struct FString                                     ASoundName;                                       		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      AnnouncementLevel;                                		// 0x0010 ( 0x0001[ CPF_Parm ]
	unsigned char                                      Priority;                                         		// 0x0011 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      Switch;                                           		// 0x0012 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x0014 ( 0x0004
};

// Function Engine.GameInfo.TeamReceiveLocalizedMessageEx
// Flags: 
struct AGameInfo_execTeamReceiveLocalizedMessageEx_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	class UClass*                                      Message;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     vLocation;                                        		// 0x0018 ( 0x000C[ CPF_OptionalParm | CPF_Parm ]
	float                                              fMaxDist;                                         		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0028 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x002C ( 0x0004
	float                                              fDist;                                            		// 0x0030 ( 0x0004
};

// Function Engine.GameInfo.TeamReceiveLocalizedMessage
// Flags: 
struct AGameInfo_execTeamReceiveLocalizedMessage_Parms
{
	unsigned char                                      Team;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	class UClass*                                      Message;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x0018 ( 0x0004
};

// Function Engine.GameInfo.AllReceiveLocalizedMessage
// Flags: 
struct AGameInfo_execAllReceiveLocalizedMessage_Parms
{
	class UClass*                                      Message;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x0014 ( 0x0004
};

// Function Engine.GameInfo.FindPlayerByID
// Flags: 
struct AGameInfo_execFindPlayerByID_Parms
{
	int                                                PlayerID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class APlayerReplicationInfo*                      PRI;                                              		// 0x0010 ( 0x0004
};

// Function Engine.GameInfo.PrecacheGore
// Flags: 
struct AGameInfo_execPrecacheGore_Parms
{
	struct FString                                     strTemp;                                          		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FString >                     gores;                                            		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                lp1;                                              		// 0x0018 ( 0x0004
};

// Function Engine.GameInfo.PrecacheGameAnnouncements
// Flags: 
struct AGameInfo_execPrecacheGameAnnouncements_Parms
{
	class AAnnouncerVoice*                             V;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bRewardSounds:1;                                  		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.GameInfo.PrecacheGameSkeletalMeshes
// Flags: 
struct AGameInfo_execPrecacheGameSkeletalMeshes_Parms
{
	class ALevelInfo*                                  myLevel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.PrecacheGameStaticMeshes
// Flags: 
struct AGameInfo_execPrecacheGameStaticMeshes_Parms
{
	class ALevelInfo*                                  myLevel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.PrecacheGameTextures
// Flags: 
struct AGameInfo_execPrecacheGameTextures_Parms
{
	class ALevelInfo*                                  myLevel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.Precache
// Flags: 
struct AGameInfo_execPrecache_Parms
{
	class ALevelInfo*                                  Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.UpdatePrecacheSkeletalMeshes
// Flags: 
struct AGameInfo_execUpdatePrecacheSkeletalMeshes_Parms
{
};

// Function Engine.GameInfo.UpdatePrecacheStaticMeshes
// Flags: 
struct AGameInfo_execUpdatePrecacheStaticMeshes_Parms
{
};

// Function Engine.GameInfo.UpdatePrecacheMaterials
// Flags: 
struct AGameInfo_execUpdatePrecacheMaterials_Parms
{
};

// Function Engine.GameInfo.Destroyed
// Flags: 
struct AGameInfo_execDestroyed_Parms
{
};

// Function Engine.GameInfo.SetOldTeamInfo
// Flags: [ FUNC_Event ]
struct AGameInfo_eventSetOldTeamInfo_Parms
{
	class AGameReplicationInfo*                        OldGRI;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.GetBootySeedValue
// Flags: 
struct AGameInfo_execGetBootySeedValue_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.ForceSetGRIInitialState
// Flags: [ FUNC_Event ]
struct AGameInfo_eventForceSetGRIInitialState_Parms
{
};

// Function Engine.GameInfo.ForceSetInitialState
// Flags: [ FUNC_Event ]
struct AGameInfo_eventForceSetInitialState_Parms
{
};

// Function Engine.GameInfo.ForcePostNetBeginPlay
// Flags: [ FUNC_Event ]
struct AGameInfo_eventForcePostNetBeginPlay_Parms
{
};

// Function Engine.GameInfo.ForcePostBeginPlay
// Flags: [ FUNC_Event ]
struct AGameInfo_eventForcePostBeginPlay_Parms
{
};

// Function Engine.GameInfo.ForceBeginPlay
// Flags: [ FUNC_Event ]
struct AGameInfo_eventForceBeginPlay_Parms
{
};

// Function Engine.GameInfo.ForcePreBeginPlay
// Flags: [ FUNC_Event ]
struct AGameInfo_eventForcePreBeginPlay_Parms
{
};

// Function Engine.GameInfo.PreBeginPlay
// Flags: 
struct AGameInfo_execPreBeginPlay_Parms
{
	unsigned long                                      bExist:1;                                         		// 0x0000 ( 0x0004 [0x00000001]
	class UwMatchMaker*                                MM;                                               		// 0x0004 ( 0x0004
};

// Function Engine.GameInfo.AnnounceUAV
// Flags: 
struct AGameInfo_execAnnounceUAV_Parms
{
	class AController*                                 Caller;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.AnnounceHelicopter
// Flags: 
struct AGameInfo_execAnnounceHelicopter_Parms
{
	class AController*                                 Caller;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.AnnounceArtillery
// Flags: 
struct AGameInfo_execAnnounceArtillery_Parms
{
	class AController*                                 Caller;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameInfo.NativeSettingAfterChangedHost
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameInfo_execNativeSettingAfterChangedHost_Parms
{
};

// Function Engine.GameInfo.LoadMapList
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameInfo_execLoadMapList_Parms
{
	struct FString                                     MapPrefix;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Maps;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.DeletePackage
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameInfo_execDeletePackage_Parms
{
	struct FString                                     PackageName;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.SavePackage
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameInfo_execSavePackage_Parms
{
	struct FString                                     PackageName;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.AllDataObjects
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameInfo_execAllDataObjects_Parms
{
	class UClass*                                      objClass;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UObject*                                     obj;                                              		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FString                                     PackageName;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameInfo.LoadDataObject
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameInfo_execLoadDataObject_Parms
{
	class UClass*                                      objClass;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     objName;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PackageName;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UObject*                                     ReturnValue;                                      		// 0x001C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.DeleteDataObject
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameInfo_execDeleteDataObject_Parms
{
	class UClass*                                      objClass;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     objName;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PackageName;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.CreateDataObject
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameInfo_execCreateDataObject_Parms
{
	class UClass*                                      objClass;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     objName;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PackageName;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UObject*                                     ReturnValue;                                      		// 0x001C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameInfo.GetSavedGames
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameInfo_execGetSavedGames_Parms
{
	class UManifest*                                   ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.OnDisconnect
// Flags: [ FUNC_Event ]
struct ALevelInfo_eventOnDisconnect_Parms
{
};

// Function Engine.LevelInfo.GetIsConnectDMZ
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetIsConnectDMZ_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetIsForceServiceBuild
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetIsForceServiceBuild_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetIsServiceBuild
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetIsServiceBuild_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetIsUseAdvCamShake
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetIsUseAdvCamShake_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetIsUseStanceToggle
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetIsUseStanceToggle_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetIsUseMouseRevision
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetIsUseMouseRevision_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetIsUseRagdoll
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetIsUseRagdoll_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetIsNoGore
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetIsNoGore_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetIsTeenVersion
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetIsTeenVersion_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.ClearInvalidCache
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execClearInvalidCache_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
};

// Function Engine.LevelInfo.SetNoUpdateAllGSSS
// Flags: [ FUNC_Event ]
struct ALevelInfo_eventSetNoUpdateAllGSSS_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004
	int                                                GSSSCount;                                        		// 0x0004 ( 0x0004
};

// Function Engine.LevelInfo.GetLocalPlayerController
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetLocalPlayerController_Parms
{
	class APlayerController*                           ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.LevelInfo.PreBeginPlay
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct ALevelInfo_eventPreBeginPlay_Parms
{
	int                                                iTest;                                            		// 0x0000 ( 0x0004
};

// Function Engine.LevelInfo.Reset
// Flags: 
struct ALevelInfo_execReset_Parms
{
};

// Function Engine.LevelInfo.ThisIsNeverExecuted
// Flags: 
struct ALevelInfo_execThisIsNeverExecuted_Parms
{
	class ADefaultPhysicsVolume*                       P;                                                		// 0x0000 ( 0x0004
};

// Function Engine.LevelInfo.ServerTravel
// Flags: [ FUNC_Event ]
struct ALevelInfo_eventServerTravel_Parms
{
	struct FString                                     URL;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bItems:1;                                         		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.LevelInfo.IsPendingConnection
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execIsPendingConnection_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetAddressURL
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execGetAddressURL_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.LevelInfo.IsSoftwareRendering
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execIsSoftwareRendering_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.IsDemoBuild
// Flags: [ FUNC_Final | FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execIsDemoBuild_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetLocalURL
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execGetLocalURL_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.LevelInfo.ResetPrecacheSkeletalMeshes
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execResetPrecacheSkeletalMeshes_Parms
{
};

// Function Engine.LevelInfo.AddPrecacheSkeletalMesh
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execAddPrecacheSkeletalMesh_Parms
{
	class UMesh*                                       mes;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Index;                                            		// 0x0004 ( 0x0004
};

// Function Engine.LevelInfo.ResetPrecacheStaticMesh
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execResetPrecacheStaticMesh_Parms
{
};

// Function Engine.LevelInfo.AddPrecacheStaticMesh
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execAddPrecacheStaticMesh_Parms
{
	class UStaticMesh*                                 stat;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Index;                                            		// 0x0004 ( 0x0004
};

// Function Engine.LevelInfo.ResetPrecacheMaterials
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execResetPrecacheMaterials_Parms
{
};

// Function Engine.LevelInfo.AddPrecacheMaterial
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execAddPrecacheMaterial_Parms
{
	class UMaterial*                                   mat;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Index;                                            		// 0x0004 ( 0x0004
};

// Function Engine.LevelInfo.FillPrecacheSkeletalMeshesArray
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct ALevelInfo_eventFillPrecacheSkeletalMeshesArray_Parms
{
	unsigned long                                      FullPrecache:1;                                   		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0004 ( 0x0004
	class UClass*                                      G;                                                		// 0x0008 ( 0x0004
};

// Function Engine.LevelInfo.FillPrecacheStaticMeshesArray
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct ALevelInfo_eventFillPrecacheStaticMeshesArray_Parms
{
	unsigned long                                      FullPrecache:1;                                   		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0004 ( 0x0004
	class UClass*                                      G;                                                		// 0x0008 ( 0x0004
};

// Function Engine.LevelInfo.PrecacheAnnouncements
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execPrecacheAnnouncements_Parms
{
};

// Function Engine.LevelInfo.FillPrecacheMaterialsArray
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct ALevelInfo_eventFillPrecacheMaterialsArray_Parms
{
	unsigned long                                      FullPrecache:1;                                   		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0004 ( 0x0004
	class UClass*                                      G;                                                		// 0x0008 ( 0x0004
	unsigned long                                      bRealDesire:1;                                    		// 0x000C ( 0x0004 [0x00000001]
};

// Function Engine.LevelInfo.PrecacheInit
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct ALevelInfo_eventPrecacheInit_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004
};

// Function Engine.LevelInfo.GetGameClass
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execGetGameClass_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UClass*                                      G;                                                		// 0x0004 ( 0x0004
};

// Function Engine.LevelInfo.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct ALevelInfo_execPostBeginPlay_Parms
{
};

// Function Engine.LevelInfo.Tick
// Flags: [ FUNC_Event ]
struct ALevelInfo_eventTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.LevelInfo.GetRandomNavigationPointAround
// Flags: 
struct ALevelInfo_execGetRandomNavigationPointAround_Parms
{
	struct FVector                                     V;                                                		// 0x0000 ( 0x000C[ CPF_Parm ]
	class ANavigationPoint*                            ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class ANavigationPoint*                            nav;                                              		// 0x0010 ( 0x0004
//	class TArray< class ANavigationPoint* >            candidates;                                       		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
//	float                                              dist;                                             		// 0x0020 ( 0x0004
//	float                                              threshold;                                        		// 0x0024 ( 0x0004
};

// Function Engine.LevelInfo.GetClosestNavigationPoint
// Flags: [ FUNC_Native ]
struct ALevelInfo_execGetClosestNavigationPoint_Parms
{
	struct FVector                                     V;                                                		// 0x0000 ( 0x000C[ CPF_Parm ]
	class ANavigationPoint*                            ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.IsVisibleByVisID
// Flags: 
struct ALevelInfo_execIsVisibleByVisID_Parms
{
	int                                                sVisID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                eVisID;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                sStance;                                          		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                eStance;                                          		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	int                                                R;                                                		// 0x0018 ( 0x0004
//	int                                                t;                                                		// 0x001C ( 0x0004
};

// Function Engine.LevelInfo.IsVisible
// Flags: 
struct ALevelInfo_execIsVisible_Parms
{
	class ANavigationPoint*                            S;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class ANavigationPoint*                            E;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                sStance;                                          		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                eStance;                                          		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.UpdateInfluence
// Flags: [ FUNC_Native ]
struct ALevelInfo_execUpdateInfluence_Parms
{
};

// Function Engine.LevelInfo.GetAILevel
// Flags: 
struct ALevelInfo_execGetAILevel_Parms
{
	class AwAILevelBase*                               ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetPhysicsVolume
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execGetPhysicsVolume_Parms
{
	struct FVector                                     loc;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
	class APhysicsVolume*                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.ForceLoadTexture
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execForceLoadTexture_Parms
{
	class UTexture*                                    Texture;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.LevelInfo.UpdateDistanceFogLOD
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execUpdateDistanceFogLOD_Parms
{
	float                                              LOD;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.LevelInfo.IsEntry
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execIsEntry_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.DetailChange
// Flags: [ FUNC_Simulated | FUNC_Native ]
struct ALevelInfo_execDetailChange_Parms
{
	unsigned char                                      NewDetailMode;                                    		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.LevelInfo.IsUseGraphicOption
// Flags: [ FUNC_Native ]
struct ALevelInfo_execIsUseGraphicOption_Parms
{
	struct FString                                     OptionName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.GetMatchMaker
// Flags: [ FUNC_Native ]
struct ALevelInfo_execGetMatchMaker_Parms
{
	class UwMatchMaker*                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.SetCaptureQuality
// Flags: [ FUNC_Native ]
struct ALevelInfo_execSetCaptureQuality_Parms
{
	int                                                iValue;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.LevelInfo.SetCaptureResoultion
// Flags: [ FUNC_Native ]
struct ALevelInfo_execSetCaptureResoultion_Parms
{
	int                                                iValue;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.LevelInfo.IsCapturing
// Flags: [ FUNC_Native ]
struct ALevelInfo_execIsCapturing_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.SetCapture
// Flags: [ FUNC_Native ]
struct ALevelInfo_execSetCapture_Parms
{
	unsigned long                                      bCapture:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.LevelInfo.ResetCombationSituationReview
// Flags: [ FUNC_Native ]
struct ALevelInfo_execResetCombationSituationReview_Parms
{
};

// Function Engine.LevelInfo.LoadUsermove
// Flags: [ FUNC_Native ]
struct ALevelInfo_execLoadUsermove_Parms
{
	struct FString                                     szPath;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nCommand;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                nCombatNum;                                       		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     szUserName;                                       		// 0x0014 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.LoadUserzone
// Flags: [ FUNC_Native ]
struct ALevelInfo_execLoadUserzone_Parms
{
	struct FString                                     szPath;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nCommand;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     szUserName;                                       		// 0x0010 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LevelInfo.LoadKilllog
// Flags: [ FUNC_Native ]
struct ALevelInfo_execLoadKilllog_Parms
{
	struct FString                                     szPath;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nCommand;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                nOption;                                          		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Vignette.DrawVignette
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVignette_eventDrawVignette_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Progress;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Vignette.Init
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AVignette_eventInit_Parms
{
};

// Function Engine.wWeapon.ServerMeleeFire
// Flags: 
struct AwWeapon_execServerMeleeFire_Parms
{
};

// Function Engine.wWeapon.ClientMeleeFire
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientMeleeFire_Parms
{
};

// Function Engine.wWeapon.ServerThrowingWeapon
// Flags: 
struct AwWeapon_execServerThrowingWeapon_Parms
{
};

// Function Engine.wWeapon.ClientThrowingWeapon
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientThrowingWeapon_Parms
{
};

// Function Engine.wWeapon.ActiveMeleeDelay
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execActiveMeleeDelay_Parms
{
};

// Function Engine.wWeapon.ActiveFireDelay
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execActiveFireDelay_Parms
{
};

// Function Engine.wWeapon.GetCurMagazineAmmoCount
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execGetCurMagazineAmmoCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.GetCurTotalAmmoCount
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execGetCurTotalAmmoCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.ClientQuickReload
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientQuickReload_Parms
{
	unsigned long                                      bOn:1;                                            		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wWeapon.ServerQuickReload
// Flags: 
struct AwWeapon_execServerQuickReload_Parms
{
	unsigned long                                      bOn:1;                                            		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wWeapon.ClientQuickAimZoom
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientQuickAimZoom_Parms
{
	unsigned long                                      bOn:1;                                            		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wWeapon.ServerQuickAimZoom
// Flags: 
struct AwWeapon_execServerQuickAimZoom_Parms
{
	unsigned long                                      bOn:1;                                            		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wWeapon.ClientAddMagazine
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientAddMagazine_Parms
{
};

// Function Engine.wWeapon.ServerAddMagazine
// Flags: 
struct AwWeapon_execServerAddMagazine_Parms
{
};

// Function Engine.wWeapon.SetWalkingSwayRot
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetWalkingSwayRot_Parms
{
	struct FRotator                                    rRot;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.wWeapon.SetAttackedRot
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetAttackedRot_Parms
{
	struct FRotator                                    rRot;                                             		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.wWeapon.SetAttackedOffset
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetAttackedOffset_Parms
{
	struct FVector                                     VOffset;                                          		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.wWeapon.SetAmmoAmount
// Flags: 
struct AwWeapon_execSetAmmoAmount_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                CurrentAmmo;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.SetAmmoTotal
// Flags: 
struct AwWeapon_execSetAmmoTotal_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                TotalAmmo;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.IsCanUseWeapon
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execIsCanUseWeapon_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.DelFireMode
// Flags: [ FUNC_Native ]
struct AwWeapon_execDelFireMode_Parms
{
	int                                                iMode;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.CalcSwayRot
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCalcSwayRot_Parms
{
	float                                              fDeltaTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
	struct FRotator                                    rDelta;                                           		// 0x0008 ( 0x000C
	float                                              fVelo;                                            		// 0x0014 ( 0x0004
	int                                                iDeltaP;                                          		// 0x0018 ( 0x0004
	int                                                iDeltaY;                                          		// 0x001C ( 0x0004
	int                                                iDeltaRot;                                        		// 0x0020 ( 0x0004
};

// Function Engine.wWeapon.CalcFiringSwayRot
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCalcFiringSwayRot_Parms
{
	float                                              fDeltaTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
	struct FRotator                                    rDelta;                                           		// 0x0008 ( 0x000C
	float                                              fVelo;                                            		// 0x0014 ( 0x0004
	int                                                iDeltaP;                                          		// 0x0018 ( 0x0004
	int                                                iDeltaY;                                          		// 0x001C ( 0x0004
	int                                                iDeltaRot;                                        		// 0x0020 ( 0x0004
};

// Function Engine.wWeapon.SetRandFiringSwayRot
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetRandFiringSwayRot_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
	int                                                iRandPitch;                                       		// 0x0004 ( 0x0004
	int                                                iRandYaw;                                         		// 0x0008 ( 0x0004
	int                                                iPitchMax;                                        		// 0x000C ( 0x0004
	int                                                iYawMax;                                          		// 0x0010 ( 0x0004
	int                                                iPitchMax_Aim;                                    		// 0x0014 ( 0x0004
	int                                                iYawMax_Aim;                                      		// 0x0018 ( 0x0004
};

// Function Engine.wWeapon.CalcBreathOffset
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCalcBreathOffset_Parms
{
	float                                              fBoxWidth;                                        		// 0x0000 ( 0x0004
	float                                              fBoxHeight;                                       		// 0x0004 ( 0x0004
	float                                              fTimeValue;                                       		// 0x0008 ( 0x0004
};

// Function Engine.wWeapon.CalcStanceOffset
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCalcStanceOffset_Parms
{
	float                                              fDelta;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fDestPivot;                                       		// 0x0004 ( 0x0004
	float                                              fDeltaPivot;                                      		// 0x0008 ( 0x0004
	float                                              fDMax;                                            		// 0x000C ( 0x0004
	float                                              fDMin;                                            		// 0x0010 ( 0x0004
};

// Function Engine.wWeapon.CalcDestPivot
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCalcDestPivot_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              fDestPivot;                                       		// 0x0004 ( 0x0004
};

// Function Engine.wWeapon.IsExistParts
// Flags: 
struct AwWeapon_execIsExistParts_Parms
{
	unsigned char                                      Type;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wWeapon.IsMeleeAttacking
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execIsMeleeAttacking_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.IsPutdowning
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execIsPutdowning_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.IsWeaponChanging
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execIsWeaponChanging_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.IsReloading
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execIsReloading_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.GetSprint
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execGetSprint_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.SetSprint
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetSprint_Parms
{
	unsigned long                                      bValue:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wWeapon.AddParts
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execAddParts_Parms
{
	unsigned char                                      Type;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	struct FString                                     szName;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     szSkinName;                                       		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     strHaveDotName;                                   		// 0x001C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FVector                                     AimDiff;                                          		// 0x0028 ( 0x000C[ CPF_Parm ]
	int                                                iItemID;                                          		// 0x0034 ( 0x0004[ CPF_Parm ]
	int                                                iPartsGroupID;                                    		// 0x0038 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bSightSub:1;                                      		// 0x003C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                i;                                                		// 0x0040 ( 0x0004
};

// Function Engine.wWeapon.FireOne
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execFireOne_Parms
{
	int                                                iFireMode;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.AttachToPawn
// Flags: 
struct AwWeapon_execAttachToPawn_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       BoneName;                                         		// 0x0004 ( 0x0004
};

// Function Engine.wWeapon.AddPartsGroup
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execAddPartsGroup_Parms
{
	int                                                iWeaponID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwItemBaseParam*                             ItemParam;                                        		// 0x0008 ( 0x0004
	class UwItemResourceParam*                         ItemResParam;                                     		// 0x000C ( 0x0004
	struct FVector                                     AimDiff;                                          		// 0x0010 ( 0x000C
	class UwWeaponCustomInfoParam*                     wcip;                                             		// 0x001C ( 0x0004
	class UwWeaponCustomPartsParam*                    wcpp;                                             		// 0x0020 ( 0x0004
	int                                                iSightPartID;                                     		// 0x0024 ( 0x0004
	int                                                iSilencerPartID;                                  		// 0x0028 ( 0x0004
	int                                                iBarrelPartID;                                    		// 0x002C ( 0x0004
	int                                                iGunstockPartID;                                  		// 0x0030 ( 0x0004
	int                                                iSubSightPartItemID;                              		// 0x0034 ( 0x0004
};

// Function Engine.wWeapon.SetAddPartsParams
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetAddPartsParams_Parms
{
};

// Function Engine.wWeapon.wLoadOut
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execwLoadOut_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwWeaponManager*                             wMani;                                            		// 0x0008 ( 0x0004
	class UwWeaponBaseParams*                          wBase;                                            		// 0x000C ( 0x0004
	class UClass*                                      wRes;                                             		// 0x0010 ( 0x0004
	int                                                M;                                                		// 0x0014 ( 0x0004
};

// Function Engine.wWeapon.wLoadOut_Client
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execwLoadOut_Client_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.wLoadOut_Server
// Flags: 
struct AwWeapon_execwLoadOut_Server_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bInGamePlaying:1;                                 		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wWeapon.SetHands
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetHands_Parms
{
	class UMesh*                                       meshHands;                                        		// 0x0000 ( 0x0004
	int                                                iBodyItemID;                                      		// 0x0004 ( 0x0004
	int                                                iTeamIndex;                                       		// 0x0008 ( 0x0004
};

// Function Engine.wWeapon.SetResParams
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetResParams_Parms
{
	class UClass*                                      wRes;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.SetBaseParams
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetBaseParams_Parms
{
	class UwWeaponBaseParams*                          wBase;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wWeapon.GetFireMode
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execGetFireMode_Parms
{
	unsigned char                                      Mode;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	class UwWeaponFire*                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.PawnUnpossessed
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execPawnUnpossessed_Parms
{
};

// Function Engine.wWeapon.ShootHoop
// Flags: 
struct AwWeapon_execShootHoop_Parms
{
	class AController*                                 B;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ShootLoc;                                         		// 0x0004 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.ShouldFireWithoutTarget
// Flags: 
struct AwWeapon_execShouldFireWithoutTarget_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.CanHeal
// Flags: 
struct AwWeapon_execCanHeal_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.WantsZoomFade
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execWantsZoomFade_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.HandlePickupQuery
// Flags: 
struct AwWeapon_execHandlePickupQuery_Parms
{
	class APickup*                                     Item;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AWeaponPickup*                               wpu;                                              		// 0x0008 ( 0x0004
};

// Function Engine.wWeapon.DoReflectEffect
// Flags: 
struct AwWeapon_execDoReflectEffect_Parms
{
	int                                                Drain;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.CheckTryToDrive
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCheckTryToDrive_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.CheckReflect
// Flags: 
struct AwWeapon_execCheckReflect_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     RefNormal;                                        		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	int                                                AmmoDrain;                                        		// 0x0018 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.PlayIdle
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execPlayIdle_Parms
{
};

// Function Engine.wWeapon.AnimEnd
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execAnimEnd_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       Anim;                                             		// 0x0004 ( 0x0004
	float                                              frame;                                            		// 0x0008 ( 0x0004
	float                                              Rate;                                             		// 0x000C ( 0x0004
	int                                                Mode;                                             		// 0x0010 ( 0x0004
	float                                              OldDownDelay;                                     		// 0x0014 ( 0x0004
};

// Function Engine.wWeapon.CheckSuperBerserk
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCheckSuperBerserk_Parms
{
};

// Function Engine.wWeapon.AdjustPlayerDamage
// Flags: 
struct AwWeapon_execAdjustPlayerDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.IsRapidFire
// Flags: 
struct AwWeapon_execIsRapidFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.IsSingleFire
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execIsSingleFire_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.IsFiring
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execIsFiring_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.Timer
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execTimer_Parms
{
};

// Function Engine.wWeapon.ImmediateStopFire
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execImmediateStopFire_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wWeapon.StoreAmmo
// Flags: 
struct AwWeapon_execStoreAmmo_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
	struct FString                                     strName;                                          		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wWeapon.CancelFire
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCancelFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.StopFire
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwWeapon_eventStopFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.StartFire
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execStartFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                alt;                                              		// 0x0008 ( 0x0004
};

// Function Engine.wWeapon.ReadyToFire
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwWeapon_eventReadyToFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                alt;                                              		// 0x0008 ( 0x0004
};

// Function Engine.wWeapon.ServerCancelFire
// Flags: 
struct AwWeapon_execServerCancelFire_Parms
{
	unsigned char                                      Mode;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wWeapon.ServerStopFire
// Flags: 
struct AwWeapon_execServerStopFire_Parms
{
	unsigned char                                      Mode;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wWeapon.SynchronizeWeapon
// Flags: 
struct AwWeapon_execSynchronizeWeapon_Parms
{
	class AwWeapon*                                    ClientWeapon;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.ClientForceAmmoUpdate
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientForceAmmoUpdate_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                NewAmount;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.ServerStartFire
// Flags: [ FUNC_Event ]
struct AwWeapon_eventServerStartFire_Parms
{
	unsigned char                                      Mode;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wWeapon.ClientCancelFire
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientCancelFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.ClientStopFire
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwWeapon_eventClientStopFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.NotifyReloaded
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwWeapon_eventNotifyReloaded_Parms
{
};

// Function Engine.wWeapon.ClientStartFire
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwWeapon_eventClientStartFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.DoAutoSwitch
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execDoAutoSwitch_Parms
{
};

// Function Engine.wWeapon.OutOfAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execOutOfAmmo_Parms
{
};

// Function Engine.wWeapon.ProcessMoveAni
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execProcessMoveAni_Parms
{
};

// Function Engine.wWeapon.WeaponTick
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwWeapon_eventWeaponTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.AltFire
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execAltFire_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.Fire
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execFire_Parms
{
	float                                              f;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.PutDown
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execPutDown_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Mode;                                             		// 0x0004 ( 0x0004
//	unsigned long                                      bNoAnim:1;                                        		// 0x0008 ( 0x0004 [0x00000001]
};

// Function Engine.wWeapon.ServerPlayOwnedSound
// Flags: 
struct AwWeapon_execServerPlayOwnedSound_Parms
{
	class USound*                                      Sound;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      Slot;                                             		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	float                                              Volume;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bNoOverride:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              Pitch;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Attenuate:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      Loop:1;                                           		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                SellectTeam;                                      		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bExceptOwner:1;                                   		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wWeapon.BringUp
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execBringUp_Parms
{
	class AwWeapon*                                    PrevWeapon;                                       		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Mode;                                             		// 0x0004 ( 0x0004
	float                                              fAnimRate;                                        		// 0x0008 ( 0x0004
	struct FString                                     strSoundName;                                     		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	class USound*                                      sndTelegraphTalk;                                 		// 0x0018 ( 0x0004
	class AController*                                 tempCon;                                          		// 0x001C ( 0x0004
};

// Function Engine.wWeapon.ClientWeaponSet
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientWeaponSet_Parms
{
	unsigned long                                      bPossiblySwitch:1;                                		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                Mode;                                             		// 0x0004 ( 0x0004
	int                                                nStartWeaponIdx;                                  		// 0x0008 ( 0x0004
};

// Function Engine.wWeapon.CheckPartsSet
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCheckPartsSet_Parms
{
};

// Function Engine.wWeapon.GiveAmmo
// Flags: 
struct AwWeapon_execGiveAmmo_Parms
{
	int                                                M;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AWeaponPickup*                               WP;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bJustSpawned:1;                                   		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wWeapon.GiveTo
// Flags: 
struct AwWeapon_execGiveTo_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APickup*                                     Pickup;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                M;                                                		// 0x0008 ( 0x0004
	class AwWeapon*                                    W;                                                		// 0x000C ( 0x0004
	unsigned long                                      bPossiblySwitch:1;                                		// 0x0010 ( 0x0004 [0x00000001]
	unsigned long                                      bJustSpawned:1;                                   		// 0x0014 ( 0x0004 [0x00000001]
};

// Function Engine.wWeapon.ClientWeaponThrown
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientWeaponThrown_Parms
{
	int                                                M;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wWeapon.DetachFromPawn
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execDetachFromPawn_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.DropFrom
// Flags: 
struct AwWeapon_execDropFrom_Parms
{
	struct FVector                                     StartLocation;                                    		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    StartRotation;                                    		// 0x000C ( 0x000C[ CPF_Parm ]
	int                                                M;                                                		// 0x0018 ( 0x0004
	class APickup*                                     Pickup;                                           		// 0x001C ( 0x0004
};

// Function Engine.wWeapon.RemoveWeapon
// Flags: 
struct AwWeapon_execRemoveWeapon_Parms
{
	int                                                M;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wWeapon.CanThrow
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCanThrow_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Mode;                                             		// 0x0004 ( 0x0004
};

// Function Engine.wWeapon.HolderDied
// Flags: 
struct AwWeapon_execHolderDied_Parms
{
	int                                                M;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wWeapon.NextWeapon
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execNextWeapon_Parms
{
	class AwWeapon*                                    CurrentChoice;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    CurrentWeapon;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.PrevWeapon
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execPrevWeapon_Parms
{
	class AwWeapon*                                    CurrentChoice;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    CurrentWeapon;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.WeaponChangeWID
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execWeaponChangeWID_Parms
{
	int                                                iWeaponID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.WeaponChangeWClass
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execWeaponChangeWClass_Parms
{
	struct FName                                       wClass;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.WeaponChange
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execWeaponChange_Parms
{
	unsigned char                                      f;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      bSilent:1;                                        		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    newWeapon;                                        		// 0x000C ( 0x0004
};

// Function Engine.wWeapon.ZeroFlashCount
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execZeroFlashCount_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.IncrementFlashCount
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execIncrementFlashCount_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.GetEffectStart
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execGetEffectStart_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     X;                                                		// 0x000C ( 0x000C
//	struct FVector                                     Y;                                                		// 0x0018 ( 0x000C
//	struct FVector                                     Z;                                                		// 0x0024 ( 0x000C
};

// Function Engine.wWeapon.CenteredEffectStart
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCenteredEffectStart_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.GetViewAxes
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execGetViewAxes_Parms
{
	struct FVector                                     XAxis;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     YAxis;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     ZAxis;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.wWeapon.SetHand
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetHand_Parms
{
	float                                              InHand;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.PreDrawFPWeapon
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execPreDrawFPWeapon_Parms
{
};

// Function Engine.wWeapon.ApplyOffset
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execApplyOffset_Parms
{
};

// Function Engine.wWeapon.ApplyOffset_Rot
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execApplyOffset_Rot_Parms
{
	struct FRotator                                    rBone;                                            		// 0x0000 ( 0x000C
};

// Function Engine.wWeapon.ApplyOffset_Trans
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execApplyOffset_Trans_Parms
{
};

// Function Engine.wWeapon.RenderOverlays
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwWeapon_eventRenderOverlays_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                M;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wWeapon.RenderScope
// Flags: 
struct AwWeapon_execRenderScope_Parms
{
	class UCanvas*                                     Canv;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.WeaponCentered
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execWeaponCentered_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.Reselect
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execReselect_Parms
{
};

// Function Engine.wWeapon.Destroyed
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execDestroyed_Parms
{
	int                                                M;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wWeapon.SetGRI
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSetGRI_Parms
{
	class AGameReplicationInfo*                        G;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.CanAttack
// Flags: 
struct AwWeapon_execCanAttack_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              dist;                                             		// 0x0008 ( 0x0004
//	float                                              CheckDist;                                        		// 0x000C ( 0x0004
//	struct FVector                                     HitLocation;                                      		// 0x0010 ( 0x000C
//	struct FVector                                     HitNormal;                                        		// 0x001C ( 0x000C
//	struct FVector                                     X;                                                		// 0x0028 ( 0x000C
//	struct FVector                                     Y;                                                		// 0x0034 ( 0x000C
//	struct FVector                                     Z;                                                		// 0x0040 ( 0x000C
//	struct FVector                                     projStart;                                        		// 0x004C ( 0x000C
//	class AActor*                                      HitActor;                                         		// 0x0058 ( 0x0004
//	int                                                M;                                                		// 0x005C ( 0x0004
//	unsigned long                                      bInstantHit:1;                                    		// 0x0060 ( 0x0004 [0x00000001]
};

// Function Engine.wWeapon.SplashJump
// Flags: 
struct AwWeapon_execSplashJump_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.SuggestDefenseStyle
// Flags: 
struct AwWeapon_execSuggestDefenseStyle_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.SuggestAttackStyle
// Flags: 
struct AwWeapon_execSuggestAttackStyle_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.GetAIRating
// Flags: 
struct AwWeapon_execGetAIRating_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.RateSelf
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execRateSelf_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.GetFireStart
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execGetFireStart_Parms
{
	struct FVector                                     X;                                                		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Y;                                                		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     Z;                                                		// 0x0018 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.BotFire
// Flags: 
struct AwWeapon_execBotFire_Parms
{
	unsigned long                                      bFinished:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	struct FName                                       FiringMode;                                       		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                newmode;                                          		// 0x000C ( 0x0004
//	class AController*                                 C;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wWeapon.BestMode
// Flags: 
struct AwWeapon_execBestMode_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.SetAITarget
// Flags: 
struct AwWeapon_execSetAITarget_Parms
{
	class AActor*                                      t;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.RecommendWeapon
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execRecommendWeapon_Parms
{
	float                                              rating;                                           		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    Recommended;                                      		// 0x0008 ( 0x0004
//	float                                              oldRating;                                        		// 0x000C ( 0x0004
};

// Function Engine.wWeapon.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                i;                                                		// 0x000C ( 0x0004
	struct FString                                     t;                                                		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
	struct FName                                       Anim;                                             		// 0x001C ( 0x0004
	float                                              frame;                                            		// 0x0020 ( 0x0004
	float                                              Rate;                                             		// 0x0024 ( 0x0004
};

// Function Engine.wWeapon.Loaded
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execLoaded_Parms
{
};

// Function Engine.wWeapon.FireOnRelease
// Flags: 
struct AwWeapon_execFireOnRelease_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.RefireRate
// Flags: 
struct AwWeapon_execRefireRate_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.GetDamageRadius
// Flags: 
struct AwWeapon_execGetDamageRadius_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.RecommendSplashDamage
// Flags: 
struct AwWeapon_execRecommendSplashDamage_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.SplashDamage
// Flags: 
struct AwWeapon_execSplashDamage_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.FireHack
// Flags: 
struct AwWeapon_execFireHack_Parms
{
	unsigned char                                      Mode;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wWeapon.FocusOnLeader
// Flags: 
struct AwWeapon_execFocusOnLeader_Parms
{
	unsigned long                                      bLeaderFiring:1;                                  		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.RecommendLongRangedAttack
// Flags: 
struct AwWeapon_execRecommendLongRangedAttack_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.RecommendRangedAttack
// Flags: 
struct AwWeapon_execRecommendRangedAttack_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.RangedAttackTime
// Flags: 
struct AwWeapon_execRangedAttackTime_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.HackPlayFireSound
// Flags: 
struct AwWeapon_execHackPlayFireSound_Parms
{
};

// Function Engine.wWeapon.GetDamageType
// Flags: 
struct AwWeapon_execGetDamageType_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.ClientWriteStats
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execClientWriteStats_Parms
{
	unsigned char                                      Mode;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      bMatch:1;                                         		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      bAllowFire:1;                                     		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      bDelay:1;                                         		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      bAlt:1;                                           		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm ]
	float                                              wait;                                             		// 0x0014 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.StartDebugging
// Flags: 
struct AwWeapon_execStartDebugging_Parms
{
};

// Function Engine.wWeapon.NewDrawWeaponInfo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execNewDrawWeaponInfo_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YPos;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.DrawWeaponInfo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execDrawWeaponInfo_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeapon.PostNetReceive
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execPostNetReceive_Parms
{
};

// Function Engine.wWeapon.CheckOutOfAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execCheckOutOfAmmo_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.DesireAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execDesireAmmo_Parms
{
	class UClass*                                      NewAmmoClass;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bDetour:1;                                        		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.NeedAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execNeedAmmo_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.HasAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execHasAmmo_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.AddAmmo
// Flags: 
struct AwWeapon_execAddAmmo_Parms
{
	int                                                AmmoToAdd;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Mode;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.SeverConsumeAmmo
// Flags: 
struct AwWeapon_execSeverConsumeAmmo_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Load;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bAmountNeededIsMax:1;                             		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                AmountNeeded;                                     		// 0x0010 ( 0x0004
};

// Function Engine.wWeapon.AmmoStatus
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execAmmoStatus_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.GetAmmoCount
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwWeapon_eventGetAmmoCount_Parms
{
	float                                              MaxAmmoPrimary;                                   		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              CurAmmoPrimary;                                   		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.wWeapon.AmmoMaxed
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execAmmoMaxed_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.AmmoPickupClass
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execAmmoPickupClass_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.AmmoAmount
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execAmmoAmount_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.FillToDefaultAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execFillToDefaultAmmo_Parms
{
};

// Function Engine.wWeapon.FillToInitialAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execFillToInitialAmmo_Parms
{
};

// Function Engine.wWeapon.MaxAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execMaxAmmo_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.SuperMaxOutAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execSuperMaxOutAmmo_Parms
{
};

// Function Engine.wWeapon.MaxOutAmmo
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execMaxOutAmmo_Parms
{
};

// Function Engine.wWeapon.GetAmmoClass
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execGetAmmoClass_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.ChargeBar
// Flags: [ FUNC_Simulated ]
struct AwWeapon_execChargeBar_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeapon.InitWeaponFires
// Flags: [ FUNC_Final | FUNC_Native ]
struct AwWeapon_execInitWeaponFires_Parms
{
};

// Function Engine.KVehicle.Tick
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AKVehicle_eventTick_Parms
{
	float                                              DeltaSeconds;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.KVehicle.Destroyed
// Flags: [ FUNC_Simulated ]
struct AKVehicle_execDestroyed_Parms
{
};

// Function Engine.KVehicle.SpecialCalcView
// Flags: [ FUNC_Simulated ]
struct AKVehicle_execSpecialCalcView_Parms
{
	class AActor*                                      ViewActor;                                        		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     CameraLocation;                                   		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FRotator                                    CameraRotation;                                   		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     CamLookAt;                                        		// 0x0020 ( 0x000C
//	struct FVector                                     HitLocation;                                      		// 0x002C ( 0x000C
//	struct FVector                                     HitNormal;                                        		// 0x0038 ( 0x000C
//	class APlayerController*                           PC;                                               		// 0x0044 ( 0x0004
//	int                                                i;                                                		// 0x0048 ( 0x0004
//	int                                                averageOver;                                      		// 0x004C ( 0x0004
};

// Function Engine.KVehicle.KDriverLeave
// Flags: 
struct AKVehicle_execKDriverLeave_Parms
{
	unsigned long                                      bForceLeave:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class APlayerController*                           PC;                                               		// 0x0008 ( 0x0004
//	int                                                i;                                                		// 0x000C ( 0x0004
//	unsigned long                                      havePlaced:1;                                     		// 0x0010 ( 0x0004 [0x00000001]
//	struct FVector                                     HitLocation;                                      		// 0x0014 ( 0x000C
//	struct FVector                                     HitNormal;                                        		// 0x0020 ( 0x000C
//	struct FVector                                     tryPlace;                                         		// 0x002C ( 0x000C
};

// Function Engine.KVehicle.ClientKDriverLeave
// Flags: [ FUNC_Simulated ]
struct AKVehicle_execClientKDriverLeave_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.KVehicle.KDriverEnter
// Flags: 
struct AKVehicle_execKDriverEnter_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
	class AController*                                 C;                                                		// 0x0008 ( 0x0004
};

// Function Engine.KVehicle.ClientKDriverEnter
// Flags: [ FUNC_Simulated ]
struct AKVehicle_execClientKDriverEnter_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.KVehicle.TryToDrive
// Flags: 
struct AKVehicle_execTryToDrive_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.KVehicle.KVehicleUpdateParams
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AKVehicle_eventKVehicleUpdateParams_Parms
{
};

// Function Engine.KVehicle.VehicleStateReceived
// Flags: [ FUNC_Event ]
struct AKVehicle_eventVehicleStateReceived_Parms
{
};

// Function Engine.KVehicle.TakeDamage
// Flags: 
struct AKVehicle_execTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.KVehicle.GraphData
// Flags: [ FUNC_Final | FUNC_Native ]
struct AKVehicle_execGraphData_Parms
{
	struct FString                                     DataName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              DataValue;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.KTire.TakeDamage
// Flags: 
struct AKTire_execTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.KTire.KUpdateState
// Flags: [ FUNC_Event ]
struct AKTire_eventKUpdateState_Parms
{
	struct FKRigidBodyState                            NewState;                                         		// 0x0000 ( 0x0034[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0034 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.KActor.KImpact
// Flags: [ FUNC_Event ]
struct AKActor_eventKImpact_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     pos;                                              		// 0x0004 ( 0x000C[ CPF_Parm ]
	struct FVector                                     impactVel;                                        		// 0x0010 ( 0x000C[ CPF_Parm ]
	struct FVector                                     impactNorm;                                       		// 0x001C ( 0x000C[ CPF_Parm ]
	int                                                numSounds;                                        		// 0x0028 ( 0x0004
	int                                                SoundNum;                                         		// 0x002C ( 0x0004
};

// Function Engine.KActor.Trigger
// Flags: 
struct AKActor_execTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.KActor.TakeDamage
// Flags: 
struct AKActor_execTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     ApplyImpulse;                                     		// 0x0030 ( 0x000C
	float                                              fActualMass;                                      		// 0x003C ( 0x0004
};

// Function Engine.KarmaParamsCollision.CalcContactRegion
// Flags: [ FUNC_Native ]
struct UKarmaParamsCollision_execCalcContactRegion_Parms
{
};

// Function Engine.KConstraint.KForceExceed
// Flags: [ FUNC_Event ]
struct AKConstraint_eventKForceExceed_Parms
{
	float                                              forceMag;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.KConstraint.KGetConstraintTorque
// Flags: [ FUNC_Final | FUNC_Native ]
struct AKConstraint_execKGetConstraintTorque_Parms
{
	struct FVector                                     Torque;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.KConstraint.KGetConstraintForce
// Flags: [ FUNC_Final | FUNC_Native ]
struct AKConstraint_execKGetConstraintForce_Parms
{
	struct FVector                                     Force;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.KConstraint.KUpdateConstraintParams
// Flags: [ FUNC_Native ]
struct AKConstraint_execKUpdateConstraintParams_Parms
{
};

// Function Engine.wProcMesh.Touch
// Flags: [ FUNC_Simulated ]
struct AwProcMesh_execTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     touchLocation;                                    		// 0x0004 ( 0x000C
	struct FVector                                     EffectNormal;                                     		// 0x0010 ( 0x000C
	struct FVector                                     EffectLocation;                                   		// 0x001C ( 0x000C
	float                                              touchValue;                                       		// 0x0028 ( 0x0004
};

// Function Engine.wProcMesh.TakeDamage
// Flags: [ FUNC_Simulated ]
struct AwProcMesh_execTakeDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x0014 ( 0x000C[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                CollisionPart;                                    		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                WeaponType;                                       		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bWallShot:1;                                      		// 0x002C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FVector                                     EffectNormal;                                     		// 0x0030 ( 0x000C
	struct FVector                                     EffectLocation;                                   		// 0x003C ( 0x000C
};

// Function Engine.wProcMesh.ProcPling
// Flags: [ FUNC_Final | FUNC_Native ]
struct AwProcMesh_execProcPling_Parms
{
	struct FVector                                     Position;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              Strength;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              Radius;                                           		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FVector                                     EffectLocation;                                   		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     EffectNormal;                                     		// 0x0020 ( 0x000C[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.wPickUpBase.SpawnPickup
// Flags: 
struct AwPickUpBase_execSpawnPickup_Parms
{
};

// Function Engine.wPickUpBase.TurnOn
// Flags: 
struct AwPickUpBase_execTurnOn_Parms
{
};

// Function Engine.wPickUpBase.GetInventoryGroup
// Flags: 
struct AwPickUpBase_execGetInventoryGroup_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wPickUpBase.CheckForErrors
// Flags: 
struct AwPickUpBase_execCheckForErrors_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AActor*                                      HitActor;                                         		// 0x0004 ( 0x0004
//	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C
//	struct FVector                                     HitNormal;                                        		// 0x0014 ( 0x000C
};

// Function Engine.wPickUpBase.PostBeginPlay
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwPickUpBase_eventPostBeginPlay_Parms
{
};

// Function Engine.wGameStateStorageSender.GetPlayerController
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execGetPlayerController_Parms
{
	class APlayerController*                           ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameStateStorageSender.ClientInitialize
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientInitialize_Parms
{
	int                                                id;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.Initialize
// Flags: 
struct AwGameStateStorageSender_execInitialize_Parms
{
	int                                                id;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.Destroyed
// Flags: [ FUNC_Event ]
struct AwGameStateStorageSender_eventDestroyed_Parms
{
};

// Function Engine.wGameStateStorageSender.PreBeginPlay
// Flags: [ FUNC_Event ]
struct AwGameStateStorageSender_eventPreBeginPlay_Parms
{
};

// Function Engine.wGameStateStorageSender.SetGameState_OnlyClient
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execSetGameState_OnlyClient_Parms
{
};

// Function Engine.wGameStateStorageSender.SetScoreState_OnlyClient
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execSetScoreState_OnlyClient_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0000 ( 0x0004
	int                                                UID;                                              		// 0x0004 ( 0x0004
};

// Function Engine.wGameStateStorageSender.Tick
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwGameStateStorageSender_eventTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientTick
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.SetAllDataToInterventionUser
// Flags: 
struct AwGameStateStorageSender_execSetAllDataToInterventionUser_Parms
{
	class AwGameStateStorageSender*                    ToGSSS;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strName;                                          		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strType;                                          		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strValue;                                         		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strVehicleClassName;                              		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strState;                                         		// 0x0034 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strPawn;                                          		// 0x0040 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strTemp;                                          		// 0x004C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strIsPawnValue;                                   		// 0x0058 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                TotalAmmo;                                        		// 0x0064 ( 0x0004
	int                                                CurrentAmmo;                                      		// 0x0068 ( 0x0004
	int                                                iWeaponID;                                        		// 0x006C ( 0x0004
	int                                                iAddPartsID;                                      		// 0x0070 ( 0x0004
	int                                                Vehicle_Pos_X;                                    		// 0x0074 ( 0x0004
	int                                                Vehicle_Pos_Y;                                    		// 0x0078 ( 0x0004
	int                                                Vehicle_Pos_Z;                                    		// 0x007C ( 0x0004
	int                                                iPainting_Item_ID;                                		// 0x0080 ( 0x0004
	unsigned long                                      bUniqueID:1;                                      		// 0x0084 ( 0x0004 [0x00000001]
	unsigned long                                      bRide:1;                                          		// 0x0088 ( 0x0004 [0x00000001]
	unsigned char                                      IsPawnValue;                                      		// 0x008C ( 0x0001
};

// Function Engine.wGameStateStorageSender.SetToStorage_AllUserData
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_AllUserData_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004
	int                                                GSSSCount;                                        		// 0x0004 ( 0x0004
};

// Function Engine.wGameStateStorageSender.ClientDeleteFromStorage_Weapon
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientDeleteFromStorage_Weapon_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strWeaponName;                                    		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.DeleteFromStorage_Weapon
// Flags: 
struct AwGameStateStorageSender_execDeleteFromStorage_Weapon_Parms
{
	struct FString                                     strWeaponName;                                    		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x000C ( 0x0004
	int                                                GSSSCount;                                        		// 0x0010 ( 0x0004
};

// Function Engine.wGameStateStorageSender.ClientClearStorage
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientClearStorage_Parms
{
	struct FString                                     sUserID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.ClearStorage
// Flags: 
struct AwGameStateStorageSender_execClearStorage_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004
};

// Function Engine.wGameStateStorageSender.ClientDeleteFromStorage
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientDeleteFromStorage_Parms
{
	struct FString                                     sUserID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Section;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.DeleteFromStorage
// Flags: 
struct AwGameStateStorageSender_execDeleteFromStorage_Parms
{
	struct FString                                     Section;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0018 ( 0x0004
	int                                                GSSSCount;                                        		// 0x001C ( 0x0004
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage3
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage3_Parms
{
	struct FString                                     sUserID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Section;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Type;                                             		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0030 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Section2;                                         		// 0x003C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName2;                                           		// 0x0048 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     type2;                                            		// 0x0054 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     value2;                                           		// 0x0060 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Section3;                                         		// 0x006C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName3;                                           		// 0x0078 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     type3;                                            		// 0x0084 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     value3;                                           		// 0x0090 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.SetToStorage3
// Flags: 
struct AwGameStateStorageSender_execSetToStorage3_Parms
{
	struct FString                                     Section;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Type;                                             		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Section2;                                         		// 0x0030 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName2;                                           		// 0x003C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     type2;                                            		// 0x0048 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     value2;                                           		// 0x0054 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Section3;                                         		// 0x0060 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName3;                                           		// 0x006C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     type3;                                            		// 0x0078 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     value3;                                           		// 0x0084 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0090 ( 0x0004
	int                                                GSSSCount;                                        		// 0x0094 ( 0x0004
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_Vehicle_Leave
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_Vehicle_Leave_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_Vehicle_Enter
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_Vehicle_Enter_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strClassName;                                     		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              Pos_X;                                            		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Pos_Y;                                            		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              Pos_Z;                                            		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_Skill_UpdateCall
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_Skill_UpdateCall_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nSkillID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUpdateCall:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_Skill_AddCount
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_Skill_AddCount_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nSkillID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      byAddCount;                                       		// 0x0008 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_Skill_Used
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_Skill_Used_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nSkillID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUsed:1;                                          		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_Skill_IsEnable
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_Skill_IsEnable_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nSkillID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bIsEnable:1;                                      		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_PlayerState
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_PlayerState_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strName;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      bPawnExistCondition;                              		// 0x0010 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_WeaponAmmo
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_WeaponAmmo_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strName;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nTotalAmmo;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                nCurrentAmmo;                                     		// 0x0014 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_AddWeapon
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_AddWeapon_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strWeaponName;                                    		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nWeaponID;                                        		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                nAddPartID;                                       		// 0x0014 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUniqueID:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                iPainting_Item_ID;                                		// 0x001C ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_OldWeapon
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_OldWeapon_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nWeaponID;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage_CurrentWeapon
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_CurrentWeapon_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nWeaponID;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.SetToStorage_Vehicle_Leave
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_Vehicle_Leave_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004
	int                                                GSSSCount;                                        		// 0x0004 ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_Vehicle_Enter
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_Vehicle_Enter_Parms
{
	struct FString                                     strClassName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              Pos_X;                                            		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              Pos_Y;                                            		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Pos_Z;                                            		// 0x0014 ( 0x0004[ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0018 ( 0x0004
	int                                                GSSSCount;                                        		// 0x001C ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_Skill_UpdateCall
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_Skill_UpdateCall_Parms
{
	int                                                nSkillID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUpdateCall:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0008 ( 0x0004
	int                                                GSSSCount;                                        		// 0x000C ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_Skill_AddCount
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_Skill_AddCount_Parms
{
	int                                                nSkillID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      byAddCount;                                       		// 0x0004 ( 0x0001[ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0008 ( 0x0004
	int                                                GSSSCount;                                        		// 0x000C ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_Skill_Used
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_Skill_Used_Parms
{
	int                                                nSkillID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUsed:1;                                          		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0008 ( 0x0004
	int                                                GSSSCount;                                        		// 0x000C ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_Skill_IsEnable
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_Skill_IsEnable_Parms
{
	int                                                nSkillID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bIsEnable:1;                                      		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0008 ( 0x0004
	int                                                GSSSCount;                                        		// 0x000C ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_PlayerState
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_PlayerState_Parms
{
	struct FString                                     strName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      bPawnExistCondition;                              		// 0x000C ( 0x0001[ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0010 ( 0x0004
	int                                                GSSSCount;                                        		// 0x0014 ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_WeaponAmmo
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_WeaponAmmo_Parms
{
	struct FString                                     strName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nTotalAmmo;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                nCurrentAmmo;                                     		// 0x0010 ( 0x0004[ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0014 ( 0x0004
	int                                                GSSSCount;                                        		// 0x0018 ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_AddWeapon
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_AddWeapon_Parms
{
	struct FString                                     strWeaponName;                                    		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nWeaponID;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                nAddPartID;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUniqueID:1;                                      		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                iPainting_Item_ID;                                		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x001C ( 0x0004
	int                                                GSSSCount;                                        		// 0x0020 ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_OldWeapon
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_OldWeapon_Parms
{
	int                                                nWeaponID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0004 ( 0x0004
	int                                                GSSSCount;                                        		// 0x0008 ( 0x0004
};

// Function Engine.wGameStateStorageSender.SetToStorage_CurrentWeapon
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_CurrentWeapon_Parms
{
	int                                                nWeaponID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0004 ( 0x0004
	int                                                GSSSCount;                                        		// 0x0008 ( 0x0004
};

// Function Engine.wGameStateStorageSender.LowWeapon_Delete
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowWeapon_Delete_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strWeaponName;                                    		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.LowVehicleLeave_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowVehicleLeave_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowVehicleEnter_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowVehicleEnter_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strClassName;                                     		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              Pos_X;                                            		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Pos_Y;                                            		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              Pos_Z;                                            		// 0x0018 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowSkill_UpdateCall_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowSkill_UpdateCall_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nSkillID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUpdateCall:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowSkill_AddCount_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowSkill_AddCount_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nSkillID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      byAddCount;                                       		// 0x0008 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowSkill_Used_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowSkill_Used_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nSkillID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUsed:1;                                          		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowSkill_IsEnable_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowSkill_IsEnable_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nSkillID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bIsEnable:1;                                      		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowPlayerState_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowPlayerState_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strName;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      bPawnExistCondition;                              		// 0x0010 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowWeaponAmmo_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowWeaponAmmo_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strWeaponName;                                    		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nTotalAmmo;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                nCurrentAmmo;                                     		// 0x0014 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowAddWeapon_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowAddWeapon_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     strWeaponName;                                    		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                nWeaponID;                                        		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                nAddPartID;                                       		// 0x0014 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUniqueID:1;                                      		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                iPainting_Item_ID;                                		// 0x001C ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowOldWeapon_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowOldWeapon_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nWeaponID;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.LowCurrentWeapon_Set
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execLowCurrentWeapon_Set_Parms
{
	int                                                UserID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                nWeaponID;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageSender.ClientSetToStorage
// Flags: [ FUNC_Simulated ]
struct AwGameStateStorageSender_execClientSetToStorage_Parms
{
	struct FString                                     sUserID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Section;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Type;                                             		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0030 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.SetToStorage
// Flags: 
struct AwGameStateStorageSender_execSetToStorage_Parms
{
	struct FString                                     Section;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Type;                                             		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0030 ( 0x0004
	int                                                GSSSCount;                                        		// 0x0034 ( 0x0004
};

// Function Engine.wGameStateStorageSender.GetValue
// Flags: [ FUNC_Final | FUNC_Native ]
struct AwGameStateStorageSender_execGetValue_Parms
{
	struct FString                                     Section;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Type;                                             		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0030 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameStateStorageSender.AllValues
// Flags: [ FUNC_Final | FUNC_Native ]
struct AwGameStateStorageSender_execAllValues_Parms
{
	struct FString                                     Section;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Type;                                             		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.AllNames
// Flags: [ FUNC_Final | FUNC_Native ]
struct AwGameStateStorageSender_execAllNames_Parms
{
	struct FString                                     Section;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.LowClear
// Flags: [ FUNC_Final | FUNC_Native ]
struct AwGameStateStorageSender_execLowClear_Parms
{
	struct FString                                     sUserID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.LowDelete
// Flags: [ FUNC_Final | FUNC_Native ]
struct AwGameStateStorageSender_execLowDelete_Parms
{
	struct FString                                     sUserID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Section;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.LowSet
// Flags: [ FUNC_Final | FUNC_Native ]
struct AwGameStateStorageSender_execLowSet_Parms
{
	struct FString                                     sUserID;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Section;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sName;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Type;                                             		// 0x0024 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0030 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageSender.RemoveGSSS
// Flags: [ FUNC_Native ]
struct AwGameStateStorageSender_execRemoveGSSS_Parms
{
};

// Function Engine.wGameStateStorageSender.AddGSSS
// Flags: [ FUNC_Native ]
struct AwGameStateStorageSender_execAddGSSS_Parms
{
};

// Function Engine.wGameStateStorageSender.ForceSetOwner
// Flags: [ FUNC_Final | FUNC_Native ]
struct AwGameStateStorageSender_execForceSetOwner_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wEmitter.PrecacheContent
// Flags: 
struct AwEmitter_execPrecacheContent_Parms
{
	class ALevelInfo*                                  Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wEmitter.UpdatePrecacheMaterials
// Flags: [ FUNC_Simulated ]
struct AwEmitter_execUpdatePrecacheMaterials_Parms
{
};

// Function Engine.wEmitter.Trigger
// Flags: [ FUNC_Event ]
struct AwEmitter_eventTrigger_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       EventInstigator;                                  		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wEmitter.ClampToMaxParticles
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct AwEmitter_execClampToMaxParticles_Parms
{
	float                                              InPart;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wEmitter.PreSpawned
// Flags: [ FUNC_Event ]
struct AwEmitter_eventPreSpawned_Parms
{
};

// Function Engine.wEmitter.CollisionSound
// Flags: [ FUNC_Event ]
struct AwEmitter_eventCollisionSound_Parms
{
};

// Function Engine.SceneSubtitles.Reset
// Flags: [ FUNC_Event ]
struct ASceneSubtitles_eventReset_Parms
{
};

// Function Engine.SceneSubtitles.GetSubTitles
// Flags: 
struct ASceneSubtitles_execGetSubTitles_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.SceneSubtitles.ProcessEvent
// Flags: [ FUNC_Final | FUNC_Native ]
struct ASceneSubtitles_execProcessEvent_Parms
{
	unsigned char                                      Mode;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.GameStats.GetLogFilename
// Flags: 
struct AGameStats_execGetLogFilename_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     Result;                                           		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameStats.GameEvent
// Flags: 
struct AGameStats_execGameEvent_Parms
{
	struct FString                                     GEvent;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Desc;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      Who;                                              		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FString                                     Out;                                              		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     geDesc;                                           		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameStats.SpecialEvent
// Flags: 
struct AGameStats_execSpecialEvent_Parms
{
	class APlayerReplicationInfo*                      Who;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Desc;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Out;                                              		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameStats.KillEvent
// Flags: 
struct AGameStats_execKillEvent_Parms
{
	struct FString                                     KillType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      Killer;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      Victim;                                           		// 0x0010 ( 0x0004[ CPF_Parm ]
	class UClass*                                      Damage;                                           		// 0x0014 ( 0x0004[ CPF_Parm ]
	struct FString                                     Out;                                              		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameStats.TeamScoreEvent
// Flags: 
struct AGameStats_execTeamScoreEvent_Parms
{
	int                                                Team;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Points;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Desc;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameStats.ScoreEvent
// Flags: 
struct AGameStats_execScoreEvent_Parms
{
	class APlayerReplicationInfo*                      Who;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Points;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Desc;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameStats.DisconnectEvent
// Flags: 
struct AGameStats_execDisconnectEvent_Parms
{
	class APlayerReplicationInfo*                      Who;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Out;                                              		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameStats.ConnectEvent
// Flags: 
struct AGameStats_execConnectEvent_Parms
{
	class APlayerReplicationInfo*                      Who;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Out;                                              		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameStats.EndGame
// Flags: 
struct AGameStats_execEndGame_Parms
{
	struct FString                                     Reason;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Out;                                              		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0018 ( 0x0004
	int                                                j;                                                		// 0x001C ( 0x0004
	class TArray< class APlayerReplicationInfo* >      pris;                                             		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      PRI;                                              		// 0x002C ( 0x0004
	class APlayerReplicationInfo*                      t;                                                		// 0x0030 ( 0x0004
};

// Function Engine.GameStats.StartGame
// Flags: 
struct AGameStats_execStartGame_Parms
{
};

// Function Engine.GameStats.ServerInfo
// Flags: 
struct AGameStats_execServerInfo_Parms
{
	struct FString                                     Out;                                              		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Flags;                                            		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     siServerName;                                     		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     siAdminName;                                      		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     siAdminEmail;                                     		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
	struct FServerResponseLine                         ServerState;                                      		// 0x003C ( 0x0070[ CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x00AC ( 0x0004
};

// Function Engine.GameStats.NewGame
// Flags: 
struct AGameStats_execNewGame_Parms
{
	struct FString                                     Out;                                              		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     tmp;                                              		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ngTitle;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ngAuthor;                                         		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     ngGameGameName;                                   		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x003C ( 0x0004
	class AMutator*                                    MyMutie;                                          		// 0x0040 ( 0x0004
	class AGameRules*                                  MyRules;                                          		// 0x0044 ( 0x0004
};

// Function Engine.GameStats.MapName
// Flags: 
struct AGameStats_execMapName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     MapName;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameStats.TimeZone
// Flags: 
struct AGameStats_execTimeZone_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameStats.FullTimeDate
// Flags: 
struct AGameStats_execFullTimeDate_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameStats.Header
// Flags: 
struct AGameStats_execHeader_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameStats.TimeStamp
// Flags: 
struct AGameStats_execTimeStamp_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     Seconds;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameStats.Destroyed
// Flags: [ FUNC_Event ]
struct AGameStats_eventDestroyed_Parms
{
};

// Function Engine.GameStats.PostBeginPlay
// Flags: [ FUNC_Event ]
struct AGameStats_eventPostBeginPlay_Parms
{
};

// Function Engine.GameStats.Logf
// Flags: 
struct AGameStats_execLogf_Parms
{
	struct FString                                     LogString;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.GameStats.Shutdown
// Flags: 
struct AGameStats_execShutdown_Parms
{
};

// Function Engine.GameStats.Init
// Flags: 
struct AGameStats_execInit_Parms
{
};

// Function Engine.GameStats.GetMapFileName
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameStats_execGetMapFileName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameStats.GetStatsIdentifier
// Flags: [ FUNC_Final | FUNC_Native ]
struct AGameStats_execGetStatsIdentifier_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.FileLog.Logf
// Flags: [ FUNC_Final | FUNC_Native ]
struct AFileLog_execLogf_Parms
{
	struct FString                                     LogString;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.FileLog.CloseLog
// Flags: [ FUNC_Final | FUNC_Native ]
struct AFileLog_execCloseLog_Parms
{
};

// Function Engine.FileLog.OpenLog
// Flags: [ FUNC_Final | FUNC_Native ]
struct AFileLog_execOpenLog_Parms
{
	struct FString                                     FName;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     FExt;                                             		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bOverwrite:1;                                     		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.GameMessage.ClientReceive
// Flags: [ FUNC_Simulated ]
struct AGameMessage_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.GameMessage.GetString
// Flags: 
struct AGameMessage_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.LocalMessage.IsConsoleMessage
// Flags: 
struct ALocalMessage_execIsConsoleMessage_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LocalMessage.GetLifeTime
// Flags: 
struct ALocalMessage_execGetLifeTime_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LocalMessage.GetFontSize
// Flags: 
struct ALocalMessage_execGetFontSize_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI1;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI2;                                      		// 0x0008 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      LocalPlayer;                                      		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LocalMessage.GetPos
// Flags: 
struct ALocalMessage_execGetPos_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      OutDrawPivot;                                     		// 0x0004 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	unsigned char                                      OutStackMode;                                     		// 0x0005 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	float                                              OutPosX;                                          		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              OutPosY;                                          		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.LocalMessage.GetColor
// Flags: 
struct ALocalMessage_execGetColor_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class FColor                                       ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LocalMessage.GetConsoleColor
// Flags: 
struct ALocalMessage_execGetConsoleColor_Parms
{
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	class FColor                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LocalMessage.GotoBTConsole
// Flags: 
struct ALocalMessage_execGotoBTConsole_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LocalMessage.GotoHud
// Flags: 
struct ALocalMessage_execGotoHud_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LocalMessage.ClientReceive
// Flags: 
struct ALocalMessage_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.LocalMessage.AssembleString
// Flags: 
struct ALocalMessage_execAssembleString_Parms
{
	class AHUD*                                        myHUD;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     MessageString;                                    		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.LocalMessage.GetString
// Flags: 
struct ALocalMessage_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.LocalMessage.GetRelatedString
// Flags: 
struct ALocalMessage_execGetRelatedString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.LocalMessage.RenderComplexMessage
// Flags: 
struct ALocalMessage_execRenderComplexMessage_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              XL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YL;                                               		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FString                                     MessageString;                                    		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	int                                                Switch;                                           		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x001C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0020 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.VolumeTimer.Timer
// Flags: 
struct AVolumeTimer_execTimer_Parms
{
};

// Function Engine.VolumeTimer.PostBeginPlay
// Flags: 
struct AVolumeTimer_execPostBeginPlay_Parms
{
};

// Function Engine.wProjectile.RecoverFromHostChange
// Flags: 
struct AwProjectile_execRecoverFromHostChange_Parms
{
};

// Function Engine.wProjectile.RecoverInstigator
// Flags: 
struct AwProjectile_execRecoverInstigator_Parms
{
	class AController*                                 C;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wProjectile.RumbleRadius
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execRumbleRadius_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	class APawn*                                       kVictim;                                          		// 0x000C ( 0x0004
};

// Function Engine.wProjectile.BlowUp
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execBlowUp_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.wProjectile.wLoadOut
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execwLoadOut_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwWeaponManager*                             wMani;                                            		// 0x0004 ( 0x0004
};

// Function Engine.wProjectile.GetExplosionClass
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execGetExplosionClass_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UClass*                                      ResultExplosionClass;                             		// 0x0004 ( 0x0004
};

// Function Engine.wProjectile.GetExplosionClassByMaterial
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execGetExplosionClassByMaterial_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wProjectile.GetExplosionClassByActor
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execGetExplosionClassByActor_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wProjectile.DamageLog
// Flags: 
struct AwProjectile_execDamageLog_Parms
{
	class APawn*                                       Victim;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fDam;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              fDist;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FString                                     szType;                                           		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     szName;                                           		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wProjectile.SufferEffect
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execSufferEffect_Parms
{
	class APawn*                                       Victim;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fDist;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              fReduceRate;                                      		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              fRangeMiddle;                                     		// 0x000C ( 0x0004
	float                                              fRangeLerp;                                       		// 0x0010 ( 0x0004
	float                                              fEffDistLerp;                                     		// 0x0014 ( 0x0004
	class APlayerController*                           VictimPC;                                         		// 0x0018 ( 0x0004
	float                                              fExpRadious_Outer;                                		// 0x001C ( 0x0004
	float                                              fExpRadious_Inner;                                		// 0x0020 ( 0x0004
};

// Function Engine.wProjectile.HurtRadiusTutorial
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execHurtRadiusTutorial_Parms
{
	float                                              DamageAmount;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              DamageRadius;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              Momentum;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0010 ( 0x000C[ CPF_Parm ]
	class AActor*                                      Victims;                                          		// 0x001C ( 0x0004
	float                                              dist;                                             		// 0x0020 ( 0x0004
	float                                              damageScale;                                      		// 0x0024 ( 0x0004
	struct FVector                                     Dir;                                              		// 0x0028 ( 0x000C
	float                                              fActualMomentum;                                  		// 0x0034 ( 0x0004
	float                                              fRangeLerp;                                       		// 0x0038 ( 0x0004
	float                                              fRangeMiddle;                                     		// 0x003C ( 0x0004
	float                                              fActualDamage;                                    		// 0x0040 ( 0x0004
	float                                              fExpRadious_Outer;                                		// 0x0044 ( 0x0004
	float                                              fExpRadious_Inner;                                		// 0x0048 ( 0x0004
};

// Function Engine.wProjectile.HurtRadius
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execHurtRadius_Parms
{
	float                                              DamageAmount;                                     		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              DamageRadius;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              Momentum;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0010 ( 0x000C[ CPF_Parm ]
	class APawn*                                       Victims;                                          		// 0x001C ( 0x0004
	float                                              dist;                                             		// 0x0020 ( 0x0004
	float                                              damageScale;                                      		// 0x0024 ( 0x0004
	float                                              fReduceRate;                                      		// 0x0028 ( 0x0004
	struct FVector                                     Dir;                                              		// 0x002C ( 0x000C
	float                                              fActualMomentum;                                  		// 0x0038 ( 0x0004
	float                                              fRangeLerp;                                       		// 0x003C ( 0x0004
	float                                              fRangeMiddle;                                     		// 0x0040 ( 0x0004
	float                                              fActualDamage;                                    		// 0x0044 ( 0x0004
	float                                              fExpRadious_Outer;                                		// 0x0048 ( 0x0004
	float                                              fExpRadious_Inner;                                		// 0x004C ( 0x0004
};

// Function Engine.wProjectile.Tick
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwProjectile_eventTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wProjectile.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct AwProjectile_execPostBeginPlay_Parms
{
};

// Function Engine.wMessage_Quest.PlaySoundMessageQuest
// Flags: [ FUNC_Simulated ]
struct AwMessage_Quest_execPlaySoundMessageQuest_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMessage_Quest.ClientReceive_Type3
// Flags: [ FUNC_Simulated ]
struct AwMessage_Quest_execClientReceive_Type3_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRDifficult;                                      		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMap;                                            		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMessage_Quest.ClientReceive_Type2
// Flags: [ FUNC_Simulated ]
struct AwMessage_Quest_execClientReceive_Type2_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMode;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMap;                                            		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRMin;                                            		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRSec;                                            		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMessage_Quest.ClientReceive_Type1
// Flags: [ FUNC_Simulated ]
struct AwMessage_Quest_execClientReceive_Type1_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRWeaponType;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                iRweaponId;                                       		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMessage_Quest.ClientReceive
// Flags: [ FUNC_Simulated ]
struct AwMessage_Quest_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMessage_Quest.GetString
// Flags: 
struct AwMessage_Quest_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMessage_Game.GetSoundPackageByTeam
// Flags: 
struct AwMessage_Game_execGetSoundPackageByTeam_Parms
{
	int                                                iTeam;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iLang;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMessage_Game.GotoBTConsole
// Flags: 
struct AwMessage_Game_execGotoBTConsole_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMessage_Game.GotoHud
// Flags: 
struct AwMessage_Game_execGotoHud_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMessage_Game.GetPopMessageStr
// Flags: 
struct AwMessage_Game_execGetPopMessageStr_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMessage_Game.ClientReceive
// Flags: [ FUNC_Simulated ]
struct AwMessage_Game_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              fRadius;                                          		// 0x0014 ( 0x0004
	class APawn*                                       tempP;                                            		// 0x0018 ( 0x0004
	int                                                lp1;                                              		// 0x001C ( 0x0004
};

// Function Engine.wMessage_Game.GetString
// Flags: 
struct AwMessage_Game_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wGun.GetCurMagazineAmmoCount
// Flags: [ FUNC_Simulated ]
struct AwGun_execGetCurMagazineAmmoCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.GetCurTotalAmmoCount
// Flags: [ FUNC_Simulated ]
struct AwGun_execGetCurTotalAmmoCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.ClientAddMagazine
// Flags: [ FUNC_Simulated ]
struct AwGun_execClientAddMagazine_Parms
{
};

// Function Engine.wGun.ServerAddMagazine
// Flags: 
struct AwGun_execServerAddMagazine_Parms
{
};

// Function Engine.wGun.Change3DScopeMesh
// Flags: [ FUNC_Simulated ]
struct AwGun_execChange3DScopeMesh_Parms
{
};

// Function Engine.wGun.CheckPartsSet
// Flags: [ FUNC_Simulated ]
struct AwGun_execCheckPartsSet_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wGun.SetAmmoAmount
// Flags: 
struct AwGun_execSetAmmoAmount_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                CurrentAmmo;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.SetAmmoTotal
// Flags: 
struct AwGun_execSetAmmoTotal_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                TotalAmmo;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.ClientWeaponThrown
// Flags: [ FUNC_Simulated ]
struct AwGun_execClientWeaponThrown_Parms
{
};

// Function Engine.wGun.CalcBreathRot
// Flags: [ FUNC_Simulated ]
struct AwGun_execCalcBreathRot_Parms
{
	float                                              fBoxWidth;                                        		// 0x0000 ( 0x0004
	float                                              fBoxHeight;                                       		// 0x0004 ( 0x0004
	float                                              fBoxYaw;                                          		// 0x0008 ( 0x0004
	float                                              fBoxPitch;                                        		// 0x000C ( 0x0004
	float                                              fRadiusAim;                                       		// 0x0010 ( 0x0004
};

// Function Engine.wGun.CalcBreathOffset
// Flags: [ FUNC_Simulated ]
struct AwGun_execCalcBreathOffset_Parms
{
	struct FName                                       szAnim;                                           		// 0x0000 ( 0x0004
	float                                              fFrame;                                           		// 0x0004 ( 0x0004
	float                                              fRate;                                            		// 0x0008 ( 0x0004
	float                                              fLerp;                                            		// 0x000C ( 0x0004
	float                                              fSpeedAim;                                        		// 0x0010 ( 0x0004
};

// Function Engine.wGun.SetSprint
// Flags: [ FUNC_Simulated ]
struct AwGun_execSetSprint_Parms
{
	unsigned long                                      bValue:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	float                                              fReloadAniSumRate;                                		// 0x0004 ( 0x0004
};

// Function Engine.wGun.StartFire
// Flags: [ FUNC_Simulated ]
struct AwGun_execStartFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.ClientStartFire
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwGun_eventClientStartFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.GetEffectStart
// Flags: [ FUNC_Simulated ]
struct AwGun_execGetEffectStart_Parms
{
	struct FVector                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct AwGun_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FString                                     t;                                                		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	class APlayerController*                           PC;                                               		// 0x0018 ( 0x0004
};

// Function Engine.wGun.SpawnShell
// Flags: [ FUNC_Simulated ]
struct AwGun_execSpawnShell_Parms
{
};

// Function Engine.wGun.ServerSilencerAttached
// Flags: 
struct AwGun_execServerSilencerAttached_Parms
{
	unsigned long                                      bEnabled:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGun.SilencerAttached
// Flags: [ FUNC_Simulated ]
struct AwGun_execSilencerAttached_Parms
{
	unsigned long                                      bEnabled:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGun.ApplyPartsParam
// Flags: [ FUNC_Simulated ]
struct AwGun_execApplyPartsParam_Parms
{
	struct FString                                     strOption;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     strValue;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     strTemp;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGun.SetAddPartsParams
// Flags: [ FUNC_Simulated ]
struct AwGun_execSetAddPartsParams_Parms
{
	int                                                iTemp0;                                           		// 0x0000 ( 0x0004
	int                                                iTemp1;                                           		// 0x0004 ( 0x0004
	class UwItemBaseParam*                             ItemParam;                                        		// 0x0008 ( 0x0004
};

// Function Engine.wGun.ScopeAttached
// Flags: [ FUNC_Simulated ]
struct AwGun_execScopeAttached_Parms
{
	unsigned long                                      bEnabled:1;                                       		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGun.CalcSwayRot
// Flags: [ FUNC_Simulated ]
struct AwGun_execCalcSwayRot_Parms
{
	float                                              fDeltaTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.CalcSwayRot_Aim
// Flags: [ FUNC_Simulated ]
struct AwGun_execCalcSwayRot_Aim_Parms
{
	float                                              fDeltaTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
	struct FRotator                                    rDelta;                                           		// 0x0008 ( 0x000C
	float                                              fVelo;                                            		// 0x0014 ( 0x0004
	int                                                iDeltaP;                                          		// 0x0018 ( 0x0004
	int                                                iDeltaY;                                          		// 0x001C ( 0x0004
	int                                                iDeltaRot;                                        		// 0x0020 ( 0x0004
};

// Function Engine.wGun.CalcFiringSwayRot
// Flags: [ FUNC_Simulated ]
struct AwGun_execCalcFiringSwayRot_Parms
{
	float                                              fDeltaTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.CalcFiringSwayRot_Aim
// Flags: [ FUNC_Simulated ]
struct AwGun_execCalcFiringSwayRot_Aim_Parms
{
	float                                              fDeltaTime;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
	struct FRotator                                    rDelta;                                           		// 0x0008 ( 0x000C
	float                                              fVelo;                                            		// 0x0014 ( 0x0004
	int                                                iDeltaP;                                          		// 0x0018 ( 0x0004
	int                                                iDeltaY;                                          		// 0x001C ( 0x0004
	int                                                iDeltaRot;                                        		// 0x0020 ( 0x0004
};

// Function Engine.wGun.CalcStanceOffset
// Flags: [ FUNC_Simulated ]
struct AwGun_execCalcStanceOffset_Parms
{
	float                                              fDelta;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       szAnim;                                           		// 0x0004 ( 0x0004
	float                                              fFrame;                                           		// 0x0008 ( 0x0004
	float                                              fRate;                                            		// 0x000C ( 0x0004
};

// Function Engine.wGun.CalcDestPivot
// Flags: [ FUNC_Simulated ]
struct AwGun_execCalcDestPivot_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FName                                       szAnim;                                           		// 0x0004 ( 0x0004
//	float                                              fFrame;                                           		// 0x0008 ( 0x0004
//	float                                              fRate;                                            		// 0x000C ( 0x0004
};

// Function Engine.wGun.CalcPartsOffset
// Flags: [ FUNC_Simulated ]
struct AwGun_execCalcPartsOffset_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	struct FVector                                     vCurrAimDiff;                                     		// 0x0004 ( 0x000C
	struct FName                                       szAnim;                                           		// 0x0010 ( 0x0004
	float                                              fFrame;                                           		// 0x0014 ( 0x0004
	float                                              fRate;                                            		// 0x0018 ( 0x0004
	struct FVector                                     vDiff;                                            		// 0x001C ( 0x000C
	float                                              fLerp;                                            		// 0x0028 ( 0x0004
};

// Function Engine.wGun.SetAimDiff
// Flags: [ FUNC_Simulated ]
struct AwGun_execSetAimDiff_Parms
{
	float                                              InX;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              InY;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              InZ;                                              		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wGun.HasDotSight
// Flags: [ FUNC_Simulated ]
struct AwGun_execHasDotSight_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.ApplyOffset
// Flags: [ FUNC_Simulated ]
struct AwGun_execApplyOffset_Parms
{
	struct FCoords                                     coBoneCam;                                        		// 0x0000 ( 0x0030
	struct FVector                                     vBoneCam;                                         		// 0x0030 ( 0x000C
};

// Function Engine.wGun.ApplyOffset_Trans
// Flags: [ FUNC_Simulated ]
struct AwGun_execApplyOffset_Trans_Parms
{
};

// Function Engine.wGun.ApplyOffset_Rot
// Flags: [ FUNC_Simulated ]
struct AwGun_execApplyOffset_Rot_Parms
{
	struct FRotator                                    rBone;                                            		// 0x0000 ( 0x000C
	struct FName                                       szAnim;                                           		// 0x000C ( 0x0004
	float                                              fFrame;                                           		// 0x0010 ( 0x0004
	float                                              fRate;                                            		// 0x0014 ( 0x0004
	float                                              fLerp;                                            		// 0x0018 ( 0x0004
	struct FRotator                                    rLerpRot;                                         		// 0x001C ( 0x000C
	struct FRotator                                    rLerpRot_Aim;                                     		// 0x0028 ( 0x000C
	struct FRotator                                    rLerpFiringRot;                                   		// 0x0034 ( 0x000C
	struct FRotator                                    rLerpFiringRot_Aim;                               		// 0x0040 ( 0x000C
	float                                              fMinFrame;                                        		// 0x004C ( 0x0004
	int                                                InverseWeapon;                                    		// 0x0050 ( 0x0004
};

// Function Engine.wGun.IsAiming
// Flags: [ FUNC_Simulated ]
struct AwGun_execIsAiming_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.RenderOverlays
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwGun_eventRenderOverlays_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.RenderScope
// Flags: [ FUNC_Simulated ]
struct AwGun_execRenderScope_Parms
{
	class UCanvas*                                     Canv;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.ForceRenderOverlays
// Flags: [ FUNC_Simulated ]
struct AwGun_execForceRenderOverlays_Parms
{
	class UCanvas*                                     Canv;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.FireOne
// Flags: [ FUNC_Simulated ]
struct AwGun_execFireOne_Parms
{
	int                                                iFireMode;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.PutDown
// Flags: [ FUNC_Simulated ]
struct AwGun_execPutDown_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.BringUp
// Flags: [ FUNC_Simulated ]
struct AwGun_execBringUp_Parms
{
	class AwWeapon*                                    PrevWeapon;                                       		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wGun.Destroyed
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwGun_eventDestroyed_Parms
{
};

// Function Engine.wGun.SetResParams
// Flags: [ FUNC_Simulated ]
struct AwGun_execSetResParams_Parms
{
	class UClass*                                      wRes;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.SetBaseParams
// Flags: [ FUNC_Simulated ]
struct AwGun_execSetBaseParams_Parms
{
	class UwWeaponBaseParams*                          wBase;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.FillToDefaultAmmo
// Flags: [ FUNC_Simulated ]
struct AwGun_execFillToDefaultAmmo_Parms
{
};

// Function Engine.wGun.FillToInitialAmmo
// Flags: [ FUNC_Simulated ]
struct AwGun_execFillToInitialAmmo_Parms
{
};

// Function Engine.wGun.ReloadComplete
// Flags: [ FUNC_Simulated ]
struct AwGun_execReloadComplete_Parms
{
	int                                                iNumToBeLoaded;                                   		// 0x0000 ( 0x0004
	int                                                iActualReloadAmmo;                                		// 0x0004 ( 0x0004
};

// Function Engine.wGun.NotifyReloaded
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwGun_eventNotifyReloaded_Parms
{
};

// Function Engine.wGun.GetAmmoCount
// Flags: [ FUNC_Simulated ]
struct AwGun_execGetAmmoCount_Parms
{
	float                                              MaxAmmoPrimary;                                   		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              CurAmmoPrimary;                                   		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.wGun.StoreAmmo
// Flags: 
struct AwGun_execStoreAmmo_Parms
{
	struct FString                                     strName;                                          		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class APlayerController*                           PC;                                               		// 0x000C ( 0x0004
};

// Function Engine.wGun.ServerReload
// Flags: 
struct AwGun_execServerReload_Parms
{
	float                                              fRadius;                                          		// 0x0000 ( 0x0004
	float                                              fMessageRange;                                    		// 0x0004 ( 0x0004
	int                                                iTeamNum;                                         		// 0x0008 ( 0x0004
	int                                                iCodeID;                                          		// 0x000C ( 0x0004
	struct FVector                                     vLocation;                                        		// 0x0010 ( 0x000C
};

// Function Engine.wGun.Reload
// Flags: [ FUNC_Simulated ]
struct AwGun_execReload_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              fRadius;                                          		// 0x0004 ( 0x0004
//	float                                              fMessageRange;                                    		// 0x0008 ( 0x0004
//	int                                                iTeamNum;                                         		// 0x000C ( 0x0004
//	float                                              fReloadAniSumRate;                                		// 0x0010 ( 0x0004
//	struct FName                                       AniName;                                          		// 0x0014 ( 0x0004
//	float                                              AniFrame;                                         		// 0x0018 ( 0x0004
//	float                                              AniRate;                                          		// 0x001C ( 0x0004
};

// Function Engine.wGun.ProcessMoveAni
// Flags: [ FUNC_Simulated ]
struct AwGun_execProcessMoveAni_Parms
{
};

// Function Engine.wGun.PlayIdle
// Flags: [ FUNC_Simulated ]
struct AwGun_execPlayIdle_Parms
{
	struct FName                                       szAnim;                                           		// 0x0000 ( 0x0004
	float                                              fFrame;                                           		// 0x0004 ( 0x0004
	float                                              fRate;                                            		// 0x0008 ( 0x0004
};

// Function Engine.wGun.ForcePlayIdle
// Flags: [ FUNC_Simulated ]
struct AwGun_execForcePlayIdle_Parms
{
};

// Function Engine.wGun.AnimEnd
// Flags: [ FUNC_Simulated ]
struct AwGun_execAnimEnd_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       Anim;                                             		// 0x0004 ( 0x0004
	float                                              frame;                                            		// 0x0008 ( 0x0004
	float                                              Rate;                                             		// 0x000C ( 0x0004
	float                                              fReloadAniSumRate;                                		// 0x0010 ( 0x0004
};

// Function Engine.wGun.OutOfAmmo
// Flags: [ FUNC_Simulated ]
struct AwGun_execOutOfAmmo_Parms
{
	class AwWeapon*                                    W;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wGun.CheckOutOfAmmo
// Flags: [ FUNC_Simulated ]
struct AwGun_execCheckOutOfAmmo_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.CheckActioned
// Flags: [ FUNC_Simulated ]
struct AwGun_execCheckActioned_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FName                                       Anim;                                             		// 0x0004 ( 0x0004
//	float                                              frame;                                            		// 0x0008 ( 0x0004
//	float                                              Rate;                                             		// 0x000C ( 0x0004
//	float                                              fReloadAniSumRate;                                		// 0x0010 ( 0x0004
};

// Function Engine.wGun.SeverConsumeAmmo
// Flags: 
struct AwGun_execSeverConsumeAmmo_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Load;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bAmountNeededIsMax:1;                             		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                AmountNeeded;                                     		// 0x0010 ( 0x0004
};

// Function Engine.wGun.ClientForceAmmoUpdate
// Flags: [ FUNC_Simulated ]
struct AwGun_execClientForceAmmoUpdate_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                NewAmount;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGun.AmmoAmount
// Flags: [ FUNC_Simulated ]
struct AwGun_execAmmoAmount_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.IsReloading
// Flags: [ FUNC_Simulated ]
struct AwGun_execIsReloading_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGun.IsRechambering
// Flags: [ FUNC_Simulated ]
struct AwGun_execIsRechambering_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FName                                       Anim;                                             		// 0x0004 ( 0x0004
//	float                                              frame;                                            		// 0x0008 ( 0x0004
//	float                                              Rate;                                             		// 0x000C ( 0x0004
};

// Function Engine.wGun.ServerAim
// Flags: 
struct AwGun_execServerAim_Parms
{
	unsigned long                                      bValue:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wGun.PlayAim
// Flags: [ FUNC_Simulated ]
struct AwGun_execPlayAim_Parms
{
	unsigned long                                      bUpOrDown:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	float                                              fAimAniRate;                                      		// 0x0004 ( 0x0004
};

// Function Engine.wGun.ReadyToFire
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwGun_eventReadyToFire_Parms
{
	int                                                Mode;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FName                                       Anim;                                             		// 0x0008 ( 0x0004
//	float                                              frame;                                            		// 0x000C ( 0x0004
//	float                                              Rate;                                             		// 0x0010 ( 0x0004
};

// Function Engine.wGun.CheckAim
// Flags: [ FUNC_Simulated ]
struct AwGun_execCheckAim_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwAimFire*                                   AF;                                               		// 0x0004 ( 0x0004
};

// Function Engine.wGun.SetAim
// Flags: [ FUNC_Simulated ]
struct AwGun_execSetAim_Parms
{
	unsigned long                                      bAim:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class UwAimFire*                                   AF;                                               		// 0x0004 ( 0x0004
};

// Function Engine.wGun.WeaponTick
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwGun_eventWeaponTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       AniName;                                          		// 0x0004 ( 0x0004
	float                                              AniFrame;                                         		// 0x0008 ( 0x0004
	float                                              AniRate;                                          		// 0x000C ( 0x0004
};

// Function Engine.wGun.ServerMeleeFire
// Flags: 
struct AwGun_execServerMeleeFire_Parms
{
};

// Function Engine.wGun.ResetAim
// Flags: [ FUNC_Simulated ]
struct AwGun_execResetAim_Parms
{
	class UwAimFire*                                   AF;                                               		// 0x0000 ( 0x0004
};

// Function Engine.wGun.ClientMeleeFire
// Flags: [ FUNC_Simulated ]
struct AwGun_execClientMeleeFire_Parms
{
};

// Function Engine.wGun.ActiveMeleeDelay
// Flags: [ FUNC_Simulated ]
struct AwGun_execActiveMeleeDelay_Parms
{
	struct FName                                       AniName;                                          		// 0x0000 ( 0x0004
	float                                              AniFrame;                                         		// 0x0004 ( 0x0004
	float                                              AniRate;                                          		// 0x0008 ( 0x0004
};

// Function Engine.wGun.SetActioned
// Flags: [ FUNC_Simulated ]
struct AwGun_execSetActioned_Parms
{
};

// Function Engine.wGun.SetUnactioned
// Flags: [ FUNC_Simulated ]
struct AwGun_execSetUnactioned_Parms
{
};

// Function Engine.wSkillBase.UseSupplyItem
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execUseSupplyItem_Parms
{
	unsigned char                                      byType;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
	int                                                iTemp;                                            		// 0x0004 ( 0x0004
};

// Function Engine.wSkillBase.AddSupplyItem
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execAddSupplyItem_Parms
{
	unsigned char                                      byType;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
	int                                                iTemp;                                            		// 0x0004 ( 0x0004
};

// Function Engine.wSkillBase.UsedbyWeapon
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execUsedbyWeapon_Parms
{
	int                                                iWeaponID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iTemp;                                            		// 0x0004 ( 0x0004
};

// Function Engine.wSkillBase.RemoveSkill
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execRemoveSkill_Parms
{
	int                                                iSkillID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwGameManager*                               gm;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wSkillBase.AddSkill
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execAddSkill_Parms
{
	int                                                iSkillID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwGameManager*                               gm;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwSkillBaseParam*                            Param;                                            		// 0x0008 ( 0x0004
	class UClass*                                      tmSkillClass;                                     		// 0x000C ( 0x0004
	class UwSkill*                                     tmSkill;                                          		// 0x0010 ( 0x0004
	int                                                iTemp;                                            		// 0x0014 ( 0x0004
};

// Function Engine.wSkillBase.ResetSkillState
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execResetSkillState_Parms
{
	int                                                iTemp;                                            		// 0x0000 ( 0x0004
};

// Function Engine.wSkillBase.DeadPlayer
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execDeadPlayer_Parms
{
	int                                                iTemp;                                            		// 0x0000 ( 0x0004
};

// Function Engine.wSkillBase.UpdateProcess
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execUpdateProcess_Parms
{
	int                                                iTemp;                                            		// 0x0000 ( 0x0004
};

// Function Engine.wSkillBase.ForceResetSkillUpdateCall
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execForceResetSkillUpdateCall_Parms
{
	int                                                iTemp;                                            		// 0x0000 ( 0x0004
};

// Function Engine.wSkillBase.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct UwSkillBase_execPostBeginPlay_Parms
{
	int                                                iTemp;                                            		// 0x0000 ( 0x0004
};

// Function Engine.BroadcastHandler.Destroyed
// Flags: [ FUNC_Event ]
struct ABroadcastHandler_eventDestroyed_Parms
{
};

// Function Engine.BroadcastHandler.AcceptBroadcastVoice
// Flags: 
struct ABroadcastHandler_execAcceptBroadcastVoice_Parms
{
	class APlayerController*                           Receiver;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      SenderPRI;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BroadcastHandler.AcceptBroadcastSpeech
// Flags: 
struct ABroadcastHandler_execAcceptBroadcastSpeech_Parms
{
	class APlayerController*                           Receiver;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      SenderPRI;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BroadcastHandler.AcceptBroadcastLocalized
// Flags: 
struct ABroadcastHandler_execAcceptBroadcastLocalized_Parms
{
	class APlayerController*                           Receiver;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      Sender;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      Message;                                          		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     obj;                                              		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BroadcastHandler.AcceptBroadcastText
// Flags: 
struct ABroadcastHandler_execAcceptBroadcastText_Parms
{
	class APlayerController*                           Receiver;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      SenderPRI;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Msg;                                              		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BroadcastHandler.RegisterBroadcastHandler
// Flags: 
struct ABroadcastHandler_execRegisterBroadcastHandler_Parms
{
	class ABroadcastHandler*                           NewBH;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.BroadcastHandler.AllowBroadcastLocalized
// Flags: [ FUNC_Event ]
struct ABroadcastHandler_eventAllowBroadcastLocalized_Parms
{
	class AActor*                                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      Message;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x0018 ( 0x0004
	class APlayerController*                           P;                                                		// 0x001C ( 0x0004
};

// Function Engine.BroadcastHandler.BroadcastTeam
// Flags: 
struct ABroadcastHandler_execBroadcastTeam_Parms
{
	class AController*                                 Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Msg;                                              		// 0x0004 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      mType;                                            		// 0x0014 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x0018 ( 0x0004
	class APlayerController*                           P;                                                		// 0x001C ( 0x0004
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0020 ( 0x0004
	unsigned long                                      bGhostChatting:1;                                 		// 0x0024 ( 0x0004 [0x00000001]
};

// Function Engine.BroadcastHandler.Broadcast
// Flags: 
struct ABroadcastHandler_execBroadcast_Parms
{
	class AActor*                                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Msg;                                              		// 0x0004 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      mType;                                            		// 0x0014 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	class AController*                                 C;                                                		// 0x0018 ( 0x0004
	class APlayerController*                           P;                                                		// 0x001C ( 0x0004
	class APlayerReplicationInfo*                      PRI;                                              		// 0x0020 ( 0x0004
	unsigned long                                      bGhostChatting:1;                                 		// 0x0024 ( 0x0004 [0x00000001]
};

// Function Engine.BroadcastHandler.BroadcastLocalized
// Flags: 
struct ABroadcastHandler_execBroadcastLocalized_Parms
{
	class AActor*                                      Sender;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           Receiver;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      Message;                                          		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0018 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.BroadcastHandler.BroadcastText
// Flags: 
struct ABroadcastHandler_execBroadcastText_Parms
{
	class APlayerReplicationInfo*                      SenderPRI;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           Receiver;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Msg;                                              		// 0x0008 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	struct FName                                       Type;                                             		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.BroadcastHandler.HandlerAllowsBroadcast
// Flags: 
struct ABroadcastHandler_execHandlerAllowsBroadcast_Parms
{
	class AActor*                                      broadcaster;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                SentTextNum;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BroadcastHandler.AllowsBroadcast
// Flags: 
struct ABroadcastHandler_execAllowsBroadcast_Parms
{
	class AActor*                                      broadcaster;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Len;                                              		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BroadcastHandler.GetDescriptionText
// Flags: [ FUNC_Event ]
struct ABroadcastHandler_eventGetDescriptionText_Parms
{
	struct FString                                     PropName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.BroadcastHandler.FillPlayInfo
// Flags: 
struct ABroadcastHandler_execFillPlayInfo_Parms
{
	class UPlayInfo*                                   PlayInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.BroadcastHandler.UpdateSentText
// Flags: 
struct ABroadcastHandler_execUpdateSentText_Parms
{
};

// Function Engine.VotingReplicationInfoBase.MatchSetupEnabled
// Flags: [ FUNC_Simulated ]
struct AVotingReplicationInfoBase_execMatchSetupEnabled_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VotingReplicationInfoBase.KickVoteEnabled
// Flags: [ FUNC_Simulated ]
struct AVotingReplicationInfoBase_execKickVoteEnabled_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VotingReplicationInfoBase.MapVoteEnabled
// Flags: [ FUNC_Simulated ]
struct AVotingReplicationInfoBase_execMapVoteEnabled_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VotingReplicationInfoBase.MatchSetupLocked
// Flags: [ FUNC_Simulated ]
struct AVotingReplicationInfoBase_execMatchSetupLocked_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VotingReplicationInfoBase.SendResponse
// Flags: [ FUNC_Simulated ]
struct AVotingReplicationInfoBase_execSendResponse_Parms
{
	struct FString                                     Response;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.VotingReplicationInfoBase.SendCommand
// Flags: 
struct AVotingReplicationInfoBase_execSendCommand_Parms
{
	struct FString                                     Cmd;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.VotingReplicationInfoBase.ProcessResponse
// Flags: 
struct AVotingReplicationInfoBase_execProcessResponse_Parms
{
	struct FString                                     Response;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.VotingReplicationInfoBase.ProcessCommand
// Flags: 
struct AVotingReplicationInfoBase_execProcessCommand_Parms
{
	struct FString                                     Command;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.ScoreBoard.NextStats
// Flags: 
struct AScoreBoard_execNextStats_Parms
{
};

// Function Engine.ScoreBoard.SortPRIArray
// Flags: [ FUNC_Simulated ]
struct AScoreBoard_execSortPRIArray_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                j;                                                		// 0x0004 ( 0x0004
	class APlayerReplicationInfo*                      tmp;                                              		// 0x0008 ( 0x0004
};

// Function Engine.ScoreBoard.InOrder
// Flags: [ FUNC_Simulated ]
struct AScoreBoard_execInOrder_Parms
{
	class APlayerReplicationInfo*                      P1;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerReplicationInfo*                      P2;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.ScoreBoard.UpdateScoreBoard
// Flags: [ FUNC_Simulated ]
struct AScoreBoard_execUpdateScoreBoard_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ScoreBoard.FormatTime
// Flags: [ FUNC_Simulated ]
struct AScoreBoard_execFormatTime_Parms
{
	int                                                Seconds;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                Minutes;                                          		// 0x0010 ( 0x0004
//	int                                                Hours;                                            		// 0x0014 ( 0x0004
//	struct FString                                     Time;                                             		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.ScoreBoard.UpdateGRI
// Flags: 
struct AScoreBoard_execUpdateGRI_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.ScoreBoard.DrawMiniMap
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AScoreBoard_eventDrawMiniMap_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ScoreBoard.DrawGMUserBoard
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AScoreBoard_eventDrawGMUserBoard_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ScoreBoard.DrawScoreboard
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AScoreBoard_eventDrawScoreboard_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ScoreBoard.Init
// Flags: [ FUNC_Simulated ]
struct AScoreBoard_execInit_Parms
{
};

// Function Engine.ScoreBoard.InitTitle
// Flags: [ FUNC_Simulated ]
struct AScoreBoard_execInitTitle_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.ScoreBoard.InitGRI
// Flags: [ FUNC_Simulated ]
struct AScoreBoard_execInitGRI_Parms
{
};

// Function Engine.ScoreBoard.GetSmallFontFor
// Flags: 
struct AScoreBoard_execGetSmallFontFor_Parms
{
	int                                                ScreenWidth;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                offset;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UFont*                                       ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.ScoreBoard.HaveHalfFont
// Flags: 
struct AScoreBoard_execHaveHalfFont_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                offset;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.ScoreBoard.GetSmallerFontFor
// Flags: 
struct AScoreBoard_execGetSmallerFontFor_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                offset;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UFont*                                       ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.ScoreBoard.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct AScoreBoard_execPostBeginPlay_Parms
{
};

// Function Engine.AccessControl.CheckID
// Flags: 
struct AAccessControl_execCheckID_Parms
{
	struct FString                                     CDHash;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.AccessControl.GetDescriptionText
// Flags: [ FUNC_Event ]
struct AAccessControl_eventGetDescriptionText_Parms
{
	struct FString                                     PropName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.AccessControl.FillPlayInfo
// Flags: 
struct AAccessControl_execFillPlayInfo_Parms
{
	class UPlayInfo*                                   PlayInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.AccessControl.AllowPriv
// Flags: 
struct AAccessControl_execAllowPriv_Parms
{
	struct FString                                     priv;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.CanPerform
// Flags: 
struct AAccessControl_execCanPerform_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Action;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.CheckIPPolicy
// Flags: 
struct AAccessControl_execCheckIPPolicy_Parms
{
	struct FString                                     Address;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bSilent:1;                                        		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	int                                                j;                                                		// 0x0018 ( 0x0004
//	int                                                LastMatchingPolicy;                               		// 0x001C ( 0x0004
//	struct FString                                     Policy;                                           		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     Mask;                                             		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
//	unsigned long                                      bAcceptAddress:1;                                 		// 0x0038 ( 0x0004 [0x00000001]
//	unsigned long                                      bAcceptPolicy:1;                                  		// 0x003C ( 0x0004 [0x00000001]
};

// Function Engine.AccessControl.PreLogin
// Flags: [ FUNC_Event ]
struct AAccessControl_eventPreLogin_Parms
{
	struct FString                                     Options;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Address;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PlayerID;                                         		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Error;                                            		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     FailCode;                                         		// 0x0030 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      bSpectator:1;                                     		// 0x003C ( 0x0004 [0x00000001][ CPF_Parm ]
	struct FString                                     InPassword;                                       		// 0x0040 ( 0x000C[ CPF_NeedCtorLink ]
	unsigned long                                      bAdmin:1;                                         		// 0x004C ( 0x0004 [0x00000001]
	int                                                Result;                                           		// 0x0050 ( 0x0004
};

// Function Engine.AccessControl.GetUser
// Flags: 
struct AAccessControl_execGetUser_Parms
{
	struct FString                                     uname;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UwAdminUser*                                 ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.GetLoggedAdmin
// Flags: 
struct AAccessControl_execGetLoggedAdmin_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwAdminUser*                                 ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.ValidLogin
// Flags: 
struct AAccessControl_execValidLogin_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Password;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.CheckOptionsAdmin
// Flags: 
struct AAccessControl_execCheckOptionsAdmin_Parms
{
	struct FString                                     Options;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     InAdminName;                                      		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     InPassword;                                       		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.AccessControl.KickBanPlayer
// Flags: 
struct AAccessControl_execKickBanPlayer_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     IP;                                               		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.AccessControl.BanPlayer
// Flags: 
struct AAccessControl_execBanPlayer_Parms
{
	class APlayerController*                           C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bSession:1;                                       		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     IP;                                               		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.AccessControl.KickPlayer
// Flags: 
struct AAccessControl_execKickPlayer_Parms
{
	class APlayerController*                           C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.KickBan
// Flags: 
struct AAccessControl_execKickBan_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerController*                           P;                                                		// 0x000C ( 0x0004
};

// Function Engine.AccessControl.SessionKickBan
// Flags: 
struct AAccessControl_execSessionKickBan_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerController*                           P;                                                		// 0x000C ( 0x0004
};

// Function Engine.AccessControl.Kick
// Flags: 
struct AAccessControl_execKick_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class AController*                                 C;                                                		// 0x000C ( 0x0004
	class AController*                                 NextC;                                            		// 0x0010 ( 0x0004
};

// Function Engine.AccessControl.GetAdminName
// Flags: 
struct AAccessControl_execGetAdminName_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.AccessControl.GetAdmin
// Flags: 
struct AAccessControl_execGetAdmin_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwAdminUser*                                 ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.RequiresPassword
// Flags: 
struct AAccessControl_execRequiresPassword_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.SetGamePassword
// Flags: 
struct AAccessControl_execSetGamePassword_Parms
{
	struct FString                                     P;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.AccessControl.SetAdminPassword
// Flags: 
struct AAccessControl_execSetAdminPassword_Parms
{
	struct FString                                     P;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.SetAdminFromURL
// Flags: 
struct AAccessControl_execSetAdminFromURL_Parms
{
	struct FString                                     N;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     P;                                                		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UwAdminUser*                                 NewUser;                                          		// 0x0018 ( 0x0004
	class UwAdminGroup*                                NewGroup;                                         		// 0x001C ( 0x0004
};

// Function Engine.AccessControl.IsAdmin
// Flags: 
struct AAccessControl_execIsAdmin_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.AdminExited
// Flags: 
struct AAccessControl_execAdminExited_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.AccessControl.AdminEntered
// Flags: 
struct AAccessControl_execAdminEntered_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     UserName;                                         		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.AccessControl.AdminLogout
// Flags: 
struct AAccessControl_execAdminLogout_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.AdminLogin
// Flags: 
struct AAccessControl_execAdminLogin_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     UserName;                                         		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Password;                                         		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AccessControl.SaveAdmins
// Flags: 
struct AAccessControl_execSaveAdmins_Parms
{
};

// Function Engine.AccessControl.InitPrivs
// Flags: 
struct AAccessControl_execInitPrivs_Parms
{
};

// Function Engine.AccessControl.PreBeginPlay
// Flags: [ FUNC_Event ]
struct AAccessControl_eventPreBeginPlay_Parms
{
	class UwAdminUser*                                 NewUser;                                          		// 0x0000 ( 0x0004
};

// Function Engine.XBoxPlayerInput.InvertLook
// Flags: 
struct UXBoxPlayerInput_execInvertLook_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.XBoxPlayerInput.FilterOutput
// Flags: 
struct UXBoxPlayerInput_execFilterOutput_Parms
{
	float                                              filter[ 0x04 ];                                   		// 0x0000 ( 0x0010[ CPF_Parm | CPF_OutParm ]
	float                                              output;                                           		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	float                                              total;                                            		// 0x001C ( 0x0004
};

// Function Engine.XBoxPlayerInput.sign
// Flags: 
struct UXBoxPlayerInput_execsign_Parms
{
	float                                              in;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.XBoxPlayerInput.GetComponentAccel
// Flags: 
struct UXBoxPlayerInput_execGetComponentAccel_Parms
{
	float                                              Input;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     Dir;                                              		// 0x0004 ( 0x000C[ CPF_Parm ]
	float                                              dt;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              filter[ 0x04 ];                                   		// 0x0014 ( 0x0010[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      blog:1;                                           		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              Speed;                                            		// 0x002C ( 0x0004
//	float                                              Error;                                            		// 0x0030 ( 0x0004
//	float                                              output;                                           		// 0x0034 ( 0x0004
};

// Function Engine.XBoxPlayerInput.VelToAccel
// Flags: 
struct UXBoxPlayerInput_execVelToAccel_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     X;                                                		// 0x0004 ( 0x000C
	struct FVector                                     Y;                                                		// 0x0010 ( 0x000C
	struct FVector                                     Z;                                                		// 0x001C ( 0x000C
};

// Function Engine.XBoxPlayerInput.Remap
// Flags: 
struct UXBoxPlayerInput_execRemap_Parms
{
	float                                              in;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Scale;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              Exp;                                              		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              ratemax;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              Out;                                              		// 0x0014 ( 0x0004
//	unsigned long                                      bNeg:1;                                           		// 0x0018 ( 0x0004 [0x00000001]
};

// Function Engine.XBoxPlayerInput.PlayerInput
// Flags: 
struct UXBoxPlayerInput_execPlayerInput_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              FOVScale;                                         		// 0x0004 ( 0x0004
};

// Function Engine.wGameStateStorageGetter.GetUserSkillState
// Flags: 
struct UwGameStateStorageGetter_execGetUserSkillState_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0008 ( 0x0004
	struct FString                                     strValue;                                         		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageGetter.GetUserWeaponState
// Flags: 
struct UwGameStateStorageGetter_execGetUserWeaponState_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     sName;                                            		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Type;                                             		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Value;                                            		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                iWeaponID;                                        		// 0x002C ( 0x0004
	int                                                iAddPartsID;                                      		// 0x0030 ( 0x0004
	int                                                TotalAmmo;                                        		// 0x0034 ( 0x0004
	int                                                CurrentAmmo;                                      		// 0x0038 ( 0x0004
	int                                                iPainting_Item_ID;                                		// 0x003C ( 0x0004
	unsigned long                                      bUniqueID:1;                                      		// 0x0040 ( 0x0004 [0x00000001]
	unsigned long                                      bNoData:1;                                        		// 0x0044 ( 0x0004 [0x00000001]
	class AwWeapon*                                    W;                                                		// 0x0048 ( 0x0004
	int                                                iCurrentWeaponID;                                 		// 0x004C ( 0x0004
};

// Function Engine.wGameStateStorageGetter.GetUserVehicle
// Flags: 
struct UwGameStateStorageGetter_execGetUserVehicle_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AVehicle*                                    V;                                                		// 0x0008 ( 0x0004
	struct FString                                     Value;                                            		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     sClass;                                           		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     sx;                                               		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     sy;                                               		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     sz;                                               		// 0x003C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                X;                                                		// 0x0048 ( 0x0004
	int                                                Y;                                                		// 0x004C ( 0x0004
	int                                                Z;                                                		// 0x0050 ( 0x0004
};

// Function Engine.wGameStateStorageGetter.GetUserScoreState
// Flags: 
struct UwGameStateStorageGetter_execGetUserScoreState_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Value;                                            		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameStateStorageGetter.GetUserState
// Flags: 
struct UwGameStateStorageGetter_execGetUserState_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Value;                                            		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strState;                                         		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strPawn;                                          		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strTemp;                                          		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     strIsPawnValue;                                   		// 0x0038 ( 0x000C[ CPF_NeedCtorLink ]
	struct FName                                       stateName;                                        		// 0x0044 ( 0x0004
	int                                                nPawnValue;                                       		// 0x0048 ( 0x0004
};

// Function Engine.wGameStateStorageGetter.GetUserSupplyState
// Flags: 
struct UwGameStateStorageGetter_execGetUserSupplyState_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameStateStorageGetter.GetUserQSlotState
// Flags: 
struct UwGameStateStorageGetter_execGetUserQSlotState_Parms
{
	class AwGameStateStorageSender*                    GSSS;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wGameSettings.GetRespawnTypeByIndex
// Flags: 
struct UwGameSettings_execGetRespawnTypeByIndex_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     sRespawn;                                         		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetGameModeDispOrder
// Flags: 
struct UwGameSettings_execGetGameModeDispOrder_Parms
{
	class TArray< int >                                ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< int >                                GameModeDispOrder;                                		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.IsAllowedWeaponRest
// Flags: 
struct UwGameSettings_execIsAllowedWeaponRest_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetWeaponRestrictions
// Flags: 
struct UwGameSettings_execGetWeaponRestrictions_Parms
{
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FString >                     WeaponRestrictions;                               		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetBotModeTeam
// Flags: 
struct UwGameSettings_execGetBotModeTeam_Parms
{
	int                                                BotModeIdx;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FString >                     BotModeTeam;                                      		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetBotModeTeamByIndex
// Flags: 
struct UwGameSettings_execGetBotModeTeamByIndex_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FString >                     BotModeTeam;                                      		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetWeaponRestrictionByIndex
// Flags: 
struct UwGameSettings_execGetWeaponRestrictionByIndex_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FString >                     WeaponRestrictions;                               		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetDefaultScore
// Flags: 
struct UwGameSettings_execGetDefaultScore_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FGameModeInfo                               Mode;                                             		// 0x0018 ( 0x007C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetDefaultScore_ModeNum
// Flags: 
struct UwGameSettings_execGetDefaultScore_ModeNum_Parms
{
	int                                                ModeNum;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FGameModeInfo                               Mode;                                             		// 0x0010 ( 0x007C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetDefaultTimeLimit
// Flags: 
struct UwGameSettings_execGetDefaultTimeLimit_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Score;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0024 ( 0x0004
//	struct FGameModeInfo                               Mode;                                             		// 0x0028 ( 0x007C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetDefaultTimeLimit_ModeNum
// Flags: 
struct UwGameSettings_execGetDefaultTimeLimit_ModeNum_Parms
{
	int                                                ModeNum;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Score;                                            		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x001C ( 0x0004
//	struct FGameModeInfo                               Mode;                                             		// 0x0020 ( 0x007C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetAllGameModesAtServiceBuild
// Flags: 
struct UwGameSettings_execGetAllGameModesAtServiceBuild_Parms
{
	class TArray< struct FGameModeInfo >               ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FGameModeInfo                               modeTeamGame;                                     		// 0x000C ( 0x007C[ CPF_NeedCtorLink ]
//	struct FGameModeInfo                               ModeDomination;                                   		// 0x0088 ( 0x007C[ CPF_NeedCtorLink ]
//	struct FGameModeInfo                               modeDeathMatch;                                   		// 0x0104 ( 0x007C[ CPF_NeedCtorLink ]
//	class TArray< struct FGameModeInfo >               modes;                                            		// 0x0180 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetAllGameModes
// Flags: 
struct UwGameSettings_execGetAllGameModes_Parms
{
	class TArray< struct FGameModeInfo >               ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FGameModeInfo >               modes;                                            		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
//	struct FGameModeInfo                               gmi;                                              		// 0x0018 ( 0x007C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0094 ( 0x0004
};

// Function Engine.wGameSettings.GetModeCount
// Flags: 
struct UwGameSettings_execGetModeCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_Alien
// Flags: 
struct UwGameSettings_execGetModeIndex_Alien_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_DOA
// Flags: 
struct UwGameSettings_execGetModeIndex_DOA_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_Defence
// Flags: 
struct UwGameSettings_execGetModeIndex_Defence_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_BotTeamDeathBeginner
// Flags: 
struct UwGameSettings_execGetModeIndex_BotTeamDeathBeginner_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_COL
// Flags: 
struct UwGameSettings_execGetModeIndex_COL_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_Medal
// Flags: 
struct UwGameSettings_execGetModeIndex_Medal_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_BotTutorial
// Flags: 
struct UwGameSettings_execGetModeIndex_BotTutorial_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_BotDeathMatch
// Flags: 
struct UwGameSettings_execGetModeIndex_BotDeathMatch_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_BotDomination
// Flags: 
struct UwGameSettings_execGetModeIndex_BotDomination_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_BotTeamDeath
// Flags: 
struct UwGameSettings_execGetModeIndex_BotTeamDeath_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_Sabotage
// Flags: 
struct UwGameSettings_execGetModeIndex_Sabotage_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_Domination
// Flags: 
struct UwGameSettings_execGetModeIndex_Domination_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_DeathMatch
// Flags: 
struct UwGameSettings_execGetModeIndex_DeathMatch_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_SD
// Flags: 
struct UwGameSettings_execGetModeIndex_SD_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetModeIndex_TeamDeath
// Flags: 
struct UwGameSettings_execGetModeIndex_TeamDeath_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.IsBotModeIndex
// Flags: 
struct UwGameSettings_execIsBotModeIndex_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wGameSettings.GetGameModeByIndex
// Flags: 
struct UwGameSettings_execGetGameModeByIndex_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FGameModeInfo                               ReturnValue;                                      		// 0x0004 ( 0x007C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FGameModeInfo                               Mode;                                             		// 0x0080 ( 0x007C[ CPF_NeedCtorLink ]
};

// Function Engine.wGameSettings.GetGameModeByClass
// Flags: 
struct UwGameSettings_execGetGameModeByClass_Parms
{
	struct FString                                     ClassName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FGameModeInfo                               ReturnValue;                                      		// 0x000C ( 0x007C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0088 ( 0x0004
//	class TArray< struct FGameModeInfo >               modes;                                            		// 0x008C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wMessage_Game_ImpSystem.ClientReceive
// Flags: [ FUNC_Simulated ]
struct AwMessage_Game_ImpSystem_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMessage_Game_ImpSystem.IsMessageSystem
// Flags: 
struct AwMessage_Game_ImpSystem_execIsMessageSystem_Parms
{
	int                                                iCode;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMessage_Game_ImpSystem.IsMessageMode
// Flags: 
struct AwMessage_Game_ImpSystem_execIsMessageMode_Parms
{
	int                                                iCode;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMessage_Game_ImpSystem.GetString
// Flags: 
struct AwMessage_Game_ImpSystem_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMessage_Game_ImpSystem.GotoBTConsole
// Flags: 
struct AwMessage_Game_ImpSystem_execGotoBTConsole_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMessage_Game_ImpSystem.GotoHud
// Flags: 
struct AwMessage_Game_ImpSystem_execGotoHud_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMessage_Game_ImpSystem.GetLifeTime
// Flags: 
struct AwMessage_Game_ImpSystem_execGetLifeTime_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AnnouncerQueueManager.ProcessQueueItem
// Flags: 
struct AAnnouncerQueueManager_execProcessQueueItem_Parms
{
	struct FQueueItem                                  Item;                                             		// 0x0000 ( 0x0014[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.AnnouncerQueueManager.Timer
// Flags: 
struct AAnnouncerQueueManager_execTimer_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004
};

// Function Engine.AnnouncerQueueManager.GetQueueWaitTime
// Flags: [ FUNC_Final ]
struct AAnnouncerQueueManager_execGetQueueWaitTime_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
//	float                                              WaitTime;                                         		// 0x0008 ( 0x0004
};

// Function Engine.AnnouncerQueueManager.IsQueueingSwitch
// Flags: [ FUNC_Final ]
struct AAnnouncerQueueManager_execIsQueueingSwitch_Parms
{
	unsigned char                                      Switch;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.AnnouncerQueueManager.IsQueueing
// Flags: [ FUNC_Final ]
struct AAnnouncerQueueManager_execIsQueueing_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.AnnouncerQueueManager.RemoveSound
// Flags: [ FUNC_Final ]
struct AAnnouncerQueueManager_execRemoveSound_Parms
{
	struct FString                                     soundName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.AnnouncerQueueManager.CanFindSoundInQueue
// Flags: [ FUNC_Final ]
struct AAnnouncerQueueManager_execCanFindSoundInQueue_Parms
{
	struct FString                                     DaSoundName;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.AnnouncerQueueManager.AddItemToQueue
// Flags: 
struct AAnnouncerQueueManager_execAddItemToQueue_Parms
{
	struct FString                                     ASound;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      Priority;                                         		// 0x000C ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned char                                      Switch;                                           		// 0x000D ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FQueueItem                                  NewItem;                                          		// 0x0014 ( 0x0014[ CPF_NeedCtorLink ]
};

// Function Engine.AnnouncerQueueManager.InitFor
// Flags: [ FUNC_Simulated ]
struct AAnnouncerQueueManager_execInitFor_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.AnnouncerQueueManager.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct AAnnouncerQueueManager_execPostBeginPlay_Parms
{
};

// Function Engine.RunTestsBase.RunTestClass
// Flags: 
struct ARunTestsBase_execRunTestClass_Parms
{
	class UClass*                                      TestClass;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                passes;                                           		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                fails;                                            		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	int                                                lp1;                                              		// 0x000C ( 0x0004
	class AUnitTest*                                   t;                                                		// 0x0010 ( 0x0004
	struct FString                                     Msg;                                              		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.RunTestsBase.Run
// Flags: 
struct ARunTestsBase_execRun_Parms
{
	int                                                lp1;                                              		// 0x0000 ( 0x0004
	int                                                passes;                                           		// 0x0004 ( 0x0004
	int                                                fails;                                            		// 0x0008 ( 0x0004
	int                                                totalPasses;                                      		// 0x000C ( 0x0004
	int                                                totalFails;                                       		// 0x0010 ( 0x0004
};

// Function Engine.ChatRoomMessage.IsConsoleMessage
// Flags: 
struct AChatRoomMessage_execIsConsoleMessage_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.ChatRoomMessage.AssembleMessage
// Flags: 
struct AChatRoomMessage_execAssembleMessage_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ChannelTitle;                                     		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     Text;                                             		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wMapSettings.GetMapInfo
// Flags: 
struct UwMapSettings_execGetMapInfo_Parms
{
	struct FString                                     dfile;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UwMapInfo*                                   ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x0010 ( 0x0004
//	class UwMapInfo*                                   Info;                                             		// 0x0014 ( 0x0004
};

// Function Engine.wMapSettings.GetMapInfoByID
// Flags: 
struct UwMapSettings_execGetMapInfoByID_Parms
{
	int                                                MapID;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwMapInfo*                                   ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x0008 ( 0x0004
};

// Function Engine.wMapSettings.GetWeaponRestriction
// Flags: 
struct UwMapSettings_execGetWeaponRestriction_Parms
{
	int                                                MapID;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                weaponID;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x000C ( 0x0004
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMapSettings.GetMaxUserCount
// Flags: 
struct UwMapSettings_execGetMaxUserCount_Parms
{
	int                                                MapID;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                GameModeIdx;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x000C ( 0x0004
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMapSettings.IsDOMI_RandomRespawn
// Flags: 
struct UwMapSettings_execIsDOMI_RandomRespawn_Parms
{
	int                                                MapID;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                GameModeIdx;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x000C ( 0x0004
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMapSettings.IsTDM_RandomRespawn
// Flags: 
struct UwMapSettings_execIsTDM_RandomRespawn_Parms
{
	int                                                MapID;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                GameModeIdx;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x000C ( 0x0004
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMapSettings.IsGameModeEnable
// Flags: 
struct UwMapSettings_execIsGameModeEnable_Parms
{
	int                                                MapID;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                GameModeIdx;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                idx;                                              		// 0x000C ( 0x0004
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMapSettings.GetMapInfoByMapNum
// Flags: 
struct UwMapSettings_execGetMapInfoByMapNum_Parms
{
	class TArray< class UwMapInfo* >                   infos;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                MapNum;                                           		// 0x000C ( 0x0004[ CPF_Parm ]
	class UwMapInfo*                                   ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0014 ( 0x0004
};

// Function Engine.wMapSettings.GetAllMapInfos
// Flags: 
struct UwMapSettings_execGetAllMapInfos_Parms
{
	unsigned long                                      bServiceBuild:1;                                  		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	class TArray< class UwMapInfo* >                   ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
//	class TArray< struct FMapRecord >                  List;                                             		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FMapRecord                                  record;                                           		// 0x0020 ( 0x006C[ CPF_NeedCtorLink ]
//	class UwMapInfo*                                   Info;                                             		// 0x008C ( 0x0004
//	class TArray< class UwMapInfo* >                   infos;                                            		// 0x0090 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wMapSettings.IsValidMap_THAILAND
// Flags: 
struct UwMapSettings_execIsValidMap_THAILAND_Parms
{
	struct FString                                     LocStr;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bServiceBuild:1;                                  		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMapSettings.IsValidMap_GP
// Flags: 
struct UwMapSettings_execIsValidMap_GP_Parms
{
	struct FString                                     LocStr;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bServiceBuild:1;                                  		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMapSettings.IsValidMap_CHINA
// Flags: 
struct UwMapSettings_execIsValidMap_CHINA_Parms
{
	struct FString                                     LocStr;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bServiceBuild:1;                                  		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMapSettings._isValidMap
// Flags: 
struct UwMapSettings_exec_isValidMap_Parms
{
	struct FString                                     fileName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bServiceBuild:1;                                  		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     LocStr;                                           		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wMapSettings.Initialize
// Flags: 
struct UwMapSettings_execInitialize_Parms
{
	class UwMatchMaker*                                MM;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wItemBoxHK.IsCashItem
// Flags: 
struct UwItemBoxHK_execIsCashItem_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wItemBoxHK.GetPartSkillName
// Flags: 
struct UwItemBoxHK_execGetPartSkillName_Parms
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	struct FString                                     strResult;                                        		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wItemBoxHK.GetUIDamage
// Flags: 
struct UwItemBoxHK_execGetUIDamage_Parms
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                iSightPartID;                                     		// 0x000C ( 0x0004
//	int                                                iBarrelPartID;                                    		// 0x0010 ( 0x0004
//	int                                                iSilencerPartID;                                  		// 0x0014 ( 0x0004
//	int                                                iGunstockPartID;                                  		// 0x0018 ( 0x0004
//	int                                                iResult;                                          		// 0x001C ( 0x0004
};

// Function Engine.wItemBoxHK.GetUISpread
// Flags: 
struct UwItemBoxHK_execGetUISpread_Parms
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                iSightPartID;                                     		// 0x000C ( 0x0004
//	int                                                iBarrelPartID;                                    		// 0x0010 ( 0x0004
//	int                                                iSilencerPartID;                                  		// 0x0014 ( 0x0004
//	int                                                iGunstockPartID;                                  		// 0x0018 ( 0x0004
//	int                                                iResult;                                          		// 0x001C ( 0x0004
};

// Function Engine.wItemBoxHK.GetUIViewKick
// Flags: 
struct UwItemBoxHK_execGetUIViewKick_Parms
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                iSightPartID;                                     		// 0x000C ( 0x0004
//	int                                                iBarrelPartID;                                    		// 0x0010 ( 0x0004
//	int                                                iSilencerPartID;                                  		// 0x0014 ( 0x0004
//	int                                                iGunstockPartID;                                  		// 0x0018 ( 0x0004
//	int                                                iResult;                                          		// 0x001C ( 0x0004
};

// Function Engine.wItemBoxHK.GetUIRateOfFire
// Flags: 
struct UwItemBoxHK_execGetUIRateOfFire_Parms
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                iSightPartID;                                     		// 0x000C ( 0x0004
//	int                                                iBarrelPartID;                                    		// 0x0010 ( 0x0004
//	int                                                iSilencerPartID;                                  		// 0x0014 ( 0x0004
//	int                                                iGunstockPartID;                                  		// 0x0018 ( 0x0004
//	int                                                iResult;                                          		// 0x001C ( 0x0004
};

// Function Engine.wItemBoxHK.GetUIMove
// Flags: 
struct UwItemBoxHK_execGetUIMove_Parms
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                iSightPartID;                                     		// 0x000C ( 0x0004
//	int                                                iBarrelPartID;                                    		// 0x0010 ( 0x0004
//	int                                                iSilencerPartID;                                  		// 0x0014 ( 0x0004
//	int                                                iGunstockPartID;                                  		// 0x0018 ( 0x0004
//	int                                                iResult;                                          		// 0x001C ( 0x0004
};

// Function Engine.wItemBoxHK.GetUIRange
// Flags: 
struct UwItemBoxHK_execGetUIRange_Parms
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                iSightPartID;                                     		// 0x000C ( 0x0004
//	int                                                iBarrelPartID;                                    		// 0x0010 ( 0x0004
//	int                                                iSilencerPartID;                                  		// 0x0014 ( 0x0004
//	int                                                iGunstockPartID;                                  		// 0x0018 ( 0x0004
//	int                                                iResult;                                          		// 0x001C ( 0x0004
};

// Function Engine.wItemBoxHK.GetPartName
// Flags: 
struct UwItemBoxHK_execGetPartName_Parms
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                Index;                                            		// 0x0010 ( 0x0004
};

// Function Engine.wItemBoxHK.FindPartGroupIndex
// Flags: 
struct UwItemBoxHK_execFindPartGroupIndex_Parms
{
	int                                                PartID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wItemBoxHK.SortPartList
// Flags: 
struct UwItemBoxHK_execSortPartList_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wMatchUserInfo.LogUsedStatus
// Flags: 
struct UwMatchUserInfo_execLogUsedStatus_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                j;                                                		// 0x0004 ( 0x0004
	struct FEquippedItemInfo                           Item;                                             		// 0x0008 ( 0x0024
};

// Function Engine.wMatchUserInfo.GetPaintIDEquippedItems
// Flags: 
struct UwMatchUserInfo_execGetPaintIDEquippedItems_Parms
{
	int                                                weaponID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0008 ( 0x0004
};

// Function Engine.wMatchUserInfo.ResetQSlotItemUse
// Flags: 
struct UwMatchUserInfo_execResetQSlotItemUse_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                j;                                                		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              Time;                                             		// 0x0008 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchUserInfo.ResetItemUse
// Flags: 
struct UwMatchUserInfo_execResetItemUse_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Time;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchUserInfo.SetItemUse
// Flags: 
struct UwMatchUserInfo_execSetItemUse_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMatchUserInfo.ExtractBonusPoint
// Flags: 
struct UwMatchUserInfo_execExtractBonusPoint_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwGameManager*                               GameMgr;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBaseParam*                             baseParam;                                        		// 0x000C ( 0x0004
};

// Function Engine.wMatchUserInfo.ExtractBonusExp
// Flags: 
struct UwMatchUserInfo_execExtractBonusExp_Parms
{
	int                                                ItemID;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwGameManager*                               GameMgr;                                          		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwItemBaseParam*                             baseParam;                                        		// 0x000C ( 0x0004
};

// Function Engine.wMatchUserInfo.GetBonusPoint
// Flags: 
struct UwMatchUserInfo_execGetBonusPoint_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              bonus;                                            		// 0x0008 ( 0x0004
//	int                                                lp1;                                              		// 0x000C ( 0x0004
};

// Function Engine.wMatchUserInfo.GetBonusExP
// Flags: 
struct UwMatchUserInfo_execGetBonusExP_Parms
{
	class UwGameManager*                               GameMgr;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              bonus;                                            		// 0x0008 ( 0x0004
//	int                                                lp1;                                              		// 0x000C ( 0x0004
};

// Function Engine.BTCustomDrawHK.Get_0x0A_RemoveString
// Flags: 
struct UBTCustomDrawHK_execGet_0x0A_RemoveString_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     ret;                                              		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     ch;                                               		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0030 ( 0x0004
};

// Function Engine.BTCustomDrawHK.GetNumberString
// Flags: 
struct UBTCustomDrawHK_execGetNumberString_Parms
{
	int                                                Num;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      fixedsize:1;                                      		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                fixedlen;                                         		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     ret;                                              		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                retlen;                                           		// 0x0024 ( 0x0004
};

// Function Engine.BTCustomDrawHK.IsInBox
// Flags: 
struct UBTCustomDrawHK_execIsInBox_Parms
{
	float                                              boxx1;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              boxx2;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              boxy1;                                            		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              boxy2;                                            		// 0x000C ( 0x0004[ CPF_Parm ]
	float                                              X;                                                		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0014 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BTCustomDrawHK.IsInFloatBox
// Flags: 
struct UBTCustomDrawHK_execIsInFloatBox_Parms
{
	struct FFloatBox                                   Box;                                              		// 0x0000 ( 0x0010[ CPF_Parm ]
	float                                              X;                                                		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Y;                                                		// 0x0014 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BTCustomDrawHK.GetRatioIndex
// Flags: 
struct UBTCustomDrawHK_execGetRatioIndex_Parms
{
	int                                                width;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Height;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              ScreenRatio;                                      		// 0x000C ( 0x0004
};

// Function Engine.BTCustomDrawHK.MakeIntClass
// Flags: 
struct UBTCustomDrawHK_execMakeIntClass_Parms
{
	int                                                A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UIntClass*                                   ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UIntClass*                                   ic;                                               		// 0x0008 ( 0x0004
};

// Function Engine.BTCustomDrawHK.FormatStringDiviedArray
// Flags: 
struct UBTCustomDrawHK_execFormatStringDiviedArray_Parms
{
	struct FString                                     original;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     args;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     ret;                                              		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0030 ( 0x0004
//	int                                                j;                                                		// 0x0034 ( 0x0004
//	class TArray< struct FString >                     outRet;                                           		// 0x0038 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< struct FString >                     arrRet;                                           		// 0x0044 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.BTCustomDrawHK.SplitString
// Flags: 
struct UBTCustomDrawHK_execSplitString_Parms
{
	struct FString                                     original;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     temp;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                ExceptDivideMode;                                 		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FString                                     divider1;                                         		// 0x001C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     divider2;                                         		// 0x0028 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     divider3;                                         		// 0x0034 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0040 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0044 ( 0x0004
//	int                                                j;                                                		// 0x0048 ( 0x0004
//	int                                                k;                                                		// 0x004C ( 0x0004
//	class TArray< struct FString >                     Divider;                                          		// 0x0050 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< struct FString >                     Src;                                              		// 0x005C ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< struct FString >                     Dest;                                             		// 0x0068 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.BTCustomDrawHK.FormatStringArray
// Flags: 
struct UBTCustomDrawHK_execFormatStringArray_Parms
{
	struct FString                                     original;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     args;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0018 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     ret;                                              		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0030 ( 0x0004
};

// Function Engine.BTCustomDrawHK.FormatString
// Flags: 
struct UBTCustomDrawHK_execFormatString_Parms
{
	struct FString                                     original;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     arg0;                                             		// 0x000C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     arg1;                                             		// 0x0018 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     arg2;                                             		// 0x0024 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     arg3;                                             		// 0x0030 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     arg4;                                             		// 0x003C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     arg5;                                             		// 0x0048 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     arg6;                                             		// 0x0054 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     arg7;                                             		// 0x0060 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     arg8;                                             		// 0x006C ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0078 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FString >                     args;                                             		// 0x0084 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.BTCustomDrawHK.MakeResizeBox
// Flags: 
struct UBTCustomDrawHK_execMakeResizeBox_Parms
{
	struct FFloatBox                                   inBox;                                            		// 0x0000 ( 0x0010[ CPF_Parm ]
	int                                                resizeX;                                          		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                resizeY;                                          		// 0x0014 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FFloatBox                                   ReturnValue;                                      		// 0x0018 ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BTCustomDrawHK.MakeEmptyBox
// Flags: 
struct UBTCustomDrawHK_execMakeEmptyBox_Parms
{
	struct FFloatBox                                   ReturnValue;                                      		// 0x0000 ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BTCustomDrawHK.MakeFloatBox
// Flags: 
struct UBTCustomDrawHK_execMakeFloatBox_Parms
{
	float                                              X1;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Y1;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              X2;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              Y2;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FFloatBox                                   ReturnValue;                                      		// 0x0010 ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FFloatBox                                   fb;                                               		// 0x0020 ( 0x0010
};

// Function Engine.BTCustomDrawHK.HasString
// Flags: 
struct UBTCustomDrawHK_execHasString_Parms
{
	struct FString                                     Check;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     word;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x001C ( 0x0004
//	int                                                sum;                                              		// 0x0020 ( 0x0004
//	class TArray< struct FString >                     tarray;                                           		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.BTCustomDrawHK.SplitTextBounds
// Flags: 
struct UBTCustomDrawHK_execSplitTextBounds_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FString >                     tarray;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     Text;                                             		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                FontSize;                                         		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              clientWidth;                                      		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0024 ( 0x0004
	int                                                j;                                                		// 0x0028 ( 0x0004
	int                                                Count;                                            		// 0x002C ( 0x0004
	struct FString                                     temp;                                             		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
	float                                              W;                                                		// 0x003C ( 0x0004
	float                                              htt;                                              		// 0x0040 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageStretchedHK
// Flags: 
struct UBTCustomDrawHK_execDrawImageStretchedHK_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              X;                                                		// 0x0034 ( 0x0004
	float                                              Y;                                                		// 0x0038 ( 0x0004
	float                                              tW;                                               		// 0x003C ( 0x0004
	float                                              tH;                                               		// 0x0040 ( 0x0004
	float                                              U;                                                		// 0x0044 ( 0x0004
	float                                              V;                                                		// 0x0048 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageStretchedCache
// Flags: 
struct UBTCustomDrawHK_execDrawImageStretchedCache_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                Level;                                            		// 0x0034 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bStretchWidth:1;                                  		// 0x0038 ( 0x0004 [0x00000001]
	unsigned long                                      bStretchHeight:1;                                 		// 0x003C ( 0x0004 [0x00000001]
	int                                                imgX[ 0x03 ];                                     		// 0x0040 ( 0x000C
	int                                                imgY[ 0x03 ];                                     		// 0x004C ( 0x000C
	int                                                tgX[ 0x03 ];                                      		// 0x0058 ( 0x000C
	int                                                tgY[ 0x03 ];                                      		// 0x0064 ( 0x000C
	int                                                tW;                                               		// 0x0070 ( 0x0004
	int                                                tH;                                               		// 0x0074 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageStretched
// Flags: 
struct UBTCustomDrawHK_execDrawImageStretched_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bStretchWidth:1;                                  		// 0x0034 ( 0x0004 [0x00000001]
	unsigned long                                      bStretchHeight:1;                                 		// 0x0038 ( 0x0004 [0x00000001]
	int                                                imgX[ 0x03 ];                                     		// 0x003C ( 0x000C
	int                                                imgY[ 0x03 ];                                     		// 0x0048 ( 0x000C
	int                                                tgX[ 0x03 ];                                      		// 0x0054 ( 0x000C
	int                                                tgY[ 0x03 ];                                      		// 0x0060 ( 0x000C
	int                                                tW;                                               		// 0x006C ( 0x0004
	int                                                tH;                                               		// 0x0070 ( 0x0004
	int                                                imgwidth;                                         		// 0x0074 ( 0x0004
	int                                                imgheight;                                        		// 0x0078 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageStretchedWithClipArea
// Flags: 
struct UBTCustomDrawHK_execDrawImageStretchedWithClipArea_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              cL;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	float                                              ct;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	float                                              cR;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
	float                                              cb;                                               		// 0x0040 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bStretchWidth:1;                                  		// 0x0044 ( 0x0004 [0x00000001]
	unsigned long                                      bStretchHeight:1;                                 		// 0x0048 ( 0x0004 [0x00000001]
	int                                                imgX[ 0x03 ];                                     		// 0x004C ( 0x000C
	int                                                imgY[ 0x03 ];                                     		// 0x0058 ( 0x000C
	int                                                tgX[ 0x03 ];                                      		// 0x0064 ( 0x000C
	int                                                tgY[ 0x03 ];                                      		// 0x0070 ( 0x000C
	int                                                tW;                                               		// 0x007C ( 0x0004
	int                                                tH;                                               		// 0x0080 ( 0x0004
	int                                                imgwidth;                                         		// 0x0084 ( 0x0004
	int                                                imgheight;                                        		// 0x0088 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageScaleCache
// Flags: 
struct UBTCustomDrawHK_execDrawImageScaleCache_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                Level;                                            		// 0x0034 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              X;                                                		// 0x0038 ( 0x0004
	float                                              Y;                                                		// 0x003C ( 0x0004
	float                                              tW;                                               		// 0x0040 ( 0x0004
	float                                              tH;                                               		// 0x0044 ( 0x0004
	float                                              ratioX;                                           		// 0x0048 ( 0x0004
	float                                              ratioY;                                           		// 0x004C ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageScale
// Flags: 
struct UBTCustomDrawHK_execDrawImageScale_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              X;                                                		// 0x0034 ( 0x0004
	float                                              Y;                                                		// 0x0038 ( 0x0004
	float                                              tW;                                               		// 0x003C ( 0x0004
	float                                              tH;                                               		// 0x0040 ( 0x0004
	float                                              ratioX;                                           		// 0x0044 ( 0x0004
	float                                              ratioY;                                           		// 0x0048 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageScaleWithClipArea
// Flags: 
struct UBTCustomDrawHK_execDrawImageScaleWithClipArea_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              cL;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	float                                              ct;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	float                                              cR;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
	float                                              cb;                                               		// 0x0040 ( 0x0004[ CPF_Parm ]
	float                                              tW;                                               		// 0x0044 ( 0x0004
	float                                              tH;                                               		// 0x0048 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageOriginalWithClipArea
// Flags: 
struct UBTCustomDrawHK_execDrawImageOriginalWithClipArea_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              cL;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	float                                              ct;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	float                                              cR;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
	float                                              cb;                                               		// 0x0040 ( 0x0004[ CPF_Parm ]
	float                                              conL;                                             		// 0x0044 ( 0x0004
	float                                              conT;                                             		// 0x0048 ( 0x0004
	float                                              conR;                                             		// 0x004C ( 0x0004
	float                                              conB;                                             		// 0x0050 ( 0x0004
	float                                              X;                                                		// 0x0054 ( 0x0004
	float                                              Y;                                                		// 0x0058 ( 0x0004
	float                                              tW;                                               		// 0x005C ( 0x0004
	float                                              tH;                                               		// 0x0060 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageWithClipArea
// Flags: 
struct UBTCustomDrawHK_execDrawImageWithClipArea_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              cL;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	float                                              ct;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	float                                              cR;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
	float                                              cb;                                               		// 0x0040 ( 0x0004[ CPF_Parm ]
	float                                              tW;                                               		// 0x0044 ( 0x0004
	float                                              tH;                                               		// 0x0048 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageOriginalCache
// Flags: 
struct UBTCustomDrawHK_execDrawImageOriginalCache_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                Level;                                            		// 0x0034 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              X;                                                		// 0x0038 ( 0x0004
	float                                              Y;                                                		// 0x003C ( 0x0004
	float                                              tW;                                               		// 0x0040 ( 0x0004
	float                                              tH;                                               		// 0x0044 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageOriginal
// Flags: 
struct UBTCustomDrawHK_execDrawImageOriginal_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              X;                                                		// 0x0034 ( 0x0004
	float                                              Y;                                                		// 0x0038 ( 0x0004
	float                                              tW;                                               		// 0x003C ( 0x0004
	float                                              tH;                                               		// 0x0040 ( 0x0004
	float                                              imgwidth;                                         		// 0x0044 ( 0x0004
	float                                              imgheight;                                        		// 0x0048 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageCache
// Flags: 
struct UBTCustomDrawHK_execDrawImageCache_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                Level;                                            		// 0x0034 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawImage_Alpha
// Flags: 
struct UBTCustomDrawHK_execDrawImage_Alpha_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              Alpha;                                            		// 0x0034 ( 0x0004[ CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawImage
// Flags: 
struct UBTCustomDrawHK_execDrawImage_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawImagePaddingCache
// Flags: 
struct UBTCustomDrawHK_execDrawImagePaddingCache_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              pL;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	float                                              pT;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	float                                              pR;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
	float                                              pB;                                               		// 0x0040 ( 0x0004[ CPF_Parm ]
	int                                                Level;                                            		// 0x0044 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              tW;                                               		// 0x0048 ( 0x0004
	float                                              tH;                                               		// 0x004C ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImagePadding
// Flags: 
struct UBTCustomDrawHK_execDrawImagePadding_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              pL;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	float                                              pT;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	float                                              pR;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
	float                                              pB;                                               		// 0x0040 ( 0x0004[ CPF_Parm ]
	float                                              tW;                                               		// 0x0044 ( 0x0004
	float                                              tH;                                               		// 0x0048 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImagePaddingOffset
// Flags: 
struct UBTCustomDrawHK_execDrawImagePaddingOffset_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                pL;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	int                                                pT;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	int                                                pR;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
	int                                                pB;                                               		// 0x0040 ( 0x0004[ CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawImageScaleAllAndPaddingOffsetAndClipping
// Flags: 
struct UBTCustomDrawHK_execDrawImageScaleAllAndPaddingOffsetAndClipping_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                pL;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	int                                                pT;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	int                                                pR;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
	int                                                pB;                                               		// 0x0040 ( 0x0004[ CPF_Parm ]
	float                                              cL;                                               		// 0x0044 ( 0x0004[ CPF_Parm ]
	float                                              ct;                                               		// 0x0048 ( 0x0004[ CPF_Parm ]
	float                                              cR;                                               		// 0x004C ( 0x0004[ CPF_Parm ]
	float                                              cb;                                               		// 0x0050 ( 0x0004[ CPF_Parm ]
	float                                              tW;                                               		// 0x0054 ( 0x0004
	float                                              tH;                                               		// 0x0058 ( 0x0004
	float                                              rW;                                               		// 0x005C ( 0x0004
	float                                              rH;                                               		// 0x0060 ( 0x0004
	float                                              rL;                                               		// 0x0064 ( 0x0004
	float                                              rT;                                               		// 0x0068 ( 0x0004
	float                                              rR;                                               		// 0x006C ( 0x0004
	float                                              rB;                                               		// 0x0070 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawImageScaleAllAndPaddingAndClipping
// Flags: 
struct UBTCustomDrawHK_execDrawImageScaleAllAndPaddingAndClipping_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FImage                                      img;                                              		// 0x0004 ( 0x0020[ CPF_Parm | CPF_OutParm ]
	float                                              tL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              pL;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	float                                              pT;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	float                                              pR;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
	float                                              pB;                                               		// 0x0040 ( 0x0004[ CPF_Parm ]
	float                                              cL;                                               		// 0x0044 ( 0x0004[ CPF_Parm ]
	float                                              ct;                                               		// 0x0048 ( 0x0004[ CPF_Parm ]
	float                                              cR;                                               		// 0x004C ( 0x0004[ CPF_Parm ]
	float                                              cb;                                               		// 0x0050 ( 0x0004[ CPF_Parm ]
	float                                              tW;                                               		// 0x0054 ( 0x0004
	float                                              tH;                                               		// 0x0058 ( 0x0004
	float                                              rW;                                               		// 0x005C ( 0x0004
	float                                              rH;                                               		// 0x0060 ( 0x0004
	float                                              rL;                                               		// 0x0064 ( 0x0004
	float                                              rT;                                               		// 0x0068 ( 0x0004
	float                                              rR;                                               		// 0x006C ( 0x0004
	float                                              rB;                                               		// 0x0070 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawEllipsisStringPaddingOffset
// Flags: 
struct UBTCustomDrawHK_execDrawEllipsisStringPaddingOffset_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              FontSize;                                         		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              widthPerc;                                        		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	int                                                pL;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	int                                                pT;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                pR;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	int                                                pB;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x003C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Level;                                            		// 0x0040 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawEllipsisStringPadding
// Flags: 
struct UBTCustomDrawHK_execDrawEllipsisStringPadding_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              FontSize;                                         		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              widthPerc;                                        		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              pL;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              pT;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              pR;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	float                                              pB;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x003C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Level;                                            		// 0x0040 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              tW;                                               		// 0x0044 ( 0x0004
	float                                              tH;                                               		// 0x0048 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawEllipsisString
// Flags: 
struct UBTCustomDrawHK_execDrawEllipsisString_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              fntSize;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              widthPerc;                                        		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Level;                                            		// 0x0030 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              X;                                                		// 0x0034 ( 0x0004
	float                                              Y;                                                		// 0x0038 ( 0x0004
	float                                              tW;                                               		// 0x003C ( 0x0004
	float                                              tH;                                               		// 0x0040 ( 0x0004
	float                                              rX;                                               		// 0x0044 ( 0x0004
	float                                              rY;                                               		// 0x0048 ( 0x0004
	float                                              rW;                                               		// 0x004C ( 0x0004
	float                                              rH;                                               		// 0x0050 ( 0x0004
	float                                              textWidthLimit;                                   		// 0x0054 ( 0x0004
	float                                              ellipsisWidth;                                    		// 0x0058 ( 0x0004
	float                                              findWidth;                                        		// 0x005C ( 0x0004
	float                                              tempH;                                            		// 0x0060 ( 0x0004
	int                                                i;                                                		// 0x0064 ( 0x0004
	struct FString                                     temp;                                             		// 0x0068 ( 0x000C[ CPF_NeedCtorLink ]
	float                                              ScaleX;                                           		// 0x0074 ( 0x0004
	float                                              ScaleY;                                           		// 0x0078 ( 0x0004
	float                                              OldScaleX;                                        		// 0x007C ( 0x0004
	float                                              OldScaleY;                                        		// 0x0080 ( 0x0004
};

// Function Engine.BTCustomDrawHK.GetDrawStringFloatBoxOLD
// Flags: 
struct UBTCustomDrawHK_execGetDrawStringFloatBoxOLD_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              fntSize;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FFloatBox                                   ReturnValue;                                      		// 0x002C ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FFloatBox                                   fb;                                               		// 0x003C ( 0x0010
//	float                                              X;                                                		// 0x004C ( 0x0004
//	float                                              Y;                                                		// 0x0050 ( 0x0004
//	float                                              tW;                                               		// 0x0054 ( 0x0004
//	float                                              tH;                                               		// 0x0058 ( 0x0004
//	float                                              rX;                                               		// 0x005C ( 0x0004
//	float                                              rY;                                               		// 0x0060 ( 0x0004
//	float                                              rW;                                               		// 0x0064 ( 0x0004
//	float                                              rH;                                               		// 0x0068 ( 0x0004
//	float                                              ScaleX;                                           		// 0x006C ( 0x0004
//	float                                              ScaleY;                                           		// 0x0070 ( 0x0004
//	float                                              OldScaleX;                                        		// 0x0074 ( 0x0004
//	float                                              OldScaleY;                                        		// 0x0078 ( 0x0004
};

// Function Engine.BTCustomDrawHK.GetDrawStringFloatBoxLH
// Flags: 
struct UBTCustomDrawHK_execGetDrawStringFloatBoxLH_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              fntSize;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FFloatBox                                   ReturnValue;                                      		// 0x002C ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FFloatBox                                   fb;                                               		// 0x003C ( 0x0010
//	float                                              X;                                                		// 0x004C ( 0x0004
//	float                                              Y;                                                		// 0x0050 ( 0x0004
//	float                                              tW;                                               		// 0x0054 ( 0x0004
//	float                                              tH;                                               		// 0x0058 ( 0x0004
//	float                                              rX;                                               		// 0x005C ( 0x0004
//	float                                              rY;                                               		// 0x0060 ( 0x0004
//	float                                              rW;                                               		// 0x0064 ( 0x0004
//	float                                              rH;                                               		// 0x0068 ( 0x0004
//	float                                              ScaleX;                                           		// 0x006C ( 0x0004
//	float                                              ScaleY;                                           		// 0x0070 ( 0x0004
//	float                                              OldScaleX;                                        		// 0x0074 ( 0x0004
//	float                                              OldScaleY;                                        		// 0x0078 ( 0x0004
};

// Function Engine.BTCustomDrawHK.GetDrawStringFloatBox
// Flags: 
struct UBTCustomDrawHK_execGetDrawStringFloatBox_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              fntSize;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FFloatBox                                   ReturnValue;                                      		// 0x002C ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FFloatBox                                   fb;                                               		// 0x003C ( 0x0010
//	float                                              X;                                                		// 0x004C ( 0x0004
//	float                                              Y;                                                		// 0x0050 ( 0x0004
//	float                                              tW;                                               		// 0x0054 ( 0x0004
//	float                                              tH;                                               		// 0x0058 ( 0x0004
//	float                                              rX;                                               		// 0x005C ( 0x0004
//	float                                              rY;                                               		// 0x0060 ( 0x0004
//	float                                              rW;                                               		// 0x0064 ( 0x0004
//	float                                              rH;                                               		// 0x0068 ( 0x0004
//	float                                              ScaleX;                                           		// 0x006C ( 0x0004
//	float                                              ScaleY;                                           		// 0x0070 ( 0x0004
//	float                                              OldScaleX;                                        		// 0x0074 ( 0x0004
//	float                                              OldScaleY;                                        		// 0x0078 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawStringCache
// Flags: 
struct UBTCustomDrawHK_execDrawStringCache_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              fntSize;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Level;                                            		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              X;                                                		// 0x0030 ( 0x0004
	float                                              Y;                                                		// 0x0034 ( 0x0004
	float                                              tW;                                               		// 0x0038 ( 0x0004
	float                                              tH;                                               		// 0x003C ( 0x0004
	float                                              rX;                                               		// 0x0040 ( 0x0004
	float                                              rY;                                               		// 0x0044 ( 0x0004
	float                                              rW;                                               		// 0x0048 ( 0x0004
	float                                              rH;                                               		// 0x004C ( 0x0004
	float                                              ScaleX;                                           		// 0x0050 ( 0x0004
	float                                              ScaleY;                                           		// 0x0054 ( 0x0004
	float                                              OldScaleX;                                        		// 0x0058 ( 0x0004
	float                                              OldScaleY;                                        		// 0x005C ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawString
// Flags: 
struct UBTCustomDrawHK_execDrawString_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              fntSize;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                PresetIndex;                                      		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseD3DFont:1;                                    		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              X;                                                		// 0x0034 ( 0x0004
	float                                              Y;                                                		// 0x0038 ( 0x0004
	float                                              tW;                                               		// 0x003C ( 0x0004
	float                                              tH;                                               		// 0x0040 ( 0x0004
	float                                              rX;                                               		// 0x0044 ( 0x0004
	float                                              rY;                                               		// 0x0048 ( 0x0004
	float                                              rW;                                               		// 0x004C ( 0x0004
	float                                              rH;                                               		// 0x0050 ( 0x0004
	class FColor                                       SaveBackColor;                                    		// 0x0054 ( 0x0004
	float                                              ScaleX;                                           		// 0x0058 ( 0x0004
	float                                              ScaleY;                                           		// 0x005C ( 0x0004
	float                                              OldScaleX;                                        		// 0x0060 ( 0x0004
	float                                              OldScaleY;                                        		// 0x0064 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawStringModulateAlpha
// Flags: 
struct UBTCustomDrawHK_execDrawStringModulateAlpha_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              fntSize;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                PresetIndex;                                      		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseD3DFont:1;                                    		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              perc;                                             		// 0x0034 ( 0x0004
	class FColor                                       SaveBackColor;                                    		// 0x0038 ( 0x0004
	class FColor                                       saveC;                                            		// 0x003C ( 0x0004
	struct FPlane                                      saveMColor;                                       		// 0x0040 ( 0x0010
	struct FPlane                                      mColor;                                           		// 0x0050 ( 0x0010
};

// Function Engine.BTCustomDrawHK.DrawString_UseModulateColor
// Flags: 
struct UBTCustomDrawHK_execDrawString_UseModulateColor_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              fntSize;                                          		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0028 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                PresetIndex;                                      		// 0x002C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseD3DFont:1;                                    		// 0x0030 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseModulateColor:1;                              		// 0x0034 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FPlane                                      mColor;                                           		// 0x0038 ( 0x0010[ CPF_OptionalParm | CPF_Parm ]
	float                                              X;                                                		// 0x0048 ( 0x0004
	float                                              Y;                                                		// 0x004C ( 0x0004
	float                                              tW;                                               		// 0x0050 ( 0x0004
	float                                              tH;                                               		// 0x0054 ( 0x0004
	float                                              rX;                                               		// 0x0058 ( 0x0004
	float                                              rY;                                               		// 0x005C ( 0x0004
	float                                              rW;                                               		// 0x0060 ( 0x0004
	float                                              rH;                                               		// 0x0064 ( 0x0004
	class FColor                                       SaveBackColor;                                    		// 0x0068 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawStringPaddingOffset
// Flags: 
struct UBTCustomDrawHK_execDrawStringPaddingOffset_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              FontSize;                                         		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	int                                                pL;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	int                                                pT;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	int                                                pR;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                pB;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0038 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                PresetIndex;                                      		// 0x003C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseD3DFont:1;                                    		// 0x0040 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawStringPadding
// Flags: 
struct UBTCustomDrawHK_execDrawStringPadding_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Text;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	float                                              FontSize;                                         		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tL;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              pL;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              pT;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              pR;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              pB;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0038 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	int                                                Level;                                            		// 0x003C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              tW;                                               		// 0x0040 ( 0x0004
	float                                              tH;                                               		// 0x0044 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawTextArray
// Flags: 
struct UBTCustomDrawHK_execDrawTextArray_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FText >                       textArray;                                        		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	unsigned char                                      tadt;                                             		// 0x0011 ( 0x0001[ CPF_Parm ]
	float                                              tL;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	int                                                Level;                                            		// 0x0024 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0028 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x002C ( 0x0004
//	float                                              X;                                                		// 0x0030 ( 0x0004
//	float                                              Y;                                                		// 0x0034 ( 0x0004
//	float                                              tW;                                               		// 0x0038 ( 0x0004
//	float                                              tH;                                               		// 0x003C ( 0x0004
//	float                                              rX;                                               		// 0x0040 ( 0x0004
//	float                                              rY;                                               		// 0x0044 ( 0x0004
//	float                                              rW;                                               		// 0x0048 ( 0x0004
//	float                                              rH;                                               		// 0x004C ( 0x0004
//	float                                              rOneW;                                            		// 0x0050 ( 0x0004
//	float                                              rOneH;                                            		// 0x0054 ( 0x0004
//	float                                              rSaveW;                                           		// 0x0058 ( 0x0004
//	float                                              rSaveH;                                           		// 0x005C ( 0x0004
//	int                                                addFontSize;                                      		// 0x0060 ( 0x0004
//	float                                              ScaleX;                                           		// 0x0064 ( 0x0004
//	float                                              ScaleY;                                           		// 0x0068 ( 0x0004
//	float                                              OldScaleX;                                        		// 0x006C ( 0x0004
//	float                                              OldScaleY;                                        		// 0x0070 ( 0x0004
};

// Function Engine.BTCustomDrawHK.DrawTextCache
// Flags: 
struct UBTCustomDrawHK_execDrawTextCache_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FText                                       Text;                                             		// 0x0004 ( 0x001C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              tL;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	int                                                Level;                                            		// 0x0030 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawText_UseModulateColor
// Flags: 
struct UBTCustomDrawHK_execDrawText_UseModulateColor_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FText                                       Text;                                             		// 0x0004 ( 0x001C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              tL;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	int                                                PresetIndex;                                      		// 0x0030 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseD3DFont:1;                                    		// 0x0034 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseModulateColor:1;                              		// 0x0038 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FPlane                                      mColor;                                           		// 0x003C ( 0x0010[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawText
// Flags: 
struct UBTCustomDrawHK_execDrawText_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FText                                       Text;                                             		// 0x0004 ( 0x001C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              tL;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	int                                                PresetIndex;                                      		// 0x0030 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bUseD3DFont:1;                                    		// 0x0034 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawTextPaddingOffset
// Flags: 
struct UBTCustomDrawHK_execDrawTextPaddingOffset_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FText                                       Text;                                             		// 0x0004 ( 0x001C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              tL;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	int                                                pL;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	int                                                pT;                                               		// 0x0034 ( 0x0004[ CPF_Parm ]
	int                                                pR;                                               		// 0x0038 ( 0x0004[ CPF_Parm ]
	int                                                pB;                                               		// 0x003C ( 0x0004[ CPF_Parm ]
};

// Function Engine.BTCustomDrawHK.DrawTextArrayPadding
// Flags: 
struct UBTCustomDrawHK_execDrawTextArrayPadding_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FText >                       textArray;                                        		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      dt;                                               		// 0x0010 ( 0x0001[ CPF_Parm ]
	unsigned char                                      tadt;                                             		// 0x0011 ( 0x0001[ CPF_Parm ]
	float                                              tL;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	float                                              tT;                                               		// 0x0018 ( 0x0004[ CPF_Parm ]
	float                                              tR;                                               		// 0x001C ( 0x0004[ CPF_Parm ]
	float                                              tB;                                               		// 0x0020 ( 0x0004[ CPF_Parm ]
	float                                              pL;                                               		// 0x0024 ( 0x0004[ CPF_Parm ]
	float                                              pT;                                               		// 0x0028 ( 0x0004[ CPF_Parm ]
	float                                              pR;                                               		// 0x002C ( 0x0004[ CPF_Parm ]
	float                                              pB;                                               		// 0x0030 ( 0x0004[ CPF_Parm ]
	float                                              tW;                                               		// 0x0034 ( 0x0004
	float                                              tH;                                               		// 0x0038 ( 0x0004
};

// Function Engine.BTCustomDrawHK.ToDollarString
// Flags: 
struct UBTCustomDrawHK_execToDollarString_Parms
{
	struct FString                                     money;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	int                                                sLen;                                             		// 0x001C ( 0x0004
//	int                                                Count;                                            		// 0x0020 ( 0x0004
//	class TArray< struct FString >                     tarray;                                           		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     retString;                                        		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.BTCustomDrawHK.ToWonString
// Flags: 
struct UBTCustomDrawHK_execToWonString_Parms
{
	struct FString                                     money;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	int                                                sLen;                                             		// 0x001C ( 0x0004
//	int                                                Count;                                            		// 0x0020 ( 0x0004
//	class TArray< struct FString >                     tarray;                                           		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     retString;                                        		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.BTCustomDrawHK.MakeColorRGB
// Flags: 
struct UBTCustomDrawHK_execMakeColorRGB_Parms
{
	unsigned char                                      R;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned char                                      G;                                                		// 0x0001 ( 0x0001[ CPF_Parm ]
	unsigned char                                      B;                                                		// 0x0002 ( 0x0001[ CPF_Parm ]
	class FColor                                       ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class FColor                                       C;                                                		// 0x0008 ( 0x0004
};

// Function Engine.BTCustomDrawHK.MakeImageColor
// Flags: 
struct UBTCustomDrawHK_execMakeImageColor_Parms
{
	int                                                width;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Height;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      dt;                                               		// 0x0008 ( 0x0001[ CPF_Parm ]
	class UMaterial*                                   img;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	class FColor                                       frontColor;                                       		// 0x0010 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0014 ( 0x0004[ CPF_Parm ]
	struct FImage                                      ReturnValue;                                      		// 0x0018 ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FImage                                      temp;                                             		// 0x0038 ( 0x0020
};

// Function Engine.BTCustomDrawHK.MakeImage
// Flags: 
struct UBTCustomDrawHK_execMakeImage_Parms
{
	int                                                width;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Height;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      dt;                                               		// 0x0008 ( 0x0001[ CPF_Parm ]
	class UMaterial*                                   img;                                              		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FImage                                      ReturnValue;                                      		// 0x0010 ( 0x0020[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.BTCustomDrawHK.MakeTextColor
// Flags: 
struct UBTCustomDrawHK_execMakeTextColor_Parms
{
	int                                                fntSize;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      fntDrawType;                                      		// 0x0004 ( 0x0001[ CPF_Parm ]
	struct FString                                     txt;                                              		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class FColor                                       frontColor;                                       		// 0x0014 ( 0x0004[ CPF_Parm ]
	class FColor                                       BackShadowColor;                                  		// 0x0018 ( 0x0004[ CPF_Parm ]
	struct FText                                       ReturnValue;                                      		// 0x001C ( 0x001C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FText                                       temp;                                             		// 0x0038 ( 0x001C[ CPF_NeedCtorLink ]
};

// Function Engine.BTCustomDrawHK.MakeText
// Flags: 
struct UBTCustomDrawHK_execMakeText_Parms
{
	int                                                fntSize;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      fntDrawType;                                      		// 0x0004 ( 0x0001[ CPF_Parm ]
	struct FString                                     txt;                                              		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FText                                       ReturnValue;                                      		// 0x0014 ( 0x001C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wItemBoxCashHK.SetCashItemInfo
// Flags: 
struct UwItemBoxCashHK_execSetCashItemInfo_Parms
{
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FGP20Product                                GP20Product;                                      		// 0x0004 ( 0x010C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     strEndDate;                                       		// 0x0110 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                j;                                                		// 0x011C ( 0x0004
	int                                                k;                                                		// 0x0120 ( 0x0004
	int                                                costIndex;                                        		// 0x0124 ( 0x0004
	unsigned long                                      haveCost:1;                                       		// 0x0128 ( 0x0004 [0x00000001]
	unsigned long                                      canBuy:1;                                         		// 0x012C ( 0x0004 [0x00000001]
};

// Function Engine.wItemBoxCashHK.SetProductType
// Flags: 
struct UwItemBoxCashHK_execSetProductType_Parms
{
	struct FString                                     proType;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wItemBoxCashHK.IsShowStore
// Flags: 
struct UwItemBoxCashHK_execIsShowStore_Parms
{
	struct FGP20Product                                GP20Product;                                      		// 0x0000 ( 0x010C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x010C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bShowStore:1;                                     		// 0x0110 ( 0x0004 [0x00000001]
//	int                                                i;                                                		// 0x0114 ( 0x0004
};

// Function Engine.wItemBoxCashHK.CCoinType
// Flags: 
struct UwItemBoxCashHK_execCCoinType_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wItemBoxCashHK.PCoinType
// Flags: 
struct UwItemBoxCashHK_execPCoinType_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.ClanMarkManager.Render
// Flags: 
struct UClanMarkManager_execRender_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                X1;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Y1;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                X2;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Y2;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FString                                     ClanName;                                         		// 0x0014 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Index;                                            		// 0x0020 ( 0x0004
};

// Function Engine.ClanMarkManager.FindClanMark_Inner
// Flags: 
struct UClanMarkManager_execFindClanMark_Inner_Parms
{
	struct FString                                     ClanName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Left;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                Right;                                            		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Mid;                                              		// 0x0018 ( 0x0004
};

// Function Engine.ClanMarkManager.FindClanMark
// Flags: 
struct UClanMarkManager_execFindClanMark_Parms
{
	struct FString                                     ClanName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.ClanMarkManager.FindClanMark_ForInsertLocation
// Flags: 
struct UClanMarkManager_execFindClanMark_ForInsertLocation_Parms
{
	struct FString                                     ClanName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.ClanMarkManager.RemoveClanMark
// Flags: 
struct UClanMarkManager_execRemoveClanMark_Parms
{
	struct FString                                     ClanName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.ClanMarkManager.SetClanLevel
// Flags: 
struct UClanMarkManager_execSetClanLevel_Parms
{
	struct FString                                     ClanName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ClanLevel;                                        		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Index;                                            		// 0x0014 ( 0x0004
};

// Function Engine.ClanMarkManager.AddClanMark
// Flags: 
struct UClanMarkManager_execAddClanMark_Parms
{
	struct FString                                     ClanName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Pattern;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                BG;                                               		// 0x0010 ( 0x0004[ CPF_Parm ]
	int                                                BL;                                               		// 0x0014 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bSetClanState:1;                                  		// 0x0018 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      bClanLF:1;                                        		// 0x001C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0020 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Index;                                            		// 0x0024 ( 0x0004
//	class UClanNameAndMark*                            cnam;                                             		// 0x0028 ( 0x0004
};

// Function Engine.ClanMarkManager.SetClanState
// Flags: 
struct UClanMarkManager_execSetClanState_Parms
{
	struct FString                                     ClanName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bClanLF:1;                                        		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                Index;                                            		// 0x0014 ( 0x0004
};

// Function Engine.ClanMarkManager.Init
// Flags: 
struct UClanMarkManager_execInit_Parms
{
	class UwGameManager*                               gm;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ClanMarkManager.Tick
// Flags: 
struct UClanMarkManager_execTick_Parms
{
	float                                              Delta;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.DelegateEventTimer.OnEventTimer
// Flags: 
struct UDelegateEventTimer_execOnEventTimer_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeaponRes_Base.PrecacheSound
// Flags: 
struct AwWeaponRes_Base_execPrecacheSound_Parms
{
};

// Function Engine.wWeaponRes_Base.PrecacheMaterials
// Flags: 
struct AwWeaponRes_Base_execPrecacheMaterials_Parms
{
	class ALevelInfo*                                  Level;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wWeaponRes_Base.PrecacheClasses
// Flags: 
struct AwWeaponRes_Base_execPrecacheClasses_Parms
{
};

// Function Engine.wWeaponAcce.IsAiming
// Flags: [ FUNC_Simulated ]
struct AwWeaponAcce_execIsAiming_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wWeaponAcce.Switch3DScope
// Flags: [ FUNC_Simulated ]
struct AwWeaponAcce_execSwitch3DScope_Parms
{
	unsigned long                                      bAiming:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wWeaponAcce.Set
// Flags: [ FUNC_Simulated ]
struct AwWeaponAcce_execSet_Parms
{
	unsigned char                                      Type;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	struct FString                                     szMesh;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FVector                                     AimDiff;                                          		// 0x0010 ( 0x000C[ CPF_Parm ]
	int                                                iPartsItemID;                                     		// 0x001C ( 0x0004[ CPF_Parm ]
	int                                                iPartsGroupID;                                    		// 0x0020 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bUseMeshString:1;                                 		// 0x0024 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UStaticMesh*                                 NewSMesh;                                         		// 0x002C ( 0x0004
};

// Function Engine.wMessage_Score.GetGainPoint
// Flags: [ FUNC_Simulated ]
struct AwMessage_Score_execGetGainPoint_Parms
{
	int                                                Code_MessageScore;                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMessage_Score.PlaySoundMessageScore
// Flags: [ FUNC_Simulated ]
struct AwMessage_Score_execPlaySoundMessageScore_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     SoundKind;                                        		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wMessage_Score.ClientReceive
// Flags: [ FUNC_Simulated ]
struct AwMessage_Score_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMessage_Score.GetString
// Flags: 
struct AwMessage_Score_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.PrecacheInterface.PrecacheGameSkeletalMeshes
// Flags: 
struct UPrecacheInterface_execPrecacheGameSkeletalMeshes_Parms
{
	class ALevelInfo*                                  myLevel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PrecacheInterface.PrecacheGameStaticMeshes
// Flags: 
struct UPrecacheInterface_execPrecacheGameStaticMeshes_Parms
{
	class ALevelInfo*                                  myLevel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.PrecacheInterface.PrecacheGameTextures
// Flags: 
struct UPrecacheInterface_execPrecacheGameTextures_Parms
{
	class ALevelInfo*                                  myLevel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Armor.PrioritizeArmor
// Flags: 
struct AArmor_execPrioritizeArmor_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	class AArmor*                                      ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AArmor*                                      FirstArmor;                                       		// 0x0018 ( 0x0004
//	class AArmor*                                      InsertAfter;                                      		// 0x001C ( 0x0004
};

// Function Engine.Armor.ArmorImpactEffect
// Flags: 
struct AArmor_execArmorImpactEffect_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Armor.ArmorPriority
// Flags: 
struct AArmor_execArmorPriority_Parms
{
	class UClass*                                      DamageType;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.Armor.ArmorAbsorbDamage
// Flags: 
struct AArmor_execArmorAbsorbDamage_Parms
{
	int                                                Damage;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0008 ( 0x000C[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                ArmorDamage;                                      		// 0x0018 ( 0x0004
};

// Function Engine.WeaponPickup.Reset
// Flags: 
struct AWeaponPickup_execReset_Parms
{
};

// Function Engine.WeaponPickup.InitDroppedPickupFor
// Flags: 
struct AWeaponPickup_execInitDroppedPickupFor_Parms
{
	class AInventory*                                  Inv;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    W;                                                		// 0x0004 ( 0x0004
};

// Function Engine.WeaponPickup.GetRespawnTime
// Flags: 
struct AWeaponPickup_execGetRespawnTime_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WeaponPickup.BotDesireability
// Flags: 
struct AWeaponPickup_execBotDesireability_Parms
{
	class APawn*                                       Bot;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    AlreadyHas;                                       		// 0x0008 ( 0x0004
//	class UClass*                                      AmmoPickupClass;                                  		// 0x000C ( 0x0004
//	float                                              desire;                                           		// 0x0010 ( 0x0004
};

// Function Engine.WeaponPickup.DetourWeight
// Flags: 
struct AWeaponPickup_execDetourWeight_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              PathWeight;                                       		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    AlreadyHas;                                       		// 0x000C ( 0x0004
};

// Function Engine.WeaponPickup.AllowRepeatPickup
// Flags: 
struct AWeaponPickup_execAllowRepeatPickup_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WeaponPickup.StartSleeping
// Flags: 
struct AWeaponPickup_execStartSleeping_Parms
{
};

// Function Engine.WeaponPickup.UpdateHUD
// Flags: [ FUNC_Simulated ]
struct AWeaponPickup_execUpdateHUD_Parms
{
	class AHUD*                                        H;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.WeaponPickup.SetWeaponStay
// Flags: 
struct AWeaponPickup_execSetWeaponStay_Parms
{
};

// Function Engine.WeaponPickup.PostBeginPlay
// Flags: 
struct AWeaponPickup_execPostBeginPlay_Parms
{
};

// Function Engine.wMeleeFire.SetFireAnim
// Flags: [ FUNC_Simulated ]
struct UwMeleeFire_execSetFireAnim_Parms
{
};

// Function Engine.wMeleeFire.wLoadOut
// Flags: [ FUNC_Simulated ]
struct UwMeleeFire_execwLoadOut_Parms
{
};

// Function Engine.wMeleeFire.DoTraceTutorial
// Flags: 
struct UwMeleeFire_execDoTraceTutorial_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	unsigned long                                      bExistTarg:1;                                     		// 0x0018 ( 0x0004 [0x00000001]
	class AActor*                                      rTarget;                                          		// 0x001C ( 0x0004
	struct FVector                                     HitLocation;                                      		// 0x0020 ( 0x000C
	struct FVector                                     MVec;                                             		// 0x002C ( 0x000C
};

// Function Engine.wMeleeFire.DoTrace
// Flags: 
struct UwMeleeFire_execDoTrace_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	unsigned long                                      bExistTarg:1;                                     		// 0x0018 ( 0x0004 [0x00000001]
	class APawn*                                       rTarget;                                          		// 0x001C ( 0x0004
	struct FVector                                     HitLocation;                                      		// 0x0020 ( 0x000C
	struct FVector                                     MVec;                                             		// 0x002C ( 0x000C
	unsigned char                                      HitCollisionPart;                                 		// 0x0038 ( 0x0001
	float                                              fDamageAmp;                                       		// 0x003C ( 0x0004
	int                                                CalDamage;                                        		// 0x0040 ( 0x0004
};

// Function Engine.wMeleeFire.GetDamagePerc
// Flags: 
struct UwMeleeFire_execGetDamagePerc_Parms
{
	unsigned char                                      HitPart;                                          		// 0x0000 ( 0x0001[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              fDamageAmp;                                       		// 0x0008 ( 0x0004
};

// Function Engine.wMeleeFire.FindTarget4
// Flags: 
struct UwMeleeFire_execFindTarget4_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	class AActor*                                      rTarget;                                          		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitLocation;                                      		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     X;                                                		// 0x002C ( 0x000C
//	struct FVector                                     End;                                              		// 0x0038 ( 0x000C
//	struct FVector                                     HitNormal;                                        		// 0x0044 ( 0x000C
//	class AActor*                                      Other;                                            		// 0x0050 ( 0x0004
//	unsigned long                                      bExistTarg:1;                                     		// 0x0054 ( 0x0004 [0x00000001]
//	float                                              fRadian_InsideAngle;                              		// 0x0058 ( 0x0004
//	float                                              fMinRange;                                        		// 0x005C ( 0x0004
//	float                                              i;                                                		// 0x0060 ( 0x0004
//	float                                              j;                                                		// 0x0064 ( 0x0004
//	float                                              fRange_Iter;                                      		// 0x0068 ( 0x0004
//	struct FVector                                     vDir_Iter;                                        		// 0x006C ( 0x000C
//	struct FRotator                                    rotIter_i;                                        		// 0x0078 ( 0x000C
//	struct FRotator                                    rotIter_j;                                        		// 0x0084 ( 0x000C
};

// Function Engine.wMeleeFire.FindTarget
// Flags: 
struct UwMeleeFire_execFindTarget_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	class APawn*                                       rTarget;                                          		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitLocation;                                      		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     X;                                                		// 0x002C ( 0x000C
//	struct FVector                                     End;                                              		// 0x0038 ( 0x000C
//	struct FVector                                     HitNormal;                                        		// 0x0044 ( 0x000C
//	class AActor*                                      Other;                                            		// 0x0050 ( 0x0004
//	unsigned long                                      bExistTarg:1;                                     		// 0x0054 ( 0x0004 [0x00000001]
//	float                                              fRadian_InsideAngle;                              		// 0x0058 ( 0x0004
//	float                                              fMinRange;                                        		// 0x005C ( 0x0004
//	float                                              i;                                                		// 0x0060 ( 0x0004
//	float                                              j;                                                		// 0x0064 ( 0x0004
//	float                                              fRange_Iter;                                      		// 0x0068 ( 0x0004
//	struct FVector                                     vDir_Iter;                                        		// 0x006C ( 0x000C
//	struct FRotator                                    rotIter_i;                                        		// 0x0078 ( 0x000C
//	struct FRotator                                    rotIter_j;                                        		// 0x0084 ( 0x000C
};

// Function Engine.wMeleeFire.FindTarget3
// Flags: 
struct UwMeleeFire_execFindTarget3_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	class AActor*                                      rTarget;                                          		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitLocation;                                      		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0028 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bExistTarg:1;                                     		// 0x002C ( 0x0004 [0x00000001]
//	class AActor*                                      collidingActor;                                   		// 0x0030 ( 0x0004
//	float                                              Range;                                            		// 0x0034 ( 0x0004
//	float                                              minCollidingRange;                                		// 0x0038 ( 0x0004
//	float                                              collidingRange;                                   		// 0x003C ( 0x0004
//	struct FVector                                     X;                                                		// 0x0040 ( 0x000C
//	struct FVector                                     End;                                              		// 0x004C ( 0x000C
//	struct FVector                                     HitLoc;                                           		// 0x0058 ( 0x000C
//	struct FVector                                     hitNor;                                           		// 0x0064 ( 0x000C
//	struct FVector                                     TraceEnd;                                         		// 0x0070 ( 0x000C
//	unsigned long                                      bTraceActor:1;                                    		// 0x007C ( 0x0004 [0x00000001]
//	unsigned long                                      bTraceGeom:1;                                     		// 0x0080 ( 0x0004 [0x00000001]
};

// Function Engine.wMeleeFire.FindTarget2
// Flags: 
struct UwMeleeFire_execFindTarget2_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	class APawn*                                       rTarget;                                          		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	struct FVector                                     HitLocation;                                      		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	unsigned char                                      HitCollisionPart;                                 		// 0x0028 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x002C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bExistTarg:1;                                     		// 0x0030 ( 0x0004 [0x00000001]
//	class APawn*                                       collidingPawn;                                    		// 0x0034 ( 0x0004
//	float                                              Range;                                            		// 0x0038 ( 0x0004
//	float                                              minCollidingRange;                                		// 0x003C ( 0x0004
//	float                                              collidingRange;                                   		// 0x0040 ( 0x0004
//	struct FVector                                     X;                                                		// 0x0044 ( 0x000C
//	struct FVector                                     End;                                              		// 0x0050 ( 0x000C
//	struct FVector                                     HitLoc;                                           		// 0x005C ( 0x000C
//	struct FVector                                     hitNor;                                           		// 0x0068 ( 0x000C
//	struct FVector                                     TraceEnd;                                         		// 0x0074 ( 0x000C
//	unsigned long                                      bTraceActor:1;                                    		// 0x0080 ( 0x0004 [0x00000001]
//	unsigned long                                      bTraceGeom:1;                                     		// 0x0084 ( 0x0004 [0x00000001]
//	unsigned char                                      HitPart;                                          		// 0x0088 ( 0x0001
//	struct FVector                                     traceExtent;                                      		// 0x008C ( 0x000C
};

// Function Engine.wMeleeFire.DoFireEffect
// Flags: 
struct UwMeleeFire_execDoFireEffect_Parms
{
	struct FVector                                     StartTrace;                                       		// 0x0000 ( 0x000C
	struct FRotator                                    Aim;                                              		// 0x000C ( 0x000C
};

// Function Engine.wMeleeFire.PlayFiring
// Flags: 
struct UwMeleeFire_execPlayFiring_Parms
{
};

// Function Engine.wMeleeFire.ModeDoFire
// Flags: [ FUNC_Event ]
struct UwMeleeFire_eventModeDoFire_Parms
{
	class AwWeapon*                                    MWeapon;                                          		// 0x0000 ( 0x0004
};

// Function Engine.wSpecialKillMessage.ClientReceive
// Flags: [ FUNC_Simulated ]
struct AwSpecialKillMessage_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wSpecialKillMessage.GetString
// Flags: 
struct AwSpecialKillMessage_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MapList.SetMaplist
// Flags: 
struct AMapList_execSetMaplist_Parms
{
	int                                                CurrentNum;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FString >                     NewMaps;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MapList.StaticHasInvalidMaps
// Flags: 
struct AMapList_execStaticHasInvalidMaps_Parms
{
	unsigned long                                      bReadOnly:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                j;                                                		// 0x000C ( 0x0004
//	unsigned long                                      bInvalid:1;                                       		// 0x0010 ( 0x0004 [0x00000001]
//	class TArray< struct FMapRecord >                  Recs;                                             		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     URL;                                              		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     MapName;                                          		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MapList.HasInvalidMaps
// Flags: 
struct AMapList_execHasInvalidMaps_Parms
{
	unsigned long                                      bReadOnly:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	unsigned long                                      bInvalid:1;                                       		// 0x000C ( 0x0004 [0x00000001]
};

// Function Engine.MapList.StaticGetMaps
// Flags: 
struct AMapList_execStaticGetMaps_Parms
{
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MapList.GetMaps
// Flags: 
struct AMapList_execGetMaps_Parms
{
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MapList.GetMap
// Flags: 
struct AMapList_execGetMap_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MapList.FindCacheIndex
// Flags: 
struct AMapList_execFindCacheIndex_Parms
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	struct FString                                     tmp;                                              		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MapList.UpdateMapNum
// Flags: 
struct AMapList_execUpdateMapNum_Parms
{
	int                                                NewMapNum;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MapList.GetNextMap
// Flags: 
struct AMapList_execGetNextMap_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FMapItem                                    Item;                                             		// 0x000C ( 0x0030[ CPF_NeedCtorLink ]
//	class TArray< struct FMapItem >                    ArItem;                                           		// 0x003C ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     CurrentMap;                                       		// 0x0048 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0054 ( 0x0004
};

// Function Engine.MapList.PostBeginPlay
// Flags: [ FUNC_Event ]
struct AMapList_eventPostBeginPlay_Parms
{
};

// Function Engine.MapList.PreBeginPlay
// Flags: [ FUNC_Event ]
struct AMapList_eventPreBeginPlay_Parms
{
};

// Function Engine.wMultiKillMessage.ClientReceive
// Flags: [ FUNC_Simulated ]
struct AwMultiKillMessage_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMultiKillMessage.GetString
// Flags: 
struct AwMultiKillMessage_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMessage_BGM.ClientReceive
// Flags: 
struct AwMessage_BGM_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class TArray< struct FString >                     M;                                                		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     Map;                                              		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
	class UwMapInfo*                                   mapInfo;                                          		// 0x002C ( 0x0004
	class TArray< struct FIntArray >                   bgmInitSeeks;                                     		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
	struct FIntArray                                   aIntArray;                                        		// 0x003C ( 0x000C[ CPF_NeedCtorLink ]
	struct FIntArray                                   tempSeeks;                                        		// 0x0048 ( 0x000C[ CPF_NeedCtorLink ]
	class UwMatchMaker*                                MM;                                               		// 0x0054 ( 0x0004
};

// Function Engine.wMessage_BGM.GetString
// Flags: 
struct AwMessage_BGM_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.GameRules.NetDamage
// Flags: 
struct AGameRules_execNetDamage_Parms
{
	int                                                OriginalDamage;                                   		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Damage;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class APawn*                                       injured;                                          		// 0x0008 ( 0x0004[ CPF_Parm ]
	class APawn*                                       instigatedBy;                                     		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0010 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Momentum;                                         		// 0x001C ( 0x000C[ CPF_Parm | CPF_OutParm ]
	class UClass*                                      DamageType;                                       		// 0x0028 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x002C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameRules.CriticalPlayer
// Flags: 
struct AGameRules_execCriticalPlayer_Parms
{
	class AController*                                 Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameRules.ScoreKill
// Flags: 
struct AGameRules_execScoreKill_Parms
{
	class AController*                                 Killer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killed;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameRules.ScoreObjective
// Flags: 
struct AGameRules_execScoreObjective_Parms
{
	class APlayerReplicationInfo*                      Scorer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Score;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.GameRules.PreventSever
// Flags: 
struct AGameRules_execPreventSever_Parms
{
	class APawn*                                       Killed;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       BoneName;                                         		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                Damage;                                           		// 0x0008 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameRules.PreventDeath
// Flags: 
struct AGameRules_execPreventDeath_Parms
{
	class APawn*                                       Killed;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AController*                                 Killer;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UClass*                                      DamageType;                                       		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x000C ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameRules.OverridePickupQuery
// Flags: 
struct AGameRules_execOverridePickupQuery_Parms
{
	class APawn*                                       Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APickup*                                     Item;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned char                                      bAllowPickup;                                     		// 0x0008 ( 0x0001[ CPF_Parm | CPF_OutParm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameRules.CheckScore
// Flags: 
struct AGameRules_execCheckScore_Parms
{
	class APlayerReplicationInfo*                      Scorer;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameRules.CheckEndGame
// Flags: 
struct AGameRules_execCheckEndGame_Parms
{
	class APlayerReplicationInfo*                      Winner;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Reason;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameRules.HandleRestartGame
// Flags: 
struct AGameRules_execHandleRestartGame_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameRules.GetServerDetails
// Flags: 
struct AGameRules_execGetServerDetails_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x0000 ( 0x0070[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.GameRules.GetRules
// Flags: 
struct AGameRules_execGetRules_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     ResultSet;                                        		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.GameRules.FindPlayerStart
// Flags: 
struct AGameRules_execFindPlayerStart_Parms
{
	class AController*                                 Player;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned char                                      inTeam;                                           		// 0x0004 ( 0x0001[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     incomingName;                                     		// 0x0008 ( 0x000C[ CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink ]
	class ANavigationPoint*                            ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.GameRules.AddGameRules
// Flags: 
struct AGameRules_execAddGameRules_Parms
{
	class AGameRules*                                  GR;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.MessagingSpectator.InitPlayerReplicationInfo
// Flags: 
struct AMessagingSpectator_execInitPlayerReplicationInfo_Parms
{
};

// Function Engine.MessagingSpectator.PostBeginPlay
// Flags: [ FUNC_Event ]
struct AMessagingSpectator_eventPostBeginPlay_Parms
{
};

// Function Engine.VotingHandler.GetServerDetails
// Flags: 
struct AVotingHandler_execGetServerDetails_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x0000 ( 0x0070[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.VotingHandler.ReloadAll
// Flags: 
struct AVotingHandler_execReloadAll_Parms
{
	unsigned long                                      bParam:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.VotingHandler.IsEnabled
// Flags: 
struct AVotingHandler_execIsEnabled_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VotingHandler.FillPlayInfo
// Flags: 
struct AVotingHandler_execFillPlayInfo_Parms
{
	class UPlayInfo*                                   PlayInfo;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VotingHandler.GetConfigArrayItemCount
// Flags: 
struct AVotingHandler_execGetConfigArrayItemCount_Parms
{
	struct FString                                     ConfigArrayName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VotingHandler.UpdateConfigArrayItem
// Flags: 
struct AVotingHandler_execUpdateConfigArrayItem_Parms
{
	struct FString                                     ConfigArrayName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                RowIndex;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                ColumnIndex;                                      		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FString                                     NewValue;                                         		// 0x0014 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.VotingHandler.AddConfigArrayItem
// Flags: 
struct AVotingHandler_execAddConfigArrayItem_Parms
{
	struct FString                                     ConfigArrayName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VotingHandler.DeleteConfigArrayItem
// Flags: 
struct AVotingHandler_execDeleteConfigArrayItem_Parms
{
	struct FString                                     ConfigArrayName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                RowIndex;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.VotingHandler.GetConfigArrayColumnTitle
// Flags: 
struct AVotingHandler_execGetConfigArrayColumnTitle_Parms
{
	struct FString                                     ConfigArrayName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ColumnIndex;                                      		// 0x000C ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VotingHandler.GetConfigArrayData
// Flags: 
struct AVotingHandler_execGetConfigArrayData_Parms
{
	struct FString                                     ConfigArrayName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                RowIndex;                                         		// 0x000C ( 0x0004[ CPF_Parm ]
	int                                                ColumnIndex;                                      		// 0x0010 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0014 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.VotingHandler.HandleRestartGame
// Flags: 
struct AVotingHandler_execHandleRestartGame_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.VotingHandler.PlayerExit
// Flags: 
struct AVotingHandler_execPlayerExit_Parms
{
	class AController*                                 Exiting;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.VotingHandler.PlayerJoin
// Flags: 
struct AVotingHandler_execPlayerJoin_Parms
{
	class APlayerController*                           Player;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.MaplistManager.MaplistDirty
// Flags: 
struct AMaplistManager_execMaplistDirty_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.ValidName
// Flags: 
struct AMaplistManager_execValidName_Parms
{
	struct FString                                     S;                                                		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	int                                                j;                                                		// 0x0014 ( 0x0004
};

// Function Engine.MaplistManager.ValidGameType
// Flags: 
struct AMaplistManager_execValidGameType_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.MaplistManager.ValidGameIndex
// Flags: 
struct AMaplistManager_execValidGameIndex_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.ValidCacheGameIndex
// Flags: 
struct AMaplistManager_execValidCacheGameIndex_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.GetActiveMap
// Flags: 
struct AMaplistManager_execGetActiveMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.GetActiveList
// Flags: 
struct AMaplistManager_execGetActiveList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.GetMapListTitle
// Flags: 
struct AMaplistManager_execGetMapListTitle_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.GetRecordIndex
// Flags: 
struct AMaplistManager_execGetRecordIndex_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapListName;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	class TArray< class UMaplistRecord* >              Records;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.GetMapIndex
// Flags: 
struct AMaplistManager_execGetMapIndex_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.FindMaplistContaining
// Flags: 
struct AMaplistManager_execFindMaplistContaining_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	int                                                idx;                                              		// 0x0018 ( 0x0004
};

// Function Engine.MaplistManager.GetCacheMapList
// Flags: 
struct AMaplistManager_execGetCacheMapList_Parms
{
	struct FString                                     Acronym;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	int                                                j;                                                		// 0x001C ( 0x0004
//	class TArray< struct FMapRecord >                  TempRecords;                                      		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< struct FString >                     Arr;                                              		// 0x002C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.GetAvailableMaps
// Flags: 
struct AMaplistManager_execGetAvailableMaps_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FMapItem >                    AR;                                               		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.GetMapList
// Flags: 
struct AMaplistManager_execGetMapList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class TArray< struct FString >                     Maps;                                             		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.GetMapURL
// Flags: 
struct AMaplistManager_execGetMapURL_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                MapIndex;                                         		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.GetMapTitle
// Flags: 
struct AMaplistManager_execGetMapTitle_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                MapIndex;                                         		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.GetActiveMapName
// Flags: 
struct AMaplistManager_execGetActiveMapName_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.GetCurrentMapRotation
// Flags: 
struct AMaplistManager_execGetCurrentMapRotation_Parms
{
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                GameIndex;                                        		// 0x000C ( 0x0004
//	int                                                RecordIndex;                                      		// 0x0010 ( 0x0004
//	int                                                CurrentMap;                                       		// 0x0014 ( 0x0004
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	class TArray< struct FString >                     AR;                                               		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.GetMapListNames
// Flags: 
struct AMaplistManager_execGetMapListNames_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	int                                                idx;                                              		// 0x0014 ( 0x0004
//	class TArray< class UMaplistRecord* >              Records;                                          		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
//	class TArray< struct FString >                     Arr;                                              		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.GetCacheGameIndex
// Flags: 
struct AMaplistManager_execGetCacheGameIndex_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.MaplistManager.GetGameIndex
// Flags: 
struct AMaplistManager_execGetGameIndex_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.MaplistManager.SetActiveMap
// Flags: 
struct AMaplistManager_execSetActiveMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                MapIndex;                                         		// 0x0008 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.ShiftMap
// Flags: 
struct AMaplistManager_execShiftMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Count;                                            		// 0x0014 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0018 ( 0x0004
	class TArray< struct FMapItem >                    Maps;                                             		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.RemoveMap
// Flags: 
struct AMaplistManager_execRemoveMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.InsertMap
// Flags: 
struct AMaplistManager_execInsertMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ListIndex;                                        		// 0x0014 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.AddMap
// Flags: 
struct AMaplistManager_execAddMap_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     MapName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.SetActiveList
// Flags: 
struct AMaplistManager_execSetActiveList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                NewActive;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.MaplistManager.ApplyMapList
// Flags: 
struct AMaplistManager_execApplyMapList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UClass*                                      ListClass;                                        		// 0x000C ( 0x0004
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.MaplistManager.ResetGame
// Flags: 
struct AMaplistManager_execResetGame_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	int                                                RecordIndex;                                      		// 0x0008 ( 0x0004
};

// Function Engine.MaplistManager.SaveGame
// Flags: 
struct AMaplistManager_execSaveGame_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                Active;                                           		// 0x000C ( 0x0004
};

// Function Engine.MaplistManager.ResetList
// Flags: 
struct AMaplistManager_execResetList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.MaplistManager.ClearList
// Flags: 
struct AMaplistManager_execClearList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.SaveMapList
// Flags: 
struct AMaplistManager_execSaveMapList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.RemoveList
// Flags: 
struct AMaplistManager_execRemoveList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
//	int                                                idx;                                              		// 0x0010 ( 0x0004
};

// Function Engine.MaplistManager.RenameList
// Flags: 
struct AMaplistManager_execRenameList_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     NewName;                                          		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UMaplistRecord*                              OldRecord;                                        		// 0x0018 ( 0x0004
//	unsigned long                                      IsActive:1;                                       		// 0x001C ( 0x0004 [0x00000001]
};

// Function Engine.MaplistManager.AddList
// Flags: 
struct AMaplistManager_execAddList_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     NewName;                                          		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Maps;                                             		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0028 ( 0x0004
//	class UMaplistRecord*                              NewRecord;                                        		// 0x002C ( 0x0004
//	struct FString                                     DesiredName;                                      		// 0x0030 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.MapChange
// Flags: 
struct AMaplistManager_execMapChange_Parms
{
	struct FString                                     NewMap;                                           		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
	int                                                GameIndex;                                        		// 0x0010 ( 0x0004
	int                                                RecordIndex;                                      		// 0x0014 ( 0x0004
};

// Function Engine.MaplistManager.ValidRecordIndex
// Flags: 
struct AMaplistManager_execValidRecordIndex_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                MapListIndex;                                     		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.GetRecords
// Flags: 
struct AMaplistManager_execGetRecords_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< class UMaplistRecord* >              ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.IsNewGameType
// Flags: 
struct AMaplistManager_execIsNewGameType_Parms
{
	struct FString                                     GameClassName;                                    		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.CreateRecord
// Flags: 
struct AMaplistManager_execCreateRecord_Parms
{
	struct FString                                     RecordName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UMaplistRecord*                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.Save
// Flags: 
struct AMaplistManager_execSave_Parms
{
};

// Function Engine.MaplistManager.GetStoredGameIndex
// Flags: 
struct AMaplistManager_execGetStoredGameIndex_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.MaplistManager.RemoveRecord
// Flags: 
struct AMaplistManager_execRemoveRecord_Parms
{
	int                                                GameIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.RemoveGame
// Flags: 
struct AMaplistManager_execRemoveGame_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistManager.GenerateGroupMaplist
// Flags: 
struct AMaplistManager_execGenerateGroupMaplist_Parms
{
	int                                                GroupIndex;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
	int                                                j;                                                		// 0x0008 ( 0x0004
	class TArray< struct FMapRecord >                  Records;                                          		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	struct FMapItem                                    Item;                                             		// 0x0018 ( 0x0030[ CPF_NeedCtorLink ]
	struct FKeyValuePair                               Option;                                           		// 0x0048 ( 0x0018[ CPF_NeedCtorLink ]
	struct FString                                     OptionName;                                       		// 0x0060 ( 0x000C[ CPF_NeedCtorLink ]
	struct FString                                     OptionValueString;                                		// 0x006C ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FString >                     Options;                                          		// 0x0078 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.AddGameType
// Flags: 
struct AMaplistManager_execAddGameType_Parms
{
	struct FString                                     NewGameType;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.MaplistManager.AddGroup
// Flags: 
struct AMaplistManager_execAddGroup_Parms
{
	struct FString                                     GameType;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.MaplistManager.AddMaplistRecord
// Flags: 
struct AMaplistManager_execAddMaplistRecord_Parms
{
	class UMaplistRecord*                              Rec;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
//	int                                                j;                                                		// 0x000C ( 0x0004
};

// Function Engine.MaplistManager.InitializeActiveLists
// Flags: 
struct AMaplistManager_execInitializeActiveLists_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                RecordIndex;                                      		// 0x0004 ( 0x0004
	int                                                idx;                                              		// 0x0008 ( 0x0004
};

// Function Engine.MaplistManager.InitializeMaplistRecords
// Flags: 
struct AMaplistManager_execInitializeMaplistRecords_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                cnt;                                              		// 0x0004 ( 0x0004
	class UMaplistRecord*                              Rec;                                              		// 0x0008 ( 0x0004
};

// Function Engine.MaplistManager.GetDefaultMaps
// Flags: 
struct AMaplistManager_execGetDefaultMaps_Parms
{
	struct FString                                     MapListClassName;                                 		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FString >                     Maps;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UClass*                                      List;                                             		// 0x001C ( 0x0004
};

// Function Engine.MaplistManager.CreateDefaultList
// Flags: 
struct AMaplistManager_execCreateDefaultList_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ListName;                                         		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	class TArray< struct FString >                     Arr;                                              		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistManager.Destroyed
// Flags: [ FUNC_Event ]
struct AMaplistManager_eventDestroyed_Parms
{
};

// Function Engine.MaplistManager.PreBeginPlay
// Flags: [ FUNC_Event ]
struct AMaplistManager_eventPreBeginPlay_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                idx;                                              		// 0x0004 ( 0x0004
};

// Function Engine.EmitterFirstPerson.PostNetBeginPlay
// Flags: [ FUNC_Event ]
struct AEmitterFirstPerson_eventPostNetBeginPlay_Parms
{
};

// Function Engine.EmitterFirstPerson.DestroyIfThirdPerson
// Flags: [ FUNC_Simulated ]
struct AEmitterFirstPerson_execDestroyIfThirdPerson_Parms
{
};

// Function Engine.ShadowProjector.LightUpdate
// Flags: [ FUNC_Simulated ]
struct AShadowProjector_execLightUpdate_Parms
{
	class TArray< class AActor* >                      LightSources;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	float                                              MeanDistance;                                     		// 0x000C ( 0x0004
	float                                              dx;                                               		// 0x0010 ( 0x0004
	float                                              sdx2;                                             		// 0x0014 ( 0x0004
	struct FVector                                     MeanDirection;                                    		// 0x0018 ( 0x000C
	struct FVector                                     dv;                                               		// 0x0024 ( 0x000C
	int                                                LightCount;                                       		// 0x0030 ( 0x0004
	int                                                i;                                                		// 0x0034 ( 0x0004
};

// Function Engine.ShadowProjector.UpdateSunLight
// Flags: [ FUNC_Simulated ]
struct AShadowProjector_execUpdateSunLight_Parms
{
	struct FVector                                     SunDir;                                           		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.ShadowProjector.Tick
// Flags: 
struct AShadowProjector_execTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.ShadowProjector.UpdateShadow
// Flags: 
struct AShadowProjector_execUpdateShadow_Parms
{
	struct FCoords                                     C;                                                		// 0x0000 ( 0x0030
	struct FVector                                     V;                                                		// 0x0030 ( 0x000C
};

// Function Engine.ShadowProjector.InitShadow
// Flags: 
struct AShadowProjector_execInitShadow_Parms
{
	struct FPlane                                      BoundingSphere;                                   		// 0x0000 ( 0x0010
};

// Function Engine.ShadowProjector.Destroyed
// Flags: [ FUNC_Event ]
struct AShadowProjector_eventDestroyed_Parms
{
};

// Function Engine.ShadowProjector.PostBeginPlay
// Flags: [ FUNC_Event ]
struct AShadowProjector_eventPostBeginPlay_Parms
{
};

// Function Engine.HudOverlay.Destroyed
// Flags: [ FUNC_Simulated ]
struct AHudOverlay_execDestroyed_Parms
{
};

// Function Engine.HudOverlay.Render
// Flags: [ FUNC_Simulated ]
struct AHudOverlay_execRender_Parms
{
	class UCanvas*                                     C;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.FailedConnect.GetString
// Flags: 
struct AFailedConnect_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.FailedConnect.GetFailSwitch
// Flags: 
struct AFailedConnect_execGetFailSwitch_Parms
{
	struct FString                                     FailString;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wSkill_RestoreSupply.UpdateProcess
// Flags: [ FUNC_Simulated ]
struct UwSkill_RestoreSupply_execUpdateProcess_Parms
{
};

// Function Engine.wSkill_RestoreSupply.RemoveSupplyItem
// Flags: [ FUNC_Simulated ]
struct UwSkill_RestoreSupply_execRemoveSupplyItem_Parms
{
	unsigned char                                      byType;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wSkill_RestoreSupply.SetSupplyItem
// Flags: [ FUNC_Simulated ]
struct UwSkill_RestoreSupply_execSetSupplyItem_Parms
{
	unsigned char                                      byType;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wSkill_RestoreSupply.RemoveSkill
// Flags: [ FUNC_Simulated ]
struct UwSkill_RestoreSupply_execRemoveSkill_Parms
{
};

// Function Engine.wSkill_RestoreSupply.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct UwSkill_RestoreSupply_execPostBeginPlay_Parms
{
};

// Function Engine.wSkill.SetbUpdateCall
// Flags: [ FUNC_Simulated ]
struct UwSkill_execSetbUpdateCall_Parms
{
	unsigned long                                      bValue:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.wSkill.SetbyAddCount
// Flags: [ FUNC_Simulated ]
struct UwSkill_execSetbyAddCount_Parms
{
	unsigned char                                      byValue;                                          		// 0x0000 ( 0x0001[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.wSkill.SetbUsed
// Flags: [ FUNC_Simulated ]
struct UwSkill_execSetbUsed_Parms
{
	unsigned long                                      bValue:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.wSkill.SetIsEnable
// Flags: [ FUNC_Simulated ]
struct UwSkill_execSetIsEnable_Parms
{
	unsigned long                                      bValue:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.wSkill.UsedbyWeapon
// Flags: [ FUNC_Simulated ]
struct UwSkill_execUsedbyWeapon_Parms
{
};

// Function Engine.wSkill.Initialize
// Flags: [ FUNC_Simulated ]
struct UwSkill_execInitialize_Parms
{
	class UwSkillBase*                                 SkillBase;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwSkillBaseParam*                            Param;                                            		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wSkill.DeadPlayer
// Flags: [ FUNC_Simulated ]
struct UwSkill_execDeadPlayer_Parms
{
};

// Function Engine.wSkill.RemoveSkill
// Flags: [ FUNC_Simulated ]
struct UwSkill_execRemoveSkill_Parms
{
};

// Function Engine.wSkill.UpdateProcess
// Flags: [ FUNC_Simulated ]
struct UwSkill_execUpdateProcess_Parms
{
};

// Function Engine.wSkill.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct UwSkill_execPostBeginPlay_Parms
{
};

// Function Engine.wZoomFire3D.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct UwZoomFire3D_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.wZoomFire3D.RenderOverlays
// Flags: [ FUNC_Simulated ]
struct UwZoomFire3D_execRenderOverlays_Parms
{
	class UCanvas*                                     Canv;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wZoomFire3D.ModeTick
// Flags: [ FUNC_Event ]
struct UwZoomFire3D_eventModeTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wZoomFire3D.PlayFireEnd
// Flags: 
struct UwZoomFire3D_execPlayFireEnd_Parms
{
};

// Function Engine.wZoomFire3D.Switch3DScope
// Flags: 
struct UwZoomFire3D_execSwitch3DScope_Parms
{
	unsigned long                                      bAiming:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wZoomFire3D.SetFOV
// Flags: 
struct UwZoomFire3D_execSetFOV_Parms
{
	unsigned long                                      bFOV:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wZoomFire3D.SetAim
// Flags: 
struct UwZoomFire3D_execSetAim_Parms
{
	unsigned long                                      bAim:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wZoomFire3D.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct UwZoomFire3D_execPostBeginPlay_Parms
{
};

// Function Engine.wAimFire.ModeDoFire
// Flags: [ FUNC_Event ]
struct UwAimFire_eventModeDoFire_Parms
{
};

// Function Engine.wAimFire.PlayFireEnd
// Flags: 
struct UwAimFire_execPlayFireEnd_Parms
{
};

// Function Engine.wAimFire.SetFOV
// Flags: 
struct UwAimFire_execSetFOV_Parms
{
	unsigned long                                      bFOV:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AwGun*                                       G;                                                		// 0x0004 ( 0x0004
	struct FName                                       szAnim;                                           		// 0x0008 ( 0x0004
	float                                              fFrame;                                           		// 0x000C ( 0x0004
	float                                              fRate;                                            		// 0x0010 ( 0x0004
};

// Function Engine.wAimFire.SetAim
// Flags: 
struct UwAimFire_execSetAim_Parms
{
	unsigned long                                      bAim:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AwGun*                                       G;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wAimFire.ShakeView
// Flags: 
struct UwAimFire_execShakeView_Parms
{
};

// Function Engine.wAimFire.RenderOverlays
// Flags: [ FUNC_Simulated ]
struct UwAimFire_execRenderOverlays_Parms
{
	class UCanvas*                                     Canv;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAimFire.wLoadOut
// Flags: [ FUNC_Simulated ]
struct UwAimFire_execwLoadOut_Parms
{
};

// Function Engine.wAimFire.StartMuzzleSmoke
// Flags: 
struct UwAimFire_execStartMuzzleSmoke_Parms
{
};

// Function Engine.wAimFire.FlashMuzzleFlash
// Flags: 
struct UwAimFire_execFlashMuzzleFlash_Parms
{
};

// Function Engine.wAimFire.PlayFiring
// Flags: 
struct UwAimFire_execPlayFiring_Parms
{
};

// Function Engine.wAdminUser.UnlinkGroups
// Flags: 
struct UwAdminUser_execUnlinkGroups_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wAdminUser.GetManagedUsers
// Flags: 
struct UwAdminUser_execGetManagedUsers_Parms
{
	class UwAdminGroupList*                            uAllGroups;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwAdminUserList*                             ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwAdminUserList*                             retList;                                          		// 0x0008 ( 0x0004
//	class UwAdminUserList*                             uList;                                            		// 0x000C ( 0x0004
//	class UwAdminGroupList*                            uGroups;                                          		// 0x0010 ( 0x0004
//	int                                                i;                                                		// 0x0014 ( 0x0004
//	int                                                j;                                                		// 0x0018 ( 0x0004
};

// Function Engine.wAdminUser.GetManagedGroup
// Flags: 
struct UwAdminUser_execGetManagedGroup_Parms
{
	struct FString                                     GroupName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UwAdminGroup*                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAdminUser.GetGroup
// Flags: 
struct UwAdminUser_execGetGroup_Parms
{
	struct FString                                     GroupName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UwAdminGroup*                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAdminUser.MaxSecLevel
// Flags: 
struct UwAdminUser_execMaxSecLevel_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
//	int                                                M;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wAdminUser.ValidName
// Flags: 
struct UwAdminUser_execValidName_Parms
{
	struct FString                                     uname;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wAdminUser.ValidPass
// Flags: 
struct UwAdminUser_execValidPass_Parms
{
	struct FString                                     upass;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wAdminUser.CanManageUser
// Flags: 
struct UwAdminUser_execCanManageUser_Parms
{
	class UwAdminUser*                                 User;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wAdminUser.CanManageGroup
// Flags: 
struct UwAdminUser_execCanManageGroup_Parms
{
	class UwAdminGroup*                                Group;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAdminUser.MergePrivs
// Flags: 
struct UwAdminUser_execMergePrivs_Parms
{
	struct FString                                     newprivs;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     priv;                                             		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
	int                                                pos;                                              		// 0x0018 ( 0x0004
};

// Function Engine.wAdminUser.RedoMergedPrivs
// Flags: 
struct UwAdminUser_execRedoMergedPrivs_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wAdminUser.HasPrivilege
// Flags: 
struct UwAdminUser_execHasPrivilege_Parms
{
	struct FString                                     priv;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAdminUser.AddManagedGroupsByName
// Flags: 
struct UwAdminUser_execAddManagedGroupsByName_Parms
{
	class UwAdminGroupList*                            lGroups;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FString >                     aGroupNames;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wAdminUser.AddGroupsByName
// Flags: 
struct UwAdminUser_execAddGroupsByName_Parms
{
	class UwAdminGroupList*                            lGroups;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	class TArray< struct FString >                     aGroupNames;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wAdminUser.RemoveManagedGroup
// Flags: 
struct UwAdminUser_execRemoveManagedGroup_Parms
{
	class UwAdminGroup*                                Group;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAdminUser.AddManagedGroup
// Flags: 
struct UwAdminUser_execAddManagedGroup_Parms
{
	class UwAdminGroup*                                Group;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAdminUser.RemoveGroup
// Flags: 
struct UwAdminUser_execRemoveGroup_Parms
{
	class UwAdminGroup*                                Group;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAdminUser.AddGroup
// Flags: 
struct UwAdminUser_execAddGroup_Parms
{
	class UwAdminGroup*                                Group;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAdminUser.Init
// Flags: 
struct UwAdminUser_execInit_Parms
{
	struct FString                                     uname;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     PASS;                                             		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     privs;                                            		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.wAdminUser.Created
// Flags: 
struct UwAdminUser_execCreated_Parms
{
};

// Function Engine.wAdminGroup.HasPrivilege
// Flags: 
struct UwAdminGroup_execHasPrivilege_Parms
{
	struct FString                                     priv;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAdminGroup.RemoveUser
// Flags: 
struct UwAdminGroup_execRemoveUser_Parms
{
	class UwAdminUser*                                 User;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAdminGroup.UnlinkUsers
// Flags: 
struct UwAdminGroup_execUnlinkUsers_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.wAdminGroup.ValidName
// Flags: 
struct UwAdminGroup_execValidName_Parms
{
	struct FString                                     uname;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wAdminGroup.SetPrivs
// Flags: 
struct UwAdminGroup_execSetPrivs_Parms
{
	struct FString                                     privs;                                            		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.wAdminGroup.Init
// Flags: 
struct UwAdminGroup_execInit_Parms
{
	struct FString                                     sGroupName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     sPrivileges;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      nGameSecLevel;                                    		// 0x0018 ( 0x0001[ CPF_Parm ]
};

// Function Engine.wAdminGroup.Created
// Flags: 
struct UwAdminGroup_execCreated_Parms
{
};

// Function Engine.wAdminUserList.FindByName
// Flags: 
struct UwAdminUserList_execFindByName_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UwAdminUser*                                 ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wAdminUserList.Contains
// Flags: 
struct UwAdminUserList_execContains_Parms
{
	class UwAdminUser*                                 User;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wAdminUserList.Clear
// Flags: 
struct UwAdminUserList_execClear_Parms
{
};

// Function Engine.wAdminUserList.Remove
// Flags: 
struct UwAdminUserList_execRemove_Parms
{
	class UwAdminUser*                                 User;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wAdminUserList.Get
// Flags: 
struct UwAdminUserList_execGet_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwAdminUser*                                 ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAdminUserList.Add
// Flags: 
struct UwAdminUserList_execAdd_Parms
{
	class UwAdminUser*                                 NewUser;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAdminUserList.Create
// Flags: 
struct UwAdminUserList_execCreate_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Password;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Privileges;                                       		// 0x0018 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UwAdminUser*                                 ReturnValue;                                      		// 0x0024 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwAdminUser*                                 NewUser;                                          		// 0x0028 ( 0x0004
};

// Function Engine.wAdminUserList.Count
// Flags: 
struct UwAdminUserList_execCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAdminGroupList.Clear
// Flags: 
struct UwAdminGroupList_execClear_Parms
{
};

// Function Engine.wAdminGroupList.FindMasterGroup
// Flags: 
struct UwAdminGroupList_execFindMasterGroup_Parms
{
	class UwAdminGroup*                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wAdminGroupList.Contains
// Flags: 
struct UwAdminGroupList_execContains_Parms
{
	class UwAdminGroup*                                Group;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.wAdminGroupList.FindByName
// Flags: 
struct UwAdminGroupList_execFindByName_Parms
{
	struct FString                                     GroupName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UwAdminGroup*                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.wAdminGroupList.Get
// Flags: 
struct UwAdminGroupList_execGet_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwAdminGroup*                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wAdminGroupList.Remove
// Flags: 
struct UwAdminGroupList_execRemove_Parms
{
	class UwAdminGroup*                                Group;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wAdminGroupList.Add
// Flags: 
struct UwAdminGroupList_execAdd_Parms
{
	class UwAdminGroup*                                Group;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wAdminGroupList.CreateGroup
// Flags: 
struct UwAdminGroupList_execCreateGroup_Parms
{
	struct FString                                     GroupName;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Privileges;                                       		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      GameSecLevel;                                     		// 0x0018 ( 0x0001[ CPF_Parm ]
	class UwAdminGroup*                                ReturnValue;                                      		// 0x001C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UwAdminGroup*                                NewGroup;                                         		// 0x0020 ( 0x0004
};

// Function Engine.wAdminGroupList.Count
// Flags: 
struct UwAdminGroupList_execCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wPrivilegeBase.Created
// Flags: [ FUNC_Event ]
struct UwPrivilegeBase_eventCreated_Parms
{
};

// Function Engine.Admin.DoLogout
// Flags: 
struct UAdmin_execDoLogout_Parms
{
};

// Function Engine.Admin.DoLogin
// Flags: 
struct UAdmin_execDoLogin_Parms
{
	struct FString                                     UserName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Password;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.Fragment.RandSpin
// Flags: [ FUNC_Final | FUNC_Simulated ]
struct AFragment_execRandSpin_Parms
{
	float                                              spinRate;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Fragment.HitWall
// Flags: [ FUNC_Simulated ]
struct AFragment_execHitWall_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      HitWall;                                          		// 0x000C ( 0x0004[ CPF_Parm ]
	class UMaterial*                                   HitMaterial;                                      		// 0x0010 ( 0x0004[ CPF_Parm ]
	float                                              Speed;                                            		// 0x0014 ( 0x0004
};

// Function Engine.Fragment.CalcVelocity
// Flags: [ FUNC_Simulated ]
struct AFragment_execCalcVelocity_Parms
{
	struct FVector                                     Momentum;                                         		// 0x0000 ( 0x000C[ CPF_Parm ]
	float                                              ExplosionSize;                                    		// 0x000C ( 0x0004
};

// Function Engine.Fragment.CanSplash
// Flags: 
struct AFragment_execCanSplash_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.UnitTest.DQ
// Flags: 
struct AUnitTest_execDQ_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004
};

// Function Engine.UnitTest.EQ
// Flags: 
struct AUnitTest_execEQ_Parms
{
	class AActor*                                      A;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AActor*                                      ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.UnitTest.Check
// Flags: 
struct AUnitTest_execCheck_Parms
{
	unsigned long                                      Valid:1;                                          		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	struct FString                                     Msg;                                              		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.UnitTest.RunUnitTest
// Flags: 
struct AUnitTest_execRunUnitTest_Parms
{
	int                                                SW;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.UnitTest.TestTearOff
// Flags: 
struct AUnitTest_execTestTearOff_Parms
{
};

// Function Engine.UnitTest.TestSetup
// Flags: 
struct AUnitTest_execTestSetup_Parms
{
};

// Function Engine.UnitTest.FixtureTearOff
// Flags: 
struct AUnitTest_execFixtureTearOff_Parms
{
};

// Function Engine.UnitTest.FixtureSetup
// Flags: 
struct AUnitTest_execFixtureSetup_Parms
{
};

// Function Engine.wFPWeaponAttachment.DisplayDebug
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execDisplayDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              YL;                                               		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	float                                              YPos;                                             		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.wFPWeaponAttachment.RenderOverlays
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwFPWeaponAttachment_eventRenderOverlays_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APawn*                                       P;                                                		// 0x0004 ( 0x0004
	struct FVector                                     TmOffSet;                                         		// 0x0008 ( 0x000C
	class APlayerController*                           PC;                                               		// 0x0014 ( 0x0004
	struct FRotator                                    rRotation;                                        		// 0x0018 ( 0x000C
};

// Function Engine.wFPWeaponAttachment.FPCalcSpread
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execFPCalcSpread_Parms
{
	float                                              fSpreadMin;                                       		// 0x0000 ( 0x0004
	float                                              fSpreadMax;                                       		// 0x0004 ( 0x0004
	int                                                iCurrentWeaponID;                                 		// 0x0008 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.FPModeDoFire
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execFPModeDoFire_Parms
{
	int                                                iCurrentWeaponID;                                 		// 0x0000 ( 0x0004
	class UwWeaponBaseParams*                          WBP;                                              		// 0x0004 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.TickFPWeapon
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execTickFPWeapon_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fAimAniRate;                                      		// 0x0004 ( 0x0004
	unsigned char                                      FlashCount;                                       		// 0x0008 ( 0x0001
	unsigned char                                      FiringMode;                                       		// 0x0009 ( 0x0001
};

// Function Engine.wFPWeaponAttachment.RefreshState
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execRefreshState_Parms
{
};

// Function Engine.wFPWeaponAttachment.IsActive
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execIsActive_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wFPWeaponAttachment.ShakeView
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execShakeView_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004
	struct FRotator                                    rMin;                                             		// 0x0004 ( 0x000C
	struct FRotator                                    rMax;                                             		// 0x0010 ( 0x000C
	int                                                iPitch;                                           		// 0x001C ( 0x0004
	int                                                iYaw;                                             		// 0x0020 ( 0x0004
	float                                              fDecayFastBeginTime;                              		// 0x0024 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.CheckBob
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execCheckBob_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Speed2D;                                          		// 0x0004 ( 0x0004
	float                                              BobCamera;                                        		// 0x0008 ( 0x0004
	float                                              MaxSpeed;                                         		// 0x000C ( 0x0004
	float                                              fStaminaRatio;                                    		// 0x0010 ( 0x0004
	struct FVector                                     X;                                                		// 0x0014 ( 0x000C
	struct FVector                                     Y;                                                		// 0x0020 ( 0x000C
	struct FVector                                     Z;                                                		// 0x002C ( 0x000C
	float                                              OldBobTime;                                       		// 0x0038 ( 0x0004
	int                                                M;                                                		// 0x003C ( 0x0004
	int                                                N;                                                		// 0x0040 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.WeaponBob
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execWeaponBob_Parms
{
	float                                              BobDamping;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     WBob;                                             		// 0x0010 ( 0x000C
};

// Function Engine.wFPWeaponAttachment.CalcStanceOffset
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execCalcStanceOffset_Parms
{
	float                                              fDelta;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              fDestPivot;                                       		// 0x0004 ( 0x0004
	float                                              fDeltaPivot;                                      		// 0x0008 ( 0x0004
	float                                              fDMax;                                            		// 0x000C ( 0x0004
	float                                              fDMin;                                            		// 0x0010 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.CalcDestPivot
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execCalcDestPivot_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              fDestPivot;                                       		// 0x0004 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.CalcPartsOffset
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execCalcPartsOffset_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	struct FVector                                     vCurrAimDiff;                                     		// 0x0004 ( 0x000C
	struct FName                                       szAnim;                                           		// 0x0010 ( 0x0004
	float                                              fFrame;                                           		// 0x0014 ( 0x0004
	float                                              fRate;                                            		// 0x0018 ( 0x0004
	struct FVector                                     vDiff;                                            		// 0x001C ( 0x000C
	float                                              fLerp;                                            		// 0x0028 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.SetAnimAction
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execSetAnimAction_Parms
{
	unsigned char                                      byType;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      Opt1:1;                                           		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	float                                              fTemp;                                            		// 0x0008 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.PlayIdle
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execPlayIdle_Parms
{
};

// Function Engine.wFPWeaponAttachment.AnimEnd
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execAnimEnd_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FName                                       Anim;                                             		// 0x0004 ( 0x0004
	float                                              frame;                                            		// 0x0008 ( 0x0004
	float                                              Rate;                                             		// 0x000C ( 0x0004
	struct FString                                     strAction;                                        		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.wFPWeaponAttachment.SetQuickFOV
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execSetQuickFOV_Parms
{
	unsigned long                                      bFOV:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wFPWeaponAttachment.SetFOV
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execSetFOV_Parms
{
	unsigned long                                      bFOV:1;                                           		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      bQuick:1;                                         		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wFPWeaponAttachment.Change3DScopeMesh
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execChange3DScopeMesh_Parms
{
	unsigned long                                      bAiming:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.StartMuzzleSmoke
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execStartMuzzleSmoke_Parms
{
};

// Function Engine.wFPWeaponAttachment.FlashMuzzleFlash
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execFlashMuzzleFlash_Parms
{
};

// Function Engine.wFPWeaponAttachment.DrawMuzzleFlash
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execDrawMuzzleFlash_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wFPWeaponAttachment.SpawnShell
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execSpawnShell_Parms
{
};

// Function Engine.wFPWeaponAttachment.LoadWarhead
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execLoadWarhead_Parms
{
	class UStaticMesh*                                 stProj;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wFPWeaponAttachment.SetResParams
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execSetResParams_Parms
{
	class UClass*                                      wRes;                                             		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wFPWeaponAttachment.SetBaseParams
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execSetBaseParams_Parms
{
	class UwWeaponBaseParams*                          wBase;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wFPWeaponAttachment.AttWarhead
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execAttWarhead_Parms
{
	unsigned long                                      bAttOrDtt:1;                                      		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.wFPWeaponAttachment.AddParts
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execAddParts_Parms
{
	unsigned char                                      Type;                                             		// 0x0000 ( 0x0001[ CPF_Parm ]
	struct FString                                     szName;                                           		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     szSkinName;                                       		// 0x0010 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     strHaveDotName;                                   		// 0x001C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FVector                                     AimDiff;                                          		// 0x0028 ( 0x000C[ CPF_Parm ]
	int                                                iItemID;                                          		// 0x0034 ( 0x0004[ CPF_Parm ]
	int                                                iPartsGroupID;                                    		// 0x0038 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bSecondSight:1;                                   		// 0x003C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                i;                                                		// 0x0040 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.SetWeaponPaint
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execSetWeaponPaint_Parms
{
	int                                                iPaintID;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UwWeaponCustomInfoParam*                     wcip;                                             		// 0x0004 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.AddPartsGroup
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execAddPartsGroup_Parms
{
	int                                                iWeaponID;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UwItemBaseParam*                             ItemParam;                                        		// 0x0008 ( 0x0004
	class UwItemResourceParam*                         ItemResParam;                                     		// 0x000C ( 0x0004
	struct FVector                                     AimDiff;                                          		// 0x0010 ( 0x000C
	int                                                i;                                                		// 0x001C ( 0x0004
	class UwWeaponCustomInfoParam*                     wcip;                                             		// 0x0020 ( 0x0004
	class UwWeaponCustomPartsParam*                    wcpp;                                             		// 0x0024 ( 0x0004
	int                                                iSightPartID;                                     		// 0x0028 ( 0x0004
	int                                                iSilencerPartID;                                  		// 0x002C ( 0x0004
	int                                                iBarrelPartID;                                    		// 0x0030 ( 0x0004
	int                                                iGunstockPartID;                                  		// 0x0034 ( 0x0004
	int                                                iSubSightPartItemID;                              		// 0x0038 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.wLoadOut
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execwLoadOut_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	int                                                iPaintID;                                         		// 0x0008 ( 0x0004[ CPF_Parm ]
	class APawn*                                       Pawn;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	class UwWeaponManager*                             wMani;                                            		// 0x0010 ( 0x0004
	class UwWeaponBaseParams*                          wBase;                                            		// 0x0014 ( 0x0004
	class UClass*                                      wRes;                                             		// 0x0018 ( 0x0004
	int                                                iBodyItemID;                                      		// 0x001C ( 0x0004
	class UMesh*                                       meshHands;                                        		// 0x0020 ( 0x0004
};

// Function Engine.wFPWeaponAttachment.ResetBase
// Flags: [ FUNC_Simulated ]
struct AwFPWeaponAttachment_execResetBase_Parms
{
};

// Function Engine.wFPWeaponAttachment.Destroyed
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwFPWeaponAttachment_eventDestroyed_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.LadderInfo.LengthOfLadder
// Flags: 
struct ULadderInfo_execLengthOfLadder_Parms
{
	int                                                Ladder;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LadderInfo.GetMatchDescription
// Flags: 
struct ULadderInfo_execGetMatchDescription_Parms
{
	class UGameProfile*                                G;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     retval;                                           		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.LadderInfo.MakeURLFor
// Flags: 
struct ULadderInfo_execMakeURLFor_Parms
{
	class UGameProfile*                                G;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class UMatchInfo*                                  M;                                                		// 0x0010 ( 0x0004
//	struct FString                                     URL;                                              		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.LadderInfo.GetCurrentMatchInfo
// Flags: 
struct ULadderInfo_execGetCurrentMatchInfo_Parms
{
	class UGameProfile*                                G;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UMatchInfo*                                  ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.LadderInfo.GetMatchInfo
// Flags: 
struct ULadderInfo_execGetMatchInfo_Parms
{
	int                                                Ladder;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                rung;                                             		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UMatchInfo*                                  ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class TArray< class UMatchInfo* >                  matcharray;                                       		// 0x000C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.LadderInfo.UpdateLadders
// Flags: 
struct ULadderInfo_execUpdateLadders_Parms
{
	class UGameProfile*                                G;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                CurrentLadder;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0008 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     SpecialEvent;                                     		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.CreateMapItemList
// Flags: 
struct UMaplistRecord_execCreateMapItemList_Parms
{
	class TArray< struct FString >                     MapURLs;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class TArray< struct FMapItem >                    MapItems;                                         		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0018 ( 0x0004
	struct FMapItem                                    Item;                                             		// 0x001C ( 0x0030[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.CreateMapItem
// Flags: 
struct UMaplistRecord_execCreateMapItem_Parms
{
	struct FString                                     FullMapURL;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FMapItem                                    Item;                                             		// 0x000C ( 0x0030[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x003C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FKeyValuePair                               Pair;                                             		// 0x0040 ( 0x0018[ CPF_NeedCtorLink ]
//	struct FString                                     str;                                              		// 0x0058 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.CreateMapOption
// Flags: 
struct UMaplistRecord_execCreateMapOption_Parms
{
	struct FString                                     MapOptionString;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FKeyValuePair                               ReturnValue;                                      		// 0x000C ( 0x0018[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FKeyValuePair                               Pair;                                             		// 0x0024 ( 0x0018[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.GetBaseMapName
// Flags: 
struct UMaplistRecord_execGetBaseMapName_Parms
{
	struct FString                                     FullMapURL;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	struct FString                                     str;                                              		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.ItemHasOption
// Flags: 
struct UMaplistRecord_execItemHasOption_Parms
{
	struct FMapItem                                    Item;                                             		// 0x0000 ( 0x0030[ CPF_Parm | CPF_NeedCtorLink ]
	struct FKeyValuePair                               Option;                                           		// 0x0030 ( 0x0018[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0048 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x004C ( 0x0004
};

// Function Engine.MaplistRecord.MapHasOption
// Flags: 
struct UMaplistRecord_execMapHasOption_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FKeyValuePair                               Option;                                           		// 0x0004 ( 0x0018[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.ValidOptionIndex
// Flags: 
struct UMaplistRecord_execValidOptionIndex_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                OptionIndex;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.ValidIndex
// Flags: 
struct UMaplistRecord_execValidIndex_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.ValidMap
// Flags: 
struct UMaplistRecord_execValidMap_Parms
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.GetOptionIndex
// Flags: 
struct UMaplistRecord_execGetOptionIndex_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FKeyValuePair                               Option;                                           		// 0x0004 ( 0x0018[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x001C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0020 ( 0x0004
};

// Function Engine.MaplistRecord.GetMapItemIndex
// Flags: 
struct UMaplistRecord_execGetMapItemIndex_Parms
{
	struct FMapItem                                    Item;                                             		// 0x0000 ( 0x0030[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x0030 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0034 ( 0x0004
};

// Function Engine.MaplistRecord.GetMapIndex
// Flags: 
struct UMaplistRecord_execGetMapIndex_Parms
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FMapItem                                    Item;                                             		// 0x0010 ( 0x0030[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.GetActiveMapIndex
// Flags: 
struct UMaplistRecord_execGetActiveMapIndex_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.GetCacheIndex
// Flags: 
struct UMaplistRecord_execGetCacheIndex_Parms
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	struct FString                                     str;                                              		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.IsDirty
// Flags: 
struct UMaplistRecord_execIsDirty_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.GetAllMapURL
// Flags: 
struct UMaplistRecord_execGetAllMapURL_Parms
{
	class TArray< struct FString >                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x000C ( 0x0004
//	class TArray< struct FString >                     AR;                                               		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.GetMaps
// Flags: 
struct UMaplistRecord_execGetMaps_Parms
{
	class TArray< struct FMapItem >                    ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.GetMapURL
// Flags: 
struct UMaplistRecord_execGetMapURL_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.GetMapName
// Flags: 
struct UMaplistRecord_execGetMapName_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.GetActiveMapURL
// Flags: 
struct UMaplistRecord_execGetActiveMapURL_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.GetActiveMapName
// Flags: 
struct UMaplistRecord_execGetActiveMapName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.GetGameType
// Flags: 
struct UMaplistRecord_execGetGameType_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.GetTitle
// Flags: 
struct UMaplistRecord_execGetTitle_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.SetMapOptions
// Flags: 
struct UMaplistRecord_execSetMapOptions_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     OptionString;                                     		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     MapName;                                          		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.RemoveMap
// Flags: 
struct UMaplistRecord_execRemoveMap_Parms
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	struct FMapItem                                    Item;                                             		// 0x0014 ( 0x0030[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.InsertMap
// Flags: 
struct UMaplistRecord_execInsertMap_Parms
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                Index;                                            		// 0x000C ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FMapItem                                    Item;                                             		// 0x0014 ( 0x0030[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.AddMap
// Flags: 
struct UMaplistRecord_execAddMap_Parms
{
	struct FString                                     MapName;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                CacheIndex;                                       		// 0x0010 ( 0x0004
//	struct FMapItem                                    Item;                                             		// 0x0014 ( 0x0030[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.RefreshMapItem
// Flags: 
struct UMaplistRecord_execRefreshMapItem_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     FullMapURL;                                       		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.MaplistRecord.RemoveOptionItem
// Flags: 
struct UMaplistRecord_execRemoveOptionItem_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FKeyValuePair                               Option;                                           		// 0x0004 ( 0x0018[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0020 ( 0x0004
};

// Function Engine.MaplistRecord.RemoveOptionString
// Flags: 
struct UMaplistRecord_execRemoveOptionString_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     OptionString;                                     		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FKeyValuePair                               Pair;                                             		// 0x0014 ( 0x0018[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.AddOptionItem
// Flags: 
struct UMaplistRecord_execAddOptionItem_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FKeyValuePair                               Option;                                           		// 0x0004 ( 0x0018[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x001C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.AddOptionString
// Flags: 
struct UMaplistRecord_execAddOptionString_Parms
{
	int                                                MapIndex;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     OptionString;                                     		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FKeyValuePair                               Option;                                           		// 0x0014 ( 0x0018[ CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.Clear
// Flags: 
struct UMaplistRecord_execClear_Parms
{
	unsigned long                                      bReset:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.MaplistRecord.CancelChanges
// Flags: 
struct UMaplistRecord_execCancelChanges_Parms
{
};

// Function Engine.MaplistRecord.VerifyMaps
// Flags: 
struct UMaplistRecord_execVerifyMaps_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.MaplistRecord.Save
// Flags: 
struct UMaplistRecord_execSave_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.MaplistRecord.SetMapItemList
// Flags: 
struct UMaplistRecord_execSetMapItemList_Parms
{
	class TArray< struct FMapItem >                    NewMaps;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.SetMaplist
// Flags: 
struct UMaplistRecord_execSetMaplist_Parms
{
	class TArray< struct FString >                     NewMaps;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.SetActiveMap
// Flags: 
struct UMaplistRecord_execSetActiveMap_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.SetGameType
// Flags: 
struct UMaplistRecord_execSetGameType_Parms
{
	struct FString                                     NewGameType;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.SetTitle
// Flags: 
struct UMaplistRecord_execSetTitle_Parms
{
	struct FString                                     NewTitle;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.SetCacheMaps
// Flags: 
struct UMaplistRecord_execSetCacheMaps_Parms
{
	class TArray< struct FMapItem >                    CacheMaps;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
};

// Function Engine.MaplistRecord.Created
// Flags: [ FUNC_Event ]
struct UMaplistRecord_eventCreated_Parms
{
};

// Function Engine.MaplistRecord.CompareItemsSlow
// Flags: 
struct UMaplistRecord_execCompareItemsSlow_Parms
{
	struct FMapItem                                    A;                                                		// 0x0000 ( 0x0030[ CPF_Parm | CPF_NeedCtorLink ]
	struct FMapItem                                    B;                                                		// 0x0030 ( 0x0030[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0060 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0064 ( 0x0004
//	int                                                j;                                                		// 0x0068 ( 0x0004
//	int                                                MatchedA;                                         		// 0x006C ( 0x0004
//	int                                                MatchedB;                                         		// 0x0070 ( 0x0004
};

// Function Engine.MaplistRecord.CompareItems
// Flags: 
struct UMaplistRecord_execCompareItems_Parms
{
	struct FMapItem                                    A;                                                		// 0x0000 ( 0x0030[ CPF_Parm | CPF_NeedCtorLink ]
	struct FMapItem                                    B;                                                		// 0x0030 ( 0x0030[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0060 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.MaplistRecord.EqualEqual_MapItemMapItem
// Flags: [ FUNC_Final ]
struct UMaplistRecord_execEqualEqual_MapItemMapItem_Parms
{
	struct FMapItem                                    A;                                                		// 0x0000 ( 0x0030[ CPF_Parm | CPF_NeedCtorLink ]
	struct FMapItem                                    B;                                                		// 0x0030 ( 0x0030[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0060 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0064 ( 0x0004
//	int                                                j;                                                		// 0x0068 ( 0x0004
};

// Function Engine.MaplistRecord.EqualEqual_KeyValuePairKeyValuePair
// Flags: [ FUNC_Final ]
struct UMaplistRecord_execEqualEqual_KeyValuePairKeyValuePair_Parms
{
	struct FKeyValuePair                               A;                                                		// 0x0000 ( 0x0018[ CPF_Parm | CPF_NeedCtorLink ]
	struct FKeyValuePair                               B;                                                		// 0x0018 ( 0x0018[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0030 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.GetCurrentTitle
// Flags: 
struct UStreamPlaylistManager_execGetCurrentTitle_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylistManager.Save
// Flags: 
struct UStreamPlaylistManager_execSave_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.StreamPlaylistManager.HandleDebugExec
// Flags: 
struct UStreamPlaylistManager_execHandleDebugExec_Parms
{
	struct FString                                     Command;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x001C ( 0x0004
//	unsigned long                                      Result:1;                                         		// 0x0020 ( 0x0004 [0x00000001]
};

// Function Engine.StreamPlaylistManager.CreatePlaylist
// Flags: 
struct UStreamPlaylistManager_execCreatePlaylist_Parms
{
	struct FString                                     PlaylistName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UStreamPlaylist*                             ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UStreamPlaylist*                             List;                                             		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylistManager.SetRepeatAll
// Flags: 
struct UStreamPlaylistManager_execSetRepeatAll_Parms
{
	unsigned long                                      bEnable:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.StreamPlaylistManager.SetRepeat
// Flags: 
struct UStreamPlaylistManager_execSetRepeat_Parms
{
	unsigned long                                      bEnable:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.StreamPlaylistManager.SetShuffleAll
// Flags: 
struct UStreamPlaylistManager_execSetShuffleAll_Parms
{
	unsigned long                                      bEnable:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.StreamPlaylistManager.SetShuffle
// Flags: 
struct UStreamPlaylistManager_execSetShuffle_Parms
{
	unsigned long                                      bEnable:1;                                        		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
};

// Function Engine.StreamPlaylistManager.GetRepeatAll
// Flags: 
struct UStreamPlaylistManager_execGetRepeatAll_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.GetRepeat
// Flags: 
struct UStreamPlaylistManager_execGetRepeat_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.GetShuffleAll
// Flags: 
struct UStreamPlaylistManager_execGetShuffleAll_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.GetShuffle
// Flags: 
struct UStreamPlaylistManager_execGetShuffle_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.ValidName
// Flags: 
struct UStreamPlaylistManager_execValidName_Parms
{
	struct FString                                     Test;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylistManager.FindPlaylistIndex
// Flags: 
struct UStreamPlaylistManager_execFindPlaylistIndex_Parms
{
	class UStreamPlaylist*                             Playlist;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.StreamPlaylistManager.FindNameIndex
// Flags: 
struct UStreamPlaylistManager_execFindNameIndex_Parms
{
	struct FString                                     PlaylistName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylistManager.ValidIndex
// Flags: 
struct UStreamPlaylistManager_execValidIndex_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.GetPlaylistCount
// Flags: 
struct UStreamPlaylistManager_execGetPlaylistCount_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.GetPlaylistAt
// Flags: 
struct UStreamPlaylistManager_execGetPlaylistAt_Parms
{
	int                                                idx;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UStreamPlaylist*                             ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.GetRandomPlaylist
// Flags: 
struct UStreamPlaylistManager_execGetRandomPlaylist_Parms
{
	class UStreamPlaylist*                             ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
//	int                                                idx;                                              		// 0x0008 ( 0x0004
};

// Function Engine.StreamPlaylistManager.GetCurrentPlaylist
// Flags: 
struct UStreamPlaylistManager_execGetCurrentPlaylist_Parms
{
	class UStreamPlaylist*                             ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.GetCurrentIndex
// Flags: 
struct UStreamPlaylistManager_execGetCurrentIndex_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.GetRandomSong
// Flags: 
struct UStreamPlaylistManager_execGetRandomSong_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class UStreamPlaylist*                             List;                                             		// 0x000C ( 0x0004
};

// Function Engine.StreamPlaylistManager.PrevSong
// Flags: 
struct UStreamPlaylistManager_execPrevSong_Parms
{
	unsigned long                                      bForce:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class UStreamPlaylist*                             List;                                             		// 0x0010 ( 0x0004
//	class UStream*                                     S;                                                		// 0x0014 ( 0x0004
//	struct FString                                     str;                                              		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylistManager.NextSong
// Flags: 
struct UStreamPlaylistManager_execNextSong_Parms
{
	unsigned long                                      bForce:1;                                         		// 0x0000 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	class UStreamPlaylist*                             List;                                             		// 0x0010 ( 0x0004
//	class UStream*                                     S;                                                		// 0x0014 ( 0x0004
//	struct FString                                     str;                                              		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylistManager.ImportPlaylist
// Flags: 
struct UStreamPlaylistManager_execImportPlaylist_Parms
{
	int                                                PlaylistIndex;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                InsertPosition;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Path;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	unsigned char                                      Type;                                             		// 0x001C ( 0x0001
};

// Function Engine.StreamPlaylistManager.AddDirectory
// Flags: 
struct UStreamPlaylistManager_execAddDirectory_Parms
{
	int                                                PlaylistIndex;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                InsertPosition;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Path;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bRecurseDirectories:1;                            		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x001C ( 0x0004
//	unsigned long                                      bValue:1;                                         		// 0x0020 ( 0x0004 [0x00000001]
//	class TArray< struct FString >                     Results;                                          		// 0x0024 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylistManager.GetPlaylistType
// Flags: 
struct UStreamPlaylistManager_execGetPlaylistType_Parms
{
	struct FString                                     Path;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned char                                      ReturnValue;                                      		// 0x000C ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     Ext;                                              		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylistManager.ClearCurrentPlaylist
// Flags: 
struct UStreamPlaylistManager_execClearCurrentPlaylist_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.RemoveFromCurrentPlaylist
// Flags: 
struct UStreamPlaylistManager_execRemoveFromCurrentPlaylist_Parms
{
	struct FString                                     Path;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bSkipNotification:1;                              		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.InsertInPlaylist
// Flags: 
struct UStreamPlaylistManager_execInsertInPlaylist_Parms
{
	int                                                PlaylistIndex;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                InsertPosition;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Path;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bSkipNotification:1;                              		// 0x0014 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned char                                      Type;                                             		// 0x001C ( 0x0001
//	unsigned long                                      bResult:1;                                        		// 0x0020 ( 0x0004 [0x00000001]
};

// Function Engine.StreamPlaylistManager.AddToPlaylist
// Flags: 
struct UStreamPlaylistManager_execAddToPlaylist_Parms
{
	int                                                PlaylistIndex;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Path;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bSkipNotification:1;                              		// 0x0010 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.RenamePlaylist
// Flags: 
struct UStreamPlaylistManager_execRenamePlaylist_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     NewName;                                          		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UStreamPlaylist*                             temp;                                             		// 0x0014 ( 0x0004
//	struct FString                                     str;                                              		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0024 ( 0x0004
};

// Function Engine.StreamPlaylistManager.RemovePlaylistAt
// Flags: 
struct UStreamPlaylistManager_execRemovePlaylistAt_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	unsigned long                                      bWasActive:1;                                     		// 0x0008 ( 0x0004 [0x00000001]
};

// Function Engine.StreamPlaylistManager.RemovePlaylist
// Flags: 
struct UStreamPlaylistManager_execRemovePlaylist_Parms
{
	struct FString                                     PlaylistName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylistManager.AppendPlaylist
// Flags: 
struct UStreamPlaylistManager_execAppendPlaylist_Parms
{
	class UStreamPlaylist*                             Playlist;                                         		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0008 ( 0x0004
};

// Function Engine.StreamPlaylistManager.AddPlaylist
// Flags: 
struct UStreamPlaylistManager_execAddPlaylist_Parms
{
	struct FString                                     NewPlaylistName;                                  		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FString                                     str;                                              		// 0x0010 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x001C ( 0x0004
};

// Function Engine.StreamPlaylistManager.ActivatePlaylist
// Flags: 
struct UStreamPlaylistManager_execActivatePlaylist_Parms
{
	int                                                ListIndex;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bNoFail:1;                                        		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylistManager.CreateDefaultPlaylist
// Flags: 
struct UStreamPlaylistManager_execCreateDefaultPlaylist_Parms
{
	class UStreamPlaylist*                             ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
//	struct FString                                     Nothing;                                          		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylistManager.InitializeParsers
// Flags: 
struct UStreamPlaylistManager_execInitializeParsers_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                j;                                                		// 0x0004 ( 0x0004
	class UClass*                                      ParseClass;                                       		// 0x0008 ( 0x0004
};

// Function Engine.StreamPlaylistManager.InitializePlaylists
// Flags: 
struct UStreamPlaylistManager_execInitializePlaylists_Parms
{
	class TArray< struct FString >                     PlaylistNames;                                    		// 0x0000 ( 0x000C[ CPF_NeedCtorLink ]
	class UStreamPlaylist*                             NewList;                                          		// 0x000C ( 0x0004
	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylistManager.Initialize
// Flags: 
struct UStreamPlaylistManager_execInitialize_Parms
{
	class UStreamInterface*                            InFileManager;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.StreamPlaylistManager.ChangedActivePlaylist
// Flags: 
struct UStreamPlaylistManager_execChangedActivePlaylist_Parms
{
	class UStreamPlaylist*                             NewPlaylist;                                      		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.StreamPlaylist.Save
// Flags: 
struct UStreamPlaylist_execSave_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.StreamPlaylist.HandleDebugExec
// Flags: 
struct UStreamPlaylist_execHandleDebugExec_Parms
{
	struct FString                                     Command;                                          		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     Param;                                            		// 0x000C ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0018 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x001C ( 0x0004
};

// Function Engine.StreamPlaylist.DebugInfo
// Flags: 
struct UStreamPlaylist_execDebugInfo_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.StreamPlaylist.ValidStreamIndex
// Flags: 
struct UStreamPlaylist_execValidStreamIndex_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.ValidStreamName
// Flags: 
struct UStreamPlaylist_execValidStreamName_Parms
{
	struct FString                                     fileName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.FindIndexByFileName
// Flags: 
struct UStreamPlaylist_execFindIndexByFileName_Parms
{
	struct FString                                     Test;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	int                                                Num;                                              		// 0x0014 ( 0x0004
};

// Function Engine.StreamPlaylist.FindIndexByFullName
// Flags: 
struct UStreamPlaylist_execFindIndexByFullName_Parms
{
	struct FString                                     Test;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	int                                                Num;                                              		// 0x0014 ( 0x0004
};

// Function Engine.StreamPlaylist.FindIndexByPath
// Flags: 
struct UStreamPlaylist_execFindIndexByPath_Parms
{
	struct FString                                     Test;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylist.FindIndexByName
// Flags: 
struct UStreamPlaylist_execFindIndexByName_Parms
{
	struct FString                                     Test;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FFilePath                                   APath;                                            		// 0x0010 ( 0x003C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylist.GetPlaylistLength
// Flags: 
struct UStreamPlaylist_execGetPlaylistLength_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.GetStreamAt
// Flags: 
struct UStreamPlaylist_execGetStreamAt_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UStream*                                     ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.GetStream
// Flags: 
struct UStreamPlaylist_execGetStream_Parms
{
	struct FString                                     StreamName;                                       		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UStream*                                     ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylist.GetCurrentStream
// Flags: 
struct UStreamPlaylist_execGetCurrentStream_Parms
{
	class UStream*                                     ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.GetSongs
// Flags: 
struct UStreamPlaylist_execGetSongs_Parms
{
	class TArray< class UStream* >                     SongArray;                                        		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylist.GetCurrent
// Flags: 
struct UStreamPlaylist_execGetCurrent_Parms
{
	int                                                ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.GetTitle
// Flags: 
struct UStreamPlaylist_execGetTitle_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylist.IsInitialized
// Flags: 
struct UStreamPlaylist_execIsInitialized_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.SetSongs
// Flags: 
struct UStreamPlaylist_execSetSongs_Parms
{
	class TArray< class UStream* >                     NewSongs;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.SetCurrent
// Flags: 
struct UStreamPlaylist_execSetCurrent_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.SetTitle
// Flags: 
struct UStreamPlaylist_execSetTitle_Parms
{
	struct FString                                     NewTitle;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.ResetRandomPool
// Flags: 
struct UStreamPlaylist_execResetRandomPool_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.StreamPlaylist.GetRandomSong
// Flags: 
struct UStreamPlaylist_execGetRandomSong_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                idx;                                              		// 0x000C ( 0x0004
//	class UStream*                                     RandomStream;                                     		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylist.ClearPlaylist
// Flags: 
struct UStreamPlaylist_execClearPlaylist_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.ReplaceWith
// Flags: 
struct UStreamPlaylist_execReplaceWith_Parms
{
	class UStreamPlaylist*                             Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.StreamPlaylist.PrevSong
// Flags: 
struct UStreamPlaylist_execPrevSong_Parms
{
	unsigned long                                      bMayRepeat:1;                                     		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylist.NextSong
// Flags: 
struct UStreamPlaylist_execNextSong_Parms
{
	unsigned long                                      bMayRepeat:1;                                     		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0004 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.StreamPlaylist.RemoveSongAt
// Flags: 
struct UStreamPlaylist_execRemoveSongAt_Parms
{
	int                                                idx;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bSkipNotification:1;                              		// 0x0004 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0008 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.StreamPlaylist.RemoveSong
// Flags: 
struct UStreamPlaylist_execRemoveSong_Parms
{
	struct FString                                     SongFileName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bSkipNotification:1;                              		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0010 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.InsertSong
// Flags: 
struct UStreamPlaylist_execInsertSong_Parms
{
	int                                                idx;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FString                                     Path;                                             		// 0x0004 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bSkipNotification:1;                              		// 0x0010 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0014 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UStream*                                     NewStream;                                        		// 0x0018 ( 0x0004
//	unsigned char                                      Type;                                             		// 0x001C ( 0x0001
//	int                                                i;                                                		// 0x0020 ( 0x0004
};

// Function Engine.StreamPlaylist.AddStream
// Flags: 
struct UStreamPlaylist_execAddStream_Parms
{
	int                                                Index;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class UStream*                                     NewStream;                                        		// 0x0004 ( 0x0004[ CPF_Parm ]
	unsigned long                                      bSkipNotification:1;                              		// 0x0008 ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0010 ( 0x0004
//	struct FString                                     str;                                              		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.StreamPlaylist.AddSong
// Flags: 
struct UStreamPlaylist_execAddSong_Parms
{
	struct FString                                     SongFileName;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bSkipNotification:1;                              		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	int                                                ReturnValue;                                      		// 0x0010 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class UStream*                                     NewStream;                                        		// 0x0014 ( 0x0004
//	unsigned char                                      Type;                                             		// 0x0018 ( 0x0001
//	int                                                i;                                                		// 0x001C ( 0x0004
};

// Function Engine.StreamPlaylist.CreateStream
// Flags: 
struct UStreamPlaylist_execCreateStream_Parms
{
	struct FString                                     fileName;                                         		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	class UStream*                                     ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.LoadPlaylist
// Flags: 
struct UStreamPlaylist_execLoadPlaylist_Parms
{
	unsigned long                                      ReturnValue:1;                                    		// 0x0000 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.StreamPlaylist.InitializePlaylist
// Flags: 
struct UStreamPlaylist_execInitializePlaylist_Parms
{
	class UStreamInterface*                            InManager;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.StreamPlaylist.OnPlaylistChanged
// Flags: 
struct UStreamPlaylist_execOnPlaylistChanged_Parms
{
};

// Function Engine.PlaylistParserBase.HtmlDecode
// Flags: 
struct UPlaylistParserBase_execHtmlDecode_Parms
{
	struct FString                                     Src;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
};

// Function Engine.PlaylistParserBase.GetTagged
// Flags: 
struct UPlaylistParserBase_execGetTagged_Parms
{
	struct FString                                     Text;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	struct FString                                     Tag;                                              		// 0x0018 ( 0x000C[ CPF_NeedCtorLink ]
//	int                                                opos;                                             		// 0x0024 ( 0x0004
//	int                                                cpos;                                             		// 0x0028 ( 0x0004
};

// Function Engine.PlaylistParserBase.GetValue
// Flags: 
struct UPlaylistParserBase_execGetValue_Parms
{
	struct FString                                     KeyValuePair;                                     		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      bAllowSpaces:1;                                   		// 0x000C ( 0x0004 [0x00000001][ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x001C ( 0x0004
//	struct FString                                     str;                                              		// 0x0020 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.PlaylistParserBase.ParseLines
// Flags: 
struct UPlaylistParserBase_execParseLines_Parms
{
};

// Function Engine.PlaylistParserBase.ImportedPlaylist
// Flags: 
struct UPlaylistParserBase_execImportedPlaylist_Parms
{
	int                                                PlaylistIndex;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                InsertPosition;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	class UStreamPlaylist*                             Playlist;                                         		// 0x0008 ( 0x0004
	int                                                i;                                                		// 0x000C ( 0x0004
};

// Function Engine.PlaylistParserBase.Import
// Flags: 
struct UPlaylistParserBase_execImport_Parms
{
	int                                                PlaylistIndex;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                InsertPosition;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Path;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PlaylistParserBase.SetType
// Flags: 
struct UPlaylistParserBase_execSetType_Parms
{
	unsigned char                                      InType;                                           		// 0x0000 ( 0x0001[ CPF_Parm ]
};

// Function Engine.PlaylistParserBase.GetType
// Flags: 
struct UPlaylistParserBase_execGetType_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x0000 ( 0x0001[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.ZoneTrigger.UnTouch
// Flags: 
struct AZoneTrigger_execUnTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AZoneInfo*                                   Z;                                                		// 0x0004 ( 0x0004
};

// Function Engine.ZoneTrigger.Touch
// Flags: 
struct AZoneTrigger_execTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AZoneInfo*                                   Z;                                                		// 0x0004 ( 0x0004
};

// Function Engine.wMessage_NoWeapon.ClientReceive
// Flags: [ FUNC_Simulated ]
struct AwMessage_NoWeapon_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     S;                                                		// 0x0014 ( 0x000C[ CPF_NeedCtorLink ]
	class UwWeaponBaseParams*                          resParam;                                         		// 0x0020 ( 0x0004
};

// Function Engine.wMessage_NoWeapon.GetString
// Flags: 
struct AwMessage_NoWeapon_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.Effect_ShadowController.SunLightDirectionUpdate
// Flags: [ FUNC_Simulated ]
struct AEffect_ShadowController_execSunLightDirectionUpdate_Parms
{
	struct FVector                                     direction;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.Effect_ShadowController.Destroyed
// Flags: 
struct AEffect_ShadowController_execDestroyed_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.Effect_ShadowController.SpawnShadow
// Flags: 
struct AEffect_ShadowController_execSpawnShadow_Parms
{
	struct FRotator                                    LightRotation;                                    		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AEffect_ShadowProjector*                     ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AEffect_ShadowProjector*                     NewShadow;                                        		// 0x0010 ( 0x0004
};

// Function Engine.Effect_ShadowController.UpdateShadows
// Flags: 
struct AEffect_ShadowController_execUpdateShadows_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                i;                                                		// 0x0004 ( 0x0004
};

// Function Engine.Effect_ShadowController.Tick
// Flags: 
struct AEffect_ShadowController_execTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Effect_ShadowController.IsVisible
// Flags: 
struct AEffect_ShadowController_execIsVisible_Parms
{
	struct FVector                                     loc;                                              		// 0x0000 ( 0x000C[ CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x000C ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FVector                                     FootLocation;                                     		// 0x0010 ( 0x000C
};

// Function Engine.Effect_ShadowController.LightPriority
// Flags: 
struct AEffect_ShadowController_execLightPriority_Parms
{
	float                                              Brightness;                                       		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              Radius;                                           		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              Distance;                                         		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	float                                              Priority;                                         		// 0x0010 ( 0x0004
};

// Function Engine.Effect_ShadowController.FillLights
// Flags: 
struct AEffect_ShadowController_execFillLights_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                j;                                                		// 0x0004 ( 0x0004
	class TArray< class AActor* >                      OrigLight;                                        		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
	float                                              diff;                                             		// 0x0014 ( 0x0004
	struct FVector                                     SunLoc;                                           		// 0x0018 ( 0x000C
};

// Function Engine.Effect_ShadowController.Timer
// Flags: 
struct AEffect_ShadowController_execTimer_Parms
{
};

// Function Engine.Effect_ShadowController.Initialize
// Flags: 
struct AEffect_ShadowController_execInitialize_Parms
{
	class ALight*                                      LightActor;                                       		// 0x0000 ( 0x0004
	class TArray< class ALight* >                      SunLights;                                        		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
	int                                                i;                                                		// 0x0010 ( 0x0004
};

// Function Engine.Effect_ShadowProjector.Destroyed
// Flags: 
struct AEffect_ShadowProjector_execDestroyed_Parms
{
};

// Function Engine.Effect_ShadowProjector.UpdateShadow
// Flags: 
struct AEffect_ShadowProjector_execUpdateShadow_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                LN;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AEffect_ShadowController*                    ShadowController;                                 		// 0x0008 ( 0x0004[ CPF_Parm ]
	struct FPlane                                      BoundingSphere;                                   		// 0x000C ( 0x0010
	class AActor*                                      ShadowLight;                                      		// 0x001C ( 0x0004
	struct FVector                                     diff;                                             		// 0x0020 ( 0x000C
	struct FVector                                     ShadowLocation;                                   		// 0x002C ( 0x000C
	struct FVector                                     Origin;                                           		// 0x0038 ( 0x000C
	struct FRotator                                    LightRotation;                                    		// 0x0044 ( 0x000C
	struct FRotator                                    AdjustedRotation;                                 		// 0x0050 ( 0x000C
	float                                              Interpolation;                                    		// 0x005C ( 0x0004
	unsigned long                                      bFadeOut:1;                                       		// 0x0060 ( 0x0004 [0x00000001]
};

// Function Engine.Effect_ShadowProjector.InitializeFor
// Flags: 
struct AEffect_ShadowProjector_execInitializeFor_Parms
{
	class AEffect_ShadowController*                    ShadowController;                                 		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Effect_ShadowProjector.DisableShadow
// Flags: 
struct AEffect_ShadowProjector_execDisableShadow_Parms
{
};

// Function Engine.Effect_ShadowProjector.Tick
// Flags: 
struct AEffect_ShadowProjector_execTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.Effect_ShadowProjector.PostBeginPlay
// Flags: 
struct AEffect_ShadowProjector_execPostBeginPlay_Parms
{
};

// Function Engine.wRocket.wLoadOut
// Flags: [ FUNC_Simulated ]
struct AwRocket_execwLoadOut_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wRocket.Tick
// Flags: [ FUNC_Simulated ]
struct AwRocket_execTick_Parms
{
	float                                              DeltaTime;                                        		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wRocket.Explode
// Flags: [ FUNC_Simulated ]
struct AwRocket_execExplode_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     HitNormal;                                        		// 0x000C ( 0x000C[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0018 ( 0x0004
};

// Function Engine.wRocket.HitWall
// Flags: [ FUNC_Simulated ]
struct AwRocket_execHitWall_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
	class AActor*                                      Wall;                                             		// 0x000C ( 0x0004[ CPF_Parm ]
	class UMaterial*                                   HitMaterial;                                      		// 0x0010 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wRocket.ProcessTouch
// Flags: [ FUNC_Simulated ]
struct AwRocket_execProcessTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FVector                                     HitLocation;                                      		// 0x0004 ( 0x000C[ CPF_Parm ]
};

// Function Engine.wRocket.Landed
// Flags: [ FUNC_Simulated ]
struct AwRocket_execLanded_Parms
{
	struct FVector                                     HitNormal;                                        		// 0x0000 ( 0x000C[ CPF_Parm ]
};

// Function Engine.wRocket.PostNetBeginPlay
// Flags: [ FUNC_Simulated ]
struct AwRocket_execPostNetBeginPlay_Parms
{
	class APlayerController*                           PC;                                               		// 0x0000 ( 0x0004
};

// Function Engine.wRocket.SetSpeed
// Flags: 
struct AwRocket_execSetSpeed_Parms
{
	float                                              fSpeed;                                           		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wRocket.Destroyed
// Flags: [ FUNC_Simulated ]
struct AwRocket_execDestroyed_Parms
{
};

// Function Engine.BGMTable.GetDuration
// Flags: 
struct UBGMTable_execGetDuration_Parms
{
	struct FString                                     File;                                             		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	int                                                ReturnValue;                                      		// 0x000C ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	int                                                lp1;                                              		// 0x0010 ( 0x0004
};

// Function Engine.wMessage_Game_Mode.ClientReceive
// Flags: [ FUNC_Simulated ]
struct AwMessage_Game_Mode_execClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wMessage_Game_Mode.GetString
// Flags: 
struct AwMessage_Game_Mode_execGetString_Parms
{
	int                                                Switch;                                           		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	struct FString                                     ReturnValue;                                      		// 0x0010 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
};

// Function Engine.wMessage_Game_Mode.GotoBTConsole
// Flags: 
struct AwMessage_Game_Mode_execGotoBTConsole_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMessage_Game_Mode.GotoHud
// Flags: 
struct AwMessage_Game_Mode_execGotoHud_Parms
{
	class APlayerController*                           P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Switch;                                           		// 0x0004 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_1;                                     		// 0x0008 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class APlayerReplicationInfo*                      RelatedPRI_2;                                     		// 0x000C ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	class UObject*                                     OptionalObject;                                   		// 0x0010 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WinBox.H
// Flags: 
struct UWinBox_execH_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WinBox.W
// Flags: 
struct UWinBox_execW_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WinBox.Y
// Flags: 
struct UWinBox_execY_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WinBox.X
// Flags: 
struct UWinBox_execX_Parms
{
	float                                              ReturnValue;                                      		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.WinFrameChanger.WinBoxToFloatBoxWH_OUT
// Flags: 
struct UWinFrameChanger_execWinBoxToFloatBoxWH_OUT_Parms
{
	class UWinBox*                                     B;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FFloatBoxWH                                 fb;                                               		// 0x0004 ( 0x0010[ CPF_Parm | CPF_OutParm ]
};

// Function Engine.WinFrameChanger.WinBoxToFloatBoxWH
// Flags: 
struct UWinFrameChanger_execWinBoxToFloatBoxWH_Parms
{
	class UWinBox*                                     B;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	struct FFloatBoxWH                                 ReturnValue;                                      		// 0x0004 ( 0x0010[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	struct FFloatBoxWH                                 fb;                                               		// 0x0014 ( 0x0010
};

// Function Engine.WinFrameChanger.SetFrameByFloatBox
// Flags: 
struct UWinFrameChanger_execSetFrameByFloatBox_Parms
{
	struct FFloatBox                                   B;                                                		// 0x0000 ( 0x0010[ CPF_Parm ]
};

// Function Engine.WinFrameChanger.SetFrame
// Flags: 
struct UWinFrameChanger_execSetFrame_Parms
{
	float                                              nx;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
	float                                              ny;                                               		// 0x0004 ( 0x0004[ CPF_Parm ]
	float                                              nw;                                               		// 0x0008 ( 0x0004[ CPF_Parm ]
	float                                              nh;                                               		// 0x000C ( 0x0004[ CPF_Parm ]
};

// Function Engine.wProjectileFire.GetFireStart
// Flags: [ FUNC_Simulated ]
struct UwProjectileFire_execGetFireStart_Parms
{
	struct FVector                                     X;                                                		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     Y;                                                		// 0x000C ( 0x000C[ CPF_Parm ]
	struct FVector                                     Z;                                                		// 0x0018 ( 0x000C[ CPF_Parm ]
	struct FVector                                     ReturnValue;                                      		// 0x0024 ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wProjectileFire.SpawnProjectile
// Flags: 
struct UwProjectileFire_execSpawnProjectile_Parms
{
	struct FVector                                     Start;                                            		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    Dir;                                              		// 0x000C ( 0x000C[ CPF_Parm ]
	class AwProjectile*                                ReturnValue;                                      		// 0x0018 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwProjectile*                                P;                                                		// 0x001C ( 0x0004
};

// Function Engine.wProjectileFire.DoFireEffect
// Flags: 
struct UwProjectileFire_execDoFireEffect_Parms
{
	struct FVector                                     StartProj;                                        		// 0x0000 ( 0x000C
	struct FVector                                     StartTrace;                                       		// 0x000C ( 0x000C
	struct FVector                                     X;                                                		// 0x0018 ( 0x000C
	struct FVector                                     Y;                                                		// 0x0024 ( 0x000C
	struct FVector                                     Z;                                                		// 0x0030 ( 0x000C
	struct FRotator                                    R;                                                		// 0x003C ( 0x000C
	struct FRotator                                    Aim;                                              		// 0x0048 ( 0x000C
	struct FVector                                     HitLocation;                                      		// 0x0054 ( 0x000C
	struct FVector                                     HitNormal;                                        		// 0x0060 ( 0x000C
	class AActor*                                      Other;                                            		// 0x006C ( 0x0004
	int                                                P;                                                		// 0x0070 ( 0x0004
	int                                                SpawnCount;                                       		// 0x0074 ( 0x0004
	float                                              theta;                                            		// 0x0078 ( 0x0004
};

// Function Engine.B4SParser.ParseLines
// Flags: 
struct UB4SParser_execParseLines_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	int                                                pos;                                              		// 0x0004 ( 0x0004
	struct FString                                     str;                                              		// 0x0008 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.M3UParser.MatchPath
// Flags: 
struct UM3UParser_execMatchPath_Parms
{
	struct FString                                     str;                                              		// 0x0000 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	struct FString                                     ReturnValue;                                      		// 0x000C ( 0x000C[ CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink ]
//	int                                                i;                                                		// 0x0018 ( 0x0004
//	class TArray< struct FString >                     Parts;                                            		// 0x001C ( 0x000C[ CPF_NeedCtorLink ]
//	struct FString                                     Result;                                           		// 0x0028 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.M3UParser.ParseLines
// Flags: 
struct UM3UParser_execParseLines_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
	struct FString                                     str;                                              		// 0x0004 ( 0x000C[ CPF_NeedCtorLink ]
};

// Function Engine.M3UParser.Import
// Flags: 
struct UM3UParser_execImport_Parms
{
	int                                                PlaylistIndex;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                InsertPosition;                                   		// 0x0004 ( 0x0004[ CPF_Parm ]
	struct FString                                     Path;                                             		// 0x0008 ( 0x000C[ CPF_Parm | CPF_NeedCtorLink ]
	unsigned long                                      ReturnValue:1;                                    		// 0x0014 ( 0x0004 [0x00000001][ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.PLSParser.ParseLines
// Flags: 
struct UPLSParser_execParseLines_Parms
{
	int                                                i;                                                		// 0x0000 ( 0x0004
};

// Function Engine.EAXSoundVolume.Touch
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AEAXSoundVolume_eventTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.EAXSoundVolume.PawnLeavingVolume
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AEAXSoundVolume_eventPawnLeavingVolume_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.EAXSoundVolume.PawnEnteredVolume
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AEAXSoundVolume_eventPawnEnteredVolume_Parms
{
	class APawn*                                       P;                                                		// 0x0000 ( 0x0004[ CPF_Parm ]
	class APlayerController*                           PC;                                               		// 0x0004 ( 0x0004
};

// Function Engine.ClientMover.PostBeginPlay
// Flags: 
struct AClientMover_execPostBeginPlay_Parms
{
};

// Function Engine.wC4Explosive.Explode2
// Flags: [ FUNC_Simulated ]
struct AwC4Explosive_execExplode2_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     HitNormal;                                        		// 0x000C ( 0x000C[ CPF_Parm ]
	class AActor*                                      A;                                                		// 0x0018 ( 0x0004
};

// Function Engine.wC4Explosive.Explode
// Flags: [ FUNC_Simulated ]
struct AwC4Explosive_execExplode_Parms
{
	struct FVector                                     HitLocation;                                      		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FVector                                     HitNormal;                                        		// 0x000C ( 0x000C[ CPF_Parm ]
};

// Function Engine.wC4Explosive.Touch
// Flags: [ FUNC_Simulated ]
struct AwC4Explosive_execTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wC4Explosive.Reset
// Flags: 
struct AwC4Explosive_execReset_Parms
{
};

// Function Engine.wC4Explosive.OnEndRound
// Flags: 
struct AwC4Explosive_execOnEndRound_Parms
{
};

// Function Engine.wC4Explosive.OnBeginRound
// Flags: 
struct AwC4Explosive_execOnBeginRound_Parms
{
};

// Function Engine.wC4Explosive.Go
// Flags: [ FUNC_Simulated ]
struct AwC4Explosive_execGo_Parms
{
};

// Function Engine.wC4Explosive.Destroyed
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwC4Explosive_eventDestroyed_Parms
{
};

// Function Engine.wC4Explosive.PostNetBeginPlay
// Flags: [ FUNC_Simulated ]
struct AwC4Explosive_execPostNetBeginPlay_Parms
{
};

// Function Engine.wC4Explosive.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct AwC4Explosive_execPostBeginPlay_Parms
{
};

// Function Engine.wMeleeWeapon.ServerMeleeFire
// Flags: 
struct AwMeleeWeapon_execServerMeleeFire_Parms
{
};

// Function Engine.wMeleeWeapon.ClientMeleeFire
// Flags: [ FUNC_Simulated ]
struct AwMeleeWeapon_execClientMeleeFire_Parms
{
};

// Function Engine.wMeleeWeapon.ActiveMeleeDelay
// Flags: [ FUNC_Simulated ]
struct AwMeleeWeapon_execActiveMeleeDelay_Parms
{
	struct FName                                       szAnim;                                           		// 0x0000 ( 0x0004
	float                                              fFrame;                                           		// 0x0004 ( 0x0004
	float                                              fRate;                                            		// 0x0008 ( 0x0004
};

// Function Engine.wMeleeWeapon.WeaponTick
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwMeleeWeapon_eventWeaponTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMeleeWeapon.RecommendWeapon
// Flags: [ FUNC_Simulated ]
struct AwMeleeWeapon_execRecommendWeapon_Parms
{
	float                                              rating;                                           		// 0x0000 ( 0x0004[ CPF_Parm | CPF_OutParm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0004 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
//	class AwWeapon*                                    Recommended;                                      		// 0x0008 ( 0x0004
//	float                                              oldRating;                                        		// 0x000C ( 0x0004
};

// Function Engine.wMeleeWeapon.NextWeapon
// Flags: [ FUNC_Simulated ]
struct AwMeleeWeapon_execNextWeapon_Parms
{
	class AwWeapon*                                    CurrentChoice;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    CurrentWeapon;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMeleeWeapon.PrevWeapon
// Flags: [ FUNC_Simulated ]
struct AwMeleeWeapon_execPrevWeapon_Parms
{
	class AwWeapon*                                    CurrentChoice;                                    		// 0x0000 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    CurrentWeapon;                                    		// 0x0004 ( 0x0004[ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMeleeWeapon.WeaponChange
// Flags: [ FUNC_Simulated ]
struct AwMeleeWeapon_execWeaponChange_Parms
{
	unsigned char                                      f;                                                		// 0x0000 ( 0x0001[ CPF_Parm ]
	unsigned long                                      bSilent:1;                                        		// 0x0004 ( 0x0004 [0x00000001][ CPF_Parm ]
	class AwWeapon*                                    ReturnValue;                                      		// 0x0008 ( 0x0004[ CPF_Parm | CPF_OutParm | CPF_ReturnParm ]
};

// Function Engine.wMeleeWeapon.SetBaseParams
// Flags: [ FUNC_Simulated ]
struct AwMeleeWeapon_execSetBaseParams_Parms
{
	class UwWeaponBaseParams*                          wBase;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wMeleeWeapon.AnimEnd
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwMeleeWeapon_eventAnimEnd_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                Mode;                                             		// 0x0004 ( 0x0004
	unsigned long                                      bNoWeapon:1;                                      		// 0x0008 ( 0x0004 [0x00000001]
};

// Function Engine.wMeleeWeapon.BringUp
// Flags: [ FUNC_Simulated ]
struct AwMeleeWeapon_execBringUp_Parms
{
	class AwWeapon*                                    PrevWeapon;                                       		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wKnife.ServerMeleeFire
// Flags: 
struct AwKnife_execServerMeleeFire_Parms
{
};

// Function Engine.wKnife.ClientMeleeFire
// Flags: [ FUNC_Simulated ]
struct AwKnife_execClientMeleeFire_Parms
{
};

// Function Engine.wKnife.ActiveMeleeDelay
// Flags: [ FUNC_Simulated ]
struct AwKnife_execActiveMeleeDelay_Parms
{
	struct FName                                       szAnim;                                           		// 0x0000 ( 0x0004
	float                                              fFrame;                                           		// 0x0004 ( 0x0004
	float                                              fRate;                                            		// 0x0008 ( 0x0004
};

// Function Engine.wKnife.WeaponTick
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwKnife_eventWeaponTick_Parms
{
	float                                              dt;                                               		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wKnife.DropFrom
// Flags: 
struct AwKnife_execDropFrom_Parms
{
	struct FVector                                     StartLocation;                                    		// 0x0000 ( 0x000C[ CPF_Parm ]
	struct FRotator                                    StartRotation;                                    		// 0x000C ( 0x000C[ CPF_Parm ]
};

// Function Engine.wKnife.ForcePlayIdle
// Flags: [ FUNC_Simulated ]
struct AwKnife_execForcePlayIdle_Parms
{
};

// Function Engine.wKnife.AnimEnd
// Flags: [ FUNC_Simulated | FUNC_Event ]
struct AwKnife_eventAnimEnd_Parms
{
	int                                                Channel;                                          		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wKnife.BringUp
// Flags: [ FUNC_Simulated ]
struct AwKnife_execBringUp_Parms
{
	class AwWeapon*                                    PrevWeapon;                                       		// 0x0000 ( 0x0004[ CPF_OptionalParm | CPF_Parm ]
};

// Function Engine.wKnife.SetBaseParams
// Flags: [ FUNC_Simulated ]
struct AwKnife_execSetBaseParams_Parms
{
	class UwWeaponBaseParams*                          wBase;                                            		// 0x0000 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wKnife.wLoadOut
// Flags: [ FUNC_Simulated ]
struct AwKnife_execwLoadOut_Parms
{
	int                                                iID;                                              		// 0x0000 ( 0x0004[ CPF_Parm ]
	int                                                iAddPartsID;                                      		// 0x0004 ( 0x0004[ CPF_Parm ]
};

// Function Engine.wKnifeFire.PlayFiring
// Flags: 
struct UwKnifeFire_execPlayFiring_Parms
{
};

// Function Engine.wKnifeFire.SetFireAnim
// Flags: [ FUNC_Simulated ]
struct UwKnifeFire_execSetFireAnim_Parms
{
};

// Function Engine.wSkill_QuickDemolition.RemoveSkill
// Flags: [ FUNC_Simulated ]
struct UwSkill_QuickDemolition_execRemoveSkill_Parms
{
};

// Function Engine.wSkill_QuickDemolition.PostBeginPlay
// Flags: [ FUNC_Simulated ]
struct UwSkill_QuickDemolition_execPostBeginPlay_Parms
{
};

// Function Engine.EmitterThirdPerson.PostNetBeginPlay
// Flags: [ FUNC_Event ]
struct AEmitterThirdPerson_eventPostNetBeginPlay_Parms
{
};

// Function Engine.EmitterThirdPerson.DestroyIfFirstPerson
// Flags: [ FUNC_Simulated ]
struct AEmitterThirdPerson_execDestroyIfFirstPerson_Parms
{
};

#ifdef _MSC_VER
#pragma pack ( pop )
#endif

