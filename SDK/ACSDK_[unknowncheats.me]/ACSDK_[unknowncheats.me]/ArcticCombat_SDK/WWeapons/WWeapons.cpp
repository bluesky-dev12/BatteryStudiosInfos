#include "stdafx.h"
/*
# ======================================================================================== #
# > ArcticCombat SDK
# > Generated By HJSdkGen v1.06b
# ---------------------------------------------------------------------------------------- #
# > Package : WWeapons
# >    File : Code.cpp
# ======================================================================================== #
*/

/*void AwAirStrikeProj::wLoadOut ( int iID )
{
	static UFunction* pwLoadOut = 0;
	AwAirStrikeProj_execwLoadOut_Parms parms;

	if ( !pwLoadOut )
		pwLoadOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wAirStrikeProj.wLoadOut" );

	parms.iID = iID;
	this->ProcessEvent ( pwLoadOut, &parms, NULL );

}*/

/*void AwAirStrikeProj::IncreaseBombCnt (  )
{
	static UFunction* pIncreaseBombCnt = 0;
	AwAirStrikeProj_execIncreaseBombCnt_Parms parms;

	if ( !pIncreaseBombCnt )
		pIncreaseBombCnt = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wAirStrikeProj.IncreaseBombCnt" );

	this->ProcessEvent ( pIncreaseBombCnt, &parms, NULL );

}*/

/*void AwAirStrikeProj::ForceBegin (  )
{
	static UFunction* pForceBegin = 0;
	AwAirStrikeProj_execForceBegin_Parms parms;

	if ( !pForceBegin )
		pForceBegin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wAirStrikeProj.ForceBegin" );

	this->ProcessEvent ( pForceBegin, &parms, NULL );

}*/

/*class AwProjectile* AwAirStrikeProj::SpawnProjectile ( struct FVector Start, struct FRotator Dir )
{
	static UFunction* pSpawnProjectile = 0;
	AwAirStrikeProj_execSpawnProjectile_Parms parms;

	if ( !pSpawnProjectile )
		pSpawnProjectile = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wAirStrikeProj.SpawnProjectile" );

	parms.Start = Start;
	parms.Dir = Dir;
	this->ProcessEvent ( pSpawnProjectile, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwAirStrikeProj::SpawnBomb (  )
{
	static UFunction* pSpawnBomb = 0;
	AwAirStrikeProj_execSpawnBomb_Parms parms;

	if ( !pSpawnBomb )
		pSpawnBomb = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wAirStrikeProj.SpawnBomb" );

	this->ProcessEvent ( pSpawnBomb, &parms, NULL );

}*/

/*void AwAirStrikeProj::eventDestroyed (  )
{
	static UFunction* pDestroyed = 0;
	AwAirStrikeProj_eventDestroyed_Parms parms;

	if ( !pDestroyed )
		pDestroyed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wAirStrikeProj.Destroyed" );

	this->ProcessEvent ( pDestroyed, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::DisplayDebug ( class UCanvas* Canvas, float* YL, float* YPos )
{
	static UFunction* pDisplayDebug = 0;
	AwWeapon_Turret_FNM240_execDisplayDebug_Parms parms;

	if ( !pDisplayDebug )
		pDisplayDebug = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.DisplayDebug" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pDisplayDebug, &parms, NULL );

	*YL = parms.YL;
	*YPos = parms.YPos;
}*/

/*void AwWeapon_Turret_FNM240::eventRenderOverlays ( class UCanvas* Canvas )
{
	static UFunction* pRenderOverlays = 0;
	AwWeapon_Turret_FNM240_eventRenderOverlays_Parms parms;

	if ( !pRenderOverlays )
		pRenderOverlays = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.RenderOverlays" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pRenderOverlays, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::eventTimer (  )
{
	static UFunction* pTimer = 0;
	AwWeapon_Turret_FNM240_eventTimer_Parms parms;

	if ( !pTimer )
		pTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.Timer" );

	this->ProcessEvent ( pTimer, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::OverHeatDown (  )
{
	static UFunction* pOverHeatDown = 0;
	AwWeapon_Turret_FNM240_execOverHeatDown_Parms parms;

	if ( !pOverHeatDown )
		pOverHeatDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.OverHeatDown" );

	this->ProcessEvent ( pOverHeatDown, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::OverHeatUp (  )
{
	static UFunction* pOverHeatUp = 0;
	AwWeapon_Turret_FNM240_execOverHeatUp_Parms parms;

	if ( !pOverHeatUp )
		pOverHeatUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.OverHeatUp" );

	this->ProcessEvent ( pOverHeatUp, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::BringUp ( class AwWeapon* PrevWeapon )
{
	static UFunction* pBringUp = 0;
	AwWeapon_Turret_FNM240_execBringUp_Parms parms;

	if ( !pBringUp )
		pBringUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.BringUp" );

	parms.PrevWeapon = PrevWeapon;
	this->ProcessEvent ( pBringUp, &parms, NULL );

}*/

/*bool AwWeapon_Turret_FNM240::HasAmmo (  )
{
	static UFunction* pHasAmmo = 0;
	AwWeapon_Turret_FNM240_execHasAmmo_Parms parms;

	if ( !pHasAmmo )
		pHasAmmo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.HasAmmo" );

	this->ProcessEvent ( pHasAmmo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*unsigned char AwWeapon_Turret_FNM240::BestMode (  )
{
	static UFunction* pBestMode = 0;
	AwWeapon_Turret_FNM240_execBestMode_Parms parms;

	if ( !pBestMode )
		pBestMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.BestMode" );

	this->ProcessEvent ( pBestMode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwWeapon_Turret_FNM240::PawnUnpossessed (  )
{
	static UFunction* pPawnUnpossessed = 0;
	AwWeapon_Turret_FNM240_execPawnUnpossessed_Parms parms;

	if ( !pPawnUnpossessed )
		pPawnUnpossessed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.PawnUnpossessed" );

	this->ProcessEvent ( pPawnUnpossessed, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::AttachToPawn ( class APawn* P )
{
	static UFunction* pAttachToPawn = 0;
	AwWeapon_Turret_FNM240_execAttachToPawn_Parms parms;

	if ( !pAttachToPawn )
		pAttachToPawn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.AttachToPawn" );

	parms.P = P;
	this->ProcessEvent ( pAttachToPawn, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::wLoadOut ( int iID, int iAddPartsID )
{
	static UFunction* pwLoadOut = 0;
	AwWeapon_Turret_FNM240_execwLoadOut_Parms parms;

	if ( !pwLoadOut )
		pwLoadOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.wLoadOut" );

	parms.iID = iID;
	parms.iAddPartsID = iAddPartsID;
	this->ProcessEvent ( pwLoadOut, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::SetResParams ( class UClass* wRes )
{
	static UFunction* pSetResParams = 0;
	AwWeapon_Turret_FNM240_execSetResParams_Parms parms;

	if ( !pSetResParams )
		pSetResParams = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.SetResParams" );

	parms.wRes = wRes;
	this->ProcessEvent ( pSetResParams, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::eventPostNetBeginPlay (  )
{
	static UFunction* pPostNetBeginPlay = 0;
	AwWeapon_Turret_FNM240_eventPostNetBeginPlay_Parms parms;

	if ( !pPostNetBeginPlay )
		pPostNetBeginPlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.PostNetBeginPlay" );

	this->ProcessEvent ( pPostNetBeginPlay, &parms, NULL );

}*/

/*void AwWeapon_Turret_FNM240::PostBeginPlay (  )
{
	static UFunction* pPostBeginPlay = 0;
	AwWeapon_Turret_FNM240_execPostBeginPlay_Parms parms;

	if ( !pPostBeginPlay )
		pPostBeginPlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wWeapon_Turret_FNM240.PostBeginPlay" );

	this->ProcessEvent ( pPostBeginPlay, &parms, NULL );

}*/

/*bool AwRocketLauncher::IsCanUseWeapon (  )
{
	static UFunction* pIsCanUseWeapon = 0;
	AwRocketLauncher_execIsCanUseWeapon_Parms parms;

	if ( !pIsCanUseWeapon )
		pIsCanUseWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.IsCanUseWeapon" );

	this->ProcessEvent ( pIsCanUseWeapon, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool AwRocketLauncher::IsATR (  )
{
	static UFunction* pIsATR = 0;
	AwRocketLauncher_execIsATR_Parms parms;

	if ( !pIsATR )
		pIsATR = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.IsATR" );

	this->ProcessEvent ( pIsATR, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool AwRocketLauncher::IsRPG (  )
{
	static UFunction* pIsRPG = 0;
	AwRocketLauncher_execIsRPG_Parms parms;

	if ( !pIsRPG )
		pIsRPG = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.IsRPG" );

	this->ProcessEvent ( pIsRPG, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwRocketLauncher::AnimEnd ( int Channel )
{
	static UFunction* pAnimEnd = 0;
	AwRocketLauncher_execAnimEnd_Parms parms;

	if ( !pAnimEnd )
		pAnimEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.AnimEnd" );

	parms.Channel = Channel;
	this->ProcessEvent ( pAnimEnd, &parms, NULL );

}*/

/*void AwRocketLauncher::ServerDoFire (  )
{
	static UFunction* pServerDoFire = 0;
	AwRocketLauncher_execServerDoFire_Parms parms;

	if ( !pServerDoFire )
		pServerDoFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.ServerDoFire" );

	this->ProcessEvent ( pServerDoFire, &parms, NULL );

}*/

/*void AwRocketLauncher::ServerDestroy (  )
{
	static UFunction* pServerDestroy = 0;
	AwRocketLauncher_execServerDestroy_Parms parms;

	if ( !pServerDestroy )
		pServerDestroy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.ServerDestroy" );

	this->ProcessEvent ( pServerDestroy, &parms, NULL );

}*/

/*void AwRocketLauncher::eventStopFire ( int Mode )
{
	static UFunction* pStopFire = 0;
	AwRocketLauncher_eventStopFire_Parms parms;

	if ( !pStopFire )
		pStopFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.StopFire" );

	parms.Mode = Mode;
	this->ProcessEvent ( pStopFire, &parms, NULL );

}*/

/*void AwRocketLauncher::eventWeaponTick ( float dt )
{
	static UFunction* pWeaponTick = 0;
	AwRocketLauncher_eventWeaponTick_Parms parms;

	if ( !pWeaponTick )
		pWeaponTick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.WeaponTick" );

	parms.dt = dt;
	this->ProcessEvent ( pWeaponTick, &parms, NULL );

}*/

/*bool AwRocketLauncher::HasAmmoRocket (  )
{
	static UFunction* pHasAmmoRocket = 0;
	AwRocketLauncher_execHasAmmoRocket_Parms parms;

	if ( !pHasAmmoRocket )
		pHasAmmoRocket = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.HasAmmoRocket" );

	this->ProcessEvent ( pHasAmmoRocket, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwRocketLauncher::Destroyed (  )
{
	static UFunction* pDestroyed = 0;
	AwRocketLauncher_execDestroyed_Parms parms;

	if ( !pDestroyed )
		pDestroyed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.Destroyed" );

	this->ProcessEvent ( pDestroyed, &parms, NULL );

}*/

/*bool AwRocketLauncher::PutDown (  )
{
	static UFunction* pPutDown = 0;
	AwRocketLauncher_execPutDown_Parms parms;

	if ( !pPutDown )
		pPutDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.PutDown" );

	this->ProcessEvent ( pPutDown, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool AwRocketLauncher::Reload (  )
{
	static UFunction* pReload = 0;
	AwRocketLauncher_execReload_Parms parms;

	if ( !pReload )
		pReload = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.Reload" );

	this->ProcessEvent ( pReload, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwRocketLauncher::FireOne ( int iFireMode )
{
	static UFunction* pFireOne = 0;
	AwRocketLauncher_execFireOne_Parms parms;

	if ( !pFireOne )
		pFireOne = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.FireOne" );

	parms.iFireMode = iFireMode;
	this->ProcessEvent ( pFireOne, &parms, NULL );

}*/

/*void AwRocketLauncher::AttWarhead ( bool bAttOrDtt )
{
	static UFunction* pAttWarhead = 0;
	AwRocketLauncher_execAttWarhead_Parms parms;

	if ( !pAttWarhead )
		pAttWarhead = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.AttWarhead" );

	parms.bAttOrDtt = bAttOrDtt;
	this->ProcessEvent ( pAttWarhead, &parms, NULL );

}*/

/*void AwRocketLauncher::LoadWarhead ( class UStaticMesh* stProj )
{
	static UFunction* pLoadWarhead = 0;
	AwRocketLauncher_execLoadWarhead_Parms parms;

	if ( !pLoadWarhead )
		pLoadWarhead = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.LoadWarhead" );

	parms.stProj = stProj;
	this->ProcessEvent ( pLoadWarhead, &parms, NULL );

}*/

/*void AwRocketLauncher::FillToInitialAmmo (  )
{
	static UFunction* pFillToInitialAmmo = 0;
	AwRocketLauncher_execFillToInitialAmmo_Parms parms;

	if ( !pFillToInitialAmmo )
		pFillToInitialAmmo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.FillToInitialAmmo" );

	this->ProcessEvent ( pFillToInitialAmmo, &parms, NULL );

}*/

/*void AwRocketLauncher::SetResParams ( class UClass* wRes )
{
	static UFunction* pSetResParams = 0;
	AwRocketLauncher_execSetResParams_Parms parms;

	if ( !pSetResParams )
		pSetResParams = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketLauncher.SetResParams" );

	parms.wRes = wRes;
	this->ProcessEvent ( pSetResParams, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::StopFiring (  )
{
	static UFunction* pStopFiring = 0;
	UwTurret_FNM240_Fire_execStopFiring_Parms parms;

	if ( !pStopFiring )
		pStopFiring = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.StopFiring" );

	this->ProcessEvent ( pStopFiring, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::StartFiring (  )
{
	static UFunction* pStartFiring = 0;
	UwTurret_FNM240_Fire_execStartFiring_Parms parms;

	if ( !pStartFiring )
		pStartFiring = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.StartFiring" );

	this->ProcessEvent ( pStartFiring, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::DisplayDebug ( class UCanvas* Canvas, float* YL, float* YPos )
{
	static UFunction* pDisplayDebug = 0;
	UwTurret_FNM240_Fire_execDisplayDebug_Parms parms;

	if ( !pDisplayDebug )
		pDisplayDebug = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.DisplayDebug" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pDisplayDebug, &parms, NULL );

	*YL = parms.YL;
	*YPos = parms.YPos;
}*/

/*void UwTurret_FNM240_Fire::eventModeTick ( float dt )
{
	static UFunction* pModeTick = 0;
	UwTurret_FNM240_Fire_eventModeTick_Parms parms;

	if ( !pModeTick )
		pModeTick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.ModeTick" );

	parms.dt = dt;
	this->ProcessEvent ( pModeTick, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::StartMuzzleSmoke (  )
{
	static UFunction* pStartMuzzleSmoke = 0;
	UwTurret_FNM240_Fire_execStartMuzzleSmoke_Parms parms;

	if ( !pStartMuzzleSmoke )
		pStartMuzzleSmoke = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.StartMuzzleSmoke" );

	this->ProcessEvent ( pStartMuzzleSmoke, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::UpdateEmitter (  )
{
	static UFunction* pUpdateEmitter = 0;
	UwTurret_FNM240_Fire_execUpdateEmitter_Parms parms;

	if ( !pUpdateEmitter )
		pUpdateEmitter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.UpdateEmitter" );

	this->ProcessEvent ( pUpdateEmitter, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::FlashMuzzleFlash (  )
{
	static UFunction* pFlashMuzzleFlash = 0;
	UwTurret_FNM240_Fire_execFlashMuzzleFlash_Parms parms;

	if ( !pFlashMuzzleFlash )
		pFlashMuzzleFlash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.FlashMuzzleFlash" );

	this->ProcessEvent ( pFlashMuzzleFlash, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::DrawMuzzleFlash ( class UCanvas* Canvas )
{
	static UFunction* pDrawMuzzleFlash = 0;
	UwTurret_FNM240_Fire_execDrawMuzzleFlash_Parms parms;

	if ( !pDrawMuzzleFlash )
		pDrawMuzzleFlash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.DrawMuzzleFlash" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pDrawMuzzleFlash, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::InitEffects (  )
{
	static UFunction* pInitEffects = 0;
	UwTurret_FNM240_Fire_execInitEffects_Parms parms;

	if ( !pInitEffects )
		pInitEffects = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.InitEffects" );

	this->ProcessEvent ( pInitEffects, &parms, NULL );

}*/

/*bool UwTurret_FNM240_Fire::AllowFire (  )
{
	static UFunction* pAllowFire = 0;
	UwTurret_FNM240_Fire_execAllowFire_Parms parms;

	if ( !pAllowFire )
		pAllowFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.AllowFire" );

	this->ProcessEvent ( pAllowFire, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UwTurret_FNM240_Fire::PlayFiring (  )
{
	static UFunction* pPlayFiring = 0;
	UwTurret_FNM240_Fire_execPlayFiring_Parms parms;

	if ( !pPlayFiring )
		pPlayFiring = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.PlayFiring" );

	this->ProcessEvent ( pPlayFiring, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::eventTimer (  )
{
	static UFunction* pTimer = 0;
	UwTurret_FNM240_Fire_eventTimer_Parms parms;

	if ( !pTimer )
		pTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.Timer" );

	this->ProcessEvent ( pTimer, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::DoFireEffectForClient (  )
{
	static UFunction* pDoFireEffectForClient = 0;
	UwTurret_FNM240_Fire_execDoFireEffectForClient_Parms parms;

	if ( !pDoFireEffectForClient )
		pDoFireEffectForClient = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.DoFireEffectForClient" );

	this->ProcessEvent ( pDoFireEffectForClient, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::DoFireEffect (  )
{
	static UFunction* pDoFireEffect = 0;
	UwTurret_FNM240_Fire_execDoFireEffect_Parms parms;

	if ( !pDoFireEffect )
		pDoFireEffect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.DoFireEffect" );

	this->ProcessEvent ( pDoFireEffect, &parms, NULL );

}*/

/*void UwTurret_FNM240_Fire::eventModeDoFire (  )
{
	static UFunction* pModeDoFire = 0;
	UwTurret_FNM240_Fire_eventModeDoFire_Parms parms;

	if ( !pModeDoFire )
		pModeDoFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurret_FNM240_Fire.ModeDoFire" );

	this->ProcessEvent ( pModeDoFire, &parms, NULL );

}*/

/*void AwGunAttachment::ClearParts (  )
{
	static UFunction* pClearParts = 0;
	AwGunAttachment_execClearParts_Parms parms;

	if ( !pClearParts )
		pClearParts = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.ClearParts" );

	this->ProcessEvent ( pClearParts, &parms, NULL );

}*/

/*void AwGunAttachment::AddParts ( int iWeaponID, int iAddPartsID )
{
	static UFunction* pAddParts = 0;
	AwGunAttachment_execAddParts_Parms parms;

	if ( !pAddParts )
		pAddParts = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.AddParts" );

	parms.iWeaponID = iWeaponID;
	parms.iAddPartsID = iAddPartsID;
	this->ProcessEvent ( pAddParts, &parms, NULL );

}*/

/*void AwGunAttachment::eventwLoadOut ( int iID, int iAddPartsID )
{
	static UFunction* pwLoadOut = 0;
	AwGunAttachment_eventwLoadOut_Parms parms;

	if ( !pwLoadOut )
		pwLoadOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.wLoadOut" );

	parms.iID = iID;
	parms.iAddPartsID = iAddPartsID;
	this->ProcessEvent ( pwLoadOut, &parms, NULL );

}*/

/*void AwGunAttachment::eventThirdPersonEffects (  )
{
	static UFunction* pThirdPersonEffects = 0;
	AwGunAttachment_eventThirdPersonEffects_Parms parms;

	if ( !pThirdPersonEffects )
		pThirdPersonEffects = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.ThirdPersonEffects" );

	this->ProcessEvent ( pThirdPersonEffects, &parms, NULL );

}*/

/*void AwGunAttachment::FakeThirdPersonEffects ( class AActor* HitActor, struct FVector HitLocation, struct FVector HitNormal, class UMaterial* HitMaterial )
{
	static UFunction* pFakeThirdPersonEffects = 0;
	AwGunAttachment_execFakeThirdPersonEffects_Parms parms;

	if ( !pFakeThirdPersonEffects )
		pFakeThirdPersonEffects = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.FakeThirdPersonEffects" );

	parms.HitActor = HitActor;
	parms.HitLocation = HitLocation;
	parms.HitNormal = HitNormal;
	parms.HitMaterial = HitMaterial;
	this->ProcessEvent ( pFakeThirdPersonEffects, &parms, NULL );

}*/

/*void AwGunAttachment::FakeUpdateTracer ( struct FVector LastHitLocation )
{
	static UFunction* pFakeUpdateTracer = 0;
	AwGunAttachment_execFakeUpdateTracer_Parms parms;

	if ( !pFakeUpdateTracer )
		pFakeUpdateTracer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.FakeUpdateTracer" );

	parms.LastHitLocation = LastHitLocation;
	this->ProcessEvent ( pFakeUpdateTracer, &parms, NULL );

}*/

/*void AwGunAttachment::MakeSmoke (  )
{
	static UFunction* pMakeSmoke = 0;
	AwGunAttachment_execMakeSmoke_Parms parms;

	if ( !pMakeSmoke )
		pMakeSmoke = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.MakeSmoke" );

	this->ProcessEvent ( pMakeSmoke, &parms, NULL );

}*/

/*struct FName AwGunAttachment::GetBoneNameSilencer (  )
{
	static UFunction* pGetBoneNameSilencer = 0;
	AwGunAttachment_execGetBoneNameSilencer_Parms parms;

	if ( !pGetBoneNameSilencer )
		pGetBoneNameSilencer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.GetBoneNameSilencer" );

	this->ProcessEvent ( pGetBoneNameSilencer, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FName AwGunAttachment::GetBoneNameRotation (  )
{
	static UFunction* pGetBoneNameRotation = 0;
	AwGunAttachment_execGetBoneNameRotation_Parms parms;

	if ( !pGetBoneNameRotation )
		pGetBoneNameRotation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.GetBoneNameRotation" );

	this->ProcessEvent ( pGetBoneNameRotation, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FName AwGunAttachment::GetBoneNameTip (  )
{
	static UFunction* pGetBoneNameTip = 0;
	AwGunAttachment_execGetBoneNameTip_Parms parms;

	if ( !pGetBoneNameTip )
		pGetBoneNameTip = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.GetBoneNameTip" );

	this->ProcessEvent ( pGetBoneNameTip, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwGunAttachment::MakeSpawnShell ( bool bRechamber )
{
	static UFunction* pMakeSpawnShell = 0;
	AwGunAttachment_execMakeSpawnShell_Parms parms;

	if ( !pMakeSpawnShell )
		pMakeSpawnShell = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.MakeSpawnShell" );

	parms.bRechamber = bRechamber;
	this->ProcessEvent ( pMakeSpawnShell, &parms, NULL );

}*/

/*void AwGunAttachment::MakeMuzzleFlash (  )
{
	static UFunction* pMakeMuzzleFlash = 0;
	AwGunAttachment_execMakeMuzzleFlash_Parms parms;

	if ( !pMakeMuzzleFlash )
		pMakeMuzzleFlash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.MakeMuzzleFlash" );

	this->ProcessEvent ( pMakeMuzzleFlash, &parms, NULL );

}*/

/*void AwGunAttachment::SpawnEmitter ( class UClass* EmitterClass )
{
	static UFunction* pSpawnEmitter = 0;
	AwGunAttachment_execSpawnEmitter_Parms parms;

	if ( !pSpawnEmitter )
		pSpawnEmitter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.SpawnEmitter" );

	parms.EmitterClass = EmitterClass;
	this->ProcessEvent ( pSpawnEmitter, &parms, NULL );

}*/

/*void AwGunAttachment::UpdateHit ( class AActor* HitActor, struct FVector HitLocation, struct FVector HitNormal, class UMaterial* HitMaterial )
{
	static UFunction* pUpdateHit = 0;
	AwGunAttachment_execUpdateHit_Parms parms;

	if ( !pUpdateHit )
		pUpdateHit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.UpdateHit" );

	parms.HitActor = HitActor;
	parms.HitLocation = HitLocation;
	parms.HitNormal = HitNormal;
	parms.HitMaterial = HitMaterial;
	this->ProcessEvent ( pUpdateHit, &parms, NULL );

}*/

/*void AwGunAttachment::UpdatePenetrateHit ( class AActor** mHitActor, struct FVector* mHitLocation, struct FVector* mHitNormal, class UMaterial** mHitMaterial, int mLastHitIdx )
{
	static UFunction* pUpdatePenetrateHit = 0;
	AwGunAttachment_execUpdatePenetrateHit_Parms parms;

	if ( !pUpdatePenetrateHit )
		pUpdatePenetrateHit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.UpdatePenetrateHit" );

	parms.mHitActor = mHitActor;
	parms.mHitLocation = mHitLocation;
	parms.mHitNormal = mHitNormal;
	parms.mHitMaterial = mHitMaterial;
	parms.mLastHitIdx = mLastHitIdx;
	this->ProcessEvent ( pUpdatePenetrateHit, &parms, NULL );

}*/

/*void AwGunAttachment::UpdateTracer (  )
{
	static UFunction* pUpdateTracer = 0;
	AwGunAttachment_execUpdateTracer_Parms parms;

	if ( !pUpdateTracer )
		pUpdateTracer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.UpdateTracer" );

	this->ProcessEvent ( pUpdateTracer, &parms, NULL );

}*/

/*struct FVector AwGunAttachment::GetTracerStart (  )
{
	static UFunction* pGetTracerStart = 0;
	AwGunAttachment_execGetTracerStart_Parms parms;

	if ( !pGetTracerStart )
		pGetTracerStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.GetTracerStart" );

	this->ProcessEvent ( pGetTracerStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwGunAttachment::Destroyed (  )
{
	static UFunction* pDestroyed = 0;
	AwGunAttachment_execDestroyed_Parms parms;

	if ( !pDestroyed )
		pDestroyed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGunAttachment.Destroyed" );

	this->ProcessEvent ( pDestroyed, &parms, NULL );

}*/

/*void AwTurretAttachmet::MakeSmoke (  )
{
	static UFunction* pMakeSmoke = 0;
	AwTurretAttachmet_execMakeSmoke_Parms parms;

	if ( !pMakeSmoke )
		pMakeSmoke = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurretAttachmet.MakeSmoke" );

	this->ProcessEvent ( pMakeSmoke, &parms, NULL );

}*/

/*void AwTurretAttachmet::MakeMuzzleFlash (  )
{
	static UFunction* pMakeMuzzleFlash = 0;
	AwTurretAttachmet_execMakeMuzzleFlash_Parms parms;

	if ( !pMakeMuzzleFlash )
		pMakeMuzzleFlash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurretAttachmet.MakeMuzzleFlash" );

	this->ProcessEvent ( pMakeMuzzleFlash, &parms, NULL );

}*/

/*struct FVector AwTurretAttachmet::GetTipLocation (  )
{
	static UFunction* pGetTipLocation = 0;
	AwTurretAttachmet_execGetTipLocation_Parms parms;

	if ( !pGetTipLocation )
		pGetTipLocation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wTurretAttachmet.GetTipLocation" );

	this->ProcessEvent ( pGetTipLocation, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UwRocketFire::StartFiring (  )
{
	static UFunction* pStartFiring = 0;
	UwRocketFire_execStartFiring_Parms parms;

	if ( !pStartFiring )
		pStartFiring = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.StartFiring" );

	this->ProcessEvent ( pStartFiring, &parms, NULL );

}*/

/*void UwRocketFire::PlayFiring (  )
{
	static UFunction* pPlayFiring = 0;
	UwRocketFire_execPlayFiring_Parms parms;

	if ( !pPlayFiring )
		pPlayFiring = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.PlayFiring" );

	this->ProcessEvent ( pPlayFiring, &parms, NULL );

}*/

/*void UwRocketFire::ResetInputFire (  )
{
	static UFunction* pResetInputFire = 0;
	UwRocketFire_execResetInputFire_Parms parms;

	if ( !pResetInputFire )
		pResetInputFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.ResetInputFire" );

	this->ProcessEvent ( pResetInputFire, &parms, NULL );

}*/

/*bool UwRocketFire::IsInputFire (  )
{
	static UFunction* pIsInputFire = 0;
	UwRocketFire_execIsInputFire_Parms parms;

	if ( !pIsInputFire )
		pIsInputFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.IsInputFire" );

	this->ProcessEvent ( pIsInputFire, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UwRocketFire::CheckRPGAimMode (  )
{
	static UFunction* pCheckRPGAimMode = 0;
	UwRocketFire_execCheckRPGAimMode_Parms parms;

	if ( !pCheckRPGAimMode )
		pCheckRPGAimMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.CheckRPGAimMode" );

	this->ProcessEvent ( pCheckRPGAimMode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UwRocketFire::eventServerDoFire (  )
{
	static UFunction* pServerDoFire = 0;
	UwRocketFire_eventServerDoFire_Parms parms;

	if ( !pServerDoFire )
		pServerDoFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.ServerDoFire" );

	this->ProcessEvent ( pServerDoFire, &parms, NULL );

}*/

/*void UwRocketFire::StartMuzzleSmoke (  )
{
	static UFunction* pStartMuzzleSmoke = 0;
	UwRocketFire_execStartMuzzleSmoke_Parms parms;

	if ( !pStartMuzzleSmoke )
		pStartMuzzleSmoke = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.StartMuzzleSmoke" );

	this->ProcessEvent ( pStartMuzzleSmoke, &parms, NULL );

}*/

/*void UwRocketFire::FlashMuzzleFlash (  )
{
	static UFunction* pFlashMuzzleFlash = 0;
	UwRocketFire_execFlashMuzzleFlash_Parms parms;

	if ( !pFlashMuzzleFlash )
		pFlashMuzzleFlash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.FlashMuzzleFlash" );

	this->ProcessEvent ( pFlashMuzzleFlash, &parms, NULL );

}*/

/*void UwRocketFire::NewActiveStartFire (  )
{
	static UFunction* pNewActiveStartFire = 0;
	UwRocketFire_execNewActiveStartFire_Parms parms;

	if ( !pNewActiveStartFire )
		pNewActiveStartFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.NewActiveStartFire" );

	this->ProcessEvent ( pNewActiveStartFire, &parms, NULL );

}*/

/*void UwRocketFire::eventModeDoFire (  )
{
	static UFunction* pModeDoFire = 0;
	UwRocketFire_eventModeDoFire_Parms parms;

	if ( !pModeDoFire )
		pModeDoFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wRocketFire.ModeDoFire" );

	this->ProcessEvent ( pModeDoFire, &parms, NULL );

}*/

/*void AwAirStrikeBomb::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pExplode = 0;
	AwAirStrikeBomb_execExplode_Parms parms;

	if ( !pExplode )
		pExplode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wAirStrikeBomb.Explode" );

	parms.HitLocation = HitLocation;
	parms.HitNormal = HitNormal;
	this->ProcessEvent ( pExplode, &parms, NULL );

}*/

/*void AwAirStrikeBomb::PostBeginPlay (  )
{
	static UFunction* pPostBeginPlay = 0;
	AwAirStrikeBomb_execPostBeginPlay_Parms parms;

	if ( !pPostBeginPlay )
		pPostBeginPlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wAirStrikeBomb.PostBeginPlay" );

	this->ProcessEvent ( pPostBeginPlay, &parms, NULL );

}*/

/*bool AwThrowingWeapon::IsCanUseWeapon (  )
{
	static UFunction* pIsCanUseWeapon = 0;
	AwThrowingWeapon_execIsCanUseWeapon_Parms parms;

	if ( !pIsCanUseWeapon )
		pIsCanUseWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.IsCanUseWeapon" );

	this->ProcessEvent ( pIsCanUseWeapon, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwThrowingWeapon::FillToInitialAmmo (  )
{
	static UFunction* pFillToInitialAmmo = 0;
	AwThrowingWeapon_execFillToInitialAmmo_Parms parms;

	if ( !pFillToInitialAmmo )
		pFillToInitialAmmo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.FillToInitialAmmo" );

	this->ProcessEvent ( pFillToInitialAmmo, &parms, NULL );

}*/

/*void AwThrowingWeapon::GetAmmoCount ( float* MaxAmmoPrimary, float* CurAmmoPrimary )
{
	static UFunction* pGetAmmoCount = 0;
	AwThrowingWeapon_execGetAmmoCount_Parms parms;

	if ( !pGetAmmoCount )
		pGetAmmoCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.GetAmmoCount" );

	parms.MaxAmmoPrimary = *MaxAmmoPrimary;
	parms.CurAmmoPrimary = *CurAmmoPrimary;
	this->ProcessEvent ( pGetAmmoCount, &parms, NULL );

	*MaxAmmoPrimary = parms.MaxAmmoPrimary;
	*CurAmmoPrimary = parms.CurAmmoPrimary;
}*/

/*void AwThrowingWeapon::ServerThrowingWeapon (  )
{
	static UFunction* pServerThrowingWeapon = 0;
	AwThrowingWeapon_execServerThrowingWeapon_Parms parms;

	if ( !pServerThrowingWeapon )
		pServerThrowingWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.ServerThrowingWeapon" );

	this->ProcessEvent ( pServerThrowingWeapon, &parms, NULL );

}*/

/*void AwThrowingWeapon::ClientThrowingWeapon (  )
{
	static UFunction* pClientThrowingWeapon = 0;
	AwThrowingWeapon_execClientThrowingWeapon_Parms parms;

	if ( !pClientThrowingWeapon )
		pClientThrowingWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.ClientThrowingWeapon" );

	this->ProcessEvent ( pClientThrowingWeapon, &parms, NULL );

}*/

/*bool AwThrowingWeapon::SeverConsumeAmmo ( int Mode, float Load, bool bAmountNeededIsMax )
{
	static UFunction* pSeverConsumeAmmo = 0;
	AwThrowingWeapon_execSeverConsumeAmmo_Parms parms;

	if ( !pSeverConsumeAmmo )
		pSeverConsumeAmmo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.SeverConsumeAmmo" );

	parms.Mode = Mode;
	parms.Load = Load;
	parms.bAmountNeededIsMax = bAmountNeededIsMax;
	this->ProcessEvent ( pSeverConsumeAmmo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwThrowingWeapon::CancelFire ( int Mode )
{
	static UFunction* pCancelFire = 0;
	AwThrowingWeapon_execCancelFire_Parms parms;

	if ( !pCancelFire )
		pCancelFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.CancelFire" );

	parms.Mode = Mode;
	this->ProcessEvent ( pCancelFire, &parms, NULL );

}*/

/*void AwThrowingWeapon::ServerCancelFire ( unsigned char Mode )
{
	static UFunction* pServerCancelFire = 0;
	AwThrowingWeapon_execServerCancelFire_Parms parms;

	if ( !pServerCancelFire )
		pServerCancelFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.ServerCancelFire" );

	parms.Mode = Mode;
	this->ProcessEvent ( pServerCancelFire, &parms, NULL );

}*/

/*void AwThrowingWeapon::ClientCancelFire ( int Mode )
{
	static UFunction* pClientCancelFire = 0;
	AwThrowingWeapon_execClientCancelFire_Parms parms;

	if ( !pClientCancelFire )
		pClientCancelFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.ClientCancelFire" );

	parms.Mode = Mode;
	this->ProcessEvent ( pClientCancelFire, &parms, NULL );

}*/

/*bool AwThrowingWeapon::StartFire ( int Mode )
{
	static UFunction* pStartFire = 0;
	AwThrowingWeapon_execStartFire_Parms parms;

	if ( !pStartFire )
		pStartFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.StartFire" );

	parms.Mode = Mode;
	this->ProcessEvent ( pStartFire, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwThrowingWeapon::BringUp ( class AwWeapon* PrevWeapon )
{
	static UFunction* pBringUp = 0;
	AwThrowingWeapon_execBringUp_Parms parms;

	if ( !pBringUp )
		pBringUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.BringUp" );

	parms.PrevWeapon = PrevWeapon;
	this->ProcessEvent ( pBringUp, &parms, NULL );

}*/

/*bool AwThrowingWeapon::PutDown (  )
{
	static UFunction* pPutDown = 0;
	AwThrowingWeapon_execPutDown_Parms parms;

	if ( !pPutDown )
		pPutDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.PutDown" );

	this->ProcessEvent ( pPutDown, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool AwThrowingWeapon::IsFiring (  )
{
	static UFunction* pIsFiring = 0;
	AwThrowingWeapon_execIsFiring_Parms parms;

	if ( !pIsFiring )
		pIsFiring = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.IsFiring" );

	this->ProcessEvent ( pIsFiring, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwThrowingWeapon::PlayIdle (  )
{
	static UFunction* pPlayIdle = 0;
	AwThrowingWeapon_execPlayIdle_Parms parms;

	if ( !pPlayIdle )
		pPlayIdle = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.PlayIdle" );

	this->ProcessEvent ( pPlayIdle, &parms, NULL );

}*/

/*void AwThrowingWeapon::AnimEnd ( int Channel )
{
	static UFunction* pAnimEnd = 0;
	AwThrowingWeapon_execAnimEnd_Parms parms;

	if ( !pAnimEnd )
		pAnimEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.AnimEnd" );

	parms.Channel = Channel;
	this->ProcessEvent ( pAnimEnd, &parms, NULL );

}*/

/*void AwThrowingWeapon::ServerDestroy (  )
{
	static UFunction* pServerDestroy = 0;
	AwThrowingWeapon_execServerDestroy_Parms parms;

	if ( !pServerDestroy )
		pServerDestroy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.ServerDestroy" );

	this->ProcessEvent ( pServerDestroy, &parms, NULL );

}*/

/*void AwThrowingWeapon::SetSprint ( bool bValue )
{
	static UFunction* pSetSprint = 0;
	AwThrowingWeapon_execSetSprint_Parms parms;

	if ( !pSetSprint )
		pSetSprint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.SetSprint" );

	parms.bValue = bValue;
	this->ProcessEvent ( pSetSprint, &parms, NULL );

}*/

/*void AwThrowingWeapon::eventWeaponTick ( float dt )
{
	static UFunction* pWeaponTick = 0;
	AwThrowingWeapon_eventWeaponTick_Parms parms;

	if ( !pWeaponTick )
		pWeaponTick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.WeaponTick" );

	parms.dt = dt;
	this->ProcessEvent ( pWeaponTick, &parms, NULL );

}*/

/*void AwThrowingWeapon::DisplayDebug ( class UCanvas* Canvas, float* YL, float* YPos )
{
	static UFunction* pDisplayDebug = 0;
	AwThrowingWeapon_execDisplayDebug_Parms parms;

	if ( !pDisplayDebug )
		pDisplayDebug = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.DisplayDebug" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pDisplayDebug, &parms, NULL );

	*YL = parms.YL;
	*YPos = parms.YPos;
}*/

/*void AwThrowingWeapon::AciveFireDelay (  )
{
	static UFunction* pAciveFireDelay = 0;
	AwThrowingWeapon_execAciveFireDelay_Parms parms;

	if ( !pAciveFireDelay )
		pAciveFireDelay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.AciveFireDelay" );

	this->ProcessEvent ( pAciveFireDelay, &parms, NULL );

}*/

/*void AwThrowingWeapon::wLoadOut ( int iID, int iAddPartsID )
{
	static UFunction* pwLoadOut = 0;
	AwThrowingWeapon_execwLoadOut_Parms parms;

	if ( !pwLoadOut )
		pwLoadOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingWeapon.wLoadOut" );

	parms.iID = iID;
	parms.iAddPartsID = iAddPartsID;
	this->ProcessEvent ( pwLoadOut, &parms, NULL );

}*/

/*bool UwThrowingFire::AllowFire (  )
{
	static UFunction* pAllowFire = 0;
	UwThrowingFire_execAllowFire_Parms parms;

	if ( !pAllowFire )
		pAllowFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingFire.AllowFire" );

	this->ProcessEvent ( pAllowFire, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UwThrowingFire::PlayPreFire (  )
{
	static UFunction* pPlayPreFire = 0;
	UwThrowingFire_execPlayPreFire_Parms parms;

	if ( !pPlayPreFire )
		pPlayPreFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingFire.PlayPreFire" );

	this->ProcessEvent ( pPlayPreFire, &parms, NULL );

}*/

/*void UwThrowingFire::eventModeDoFire (  )
{
	static UFunction* pModeDoFire = 0;
	UwThrowingFire_eventModeDoFire_Parms parms;

	if ( !pModeDoFire )
		pModeDoFire = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wThrowingFire.ModeDoFire" );

	this->ProcessEvent ( pModeDoFire, &parms, NULL );

}*/

/*void AwGrenade::SufferEffect ( class APawn* Victim, float fDist, float fReduceRate )
{
	static UFunction* pSufferEffect = 0;
	AwGrenade_execSufferEffect_Parms parms;

	if ( !pSufferEffect )
		pSufferEffect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.SufferEffect" );

	parms.Victim = Victim;
	parms.fDist = fDist;
	parms.fReduceRate = fReduceRate;
	this->ProcessEvent ( pSufferEffect, &parms, NULL );

}*/

/*void AwGrenade::wLoadOut ( int iID )
{
	static UFunction* pwLoadOut = 0;
	AwGrenade_execwLoadOut_Parms parms;

	if ( !pwLoadOut )
		pwLoadOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.wLoadOut" );

	parms.iID = iID;
	this->ProcessEvent ( pwLoadOut, &parms, NULL );

}*/

/*void AwGrenade::LoadEmitters (  )
{
	static UFunction* pLoadEmitters = 0;
	AwGrenade_execLoadEmitters_Parms parms;

	if ( !pLoadEmitters )
		pLoadEmitters = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.LoadEmitters" );

	this->ProcessEvent ( pLoadEmitters, &parms, NULL );

}*/

/*void AwGrenade::TakeDamage ( int Damage, class APawn* instigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, int CollisionPart, int WeaponType, bool bWallShot )
{
	static UFunction* pTakeDamage = 0;
	AwGrenade_execTakeDamage_Parms parms;

	if ( !pTakeDamage )
		pTakeDamage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.TakeDamage" );

	parms.Damage = Damage;
	parms.instigatedBy = instigatedBy;
	parms.HitLocation = HitLocation;
	parms.Momentum = Momentum;
	parms.DamageType = DamageType;
	parms.CollisionPart = CollisionPart;
	parms.WeaponType = WeaponType;
	parms.bWallShot = bWallShot;
	this->ProcessEvent ( pTakeDamage, &parms, NULL );

}*/

/*void AwGrenade::ExplodeSelf ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pExplodeSelf = 0;
	AwGrenade_execExplodeSelf_Parms parms;

	if ( !pExplodeSelf )
		pExplodeSelf = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.ExplodeSelf" );

	parms.HitLocation = HitLocation;
	parms.HitNormal = HitNormal;
	this->ProcessEvent ( pExplodeSelf, &parms, NULL );

}*/

/*void AwGrenade::SplashGrenades (  )
{
	static UFunction* pSplashGrenades = 0;
	AwGrenade_execSplashGrenades_Parms parms;

	if ( !pSplashGrenades )
		pSplashGrenades = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.SplashGrenades" );

	this->ProcessEvent ( pSplashGrenades, &parms, NULL );

}*/

/*void AwGrenade::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pExplode = 0;
	AwGrenade_execExplode_Parms parms;

	if ( !pExplode )
		pExplode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.Explode" );

	parms.HitLocation = HitLocation;
	parms.HitNormal = HitNormal;
	this->ProcessEvent ( pExplode, &parms, NULL );

}*/

/*void AwGrenade::SpawnEmitter ( float timeFactor )
{
	static UFunction* pSpawnEmitter = 0;
	AwGrenade_execSpawnEmitter_Parms parms;

	if ( !pSpawnEmitter )
		pSpawnEmitter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.SpawnEmitter" );

	parms.timeFactor = timeFactor;
	this->ProcessEvent ( pSpawnEmitter, &parms, NULL );

}*/

/*void AwGrenade::HitWall ( struct FVector HitNormal, class AActor* Wall, class UMaterial* HitMaterial )
{
	static UFunction* pHitWall = 0;
	AwGrenade_execHitWall_Parms parms;

	if ( !pHitWall )
		pHitWall = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.HitWall" );

	parms.HitNormal = HitNormal;
	parms.Wall = Wall;
	parms.HitMaterial = HitMaterial;
	this->ProcessEvent ( pHitWall, &parms, NULL );

}*/

/*void AwGrenade::ProcessTouch ( class AActor* Other, struct FVector HitLocation )
{
	static UFunction* pProcessTouch = 0;
	AwGrenade_execProcessTouch_Parms parms;

	if ( !pProcessTouch )
		pProcessTouch = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.ProcessTouch" );

	parms.Other = Other;
	parms.HitLocation = HitLocation;
	this->ProcessEvent ( pProcessTouch, &parms, NULL );

}*/

/*void AwGrenade::Landed ( struct FVector HitNormal )
{
	static UFunction* pLanded = 0;
	AwGrenade_execLanded_Parms parms;

	if ( !pLanded )
		pLanded = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.Landed" );

	parms.HitNormal = HitNormal;
	this->ProcessEvent ( pLanded, &parms, NULL );

}*/

/*void AwGrenade::Timer (  )
{
	static UFunction* pTimer = 0;
	AwGrenade_execTimer_Parms parms;

	if ( !pTimer )
		pTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.Timer" );

	this->ProcessEvent ( pTimer, &parms, NULL );

}*/

/*void AwGrenade::SetSpeed ( float fSpeed )
{
	static UFunction* pSetSpeed = 0;
	AwGrenade_execSetSpeed_Parms parms;

	if ( !pSetSpeed )
		pSetSpeed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.SetSpeed" );

	parms.fSpeed = fSpeed;
	this->ProcessEvent ( pSetSpeed, &parms, NULL );

}*/

/*bool AwGrenade::AimUp (  )
{
	static UFunction* pAimUp = 0;
	AwGrenade_execAimUp_Parms parms;

	if ( !pAimUp )
		pAimUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.AimUp" );

	this->ProcessEvent ( pAimUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwGrenade::RecoverFromHostChange (  )
{
	static UFunction* pRecoverFromHostChange = 0;
	AwGrenade_execRecoverFromHostChange_Parms parms;

	if ( !pRecoverFromHostChange )
		pRecoverFromHostChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.RecoverFromHostChange" );

	this->ProcessEvent ( pRecoverFromHostChange, &parms, NULL );

}*/

/*void AwGrenade::eventPostNetBeginPlay (  )
{
	static UFunction* pPostNetBeginPlay = 0;
	AwGrenade_eventPostNetBeginPlay_Parms parms;

	if ( !pPostNetBeginPlay )
		pPostNetBeginPlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.PostNetBeginPlay" );

	this->ProcessEvent ( pPostNetBeginPlay, &parms, NULL );

}*/

/*void AwGrenade::PostBeginPlay (  )
{
	static UFunction* pPostBeginPlay = 0;
	AwGrenade_execPostBeginPlay_Parms parms;

	if ( !pPostBeginPlay )
		pPostBeginPlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.PostBeginPlay" );

	this->ProcessEvent ( pPostBeginPlay, &parms, NULL );

}*/

/*void AwGrenade::Destroyed (  )
{
	static UFunction* pDestroyed = 0;
	AwGrenade_execDestroyed_Parms parms;

	if ( !pDestroyed )
		pDestroyed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"WWeapons.wGrenade.Destroyed" );

	this->ProcessEvent ( pDestroyed, &parms, NULL );

}*/

