#include "stdafx.h"
/*
# ======================================================================================== #
# > ArcticCombat SDK
# > Generated By HJSdkGen v1.06b
# ---------------------------------------------------------------------------------------- #
# > Package : GUIWarfare
# >    File : Code.cpp
# ======================================================================================== #
*/

/*void UBTConsole::execConsoleCMD ( struct FString Line )
{
	static UFunction* pConsoleCMD = 0;
	UBTConsole_execConsoleCMD_Parms parms;

	if ( !pConsoleCMD )
		pConsoleCMD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ConsoleCMD" );

	parms.Line = Line;
	this->ProcessEvent ( pConsoleCMD, &parms, NULL );

}*/

/*void UBTConsole::execSendQuestUpdate (  )
{
	static UFunction* pSendQuestUpdate = 0;
	UBTConsole_execSendQuestUpdate_Parms parms;

	if ( !pSendQuestUpdate )
		pSendQuestUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SendQuestUpdate" );

	this->ProcessEvent ( pSendQuestUpdate, &parms, NULL );

}*/

/*void UBTConsole::execShowTutorialEndWindow (  )
{
	static UFunction* pShowTutorialEndWindow = 0;
	UBTConsole_execShowTutorialEndWindow_Parms parms;

	if ( !pShowTutorialEndWindow )
		pShowTutorialEndWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ShowTutorialEndWindow" );

	this->ProcessEvent ( pShowTutorialEndWindow, &parms, NULL );

}*/

/*bool UBTConsole::CheckTurorial_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pCheckTurorial_OnOK = 0;
	UBTConsole_execCheckTurorial_OnOK_Parms parms;

	if ( !pCheckTurorial_OnOK )
		pCheckTurorial_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CheckTurorial_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pCheckTurorial_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTConsole::execSetAdminSpec ( int B )
{
	static UFunction* pSetAdminSpec = 0;
	UBTConsole_execSetAdminSpec_Parms parms;

	if ( !pSetAdminSpec )
		pSetAdminSpec = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SetAdminSpec" );

	parms.B = B;
	this->ProcessEvent ( pSetAdminSpec, &parms, NULL );

}*/

/*void UBTConsole::execGetBot (  )
{
	static UFunction* pGetBot = 0;
	UBTConsole_execGetBot_Parms parms;

	if ( !pGetBot )
		pGetBot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.GetBot" );

	this->ProcessEvent ( pGetBot, &parms, NULL );

}*/

/*void UBTConsole::execSetBot ( int withBot, int num0, int num1, int Grade )
{
	static UFunction* pSetBot = 0;
	UBTConsole_execSetBot_Parms parms;

	if ( !pSetBot )
		pSetBot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SetBot" );

	parms.withBot = withBot;
	parms.num0 = num0;
	parms.num1 = num1;
	parms.Grade = Grade;
	this->ProcessEvent ( pSetBot, &parms, NULL );

}*/

/*void UBTConsole::execLogBot (  )
{
	static UFunction* pLogBot = 0;
	UBTConsole_execLogBot_Parms parms;

	if ( !pLogBot )
		pLogBot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.LogBot" );

	this->ProcessEvent ( pLogBot, &parms, NULL );

}*/

/*void UBTConsole::UpdateAAS (  )
{
	static UFunction* pUpdateAAS = 0;
	UBTConsole_execUpdateAAS_Parms parms;

	if ( !pUpdateAAS )
		pUpdateAAS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.UpdateAAS" );

	this->ProcessEvent ( pUpdateAAS, &parms, NULL );

}*/

/*void UBTConsole::UpdateGameNotice (  )
{
	static UFunction* pUpdateGameNotice = 0;
	UBTConsole_execUpdateGameNotice_Parms parms;

	if ( !pUpdateGameNotice )
		pUpdateGameNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.UpdateGameNotice" );

	this->ProcessEvent ( pUpdateGameNotice, &parms, NULL );

}*/

/*void UBTConsole::UpdateConnection ( float Delta )
{
	static UFunction* pUpdateConnection = 0;
	UBTConsole_execUpdateConnection_Parms parms;

	if ( !pUpdateConnection )
		pUpdateConnection = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.UpdateConnection" );

	parms.Delta = Delta;
	this->ProcessEvent ( pUpdateConnection, &parms, NULL );

}*/

/*void UBTConsole::ProcessChatBan ( float Delta )
{
	static UFunction* pProcessChatBan = 0;
	UBTConsole_execProcessChatBan_Parms parms;

	if ( !pProcessChatBan )
		pProcessChatBan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ProcessChatBan" );

	parms.Delta = Delta;
	this->ProcessEvent ( pProcessChatBan, &parms, NULL );

}*/

/*void UBTConsole::ProcessOutOfSleep_InRoomLobby (  )
{
	static UFunction* pProcessOutOfSleep_InRoomLobby = 0;
	UBTConsole_execProcessOutOfSleep_InRoomLobby_Parms parms;

	if ( !pProcessOutOfSleep_InRoomLobby )
		pProcessOutOfSleep_InRoomLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ProcessOutOfSleep_InRoomLobby" );

	this->ProcessEvent ( pProcessOutOfSleep_InRoomLobby, &parms, NULL );

}*/

/*void UBTConsole::ProcessOutOfDoing_InRoomLobby (  )
{
	static UFunction* pProcessOutOfDoing_InRoomLobby = 0;
	UBTConsole_execProcessOutOfDoing_InRoomLobby_Parms parms;

	if ( !pProcessOutOfDoing_InRoomLobby )
		pProcessOutOfDoing_InRoomLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ProcessOutOfDoing_InRoomLobby" );

	this->ProcessEvent ( pProcessOutOfDoing_InRoomLobby, &parms, NULL );

}*/

/*void UBTConsole::ProcessOutOfCounting ( int MaxTime, int CountTime, int CountingMsgCode, int OutMsgCode )
{
	static UFunction* pProcessOutOfCounting = 0;
	UBTConsole_execProcessOutOfCounting_Parms parms;

	if ( !pProcessOutOfCounting )
		pProcessOutOfCounting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ProcessOutOfCounting" );

	parms.MaxTime = MaxTime;
	parms.CountTime = CountTime;
	parms.CountingMsgCode = CountingMsgCode;
	parms.OutMsgCode = OutMsgCode;
	this->ProcessEvent ( pProcessOutOfCounting, &parms, NULL );

}*/

/*bool UBTConsole::IsInRoomLobby (  )
{
	static UFunction* pIsInRoomLobby = 0;
	UBTConsole_execIsInRoomLobby_Parms parms;

	if ( !pIsInRoomLobby )
		pIsInRoomLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.IsInRoomLobby" );

	this->ProcessEvent ( pIsInRoomLobby, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTConsole::ProcessOutOfSeat ( float Delta )
{
	static UFunction* pProcessOutOfSeat = 0;
	UBTConsole_execProcessOutOfSeat_Parms parms;

	if ( !pProcessOutOfSeat )
		pProcessOutOfSeat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ProcessOutOfSeat" );

	parms.Delta = Delta;
	this->ProcessEvent ( pProcessOutOfSeat, &parms, NULL );

}*/

/*bool UBTConsole::IsExceptionOutOfSeat (  )
{
	static UFunction* pIsExceptionOutOfSeat = 0;
	UBTConsole_execIsExceptionOutOfSeat_Parms parms;

	if ( !pIsExceptionOutOfSeat )
		pIsExceptionOutOfSeat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.IsExceptionOutOfSeat" );

	this->ProcessEvent ( pIsExceptionOutOfSeat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTConsole::eventTick ( float Delta )
{
	static UFunction* pTick = 0;
	UBTConsole_eventTick_Parms parms;

	if ( !pTick )
		pTick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.Tick" );

	parms.Delta = Delta;
	this->ProcessEvent ( pTick, &parms, NULL );

}*/

/*void UBTConsole::SetTermBetweenBGM ( float val )
{
	static UFunction* pSetTermBetweenBGM = 0;
	UBTConsole_execSetTermBetweenBGM_Parms parms;

	if ( !pSetTermBetweenBGM )
		pSetTermBetweenBGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SetTermBetweenBGM" );

	parms.val = val;
	this->ProcessEvent ( pSetTermBetweenBGM, &parms, NULL );

}*/

/*void UBTConsole::UpdateBGM ( float dt )
{
	static UFunction* pUpdateBGM = 0;
	UBTConsole_execUpdateBGM_Parms parms;

	if ( !pUpdateBGM )
		pUpdateBGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.UpdateBGM" );

	parms.dt = dt;
	this->ProcessEvent ( pUpdateBGM, &parms, NULL );

}*/

/*bool UBTConsole::IsBGMPlaying (  )
{
	static UFunction* pIsBGMPlaying = 0;
	UBTConsole_execIsBGMPlaying_Parms parms;

	if ( !pIsBGMPlaying )
		pIsBGMPlaying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.IsBGMPlaying" );

	this->ProcessEvent ( pIsBGMPlaying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTConsole::StopBGM (  )
{
	static UFunction* pStopBGM = 0;
	UBTConsole_execStopBGM_Parms parms;

	if ( !pStopBGM )
		pStopBGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.StopBGM" );

	this->ProcessEvent ( pStopBGM, &parms, NULL );

}*/

/*void UBTConsole::NextBGM (  )
{
	static UFunction* pNextBGM = 0;
	UBTConsole_execNextBGM_Parms parms;

	if ( !pNextBGM )
		pNextBGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.NextBGM" );

	this->ProcessEvent ( pNextBGM, &parms, NULL );

}*/

/*void UBTConsole::SetBGMAdvanced ( class TArray< struct FString > List, bool partialPlay, int partialDuration, class TArray< struct FIntArray > initialSeeks )
{
	static UFunction* pSetBGMAdvanced = 0;
	UBTConsole_execSetBGMAdvanced_Parms parms;

	if ( !pSetBGMAdvanced )
		pSetBGMAdvanced = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SetBGMAdvanced" );

	parms.List = List;
	parms.partialPlay = partialPlay;
	parms.partialDuration = partialDuration;
	parms.initialSeeks = initialSeeks;
	this->ProcessEvent ( pSetBGMAdvanced, &parms, NULL );

}*/

/*void UBTConsole::SetBGM ( class TArray< struct FString > List )
{
	static UFunction* pSetBGM = 0;
	UBTConsole_execSetBGM_Parms parms;

	if ( !pSetBGM )
		pSetBGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SetBGM" );

	parms.List = List;
	this->ProcessEvent ( pSetBGM, &parms, NULL );

}*/

/*void UBTConsole::SetOneBGM ( struct FString List )
{
	static UFunction* pSetOneBGM = 0;
	UBTConsole_execSetOneBGM_Parms parms;

	if ( !pSetOneBGM )
		pSetOneBGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SetOneBGM" );

	parms.List = List;
	this->ProcessEvent ( pSetOneBGM, &parms, NULL );

}*/

/*struct FString UBTConsole::GetCurrentBGM (  )
{
	static UFunction* pGetCurrentBGM = 0;
	UBTConsole_execGetCurrentBGM_Parms parms;

	if ( !pGetCurrentBGM )
		pGetCurrentBGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.GetCurrentBGM" );

	this->ProcessEvent ( pGetCurrentBGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTConsole::SwitchChatMessageType ( unsigned char key )
{
	static UFunction* pSwitchChatMessageType = 0;
	UBTConsole_execSwitchChatMessageType_Parms parms;

	if ( !pSwitchChatMessageType )
		pSwitchChatMessageType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SwitchChatMessageType" );

	parms.key = key;
	this->ProcessEvent ( pSwitchChatMessageType, &parms, NULL );

}*/

/*void UBTConsole::execCallChatWhisper (  )
{
	static UFunction* pCallChatWhisper = 0;
	UBTConsole_execCallChatWhisper_Parms parms;

	if ( !pCallChatWhisper )
		pCallChatWhisper = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CallChatWhisper" );

	this->ProcessEvent ( pCallChatWhisper, &parms, NULL );

}*/

/*void UBTConsole::execCallChatClan (  )
{
	static UFunction* pCallChatClan = 0;
	UBTConsole_execCallChatClan_Parms parms;

	if ( !pCallChatClan )
		pCallChatClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CallChatClan" );

	this->ProcessEvent ( pCallChatClan, &parms, NULL );

}*/

/*void UBTConsole::execCallChatTeam (  )
{
	static UFunction* pCallChatTeam = 0;
	UBTConsole_execCallChatTeam_Parms parms;

	if ( !pCallChatTeam )
		pCallChatTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CallChatTeam" );

	this->ProcessEvent ( pCallChatTeam, &parms, NULL );

}*/

/*void UBTConsole::execCallChatAll (  )
{
	static UFunction* pCallChatAll = 0;
	UBTConsole_execCallChatAll_Parms parms;

	if ( !pCallChatAll )
		pCallChatAll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CallChatAll" );

	this->ProcessEvent ( pCallChatAll, &parms, NULL );

}*/

/*void UBTConsole::execCallChatMode (  )
{
	static UFunction* pCallChatMode = 0;
	UBTConsole_execCallChatMode_Parms parms;

	if ( !pCallChatMode )
		pCallChatMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CallChatMode" );

	this->ProcessEvent ( pCallChatMode, &parms, NULL );

}*/

/*void UBTConsole::SetChatHelpString (  )
{
	static UFunction* pSetChatHelpString = 0;
	UBTConsole_execSetChatHelpString_Parms parms;

	if ( !pSetChatHelpString )
		pSetChatHelpString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SetChatHelpString" );

	this->ProcessEvent ( pSetChatHelpString, &parms, NULL );

}*/

/*bool UBTConsole::eventOnIME_Notify ( int Type, int LangID, struct FString strText, int StartPos, int Size )
{
	static UFunction* pOnIME_Notify = 0;
	UBTConsole_eventOnIME_Notify_Parms parms;

	if ( !pOnIME_Notify )
		pOnIME_Notify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.OnIME_Notify" );

	parms.Type = Type;
	parms.LangID = LangID;
	parms.strText = strText;
	parms.StartPos = StartPos;
	parms.Size = Size;
	this->ProcessEvent ( pOnIME_Notify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTConsole::eventNeedToOffIME (  )
{
	static UFunction* pNeedToOffIME = 0;
	UBTConsole_eventNeedToOffIME_Parms parms;

	if ( !pNeedToOffIME )
		pNeedToOffIME = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.NeedToOffIME" );

	this->ProcessEvent ( pNeedToOffIME, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTConsole::execDownloadWebzenShop (  )
{
	static UFunction* pDownloadWebzenShop = 0;
	UBTConsole_execDownloadWebzenShop_Parms parms;

	if ( !pDownloadWebzenShop )
		pDownloadWebzenShop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.DownloadWebzenShop" );

	this->ProcessEvent ( pDownloadWebzenShop, &parms, NULL );

}*/

/*void UBTConsole::execCompletedQuest (  )
{
	static UFunction* pCompletedQuest = 0;
	UBTConsole_execCompletedQuest_Parms parms;

	if ( !pCompletedQuest )
		pCompletedQuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CompletedQuest" );

	this->ProcessEvent ( pCompletedQuest, &parms, NULL );

}*/

/*void UBTConsole::SendMessage ( struct FMessageItem msgItem )
{
	static UFunction* pSendMessage = 0;
	UBTConsole_execSendMessage_Parms parms;

	if ( !pSendMessage )
		pSendMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SendMessage" );

	parms.msgItem = msgItem;
	this->ProcessEvent ( pSendMessage, &parms, NULL );

}*/

/*void UBTConsole::ClearMessageItems (  )
{
	static UFunction* pClearMessageItems = 0;
	UBTConsole_execClearMessageItems_Parms parms;

	if ( !pClearMessageItems )
		pClearMessageItems = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ClearMessageItems" );

	this->ProcessEvent ( pClearMessageItems, &parms, NULL );

}*/

/*void UBTConsole::AddMessageItem ( struct FMessageItem Item )
{
	static UFunction* pAddMessageItem = 0;
	UBTConsole_execAddMessageItem_Parms parms;

	if ( !pAddMessageItem )
		pAddMessageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.AddMessageItem" );

	parms.Item = Item;
	this->ProcessEvent ( pAddMessageItem, &parms, NULL );

}*/

/*struct FMessageItem UBTConsole::ConstructMessageItem ( struct FString Text, unsigned char MessageType )
{
	static UFunction* pConstructMessageItem = 0;
	UBTConsole_execConstructMessageItem_Parms parms;

	if ( !pConstructMessageItem )
		pConstructMessageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ConstructMessageItem" );

	parms.Text = Text;
	parms.MessageType = MessageType;
	this->ProcessEvent ( pConstructMessageItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTConsole::execProhibitAltTab (  )
{
	static UFunction* pProhibitAltTab = 0;
	UBTConsole_execProhibitAltTab_Parms parms;

	if ( !pProhibitAltTab )
		pProhibitAltTab = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ProhibitAltTab" );

	this->ProcessEvent ( pProhibitAltTab, &parms, NULL );

}*/

/*void UBTConsole::execAddSystemMessageSaveShot ( struct FString Text )
{
	static UFunction* pAddSystemMessageSaveShot = 0;
	UBTConsole_execAddSystemMessageSaveShot_Parms parms;

	if ( !pAddSystemMessageSaveShot )
		pAddSystemMessageSaveShot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.AddSystemMessageSaveShot" );

	parms.Text = Text;
	this->ProcessEvent ( pAddSystemMessageSaveShot, &parms, NULL );

}*/

/*void UBTConsole::execAddSystemMessageRegulateShot (  )
{
	static UFunction* pAddSystemMessageRegulateShot = 0;
	UBTConsole_execAddSystemMessageRegulateShot_Parms parms;

	if ( !pAddSystemMessageRegulateShot )
		pAddSystemMessageRegulateShot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.AddSystemMessageRegulateShot" );

	this->ProcessEvent ( pAddSystemMessageRegulateShot, &parms, NULL );

}*/

/*void UBTConsole::DrawMessageItems ( class UCanvas* C )
{
	static UFunction* pDrawMessageItems = 0;
	UBTConsole_execDrawMessageItems_Parms parms;

	if ( !pDrawMessageItems )
		pDrawMessageItems = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.DrawMessageItems" );

	parms.C = C;
	this->ProcessEvent ( pDrawMessageItems, &parms, NULL );

}*/

/*void UBTConsole::DrawTextChattingHelp ( class UCanvas* C )
{
	static UFunction* pDrawTextChattingHelp = 0;
	UBTConsole_execDrawTextChattingHelp_Parms parms;

	if ( !pDrawTextChattingHelp )
		pDrawTextChattingHelp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.DrawTextChattingHelp" );

	parms.C = C;
	this->ProcessEvent ( pDrawTextChattingHelp, &parms, NULL );

}*/

/*void UBTConsole::DrawChatEditBox ( class UCanvas* C )
{
	static UFunction* pDrawChatEditBox = 0;
	UBTConsole_execDrawChatEditBox_Parms parms;

	if ( !pDrawChatEditBox )
		pDrawChatEditBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.DrawChatEditBox" );

	parms.C = C;
	this->ProcessEvent ( pDrawChatEditBox, &parms, NULL );

}*/

/*void UBTConsole::PostRender ( class UCanvas* C )
{
	static UFunction* pPostRender = 0;
	UBTConsole_execPostRender_Parms parms;

	if ( !pPostRender )
		pPostRender = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.PostRender" );

	parms.C = C;
	this->ProcessEvent ( pPostRender, &parms, NULL );

}*/

/*void UBTConsole::PreRender ( class UCanvas* Canvas )
{
	static UFunction* pPreRender = 0;
	UBTConsole_execPreRender_Parms parms;

	if ( !pPreRender )
		pPreRender = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.PreRender" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pPreRender, &parms, NULL );

}*/

/*void UBTConsole::FontReset (  )
{
	static UFunction* pFontReset = 0;
	UBTConsole_execFontReset_Parms parms;

	if ( !pFontReset )
		pFontReset = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.FontReset" );

	this->ProcessEvent ( pFontReset, &parms, NULL );

}*/

/*void UBTConsole::CallBattleHelp (  )
{
	static UFunction* pCallBattleHelp = 0;
	UBTConsole_execCallBattleHelp_Parms parms;

	if ( !pCallBattleHelp )
		pCallBattleHelp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CallBattleHelp" );

	this->ProcessEvent ( pCallBattleHelp, &parms, NULL );

}*/

/*void UBTConsole::CallSelectRadioMessage ( int iIndex )
{
	static UFunction* pCallSelectRadioMessage = 0;
	UBTConsole_execCallSelectRadioMessage_Parms parms;

	if ( !pCallSelectRadioMessage )
		pCallSelectRadioMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CallSelectRadioMessage" );

	parms.iIndex = iIndex;
	this->ProcessEvent ( pCallSelectRadioMessage, &parms, NULL );

}*/

/*void UBTConsole::CallSelectQuickSlot ( int iIndex )
{
	static UFunction* pCallSelectQuickSlot = 0;
	UBTConsole_execCallSelectQuickSlot_Parms parms;

	if ( !pCallSelectQuickSlot )
		pCallSelectQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CallSelectQuickSlot" );

	parms.iIndex = iIndex;
	this->ProcessEvent ( pCallSelectQuickSlot, &parms, NULL );

}*/

/*void UBTConsole::execCallToggleQuickSlot (  )
{
	static UFunction* pCallToggleQuickSlot = 0;
	UBTConsole_execCallToggleQuickSlot_Parms parms;

	if ( !pCallToggleQuickSlot )
		pCallToggleQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CallToggleQuickSlot" );

	this->ProcessEvent ( pCallToggleQuickSlot, &parms, NULL );

}*/

/*void UBTConsole::execSetLoadingTime ( int L, int P )
{
	static UFunction* pSetLoadingTime = 0;
	UBTConsole_execSetLoadingTime_Parms parms;

	if ( !pSetLoadingTime )
		pSetLoadingTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SetLoadingTime" );

	parms.L = L;
	parms.P = P;
	this->ProcessEvent ( pSetLoadingTime, &parms, NULL );

}*/

/*void UBTConsole::execCMDHK ( int Index, struct FString Param1, struct FString Param2, struct FString param3 )
{
	static UFunction* pCMDHK = 0;
	UBTConsole_execCMDHK_Parms parms;

	if ( !pCMDHK )
		pCMDHK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CMDHK" );

	parms.Index = Index;
	parms.Param1 = Param1;
	parms.Param2 = Param2;
	parms.param3 = param3;
	this->ProcessEvent ( pCMDHK, &parms, NULL );

}*/

/*void UBTConsole::execStopQuestLog (  )
{
	static UFunction* pStopQuestLog = 0;
	UBTConsole_execStopQuestLog_Parms parms;

	if ( !pStopQuestLog )
		pStopQuestLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.StopQuestLog" );

	this->ProcessEvent ( pStopQuestLog, &parms, NULL );

}*/

/*void UBTConsole::execCloseWindow ( int Count )
{
	static UFunction* pCloseWindow = 0;
	UBTConsole_execCloseWindow_Parms parms;

	if ( !pCloseWindow )
		pCloseWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.CloseWindow" );

	parms.Count = Count;
	this->ProcessEvent ( pCloseWindow, &parms, NULL );

}*/

/*void UBTConsole::RecordOn_Exception ( int retCode )
{
	static UFunction* pRecordOn_Exception = 0;
	UBTConsole_execRecordOn_Exception_Parms parms;

	if ( !pRecordOn_Exception )
		pRecordOn_Exception = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.RecordOn_Exception" );

	parms.retCode = retCode;
	this->ProcessEvent ( pRecordOn_Exception, &parms, NULL );

}*/

/*void UBTConsole::RecordOn_FnRun ( int Index )
{
	static UFunction* pRecordOn_FnRun = 0;
	UBTConsole_execRecordOn_FnRun_Parms parms;

	if ( !pRecordOn_FnRun )
		pRecordOn_FnRun = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.RecordOn_FnRun" );

	parms.Index = Index;
	this->ProcessEvent ( pRecordOn_FnRun, &parms, NULL );

}*/

/*bool UBTConsole::RecordOn_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pRecordOn_OnOK = 0;
	UBTConsole_execRecordOn_OnOK_Parms parms;

	if ( !pRecordOn_OnOK )
		pRecordOn_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.RecordOn_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pRecordOn_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTConsole::execRecordOn (  )
{
	static UFunction* pRecordOn = 0;
	UBTConsole_execRecordOn_Parms parms;

	if ( !pRecordOn )
		pRecordOn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.RecordOn" );

	this->ProcessEvent ( pRecordOn, &parms, NULL );

}*/

/*void UBTConsole::execShowWindow ( struct FString windowclassname )
{
	static UFunction* pShowWindow = 0;
	UBTConsole_execShowWindow_Parms parms;

	if ( !pShowWindow )
		pShowWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ShowWindow" );

	parms.windowclassname = windowclassname;
	this->ProcessEvent ( pShowWindow, &parms, NULL );

}*/

/*void UBTConsole::execStartAutoMove ( int Server, int Channel, int gameroom )
{
	static UFunction* pStartAutoMove = 0;
	UBTConsole_execStartAutoMove_Parms parms;

	if ( !pStartAutoMove )
		pStartAutoMove = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.StartAutoMove" );

	parms.Server = Server;
	parms.Channel = Channel;
	parms.gameroom = gameroom;
	this->ProcessEvent ( pStartAutoMove, &parms, NULL );

}*/

/*void UBTConsole::execendTutorial (  )
{
	static UFunction* pendTutorial = 0;
	UBTConsole_execendTutorial_Parms parms;

	if ( !pendTutorial )
		pendTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.endTutorial" );

	this->ProcessEvent ( pendTutorial, &parms, NULL );

}*/

/*void UBTConsole::exectutorial ( struct FString Map )
{
	static UFunction* ptutorial = 0;
	UBTConsole_exectutorial_Parms parms;

	if ( !ptutorial )
		ptutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.tutorial" );

	parms.Map = Map;
	this->ProcessEvent ( ptutorial, &parms, NULL );

}*/

/*void UBTConsole::execstopoos (  )
{
	static UFunction* pstopoos = 0;
	UBTConsole_execstopoos_Parms parms;

	if ( !pstopoos )
		pstopoos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.stopoos" );

	this->ProcessEvent ( pstopoos, &parms, NULL );

}*/

/*bool UBTConsole::BlockChangeWeapon ( int nIndex )
{
	static UFunction* pBlockChangeWeapon = 0;
	UBTConsole_execBlockChangeWeapon_Parms parms;

	if ( !pBlockChangeWeapon )
		pBlockChangeWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.BlockChangeWeapon" );

	parms.nIndex = nIndex;
	this->ProcessEvent ( pBlockChangeWeapon, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTConsole::IsHaveMainWeapon ( int nIndex )
{
	static UFunction* pIsHaveMainWeapon = 0;
	UBTConsole_execIsHaveMainWeapon_Parms parms;

	if ( !pIsHaveMainWeapon )
		pIsHaveMainWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.IsHaveMainWeapon" );

	parms.nIndex = nIndex;
	this->ProcessEvent ( pIsHaveMainWeapon, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTConsole::KeyEvent ( unsigned char key, unsigned char Action, float Delta )
{
	static UFunction* pKeyEvent = 0;
	UBTConsole_execKeyEvent_Parms parms;

	if ( !pKeyEvent )
		pKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.KeyEvent" );

	parms.key = key;
	parms.Action = Action;
	parms.Delta = Delta;
	this->ProcessEvent ( pKeyEvent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTConsole::KeyType ( unsigned char key, struct FString Unicode )
{
	static UFunction* pKeyType = 0;
	UBTConsole_execKeyType_Parms parms;

	if ( !pKeyType )
		pKeyType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.KeyType" );

	parms.key = key;
	parms.Unicode = Unicode;
	this->ProcessEvent ( pKeyType, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTConsole::GetChatEnabled (  )
{
	static UFunction* pGetChatEnabled = 0;
	UBTConsole_execGetChatEnabled_Parms parms;

	if ( !pGetChatEnabled )
		pGetChatEnabled = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.GetChatEnabled" );

	this->ProcessEvent ( pGetChatEnabled, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTConsole::SetChatEnabled ( bool Value )
{
	static UFunction* pSetChatEnabled = 0;
	UBTConsole_execSetChatEnabled_Parms parms;

	if ( !pSetChatEnabled )
		pSetChatEnabled = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.SetChatEnabled" );

	parms.Value = Value;
	this->ProcessEvent ( pSetChatEnabled, &parms, NULL );

}*/

/*void UBTConsole::ChatEditBox_OnInputSpace ( class UGUIComponent* Sender, struct FString Text )
{
	static UFunction* pChatEditBox_OnInputSpace = 0;
	UBTConsole_execChatEditBox_OnInputSpace_Parms parms;

	if ( !pChatEditBox_OnInputSpace )
		pChatEditBox_OnInputSpace = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ChatEditBox_OnInputSpace" );

	parms.Sender = Sender;
	parms.Text = Text;
	this->ProcessEvent ( pChatEditBox_OnInputSpace, &parms, NULL );

}*/

/*void UBTConsole::ChatEditBox_OnInputTab ( class UGUIComponent* Sender, struct FString Text )
{
	static UFunction* pChatEditBox_OnInputTab = 0;
	UBTConsole_execChatEditBox_OnInputTab_Parms parms;

	if ( !pChatEditBox_OnInputTab )
		pChatEditBox_OnInputTab = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTConsole.ChatEditBox_OnInputTab" );

	parms.Sender = Sender;
	parms.Text = Text;
	this->ProcessEvent ( pChatEditBox_OnInputTab, &parms, NULL );

}*/

/*void UBTNetGUIPage::OnCompleteOpened (  )
{
	static UFunction* pOnCompleteOpened = 0;
	UBTNetGUIPage_execOnCompleteOpened_Parms parms;

	if ( !pOnCompleteOpened )
		pOnCompleteOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.OnCompleteOpened" );

	this->ProcessEvent ( pOnCompleteOpened, &parms, NULL );

}*/

/*void UBTNetGUIPage::OnBackToLastPage (  )
{
	static UFunction* pOnBackToLastPage = 0;
	UBTNetGUIPage_execOnBackToLastPage_Parms parms;

	if ( !pOnBackToLastPage )
		pOnBackToLastPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.OnBackToLastPage" );

	this->ProcessEvent ( pOnBackToLastPage, &parms, NULL );

}*/

/*void UBTNetGUIPage::ProcessNat (  )
{
	static UFunction* pProcessNat = 0;
	UBTNetGUIPage_execProcessNat_Parms parms;

	if ( !pProcessNat )
		pProcessNat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.ProcessNat" );

	this->ProcessEvent ( pProcessNat, &parms, NULL );

}*/

/*bool UBTNetGUIPage::InternalOnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternalOnPreDraw = 0;
	UBTNetGUIPage_execInternalOnPreDraw_Parms parms;

	if ( !pInternalOnPreDraw )
		pInternalOnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.InternalOnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternalOnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetGUIPage::MyCanClose ( bool bCanceled )
{
	static UFunction* pMyCanClose = 0;
	UBTNetGUIPage_execMyCanClose_Parms parms;

	if ( !pMyCanClose )
		pMyCanClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.MyCanClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pMyCanClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetGUIPage::eventOpened ( class UGUIComponent* Sender )
{
	static UFunction* pOpened = 0;
	UBTNetGUIPage_eventOpened_Parms parms;

	if ( !pOpened )
		pOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.Opened" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOpened, &parms, NULL );

}*/

/*class UBTTcpLink_Login* UBTNetGUIPage::GetTcpLogin (  )
{
	static UFunction* pGetTcpLogin = 0;
	UBTNetGUIPage_execGetTcpLogin_Parms parms;

	if ( !pGetTcpLogin )
		pGetTcpLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.GetTcpLogin" );

	this->ProcessEvent ( pGetTcpLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTNetGUIPage::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTNetGUIPage_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetGUIPage::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTNetGUIPage_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*struct FChatInfo UBTNetGUIPage::TextToChatInfo ( struct FString Text )
{
	static UFunction* pTextToChatInfo = 0;
	UBTNetGUIPage_execTextToChatInfo_Parms parms;

	if ( !pTextToChatInfo )
		pTextToChatInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.TextToChatInfo" );

	parms.Text = Text;
	this->ProcessEvent ( pTextToChatInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetGUIPage::RefreshPage (  )
{
	static UFunction* pRefreshPage = 0;
	UBTNetGUIPage_execRefreshPage_Parms parms;

	if ( !pRefreshPage )
		pRefreshPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPage.RefreshPage" );

	this->ProcessEvent ( pRefreshPage, &parms, NULL );

}*/

/*void UBTNetMainMenu::SendLogin (  )
{
	static UFunction* pSendLogin = 0;
	UBTNetMainMenu_execSendLogin_Parms parms;

	if ( !pSendLogin )
		pSendLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.SendLogin" );

	this->ProcessEvent ( pSendLogin, &parms, NULL );

}*/

/*bool UBTNetMainMenu::OnAppExit ( class UGUIComponent* Sender )
{
	static UFunction* pOnAppExit = 0;
	UBTNetMainMenu_execOnAppExit_Parms parms;

	if ( !pOnAppExit )
		pOnAppExit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.OnAppExit" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnAppExit, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TcpLogin_rfAckLoginWithGlobal_Test ( int Result )
{
	static UFunction* pTcpLogin_rfAckLoginWithGlobal_Test = 0;
	UBTNetMainMenu_execTcpLogin_rfAckLoginWithGlobal_Test_Parms parms;

	if ( !pTcpLogin_rfAckLoginWithGlobal_Test )
		pTcpLogin_rfAckLoginWithGlobal_Test = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_rfAckLoginWithGlobal_Test" );

	parms.Result = Result;
	this->ProcessEvent ( pTcpLogin_rfAckLoginWithGlobal_Test, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TcpLogin_rfAckLoginWithGlobal_Live ( int Result )
{
	static UFunction* pTcpLogin_rfAckLoginWithGlobal_Live = 0;
	UBTNetMainMenu_execTcpLogin_rfAckLoginWithGlobal_Live_Parms parms;

	if ( !pTcpLogin_rfAckLoginWithGlobal_Live )
		pTcpLogin_rfAckLoginWithGlobal_Live = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_rfAckLoginWithGlobal_Live" );

	parms.Result = Result;
	this->ProcessEvent ( pTcpLogin_rfAckLoginWithGlobal_Live, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TcpLogin_rfAckLoginWithThailand_Test ( int Result )
{
	static UFunction* pTcpLogin_rfAckLoginWithThailand_Test = 0;
	UBTNetMainMenu_execTcpLogin_rfAckLoginWithThailand_Test_Parms parms;

	if ( !pTcpLogin_rfAckLoginWithThailand_Test )
		pTcpLogin_rfAckLoginWithThailand_Test = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_rfAckLoginWithThailand_Test" );

	parms.Result = Result;
	this->ProcessEvent ( pTcpLogin_rfAckLoginWithThailand_Test, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TcpLogin_rfAckLoginWithThailand_Live ( int Result )
{
	static UFunction* pTcpLogin_rfAckLoginWithThailand_Live = 0;
	UBTNetMainMenu_execTcpLogin_rfAckLoginWithThailand_Live_Parms parms;

	if ( !pTcpLogin_rfAckLoginWithThailand_Live )
		pTcpLogin_rfAckLoginWithThailand_Live = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_rfAckLoginWithThailand_Live" );

	parms.Result = Result;
	this->ProcessEvent ( pTcpLogin_rfAckLoginWithThailand_Live, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TcpLogin_rfAckLoginWithWZAuth_Test ( int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType )
{
	static UFunction* pTcpLogin_rfAckLoginWithWZAuth_Test = 0;
	UBTNetMainMenu_execTcpLogin_rfAckLoginWithWZAuth_Test_Parms parms;

	if ( !pTcpLogin_rfAckLoginWithWZAuth_Test )
		pTcpLogin_rfAckLoginWithWZAuth_Test = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_rfAckLoginWithWZAuth_Test" );

	parms.Result = Result;
	parms.wzp_AccountType = wzp_AccountType;
	parms.wzp_IsBlock = wzp_IsBlock;
	parms.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	parms.ChannelType = ChannelType;
	this->ProcessEvent ( pTcpLogin_rfAckLoginWithWZAuth_Test, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TcpLogin_rfAckLoginWithWZAuth_Live ( int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType )
{
	static UFunction* pTcpLogin_rfAckLoginWithWZAuth_Live = 0;
	UBTNetMainMenu_execTcpLogin_rfAckLoginWithWZAuth_Live_Parms parms;

	if ( !pTcpLogin_rfAckLoginWithWZAuth_Live )
		pTcpLogin_rfAckLoginWithWZAuth_Live = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_rfAckLoginWithWZAuth_Live" );

	parms.Result = Result;
	parms.wzp_AccountType = wzp_AccountType;
	parms.wzp_IsBlock = wzp_IsBlock;
	parms.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	parms.ChannelType = ChannelType;
	this->ProcessEvent ( pTcpLogin_rfAckLoginWithWZAuth_Live, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TcpLogin_rfAckLoginWithTencentAuth_Test ( int Result, unsigned char tc_AccountType, unsigned char tc_IsBlock )
{
	static UFunction* pTcpLogin_rfAckLoginWithTencentAuth_Test = 0;
	UBTNetMainMenu_execTcpLogin_rfAckLoginWithTencentAuth_Test_Parms parms;

	if ( !pTcpLogin_rfAckLoginWithTencentAuth_Test )
		pTcpLogin_rfAckLoginWithTencentAuth_Test = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_rfAckLoginWithTencentAuth_Test" );

	parms.Result = Result;
	parms.tc_AccountType = tc_AccountType;
	parms.tc_IsBlock = tc_IsBlock;
	this->ProcessEvent ( pTcpLogin_rfAckLoginWithTencentAuth_Test, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TcpLogin_rfAckLoginWithTencentAuth_Live ( int Result, unsigned char tc_AccountType, unsigned char tc_IsBlock )
{
	static UFunction* pTcpLogin_rfAckLoginWithTencentAuth_Live = 0;
	UBTNetMainMenu_execTcpLogin_rfAckLoginWithTencentAuth_Live_Parms parms;

	if ( !pTcpLogin_rfAckLoginWithTencentAuth_Live )
		pTcpLogin_rfAckLoginWithTencentAuth_Live = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_rfAckLoginWithTencentAuth_Live" );

	parms.Result = Result;
	parms.tc_AccountType = tc_AccountType;
	parms.tc_IsBlock = tc_IsBlock;
	this->ProcessEvent ( pTcpLogin_rfAckLoginWithTencentAuth_Live, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::RequestUpdateQuickSlot ( int iQuickSlotIdx )
{
	static UFunction* pRequestUpdateQuickSlot = 0;
	UBTNetMainMenu_execRequestUpdateQuickSlot_Parms parms;

	if ( !pRequestUpdateQuickSlot )
		pRequestUpdateQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.RequestUpdateQuickSlot" );

	parms.iQuickSlotIdx = iQuickSlotIdx;
	this->ProcessEvent ( pRequestUpdateQuickSlot, &parms, NULL );

}*/

/*void UBTNetMainMenu::UpdateSendQuickSlotIndex ( int iQuickSlotIndex )
{
	static UFunction* pUpdateSendQuickSlotIndex = 0;
	UBTNetMainMenu_execUpdateSendQuickSlotIndex_Parms parms;

	if ( !pUpdateSendQuickSlotIndex )
		pUpdateSendQuickSlotIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateSendQuickSlotIndex" );

	parms.iQuickSlotIndex = iQuickSlotIndex;
	this->ProcessEvent ( pUpdateSendQuickSlotIndex, &parms, NULL );

}*/

/*bool UBTNetMainMenu::CheckMoveToChannel ( int iServerIndex )
{
	static UFunction* pCheckMoveToChannel = 0;
	UBTNetMainMenu_execCheckMoveToChannel_Parms parms;

	if ( !pCheckMoveToChannel )
		pCheckMoveToChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckMoveToChannel" );

	parms.iServerIndex = iServerIndex;
	this->ProcessEvent ( pCheckMoveToChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::CheckWebzenShopItemList (  )
{
	static UFunction* pCheckWebzenShopItemList = 0;
	UBTNetMainMenu_execCheckWebzenShopItemList_Parms parms;

	if ( !pCheckWebzenShopItemList )
		pCheckWebzenShopItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckWebzenShopItemList" );

	this->ProcessEvent ( pCheckWebzenShopItemList, &parms, NULL );

}*/

/*void UBTNetMainMenu::UpdateWebzenShopItemList ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* pUpdateWebzenShopItemList = 0;
	UBTNetMainMenu_execUpdateWebzenShopItemList_Parms parms;

	if ( !pUpdateWebzenShopItemList )
		pUpdateWebzenShopItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateWebzenShopItemList" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( pUpdateWebzenShopItemList, &parms, NULL );

}*/

/*bool UBTNetMainMenu::ShowHelpWindow_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pShowHelpWindow_OnOK = 0;
	UBTNetMainMenu_execShowHelpWindow_OnOK_Parms parms;

	if ( !pShowHelpWindow_OnOK )
		pShowHelpWindow_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ShowHelpWindow_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pShowHelpWindow_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::ShowHelpWindow (  )
{
	static UFunction* pShowHelpWindow = 0;
	UBTNetMainMenu_execShowHelpWindow_Parms parms;

	if ( !pShowHelpWindow )
		pShowHelpWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ShowHelpWindow" );

	this->ProcessEvent ( pShowHelpWindow, &parms, NULL );

}*/

/*bool UBTNetMainMenu::ShowReqCashWindow_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pShowReqCashWindow_OnOK = 0;
	UBTNetMainMenu_execShowReqCashWindow_OnOK_Parms parms;

	if ( !pShowReqCashWindow_OnOK )
		pShowReqCashWindow_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ShowReqCashWindow_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pShowReqCashWindow_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::ShowCashChargeWindow_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pShowCashChargeWindow_OnOK = 0;
	UBTNetMainMenu_execShowCashChargeWindow_OnOK_Parms parms;

	if ( !pShowCashChargeWindow_OnOK )
		pShowCashChargeWindow_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ShowCashChargeWindow_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pShowCashChargeWindow_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::ShowCashChargeWindow (  )
{
	static UFunction* pShowCashChargeWindow = 0;
	UBTNetMainMenu_execShowCashChargeWindow_Parms parms;

	if ( !pShowCashChargeWindow )
		pShowCashChargeWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ShowCashChargeWindow" );

	this->ProcessEvent ( pShowCashChargeWindow, &parms, NULL );

}*/

/*bool UBTNetMainMenu::Internal_OnFunctionKey ( class UGUIComponent* Sender, unsigned char FunctionKey, struct FString Text )
{
	static UFunction* pInternal_OnFunctionKey = 0;
	UBTNetMainMenu_execInternal_OnFunctionKey_Parms parms;

	if ( !pInternal_OnFunctionKey )
		pInternal_OnFunctionKey = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.Internal_OnFunctionKey" );

	parms.Sender = Sender;
	parms.FunctionKey = FunctionKey;
	parms.Text = Text;
	this->ProcessEvent ( pInternal_OnFunctionKey, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::TPChat_ChangeTab_OnClickTemp ( int TabIndex )
{
	static UFunction* pTPChat_ChangeTab_OnClickTemp = 0;
	UBTNetMainMenu_execTPChat_ChangeTab_OnClickTemp_Parms parms;

	if ( !pTPChat_ChangeTab_OnClickTemp )
		pTPChat_ChangeTab_OnClickTemp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TPChat_ChangeTab_OnClickTemp" );

	parms.TabIndex = TabIndex;
	this->ProcessEvent ( pTPChat_ChangeTab_OnClickTemp, &parms, NULL );

}*/

/*void UBTNetMainMenu::TPChat_ChangeTab_OnClick ( int TabIndex )
{
	static UFunction* pTPChat_ChangeTab_OnClick = 0;
	UBTNetMainMenu_execTPChat_ChangeTab_OnClick_Parms parms;

	if ( !pTPChat_ChangeTab_OnClick )
		pTPChat_ChangeTab_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TPChat_ChangeTab_OnClick" );

	parms.TabIndex = TabIndex;
	this->ProcessEvent ( pTPChat_ChangeTab_OnClick, &parms, NULL );

}*/

/*void UBTNetMainMenu::TPChat_OnChageChatMode ( int ChatMode )
{
	static UFunction* pTPChat_OnChageChatMode = 0;
	UBTNetMainMenu_execTPChat_OnChageChatMode_Parms parms;

	if ( !pTPChat_OnChageChatMode )
		pTPChat_OnChageChatMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TPChat_OnChageChatMode" );

	parms.ChatMode = ChatMode;
	this->ProcessEvent ( pTPChat_OnChageChatMode, &parms, NULL );

}*/

/*void UBTNetMainMenu::TPChat_OnInputTab ( class UGUIComponent* Sender, struct FString Text )
{
	static UFunction* pTPChat_OnInputTab = 0;
	UBTNetMainMenu_execTPChat_OnInputTab_Parms parms;

	if ( !pTPChat_OnInputTab )
		pTPChat_OnInputTab = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TPChat_OnInputTab" );

	parms.Sender = Sender;
	parms.Text = Text;
	this->ProcessEvent ( pTPChat_OnInputTab, &parms, NULL );

}*/

/*void UBTNetMainMenu::TPChat_OnInputSpace ( class UGUIComponent* Sender, struct FString Text )
{
	static UFunction* pTPChat_OnInputSpace = 0;
	UBTNetMainMenu_execTPChat_OnInputSpace_Parms parms;

	if ( !pTPChat_OnInputSpace )
		pTPChat_OnInputSpace = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TPChat_OnInputSpace" );

	parms.Sender = Sender;
	parms.Text = Text;
	this->ProcessEvent ( pTPChat_OnInputSpace, &parms, NULL );

}*/

/*bool UBTNetMainMenu::Internal_OnChat ( class UGUIComponent* Sender, struct FString Text )
{
	static UFunction* pInternal_OnChat = 0;
	UBTNetMainMenu_execInternal_OnChat_Parms parms;

	if ( !pInternal_OnChat )
		pInternal_OnChat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.Internal_OnChat" );

	parms.Sender = Sender;
	parms.Text = Text;
	this->ProcessEvent ( pInternal_OnChat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::ChatBanEnd_OnTimer ( int Index )
{
	static UFunction* pChatBanEnd_OnTimer = 0;
	UBTNetMainMenu_execChatBanEnd_OnTimer_Parms parms;

	if ( !pChatBanEnd_OnTimer )
		pChatBanEnd_OnTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ChatBanEnd_OnTimer" );

	parms.Index = Index;
	this->ProcessEvent ( pChatBanEnd_OnTimer, &parms, NULL );

}*/

/*bool UBTNetMainMenu::CheckChatBan (  )
{
	static UFunction* pCheckChatBan = 0;
	UBTNetMainMenu_execCheckChatBan_Parms parms;

	if ( !pCheckChatBan )
		pCheckChatBan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckChatBan" );

	this->ProcessEvent ( pCheckChatBan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::UpdateChatBan (  )
{
	static UFunction* pUpdateChatBan = 0;
	UBTNetMainMenu_execUpdateChatBan_Parms parms;

	if ( !pUpdateChatBan )
		pUpdateChatBan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateChatBan" );

	this->ProcessEvent ( pUpdateChatBan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UBTNetMainMenu::IsInClanChannel ( struct FString ServerIP, int serverPort, int ChannelID )
{
	static UFunction* pIsInClanChannel = 0;
	UBTNetMainMenu_execIsInClanChannel_Parms parms;

	if ( !pIsInClanChannel )
		pIsInClanChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.IsInClanChannel" );

	parms.ServerIP = ServerIP;
	parms.serverPort = serverPort;
	parms.ChannelID = ChannelID;
	this->ProcessEvent ( pIsInClanChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::IsInPageLobby (  )
{
	static UFunction* pIsInPageLobby = 0;
	UBTNetMainMenu_execIsInPageLobby_Parms parms;

	if ( !pIsInPageLobby )
		pIsInPageLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.IsInPageLobby" );

	this->ProcessEvent ( pIsInPageLobby, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::IsInPageServerSelection (  )
{
	static UFunction* pIsInPageServerSelection = 0;
	UBTNetMainMenu_execIsInPageServerSelection_Parms parms;

	if ( !pIsInPageServerSelection )
		pIsInPageServerSelection = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.IsInPageServerSelection" );

	this->ProcessEvent ( pIsInPageServerSelection, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::IsGameReadyOrPlaying (  )
{
	static UFunction* pIsGameReadyOrPlaying = 0;
	UBTNetMainMenu_execIsGameReadyOrPlaying_Parms parms;

	if ( !pIsGameReadyOrPlaying )
		pIsGameReadyOrPlaying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.IsGameReadyOrPlaying" );

	this->ProcessEvent ( pIsGameReadyOrPlaying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::IsInRangeDate ( struct FBtrDouble ServerTime, int syear, int smonth, int sday, int shour, int smin, int eyear, int emonth, int eday, int ehour, int emin )
{
	static UFunction* pIsInRangeDate = 0;
	UBTNetMainMenu_execIsInRangeDate_Parms parms;

	if ( !pIsInRangeDate )
		pIsInRangeDate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.IsInRangeDate" );

	parms.ServerTime = ServerTime;
	parms.syear = syear;
	parms.smonth = smonth;
	parms.sday = sday;
	parms.shour = shour;
	parms.smin = smin;
	parms.eyear = eyear;
	parms.emonth = emonth;
	parms.eday = eday;
	parms.ehour = ehour;
	parms.emin = emin;
	this->ProcessEvent ( pIsInRangeDate, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::Is18YearsOld ( struct FBtrDouble ServerTime, struct FString BirthDay )
{
	static UFunction* pIs18YearsOld = 0;
	UBTNetMainMenu_execIs18YearsOld_Parms parms;

	if ( !pIs18YearsOld )
		pIs18YearsOld = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.Is18YearsOld" );

	parms.ServerTime = ServerTime;
	parms.BirthDay = BirthDay;
	this->ProcessEvent ( pIs18YearsOld, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::UpdateTimeBatteryAAS (  )
{
	static UFunction* pUpdateTimeBatteryAAS = 0;
	UBTNetMainMenu_execUpdateTimeBatteryAAS_Parms parms;

	if ( !pUpdateTimeBatteryAAS )
		pUpdateTimeBatteryAAS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateTimeBatteryAAS" );

	this->ProcessEvent ( pUpdateTimeBatteryAAS, &parms, NULL );

}*/

/*void UBTNetMainMenu::PopAASQueue (  )
{
	static UFunction* pPopAASQueue = 0;
	UBTNetMainMenu_execPopAASQueue_Parms parms;

	if ( !pPopAASQueue )
		pPopAASQueue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.PopAASQueue" );

	this->ProcessEvent ( pPopAASQueue, &parms, NULL );

}*/

/*float UBTNetMainMenu::GetAASFirstTime (  )
{
	static UFunction* pGetAASFirstTime = 0;
	UBTNetMainMenu_execGetAASFirstTime_Parms parms;

	if ( !pGetAASFirstTime )
		pGetAASFirstTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.GetAASFirstTime" );

	this->ProcessEvent ( pGetAASFirstTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UBTNetMainMenu::GetAASFirst (  )
{
	static UFunction* pGetAASFirst = 0;
	UBTNetMainMenu_execGetAASFirst_Parms parms;

	if ( !pGetAASFirst )
		pGetAASFirst = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.GetAASFirst" );

	this->ProcessEvent ( pGetAASFirst, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::PushAASQueue ( struct FString Text, float Time, unsigned char AASLevel )
{
	static UFunction* pPushAASQueue = 0;
	UBTNetMainMenu_execPushAASQueue_Parms parms;

	if ( !pPushAASQueue )
		pPushAASQueue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.PushAASQueue" );

	parms.Text = Text;
	parms.Time = Time;
	parms.AASLevel = AASLevel;
	this->ProcessEvent ( pPushAASQueue, &parms, NULL );

}*/

/*float UBTNetMainMenu::GetAASBeginTime ( unsigned char byLevel )
{
	static UFunction* pGetAASBeginTime = 0;
	UBTNetMainMenu_execGetAASBeginTime_Parms parms;

	if ( !pGetAASBeginTime )
		pGetAASBeginTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.GetAASBeginTime" );

	parms.byLevel = byLevel;
	this->ProcessEvent ( pGetAASBeginTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*unsigned char UBTNetMainMenu::GetAASLevel (  )
{
	static UFunction* pGetAASLevel = 0;
	UBTNetMainMenu_execGetAASLevel_Parms parms;

	if ( !pGetAASLevel )
		pGetAASLevel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.GetAASLevel" );

	this->ProcessEvent ( pGetAASLevel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::SetAASMessage ( unsigned char byType, int AccumTime )
{
	static UFunction* pSetAASMessage = 0;
	UBTNetMainMenu_execSetAASMessage_Parms parms;

	if ( !pSetAASMessage )
		pSetAASMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.SetAASMessage" );

	parms.byType = byType;
	parms.AccumTime = AccumTime;
	this->ProcessEvent ( pSetAASMessage, &parms, NULL );

}*/

/*void UBTNetMainMenu::ResetBatteryAAS (  )
{
	static UFunction* pResetBatteryAAS = 0;
	UBTNetMainMenu_execResetBatteryAAS_Parms parms;

	if ( !pResetBatteryAAS )
		pResetBatteryAAS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ResetBatteryAAS" );

	this->ProcessEvent ( pResetBatteryAAS, &parms, NULL );

}*/

/*void UBTNetMainMenu::UpdateTimeBatteryNotice (  )
{
	static UFunction* pUpdateTimeBatteryNotice = 0;
	UBTNetMainMenu_execUpdateTimeBatteryNotice_Parms parms;

	if ( !pUpdateTimeBatteryNotice )
		pUpdateTimeBatteryNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateTimeBatteryNotice" );

	this->ProcessEvent ( pUpdateTimeBatteryNotice, &parms, NULL );

}*/

/*void UBTNetMainMenu::PopNoticeQueue (  )
{
	static UFunction* pPopNoticeQueue = 0;
	UBTNetMainMenu_execPopNoticeQueue_Parms parms;

	if ( !pPopNoticeQueue )
		pPopNoticeQueue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.PopNoticeQueue" );

	this->ProcessEvent ( pPopNoticeQueue, &parms, NULL );

}*/

/*struct FString UBTNetMainMenu::GetNoticeFirst (  )
{
	static UFunction* pGetNoticeFirst = 0;
	UBTNetMainMenu_execGetNoticeFirst_Parms parms;

	if ( !pGetNoticeFirst )
		pGetNoticeFirst = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.GetNoticeFirst" );

	this->ProcessEvent ( pGetNoticeFirst, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::PushNoticeQueue ( struct FString Notice )
{
	static UFunction* pPushNoticeQueue = 0;
	UBTNetMainMenu_execPushNoticeQueue_Parms parms;

	if ( !pPushNoticeQueue )
		pPushNoticeQueue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.PushNoticeQueue" );

	parms.Notice = Notice;
	this->ProcessEvent ( pPushNoticeQueue, &parms, NULL );

}*/

/*void UBTNetMainMenu::ResetBatteryNotice (  )
{
	static UFunction* pResetBatteryNotice = 0;
	UBTNetMainMenu_execResetBatteryNotice_Parms parms;

	if ( !pResetBatteryNotice )
		pResetBatteryNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ResetBatteryNotice" );

	this->ProcessEvent ( pResetBatteryNotice, &parms, NULL );

}*/

/*bool UBTNetMainMenu::TextToGMCommand ( struct FString Text )
{
	static UFunction* pTextToGMCommand = 0;
	UBTNetMainMenu_execTextToGMCommand_Parms parms;

	if ( !pTextToGMCommand )
		pTextToGMCommand = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TextToGMCommand" );

	parms.Text = Text;
	this->ProcessEvent ( pTextToGMCommand, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TextToCommand ( struct FString Text )
{
	static UFunction* pTextToCommand = 0;
	UBTNetMainMenu_execTextToCommand_Parms parms;

	if ( !pTextToCommand )
		pTextToCommand = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TextToCommand" );

	parms.Text = Text;
	this->ProcessEvent ( pTextToCommand, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::UpdateChatLog (  )
{
	static UFunction* pUpdateChatLog = 0;
	UBTNetMainMenu_execUpdateChatLog_Parms parms;

	if ( !pUpdateChatLog )
		pUpdateChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateChatLog" );

	this->ProcessEvent ( pUpdateChatLog, &parms, NULL );

}*/

/*void UBTNetMainMenu::ResetChatLog (  )
{
	static UFunction* pResetChatLog = 0;
	UBTNetMainMenu_execResetChatLog_Parms parms;

	if ( !pResetChatLog )
		pResetChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ResetChatLog" );

	this->ProcessEvent ( pResetChatLog, &parms, NULL );

}*/

/*bool UBTNetMainMenu::SelectChatLog ( int ChatType, struct FString chatText )
{
	static UFunction* pSelectChatLog = 0;
	UBTNetMainMenu_execSelectChatLog_Parms parms;

	if ( !pSelectChatLog )
		pSelectChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.SelectChatLog" );

	parms.ChatType = ChatType;
	parms.chatText = chatText;
	this->ProcessEvent ( pSelectChatLog, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::BroadCastItemChatLog_Extra ( struct FString cL )
{
	static UFunction* pBroadCastItemChatLog_Extra = 0;
	UBTNetMainMenu_execBroadCastItemChatLog_Extra_Parms parms;

	if ( !pBroadCastItemChatLog_Extra )
		pBroadCastItemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.BroadCastItemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pBroadCastItemChatLog_Extra, &parms, NULL );

}*/

/*void UBTNetMainMenu::TeamChatLog_Extra ( struct FString cL )
{
	static UFunction* pTeamChatLog_Extra = 0;
	UBTNetMainMenu_execTeamChatLog_Extra_Parms parms;

	if ( !pTeamChatLog_Extra )
		pTeamChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TeamChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog_Extra, &parms, NULL );

}*/

/*void UBTNetMainMenu::SystemChatLog_Extra ( struct FString cL )
{
	static UFunction* pSystemChatLog_Extra = 0;
	UBTNetMainMenu_execSystemChatLog_Extra_Parms parms;

	if ( !pSystemChatLog_Extra )
		pSystemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.SystemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog_Extra, &parms, NULL );

}*/

/*void UBTNetMainMenu::SelfChatLog_Extra ( struct FString cL )
{
	static UFunction* pSelfChatLog_Extra = 0;
	UBTNetMainMenu_execSelfChatLog_Extra_Parms parms;

	if ( !pSelfChatLog_Extra )
		pSelfChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.SelfChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog_Extra, &parms, NULL );

}*/

/*void UBTNetMainMenu::WhisperChatLog_Extra ( struct FString cL )
{
	static UFunction* pWhisperChatLog_Extra = 0;
	UBTNetMainMenu_execWhisperChatLog_Extra_Parms parms;

	if ( !pWhisperChatLog_Extra )
		pWhisperChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.WhisperChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog_Extra, &parms, NULL );

}*/

/*void UBTNetMainMenu::ClanChatLog_Extra ( struct FString cL )
{
	static UFunction* pClanChatLog_Extra = 0;
	UBTNetMainMenu_execClanChatLog_Extra_Parms parms;

	if ( !pClanChatLog_Extra )
		pClanChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ClanChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog_Extra, &parms, NULL );

}*/

/*void UBTNetMainMenu::NormalChatLog_Extra ( struct FString cL )
{
	static UFunction* pNormalChatLog_Extra = 0;
	UBTNetMainMenu_execNormalChatLog_Extra_Parms parms;

	if ( !pNormalChatLog_Extra )
		pNormalChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.NormalChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog_Extra, &parms, NULL );

}*/

/*void UBTNetMainMenu::ClearChatLog_Extra (  )
{
	static UFunction* pClearChatLog_Extra = 0;
	UBTNetMainMenu_execClearChatLog_Extra_Parms parms;

	if ( !pClearChatLog_Extra )
		pClearChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ClearChatLog_Extra" );

	this->ProcessEvent ( pClearChatLog_Extra, &parms, NULL );

}*/

/*void UBTNetMainMenu::BroadCastItemChatLog ( struct FString cL )
{
	static UFunction* pBroadCastItemChatLog = 0;
	UBTNetMainMenu_execBroadCastItemChatLog_Parms parms;

	if ( !pBroadCastItemChatLog )
		pBroadCastItemChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.BroadCastItemChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pBroadCastItemChatLog, &parms, NULL );

}*/

/*void UBTNetMainMenu::TeamChatLog ( struct FString cL )
{
	static UFunction* pTeamChatLog = 0;
	UBTNetMainMenu_execTeamChatLog_Parms parms;

	if ( !pTeamChatLog )
		pTeamChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TeamChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog, &parms, NULL );

}*/

/*void UBTNetMainMenu::SystemChatLog ( struct FString cL )
{
	static UFunction* pSystemChatLog = 0;
	UBTNetMainMenu_execSystemChatLog_Parms parms;

	if ( !pSystemChatLog )
		pSystemChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.SystemChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog, &parms, NULL );

}*/

/*void UBTNetMainMenu::SelfChatLog ( struct FString cL )
{
	static UFunction* pSelfChatLog = 0;
	UBTNetMainMenu_execSelfChatLog_Parms parms;

	if ( !pSelfChatLog )
		pSelfChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.SelfChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog, &parms, NULL );

}*/

/*void UBTNetMainMenu::WhisperChatLog ( struct FString cL )
{
	static UFunction* pWhisperChatLog = 0;
	UBTNetMainMenu_execWhisperChatLog_Parms parms;

	if ( !pWhisperChatLog )
		pWhisperChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.WhisperChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog, &parms, NULL );

}*/

/*void UBTNetMainMenu::ClanChatLog ( struct FString cL )
{
	static UFunction* pClanChatLog = 0;
	UBTNetMainMenu_execClanChatLog_Parms parms;

	if ( !pClanChatLog )
		pClanChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ClanChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog, &parms, NULL );

}*/

/*void UBTNetMainMenu::NormalChatLog ( struct FString cL )
{
	static UFunction* pNormalChatLog = 0;
	UBTNetMainMenu_execNormalChatLog_Parms parms;

	if ( !pNormalChatLog )
		pNormalChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.NormalChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog, &parms, NULL );

}*/

/*void UBTNetMainMenu::ClearChatLog (  )
{
	static UFunction* pClearChatLog = 0;
	UBTNetMainMenu_execClearChatLog_Parms parms;

	if ( !pClearChatLog )
		pClearChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ClearChatLog" );

	this->ProcessEvent ( pClearChatLog, &parms, NULL );

}*/

/*int UBTNetMainMenu::GetChatLogTopIndex (  )
{
	static UFunction* pGetChatLogTopIndex = 0;
	UBTNetMainMenu_execGetChatLogTopIndex_Parms parms;

	if ( !pGetChatLogTopIndex )
		pGetChatLogTopIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.GetChatLogTopIndex" );

	this->ProcessEvent ( pGetChatLogTopIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::AddChatLog ( struct FString chatText, int ChatType, bool bForceUpdateLast )
{
	static UFunction* pAddChatLog = 0;
	UBTNetMainMenu_execAddChatLog_Parms parms;

	if ( !pAddChatLog )
		pAddChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.AddChatLog" );

	parms.chatText = chatText;
	parms.ChatType = ChatType;
	parms.bForceUpdateLast = bForceUpdateLast;
	this->ProcessEvent ( pAddChatLog, &parms, NULL );

}*/

/*bool UBTNetMainMenu::Exit_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pExit_OnOK = 0;
	UBTNetMainMenu_execExit_OnOK_Parms parms;

	if ( !pExit_OnOK )
		pExit_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.Exit_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pExit_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::TcpLogin_rfAckHash ( int Result, struct FString Error )
{
	static UFunction* pTcpLogin_rfAckHash = 0;
	UBTNetMainMenu_execTcpLogin_rfAckHash_Parms parms;

	if ( !pTcpLogin_rfAckHash )
		pTcpLogin_rfAckHash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_rfAckHash" );

	parms.Result = Result;
	parms.Error = Error;
	this->ProcessEvent ( pTcpLogin_rfAckHash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::TcpLogin_OnError ( int ErrCode )
{
	static UFunction* pTcpLogin_OnError = 0;
	UBTNetMainMenu_execTcpLogin_OnError_Parms parms;

	if ( !pTcpLogin_OnError )
		pTcpLogin_OnError = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_OnError" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpLogin_OnError, &parms, NULL );

}*/

/*void UBTNetMainMenu::TcpLogin_OnClose ( int ErrCode )
{
	static UFunction* pTcpLogin_OnClose = 0;
	UBTNetMainMenu_execTcpLogin_OnClose_Parms parms;

	if ( !pTcpLogin_OnClose )
		pTcpLogin_OnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_OnClose" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpLogin_OnClose, &parms, NULL );

}*/

/*void UBTNetMainMenu::TcpLogin_OnConnect ( int ErrCode )
{
	static UFunction* pTcpLogin_OnConnect = 0;
	UBTNetMainMenu_execTcpLogin_OnConnect_Parms parms;

	if ( !pTcpLogin_OnConnect )
		pTcpLogin_OnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.TcpLogin_OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpLogin_OnConnect, &parms, NULL );

}*/

/*void UBTNetMainMenu::SetPage ( unsigned char PageType, bool closeLastMenu )
{
	static UFunction* pSetPage = 0;
	UBTNetMainMenu_execSetPage_Parms parms;

	if ( !pSetPage )
		pSetPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.SetPage" );

	parms.PageType = PageType;
	parms.closeLastMenu = closeLastMenu;
	this->ProcessEvent ( pSetPage, &parms, NULL );

}*/

/*void UBTNetMainMenu::HaltNetwork (  )
{
	static UFunction* pHaltNetwork = 0;
	UBTNetMainMenu_execHaltNetwork_Parms parms;

	if ( !pHaltNetwork )
		pHaltNetwork = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.HaltNetwork" );

	this->ProcessEvent ( pHaltNetwork, &parms, NULL );

}*/

/*bool UBTNetMainMenu::eventrfReqForceNatTypeSetting ( int NatType )
{
	static UFunction* prfReqForceNatTypeSetting = 0;
	UBTNetMainMenu_eventrfReqForceNatTypeSetting_Parms parms;

	if ( !prfReqForceNatTypeSetting )
		prfReqForceNatTypeSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.rfReqForceNatTypeSetting" );

	parms.NatType = NatType;
	this->ProcessEvent ( prfReqForceNatTypeSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::CheckNatPhrase2HK (  )
{
	static UFunction* pCheckNatPhrase2HK = 0;
	UBTNetMainMenu_execCheckNatPhrase2HK_Parms parms;

	if ( !pCheckNatPhrase2HK )
		pCheckNatPhrase2HK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckNatPhrase2HK" );

	this->ProcessEvent ( pCheckNatPhrase2HK, &parms, NULL );

}*/

/*void UBTNetMainMenu::CheckNatPhrase1HK (  )
{
	static UFunction* pCheckNatPhrase1HK = 0;
	UBTNetMainMenu_execCheckNatPhrase1HK_Parms parms;

	if ( !pCheckNatPhrase1HK )
		pCheckNatPhrase1HK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckNatPhrase1HK" );

	this->ProcessEvent ( pCheckNatPhrase1HK, &parms, NULL );

}*/

/*void UBTNetMainMenu::CheckNatPhrase0HK (  )
{
	static UFunction* pCheckNatPhrase0HK = 0;
	UBTNetMainMenu_execCheckNatPhrase0HK_Parms parms;

	if ( !pCheckNatPhrase0HK )
		pCheckNatPhrase0HK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckNatPhrase0HK" );

	this->ProcessEvent ( pCheckNatPhrase0HK, &parms, NULL );

}*/

/*void UBTNetMainMenu::StartNatCheck (  )
{
	static UFunction* pStartNatCheck = 0;
	UBTNetMainMenu_execStartNatCheck_Parms parms;

	if ( !pStartNatCheck )
		pStartNatCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.StartNatCheck" );

	this->ProcessEvent ( pStartNatCheck, &parms, NULL );

}*/

/*void UBTNetMainMenu::eventrfReqStartNatDiag ( struct FString Server1Addr, int Server1Port, struct FString Server2Addr, int Server2Port )
{
	static UFunction* prfReqStartNatDiag = 0;
	UBTNetMainMenu_eventrfReqStartNatDiag_Parms parms;

	if ( !prfReqStartNatDiag )
		prfReqStartNatDiag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.rfReqStartNatDiag" );

	parms.Server1Addr = Server1Addr;
	parms.Server1Port = Server1Port;
	parms.Server2Addr = Server2Addr;
	parms.Server2Port = Server2Port;
	this->ProcessEvent ( prfReqStartNatDiag, &parms, NULL );

}*/

/*void UBTNetMainMenu::deleOnClose ( bool bCancelled )
{
	static UFunction* pdeleOnClose = 0;
	UBTNetMainMenu_execdeleOnClose_Parms parms;

	if ( !pdeleOnClose )
		pdeleOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.deleOnClose" );

	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pdeleOnClose, &parms, NULL );

}*/

/*bool UBTNetMainMenu::deleOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State )
{
	static UFunction* pdeleOnKeyEvent = 0;
	UBTNetMainMenu_execdeleOnKeyEvent_Parms parms;

	if ( !pdeleOnKeyEvent )
		pdeleOnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.deleOnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pdeleOnKeyEvent, &parms, NULL );

	*key = parms.key;
	*State = parms.State;
	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::deleOnOpen (  )
{
	static UFunction* pdeleOnOpen = 0;
	UBTNetMainMenu_execdeleOnOpen_Parms parms;

	if ( !pdeleOnOpen )
		pdeleOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.deleOnOpen" );

	this->ProcessEvent ( pdeleOnOpen, &parms, NULL );

}*/

/*class UBTTcpLink_Login* UBTNetMainMenu::GetTcpLogin (  )
{
	static UFunction* pGetTcpLogin = 0;
	UBTNetMainMenu_execGetTcpLogin_Parms parms;

	if ( !pGetTcpLogin )
		pGetTcpLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.GetTcpLogin" );

	this->ProcessEvent ( pGetTcpLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::InitializeTcpLogin ( struct FString IP, int Port )
{
	static UFunction* pInitializeTcpLogin = 0;
	UBTNetMainMenu_execInitializeTcpLogin_Parms parms;

	if ( !pInitializeTcpLogin )
		pInitializeTcpLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.InitializeTcpLogin" );

	parms.IP = IP;
	parms.Port = Port;
	this->ProcessEvent ( pInitializeTcpLogin, &parms, NULL );

}*/

/*void UBTNetMainMenu::InitializeTcpChannel ( struct FString IP, int Port, int DataPort )
{
	static UFunction* pInitializeTcpChannel = 0;
	UBTNetMainMenu_execInitializeTcpChannel_Parms parms;

	if ( !pInitializeTcpChannel )
		pInitializeTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.InitializeTcpChannel" );

	parms.IP = IP;
	parms.Port = Port;
	parms.DataPort = DataPort;
	this->ProcessEvent ( pInitializeTcpChannel, &parms, NULL );

}*/

/*void UBTNetMainMenu::ShowPlayTimePerHour_OnEventTimer ( int Index )
{
	static UFunction* pShowPlayTimePerHour_OnEventTimer = 0;
	UBTNetMainMenu_execShowPlayTimePerHour_OnEventTimer_Parms parms;

	if ( !pShowPlayTimePerHour_OnEventTimer )
		pShowPlayTimePerHour_OnEventTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ShowPlayTimePerHour_OnEventTimer" );

	parms.Index = Index;
	this->ProcessEvent ( pShowPlayTimePerHour_OnEventTimer, &parms, NULL );

}*/

/*void UBTNetMainMenu::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTNetMainMenu_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTNetMainMenu::KeepMoving (  )
{
	static UFunction* pKeepMoving = 0;
	UBTNetMainMenu_execKeepMoving_Parms parms;

	if ( !pKeepMoving )
		pKeepMoving = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.KeepMoving" );

	this->ProcessEvent ( pKeepMoving, &parms, NULL );

}*/

/*void UBTNetMainMenu::EndAutoMove (  )
{
	static UFunction* pEndAutoMove = 0;
	UBTNetMainMenu_execEndAutoMove_Parms parms;

	if ( !pEndAutoMove )
		pEndAutoMove = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.EndAutoMove" );

	this->ProcessEvent ( pEndAutoMove, &parms, NULL );

}*/

/*void UBTNetMainMenu::StartAutoMove ( int Server, int Channel, int gameroom, struct FString Password, int ClanMatch_EnterState )
{
	static UFunction* pStartAutoMove = 0;
	UBTNetMainMenu_execStartAutoMove_Parms parms;

	if ( !pStartAutoMove )
		pStartAutoMove = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.StartAutoMove" );

	parms.Server = Server;
	parms.Channel = Channel;
	parms.gameroom = gameroom;
	parms.Password = Password;
	parms.ClanMatch_EnterState = ClanMatch_EnterState;
	this->ProcessEvent ( pStartAutoMove, &parms, NULL );

}*/

/*struct FString UBTNetMainMenu::FindChannelNickName ( int ServerID, int ChannelID )
{
	static UFunction* pFindChannelNickName = 0;
	UBTNetMainMenu_execFindChannelNickName_Parms parms;

	if ( !pFindChannelNickName )
		pFindChannelNickName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.FindChannelNickName" );

	parms.ServerID = ServerID;
	parms.ChannelID = ChannelID;
	this->ProcessEvent ( pFindChannelNickName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UBTNetMainMenu::FindServerShortName ( int ServerID, int ChannelID )
{
	static UFunction* pFindServerShortName = 0;
	UBTNetMainMenu_execFindServerShortName_Parms parms;

	if ( !pFindServerShortName )
		pFindServerShortName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.FindServerShortName" );

	parms.ServerID = ServerID;
	parms.ChannelID = ChannelID;
	this->ProcessEvent ( pFindServerShortName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UBTNetMainMenu::FindServerName ( int ServerID )
{
	static UFunction* pFindServerName = 0;
	UBTNetMainMenu_execFindServerName_Parms parms;

	if ( !pFindServerName )
		pFindServerName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.FindServerName" );

	parms.ServerID = ServerID;
	this->ProcessEvent ( pFindServerName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UBTNetMainMenu::FindServerConnectionInfoIndex ( int ServerID, int ChannelID )
{
	static UFunction* pFindServerConnectionInfoIndex = 0;
	UBTNetMainMenu_execFindServerConnectionInfoIndex_Parms parms;

	if ( !pFindServerConnectionInfoIndex )
		pFindServerConnectionInfoIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.FindServerConnectionInfoIndex" );

	parms.ServerID = ServerID;
	parms.ChannelID = ChannelID;
	this->ProcessEvent ( pFindServerConnectionInfoIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UBTNetMainMenu::FindServerChannelInfoIndexByServerIP ( struct FString ServerIP, int serverPort, int ChannelID )
{
	static UFunction* pFindServerChannelInfoIndexByServerIP = 0;
	UBTNetMainMenu_execFindServerChannelInfoIndexByServerIP_Parms parms;

	if ( !pFindServerChannelInfoIndexByServerIP )
		pFindServerChannelInfoIndexByServerIP = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.FindServerChannelInfoIndexByServerIP" );

	parms.ServerIP = ServerIP;
	parms.serverPort = serverPort;
	parms.ChannelID = ChannelID;
	this->ProcessEvent ( pFindServerChannelInfoIndexByServerIP, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::AddServerChannelList ( int ServerID, int ChannelID, struct FString ServerIP, int serverPort, int ServerDataPort, struct FString ServerName, struct FString ServerShortName, struct FString ChannelName, int ServerGroupID, struct FString ServerGroupName, int IsClanChannel, struct FString ChannelNickName, int ChannelType, bool IsDedicatedServer, int nCurUser, int nMaxUser )
{
	static UFunction* pAddServerChannelList = 0;
	UBTNetMainMenu_execAddServerChannelList_Parms parms;

	if ( !pAddServerChannelList )
		pAddServerChannelList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.AddServerChannelList" );

	parms.ServerID = ServerID;
	parms.ChannelID = ChannelID;
	parms.ServerIP = ServerIP;
	parms.serverPort = serverPort;
	parms.ServerDataPort = ServerDataPort;
	parms.ServerName = ServerName;
	parms.ServerShortName = ServerShortName;
	parms.ChannelName = ChannelName;
	parms.ServerGroupID = ServerGroupID;
	parms.ServerGroupName = ServerGroupName;
	parms.IsClanChannel = IsClanChannel;
	parms.ChannelNickName = ChannelNickName;
	parms.ChannelType = ChannelType;
	parms.IsDedicatedServer = IsDedicatedServer;
	parms.nCurUser = nCurUser;
	parms.nMaxUser = nMaxUser;
	this->ProcessEvent ( pAddServerChannelList, &parms, NULL );

}*/

/*void UBTNetMainMenu::ClearServerChannelList (  )
{
	static UFunction* pClearServerChannelList = 0;
	UBTNetMainMenu_execClearServerChannelList_Parms parms;

	if ( !pClearServerChannelList )
		pClearServerChannelList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ClearServerChannelList" );

	this->ProcessEvent ( pClearServerChannelList, &parms, NULL );

}*/

/*void UBTNetMainMenu::CheckItemWarning (  )
{
	static UFunction* pCheckItemWarning = 0;
	UBTNetMainMenu_execCheckItemWarning_Parms parms;

	if ( !pCheckItemWarning )
		pCheckItemWarning = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckItemWarning" );

	this->ProcessEvent ( pCheckItemWarning, &parms, NULL );

}*/

/*bool UBTNetMainMenu::CheckDestroyedDurabilityXItemList (  )
{
	static UFunction* pCheckDestroyedDurabilityXItemList = 0;
	UBTNetMainMenu_execCheckDestroyedDurabilityXItemList_Parms parms;

	if ( !pCheckDestroyedDurabilityXItemList )
		pCheckDestroyedDurabilityXItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckDestroyedDurabilityXItemList" );

	this->ProcessEvent ( pCheckDestroyedDurabilityXItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::CheckDestroyedDurabilityXItemList_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pCheckDestroyedDurabilityXItemList_OnOK = 0;
	UBTNetMainMenu_execCheckDestroyedDurabilityXItemList_OnOK_Parms parms;

	if ( !pCheckDestroyedDurabilityXItemList_OnOK )
		pCheckDestroyedDurabilityXItemList_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckDestroyedDurabilityXItemList_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pCheckDestroyedDurabilityXItemList_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::CompleteDestroyedDurabilityXItemList (  )
{
	static UFunction* pCompleteDestroyedDurabilityXItemList = 0;
	UBTNetMainMenu_execCompleteDestroyedDurabilityXItemList_Parms parms;

	if ( !pCompleteDestroyedDurabilityXItemList )
		pCompleteDestroyedDurabilityXItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CompleteDestroyedDurabilityXItemList" );

	this->ProcessEvent ( pCompleteDestroyedDurabilityXItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::CheckDurabilityWarningItemList (  )
{
	static UFunction* pCheckDurabilityWarningItemList = 0;
	UBTNetMainMenu_execCheckDurabilityWarningItemList_Parms parms;

	if ( !pCheckDurabilityWarningItemList )
		pCheckDurabilityWarningItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckDurabilityWarningItemList" );

	this->ProcessEvent ( pCheckDurabilityWarningItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetMainMenu::CheckExpiredItemList (  )
{
	static UFunction* pCheckExpiredItemList = 0;
	UBTNetMainMenu_execCheckExpiredItemList_Parms parms;

	if ( !pCheckExpiredItemList )
		pCheckExpiredItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CheckExpiredItemList" );

	this->ProcessEvent ( pCheckExpiredItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::CompleteExpiredItem (  )
{
	static UFunction* pCompleteExpiredItem = 0;
	UBTNetMainMenu_execCompleteExpiredItem_Parms parms;

	if ( !pCompleteExpiredItem )
		pCompleteExpiredItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CompleteExpiredItem" );

	this->ProcessEvent ( pCompleteExpiredItem, &parms, NULL );

}*/

/*void UBTNetMainMenu::AddExpiredSkillItem ( int ItemID, int UniqueID, int SlotPos )
{
	static UFunction* pAddExpiredSkillItem = 0;
	UBTNetMainMenu_execAddExpiredSkillItem_Parms parms;

	if ( !pAddExpiredSkillItem )
		pAddExpiredSkillItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.AddExpiredSkillItem" );

	parms.ItemID = ItemID;
	parms.UniqueID = UniqueID;
	parms.SlotPos = SlotPos;
	this->ProcessEvent ( pAddExpiredSkillItem, &parms, NULL );

}*/

/*void UBTNetMainMenu::AddExpiredItem ( int ItemID, struct FBtrDouble UniqueID, int SlotPos, int PartID )
{
	static UFunction* pAddExpiredItem = 0;
	UBTNetMainMenu_execAddExpiredItem_Parms parms;

	if ( !pAddExpiredItem )
		pAddExpiredItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.AddExpiredItem" );

	parms.ItemID = ItemID;
	parms.UniqueID = UniqueID;
	parms.SlotPos = SlotPos;
	parms.PartID = PartID;
	this->ProcessEvent ( pAddExpiredItem, &parms, NULL );

}*/

/*void UBTNetMainMenu::CompleteDurabilityWarningItem (  )
{
	static UFunction* pCompleteDurabilityWarningItem = 0;
	UBTNetMainMenu_execCompleteDurabilityWarningItem_Parms parms;

	if ( !pCompleteDurabilityWarningItem )
		pCompleteDurabilityWarningItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.CompleteDurabilityWarningItem" );

	this->ProcessEvent ( pCompleteDurabilityWarningItem, &parms, NULL );

}*/

/*void UBTNetMainMenu::AddDurabilityWarningItemRepairCost ( struct FBtrDouble UniqueID, int RepairCost )
{
	static UFunction* pAddDurabilityWarningItemRepairCost = 0;
	UBTNetMainMenu_execAddDurabilityWarningItemRepairCost_Parms parms;

	if ( !pAddDurabilityWarningItemRepairCost )
		pAddDurabilityWarningItemRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.AddDurabilityWarningItemRepairCost" );

	parms.UniqueID = UniqueID;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( pAddDurabilityWarningItemRepairCost, &parms, NULL );

}*/

/*void UBTNetMainMenu::AddDurabilityWarningItem ( struct FBtrDouble UniqueID, int ItemID, int SlotPos, int PartID, int Durability )
{
	static UFunction* pAddDurabilityWarningItem = 0;
	UBTNetMainMenu_execAddDurabilityWarningItem_Parms parms;

	if ( !pAddDurabilityWarningItem )
		pAddDurabilityWarningItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.AddDurabilityWarningItem" );

	parms.UniqueID = UniqueID;
	parms.ItemID = ItemID;
	parms.SlotPos = SlotPos;
	parms.PartID = PartID;
	parms.Durability = Durability;
	this->ProcessEvent ( pAddDurabilityWarningItem, &parms, NULL );

}*/

/*void UBTNetMainMenu::LoginToChannel ( struct FString IP, int Port, int DataPort )
{
	static UFunction* pLoginToChannel = 0;
	UBTNetMainMenu_execLoginToChannel_Parms parms;

	if ( !pLoginToChannel )
		pLoginToChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.LoginToChannel" );

	parms.IP = IP;
	parms.Port = Port;
	parms.DataPort = DataPort;
	this->ProcessEvent ( pLoginToChannel, &parms, NULL );

}*/

/*void UBTNetMainMenu::ChannelToLogin2 ( struct FString IP, int Port )
{
	static UFunction* pChannelToLogin2 = 0;
	UBTNetMainMenu_execChannelToLogin2_Parms parms;

	if ( !pChannelToLogin2 )
		pChannelToLogin2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ChannelToLogin2" );

	parms.IP = IP;
	parms.Port = Port;
	this->ProcessEvent ( pChannelToLogin2, &parms, NULL );

}*/

/*void UBTNetMainMenu::ChannelToLogin ( struct FString IP, int Port )
{
	static UFunction* pChannelToLogin = 0;
	UBTNetMainMenu_execChannelToLogin_Parms parms;

	if ( !pChannelToLogin )
		pChannelToLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ChannelToLogin" );

	parms.IP = IP;
	parms.Port = Port;
	this->ProcessEvent ( pChannelToLogin, &parms, NULL );

}*/

/*void UBTNetMainMenu::ChannelToLogin_OnEventTimer ( int Index )
{
	static UFunction* pChannelToLogin_OnEventTimer = 0;
	UBTNetMainMenu_execChannelToLogin_OnEventTimer_Parms parms;

	if ( !pChannelToLogin_OnEventTimer )
		pChannelToLogin_OnEventTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.ChannelToLogin_OnEventTimer" );

	parms.Index = Index;
	this->ProcessEvent ( pChannelToLogin_OnEventTimer, &parms, NULL );

}*/

/*void UBTNetMainMenu::UpdateWebzenInvenListEnd ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateWebzenInvenListEnd = 0;
	UBTNetMainMenu_execUpdateWebzenInvenListEnd_Parms parms;

	if ( !pUpdateWebzenInvenListEnd )
		pUpdateWebzenInvenListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateWebzenInvenListEnd" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateWebzenInvenListEnd, &parms, NULL );

}*/

/*void UBTNetMainMenu::UpdateWebzenInvenList ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateWebzenInvenList = 0;
	UBTNetMainMenu_execUpdateWebzenInvenList_Parms parms;

	if ( !pUpdateWebzenInvenList )
		pUpdateWebzenInvenList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateWebzenInvenList" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateWebzenInvenList, &parms, NULL );

}*/

/*void UBTNetMainMenu::StopWebzenInvenList (  )
{
	static UFunction* pStopWebzenInvenList = 0;
	UBTNetMainMenu_execStopWebzenInvenList_Parms parms;

	if ( !pStopWebzenInvenList )
		pStopWebzenInvenList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.StopWebzenInvenList" );

	this->ProcessEvent ( pStopWebzenInvenList, &parms, NULL );

}*/

/*bool UBTNetMainMenu::sfReqWebzenInvenList ( struct FString StorageType )
{
	static UFunction* psfReqWebzenInvenList = 0;
	UBTNetMainMenu_execsfReqWebzenInvenList_Parms parms;

	if ( !psfReqWebzenInvenList )
		psfReqWebzenInvenList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.sfReqWebzenInvenList" );

	parms.StorageType = StorageType;
	this->ProcessEvent ( psfReqWebzenInvenList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetMainMenu::SetNewMailArrived ( bool B )
{
	static UFunction* pSetNewMailArrived = 0;
	UBTNetMainMenu_execSetNewMailArrived_Parms parms;

	if ( !pSetNewMailArrived )
		pSetNewMailArrived = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.SetNewMailArrived" );

	parms.B = B;
	this->ProcessEvent ( pSetNewMailArrived, &parms, NULL );

}*/

/*void UBTNetMainMenu::UpdateDurabilityWarningItemList ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateDurabilityWarningItemList = 0;
	UBTNetMainMenu_execUpdateDurabilityWarningItemList_Parms parms;

	if ( !pUpdateDurabilityWarningItemList )
		pUpdateDurabilityWarningItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateDurabilityWarningItemList" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateDurabilityWarningItemList, &parms, NULL );

}*/

/*void UBTNetMainMenu::UpdateExpiredItemList ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateExpiredItemList = 0;
	UBTNetMainMenu_execUpdateExpiredItemList_Parms parms;

	if ( !pUpdateExpiredItemList )
		pUpdateExpiredItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateExpiredItemList" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateExpiredItemList, &parms, NULL );

}*/

/*void UBTNetMainMenu::UpdateRecv_ClanInfo ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateRecv_ClanInfo = 0;
	UBTNetMainMenu_execUpdateRecv_ClanInfo_Parms parms;

	if ( !pUpdateRecv_ClanInfo )
		pUpdateRecv_ClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.UpdateRecv_ClanInfo" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateRecv_ClanInfo, &parms, NULL );

}*/

/*void UBTNetMainMenu::delegateCheckNat (  )
{
	static UFunction* pdelegateCheckNat = 0;
	UBTNetMainMenu_execdelegateCheckNat_Parms parms;

	if ( !pdelegateCheckNat )
		pdelegateCheckNat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetMainMenu.delegateCheckNat" );

	this->ProcessEvent ( pdelegateCheckNat, &parms, NULL );

}*/

/*void UBTNetGUIPageHK::Default_FadedOut (  )
{
	static UFunction* pDefault_FadedOut = 0;
	UBTNetGUIPageHK_execDefault_FadedOut_Parms parms;

	if ( !pDefault_FadedOut )
		pDefault_FadedOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.Default_FadedOut" );

	this->ProcessEvent ( pDefault_FadedOut, &parms, NULL );

}*/

/*void UBTNetGUIPageHK::FadeOut ( bool bTranslate, bool bChangeAlpha )
{
	static UFunction* pFadeOut = 0;
	UBTNetGUIPageHK_execFadeOut_Parms parms;

	if ( !pFadeOut )
		pFadeOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.FadeOut" );

	parms.bTranslate = bTranslate;
	parms.bChangeAlpha = bChangeAlpha;
	this->ProcessEvent ( pFadeOut, &parms, NULL );

}*/

/*void UBTNetGUIPageHK::FadeIn ( bool bTranslate, bool bChangeAlpha )
{
	static UFunction* pFadeIn = 0;
	UBTNetGUIPageHK_execFadeIn_Parms parms;

	if ( !pFadeIn )
		pFadeIn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.FadeIn" );

	parms.bTranslate = bTranslate;
	parms.bChangeAlpha = bChangeAlpha;
	this->ProcessEvent ( pFadeIn, &parms, NULL );

}*/

/*bool UBTNetGUIPageHK::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTNetGUIPageHK_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTOwnerDrawCaptionButtonHK* UBTNetGUIPageHK::NewButtonComponent ( struct FFloatBox fbNewCompo, float RenderWeight )
{
	static UFunction* pNewButtonComponent = 0;
	UBTNetGUIPageHK_execNewButtonComponent_Parms parms;

	if ( !pNewButtonComponent )
		pNewButtonComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.NewButtonComponent" );

	parms.fbNewCompo = fbNewCompo;
	parms.RenderWeight = RenderWeight;
	this->ProcessEvent ( pNewButtonComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTOwnerDrawImageHK* UBTNetGUIPageHK::NewLabelComponent ( struct FFloatBox fbNewCompo, struct FImage bgImg, float RenderWeight )
{
	static UFunction* pNewLabelComponent = 0;
	UBTNetGUIPageHK_execNewLabelComponent_Parms parms;

	if ( !pNewLabelComponent )
		pNewLabelComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.NewLabelComponent" );

	parms.fbNewCompo = fbNewCompo;
	parms.bgImg = bgImg;
	parms.RenderWeight = RenderWeight;
	this->ProcessEvent ( pNewLabelComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetGUIPageHK::ExitGame (  )
{
	static UFunction* pExitGame = 0;
	UBTNetGUIPageHK_execExitGame_Parms parms;

	if ( !pExitGame )
		pExitGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.ExitGame" );

	this->ProcessEvent ( pExitGame, &parms, NULL );

}*/

/*void UBTNetGUIPageHK::OpenTodayResultPage (  )
{
	static UFunction* pOpenTodayResultPage = 0;
	UBTNetGUIPageHK_execOpenTodayResultPage_Parms parms;

	if ( !pOpenTodayResultPage )
		pOpenTodayResultPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.OpenTodayResultPage" );

	this->ProcessEvent ( pOpenTodayResultPage, &parms, NULL );

}*/

/*bool UBTNetGUIPageHK::BTWIndowTodayResultHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWIndowTodayResultHK_OnOK = 0;
	UBTNetGUIPageHK_execBTWIndowTodayResultHK_OnOK_Parms parms;

	if ( !pBTWIndowTodayResultHK_OnOK )
		pBTWIndowTodayResultHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.BTWIndowTodayResultHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWIndowTodayResultHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNetGUIPageHK::WeaponListClick ( class UGUIComponent* Sender )
{
	static UFunction* pWeaponListClick = 0;
	UBTNetGUIPageHK_execWeaponListClick_Parms parms;

	if ( !pWeaponListClick )
		pWeaponListClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.WeaponListClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWeaponListClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetGUIPageHK::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTNetGUIPageHK_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTNetGUIPageHK::LabelAAS_OnNextAAS ( struct FString NextAAS )
{
	static UFunction* pLabelAAS_OnNextAAS = 0;
	UBTNetGUIPageHK_execLabelAAS_OnNextAAS_Parms parms;

	if ( !pLabelAAS_OnNextAAS )
		pLabelAAS_OnNextAAS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.LabelAAS_OnNextAAS" );

	parms.NextAAS = NextAAS;
	this->ProcessEvent ( pLabelAAS_OnNextAAS, &parms, NULL );

}*/

/*void UBTNetGUIPageHK::LabelBottomLine_OnNextNotice ( struct FString NextNotice )
{
	static UFunction* pLabelBottomLine_OnNextNotice = 0;
	UBTNetGUIPageHK_execLabelBottomLine_OnNextNotice_Parms parms;

	if ( !pLabelBottomLine_OnNextNotice )
		pLabelBottomLine_OnNextNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.LabelBottomLine_OnNextNotice" );

	parms.NextNotice = NextNotice;
	this->ProcessEvent ( pLabelBottomLine_OnNextNotice, &parms, NULL );

}*/

/*bool UBTNetGUIPageHK::ButtonTest_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonTest_OnClick = 0;
	UBTNetGUIPageHK_execButtonTest_OnClick_Parms parms;

	if ( !pButtonTest_OnClick )
		pButtonTest_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.ButtonTest_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonTest_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetGUIPageHK::InitializeDefaultPage (  )
{
	static UFunction* pInitializeDefaultPage = 0;
	UBTNetGUIPageHK_execInitializeDefaultPage_Parms parms;

	if ( !pInitializeDefaultPage )
		pInitializeDefaultPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.InitializeDefaultPage" );

	this->ProcessEvent ( pInitializeDefaultPage, &parms, NULL );

}*/

/*void UBTNetGUIPageHK::SetDefaultWeapon ( int SlotIndex )
{
	static UFunction* pSetDefaultWeapon = 0;
	UBTNetGUIPageHK_execSetDefaultWeapon_Parms parms;

	if ( !pSetDefaultWeapon )
		pSetDefaultWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.SetDefaultWeapon" );

	parms.SlotIndex = SlotIndex;
	this->ProcessEvent ( pSetDefaultWeapon, &parms, NULL );

}*/

/*void UBTNetGUIPageHK::RefreshPage (  )
{
	static UFunction* pRefreshPage = 0;
	UBTNetGUIPageHK_execRefreshPage_Parms parms;

	if ( !pRefreshPage )
		pRefreshPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.RefreshPage" );

	this->ProcessEvent ( pRefreshPage, &parms, NULL );

}*/

/*void UBTNetGUIPageHK::eventOpened ( class UGUIComponent* Sender )
{
	static UFunction* pOpened = 0;
	UBTNetGUIPageHK_eventOpened_Parms parms;

	if ( !pOpened )
		pOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetGUIPageHK.Opened" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOpened, &parms, NULL );

}*/

/*bool UBTNetQuestInfoPageHK::TPTopMenu_Quest_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pTPTopMenu_Quest_OnClick = 0;
	UBTNetQuestInfoPageHK_execTPTopMenu_Quest_OnClick_Parms parms;

	if ( !pTPTopMenu_Quest_OnClick )
		pTPTopMenu_Quest_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetQuestInfoPageHK.TPTopMenu_Quest_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTPTopMenu_Quest_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNetQuestInfoPageHK::NotifyDailyQuestReset (  )
{
	static UFunction* pNotifyDailyQuestReset = 0;
	UBTNetQuestInfoPageHK_execNotifyDailyQuestReset_Parms parms;

	if ( !pNotifyDailyQuestReset )
		pNotifyDailyQuestReset = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetQuestInfoPageHK.NotifyDailyQuestReset" );

	this->ProcessEvent ( pNotifyDailyQuestReset, &parms, NULL );

}*/

/*void UBTNetQuestInfoPageHK::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTNetQuestInfoPageHK_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetQuestInfoPageHK.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTNetQuestInfoPageHK::InternalOnReOpen (  )
{
	static UFunction* pInternalOnReOpen = 0;
	UBTNetQuestInfoPageHK_execInternalOnReOpen_Parms parms;

	if ( !pInternalOnReOpen )
		pInternalOnReOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetQuestInfoPageHK.InternalOnReOpen" );

	this->ProcessEvent ( pInternalOnReOpen, &parms, NULL );

}*/

/*void UBTNetQuestInfoPageHK::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTNetQuestInfoPageHK_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNetQuestInfoPageHK.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::CheckEnterRoom_InClanChannel ( struct FString szClanName )
{
	static UFunction* pCheckEnterRoom_InClanChannel = 0;
	UBTPageRoomLobby_execCheckEnterRoom_InClanChannel_Parms parms;

	if ( !pCheckEnterRoom_InClanChannel )
		pCheckEnterRoom_InClanChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.CheckEnterRoom_InClanChannel" );

	parms.szClanName = szClanName;
	this->ProcessEvent ( pCheckEnterRoom_InClanChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTAutoColumnListDataHK* UBTPageRoomLobby::MakeTeamMemberData ( int UID, int ClanMark, int ClanBG, int ClanBL, int Level, struct FString NickName, struct FString ClanName, int Status, int Host, int Ping, struct FString UserIP, unsigned char LookingFor, int ClanLevel, int LevelMarkID, int TitleMarkID, int TeamNum, int Reserved2, int Reserved3, bool bMe, bool bisGM )
{
	static UFunction* pMakeTeamMemberData = 0;
	UBTPageRoomLobby_execMakeTeamMemberData_Parms parms;

	if ( !pMakeTeamMemberData )
		pMakeTeamMemberData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.MakeTeamMemberData" );

	parms.UID = UID;
	parms.ClanMark = ClanMark;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.Level = Level;
	parms.NickName = NickName;
	parms.ClanName = ClanName;
	parms.Status = Status;
	parms.Host = Host;
	parms.Ping = Ping;
	parms.UserIP = UserIP;
	parms.LookingFor = LookingFor;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.TeamNum = TeamNum;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	parms.bMe = bMe;
	parms.bisGM = bisGM;
	this->ProcessEvent ( pMakeTeamMemberData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::SaveUserData ( class UBTAutoColumnListDataHK* Item )
{
	static UFunction* pSaveUserData = 0;
	UBTPageRoomLobby_execSaveUserData_Parms parms;

	if ( !pSaveUserData )
		pSaveUserData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.SaveUserData" );

	parms.Item = Item;
	this->ProcessEvent ( pSaveUserData, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::rfNotifyClanLevelup ( struct FString ClanName, int Levelup )
{
	static UFunction* prfNotifyClanLevelup = 0;
	UBTPageRoomLobby_execrfNotifyClanLevelup_Parms parms;

	if ( !prfNotifyClanLevelup )
		prfNotifyClanLevelup = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfNotifyClanLevelup" );

	parms.ClanName = ClanName;
	parms.Levelup = Levelup;
	this->ProcessEvent ( prfNotifyClanLevelup, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfNotifyNewClanName ( struct FString New_NickName )
{
	static UFunction* prfNotifyNewClanName = 0;
	UBTPageRoomLobby_execrfNotifyNewClanName_Parms parms;

	if ( !prfNotifyNewClanName )
		prfNotifyNewClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfNotifyNewClanName" );

	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfNotifyNewNickName ( int Community_Type, struct FString Old_NickName, struct FString New_NickName )
{
	static UFunction* prfNotifyNewNickName = 0;
	UBTPageRoomLobby_execrfNotifyNewNickName_Parms parms;

	if ( !prfNotifyNewNickName )
		prfNotifyNewNickName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfNotifyNewNickName" );

	parms.Community_Type = Community_Type;
	parms.Old_NickName = Old_NickName;
	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewNickName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGetRankingInfoListEnd (  )
{
	static UFunction* prfAckGetRankingInfoListEnd = 0;
	UBTPageRoomLobby_execrfAckGetRankingInfoListEnd_Parms parms;

	if ( !prfAckGetRankingInfoListEnd )
		prfAckGetRankingInfoListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGetRankingInfoListEnd" );

	this->ProcessEvent ( prfAckGetRankingInfoListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGetRankingInfoList ( int Result, unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckGetRankingInfoList = 0;
	UBTPageRoomLobby_execrfAckGetRankingInfoList_Parms parms;

	if ( !prfAckGetRankingInfoList )
		prfAckGetRankingInfoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGetRankingInfoList" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.CharName = CharName;
	parms.CharLevel = CharLevel;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Ranking_Accum = Ranking_Accum;
	parms.Ranking_Accum_Prev = Ranking_Accum_Prev;
	parms.Ranking_Accum_Exp = Ranking_Accum_Exp;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckGetRankingInfoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGetRankingInfoListStart ( int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount )
{
	static UFunction* prfAckGetRankingInfoListStart = 0;
	UBTPageRoomLobby_execrfAckGetRankingInfoListStart_Parms parms;

	if ( !prfAckGetRankingInfoListStart )
		prfAckGetRankingInfoListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGetRankingInfoListStart" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckGetRankingInfoListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckFriendPosition ( int Result, struct FString TargetCharName, unsigned char ServerType, struct FString fServername, struct FString fServerShortName, struct FString fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, struct FString ChannelNickName, int GameRoomNum )
{
	static UFunction* prfAckFriendPosition = 0;
	UBTPageRoomLobby_execrfAckFriendPosition_Parms parms;

	if ( !prfAckFriendPosition )
		prfAckFriendPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckFriendPosition" );

	parms.Result = Result;
	parms.TargetCharName = TargetCharName;
	parms.ServerType = ServerType;
	parms.fServername = fServername;
	parms.fServerShortName = fServerShortName;
	parms.fServerIP = fServerIP;
	parms.fServerPort = fServerPort;
	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.ChannelNum = ChannelNum;
	parms.ChannelNickName = ChannelNickName;
	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckFriendPosition, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckNotifyUpdateCharInfo_LevelMark ( struct FString CharName, int LevelMarkID )
{
	static UFunction* prfAckNotifyUpdateCharInfo_LevelMark = 0;
	UBTPageRoomLobby_execrfAckNotifyUpdateCharInfo_LevelMark_Parms parms;

	if ( !prfAckNotifyUpdateCharInfo_LevelMark )
		prfAckNotifyUpdateCharInfo_LevelMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckNotifyUpdateCharInfo_LevelMark" );

	parms.CharName = CharName;
	parms.LevelMarkID = LevelMarkID;
	this->ProcessEvent ( prfAckNotifyUpdateCharInfo_LevelMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqInGameRoomUserClanLevelChanged ( int UserID, int ClanLevel )
{
	static UFunction* prfReqInGameRoomUserClanLevelChanged = 0;
	UBTPageRoomLobby_execrfReqInGameRoomUserClanLevelChanged_Parms parms;

	if ( !prfReqInGameRoomUserClanLevelChanged )
		prfReqInGameRoomUserClanLevelChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqInGameRoomUserClanLevelChanged" );

	parms.UserID = UserID;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfReqInGameRoomUserClanLevelChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqInGameRoomUserInfoChanged (  )
{
	static UFunction* prfReqInGameRoomUserInfoChanged = 0;
	UBTPageRoomLobby_execrfReqInGameRoomUserInfoChanged_Parms parms;

	if ( !prfReqInGameRoomUserInfoChanged )
		prfReqInGameRoomUserInfoChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqInGameRoomUserInfoChanged" );

	this->ProcessEvent ( prfReqInGameRoomUserInfoChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTPageRoomLobby_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::UserPingRefresh (  )
{
	static UFunction* pUserPingRefresh = 0;
	UBTPageRoomLobby_execUserPingRefresh_Parms parms;

	if ( !pUserPingRefresh )
		pUserPingRefresh = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UserPingRefresh" );

	this->ProcessEvent ( pUserPingRefresh, &parms, NULL );

}*/

/*void UBTPageRoomLobby::SendPingToAll (  )
{
	static UFunction* pSendPingToAll = 0;
	UBTPageRoomLobby_execSendPingToAll_Parms parms;

	if ( !pSendPingToAll )
		pSendPingToAll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.SendPingToAll" );

	this->ProcessEvent ( pSendPingToAll, &parms, NULL );

}*/

/*void UBTPageRoomLobby::sfReqRoomUserPingInfo (  )
{
	static UFunction* psfReqRoomUserPingInfo = 0;
	UBTPageRoomLobby_execsfReqRoomUserPingInfo_Parms parms;

	if ( !psfReqRoomUserPingInfo )
		psfReqRoomUserPingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.sfReqRoomUserPingInfo" );

	this->ProcessEvent ( psfReqRoomUserPingInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnReceivedPing ( class UwMatchMaker* MM, struct FString fromAddr, int msec )
{
	static UFunction* pOnReceivedPing = 0;
	UBTPageRoomLobby_execOnReceivedPing_Parms parms;

	if ( !pOnReceivedPing )
		pOnReceivedPing = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnReceivedPing" );

	parms.MM = MM;
	parms.fromAddr = fromAddr;
	parms.msec = msec;
	this->ProcessEvent ( pOnReceivedPing, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::rfAckRoomUserPingInfo ( class TArray< int > UnqueID, class TArray< int > Ping, int HostScore )
{
	static UFunction* prfAckRoomUserPingInfo = 0;
	UBTPageRoomLobby_execrfAckRoomUserPingInfo_Parms parms;

	if ( !prfAckRoomUserPingInfo )
		prfAckRoomUserPingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckRoomUserPingInfo" );

	parms.UnqueID = UnqueID;
	parms.Ping = Ping;
	parms.HostScore = HostScore;
	this->ProcessEvent ( prfAckRoomUserPingInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChangedRoomTitle_FromGM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangedRoomTitle_FromGM = 0;
	UBTPageRoomLobby_execrfAckChangedRoomTitle_FromGM_Parms parms;

	if ( !prfAckChangedRoomTitle_FromGM )
		prfAckChangedRoomTitle_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChangedRoomTitle_FromGM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangedRoomTitle_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckCheckEquipedWeaponDurability ( int Result, class TArray< struct FBtrDouble > ItemUniqueID, class TArray< int > ItemSlotNum )
{
	static UFunction* prfAckCheckEquipedWeaponDurability = 0;
	UBTPageRoomLobby_execrfAckCheckEquipedWeaponDurability_Parms parms;

	if ( !prfAckCheckEquipedWeaponDurability )
		prfAckCheckEquipedWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckCheckEquipedWeaponDurability" );

	parms.Result = Result;
	parms.ItemUniqueID = ItemUniqueID;
	parms.ItemSlotNum = ItemSlotNum;
	this->ProcessEvent ( prfAckCheckEquipedWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::ButtonTemp_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonTemp_OnClick = 0;
	UBTPageRoomLobby_execButtonTemp_OnClick_Parms parms;

	if ( !pButtonTemp_OnClick )
		pButtonTemp_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ButtonTemp_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonTemp_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGetBotID ( int Result, unsigned char RequestedAFCount, unsigned char RequestedRSACount, class TArray< int > AFBotID, class TArray< int > RSABotID )
{
	static UFunction* prfAckGetBotID = 0;
	UBTPageRoomLobby_execrfAckGetBotID_Parms parms;

	if ( !prfAckGetBotID )
		prfAckGetBotID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGetBotID" );

	parms.Result = Result;
	parms.RequestedAFCount = RequestedAFCount;
	parms.RequestedRSACount = RequestedRSACount;
	parms.AFBotID = AFBotID;
	parms.RSABotID = RSABotID;
	this->ProcessEvent ( prfAckGetBotID, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckAutoChangedTeamUserList ( class TArray< int > UserID, class TArray< int > TeamNum )
{
	static UFunction* prfAckAutoChangedTeamUserList = 0;
	UBTPageRoomLobby_execrfAckAutoChangedTeamUserList_Parms parms;

	if ( !prfAckAutoChangedTeamUserList )
		prfAckAutoChangedTeamUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckAutoChangedTeamUserList" );

	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	this->ProcessEvent ( prfAckAutoChangedTeamUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UBTPageRoomLobby::FindTeamNumInArray ( class TArray< int > UserID, class TArray< int > TeamNum, int FindUserID )
{
	static UFunction* pFindTeamNumInArray = 0;
	UBTPageRoomLobby_execFindTeamNumInArray_Parms parms;

	if ( !pFindTeamNumInArray )
		pFindTeamNumInArray = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.FindTeamNumInArray" );

	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.FindUserID = FindUserID;
	this->ProcessEvent ( pFindTeamNumInArray, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqRecvForceFailedClientLoading ( int ErrCode )
{
	static UFunction* prfReqRecvForceFailedClientLoading = 0;
	UBTPageRoomLobby_execrfReqRecvForceFailedClientLoading_Parms parms;

	if ( !prfReqRecvForceFailedClientLoading )
		prfReqRecvForceFailedClientLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqRecvForceFailedClientLoading" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( prfReqRecvForceFailedClientLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckStartHolePunching ( int Result, struct FString ErrMsg, int GameType, int ReqStartUserID )
{
	static UFunction* prfAckStartHolePunching = 0;
	UBTPageRoomLobby_execrfAckStartHolePunching_Parms parms;

	if ( !prfAckStartHolePunching )
		prfAckStartHolePunching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckStartHolePunching" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.GameType = GameType;
	parms.ReqStartUserID = ReqStartUserID;
	this->ProcessEvent ( prfAckStartHolePunching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckRegisterMyUdpInfo ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRegisterMyUdpInfo = 0;
	UBTPageRoomLobby_execrfAckRegisterMyUdpInfo_Parms parms;

	if ( !prfAckRegisterMyUdpInfo )
		prfAckRegisterMyUdpInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckRegisterMyUdpInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRegisterMyUdpInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckNotifyMyCharInfoToRoomUser ( int Result, struct FString ErrMsg, int UID, struct FString UserName, int Grade, int TeamNum, unsigned char Statue, unsigned char IsHost, struct FString UserIP, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, unsigned char IsLookFor )
{
	static UFunction* prfAckNotifyMyCharInfoToRoomUser = 0;
	UBTPageRoomLobby_execrfAckNotifyMyCharInfoToRoomUser_Parms parms;

	if ( !prfAckNotifyMyCharInfoToRoomUser )
		prfAckNotifyMyCharInfoToRoomUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckNotifyMyCharInfoToRoomUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UID = UID;
	parms.UserName = UserName;
	parms.Grade = Grade;
	parms.TeamNum = TeamNum;
	parms.Statue = Statue;
	parms.IsHost = IsHost;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.IsLookFor = IsLookFor;
	this->ProcessEvent ( prfAckNotifyMyCharInfoToRoomUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqNotifyDisconnectHostInLoading ( int Result, struct FString ErrMsg, int HostID )
{
	static UFunction* prfReqNotifyDisconnectHostInLoading = 0;
	UBTPageRoomLobby_execrfReqNotifyDisconnectHostInLoading_Parms parms;

	if ( !prfReqNotifyDisconnectHostInLoading )
		prfReqNotifyDisconnectHostInLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqNotifyDisconnectHostInLoading" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.HostID = HostID;
	this->ProcessEvent ( prfReqNotifyDisconnectHostInLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqRecvDeleteFriend ( int Result, struct FString FromCharName )
{
	static UFunction* prfReqRecvDeleteFriend = 0;
	UBTPageRoomLobby_execrfReqRecvDeleteFriend_Parms parms;

	if ( !prfReqRecvDeleteFriend )
		prfReqRecvDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqRecvDeleteFriend" );

	parms.Result = Result;
	parms.FromCharName = FromCharName;
	this->ProcessEvent ( prfReqRecvDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckDeleteFriend ( int Result, class TArray< struct FString > FailedCharname )
{
	static UFunction* prfAckDeleteFriend = 0;
	UBTPageRoomLobby_execrfAckDeleteFriend_Parms parms;

	if ( !prfAckDeleteFriend )
		prfAckDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckDeleteFriend" );

	parms.Result = Result;
	parms.FailedCharname = FailedCharname;
	this->ProcessEvent ( prfAckDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChannelUserListInGameRoom ( int Result, int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > CharName, class TArray< int > UserLevel, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< unsigned char > IsLookForClan, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserListInGameRoom = 0;
	UBTPageRoomLobby_execrfAckChannelUserListInGameRoom_Parms parms;

	if ( !prfAckChannelUserListInGameRoom )
		prfAckChannelUserListInGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChannelUserListInGameRoom" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.CharName = CharName;
	parms.UserLevel = UserLevel;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.IsLookForClan = IsLookForClan;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserListInGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChatWispher ( int Result, struct FString ErrMsg, struct FString ToCharName )
{
	static UFunction* prfAckChatWispher = 0;
	UBTPageRoomLobby_execrfAckChatWispher_Parms parms;

	if ( !prfAckChatWispher )
		prfAckChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChatWispher" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ToCharName = ToCharName;
	this->ProcessEvent ( prfAckChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckAcquirePromotionItems ( int UID, int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > ItemUniqueID, class TArray< int > ItemIDs, class TArray< int > PartIDs )
{
	static UFunction* prfAckAcquirePromotionItems = 0;
	UBTPageRoomLobby_execrfAckAcquirePromotionItems_Parms parms;

	if ( !prfAckAcquirePromotionItems )
		prfAckAcquirePromotionItems = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckAcquirePromotionItems" );

	parms.UID = UID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemUniqueID = ItemUniqueID;
	parms.ItemIDs = ItemIDs;
	parms.PartIDs = PartIDs;
	this->ProcessEvent ( prfAckAcquirePromotionItems, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqNotifyLevelUp ( int LevelUpUserID, int Level, int Exp, class TArray< int > ItemID, class TArray< int > PartID )
{
	static UFunction* prfReqNotifyLevelUp = 0;
	UBTPageRoomLobby_execrfReqNotifyLevelUp_Parms parms;

	if ( !prfReqNotifyLevelUp )
		prfReqNotifyLevelUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqNotifyLevelUp" );

	parms.LevelUpUserID = LevelUpUserID;
	parms.Level = Level;
	parms.Exp = Exp;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( prfReqNotifyLevelUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckRecvJoinClanResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvJoinClanResult = 0;
	UBTPageRoomLobby_execrfAckRecvJoinClanResult_Parms parms;

	if ( !prfAckRecvJoinClanResult )
		prfAckRecvJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckRecvJoinClanResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckJoinClanResult ( struct FString CharName, unsigned char Permit, struct FString PermitCharName )
{
	static UFunction* prfAckJoinClanResult = 0;
	UBTPageRoomLobby_execrfAckJoinClanResult_Parms parms;

	if ( !prfAckJoinClanResult )
		prfAckJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckJoinClanResult" );

	parms.CharName = CharName;
	parms.Permit = Permit;
	parms.PermitCharName = PermitCharName;
	this->ProcessEvent ( prfAckJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowRequestApprovalClanHK_OnSuspend ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnSuspend = 0;
	UBTPageRoomLobby_execBTWindowRequestApprovalClanHK_OnSuspend_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnSuspend )
		pBTWindowRequestApprovalClanHK_OnSuspend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowRequestApprovalClanHK_OnSuspend" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnSuspend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowRequestApprovalClanHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnCancel = 0;
	UBTPageRoomLobby_execBTWindowRequestApprovalClanHK_OnCancel_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnCancel )
		pBTWindowRequestApprovalClanHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowRequestApprovalClanHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowRequestApprovalClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnOK = 0;
	UBTPageRoomLobby_execBTWindowRequestApprovalClanHK_OnOK_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnOK )
		pBTWindowRequestApprovalClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowRequestApprovalClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqRecvJoinClan ( int UserIdx, struct FString CharName, struct FString Message )
{
	static UFunction* prfReqRecvJoinClan = 0;
	UBTPageRoomLobby_execrfReqRecvJoinClan_Parms parms;

	if ( !prfReqRecvJoinClan )
		prfReqRecvJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqRecvJoinClan" );

	parms.UserIdx = UserIdx;
	parms.CharName = CharName;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckNotifyClanSecession ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyClanSecession = 0;
	UBTPageRoomLobby_execrfAckNotifyClanSecession_Parms parms;

	if ( !prfAckNotifyClanSecession )
		prfAckNotifyClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckNotifyClanSecession" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckNotifyNewClanMember ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyNewClanMember = 0;
	UBTPageRoomLobby_execrfAckNotifyNewClanMember_Parms parms;

	if ( !prfAckNotifyNewClanMember )
		prfAckNotifyNewClanMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckNotifyNewClanMember" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyNewClanMember, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTPageRoomLobby_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckRecvClanInviteResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvClanInviteResult = 0;
	UBTPageRoomLobby_execrfAckRecvClanInviteResult_Parms parms;

	if ( !prfAckRecvClanInviteResult )
		prfAckRecvClanInviteResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckRecvClanInviteResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvClanInviteResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::IsGameReadyOrPlaying (  )
{
	static UFunction* pIsGameReadyOrPlaying = 0;
	UBTPageRoomLobby_execIsGameReadyOrPlaying_Parms parms;

	if ( !pIsGameReadyOrPlaying )
		pIsGameReadyOrPlaying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.IsGameReadyOrPlaying" );

	this->ProcessEvent ( pIsGameReadyOrPlaying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckInviteClanResult ( struct FString CharName, unsigned char Permit, struct FString ClanNm )
{
	static UFunction* prfAckInviteClanResult = 0;
	UBTPageRoomLobby_execrfAckInviteClanResult_Parms parms;

	if ( !prfAckInviteClanResult )
		prfAckInviteClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckInviteClanResult" );

	parms.CharName = CharName;
	parms.Permit = Permit;
	parms.ClanNm = ClanNm;
	this->ProcessEvent ( prfAckInviteClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowDefineSelectHK_23_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineSelectHK_23_OnOK = 0;
	UBTPageRoomLobby_execBTWindowDefineSelectHK_23_OnOK_Parms parms;

	if ( !pBTWindowDefineSelectHK_23_OnOK )
		pBTWindowDefineSelectHK_23_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowDefineSelectHK_23_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineSelectHK_23_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTPageRoomLobby_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckJoinClan ( int Result, struct FString ErrMsg, struct FString SpecificCharName, struct FString RealRecvCharName, unsigned char RealRecvCharClanGrade )
{
	static UFunction* prfAckJoinClan = 0;
	UBTPageRoomLobby_execrfAckJoinClan_Parms parms;

	if ( !prfAckJoinClan )
		prfAckJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckJoinClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.SpecificCharName = SpecificCharName;
	parms.RealRecvCharName = RealRecvCharName;
	parms.RealRecvCharClanGrade = RealRecvCharClanGrade;
	this->ProcessEvent ( prfAckJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckInviteClan ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckInviteClan = 0;
	UBTPageRoomLobby_execrfAckInviteClan_Parms parms;

	if ( !prfAckInviteClan )
		prfAckInviteClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckInviteClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckInviteClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::UpdateRecv_ClanInfo ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateRecv_ClanInfo = 0;
	UBTPageRoomLobby_execUpdateRecv_ClanInfo_Parms parms;

	if ( !pUpdateRecv_ClanInfo )
		pUpdateRecv_ClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateRecv_ClanInfo" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateRecv_ClanInfo, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::BTWindowUserPersonalInfo_OnClanInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowUserPersonalInfo_OnClanInfo = 0;
	UBTPageRoomLobby_execBTWindowUserPersonalInfo_OnClanInfo_Parms parms;

	if ( !pBTWindowUserPersonalInfo_OnClanInfo )
		pBTWindowUserPersonalInfo_OnClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowUserPersonalInfo_OnClanInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowUserPersonalInfo_OnClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowUserDetailInfoHK_OnClanInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowUserDetailInfoHK_OnClanInfo = 0;
	UBTPageRoomLobby_execBTWindowUserDetailInfoHK_OnClanInfo_Parms parms;

	if ( !pBTWindowUserDetailInfoHK_OnClanInfo )
		pBTWindowUserDetailInfoHK_OnClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowUserDetailInfoHK_OnClanInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowUserDetailInfoHK_OnClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqClanCharPersonelIntro ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfReqClanCharPersonelIntro = 0;
	UBTPageRoomLobby_execrfReqClanCharPersonelIntro_Parms parms;

	if ( !prfReqClanCharPersonelIntro )
		prfReqClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqClanCharPersonelIntro" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfReqClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTPageRoomLobby_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb )
{
	static UFunction* prfAckCharDetailInfo = 0;
	UBTPageRoomLobby_execrfAckCharDetailInfo_Parms parms;

	if ( !prfAckCharDetailInfo )
		prfAckCharDetailInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckCharDetailInfo" );

	parms.MaxSerial = MaxSerial;
	parms.MaxScore = MaxScore;
	parms.MaxKill = MaxKill;
	parms.MaxAssist = MaxAssist;
	parms.Serial3 = Serial3;
	parms.Serial5 = Serial5;
	parms.Serial7 = Serial7;
	parms.Serial10 = Serial10;
	parms.Serial15 = Serial15;
	parms.AR = AR;
	parms.SMG = SMG;
	parms.SR = SR;
	parms.SW = SW;
	parms.Melee = Melee;
	parms.Grenade = Grenade;
	parms.FlashBang = FlashBang;
	parms.Foot = Foot;
	parms.AT4 = AT4;
	parms.MG = MG;
	parms.Fire = Fire;
	parms.RPG7 = RPG7;
	parms.TimeBomb = TimeBomb;
	parms.IcendiaryBomb = IcendiaryBomb;
	parms.ClusterBomb = ClusterBomb;
	parms.ByChopper = ByChopper;
	parms.Artillery = Artillery;
	parms.KillChopper = KillChopper;
	parms.FirstKill = FirstKill;
	parms.LastKill = LastKill;
	parms.AllKill = AllKill;
	parms.Dominate = Dominate;
	parms.InstallBomb = InstallBomb;
	parms.DefuseBomb = DefuseBomb;
	this->ProcessEvent ( prfAckCharDetailInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageRoomLobby_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::MoveToClanPage_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pMoveToClanPage_OnOK = 0;
	UBTPageRoomLobby_execMoveToClanPage_OnOK_Parms parms;

	if ( !pMoveToClanPage_OnOK )
		pMoveToClanPage_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.MoveToClanPage_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pMoveToClanPage_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckCreateClan ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckCreateClan = 0;
	UBTPageRoomLobby_execrfAckCreateClan_Parms parms;

	if ( !prfAckCreateClan )
		prfAckCreateClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckCreateClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckCreateClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckDupCheckClanName ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckDupCheckClanName = 0;
	UBTPageRoomLobby_execrfAckDupCheckClanName_Parms parms;

	if ( !prfAckDupCheckClanName )
		prfAckDupCheckClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckDupCheckClanName" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckDupCheckClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGetIsHostBlocking ( int Result, unsigned char Blocking )
{
	static UFunction* prfAckGetIsHostBlocking = 0;
	UBTPageRoomLobby_execrfAckGetIsHostBlocking_Parms parms;

	if ( !prfAckGetIsHostBlocking )
		prfAckGetIsHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGetIsHostBlocking" );

	parms.Result = Result;
	parms.Blocking = Blocking;
	this->ProcessEvent ( prfAckGetIsHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckNotifyHostBlocking ( int Result, unsigned char Blocking )
{
	static UFunction* prfAckNotifyHostBlocking = 0;
	UBTPageRoomLobby_execrfAckNotifyHostBlocking_Parms parms;

	if ( !prfAckNotifyHostBlocking )
		prfAckNotifyHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckNotifyHostBlocking" );

	parms.Result = Result;
	parms.Blocking = Blocking;
	this->ProcessEvent ( prfAckNotifyHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGetHolePunchingResult ( int Result, unsigned char Phrase, int InterventionUserID, unsigned char Intervention, class TArray< int > FailedUserIDs )
{
	static UFunction* prfAckGetHolePunchingResult = 0;
	UBTPageRoomLobby_execrfAckGetHolePunchingResult_Parms parms;

	if ( !prfAckGetHolePunchingResult )
		prfAckGetHolePunchingResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGetHolePunchingResult" );

	parms.Result = Result;
	parms.Phrase = Phrase;
	parms.InterventionUserID = InterventionUserID;
	parms.Intervention = Intervention;
	parms.FailedUserIDs = FailedUserIDs;
	this->ProcessEvent ( prfAckGetHolePunchingResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGetUserHostPriorityPoint ( int Result, int UserID, int HostPriorityPoint )
{
	static UFunction* prfAckGetUserHostPriorityPoint = 0;
	UBTPageRoomLobby_execrfAckGetUserHostPriorityPoint_Parms parms;

	if ( !prfAckGetUserHostPriorityPoint )
		prfAckGetUserHostPriorityPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGetUserHostPriorityPoint" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.HostPriorityPoint = HostPriorityPoint;
	this->ProcessEvent ( prfAckGetUserHostPriorityPoint, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowChangeHost_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowChangeHost_OnCancel = 0;
	UBTPageRoomLobby_execBTWindowChangeHost_OnCancel_Parms parms;

	if ( !pBTWindowChangeHost_OnCancel )
		pBTWindowChangeHost_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowChangeHost_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowChangeHost_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowChangeHost_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowChangeHost_OnOK = 0;
	UBTPageRoomLobby_execBTWindowChangeHost_OnOK_Parms parms;

	if ( !pBTWindowChangeHost_OnOK )
		pBTWindowChangeHost_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowChangeHost_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowChangeHost_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqRecvForceDisconnectUDPFromHost ( int Result )
{
	static UFunction* prfReqRecvForceDisconnectUDPFromHost = 0;
	UBTPageRoomLobby_execrfReqRecvForceDisconnectUDPFromHost_Parms parms;

	if ( !prfReqRecvForceDisconnectUDPFromHost )
		prfReqRecvForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqRecvForceDisconnectUDPFromHost" );

	parms.Result = Result;
	this->ProcessEvent ( prfReqRecvForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckForceDisconnectUDPFromHost ( int Result )
{
	static UFunction* prfAckForceDisconnectUDPFromHost = 0;
	UBTPageRoomLobby_execrfAckForceDisconnectUDPFromHost_Parms parms;

	if ( !prfAckForceDisconnectUDPFromHost )
		prfAckForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckForceDisconnectUDPFromHost" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqNotifyChangeRoomState ( unsigned char RoomState )
{
	static UFunction* prfReqNotifyChangeRoomState = 0;
	UBTPageRoomLobby_execrfReqNotifyChangeRoomState_Parms parms;

	if ( !prfReqNotifyChangeRoomState )
		prfReqNotifyChangeRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqNotifyChangeRoomState" );

	parms.RoomState = RoomState;
	this->ProcessEvent ( prfReqNotifyChangeRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckBanUser ( int GameNum, int UID, int BanUID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBanUser = 0;
	UBTPageRoomLobby_execrfAckBanUser_Parms parms;

	if ( !prfAckBanUser )
		prfAckBanUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckBanUser" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.BanUID = BanUID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBanUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::TPTeamList_OnPopupCheck ( class UBTACLTeamMemberListHK* acl, class UBTCMTeamMemberListHK* cm )
{
	static UFunction* pTPTeamList_OnPopupCheck = 0;
	UBTPageRoomLobby_execTPTeamList_OnPopupCheck_Parms parms;

	if ( !pTPTeamList_OnPopupCheck )
		pTPTeamList_OnPopupCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.TPTeamList_OnPopupCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pTPTeamList_OnPopupCheck, &parms, NULL );

}*/

/*void UBTPageRoomLobby::TPTeamList_OnPopup ( int ContextMenuIndex, class UBTACLTeamMemberListHK* acl )
{
	static UFunction* pTPTeamList_OnPopup = 0;
	UBTPageRoomLobby_execTPTeamList_OnPopup_Parms parms;

	if ( !pTPTeamList_OnPopup )
		pTPTeamList_OnPopup = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.TPTeamList_OnPopup" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pTPTeamList_OnPopup, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupBan ( int ContextMenuIndex, class UBTACLMessengerBanHK* acl )
{
	static UFunction* pOnPopupBan = 0;
	UBTPageRoomLobby_execOnPopupBan_Parms parms;

	if ( !pOnPopupBan )
		pOnPopupBan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupBan" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupBan, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupBanCheck ( class UBTACLMessengerBanHK* acl, class UBTCMMessengerBanHK* cm )
{
	static UFunction* pOnPopupBanCheck = 0;
	UBTPageRoomLobby_execOnPopupBanCheck_Parms parms;

	if ( !pOnPopupBanCheck )
		pOnPopupBanCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupBanCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupBanCheck, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupPCBang ( int ContextMenuIndex, class UBTACLMessengerPCBangHK* acl )
{
	static UFunction* pOnPopupPCBang = 0;
	UBTPageRoomLobby_execOnPopupPCBang_Parms parms;

	if ( !pOnPopupPCBang )
		pOnPopupPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupPCBang" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupPCBang, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupPCBangCheck ( class UBTACLMessengerPCBangHK* acl, class UBTCMMessengerPCBangHK* cm )
{
	static UFunction* pOnPopupPCBangCheck = 0;
	UBTPageRoomLobby_execOnPopupPCBangCheck_Parms parms;

	if ( !pOnPopupPCBangCheck )
		pOnPopupPCBangCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupPCBangCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupPCBangCheck, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupClan ( int ContextMenuIndex, class UBTACLMessengerClanHK* acl )
{
	static UFunction* pOnPopupClan = 0;
	UBTPageRoomLobby_execOnPopupClan_Parms parms;

	if ( !pOnPopupClan )
		pOnPopupClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupClan" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupClan, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupClanCheck ( class UBTACLMessengerClanHK* acl, class UBTCMMessengerClanHK* cm )
{
	static UFunction* pOnPopupClanCheck = 0;
	UBTPageRoomLobby_execOnPopupClanCheck_Parms parms;

	if ( !pOnPopupClanCheck )
		pOnPopupClanCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupClanCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupClanCheck, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupFriend ( int ContextMenuIndex, class UBTACLMessengerFriendHK* acl )
{
	static UFunction* pOnPopupFriend = 0;
	UBTPageRoomLobby_execOnPopupFriend_Parms parms;

	if ( !pOnPopupFriend )
		pOnPopupFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupFriend" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupFriend, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupFriendCheck ( class UBTACLMessengerFriendHK* acl, class UBTCMMessengerFriendHK* cm )
{
	static UFunction* pOnPopupFriendCheck = 0;
	UBTPageRoomLobby_execOnPopupFriendCheck_Parms parms;

	if ( !pOnPopupFriendCheck )
		pOnPopupFriendCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupFriendCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupFriendCheck, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupChannel ( int ContextMenuIndex, class UBTACLMessengerChannelHK* acl )
{
	static UFunction* pOnPopupChannel = 0;
	UBTPageRoomLobby_execOnPopupChannel_Parms parms;

	if ( !pOnPopupChannel )
		pOnPopupChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupChannel" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupChannel, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnPopupChannelCheck ( class UBTACLMessengerChannelHK* acl, class UBTCMMessengerChannelHK* cm )
{
	static UFunction* pOnPopupChannelCheck = 0;
	UBTPageRoomLobby_execOnPopupChannelCheck_Parms parms;

	if ( !pOnPopupChannelCheck )
		pOnPopupChannelCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnPopupChannelCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupChannelCheck, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::rfReqCompleteFriendInvite ( struct FString CharnameToBeInvited, unsigned char IsPermit )
{
	static UFunction* prfReqCompleteFriendInvite = 0;
	UBTPageRoomLobby_execrfReqCompleteFriendInvite_Parms parms;

	if ( !prfReqCompleteFriendInvite )
		prfReqCompleteFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqCompleteFriendInvite" );

	parms.CharnameToBeInvited = CharnameToBeInvited;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( prfReqCompleteFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckConfirmFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmFriendInvite = 0;
	UBTPageRoomLobby_execrfAckConfirmFriendInvite_Parms parms;

	if ( !prfAckConfirmFriendInvite )
		prfAckConfirmFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckConfirmFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqRecvFriendInvite ( int ReqUserID, struct FString ReqCharname, struct FString InviteMsg )
{
	static UFunction* prfReqRecvFriendInvite = 0;
	UBTPageRoomLobby_execrfReqRecvFriendInvite_Parms parms;

	if ( !prfReqRecvFriendInvite )
		prfReqRecvFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqRecvFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqCharname = ReqCharname;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::WindowRequestFriend_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pWindowRequestFriend_OnCancel = 0;
	UBTPageRoomLobby_execWindowRequestFriend_OnCancel_Parms parms;

	if ( !pWindowRequestFriend_OnCancel )
		pWindowRequestFriend_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.WindowRequestFriend_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWindowRequestFriend_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::WindowRequestFriend_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pWindowRequestFriend_OnOK = 0;
	UBTPageRoomLobby_execWindowRequestFriend_OnOK_Parms parms;

	if ( !pWindowRequestFriend_OnOK )
		pWindowRequestFriend_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.WindowRequestFriend_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWindowRequestFriend_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckSendFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSendFriendInvite = 0;
	UBTPageRoomLobby_execrfAckSendFriendInvite_Parms parms;

	if ( !prfAckSendFriendInvite )
		prfAckSendFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckSendFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSendFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckRoomUserList ( class TArray< int > UID, class TArray< struct FString > UserName, class TArray< int > Grade, class TArray< int > TeamNum, class TArray< unsigned char > Statue, class TArray< unsigned char > IsHost, class TArray< struct FString > UserIP, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< unsigned char > IsLookingFor, class TArray< int > GMUID, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckRoomUserList = 0;
	UBTPageRoomLobby_execrfAckRoomUserList_Parms parms;

	if ( !prfAckRoomUserList )
		prfAckRoomUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckRoomUserList" );

	parms.UID = UID;
	parms.UserName = UserName;
	parms.Grade = Grade;
	parms.TeamNum = TeamNum;
	parms.Statue = Statue;
	parms.IsHost = IsHost;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.IsLookingFor = IsLookingFor;
	parms.GMUID = GMUID;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckRoomUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::RefreshUserList (  )
{
	static UFunction* pRefreshUserList = 0;
	UBTPageRoomLobby_execRefreshUserList_Parms parms;

	if ( !pRefreshUserList )
		pRefreshUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.RefreshUserList" );

	this->ProcessEvent ( pRefreshUserList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::RemoveInUserList ( int UID )
{
	static UFunction* pRemoveInUserList = 0;
	UBTPageRoomLobby_execRemoveInUserList_Parms parms;

	if ( !pRemoveInUserList )
		pRemoveInUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.RemoveInUserList" );

	parms.UID = UID;
	this->ProcessEvent ( pRemoveInUserList, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::Exit_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pExit_OnOK = 0;
	UBTPageRoomLobby_execExit_OnOK_Parms parms;

	if ( !pExit_OnOK )
		pExit_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.Exit_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pExit_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageRoomLobby_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageRoomLobby_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::TcpLogin_OnConnect ( int ErrCode )
{
	static UFunction* pTcpLogin_OnConnect = 0;
	UBTPageRoomLobby_execTcpLogin_OnConnect_Parms parms;

	if ( !pTcpLogin_OnConnect )
		pTcpLogin_OnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.TcpLogin_OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpLogin_OnConnect, &parms, NULL );

}*/

/*void UBTPageRoomLobby::RoomLobbyToServerSelection (  )
{
	static UFunction* pRoomLobbyToServerSelection = 0;
	UBTPageRoomLobby_execRoomLobbyToServerSelection_Parms parms;

	if ( !pRoomLobbyToServerSelection )
		pRoomLobbyToServerSelection = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.RoomLobbyToServerSelection" );

	this->ProcessEvent ( pRoomLobbyToServerSelection, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::RoomLobbyToServerSelection_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pRoomLobbyToServerSelection_OnOK = 0;
	UBTPageRoomLobby_execRoomLobbyToServerSelection_OnOK_Parms parms;

	if ( !pRoomLobbyToServerSelection_OnOK )
		pRoomLobbyToServerSelection_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.RoomLobbyToServerSelection_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pRoomLobbyToServerSelection_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTPageRoomLobby_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChangeRoomSetting ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckChangeRoomSetting = 0;
	UBTPageRoomLobby_execrfAckChangeRoomSetting_Parms parms;

	if ( !prfAckChangeRoomSetting )
		prfAckChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChangeRoomSetting" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChangeUserState ( int Result, struct FString ErrMsg, class TArray< int > UserIDs, class TArray< unsigned char > Positions, class TArray< int > Numbers, class TArray< unsigned char > OldStates, class TArray< unsigned char > NewStates )
{
	static UFunction* prfAckChangeUserState = 0;
	UBTPageRoomLobby_execrfAckChangeUserState_Parms parms;

	if ( !prfAckChangeUserState )
		prfAckChangeUserState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChangeUserState" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserIDs = UserIDs;
	parms.Positions = Positions;
	parms.Numbers = Numbers;
	parms.OldStates = OldStates;
	parms.NewStates = NewStates;
	this->ProcessEvent ( prfAckChangeUserState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckNotifyLoadingState ( int Result, int UserID, unsigned char LoadingState )
{
	static UFunction* prfAckNotifyLoadingState = 0;
	UBTPageRoomLobby_execrfAckNotifyLoadingState_Parms parms;

	if ( !prfAckNotifyLoadingState )
		prfAckNotifyLoadingState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckNotifyLoadingState" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.LoadingState = LoadingState;
	this->ProcessEvent ( prfAckNotifyLoadingState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckFailedStartGame ( int Result, struct FString ErrMsg, unsigned char IsHost, int FailedUserID, int LoadingStep )
{
	static UFunction* prfAckFailedStartGame = 0;
	UBTPageRoomLobby_execrfAckFailedStartGame_Parms parms;

	if ( !prfAckFailedStartGame )
		prfAckFailedStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckFailedStartGame" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsHost = IsHost;
	parms.FailedUserID = FailedUserID;
	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( prfAckFailedStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckSuccessStartGame ( int Result, struct FString ErrMsg, unsigned char IsHost, struct FString HostIP, int HostPort, int LoadingStep )
{
	static UFunction* prfAckSuccessStartGame = 0;
	UBTPageRoomLobby_execrfAckSuccessStartGame_Parms parms;

	if ( !prfAckSuccessStartGame )
		prfAckSuccessStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckSuccessStartGame" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsHost = IsHost;
	parms.HostIP = HostIP;
	parms.HostPort = HostPort;
	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( prfAckSuccessStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfReqRelayServerOff (  )
{
	static UFunction* prfReqRelayServerOff = 0;
	UBTPageRoomLobby_execrfReqRelayServerOff_Parms parms;

	if ( !prfReqRelayServerOff )
		prfReqRelayServerOff = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfReqRelayServerOff" );

	this->ProcessEvent ( prfReqRelayServerOff, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckUpdateWeaponDurability ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > Durability, class TArray< unsigned char > IsDestroy, class TArray< struct FBtrDouble > FailedWeaponUniqueID )
{
	static UFunction* prfAckUpdateWeaponDurability = 0;
	UBTPageRoomLobby_execrfAckUpdateWeaponDurability_Parms parms;

	if ( !prfAckUpdateWeaponDurability )
		prfAckUpdateWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckUpdateWeaponDurability" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.Durability = Durability;
	parms.IsDestroy = IsDestroy;
	parms.FailedWeaponUniqueID = FailedWeaponUniqueID;
	this->ProcessEvent ( prfAckUpdateWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckEntryQSlotUniqueIDList ( int UserNum, class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWUniqueID, class TArray< struct FBtrDouble > PistolUniqueID, class TArray< struct FBtrDouble > TW1UniqueID, class TArray< struct FBtrDouble > TW2UniqueID )
{
	static UFunction* prfAckEntryQSlotUniqueIDList = 0;
	UBTPageRoomLobby_execrfAckEntryQSlotUniqueIDList_Parms parms;

	if ( !prfAckEntryQSlotUniqueIDList )
		prfAckEntryQSlotUniqueIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckEntryQSlotUniqueIDList" );

	parms.UserNum = UserNum;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWUniqueID = MWUniqueID;
	parms.PistolUniqueID = PistolUniqueID;
	parms.TW1UniqueID = TW1UniqueID;
	parms.TW2UniqueID = TW2UniqueID;
	this->ProcessEvent ( prfAckEntryQSlotUniqueIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckEntryQSlotIDList ( int UserNum, class TArray< unsigned char > QSlotDispOrder, class TArray< int > MWItemID, class TArray< int > MWPartID, class TArray< int > MWPaintID, class TArray< int > PistolItemID, class TArray< int > PistolPartID, class TArray< int > PistolPaintID, class TArray< int > TWItemID1, class TArray< int > TWItemID2, class TArray< int > Skill1ID, class TArray< int > Skill2ID, class TArray< int > Skill3ID, class TArray< int > Skill4ID )
{
	static UFunction* prfAckEntryQSlotIDList = 0;
	UBTPageRoomLobby_execrfAckEntryQSlotIDList_Parms parms;

	if ( !prfAckEntryQSlotIDList )
		prfAckEntryQSlotIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckEntryQSlotIDList" );

	parms.UserNum = UserNum;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWItemID = MWItemID;
	parms.MWPartID = MWPartID;
	parms.MWPaintID = MWPaintID;
	parms.PistolItemID = PistolItemID;
	parms.PistolPartID = PistolPartID;
	parms.PistolPaintID = PistolPaintID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1ID = Skill1ID;
	parms.Skill2ID = Skill2ID;
	parms.Skill3ID = Skill3ID;
	parms.Skill4ID = Skill4ID;
	this->ProcessEvent ( prfAckEntryQSlotIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChangeNewGuest ( struct FString HostIP )
{
	static UFunction* prfAckChangeNewGuest = 0;
	UBTPageRoomLobby_execrfAckChangeNewGuest_Parms parms;

	if ( !prfAckChangeNewGuest )
		prfAckChangeNewGuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChangeNewGuest" );

	parms.HostIP = HostIP;
	this->ProcessEvent ( prfAckChangeNewGuest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChangeHost ( unsigned char ClientNum )
{
	static UFunction* prfAckChangeHost = 0;
	UBTPageRoomLobby_execrfAckChangeHost_Parms parms;

	if ( !prfAckChangeHost )
		prfAckChangeHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChangeHost" );

	parms.ClientNum = ClientNum;
	this->ProcessEvent ( prfAckChangeHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGetBootyChoose ( int Result, struct FString ErrMsg, unsigned char GiveType, struct FBtrDouble ItemUniqueNumber, int ItemID, int PartID, unsigned char ItemType, struct FBtrDouble UntilTime, int StackCount, int PaintID )
{
	static UFunction* prfAckGetBootyChoose = 0;
	UBTPageRoomLobby_execrfAckGetBootyChoose_Parms parms;

	if ( !prfAckGetBootyChoose )
		prfAckGetBootyChoose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGetBootyChoose" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.GiveType = GiveType;
	parms.ItemUniqueNumber = ItemUniqueNumber;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	parms.ItemType = ItemType;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	parms.PaintID = PaintID;
	this->ProcessEvent ( prfAckGetBootyChoose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckEntrySkillList ( class TArray< int > UserIDs, class TArray< int > SkillIDs, class TArray< int > SlotPositions, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEntrySkillList = 0;
	UBTPageRoomLobby_execrfAckEntrySkillList_Parms parms;

	if ( !prfAckEntrySkillList )
		prfAckEntrySkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckEntrySkillList" );

	parms.UserIDs = UserIDs;
	parms.SkillIDs = SkillIDs;
	parms.SlotPositions = SlotPositions;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEntrySkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGetBooty ( int Result, struct FString ErrMsg, class TArray< int > PrizeWinUserID, class TArray< int > BootyItemID, class TArray< int > BootyPartsID )
{
	static UFunction* prfAckGetBooty = 0;
	UBTPageRoomLobby_execrfAckGetBooty_Parms parms;

	if ( !prfAckGetBooty )
		prfAckGetBooty = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGetBooty" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PrizeWinUserID = PrizeWinUserID;
	parms.BootyItemID = BootyItemID;
	parms.BootyPartsID = BootyPartsID;
	this->ProcessEvent ( prfAckGetBooty, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckForceGameOver ( int UserID, int GameRoomNumber, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckForceGameOver = 0;
	UBTPageRoomLobby_execrfAckForceGameOver_Parms parms;

	if ( !prfAckForceGameOver )
		prfAckForceGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckForceGameOver" );

	parms.UserID = UserID;
	parms.GameRoomNumber = GameRoomNumber;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckForceGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChangeRoomOwner ( int GameNum, int OldOwner, int NewOwner, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeRoomOwner = 0;
	UBTPageRoomLobby_execrfAckChangeRoomOwner_Parms parms;

	if ( !prfAckChangeRoomOwner )
		prfAckChangeRoomOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChangeRoomOwner" );

	parms.GameNum = GameNum;
	parms.OldOwner = OldOwner;
	parms.NewOwner = NewOwner;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeRoomOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckEntryItemList ( class TArray< int > UserIDs, class TArray< int > ItemIDs, class TArray< int > SlotPositions, class TArray< int > AddPartsID, class TArray< struct FBtrDouble > UniqueID, class TArray< int > PaintID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEntryItemList = 0;
	UBTPageRoomLobby_execrfAckEntryItemList_Parms parms;

	if ( !prfAckEntryItemList )
		prfAckEntryItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckEntryItemList" );

	parms.UserIDs = UserIDs;
	parms.ItemIDs = ItemIDs;
	parms.SlotPositions = SlotPositions;
	parms.AddPartsID = AddPartsID;
	parms.UniqueID = UniqueID;
	parms.PaintID = PaintID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEntryItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckUpdateScore ( class TArray< int > UserIDs, class TArray< struct FString > NickNames, class TArray< unsigned char > TeamIDs, class TArray< int > Scores, class TArray< int > Kills, class TArray< int > Assists, class TArray< int > Deaths, class TArray< int > EXPs, class TArray< int > EXPBonuses, class TArray< int > Points, class TArray< int > PointBonuses, class TArray< int > TeamScores, class TArray< int > BonusOwnerID, class TArray< int > BonusID )
{
	static UFunction* prfAckUpdateScore = 0;
	UBTPageRoomLobby_execrfAckUpdateScore_Parms parms;

	if ( !prfAckUpdateScore )
		prfAckUpdateScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckUpdateScore" );

	parms.UserIDs = UserIDs;
	parms.NickNames = NickNames;
	parms.TeamIDs = TeamIDs;
	parms.Scores = Scores;
	parms.Kills = Kills;
	parms.Assists = Assists;
	parms.Deaths = Deaths;
	parms.EXPs = EXPs;
	parms.EXPBonuses = EXPBonuses;
	parms.Points = Points;
	parms.PointBonuses = PointBonuses;
	parms.TeamScores = TeamScores;
	parms.BonusOwnerID = BonusOwnerID;
	parms.BonusID = BonusID;
	this->ProcessEvent ( prfAckUpdateScore, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckConnectGame ( int UserID, int Result )
{
	static UFunction* prfAckConnectGame = 0;
	UBTPageRoomLobby_execrfAckConnectGame_Parms parms;

	if ( !prfAckConnectGame )
		prfAckConnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckConnectGame" );

	parms.UserID = UserID;
	parms.Result = Result;
	this->ProcessEvent ( prfAckConnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChangeTeam ( int GameNumber, struct FString UserID, int UID, int TeamNum, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeTeam = 0;
	UBTPageRoomLobby_execrfAckChangeTeam_Parms parms;

	if ( !prfAckChangeTeam )
		prfAckChangeTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChangeTeam" );

	parms.GameNumber = GameNumber;
	parms.UserID = UserID;
	parms.UID = UID;
	parms.TeamNum = TeamNum;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeTeam, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckLeaveRoom ( int Num, int UID, struct FString UserID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckLeaveRoom = 0;
	UBTPageRoomLobby_execrfAckLeaveRoom_Parms parms;

	if ( !prfAckLeaveRoom )
		prfAckLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckLeaveRoom" );

	parms.Num = Num;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckEnterRoom ( int GameNum, int OwnerID, int UID, struct FString UserID, int TeamNum, int Grade, struct FString UserIP, struct FString ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterRoom = 0;
	UBTPageRoomLobby_execrfAckEnterRoom_Parms parms;

	if ( !prfAckEnterRoom )
		prfAckEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckEnterRoom" );

	parms.GameNum = GameNum;
	parms.OwnerID = OwnerID;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.Grade = Grade;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.Clan_Mark_Pattern = Clan_Mark_Pattern;
	parms.Clan_Mark_BG = Clan_Mark_BG;
	parms.Clan_Mark_BL = Clan_Mark_BL;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGameOverEnd ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameOverEnd = 0;
	UBTPageRoomLobby_execrfAckGameOverEnd_Parms parms;

	if ( !prfAckGameOverEnd )
		prfAckGameOverEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGameOverEnd" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameOverEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGameOver ( int UID, int GameRoomNumber, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameOver = 0;
	UBTPageRoomLobby_execrfAckGameOver_Parms parms;

	if ( !prfAckGameOver )
		prfAckGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGameOver" );

	parms.UID = UID;
	parms.GameRoomNumber = GameRoomNumber;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckDisconnectGame ( int Result, int DisconnectUserID, struct FString DisconnectUserName )
{
	static UFunction* prfAckDisconnectGame = 0;
	UBTPageRoomLobby_execrfAckDisconnectGame_Parms parms;

	if ( !prfAckDisconnectGame )
		prfAckDisconnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckDisconnectGame" );

	parms.Result = Result;
	parms.DisconnectUserID = DisconnectUserID;
	parms.DisconnectUserName = DisconnectUserName;
	this->ProcessEvent ( prfAckDisconnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckRegisterOtherUdpInfo ( int UID, struct FString IP, int Port, unsigned char NatType, unsigned char Intervention, struct FString HostInnerIP, int HostInnerPort )
{
	static UFunction* prfAckRegisterOtherUdpInfo = 0;
	UBTPageRoomLobby_execrfAckRegisterOtherUdpInfo_Parms parms;

	if ( !prfAckRegisterOtherUdpInfo )
		prfAckRegisterOtherUdpInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckRegisterOtherUdpInfo" );

	parms.UID = UID;
	parms.IP = IP;
	parms.Port = Port;
	parms.NatType = NatType;
	parms.Intervention = Intervention;
	parms.HostInnerIP = HostInnerIP;
	parms.HostInnerPort = HostInnerPort;
	this->ProcessEvent ( prfAckRegisterOtherUdpInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckStartGame ( int GameNumber, int ClientsCount, int StartSeed, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckStartGame = 0;
	UBTPageRoomLobby_execrfAckStartGame_Parms parms;

	if ( !prfAckStartGame )
		prfAckStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckStartGame" );

	parms.GameNumber = GameNumber;
	parms.ClientsCount = ClientsCount;
	parms.StartSeed = StartSeed;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckChangeGameMode ( int GameNum, int UID, struct FString GameMode, unsigned char GameModeNum, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeGameMode = 0;
	UBTPageRoomLobby_execrfAckChangeGameMode_Parms parms;

	if ( !prfAckChangeGameMode )
		prfAckChangeGameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckChangeGameMode" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.GameMode = GameMode;
	parms.GameModeNum = GameModeNum;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeGameMode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckSelectMap ( int GameNum, int UID, struct FString MapName, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSelectMap = 0;
	UBTPageRoomLobby_execrfAckSelectMap_Parms parms;

	if ( !prfAckSelectMap )
		prfAckSelectMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckSelectMap" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.MapName = MapName;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSelectMap, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGameRoomInfo ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckGameRoomInfo = 0;
	UBTPageRoomLobby_execrfAckGameRoomInfo_Parms parms;

	if ( !prfAckGameRoomInfo )
		prfAckGameRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGameRoomInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckGameRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckIsGameRoomPlaying ( int GameRoomNum, unsigned char IsPlaying )
{
	static UFunction* prfAckIsGameRoomPlaying = 0;
	UBTPageRoomLobby_execrfAckIsGameRoomPlaying_Parms parms;

	if ( !prfAckIsGameRoomPlaying )
		prfAckIsGameRoomPlaying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckIsGameRoomPlaying" );

	parms.GameRoomNum = GameRoomNum;
	parms.IsPlaying = IsPlaying;
	this->ProcessEvent ( prfAckIsGameRoomPlaying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::rfAckGameHostInfo ( int GameNumber, struct FString UserID, struct FString IP, int Port, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameHostInfo = 0;
	UBTPageRoomLobby_execrfAckGameHostInfo_Parms parms;

	if ( !prfAckGameHostInfo )
		prfAckGameHostInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.rfAckGameHostInfo" );

	parms.GameNumber = GameNumber;
	parms.UserID = UserID;
	parms.IP = IP;
	parms.Port = Port;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameHostInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::TeamChatLog ( struct FString cL )
{
	static UFunction* pTeamChatLog = 0;
	UBTPageRoomLobby_execTeamChatLog_Parms parms;

	if ( !pTeamChatLog )
		pTeamChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.TeamChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog, &parms, NULL );

}*/

/*void UBTPageRoomLobby::BroadCastItemChatLog ( struct FString cL )
{
	static UFunction* pBroadCastItemChatLog = 0;
	UBTPageRoomLobby_execBroadCastItemChatLog_Parms parms;

	if ( !pBroadCastItemChatLog )
		pBroadCastItemChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BroadCastItemChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pBroadCastItemChatLog, &parms, NULL );

}*/

/*void UBTPageRoomLobby::SystemChatLog ( struct FString cL )
{
	static UFunction* pSystemChatLog = 0;
	UBTPageRoomLobby_execSystemChatLog_Parms parms;

	if ( !pSystemChatLog )
		pSystemChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.SystemChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog, &parms, NULL );

}*/

/*void UBTPageRoomLobby::SelfChatLog ( struct FString cL )
{
	static UFunction* pSelfChatLog = 0;
	UBTPageRoomLobby_execSelfChatLog_Parms parms;

	if ( !pSelfChatLog )
		pSelfChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.SelfChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog, &parms, NULL );

}*/

/*void UBTPageRoomLobby::WhisperChatLog ( struct FString cL )
{
	static UFunction* pWhisperChatLog = 0;
	UBTPageRoomLobby_execWhisperChatLog_Parms parms;

	if ( !pWhisperChatLog )
		pWhisperChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.WhisperChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog, &parms, NULL );

}*/

/*void UBTPageRoomLobby::ClanChatLog ( struct FString cL )
{
	static UFunction* pClanChatLog = 0;
	UBTPageRoomLobby_execClanChatLog_Parms parms;

	if ( !pClanChatLog )
		pClanChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ClanChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog, &parms, NULL );

}*/

/*void UBTPageRoomLobby::NormalChatLog ( struct FString cL )
{
	static UFunction* pNormalChatLog = 0;
	UBTPageRoomLobby_execNormalChatLog_Parms parms;

	if ( !pNormalChatLog )
		pNormalChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.NormalChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog, &parms, NULL );

}*/

/*void UBTPageRoomLobby::ClearChatLog (  )
{
	static UFunction* pClearChatLog = 0;
	UBTPageRoomLobby_execClearChatLog_Parms parms;

	if ( !pClearChatLog )
		pClearChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ClearChatLog" );

	this->ProcessEvent ( pClearChatLog, &parms, NULL );

}*/

/*void UBTPageRoomLobby::SetMatchBGM (  )
{
	static UFunction* pSetMatchBGM = 0;
	UBTPageRoomLobby_execSetMatchBGM_Parms parms;

	if ( !pSetMatchBGM )
		pSetMatchBGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.SetMatchBGM" );

	this->ProcessEvent ( pSetMatchBGM, &parms, NULL );

}*/

/*void UBTPageRoomLobby::GameOver (  )
{
	static UFunction* pGameOver = 0;
	UBTPageRoomLobby_execGameOver_Parms parms;

	if ( !pGameOver )
		pGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.GameOver" );

	this->ProcessEvent ( pGameOver, &parms, NULL );

}*/

/*void UBTPageRoomLobby::StartGame ( struct FString IP, int Port )
{
	static UFunction* pStartGame = 0;
	UBTPageRoomLobby_execStartGame_Parms parms;

	if ( !pStartGame )
		pStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.StartGame" );

	parms.IP = IP;
	parms.Port = Port;
	this->ProcessEvent ( pStartGame, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::IsUserAllReady (  )
{
	static UFunction* pIsUserAllReady = 0;
	UBTPageRoomLobby_execIsUserAllReady_Parms parms;

	if ( !pIsUserAllReady )
		pIsUserAllReady = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.IsUserAllReady" );

	this->ProcessEvent ( pIsUserAllReady, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UBTPageRoomLobby::GetReadyAllUserCount (  )
{
	static UFunction* pGetReadyAllUserCount = 0;
	UBTPageRoomLobby_execGetReadyAllUserCount_Parms parms;

	if ( !pGetReadyAllUserCount )
		pGetReadyAllUserCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.GetReadyAllUserCount" );

	this->ProcessEvent ( pGetReadyAllUserCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UBTPageRoomLobby::GetUserCount (  )
{
	static UFunction* pGetUserCount = 0;
	UBTPageRoomLobby_execGetUserCount_Parms parms;

	if ( !pGetUserCount )
		pGetUserCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.GetUserCount" );

	this->ProcessEvent ( pGetUserCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::IsUserCountFull (  )
{
	static UFunction* pIsUserCountFull = 0;
	UBTPageRoomLobby_execIsUserCountFull_Parms parms;

	if ( !pIsUserCountFull )
		pIsUserCountFull = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.IsUserCountFull" );

	this->ProcessEvent ( pIsUserCountFull, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::UpdateRoomInfoByMatchMaker (  )
{
	static UFunction* pUpdateRoomInfoByMatchMaker = 0;
	UBTPageRoomLobby_execUpdateRoomInfoByMatchMaker_Parms parms;

	if ( !pUpdateRoomInfoByMatchMaker )
		pUpdateRoomInfoByMatchMaker = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateRoomInfoByMatchMaker" );

	this->ProcessEvent ( pUpdateRoomInfoByMatchMaker, &parms, NULL );

}*/

/*struct FString UBTPageRoomLobby::FindFriendlyGameModeByIndex ( int GameModeIndex )
{
	static UFunction* pFindFriendlyGameModeByIndex = 0;
	UBTPageRoomLobby_execFindFriendlyGameModeByIndex_Parms parms;

	if ( !pFindFriendlyGameModeByIndex )
		pFindFriendlyGameModeByIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.FindFriendlyGameModeByIndex" );

	parms.GameModeIndex = GameModeIndex;
	this->ProcessEvent ( pFindFriendlyGameModeByIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UBTPageRoomLobby::FindFriendlyGameMode ( struct FString GameMode )
{
	static UFunction* pFindFriendlyGameMode = 0;
	UBTPageRoomLobby_execFindFriendlyGameMode_Parms parms;

	if ( !pFindFriendlyGameMode )
		pFindFriendlyGameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.FindFriendlyGameMode" );

	parms.GameMode = GameMode;
	this->ProcessEvent ( pFindFriendlyGameMode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::InitialRoomInfo (  )
{
	static UFunction* pInitialRoomInfo = 0;
	UBTPageRoomLobby_execInitialRoomInfo_Parms parms;

	if ( !pInitialRoomInfo )
		pInitialRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.InitialRoomInfo" );

	this->ProcessEvent ( pInitialRoomInfo, &parms, NULL );

}*/

/*class UBTConsole* UBTPageRoomLobby::GetConsole (  )
{
	static UFunction* pGetConsole = 0;
	UBTPageRoomLobby_execGetConsole_Parms parms;

	if ( !pGetConsole )
		pGetConsole = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.GetConsole" );

	this->ProcessEvent ( pGetConsole, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Login* UBTPageRoomLobby::GetTcpLogin (  )
{
	static UFunction* pGetTcpLogin = 0;
	UBTPageRoomLobby_execGetTcpLogin_Parms parms;

	if ( !pGetTcpLogin )
		pGetTcpLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.GetTcpLogin" );

	this->ProcessEvent ( pGetTcpLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTPageRoomLobby::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageRoomLobby_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::internalKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pinternalKeyEvent = 0;
	UBTPageRoomLobby_execinternalKeyEvent_Parms parms;

	if ( !pinternalKeyEvent )
		pinternalKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.internalKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pinternalKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageRoomLobby_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageRoomLobby::SetCharacterInfo ( struct FString ClanName, struct FCharInfo btCharInfo )
{
	static UFunction* pSetCharacterInfo = 0;
	UBTPageRoomLobby_execSetCharacterInfo_Parms parms;

	if ( !pSetCharacterInfo )
		pSetCharacterInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.SetCharacterInfo" );

	parms.ClanName = ClanName;
	parms.btCharInfo = btCharInfo;
	this->ProcessEvent ( pSetCharacterInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::QuestLog ( struct FString Msg )
{
	static UFunction* pQuestLog = 0;
	UBTPageRoomLobby_execQuestLog_Parms parms;

	if ( !pQuestLog )
		pQuestLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.QuestLog" );

	parms.Msg = Msg;
	this->ProcessEvent ( pQuestLog, &parms, NULL );

}*/

/*void UBTPageRoomLobby::RefreshPage (  )
{
	static UFunction* pRefreshPage = 0;
	UBTPageRoomLobby_execRefreshPage_Parms parms;

	if ( !pRefreshPage )
		pRefreshPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.RefreshPage" );

	this->ProcessEvent ( pRefreshPage, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageRoomLobby_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageRoomLobby::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageRoomLobby_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateDurabilityWarningItemList ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateDurabilityWarningItemList = 0;
	UBTPageRoomLobby_execUpdateDurabilityWarningItemList_Parms parms;

	if ( !pUpdateDurabilityWarningItemList )
		pUpdateDurabilityWarningItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateDurabilityWarningItemList" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateDurabilityWarningItemList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateExpiredItemList ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateExpiredItemList = 0;
	UBTPageRoomLobby_execUpdateExpiredItemList_Parms parms;

	if ( !pUpdateExpiredItemList )
		pUpdateExpiredItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateExpiredItemList" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateExpiredItemList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateWebzenItemList ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateWebzenItemList = 0;
	UBTPageRoomLobby_execUpdateWebzenItemList_Parms parms;

	if ( !pUpdateWebzenItemList )
		pUpdateWebzenItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateWebzenItemList" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateWebzenItemList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateItemList ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateItemList = 0;
	UBTPageRoomLobby_execUpdateItemList_Parms parms;

	if ( !pUpdateItemList )
		pUpdateItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateItemList" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateItemList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateBlockList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateBlockList = 0;
	UBTPageRoomLobby_execUpdateBlockList_Parms parms;

	if ( !pUpdateBlockList )
		pUpdateBlockList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateBlockList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateBlockList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::SetFriendlyUser ( class UBTAutoColumnListDataHK* ACLData, int UserListIdx )
{
	static UFunction* pSetFriendlyUser = 0;
	UBTPageRoomLobby_execSetFriendlyUser_Parms parms;

	if ( !pSetFriendlyUser )
		pSetFriendlyUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.SetFriendlyUser" );

	parms.ACLData = ACLData;
	parms.UserListIdx = UserListIdx;
	this->ProcessEvent ( pSetFriendlyUser, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateFriendlyUser ( int UserListIdx )
{
	static UFunction* pUpdateFriendlyUser = 0;
	UBTPageRoomLobby_execUpdateFriendlyUser_Parms parms;

	if ( !pUpdateFriendlyUser )
		pUpdateFriendlyUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateFriendlyUser" );

	parms.UserListIdx = UserListIdx;
	this->ProcessEvent ( pUpdateFriendlyUser, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdatePCBangList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdatePCBangList = 0;
	UBTPageRoomLobby_execUpdatePCBangList_Parms parms;

	if ( !pUpdatePCBangList )
		pUpdatePCBangList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdatePCBangList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdatePCBangList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateClanList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateClanList = 0;
	UBTPageRoomLobby_execUpdateClanList_Parms parms;

	if ( !pUpdateClanList )
		pUpdateClanList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateClanList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateClanList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateFriendList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateFriendList = 0;
	UBTPageRoomLobby_execUpdateFriendList_Parms parms;

	if ( !pUpdateFriendList )
		pUpdateFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateFriendList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateFriendList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateGameRoomInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateGameRoomInfo = 0;
	UBTPageRoomLobby_execUpdateGameRoomInfo_Parms parms;

	if ( !pUpdateGameRoomInfo )
		pUpdateGameRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateGameRoomInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateGameRoomInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateRecv_CharInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateRecv_CharInfo = 0;
	UBTPageRoomLobby_execUpdateRecv_CharInfo_Parms parms;

	if ( !pUpdateRecv_CharInfo )
		pUpdateRecv_CharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateRecv_CharInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateRecv_CharInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateQuestList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateQuestList = 0;
	UBTPageRoomLobby_execUpdateQuestList_Parms parms;

	if ( !pUpdateQuestList )
		pUpdateQuestList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateQuestList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateQuestList, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdatePositionInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdatePositionInfo = 0;
	UBTPageRoomLobby_execUpdatePositionInfo_Parms parms;

	if ( !pUpdatePositionInfo )
		pUpdatePositionInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdatePositionInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdatePositionInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdatePCBangInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdatePCBangInfo = 0;
	UBTPageRoomLobby_execUpdatePCBangInfo_Parms parms;

	if ( !pUpdatePCBangInfo )
		pUpdatePCBangInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdatePCBangInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdatePCBangInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateEquipItemInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateEquipItemInfo = 0;
	UBTPageRoomLobby_execUpdateEquipItemInfo_Parms parms;

	if ( !pUpdateEquipItemInfo )
		pUpdateEquipItemInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateEquipItemInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateEquipItemInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateRankingInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateRankingInfo = 0;
	UBTPageRoomLobby_execUpdateRankingInfo_Parms parms;

	if ( !pUpdateRankingInfo )
		pUpdateRankingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateRankingInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateRankingInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateMoneyInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateMoneyInfo = 0;
	UBTPageRoomLobby_execUpdateMoneyInfo_Parms parms;

	if ( !pUpdateMoneyInfo )
		pUpdateMoneyInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateMoneyInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateMoneyInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateClanInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateClanInfo = 0;
	UBTPageRoomLobby_execUpdateClanInfo_Parms parms;

	if ( !pUpdateClanInfo )
		pUpdateClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateClanInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateClanInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::UpdateCharInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateCharInfo = 0;
	UBTPageRoomLobby_execUpdateCharInfo_Parms parms;

	if ( !pUpdateCharInfo )
		pUpdateCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateCharInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateCharInfo, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnCompleteOpened (  )
{
	static UFunction* pOnCompleteOpened = 0;
	UBTPageRoomLobby_execOnCompleteOpened_Parms parms;

	if ( !pOnCompleteOpened )
		pOnCompleteOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnCompleteOpened" );

	this->ProcessEvent ( pOnCompleteOpened, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OnBackToLastPage (  )
{
	static UFunction* pOnBackToLastPage = 0;
	UBTPageRoomLobby_execOnBackToLastPage_Parms parms;

	if ( !pOnBackToLastPage )
		pOnBackToLastPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OnBackToLastPage" );

	this->ProcessEvent ( pOnBackToLastPage, &parms, NULL );

}*/

/*void UBTPageRoomLobby::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageRoomLobby_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageRoomLobby::InternalOnReOpen (  )
{
	static UFunction* pInternalOnReOpen = 0;
	UBTPageRoomLobby_execInternalOnReOpen_Parms parms;

	if ( !pInternalOnReOpen )
		pInternalOnReOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.InternalOnReOpen" );

	this->ProcessEvent ( pInternalOnReOpen, &parms, NULL );

}*/

/*void UBTPageRoomLobby::CloseNetworkCheckingWindow ( bool bNotInitial )
{
	static UFunction* pCloseNetworkCheckingWindow = 0;
	UBTPageRoomLobby_execCloseNetworkCheckingWindow_Parms parms;

	if ( !pCloseNetworkCheckingWindow )
		pCloseNetworkCheckingWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.CloseNetworkCheckingWindow" );

	parms.bNotInitial = bNotInitial;
	this->ProcessEvent ( pCloseNetworkCheckingWindow, &parms, NULL );

}*/

/*void UBTPageRoomLobby::OpenNetworkCheckingWindow (  )
{
	static UFunction* pOpenNetworkCheckingWindow = 0;
	UBTPageRoomLobby_execOpenNetworkCheckingWindow_Parms parms;

	if ( !pOpenNetworkCheckingWindow )
		pOpenNetworkCheckingWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.OpenNetworkCheckingWindow" );

	this->ProcessEvent ( pOpenNetworkCheckingWindow, &parms, NULL );

}*/

/*void UBTPageRoomLobby::FailedNetworkChecking ( struct FString ErrMsg, int Code )
{
	static UFunction* pFailedNetworkChecking = 0;
	UBTPageRoomLobby_execFailedNetworkChecking_Parms parms;

	if ( !pFailedNetworkChecking )
		pFailedNetworkChecking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.FailedNetworkChecking" );

	parms.ErrMsg = ErrMsg;
	parms.Code = Code;
	this->ProcessEvent ( pFailedNetworkChecking, &parms, NULL );

}*/

/*void UBTPageRoomLobby::StartNetworkChecking ( int ClientsCount, bool bConnectGame )
{
	static UFunction* pStartNetworkChecking = 0;
	UBTPageRoomLobby_execStartNetworkChecking_Parms parms;

	if ( !pStartNetworkChecking )
		pStartNetworkChecking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.StartNetworkChecking" );

	parms.ClientsCount = ClientsCount;
	parms.bConnectGame = bConnectGame;
	this->ProcessEvent ( pStartNetworkChecking, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::ButtonStart_OnKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pButtonStart_OnKeyEvent = 0;
	UBTPageRoomLobby_execButtonStart_OnKeyEvent_Parms parms;

	if ( !pButtonStart_OnKeyEvent )
		pButtonStart_OnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ButtonStart_OnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pButtonStart_OnKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::MessageHostUnsuitableness (  )
{
	static UFunction* pMessageHostUnsuitableness = 0;
	UBTPageRoomLobby_execMessageHostUnsuitableness_Parms parms;

	if ( !pMessageHostUnsuitableness )
		pMessageHostUnsuitableness = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.MessageHostUnsuitableness" );

	this->ProcessEvent ( pMessageHostUnsuitableness, &parms, NULL );

}*/

/*void UBTPageRoomLobby::SendPingAndSendHostPoint (  )
{
	static UFunction* pSendPingAndSendHostPoint = 0;
	UBTPageRoomLobby_execSendPingAndSendHostPoint_Parms parms;

	if ( !pSendPingAndSendHostPoint )
		pSendPingAndSendHostPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.SendPingAndSendHostPoint" );

	this->ProcessEvent ( pSendPingAndSendHostPoint, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::InternalOnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternalOnPreDraw = 0;
	UBTPageRoomLobby_execInternalOnPreDraw_Parms parms;

	if ( !pInternalOnPreDraw )
		pInternalOnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.InternalOnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternalOnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::TPMessenger_ButtonMsg_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pTPMessenger_ButtonMsg_OnClick = 0;
	UBTPageRoomLobby_execTPMessenger_ButtonMsg_OnClick_Parms parms;

	if ( !pTPMessenger_ButtonMsg_OnClick )
		pTPMessenger_ButtonMsg_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.TPMessenger_ButtonMsg_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTPMessenger_ButtonMsg_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::TPMessenger_ACLMsg0_OnHitBottom ( int Top, int Count, int itemperpage )
{
	static UFunction* pTPMessenger_ACLMsg0_OnHitBottom = 0;
	UBTPageRoomLobby_execTPMessenger_ACLMsg0_OnHitBottom_Parms parms;

	if ( !pTPMessenger_ACLMsg0_OnHitBottom )
		pTPMessenger_ACLMsg0_OnHitBottom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.TPMessenger_ACLMsg0_OnHitBottom" );

	parms.Top = Top;
	parms.Count = Count;
	parms.itemperpage = itemperpage;
	this->ProcessEvent ( pTPMessenger_ACLMsg0_OnHitBottom, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::MyInfo_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pMyInfo_OnClick = 0;
	UBTPageRoomLobby_execMyInfo_OnClick_Parms parms;

	if ( !pMyInfo_OnClick )
		pMyInfo_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.MyInfo_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pMyInfo_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageRoomLobby_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTPageRoomLobby::InitializeTeamList (  )
{
	static UFunction* pInitializeTeamList = 0;
	UBTPageRoomLobby_execInitializeTeamList_Parms parms;

	if ( !pInitializeTeamList )
		pInitializeTeamList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.InitializeTeamList" );

	this->ProcessEvent ( pInitializeTeamList, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::BTWindowCreateClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanHK_OnOK = 0;
	UBTPageRoomLobby_execBTWindowCreateClanHK_OnOK_Parms parms;

	if ( !pBTWindowCreateClanHK_OnOK )
		pBTWindowCreateClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowCreateClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowCreateClanNeedPointHK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanNeedPointHK_OnClick = 0;
	UBTPageRoomLobby_execBTWindowCreateClanNeedPointHK_OnClick_Parms parms;

	if ( !pBTWindowCreateClanNeedPointHK_OnClick )
		pBTWindowCreateClanNeedPointHK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowCreateClanNeedPointHK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanNeedPointHK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::ClanMenu_ButtonCreateClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonCreateClan_OnClick = 0;
	UBTPageRoomLobby_execClanMenu_ButtonCreateClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonCreateClan_OnClick )
		pClanMenu_ButtonCreateClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ClanMenu_ButtonCreateClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonCreateClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowFindClanHK_OnInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnInfo = 0;
	UBTPageRoomLobby_execBTWindowFindClanHK_OnInfo_Parms parms;

	if ( !pBTWindowFindClanHK_OnInfo )
		pBTWindowFindClanHK_OnInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowFindClanHK_OnInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowFindClanHK_OnRequestJoin ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnRequestJoin = 0;
	UBTPageRoomLobby_execBTWindowFindClanHK_OnRequestJoin_Parms parms;

	if ( !pBTWindowFindClanHK_OnRequestJoin )
		pBTWindowFindClanHK_OnRequestJoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowFindClanHK_OnRequestJoin" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnRequestJoin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::ClanMenu_ButtonFindClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonFindClan_OnClick = 0;
	UBTPageRoomLobby_execClanMenu_ButtonFindClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonFindClan_OnClick )
		pClanMenu_ButtonFindClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ClanMenu_ButtonFindClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonFindClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::ClanMenu_ButtonLookingForClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonLookingForClan_OnClick = 0;
	UBTPageRoomLobby_execClanMenu_ButtonLookingForClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonLookingForClan_OnClick )
		pClanMenu_ButtonLookingForClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ClanMenu_ButtonLookingForClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonLookingForClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageRoomLobby_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::ChangeButtonStart (  )
{
	static UFunction* pChangeButtonStart = 0;
	UBTPageRoomLobby_execChangeButtonStart_Parms parms;

	if ( !pChangeButtonStart )
		pChangeButtonStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ChangeButtonStart" );

	this->ProcessEvent ( pChangeButtonStart, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::ChangeButtonTeam ( int Team )
{
	static UFunction* pChangeButtonTeam = 0;
	UBTPageRoomLobby_execChangeButtonTeam_Parms parms;

	if ( !pChangeButtonTeam )
		pChangeButtonTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ChangeButtonTeam" );

	parms.Team = Team;
	this->ProcessEvent ( pChangeButtonTeam, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby::UpdateRoomOwner ( int UID )
{
	static UFunction* pUpdateRoomOwner = 0;
	UBTPageRoomLobby_execUpdateRoomOwner_Parms parms;

	if ( !pUpdateRoomOwner )
		pUpdateRoomOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.UpdateRoomOwner" );

	parms.UID = UID;
	this->ProcessEvent ( pUpdateRoomOwner, &parms, NULL );

}*/

/*bool UBTPageRoomLobby::CheckInviteUser ( int CurPos, int CurState, struct FString szNickName, struct FString szClanName )
{
	static UFunction* pCheckInviteUser = 0;
	UBTPageRoomLobby_execCheckInviteUser_Parms parms;

	if ( !pCheckInviteUser )
		pCheckInviteUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.CheckInviteUser" );

	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.szNickName = szNickName;
	parms.szClanName = szClanName;
	this->ProcessEvent ( pCheckInviteUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::CanInviteUser (  )
{
	static UFunction* pCanInviteUser = 0;
	UBTPageRoomLobby_execCanInviteUser_Parms parms;

	if ( !pCanInviteUser )
		pCanInviteUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.CanInviteUser" );

	this->ProcessEvent ( pCanInviteUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::ButtonTeam_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonTeam_OnClick = 0;
	UBTPageRoomLobby_execButtonTeam_OnClick_Parms parms;

	if ( !pButtonTeam_OnClick )
		pButtonTeam_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ButtonTeam_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonTeam_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::ButtonReady_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonReady_OnClick = 0;
	UBTPageRoomLobby_execButtonReady_OnClick_Parms parms;

	if ( !pButtonReady_OnClick )
		pButtonReady_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ButtonReady_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonReady_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::ButtonStart_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonStart_OnClick = 0;
	UBTPageRoomLobby_execButtonStart_OnClick_Parms parms;

	if ( !pButtonStart_OnClick )
		pButtonStart_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ButtonStart_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonStart_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::ButtonStart_OnClick_Before_CheckDurability ( class UGUIComponent* Sender )
{
	static UFunction* pButtonStart_OnClick_Before_CheckDurability = 0;
	UBTPageRoomLobby_execButtonStart_OnClick_Before_CheckDurability_Parms parms;

	if ( !pButtonStart_OnClick_Before_CheckDurability )
		pButtonStart_OnClick_Before_CheckDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ButtonStart_OnClick_Before_CheckDurability" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonStart_OnClick_Before_CheckDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::CurrentButtonClickBehavior ( class UGUIComponent* Sender )
{
	static UFunction* pCurrentButtonClickBehavior = 0;
	UBTPageRoomLobby_execCurrentButtonClickBehavior_Parms parms;

	if ( !pCurrentButtonClickBehavior )
		pCurrentButtonClickBehavior = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.CurrentButtonClickBehavior" );

	parms.Sender = Sender;
	this->ProcessEvent ( pCurrentButtonClickBehavior, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::CheckPrimaryWeaponDurability (  )
{
	static UFunction* pCheckPrimaryWeaponDurability = 0;
	UBTPageRoomLobby_execCheckPrimaryWeaponDurability_Parms parms;

	if ( !pCheckPrimaryWeaponDurability )
		pCheckPrimaryWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.CheckPrimaryWeaponDurability" );

	this->ProcessEvent ( pCheckPrimaryWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::GotoStartGame_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pGotoStartGame_OnOK = 0;
	UBTPageRoomLobby_execGotoStartGame_OnOK_Parms parms;

	if ( !pGotoStartGame_OnOK )
		pGotoStartGame_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.GotoStartGame_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pGotoStartGame_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::GotoInventory_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pGotoInventory_OnOK = 0;
	UBTPageRoomLobby_execGotoInventory_OnOK_Parms parms;

	if ( !pGotoInventory_OnOK )
		pGotoInventory_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.GotoInventory_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pGotoInventory_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::ButtonRoomInfo_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonRoomInfo_OnClick = 0;
	UBTPageRoomLobby_execButtonRoomInfo_OnClick_Parms parms;

	if ( !pButtonRoomInfo_OnClick )
		pButtonRoomInfo_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.ButtonRoomInfo_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonRoomInfo_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowJoinClan_OK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowJoinClan_OK = 0;
	UBTPageRoomLobby_execBTWindowJoinClan_OK_Parms parms;

	if ( !pBTWindowJoinClan_OK )
		pBTWindowJoinClan_OK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowJoinClan_OK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowJoinClan_OK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowInviteClan_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowInviteClan_OnOK = 0;
	UBTPageRoomLobby_execBTWindowInviteClan_OnOK_Parms parms;

	if ( !pBTWindowInviteClan_OnOK )
		pBTWindowInviteClan_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowInviteClan_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowInviteClan_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::WindowInviteFriend_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pWindowInviteFriend_OnOK = 0;
	UBTPageRoomLobby_execWindowInviteFriend_OnOK_Parms parms;

	if ( !pWindowInviteFriend_OnOK )
		pWindowInviteFriend_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.WindowInviteFriend_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWindowInviteFriend_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby::BTWindowRoomInfoHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRoomInfoHK_OnOK = 0;
	UBTPageRoomLobby_execBTWindowRoomInfoHK_OnOK_Parms parms;

	if ( !pBTWindowRoomInfoHK_OnOK )
		pBTWindowRoomInfoHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby.BTWindowRoomInfoHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRoomInfoHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqAhnNotifyDisconnct ( int Code )
{
	static UFunction* prfReqAhnNotifyDisconnct = 0;
	UBTTcpHandler_execrfReqAhnNotifyDisconnct_Parms parms;

	if ( !prfReqAhnNotifyDisconnct )
		prfReqAhnNotifyDisconnct = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqAhnNotifyDisconnct" );

	parms.Code = Code;
	this->ProcessEvent ( prfReqAhnNotifyDisconnct, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqAhnHsObject ( class TArray< unsigned char > Data, int DataSize )
{
	static UFunction* prfReqAhnHsObject = 0;
	UBTTcpHandler_execrfReqAhnHsObject_Parms parms;

	if ( !prfReqAhnHsObject )
		prfReqAhnHsObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqAhnHsObject" );

	parms.Data = Data;
	parms.DataSize = DataSize;
	this->ProcessEvent ( prfReqAhnHsObject, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfNotifyCouponUseError ( int Time )
{
	static UFunction* prfNotifyCouponUseError = 0;
	UBTTcpHandler_execrfNotifyCouponUseError_Parms parms;

	if ( !prfNotifyCouponUseError )
		prfNotifyCouponUseError = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfNotifyCouponUseError" );

	parms.Time = Time;
	this->ProcessEvent ( prfNotifyCouponUseError, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqNotifyShopItemDataEnd ( int Ver )
{
	static UFunction* prfReqNotifyShopItemDataEnd = 0;
	UBTTcpHandler_execrfReqNotifyShopItemDataEnd_Parms parms;

	if ( !prfReqNotifyShopItemDataEnd )
		prfReqNotifyShopItemDataEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqNotifyShopItemDataEnd" );

	parms.Ver = Ver;
	this->ProcessEvent ( prfReqNotifyShopItemDataEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckCouponUse ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckCouponUse = 0;
	UBTTcpHandler_execrfAckCouponUse_Parms parms;

	if ( !prfAckCouponUse )
		prfAckCouponUse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckCouponUse" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCouponUse, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqNotifyShopItemData ( class TArray< int > ProductNo, class TArray< struct FString > ProductRowGuid, class TArray< struct FString > ServiceCode, class TArray< struct FString > ProductName, class TArray< struct FString > ProductCode, class TArray< struct FString > ProductType, class TArray< unsigned char > SaleType, class TArray< struct FString > ItemSaleType, class TArray< unsigned char > ISIncludeBonus, class TArray< int > ProductCost, class TArray< int > ProductHour, class TArray< int > ProductQuantity, class TArray< int > TotalQuantity, class TArray< int > ReOrderTerms, class TArray< int > ReorderCount, class TArray< int > PurchaseAvailableQuantity, class TArray< int > AvailableMinLevel, class TArray< int > AvailableMaxLevel, class TArray< unsigned char > AvailableGender, class TArray< int > InventoryKeepDays, class TArray< int > SaleMasterFlag, class TArray< int > SaleStatus, class TArray< struct FString > Description, class TArray< struct FString > Property0, class TArray< struct FString > Property1, class TArray< struct FString > Property2, class TArray< struct FString > Property3, class TArray< struct FString > Property4, class TArray< int > IsGift )
{
	static UFunction* prfReqNotifyShopItemData = 0;
	UBTTcpHandler_execrfReqNotifyShopItemData_Parms parms;

	if ( !prfReqNotifyShopItemData )
		prfReqNotifyShopItemData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqNotifyShopItemData" );

	parms.ProductNo = ProductNo;
	parms.ProductRowGuid = ProductRowGuid;
	parms.ServiceCode = ServiceCode;
	parms.ProductName = ProductName;
	parms.ProductCode = ProductCode;
	parms.ProductType = ProductType;
	parms.SaleType = SaleType;
	parms.ItemSaleType = ItemSaleType;
	parms.ISIncludeBonus = ISIncludeBonus;
	parms.ProductCost = ProductCost;
	parms.ProductHour = ProductHour;
	parms.ProductQuantity = ProductQuantity;
	parms.TotalQuantity = TotalQuantity;
	parms.ReOrderTerms = ReOrderTerms;
	parms.ReorderCount = ReorderCount;
	parms.PurchaseAvailableQuantity = PurchaseAvailableQuantity;
	parms.AvailableMinLevel = AvailableMinLevel;
	parms.AvailableMaxLevel = AvailableMaxLevel;
	parms.AvailableGender = AvailableGender;
	parms.InventoryKeepDays = InventoryKeepDays;
	parms.SaleMasterFlag = SaleMasterFlag;
	parms.SaleStatus = SaleStatus;
	parms.Description = Description;
	parms.Property0 = Property0;
	parms.Property1 = Property1;
	parms.Property2 = Property2;
	parms.Property3 = Property3;
	parms.Property4 = Property4;
	parms.IsGift = IsGift;
	this->ProcessEvent ( prfReqNotifyShopItemData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckShopItemData (  )
{
	static UFunction* prfAckShopItemData = 0;
	UBTTcpHandler_execrfAckShopItemData_Parms parms;

	if ( !prfAckShopItemData )
		prfAckShopItemData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckShopItemData" );

	this->ProcessEvent ( prfAckShopItemData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfNotifyClanLevelup ( struct FString ClanName, int Levelup )
{
	static UFunction* prfNotifyClanLevelup = 0;
	UBTTcpHandler_execrfNotifyClanLevelup_Parms parms;

	if ( !prfNotifyClanLevelup )
		prfNotifyClanLevelup = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfNotifyClanLevelup" );

	parms.ClanName = ClanName;
	parms.Levelup = Levelup;
	this->ProcessEvent ( prfNotifyClanLevelup, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfNotifyNewClanName ( struct FString New_NickName )
{
	static UFunction* prfNotifyNewClanName = 0;
	UBTTcpHandler_execrfNotifyNewClanName_Parms parms;

	if ( !prfNotifyNewClanName )
		prfNotifyNewClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfNotifyNewClanName" );

	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfNotifyNewNickName ( int Community_Type, struct FString Old_NickName, struct FString New_NickName )
{
	static UFunction* prfNotifyNewNickName = 0;
	UBTTcpHandler_execrfNotifyNewNickName_Parms parms;

	if ( !prfNotifyNewNickName )
		prfNotifyNewNickName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfNotifyNewNickName" );

	parms.Community_Type = Community_Type;
	parms.Old_NickName = Old_NickName;
	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewNickName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckTencent_StartTenProtect ( int CharDBID )
{
	static UFunction* prfAckTencent_StartTenProtect = 0;
	UBTTcpHandler_execrfAckTencent_StartTenProtect_Parms parms;

	if ( !prfAckTencent_StartTenProtect )
		prfAckTencent_StartTenProtect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckTencent_StartTenProtect" );

	parms.CharDBID = CharDBID;
	this->ProcessEvent ( prfAckTencent_StartTenProtect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckMoveToLobby ( unsigned char MessageType )
{
	static UFunction* prfAckMoveToLobby = 0;
	UBTTcpHandler_execrfAckMoveToLobby_Parms parms;

	if ( !prfAckMoveToLobby )
		prfAckMoveToLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckMoveToLobby" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckMoveToLobby, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPopUpMessage ( int MessageType )
{
	static UFunction* prfAckPopUpMessage = 0;
	UBTTcpHandler_execrfAckPopUpMessage_Parms parms;

	if ( !prfAckPopUpMessage )
		prfAckPopUpMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPopUpMessage" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckPopUpMessage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfUpdateWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfUpdateWebzenShopScriptVersion = 0;
	UBTTcpHandler_execrfUpdateWebzenShopScriptVersion_Parms parms;

	if ( !prfUpdateWebzenShopScriptVersion )
		prfUpdateWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfUpdateWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfUpdateWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckFriendPosition ( int Result, struct FString TargetCharName, unsigned char ServerType, struct FString fServername, struct FString fServerShortName, struct FString fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, struct FString ChannelNickName, int GameRoomNum )
{
	static UFunction* prfAckFriendPosition = 0;
	UBTTcpHandler_execrfAckFriendPosition_Parms parms;

	if ( !prfAckFriendPosition )
		prfAckFriendPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckFriendPosition" );

	parms.Result = Result;
	parms.TargetCharName = TargetCharName;
	parms.ServerType = ServerType;
	parms.fServername = fServername;
	parms.fServerShortName = fServerShortName;
	parms.fServerIP = fServerIP;
	parms.fServerPort = fServerPort;
	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.ChannelNum = ChannelNum;
	parms.ChannelNickName = ChannelNickName;
	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckFriendPosition, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckLogOut ( unsigned char Result, unsigned char Reason )
{
	static UFunction* prfAckLogOut = 0;
	UBTTcpHandler_execrfAckLogOut_Parms parms;

	if ( !prfAckLogOut )
		prfAckLogOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckLogOut" );

	parms.Result = Result;
	parms.Reason = Reason;
	this->ProcessEvent ( prfAckLogOut, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyUpdateCharInfo_LevelMark ( struct FString CharName, int LevelMarkID )
{
	static UFunction* prfAckNotifyUpdateCharInfo_LevelMark = 0;
	UBTTcpHandler_execrfAckNotifyUpdateCharInfo_LevelMark_Parms parms;

	if ( !prfAckNotifyUpdateCharInfo_LevelMark )
		prfAckNotifyUpdateCharInfo_LevelMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyUpdateCharInfo_LevelMark" );

	parms.CharName = CharName;
	parms.LevelMarkID = LevelMarkID;
	this->ProcessEvent ( prfAckNotifyUpdateCharInfo_LevelMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetRankingInfoListEnd (  )
{
	static UFunction* prfAckGetRankingInfoListEnd = 0;
	UBTTcpHandler_execrfAckGetRankingInfoListEnd_Parms parms;

	if ( !prfAckGetRankingInfoListEnd )
		prfAckGetRankingInfoListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetRankingInfoListEnd" );

	this->ProcessEvent ( prfAckGetRankingInfoListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetRankingInfoList ( int Result, unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckGetRankingInfoList = 0;
	UBTTcpHandler_execrfAckGetRankingInfoList_Parms parms;

	if ( !prfAckGetRankingInfoList )
		prfAckGetRankingInfoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetRankingInfoList" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.CharName = CharName;
	parms.CharLevel = CharLevel;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Ranking_Accum = Ranking_Accum;
	parms.Ranking_Accum_Prev = Ranking_Accum_Prev;
	parms.Ranking_Accum_Exp = Ranking_Accum_Exp;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckGetRankingInfoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetRankingInfoListStart ( int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount )
{
	static UFunction* prfAckGetRankingInfoListStart = 0;
	UBTTcpHandler_execrfAckGetRankingInfoListStart_Parms parms;

	if ( !prfAckGetRankingInfoListStart )
		prfAckGetRankingInfoListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetRankingInfoListStart" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckGetRankingInfoListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb )
{
	static UFunction* prfAckCharDetailInfo = 0;
	UBTTcpHandler_execrfAckCharDetailInfo_Parms parms;

	if ( !prfAckCharDetailInfo )
		prfAckCharDetailInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckCharDetailInfo" );

	parms.MaxSerial = MaxSerial;
	parms.MaxScore = MaxScore;
	parms.MaxKill = MaxKill;
	parms.MaxAssist = MaxAssist;
	parms.Serial3 = Serial3;
	parms.Serial5 = Serial5;
	parms.Serial7 = Serial7;
	parms.Serial10 = Serial10;
	parms.Serial15 = Serial15;
	parms.AR = AR;
	parms.SMG = SMG;
	parms.SR = SR;
	parms.SW = SW;
	parms.Melee = Melee;
	parms.Grenade = Grenade;
	parms.FlashBang = FlashBang;
	parms.Foot = Foot;
	parms.AT4 = AT4;
	parms.MG = MG;
	parms.Fire = Fire;
	parms.RPG7 = RPG7;
	parms.TimeBomb = TimeBomb;
	parms.IcendiaryBomb = IcendiaryBomb;
	parms.ClusterBomb = ClusterBomb;
	parms.ByChopper = ByChopper;
	parms.Artillery = Artillery;
	parms.KillChopper = KillChopper;
	parms.FirstKill = FirstKill;
	parms.LastKill = LastKill;
	parms.AllKill = AllKill;
	parms.Dominate = Dominate;
	parms.InstallBomb = InstallBomb;
	parms.DefuseBomb = DefuseBomb;
	this->ProcessEvent ( prfAckCharDetailInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqInGameRoomUserClanLevelChanged ( int UserID, int ClanLevel )
{
	static UFunction* prfReqInGameRoomUserClanLevelChanged = 0;
	UBTTcpHandler_execrfReqInGameRoomUserClanLevelChanged_Parms parms;

	if ( !prfReqInGameRoomUserClanLevelChanged )
		prfReqInGameRoomUserClanLevelChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqInGameRoomUserClanLevelChanged" );

	parms.UserID = UserID;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfReqInGameRoomUserClanLevelChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatchResultHistory ( class TArray< struct FBtrDouble > MatchDate, class TArray< unsigned char > IsWin, class TArray< struct FString > EnemyClanname )
{
	static UFunction* prfAckClanMatchResultHistory = 0;
	UBTTcpHandler_execrfAckClanMatchResultHistory_Parms parms;

	if ( !prfAckClanMatchResultHistory )
		prfAckClanMatchResultHistory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatchResultHistory" );

	parms.MatchDate = MatchDate;
	parms.IsWin = IsWin;
	parms.EnemyClanname = EnemyClanname;
	this->ProcessEvent ( prfAckClanMatchResultHistory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqInGameRoomUserInfoChanged (  )
{
	static UFunction* prfReqInGameRoomUserInfoChanged = 0;
	UBTTcpHandler_execrfReqInGameRoomUserInfoChanged_Parms parms;

	if ( !prfReqInGameRoomUserInfoChanged )
		prfReqInGameRoomUserInfoChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqInGameRoomUserInfoChanged" );

	this->ProcessEvent ( prfReqInGameRoomUserInfoChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckServerType ( unsigned char Type )
{
	static UFunction* prfAckServerType = 0;
	UBTTcpHandler_execrfAckServerType_Parms parms;

	if ( !prfAckServerType )
		prfAckServerType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckServerType" );

	parms.Type = Type;
	this->ProcessEvent ( prfAckServerType, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_ChangeRoomSetting ( int WaitRoomIndex, int Result, struct FString ErrMsg, class TArray< int > MapNumArray, int VersusMode, unsigned char IsPublic )
{
	static UFunction* prfAckClanMatch_ChangeRoomSetting = 0;
	UBTTcpHandler_execrfAckClanMatch_ChangeRoomSetting_Parms parms;

	if ( !prfAckClanMatch_ChangeRoomSetting )
		prfAckClanMatch_ChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_ChangeRoomSetting" );

	parms.WaitRoomIndex = WaitRoomIndex;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	parms.IsPublic = IsPublic;
	this->ProcessEvent ( prfAckClanMatch_ChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_PublicWaitRoomChanged ( int WaitRoomIdx, struct FString RoomName, int MapNum, int CurUserCount, int MaxUserCount, unsigned char Status, unsigned char IsPublic )
{
	static UFunction* prfAckClanMatch_PublicWaitRoomChanged = 0;
	UBTTcpHandler_execrfAckClanMatch_PublicWaitRoomChanged_Parms parms;

	if ( !prfAckClanMatch_PublicWaitRoomChanged )
		prfAckClanMatch_PublicWaitRoomChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_PublicWaitRoomChanged" );

	parms.WaitRoomIdx = WaitRoomIdx;
	parms.RoomName = RoomName;
	parms.MapNum = MapNum;
	parms.CurUserCount = CurUserCount;
	parms.MaxUserCount = MaxUserCount;
	parms.Status = Status;
	parms.IsPublic = IsPublic;
	this->ProcessEvent ( prfAckClanMatch_PublicWaitRoomChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_EndPublicWaitRoomList (  )
{
	static UFunction* prfAckClanMatch_EndPublicWaitRoomList = 0;
	UBTTcpHandler_execrfAckClanMatch_EndPublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_EndPublicWaitRoomList )
		prfAckClanMatch_EndPublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_EndPublicWaitRoomList" );

	this->ProcessEvent ( prfAckClanMatch_EndPublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_PublicWaitRoomList ( class TArray< int > WaitRoomIdx, class TArray< struct FString > LeaderName, class TArray< struct FString > RoomName, class TArray< int > MapNum, class TArray< int > CurUserCount, class TArray< int > MaxUserCount, class TArray< unsigned char > Status )
{
	static UFunction* prfAckClanMatch_PublicWaitRoomList = 0;
	UBTTcpHandler_execrfAckClanMatch_PublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_PublicWaitRoomList )
		prfAckClanMatch_PublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_PublicWaitRoomList" );

	parms.WaitRoomIdx = WaitRoomIdx;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	parms.MapNum = MapNum;
	parms.CurUserCount = CurUserCount;
	parms.MaxUserCount = MaxUserCount;
	parms.Status = Status;
	this->ProcessEvent ( prfAckClanMatch_PublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_StartPublicWaitRoomList ( int Result, struct FString ErrMsg, int Count )
{
	static UFunction* prfAckClanMatch_StartPublicWaitRoomList = 0;
	UBTTcpHandler_execrfAckClanMatch_StartPublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_StartPublicWaitRoomList )
		prfAckClanMatch_StartPublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_StartPublicWaitRoomList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Count = Count;
	this->ProcessEvent ( prfAckClanMatch_StartPublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPaidItem_NotifyChangeClanname ( struct FString NewClanname )
{
	static UFunction* prfAckPaidItem_NotifyChangeClanname = 0;
	UBTTcpHandler_execrfAckPaidItem_NotifyChangeClanname_Parms parms;

	if ( !prfAckPaidItem_NotifyChangeClanname )
		prfAckPaidItem_NotifyChangeClanname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPaidItem_NotifyChangeClanname" );

	parms.NewClanname = NewClanname;
	this->ProcessEvent ( prfAckPaidItem_NotifyChangeClanname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPaidItem_ChangeClanname ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int RemainCount, struct FString NewClanname )
{
	static UFunction* prfAckPaidItem_ChangeClanname = 0;
	UBTTcpHandler_execrfAckPaidItem_ChangeClanname_Parms parms;

	if ( !prfAckPaidItem_ChangeClanname )
		prfAckPaidItem_ChangeClanname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPaidItem_ChangeClanname" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.RemainCount = RemainCount;
	parms.NewClanname = NewClanname;
	this->ProcessEvent ( prfAckPaidItem_ChangeClanname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPaidItem_ChangeCharname ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int RemainCount, struct FString NewCharname )
{
	static UFunction* prfAckPaidItem_ChangeCharname = 0;
	UBTTcpHandler_execrfAckPaidItem_ChangeCharname_Parms parms;

	if ( !prfAckPaidItem_ChangeCharname )
		prfAckPaidItem_ChangeCharname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPaidItem_ChangeCharname" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.RemainCount = RemainCount;
	parms.NewCharname = NewCharname;
	this->ProcessEvent ( prfAckPaidItem_ChangeCharname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyEndTutorial ( int UserID, struct FString CharName, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckNotifyEndTutorial = 0;
	UBTTcpHandler_execrfAckNotifyEndTutorial_Parms parms;

	if ( !prfAckNotifyEndTutorial )
		prfAckNotifyEndTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyEndTutorial" );

	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckNotifyEndTutorial, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyStartTutorial ( int Result, int UserID )
{
	static UFunction* prfAckNotifyStartTutorial = 0;
	UBTTcpHandler_execrfAckNotifyStartTutorial_Parms parms;

	if ( !prfAckNotifyStartTutorial )
		prfAckNotifyStartTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyStartTutorial" );

	parms.Result = Result;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckNotifyStartTutorial, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetMyMailBoxState ( int Result, unsigned char IsFull, int NewMailCount )
{
	static UFunction* prfAckGetMyMailBoxState = 0;
	UBTTcpHandler_execrfAckGetMyMailBoxState_Parms parms;

	if ( !prfAckGetMyMailBoxState )
		prfAckGetMyMailBoxState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetMyMailBoxState" );

	parms.Result = Result;
	parms.IsFull = IsFull;
	parms.NewMailCount = NewMailCount;
	this->ProcessEvent ( prfAckGetMyMailBoxState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRoomUserPingInfo ( class TArray< int > UnqueID, class TArray< int > Ping, int HostPriorityPoint )
{
	static UFunction* prfAckRoomUserPingInfo = 0;
	UBTTcpHandler_execrfAckRoomUserPingInfo_Parms parms;

	if ( !prfAckRoomUserPingInfo )
		prfAckRoomUserPingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRoomUserPingInfo" );

	parms.UnqueID = UnqueID;
	parms.Ping = Ping;
	parms.HostPriorityPoint = HostPriorityPoint;
	this->ProcessEvent ( prfAckRoomUserPingInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckSetLookForClan ( int Result, struct FString ErrMsg, unsigned char IsLookingFor )
{
	static UFunction* prfAckSetLookForClan = 0;
	UBTTcpHandler_execrfAckSetLookForClan_Parms parms;

	if ( !prfAckSetLookForClan )
		prfAckSetLookForClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckSetLookForClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsLookingFor = IsLookingFor;
	this->ProcessEvent ( prfAckSetLookForClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChangedRoomTitle_FromGM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangedRoomTitle_FromGM = 0;
	UBTTcpHandler_execrfAckChangedRoomTitle_FromGM_Parms parms;

	if ( !prfAckChangedRoomTitle_FromGM )
		prfAckChangedRoomTitle_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChangedRoomTitle_FromGM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangedRoomTitle_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRecvSystemMsg ( unsigned char CommunityType, struct FSystemMsgParam MsgInfo )
{
	static UFunction* prfAckRecvSystemMsg = 0;
	UBTTcpHandler_execrfAckRecvSystemMsg_Parms parms;

	if ( !prfAckRecvSystemMsg )
		prfAckRecvSystemMsg = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRecvSystemMsg" );

	parms.CommunityType = CommunityType;
	parms.MsgInfo = MsgInfo;
	this->ProcessEvent ( prfAckRecvSystemMsg, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGMLeaveRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMLeaveRoom = 0;
	UBTTcpHandler_execrfAckGMLeaveRoom_Parms parms;

	if ( !prfAckGMLeaveRoom )
		prfAckGMLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGMLeaveRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGMEnterRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMEnterRoom = 0;
	UBTTcpHandler_execrfAckGMEnterRoom_Parms parms;

	if ( !prfAckGMEnterRoom )
		prfAckGMEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGMEnterRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckForceDisconnectUser_GM ( int Result, struct FString ErrMsg, struct FString CharName )
{
	static UFunction* prfAckForceDisconnectUser_GM = 0;
	UBTTcpHandler_execrfAckForceDisconnectUser_GM_Parms parms;

	if ( !prfAckForceDisconnectUser_GM )
		prfAckForceDisconnectUser_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckForceDisconnectUser_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckForceDisconnectUser_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotice_GM ( int Result, struct FString ErrMsg, unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, struct FString Msg )
{
	static UFunction* prfAckNotice_GM = 0;
	UBTTcpHandler_execrfAckNotice_GM_Parms parms;

	if ( !prfAckNotice_GM )
		prfAckNotice_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotice_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeType = NoticeType;
	parms.ServerID = ServerID;
	parms.ChannelNum = ChannelNum;
	parms.GameRoomNum = GameRoomNum;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckNotice_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChangeRoomTitle_GM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangeRoomTitle_GM = 0;
	UBTTcpHandler_execrfAckChangeRoomTitle_GM_Parms parms;

	if ( !prfAckChangeRoomTitle_GM )
		prfAckChangeRoomTitle_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChangeRoomTitle_GM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangeRoomTitle_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqExteriorRoomOwnerInfo ( int RoomNum, struct FString OwnerName, struct FString OwnerIP )
{
	static UFunction* prfReqExteriorRoomOwnerInfo = 0;
	UBTTcpHandler_execrfReqExteriorRoomOwnerInfo_Parms parms;

	if ( !prfReqExteriorRoomOwnerInfo )
		prfReqExteriorRoomOwnerInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqExteriorRoomOwnerInfo" );

	parms.RoomNum = RoomNum;
	parms.OwnerName = OwnerName;
	parms.OwnerIP = OwnerIP;
	this->ProcessEvent ( prfReqExteriorRoomOwnerInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckCharBlockInfo ( int Result, struct FBtrDouble ChatBlockStartTime, struct FBtrDouble ChatBlockEndTime, class TArray< struct FBtrDouble > BlockedItemIdx )
{
	static UFunction* prfAckCharBlockInfo = 0;
	UBTTcpHandler_execrfAckCharBlockInfo_Parms parms;

	if ( !prfAckCharBlockInfo )
		prfAckCharBlockInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckCharBlockInfo" );

	parms.Result = Result;
	parms.ChatBlockStartTime = ChatBlockStartTime;
	parms.ChatBlockEndTime = ChatBlockEndTime;
	parms.BlockedItemIdx = BlockedItemIdx;
	this->ProcessEvent ( prfAckCharBlockInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckQuestGetAvailableEventList ( int Result, struct FString ErrMsg, class TArray< int > QuestID )
{
	static UFunction* prfAckQuestGetAvailableEventList = 0;
	UBTTcpHandler_execrfAckQuestGetAvailableEventList_Parms parms;

	if ( !prfAckQuestGetAvailableEventList )
		prfAckQuestGetAvailableEventList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckQuestGetAvailableEventList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.QuestID = QuestID;
	this->ProcessEvent ( prfAckQuestGetAvailableEventList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPaidItem_NotifyChangeClanMark ( struct FString ClanName, int Pattern, int BG, int BL )
{
	static UFunction* prfAckPaidItem_NotifyChangeClanMark = 0;
	UBTTcpHandler_execrfAckPaidItem_NotifyChangeClanMark_Parms parms;

	if ( !prfAckPaidItem_NotifyChangeClanMark )
		prfAckPaidItem_NotifyChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPaidItem_NotifyChangeClanMark" );

	parms.ClanName = ClanName;
	parms.Pattern = Pattern;
	parms.BG = BG;
	parms.BL = BL;
	this->ProcessEvent ( prfAckPaidItem_NotifyChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPaidItem_ChangeClanMark ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_ChangeClanMark = 0;
	UBTTcpHandler_execrfAckPaidItem_ChangeClanMark_Parms parms;

	if ( !prfAckPaidItem_ChangeClanMark )
		prfAckPaidItem_ChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPaidItem_ChangeClanMark" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_ChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPaidItem_ClanMarkDupCheck ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckPaidItem_ClanMarkDupCheck = 0;
	UBTTcpHandler_execrfAckPaidItem_ClanMarkDupCheck_Parms parms;

	if ( !prfAckPaidItem_ClanMarkDupCheck )
		prfAckPaidItem_ClanMarkDupCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPaidItem_ClanMarkDupCheck" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckPaidItem_ClanMarkDupCheck, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckWebzenBillingUseStorageItem ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int ItemID, struct FBtrDouble ItemExtra )
{
	static UFunction* prfAckWebzenBillingUseStorageItem = 0;
	UBTTcpHandler_execrfAckWebzenBillingUseStorageItem_Parms parms;

	if ( !prfAckWebzenBillingUseStorageItem )
		prfAckWebzenBillingUseStorageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckWebzenBillingUseStorageItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.ItemID = ItemID;
	parms.ItemExtra = ItemExtra;
	this->ProcessEvent ( prfAckWebzenBillingUseStorageItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPaidItem_RelayBroadcast ( struct FString CharName, struct FString Msg )
{
	static UFunction* prfAckPaidItem_RelayBroadcast = 0;
	UBTTcpHandler_execrfAckPaidItem_RelayBroadcast_Parms parms;

	if ( !prfAckPaidItem_RelayBroadcast )
		prfAckPaidItem_RelayBroadcast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPaidItem_RelayBroadcast" );

	parms.CharName = CharName;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckPaidItem_RelayBroadcast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPaidItem_BroadCast ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_BroadCast = 0;
	UBTTcpHandler_execrfAckPaidItem_BroadCast_Parms parms;

	if ( !prfAckPaidItem_BroadCast )
		prfAckPaidItem_BroadCast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPaidItem_BroadCast" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_BroadCast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPaidItem_EraseRecord ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int Command, int RemainCount )
{
	static UFunction* prfAckPaidItem_EraseRecord = 0;
	UBTTcpHandler_execrfAckPaidItem_EraseRecord_Parms parms;

	if ( !prfAckPaidItem_EraseRecord )
		prfAckPaidItem_EraseRecord = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPaidItem_EraseRecord" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.Command = Command;
	parms.RemainCount = RemainCount;
	this->ProcessEvent ( prfAckPaidItem_EraseRecord, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckWebzenBillingStorageListEnd (  )
{
	static UFunction* prfAckWebzenBillingStorageListEnd = 0;
	UBTTcpHandler_execrfAckWebzenBillingStorageListEnd_Parms parms;

	if ( !prfAckWebzenBillingStorageListEnd )
		prfAckWebzenBillingStorageListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckWebzenBillingStorageListEnd" );

	this->ProcessEvent ( prfAckWebzenBillingStorageListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckWebzenBillingStorageList ( class TArray< int > Seq, class TArray< int > ItemSeq, class TArray< int > GroupCode, class TArray< int > ShareFlag, class TArray< int > ProductSeq, class TArray< struct FString > CashName, class TArray< struct FBtrDouble > CashPoint, class TArray< struct FString > SendAccountID, class TArray< struct FString > SendMessage, class TArray< unsigned char > ItemType, class TArray< unsigned char > RelationType, class TArray< int > ProductType, class TArray< int > PriceSeq )
{
	static UFunction* prfAckWebzenBillingStorageList = 0;
	UBTTcpHandler_execrfAckWebzenBillingStorageList_Parms parms;

	if ( !prfAckWebzenBillingStorageList )
		prfAckWebzenBillingStorageList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckWebzenBillingStorageList" );

	parms.Seq = Seq;
	parms.ItemSeq = ItemSeq;
	parms.GroupCode = GroupCode;
	parms.ShareFlag = ShareFlag;
	parms.ProductSeq = ProductSeq;
	parms.CashName = CashName;
	parms.CashPoint = CashPoint;
	parms.SendAccountID = SendAccountID;
	parms.SendMessage = SendMessage;
	parms.ItemType = ItemType;
	parms.RelationType = RelationType;
	parms.ProductType = ProductType;
	parms.PriceSeq = PriceSeq;
	this->ProcessEvent ( prfAckWebzenBillingStorageList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckWebzenBillingStorageListStart ( int Result, struct FString ErrMsg, int TotalCount, int TotalPage, int CurPage )
{
	static UFunction* prfAckWebzenBillingStorageListStart = 0;
	UBTTcpHandler_execrfAckWebzenBillingStorageListStart_Parms parms;

	if ( !prfAckWebzenBillingStorageListStart )
		prfAckWebzenBillingStorageListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckWebzenBillingStorageListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalCount = TotalCount;
	parms.TotalPage = TotalPage;
	parms.CurPage = CurPage;
	this->ProcessEvent ( prfAckWebzenBillingStorageListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRandomBox_Use ( int Result, struct FString ErrMsg, struct FBtrDouble RandomBoxItemIdx, int RandomBxoItemCount, class TArray< int > ItemIDChoose, class TArray< int > PartIDChoose, class TArray< int > PeriodOnChoosenItem, class TArray< int > StackCountOnChoosenItem, class TArray< unsigned char > bHave, class TArray< struct FBtrDouble > ItemIdx, class TArray< struct FBtrDouble > UntilTime, class TArray< int > StackCount )
{
	static UFunction* prfAckRandomBox_Use = 0;
	UBTTcpHandler_execrfAckRandomBox_Use_Parms parms;

	if ( !prfAckRandomBox_Use )
		prfAckRandomBox_Use = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRandomBox_Use" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RandomBoxItemIdx = RandomBoxItemIdx;
	parms.RandomBxoItemCount = RandomBxoItemCount;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	parms.PeriodOnChoosenItem = PeriodOnChoosenItem;
	parms.StackCountOnChoosenItem = StackCountOnChoosenItem;
	parms.bHave = bHave;
	parms.ItemIdx = ItemIdx;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckRandomBox_Use, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRegisterMainPCBang ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRegisterMainPCBang = 0;
	UBTTcpHandler_execrfAckRegisterMainPCBang_Parms parms;

	if ( !prfAckRegisterMainPCBang )
		prfAckRegisterMainPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRegisterMainPCBang" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRegisterMainPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqIsPaidWebzenPCBang ( unsigned char IsPaid )
{
	static UFunction* prfReqIsPaidWebzenPCBang = 0;
	UBTTcpHandler_execrfReqIsPaidWebzenPCBang_Parms parms;

	if ( !prfReqIsPaidWebzenPCBang )
		prfReqIsPaidWebzenPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqIsPaidWebzenPCBang" );

	parms.IsPaid = IsPaid;
	this->ProcessEvent ( prfReqIsPaidWebzenPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPCBangUserListEnd (  )
{
	static UFunction* prfAckPCBangUserListEnd = 0;
	UBTTcpHandler_execrfAckPCBangUserListEnd_Parms parms;

	if ( !prfAckPCBangUserListEnd )
		prfAckPCBangUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPCBangUserListEnd" );

	this->ProcessEvent ( prfAckPCBangUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPCBangUserList ( class TArray< struct FString > FriendName, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > Level, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, class TArray< unsigned char > IsCombat, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckPCBangUserList = 0;
	UBTTcpHandler_execrfAckPCBangUserList_Parms parms;

	if ( !prfAckPCBangUserList )
		prfAckPCBangUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPCBangUserList" );

	parms.FriendName = FriendName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.Level = Level;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.IsCombat = IsCombat;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckPCBangUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckPCBangUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckPCBangUserListStart = 0;
	UBTTcpHandler_execrfAckPCBangUserListStart_Parms parms;

	if ( !prfAckPCBangUserListStart )
		prfAckPCBangUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckPCBangUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckPCBangUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGiftItemByWebzenCash ( int Result, struct FString ErrMsg, int LeftProductCount )
{
	static UFunction* prfAckGiftItemByWebzenCash = 0;
	UBTTcpHandler_execrfAckGiftItemByWebzenCash_Parms parms;

	if ( !prfAckGiftItemByWebzenCash )
		prfAckGiftItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGiftItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.LeftProductCount = LeftProductCount;
	this->ProcessEvent ( prfAckGiftItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckBuyItemByWebzenCash ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBuyItemByWebzenCash = 0;
	UBTTcpHandler_execrfAckBuyItemByWebzenCash_Parms parms;

	if ( !prfAckBuyItemByWebzenCash )
		prfAckBuyItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckBuyItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBuyItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_GetClanWaittingRoomInfo ( int WaitRoomIndex, int Result, struct FString ErrMsg, class TArray< int > MapNumArray, int VersusMode, struct FString WaitRoomName )
{
	static UFunction* prfAckClanMatch_GetClanWaittingRoomInfo = 0;
	UBTTcpHandler_execrfAckClanMatch_GetClanWaittingRoomInfo_Parms parms;

	if ( !prfAckClanMatch_GetClanWaittingRoomInfo )
		prfAckClanMatch_GetClanWaittingRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_GetClanWaittingRoomInfo" );

	parms.WaitRoomIndex = WaitRoomIndex;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	parms.WaitRoomName = WaitRoomName;
	this->ProcessEvent ( prfAckClanMatch_GetClanWaittingRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetBotID ( int Result, unsigned char RequestedAFCount, unsigned char RequestedRSACount, class TArray< int > AFBotID, class TArray< int > RSABotID )
{
	static UFunction* prfAckGetBotID = 0;
	UBTTcpHandler_execrfAckGetBotID_Parms parms;

	if ( !prfAckGetBotID )
		prfAckGetBotID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetBotID" );

	parms.Result = Result;
	parms.RequestedAFCount = RequestedAFCount;
	parms.RequestedRSACount = RequestedRSACount;
	parms.AFBotID = AFBotID;
	parms.RSABotID = RSABotID;
	this->ProcessEvent ( prfAckGetBotID, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRegisteredPCBangInfo ( int Result, struct FString ErrMsg, unsigned char IsRegisteredPCBang, unsigned char IsMainPCBang, struct FString PCBangName )
{
	static UFunction* prfAckRegisteredPCBangInfo = 0;
	UBTTcpHandler_execrfAckRegisteredPCBangInfo_Parms parms;

	if ( !prfAckRegisteredPCBangInfo )
		prfAckRegisteredPCBangInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRegisteredPCBangInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsRegisteredPCBang = IsRegisteredPCBang;
	parms.IsMainPCBang = IsMainPCBang;
	parms.PCBangName = PCBangName;
	this->ProcessEvent ( prfAckRegisteredPCBangInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfAckWebzenShopScriptVersion = 0;
	UBTTcpHandler_execrfAckWebzenShopScriptVersion_Parms parms;

	if ( !prfAckWebzenShopScriptVersion )
		prfAckWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfAckWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckWebzenCash ( int Result, struct FString ErrMsg, struct FBtrDouble PCoinCash, struct FBtrDouble CCoinCash )
{
	static UFunction* prfAckWebzenCash = 0;
	UBTTcpHandler_execrfAckWebzenCash_Parms parms;

	if ( !prfAckWebzenCash )
		prfAckWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PCoinCash = PCoinCash;
	parms.CCoinCash = CCoinCash;
	this->ProcessEvent ( prfAckWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckCheckEquipedWeaponDurability ( int Result, class TArray< struct FBtrDouble > ItemUniqueID, class TArray< int > ItemSlotNum )
{
	static UFunction* prfAckCheckEquipedWeaponDurability = 0;
	UBTTcpHandler_execrfAckCheckEquipedWeaponDurability_Parms parms;

	if ( !prfAckCheckEquipedWeaponDurability )
		prfAckCheckEquipedWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckCheckEquipedWeaponDurability" );

	parms.Result = Result;
	parms.ItemUniqueID = ItemUniqueID;
	parms.ItemSlotNum = ItemSlotNum;
	this->ProcessEvent ( prfAckCheckEquipedWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqClanMatch_InviteCrewResult ( struct FString Invitee, int Result )
{
	static UFunction* prfReqClanMatch_InviteCrewResult = 0;
	UBTTcpHandler_execrfReqClanMatch_InviteCrewResult_Parms parms;

	if ( !prfReqClanMatch_InviteCrewResult )
		prfReqClanMatch_InviteCrewResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqClanMatch_InviteCrewResult" );

	parms.Invitee = Invitee;
	parms.Result = Result;
	this->ProcessEvent ( prfReqClanMatch_InviteCrewResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqClanMatch_RecvInviteCrew ( struct FString Inviter, struct FString ServerIP, int Port, int WaittingID, struct FString Msg, int MapNum, int InviteUserChannelNum, struct FString LeaderName, struct FString RoomName )
{
	static UFunction* prfReqClanMatch_RecvInviteCrew = 0;
	UBTTcpHandler_execrfReqClanMatch_RecvInviteCrew_Parms parms;

	if ( !prfReqClanMatch_RecvInviteCrew )
		prfReqClanMatch_RecvInviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqClanMatch_RecvInviteCrew" );

	parms.Inviter = Inviter;
	parms.ServerIP = ServerIP;
	parms.Port = Port;
	parms.WaittingID = WaittingID;
	parms.Msg = Msg;
	parms.MapNum = MapNum;
	parms.InviteUserChannelNum = InviteUserChannelNum;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	this->ProcessEvent ( prfReqClanMatch_RecvInviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_InviteCrew ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_InviteCrew = 0;
	UBTTcpHandler_execrfAckClanMatch_InviteCrew_Parms parms;

	if ( !prfAckClanMatch_InviteCrew )
		prfAckClanMatch_InviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_InviteCrew" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_InviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqDailyQuestNewAvailable ( class TArray< int > ExpiredQuestID, class TArray< int > NewQuestID )
{
	static UFunction* prfReqDailyQuestNewAvailable = 0;
	UBTTcpHandler_execrfReqDailyQuestNewAvailable_Parms parms;

	if ( !prfReqDailyQuestNewAvailable )
		prfReqDailyQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqDailyQuestNewAvailable" );

	parms.ExpiredQuestID = ExpiredQuestID;
	parms.NewQuestID = NewQuestID;
	this->ProcessEvent ( prfReqDailyQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqQuestNewAvailable ( class TArray< int > AchivedQuestID, class TArray< int > NewQuestID, class TArray< unsigned char > IsDailyQuest, class TArray< int > ExpiredQuest )
{
	static UFunction* prfReqQuestNewAvailable = 0;
	UBTTcpHandler_execrfReqQuestNewAvailable_Parms parms;

	if ( !prfReqQuestNewAvailable )
		prfReqQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqQuestNewAvailable" );

	parms.AchivedQuestID = AchivedQuestID;
	parms.NewQuestID = NewQuestID;
	parms.IsDailyQuest = IsDailyQuest;
	parms.ExpiredQuest = ExpiredQuest;
	this->ProcessEvent ( prfReqQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckQuestUpdate ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestUpdate = 0;
	UBTTcpHandler_execrfAckQuestUpdate_Parms parms;

	if ( !prfAckQuestUpdate )
		prfAckQuestUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckQuestUpdate" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestUpdate, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckQuestListEnd (  )
{
	static UFunction* prfAckQuestListEnd = 0;
	UBTTcpHandler_execrfAckQuestListEnd_Parms parms;

	if ( !prfAckQuestListEnd )
		prfAckQuestListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckQuestListEnd" );

	this->ProcessEvent ( prfAckQuestListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckQuestList ( class TArray< int > QuestID, class TArray< int > CountPrograss, class TArray< unsigned char > IsDailyQuest )
{
	static UFunction* prfAckQuestList = 0;
	UBTTcpHandler_execrfAckQuestList_Parms parms;

	if ( !prfAckQuestList )
		prfAckQuestList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckQuestList" );

	parms.QuestID = QuestID;
	parms.CountPrograss = CountPrograss;
	parms.IsDailyQuest = IsDailyQuest;
	this->ProcessEvent ( prfAckQuestList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckQuestListStart ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestListStart = 0;
	UBTTcpHandler_execrfAckQuestListStart_Parms parms;

	if ( !prfAckQuestListStart )
		prfAckQuestListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckQuestListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_SetWaitRoomPublic ( int Result, struct FString ErrMsg, unsigned char Set )
{
	static UFunction* prfAckClanMatch_SetWaitRoomPublic = 0;
	UBTTcpHandler_execrfAckClanMatch_SetWaitRoomPublic_Parms parms;

	if ( !prfAckClanMatch_SetWaitRoomPublic )
		prfAckClanMatch_SetWaitRoomPublic = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_SetWaitRoomPublic" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Set = Set;
	this->ProcessEvent ( prfAckClanMatch_SetWaitRoomPublic, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_StopSearching (  )
{
	static UFunction* prfAckClanMatch_StopSearching = 0;
	UBTTcpHandler_execrfAckClanMatch_StopSearching_Parms parms;

	if ( !prfAckClanMatch_StopSearching )
		prfAckClanMatch_StopSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_StopSearching" );

	this->ProcessEvent ( prfAckClanMatch_StopSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqClanMatch_FoundMatch ( int ChannelID, int RoomNumber )
{
	static UFunction* prfReqClanMatch_FoundMatch = 0;
	UBTTcpHandler_execrfReqClanMatch_FoundMatch_Parms parms;

	if ( !prfReqClanMatch_FoundMatch )
		prfReqClanMatch_FoundMatch = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqClanMatch_FoundMatch" );

	parms.ChannelID = ChannelID;
	parms.RoomNumber = RoomNumber;
	this->ProcessEvent ( prfReqClanMatch_FoundMatch, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_FoundMatch (  )
{
	static UFunction* prfAckClanMatch_FoundMatch = 0;
	UBTTcpHandler_execrfAckClanMatch_FoundMatch_Parms parms;

	if ( !prfAckClanMatch_FoundMatch )
		prfAckClanMatch_FoundMatch = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_FoundMatch" );

	this->ProcessEvent ( prfAckClanMatch_FoundMatch, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_NotifyStartSearching ( int ShouldWaitMore )
{
	static UFunction* prfAckClanMatch_NotifyStartSearching = 0;
	UBTTcpHandler_execrfAckClanMatch_NotifyStartSearching_Parms parms;

	if ( !prfAckClanMatch_NotifyStartSearching )
		prfAckClanMatch_NotifyStartSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_NotifyStartSearching" );

	parms.ShouldWaitMore = ShouldWaitMore;
	this->ProcessEvent ( prfAckClanMatch_NotifyStartSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_StartSearching ( int Result, struct FString ErrMsg, int ShouldWaitMore )
{
	static UFunction* prfAckClanMatch_StartSearching = 0;
	UBTTcpHandler_execrfAckClanMatch_StartSearching_Parms parms;

	if ( !prfAckClanMatch_StartSearching )
		prfAckClanMatch_StartSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_StartSearching" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ShouldWaitMore = ShouldWaitMore;
	this->ProcessEvent ( prfAckClanMatch_StartSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_ChangeLeader ( int Result, struct FString ErrMsg, int NewLeader, struct FString NewLeaderName )
{
	static UFunction* prfAckClanMatch_ChangeLeader = 0;
	UBTTcpHandler_execrfAckClanMatch_ChangeLeader_Parms parms;

	if ( !prfAckClanMatch_ChangeLeader )
		prfAckClanMatch_ChangeLeader = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_ChangeLeader" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NewLeader = NewLeader;
	parms.NewLeaderName = NewLeaderName;
	this->ProcessEvent ( prfAckClanMatch_ChangeLeader, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_WaittingTeamList ( int TtotlCount, class TArray< int > Grade, class TArray< int > Map, class TArray< int > Versus )
{
	static UFunction* prfAckClanMatch_WaittingTeamList = 0;
	UBTTcpHandler_execrfAckClanMatch_WaittingTeamList_Parms parms;

	if ( !prfAckClanMatch_WaittingTeamList )
		prfAckClanMatch_WaittingTeamList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_WaittingTeamList" );

	parms.TtotlCount = TtotlCount;
	parms.Grade = Grade;
	parms.Map = Map;
	parms.Versus = Versus;
	this->ProcessEvent ( prfAckClanMatch_WaittingTeamList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_Chat ( int Result, struct FString ErrMsg, struct FString CharName, struct FString Msg )
{
	static UFunction* prfAckClanMatch_Chat = 0;
	UBTTcpHandler_execrfAckClanMatch_Chat_Parms parms;

	if ( !prfAckClanMatch_Chat )
		prfAckClanMatch_Chat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_Chat" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckClanMatch_Chat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_Leave ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Leave = 0;
	UBTTcpHandler_execrfAckClanMatch_Leave_Parms parms;

	if ( !prfAckClanMatch_Leave )
		prfAckClanMatch_Leave = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_Leave" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Leave, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_MemberList ( class TArray< unsigned char > IsLeader, class TArray< int > ClanMarkPA, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< struct FString > ClanName, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckClanMatch_MemberList = 0;
	UBTTcpHandler_execrfAckClanMatch_MemberList_Parms parms;

	if ( !prfAckClanMatch_MemberList )
		prfAckClanMatch_MemberList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_MemberList" );

	parms.IsLeader = IsLeader;
	parms.ClanMarkPA = ClanMarkPA;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanName = ClanName;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckClanMatch_MemberList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_LeaveNotify ( struct FString CharName )
{
	static UFunction* prfAckClanMatch_LeaveNotify = 0;
	UBTTcpHandler_execrfAckClanMatch_LeaveNotify_Parms parms;

	if ( !prfAckClanMatch_LeaveNotify )
		prfAckClanMatch_LeaveNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_LeaveNotify" );

	parms.CharName = CharName;
	this->ProcessEvent ( prfAckClanMatch_LeaveNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_JoinNotify ( unsigned char IsLeader, int ClanMarkPA, int ClanMarkBG, int ClanMarkBL, int Level, struct FString CharName, int ClanGrade, int ClanWin, int ClanLose, struct FString ClanName, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckClanMatch_JoinNotify = 0;
	UBTTcpHandler_execrfAckClanMatch_JoinNotify_Parms parms;

	if ( !prfAckClanMatch_JoinNotify )
		prfAckClanMatch_JoinNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_JoinNotify" );

	parms.IsLeader = IsLeader;
	parms.ClanMarkPA = ClanMarkPA;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanName = ClanName;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckClanMatch_JoinNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_Join ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Join = 0;
	UBTTcpHandler_execrfAckClanMatch_Join_Parms parms;

	if ( !prfAckClanMatch_Join )
		prfAckClanMatch_Join = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_Join" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Join, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_NotifiyStartCombat ( class TArray< int > MapNumArray, int VersusMode )
{
	static UFunction* prfAckClanMatch_NotifiyStartCombat = 0;
	UBTTcpHandler_execrfAckClanMatch_NotifiyStartCombat_Parms parms;

	if ( !prfAckClanMatch_NotifiyStartCombat )
		prfAckClanMatch_NotifiyStartCombat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_NotifiyStartCombat" );

	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	this->ProcessEvent ( prfAckClanMatch_NotifiyStartCombat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_StartCombat ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_StartCombat = 0;
	UBTTcpHandler_execrfAckClanMatch_StartCombat_Parms parms;

	if ( !prfAckClanMatch_StartCombat )
		prfAckClanMatch_StartCombat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_StartCombat" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_StartCombat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanMatch_GetReady ( int Result, struct FString ErrMsg, int RoomIndex )
{
	static UFunction* prfAckClanMatch_GetReady = 0;
	UBTTcpHandler_execrfAckClanMatch_GetReady_Parms parms;

	if ( !prfAckClanMatch_GetReady )
		prfAckClanMatch_GetReady = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanMatch_GetReady" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomIndex = RoomIndex;
	this->ProcessEvent ( prfAckClanMatch_GetReady, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckLimitedListInChannel ( int Result, class TArray< int > LimitedMapID, class TArray< int > LimitedModeID )
{
	static UFunction* prfAckLimitedListInChannel = 0;
	UBTTcpHandler_execrfAckLimitedListInChannel_Parms parms;

	if ( !prfAckLimitedListInChannel )
		prfAckLimitedListInChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckLimitedListInChannel" );

	parms.Result = Result;
	parms.LimitedMapID = LimitedMapID;
	parms.LimitedModeID = LimitedModeID;
	this->ProcessEvent ( prfAckLimitedListInChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRecvInviteGameRoomResult ( int Result )
{
	static UFunction* prfAckRecvInviteGameRoomResult = 0;
	UBTTcpHandler_execrfAckRecvInviteGameRoomResult_Parms parms;

	if ( !prfAckRecvInviteGameRoomResult )
		prfAckRecvInviteGameRoomResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRecvInviteGameRoomResult" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckRecvInviteGameRoomResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvInviteGameRoom ( struct FString InviteUserServerName, int InviteUserServerID, int InviteUserChannelNumber, struct FString RoomUniqueID, int RoomNumber, struct FString RoomName, unsigned char RoomState, struct FString MapName, struct FString OwnerName, unsigned char GameMode, unsigned char WeaponLimit, unsigned char IsTeamBalance, struct FString Password, struct FString InviteCharName )
{
	static UFunction* prfReqRecvInviteGameRoom = 0;
	UBTTcpHandler_execrfReqRecvInviteGameRoom_Parms parms;

	if ( !prfReqRecvInviteGameRoom )
		prfReqRecvInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvInviteGameRoom" );

	parms.InviteUserServerName = InviteUserServerName;
	parms.InviteUserServerID = InviteUserServerID;
	parms.InviteUserChannelNumber = InviteUserChannelNumber;
	parms.RoomUniqueID = RoomUniqueID;
	parms.RoomNumber = RoomNumber;
	parms.RoomName = RoomName;
	parms.RoomState = RoomState;
	parms.MapName = MapName;
	parms.OwnerName = OwnerName;
	parms.GameMode = GameMode;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Password = Password;
	parms.InviteCharName = InviteCharName;
	this->ProcessEvent ( prfReqRecvInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckInviteGameRoom ( int Result, unsigned char Answer, struct FString GuestCharName )
{
	static UFunction* prfAckInviteGameRoom = 0;
	UBTTcpHandler_execrfAckInviteGameRoom_Parms parms;

	if ( !prfAckInviteGameRoom )
		prfAckInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckInviteGameRoom" );

	parms.Result = Result;
	parms.Answer = Answer;
	parms.GuestCharName = GuestCharName;
	this->ProcessEvent ( prfAckInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAutoChangedTeamUserList ( class TArray< int > UserID, class TArray< int > TeamNum )
{
	static UFunction* prfAckAutoChangedTeamUserList = 0;
	UBTTcpHandler_execrfAckAutoChangedTeamUserList_Parms parms;

	if ( !prfAckAutoChangedTeamUserList )
		prfAckAutoChangedTeamUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAutoChangedTeamUserList" );

	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	this->ProcessEvent ( prfAckAutoChangedTeamUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetItemFromItemBox ( int Result, struct FString ErrMsg, int ItemIDChoose, int PartIDChoose, struct FBtrDouble BoxItemIdx, int BxoItemCount, unsigned char bHave, struct FBtrDouble ItemIdx, struct FBtrDouble UntilTime, int StackCount )
{
	static UFunction* prfAckGetItemFromItemBox = 0;
	UBTTcpHandler_execrfAckGetItemFromItemBox_Parms parms;

	if ( !prfAckGetItemFromItemBox )
		prfAckGetItemFromItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetItemFromItemBox" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	parms.BoxItemIdx = BoxItemIdx;
	parms.BxoItemCount = BxoItemCount;
	parms.bHave = bHave;
	parms.ItemIdx = ItemIdx;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckGetItemFromItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckItemListInItemBox ( int Result, struct FString ErrMsg, struct FBtrDouble ItemUniqueID, int BoxItemID, class TArray< int > ItemID, class TArray< int > PartID )
{
	static UFunction* prfAckItemListInItemBox = 0;
	UBTTcpHandler_execrfAckItemListInItemBox_Parms parms;

	if ( !prfAckItemListInItemBox )
		prfAckItemListInItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckItemListInItemBox" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemUniqueID = ItemUniqueID;
	parms.BoxItemID = BoxItemID;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( prfAckItemListInItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvForceFailedClientLoading ( int ErrCode )
{
	static UFunction* prfReqRecvForceFailedClientLoading = 0;
	UBTTcpHandler_execrfReqRecvForceFailedClientLoading_Parms parms;

	if ( !prfReqRecvForceFailedClientLoading )
		prfReqRecvForceFailedClientLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvForceFailedClientLoading" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( prfReqRecvForceFailedClientLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckStartHolePunching ( int Result, struct FString ErrMsg, int GameType, int ReqStartUserID )
{
	static UFunction* prfAckStartHolePunching = 0;
	UBTTcpHandler_execrfAckStartHolePunching_Parms parms;

	if ( !prfAckStartHolePunching )
		prfAckStartHolePunching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckStartHolePunching" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.GameType = GameType;
	parms.ReqStartUserID = ReqStartUserID;
	this->ProcessEvent ( prfAckStartHolePunching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::eventrfAckRegisterMyUdpInfo ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRegisterMyUdpInfo = 0;
	UBTTcpHandler_eventrfAckRegisterMyUdpInfo_Parms parms;

	if ( !prfAckRegisterMyUdpInfo )
		prfAckRegisterMyUdpInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRegisterMyUdpInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRegisterMyUdpInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyMyCharInfoToRoomUser ( int Result, struct FString ErrMsg, int UID, struct FString UserName, int Grade, int TeamNum, unsigned char Statue, unsigned char IsHost, struct FString UserIP, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, unsigned char IsLookFor )
{
	static UFunction* prfAckNotifyMyCharInfoToRoomUser = 0;
	UBTTcpHandler_execrfAckNotifyMyCharInfoToRoomUser_Parms parms;

	if ( !prfAckNotifyMyCharInfoToRoomUser )
		prfAckNotifyMyCharInfoToRoomUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyMyCharInfoToRoomUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UID = UID;
	parms.UserName = UserName;
	parms.Grade = Grade;
	parms.TeamNum = TeamNum;
	parms.Statue = Statue;
	parms.IsHost = IsHost;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.IsLookFor = IsLookFor;
	this->ProcessEvent ( prfAckNotifyMyCharInfoToRoomUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqNotifyDisconnectHostInLoading ( int Result, struct FString ErrMsg, int HostID )
{
	static UFunction* prfReqNotifyDisconnectHostInLoading = 0;
	UBTTcpHandler_execrfReqNotifyDisconnectHostInLoading_Parms parms;

	if ( !prfReqNotifyDisconnectHostInLoading )
		prfReqNotifyDisconnectHostInLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqNotifyDisconnectHostInLoading" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.HostID = HostID;
	this->ProcessEvent ( prfReqNotifyDisconnectHostInLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvForceDisconnected_FromGM ( int Result, struct FString ErrMsg )
{
	static UFunction* prfReqRecvForceDisconnected_FromGM = 0;
	UBTTcpHandler_execrfReqRecvForceDisconnected_FromGM_Parms parms;

	if ( !prfReqRecvForceDisconnected_FromGM )
		prfReqRecvForceDisconnected_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvForceDisconnected_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfReqRecvForceDisconnected_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvNotice_FromGM ( int Result, struct FString ErrMsg, class TArray< struct FString > NoticeMsg, unsigned char IsFromDB )
{
	static UFunction* prfReqRecvNotice_FromGM = 0;
	UBTTcpHandler_execrfReqRecvNotice_FromGM_Parms parms;

	if ( !prfReqRecvNotice_FromGM )
		prfReqRecvNotice_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvNotice_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeMsg = NoticeMsg;
	parms.IsFromDB = IsFromDB;
	this->ProcessEvent ( prfReqRecvNotice_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckJoinClan ( int Result, struct FString ErrMsg, struct FString SpecificCharName, struct FString RealRecvCharName, unsigned char RealRecvCharClanGrade )
{
	static UFunction* prfAckJoinClan = 0;
	UBTTcpHandler_execrfAckJoinClan_Parms parms;

	if ( !prfAckJoinClan )
		prfAckJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckJoinClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.SpecificCharName = SpecificCharName;
	parms.RealRecvCharName = RealRecvCharName;
	parms.RealRecvCharClanGrade = RealRecvCharClanGrade;
	this->ProcessEvent ( prfAckJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckExceedMaxUser (  )
{
	static UFunction* prfAckExceedMaxUser = 0;
	UBTTcpHandler_execrfAckExceedMaxUser_Parms parms;

	if ( !prfAckExceedMaxUser )
		prfAckExceedMaxUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckExceedMaxUser" );

	this->ProcessEvent ( prfAckExceedMaxUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChannelUserListInGameRoom ( int Result, int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > CharName, class TArray< int > UserLevel, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< unsigned char > IsLookForClan, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserListInGameRoom = 0;
	UBTTcpHandler_execrfAckChannelUserListInGameRoom_Parms parms;

	if ( !prfAckChannelUserListInGameRoom )
		prfAckChannelUserListInGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChannelUserListInGameRoom" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.CharName = CharName;
	parms.UserLevel = UserLevel;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.IsLookForClan = IsLookForClan;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserListInGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvDeleteFriend ( int Result, struct FString FromCharName )
{
	static UFunction* prfReqRecvDeleteFriend = 0;
	UBTTcpHandler_execrfReqRecvDeleteFriend_Parms parms;

	if ( !prfReqRecvDeleteFriend )
		prfReqRecvDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvDeleteFriend" );

	parms.Result = Result;
	parms.FromCharName = FromCharName;
	this->ProcessEvent ( prfReqRecvDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckDeleteFriend ( int Result, class TArray< struct FString > FailedCharname )
{
	static UFunction* prfAckDeleteFriend = 0;
	UBTTcpHandler_execrfAckDeleteFriend_Parms parms;

	if ( !prfAckDeleteFriend )
		prfAckDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckDeleteFriend" );

	parms.Result = Result;
	parms.FailedCharname = FailedCharname;
	this->ProcessEvent ( prfAckDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChatWispher ( int Result, struct FString ErrMsg, struct FString ToCharName )
{
	static UFunction* prfAckChatWispher = 0;
	UBTTcpHandler_execrfAckChatWispher_Parms parms;

	if ( !prfAckChatWispher )
		prfAckChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChatWispher" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ToCharName = ToCharName;
	this->ProcessEvent ( prfAckChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTTcpHandler_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqNotifyDurabilityZeroItem ( int Result, struct FString ErrMsg, int UserID, class TArray< struct FBtrDouble > ItemUniqueIDs, class TArray< int > ItemIDs, class TArray< int > ItemPartIDs, class TArray< unsigned char > ItemSlotPos )
{
	static UFunction* prfReqNotifyDurabilityZeroItem = 0;
	UBTTcpHandler_execrfReqNotifyDurabilityZeroItem_Parms parms;

	if ( !prfReqNotifyDurabilityZeroItem )
		prfReqNotifyDurabilityZeroItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqNotifyDurabilityZeroItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.ItemUniqueIDs = ItemUniqueIDs;
	parms.ItemIDs = ItemIDs;
	parms.ItemPartIDs = ItemPartIDs;
	parms.ItemSlotPos = ItemSlotPos;
	this->ProcessEvent ( prfReqNotifyDurabilityZeroItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAcquirePromotionItems ( int UID, int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > ItemUniqueID, class TArray< int > ItemIDs, class TArray< int > PartIDs )
{
	static UFunction* prfAckAcquirePromotionItems = 0;
	UBTTcpHandler_execrfAckAcquirePromotionItems_Parms parms;

	if ( !prfAckAcquirePromotionItems )
		prfAckAcquirePromotionItems = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAcquirePromotionItems" );

	parms.UID = UID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemUniqueID = ItemUniqueID;
	parms.ItemIDs = ItemIDs;
	parms.PartIDs = PartIDs;
	this->ProcessEvent ( prfAckAcquirePromotionItems, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqNotifyLevelUp ( int LevelUpUserID, int Level, int Exp, class TArray< int > ItemID, class TArray< int > PartID )
{
	static UFunction* prfReqNotifyLevelUp = 0;
	UBTTcpHandler_execrfReqNotifyLevelUp_Parms parms;

	if ( !prfReqNotifyLevelUp )
		prfReqNotifyLevelUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqNotifyLevelUp" );

	parms.LevelUpUserID = LevelUpUserID;
	parms.Level = Level;
	parms.Exp = Exp;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( prfReqNotifyLevelUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckBlockUserList ( class TArray< struct FString > CharName )
{
	static UFunction* prfAckBlockUserList = 0;
	UBTTcpHandler_execrfAckBlockUserList_Parms parms;

	if ( !prfAckBlockUserList )
		prfAckBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckBlockUserList" );

	parms.CharName = CharName;
	this->ProcessEvent ( prfAckBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRemoveBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRemoveBlockUserList = 0;
	UBTTcpHandler_execrfAckRemoveBlockUserList_Parms parms;

	if ( !prfAckRemoveBlockUserList )
		prfAckRemoveBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRemoveBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRemoveBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckBlockUserListEnd (  )
{
	static UFunction* prfAckBlockUserListEnd = 0;
	UBTTcpHandler_execrfAckBlockUserListEnd_Parms parms;

	if ( !prfAckBlockUserListEnd )
		prfAckBlockUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckBlockUserListEnd" );

	this->ProcessEvent ( prfAckBlockUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAddBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckAddBlockUserList = 0;
	UBTTcpHandler_execrfAckAddBlockUserList_Parms parms;

	if ( !prfAckAddBlockUserList )
		prfAckAddBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAddBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckAddBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckBlockUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckBlockUserListStart = 0;
	UBTTcpHandler_execrfAckBlockUserListStart_Parms parms;

	if ( !prfAckBlockUserListStart )
		prfAckBlockUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckBlockUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckBlockUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAdjustClanMemberGrade ( int Result, struct FString ErrMsg, struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckAdjustClanMemberGrade = 0;
	UBTTcpHandler_execrfAckAdjustClanMemberGrade_Parms parms;

	if ( !prfAckAdjustClanMemberGrade )
		prfAckAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAdjustClanMemberGrade" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqClanCharPersonelIntro ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfReqClanCharPersonelIntro = 0;
	UBTTcpHandler_execrfReqClanCharPersonelIntro_Parms parms;

	if ( !prfReqClanCharPersonelIntro )
		prfReqClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqClanCharPersonelIntro" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfReqClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRecvJoinClanResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvJoinClanResult = 0;
	UBTTcpHandler_execrfAckRecvJoinClanResult_Parms parms;

	if ( !prfAckRecvJoinClanResult )
		prfAckRecvJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRecvJoinClanResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckJoinClanResult ( struct FString ClanName, unsigned char Permit, struct FString PermitCharName )
{
	static UFunction* prfAckJoinClanResult = 0;
	UBTTcpHandler_execrfAckJoinClanResult_Parms parms;

	if ( !prfAckJoinClanResult )
		prfAckJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckJoinClanResult" );

	parms.ClanName = ClanName;
	parms.Permit = Permit;
	parms.PermitCharName = PermitCharName;
	this->ProcessEvent ( prfAckJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyClanSecession ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyClanSecession = 0;
	UBTTcpHandler_execrfAckNotifyClanSecession_Parms parms;

	if ( !prfAckNotifyClanSecession )
		prfAckNotifyClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyClanSecession" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyNewClanMember ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyNewClanMember = 0;
	UBTTcpHandler_execrfAckNotifyNewClanMember_Parms parms;

	if ( !prfAckNotifyNewClanMember )
		prfAckNotifyNewClanMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyNewClanMember" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyNewClanMember, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvJoinClan ( int UserIdx, struct FString CharName, struct FString Message )
{
	static UFunction* prfReqRecvJoinClan = 0;
	UBTTcpHandler_execrfReqRecvJoinClan_Parms parms;

	if ( !prfReqRecvJoinClan )
		prfReqRecvJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvJoinClan" );

	parms.UserIdx = UserIdx;
	parms.CharName = CharName;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRecvClanInviteResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvClanInviteResult = 0;
	UBTTcpHandler_execrfAckRecvClanInviteResult_Parms parms;

	if ( !prfAckRecvClanInviteResult )
		prfAckRecvClanInviteResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRecvClanInviteResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvClanInviteResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckInviteClanResult ( struct FString CharName, unsigned char Permit, struct FString ClanNm )
{
	static UFunction* prfAckInviteClanResult = 0;
	UBTTcpHandler_execrfAckInviteClanResult_Parms parms;

	if ( !prfAckInviteClanResult )
		prfAckInviteClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckInviteClanResult" );

	parms.CharName = CharName;
	parms.Permit = Permit;
	parms.ClanNm = ClanNm;
	this->ProcessEvent ( prfAckInviteClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckInviteClan ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckInviteClan = 0;
	UBTTcpHandler_execrfAckInviteClan_Parms parms;

	if ( !prfAckInviteClan )
		prfAckInviteClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckInviteClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckInviteClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTTcpHandler_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetIsHostBlocking ( int Result, unsigned char Blocking )
{
	static UFunction* prfAckGetIsHostBlocking = 0;
	UBTTcpHandler_execrfAckGetIsHostBlocking_Parms parms;

	if ( !prfAckGetIsHostBlocking )
		prfAckGetIsHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetIsHostBlocking" );

	parms.Result = Result;
	parms.Blocking = Blocking;
	this->ProcessEvent ( prfAckGetIsHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyHostBlocking ( int Result, unsigned char Blocking )
{
	static UFunction* prfAckNotifyHostBlocking = 0;
	UBTTcpHandler_execrfAckNotifyHostBlocking_Parms parms;

	if ( !prfAckNotifyHostBlocking )
		prfAckNotifyHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyHostBlocking" );

	parms.Result = Result;
	parms.Blocking = Blocking;
	this->ProcessEvent ( prfAckNotifyHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetHolePunchingResult ( int Result, unsigned char Phrase, int InterventionUserID, unsigned char Intervention, class TArray< int > FailedUserIDs )
{
	static UFunction* prfAckGetHolePunchingResult = 0;
	UBTTcpHandler_execrfAckGetHolePunchingResult_Parms parms;

	if ( !prfAckGetHolePunchingResult )
		prfAckGetHolePunchingResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetHolePunchingResult" );

	parms.Result = Result;
	parms.Phrase = Phrase;
	parms.InterventionUserID = InterventionUserID;
	parms.Intervention = Intervention;
	parms.FailedUserIDs = FailedUserIDs;
	this->ProcessEvent ( prfAckGetHolePunchingResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetUserHostPriorityPoint ( int Result, int UserID, int HostPriorityPoint )
{
	static UFunction* prfAckGetUserHostPriorityPoint = 0;
	UBTTcpHandler_execrfAckGetUserHostPriorityPoint_Parms parms;

	if ( !prfAckGetUserHostPriorityPoint )
		prfAckGetUserHostPriorityPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetUserHostPriorityPoint" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.HostPriorityPoint = HostPriorityPoint;
	this->ProcessEvent ( prfAckGetUserHostPriorityPoint, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqNotifyRelayServerAddr ( struct FString RelayIP, int RelayPort )
{
	static UFunction* prfReqNotifyRelayServerAddr = 0;
	UBTTcpHandler_execrfReqNotifyRelayServerAddr_Parms parms;

	if ( !prfReqNotifyRelayServerAddr )
		prfReqNotifyRelayServerAddr = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqNotifyRelayServerAddr" );

	parms.RelayIP = RelayIP;
	parms.RelayPort = RelayPort;
	this->ProcessEvent ( prfReqNotifyRelayServerAddr, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvForceDisconnectUDPFromHost ( int Result )
{
	static UFunction* prfReqRecvForceDisconnectUDPFromHost = 0;
	UBTTcpHandler_execrfReqRecvForceDisconnectUDPFromHost_Parms parms;

	if ( !prfReqRecvForceDisconnectUDPFromHost )
		prfReqRecvForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvForceDisconnectUDPFromHost" );

	parms.Result = Result;
	this->ProcessEvent ( prfReqRecvForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckForceDisconnectUDPFromHost ( int Result )
{
	static UFunction* prfAckForceDisconnectUDPFromHost = 0;
	UBTTcpHandler_execrfAckForceDisconnectUDPFromHost_Parms parms;

	if ( !prfAckForceDisconnectUDPFromHost )
		prfAckForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckForceDisconnectUDPFromHost" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqNotifyChangeRoomState ( unsigned char RoomState )
{
	static UFunction* prfReqNotifyChangeRoomState = 0;
	UBTTcpHandler_execrfReqNotifyChangeRoomState_Parms parms;

	if ( !prfReqNotifyChangeRoomState )
		prfReqNotifyChangeRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqNotifyChangeRoomState" );

	parms.RoomState = RoomState;
	this->ProcessEvent ( prfReqNotifyChangeRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTTcpHandler_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTTcpHandler_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTTcpHandler_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanPersonelIntro ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanPersonelIntro = 0;
	UBTTcpHandler_execrfAckClanPersonelIntro_Parms parms;

	if ( !prfAckClanPersonelIntro )
		prfAckClanPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanChangeInfo ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanChangeInfo = 0;
	UBTTcpHandler_execrfAckClanChangeInfo_Parms parms;

	if ( !prfAckClanChangeInfo )
		prfAckClanChangeInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanChangeInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanChangeInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanSecession ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanSecession = 0;
	UBTTcpHandler_execrfAckClanSecession_Parms parms;

	if ( !prfAckClanSecession )
		prfAckClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanSecession" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanClose ( int Result, struct FString ErrMsg, struct FString ClanName )
{
	static UFunction* prfAckClanClose = 0;
	UBTTcpHandler_execrfAckClanClose_Parms parms;

	if ( !prfAckClanClose )
		prfAckClanClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanClose" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	this->ProcessEvent ( prfAckClanClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanNews ( class TArray< struct FString > IssueDate, class TArray< unsigned char > IssueType, class TArray< struct FString > IssuedClanMember )
{
	static UFunction* prfAckClanNews = 0;
	UBTTcpHandler_execrfAckClanNews_Parms parms;

	if ( !prfAckClanNews )
		prfAckClanNews = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanNews" );

	parms.IssueDate = IssueDate;
	parms.IssueType = IssueType;
	parms.IssuedClanMember = IssuedClanMember;
	this->ProcessEvent ( prfAckClanNews, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanUserListEnd (  )
{
	static UFunction* prfAckClanUserListEnd = 0;
	UBTTcpHandler_execrfAckClanUserListEnd_Parms parms;

	if ( !prfAckClanUserListEnd )
		prfAckClanUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanUserListEnd" );

	this->ProcessEvent ( prfAckClanUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanUserList ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< int > ClanWinCnt, class TArray< int > ClanLoseCnt, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > DudeId )
{
	static UFunction* prfAckClanUserList = 0;
	UBTTcpHandler_execrfAckClanUserList_Parms parms;

	if ( !prfAckClanUserList )
		prfAckClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWinCnt = ClanWinCnt;
	parms.ClanLoseCnt = ClanLoseCnt;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.DudeId = DudeId;
	this->ProcessEvent ( prfAckClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanUserListStart = 0;
	UBTTcpHandler_execrfAckClanUserListStart_Parms parms;

	if ( !prfAckClanUserListStart )
		prfAckClanUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckClanInfo ( struct FClanInfo stClanInfo )
{
	static UFunction* prfAckClanInfo = 0;
	UBTTcpHandler_execrfAckClanInfo_Parms parms;

	if ( !prfAckClanInfo )
		prfAckClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckClanInfo" );

	parms.stClanInfo = stClanInfo;
	this->ProcessEvent ( prfAckClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckDupCheckClanName ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckDupCheckClanName = 0;
	UBTTcpHandler_execrfAckDupCheckClanName_Parms parms;

	if ( !prfAckDupCheckClanName )
		prfAckDupCheckClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckDupCheckClanName" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckDupCheckClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckCreateClan ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckCreateClan = 0;
	UBTTcpHandler_execrfAckCreateClan_Parms parms;

	if ( !prfAckCreateClan )
		prfAckCreateClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckCreateClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckCreateClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetServerTime ( struct FBtrDouble ServerTime, struct FString ClientIP )
{
	static UFunction* prfAckGetServerTime = 0;
	UBTTcpHandler_execrfAckGetServerTime_Parms parms;

	if ( !prfAckGetServerTime )
		prfAckGetServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetServerTime" );

	parms.ServerTime = ServerTime;
	parms.ClientIP = ClientIP;
	this->ProcessEvent ( prfAckGetServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckMyMoney ( int Result, struct FString ErrMsg, int Point, int Cash )
{
	static UFunction* prfAckMyMoney = 0;
	UBTTcpHandler_execrfAckMyMoney_Parms parms;

	if ( !prfAckMyMoney )
		prfAckMyMoney = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckMyMoney" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Point = Point;
	parms.Cash = Cash;
	this->ProcessEvent ( prfAckMyMoney, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckBanUser ( int GameNum, int UID, int BanUID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBanUser = 0;
	UBTTcpHandler_execrfAckBanUser_Parms parms;

	if ( !prfAckBanUser )
		prfAckBanUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckBanUser" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.BanUID = BanUID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBanUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyExpiredSkillIDs ( int UserID, class TArray< struct FBtrDouble > ExpiredSkillUniqueIDs, class TArray< int > ExpiredSkillIDs, int Result, struct FString ErrMsg, class TArray< unsigned char > ExpiredSkillSlotPositions )
{
	static UFunction* prfAckNotifyExpiredSkillIDs = 0;
	UBTTcpHandler_execrfAckNotifyExpiredSkillIDs_Parms parms;

	if ( !prfAckNotifyExpiredSkillIDs )
		prfAckNotifyExpiredSkillIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyExpiredSkillIDs" );

	parms.UserID = UserID;
	parms.ExpiredSkillUniqueIDs = ExpiredSkillUniqueIDs;
	parms.ExpiredSkillIDs = ExpiredSkillIDs;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ExpiredSkillSlotPositions = ExpiredSkillSlotPositions;
	this->ProcessEvent ( prfAckNotifyExpiredSkillIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyExpiredItemIDs ( int UserID, class TArray< struct FBtrDouble > ExpiredItemUniqueIDs, class TArray< int > ExpiredItemIDs, class TArray< int > ExpiredItemPartIDs, class TArray< unsigned char > ExpiredItemSlotPos, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckNotifyExpiredItemIDs = 0;
	UBTTcpHandler_execrfAckNotifyExpiredItemIDs_Parms parms;

	if ( !prfAckNotifyExpiredItemIDs )
		prfAckNotifyExpiredItemIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyExpiredItemIDs" );

	parms.UserID = UserID;
	parms.ExpiredItemUniqueIDs = ExpiredItemUniqueIDs;
	parms.ExpiredItemIDs = ExpiredItemIDs;
	parms.ExpiredItemPartIDs = ExpiredItemPartIDs;
	parms.ExpiredItemSlotPos = ExpiredItemSlotPos;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckNotifyExpiredItemIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetAttachedItemFromMemo ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int ItemID )
{
	static UFunction* prfAckGetAttachedItemFromMemo = 0;
	UBTTcpHandler_execrfAckGetAttachedItemFromMemo_Parms parms;

	if ( !prfAckGetAttachedItemFromMemo )
		prfAckGetAttachedItemFromMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetAttachedItemFromMemo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckGetAttachedItemFromMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::eventrfAckDeleteMailAll ( int Result, unsigned char MailType, int Count )
{
	static UFunction* prfAckDeleteMailAll = 0;
	UBTTcpHandler_eventrfAckDeleteMailAll_Parms parms;

	if ( !prfAckDeleteMailAll )
		prfAckDeleteMailAll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckDeleteMailAll" );

	parms.Result = Result;
	parms.MailType = MailType;
	parms.Count = Count;
	this->ProcessEvent ( prfAckDeleteMailAll, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::eventrfAckDelMemo ( int Result, struct FString ErrMsg, class TArray< int > FailedMemoID )
{
	static UFunction* prfAckDelMemo = 0;
	UBTTcpHandler_eventrfAckDelMemo_Parms parms;

	if ( !prfAckDelMemo )
		prfAckDelMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckDelMemo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.FailedMemoID = FailedMemoID;
	this->ProcessEvent ( prfAckDelMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckSendMemo ( class TArray< struct FString > CnamesToFail, class TArray< int > ResultArray )
{
	static UFunction* prfAckSendMemo = 0;
	UBTTcpHandler_execrfAckSendMemo_Parms parms;

	if ( !prfAckSendMemo )
		prfAckSendMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckSendMemo" );

	parms.CnamesToFail = CnamesToFail;
	parms.ResultArray = ResultArray;
	this->ProcessEvent ( prfAckSendMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAuctionBidding ( int Result, struct FString ErrMsg, int PointRemain )
{
	static UFunction* prfAckAuctionBidding = 0;
	UBTTcpHandler_execrfAckAuctionBidding_Parms parms;

	if ( !prfAckAuctionBidding )
		prfAckAuctionBidding = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAuctionBidding" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionBidding, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAuctionTradeHistory ( int Result, struct FString ErrMsg, int ItemID, int PartID, class TArray< struct FString > SellerCharNm, class TArray< int > DamageDegree, class TArray< int > Price )
{
	static UFunction* prfAckAuctionTradeHistory = 0;
	UBTTcpHandler_execrfAckAuctionTradeHistory_Parms parms;

	if ( !prfAckAuctionTradeHistory )
		prfAckAuctionTradeHistory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAuctionTradeHistory" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	parms.SellerCharNm = SellerCharNm;
	parms.DamageDegree = DamageDegree;
	parms.Price = Price;
	this->ProcessEvent ( prfAckAuctionTradeHistory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckSendGift ( int Result, struct FString ErrMsg, int PointRemain, int CashRemain )
{
	static UFunction* prfAckSendGift = 0;
	UBTTcpHandler_execrfAckSendGift_Parms parms;

	if ( !prfAckSendGift )
		prfAckSendGift = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckSendGift" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	this->ProcessEvent ( prfAckSendGift, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRecvMemo ( struct FString cnameFrom, unsigned char MemoType )
{
	static UFunction* prfAckRecvMemo = 0;
	UBTTcpHandler_execrfAckRecvMemo_Parms parms;

	if ( !prfAckRecvMemo )
		prfAckRecvMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRecvMemo" );

	parms.cnameFrom = cnameFrom;
	parms.MemoType = MemoType;
	this->ProcessEvent ( prfAckRecvMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckReadMemo ( struct FString cnameFrom, struct FString Text, struct FString dateRecv, struct FBtrDouble ItemUID )
{
	static UFunction* prfAckReadMemo = 0;
	UBTTcpHandler_execrfAckReadMemo_Parms parms;

	if ( !prfAckReadMemo )
		prfAckReadMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckReadMemo" );

	parms.cnameFrom = cnameFrom;
	parms.Text = Text;
	parms.dateRecv = dateRecv;
	parms.ItemUID = ItemUID;
	this->ProcessEvent ( prfAckReadMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckEndMemoList (  )
{
	static UFunction* prfAckEndMemoList = 0;
	UBTTcpHandler_execrfAckEndMemoList_Parms parms;

	if ( !prfAckEndMemoList )
		prfAckEndMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckEndMemoList" );

	this->ProcessEvent ( prfAckEndMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckTestDouble ( struct FBtrDouble vDouble, class TArray< struct FBtrDouble > vDoubles )
{
	static UFunction* prfAckTestDouble = 0;
	UBTTcpHandler_execrfAckTestDouble_Parms parms;

	if ( !prfAckTestDouble )
		prfAckTestDouble = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckTestDouble" );

	parms.vDouble = vDouble;
	parms.vDoubles = vDoubles;
	this->ProcessEvent ( prfAckTestDouble, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckMemoList ( class TArray< int > MemoIdx, class TArray< struct FString > cnameFrom, class TArray< struct FString > dateRecv, class TArray< struct FString > Text, class TArray< unsigned char > Status, class TArray< int > UntilExpire, class TArray< struct FBtrDouble > ItemUID, class TArray< int > ItemID, class TArray< unsigned char > MsgType, class TArray< int > ItemPartID )
{
	static UFunction* prfAckMemoList = 0;
	UBTTcpHandler_execrfAckMemoList_Parms parms;

	if ( !prfAckMemoList )
		prfAckMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckMemoList" );

	parms.MemoIdx = MemoIdx;
	parms.cnameFrom = cnameFrom;
	parms.dateRecv = dateRecv;
	parms.Text = Text;
	parms.Status = Status;
	parms.UntilExpire = UntilExpire;
	parms.ItemUID = ItemUID;
	parms.ItemID = ItemID;
	parms.MsgType = MsgType;
	parms.ItemPartID = ItemPartID;
	this->ProcessEvent ( prfAckMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckStartMemoList ( int Result, struct FString ErrMsg, unsigned char Type, int TotalCount )
{
	static UFunction* prfAckStartMemoList = 0;
	UBTTcpHandler_execrfAckStartMemoList_Parms parms;

	if ( !prfAckStartMemoList )
		prfAckStartMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckStartMemoList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Type = Type;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckStartMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckFriendListEnd (  )
{
	static UFunction* prfAckFriendListEnd = 0;
	UBTTcpHandler_execrfAckFriendListEnd_Parms parms;

	if ( !prfAckFriendListEnd )
		prfAckFriendListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckFriendListEnd" );

	this->ProcessEvent ( prfAckFriendListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckFriendList ( class TArray< struct FString > FriendName, class TArray< unsigned char > IsLogOn, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > LevelMarkID, class TArray< int > ClanLevel, class TArray< int > Level, class TArray< unsigned char > IsLookForClan )
{
	static UFunction* prfAckFriendList = 0;
	UBTTcpHandler_execrfAckFriendList_Parms parms;

	if ( !prfAckFriendList )
		prfAckFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckFriendList" );

	parms.FriendName = FriendName;
	parms.IsLogOn = IsLogOn;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.LevelMarkID = LevelMarkID;
	parms.ClanLevel = ClanLevel;
	parms.Level = Level;
	parms.IsLookForClan = IsLookForClan;
	this->ProcessEvent ( prfAckFriendList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckFriendListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckFriendListStart = 0;
	UBTTcpHandler_execrfAckFriendListStart_Parms parms;

	if ( !prfAckFriendListStart )
		prfAckFriendListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckFriendListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckFriendListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqCompleteFriendInvite ( struct FString CharnameToBeInvited, unsigned char IsPermit )
{
	static UFunction* prfReqCompleteFriendInvite = 0;
	UBTTcpHandler_execrfReqCompleteFriendInvite_Parms parms;

	if ( !prfReqCompleteFriendInvite )
		prfReqCompleteFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqCompleteFriendInvite" );

	parms.CharnameToBeInvited = CharnameToBeInvited;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( prfReqCompleteFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckConfirmFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmFriendInvite = 0;
	UBTTcpHandler_execrfAckConfirmFriendInvite_Parms parms;

	if ( !prfAckConfirmFriendInvite )
		prfAckConfirmFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckConfirmFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvFriendInvite ( int ReqUserID, struct FString ReqCharname, struct FString InviteMsg )
{
	static UFunction* prfReqRecvFriendInvite = 0;
	UBTTcpHandler_execrfReqRecvFriendInvite_Parms parms;

	if ( !prfReqRecvFriendInvite )
		prfReqRecvFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqCharname = ReqCharname;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckSendFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSendFriendInvite = 0;
	UBTTcpHandler_execrfAckSendFriendInvite_Parms parms;

	if ( !prfAckSendFriendInvite )
		prfAckSendFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckSendFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSendFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckNotifyLoadingState ( int Result, int UserID, unsigned char LoadingState )
{
	static UFunction* prfAckNotifyLoadingState = 0;
	UBTTcpHandler_execrfAckNotifyLoadingState_Parms parms;

	if ( !prfAckNotifyLoadingState )
		prfAckNotifyLoadingState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckNotifyLoadingState" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.LoadingState = LoadingState;
	this->ProcessEvent ( prfAckNotifyLoadingState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckFailedStartGame ( int Result, struct FString ErrMsg, unsigned char IsHost, int FailedUserID, int LoadingStep )
{
	static UFunction* prfAckFailedStartGame = 0;
	UBTTcpHandler_execrfAckFailedStartGame_Parms parms;

	if ( !prfAckFailedStartGame )
		prfAckFailedStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckFailedStartGame" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsHost = IsHost;
	parms.FailedUserID = FailedUserID;
	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( prfAckFailedStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckSuccessStartGame ( int Result, struct FString ErrMsg, unsigned char IsHost, struct FString HostIP, int HostPort, int LoadingStep )
{
	static UFunction* prfAckSuccessStartGame = 0;
	UBTTcpHandler_execrfAckSuccessStartGame_Parms parms;

	if ( !prfAckSuccessStartGame )
		prfAckSuccessStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckSuccessStartGame" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsHost = IsHost;
	parms.HostIP = HostIP;
	parms.HostPort = HostPort;
	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( prfAckSuccessStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckHash ( int Result, struct FString Error )
{
	static UFunction* prfAckHash = 0;
	UBTTcpHandler_execrfAckHash_Parms parms;

	if ( !prfAckHash )
		prfAckHash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckHash" );

	parms.Result = Result;
	parms.Error = Error;
	this->ProcessEvent ( prfAckHash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqForceLogoutByOwner (  )
{
	static UFunction* prfReqForceLogoutByOwner = 0;
	UBTTcpHandler_execrfReqForceLogoutByOwner_Parms parms;

	if ( !prfReqForceLogoutByOwner )
		prfReqForceLogoutByOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqForceLogoutByOwner" );

	this->ProcessEvent ( prfReqForceLogoutByOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::ForceLogout_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pForceLogout_OnOK = 0;
	UBTTcpHandler_execForceLogout_OnOK_Parms parms;

	if ( !pForceLogout_OnOK )
		pForceLogout_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.ForceLogout_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pForceLogout_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckSellShopItemInfo ( int Result, struct FString ErrMsg, struct FBtrDouble UniqueItemID, int SellPoint, int CurPoint, int AfterPoint )
{
	static UFunction* prfAckSellShopItemInfo = 0;
	UBTTcpHandler_execrfAckSellShopItemInfo_Parms parms;

	if ( !prfAckSellShopItemInfo )
		prfAckSellShopItemInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckSellShopItemInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.SellPoint = SellPoint;
	parms.CurPoint = CurPoint;
	parms.AfterPoint = AfterPoint;
	this->ProcessEvent ( prfAckSellShopItemInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRecvChatWispher ( struct FString CharnameFrom, struct FString Message )
{
	static UFunction* prfReqRecvChatWispher = 0;
	UBTTcpHandler_execrfReqRecvChatWispher_Parms parms;

	if ( !prfReqRecvChatWispher )
		prfReqRecvChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRecvChatWispher" );

	parms.CharnameFrom = CharnameFrom;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckServerTime ( int Time )
{
	static UFunction* prfAckServerTime = 0;
	UBTTcpHandler_execrfAckServerTime_Parms parms;

	if ( !prfAckServerTime )
		prfAckServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckServerTime" );

	parms.Time = Time;
	this->ProcessEvent ( prfAckServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGameOverEnd ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameOverEnd = 0;
	UBTTcpHandler_execrfAckGameOverEnd_Parms parms;

	if ( !prfAckGameOverEnd )
		prfAckGameOverEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGameOverEnd" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameOverEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRepairItem ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, int RepairCost, class TArray< int > DamageDegree )
{
	static UFunction* prfAckRepairItem = 0;
	UBTTcpHandler_execrfAckRepairItem_Parms parms;

	if ( !prfAckRepairItem )
		prfAckRepairItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRepairItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	parms.DamageDegree = DamageDegree;
	this->ProcessEvent ( prfAckRepairItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRepairCost ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > RepairCost )
{
	static UFunction* prfAckRepairCost = 0;
	UBTTcpHandler_execrfAckRepairCost_Parms parms;

	if ( !prfAckRepairCost )
		prfAckRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRepairCost" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( prfAckRepairCost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::eventrfAckUpdateWeaponDurability ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > Durability, class TArray< unsigned char > IsDestroy, class TArray< struct FBtrDouble > FailedWeaponUniqueID )
{
	static UFunction* prfAckUpdateWeaponDurability = 0;
	UBTTcpHandler_eventrfAckUpdateWeaponDurability_Parms parms;

	if ( !prfAckUpdateWeaponDurability )
		prfAckUpdateWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckUpdateWeaponDurability" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.Durability = Durability;
	parms.IsDestroy = IsDestroy;
	parms.FailedWeaponUniqueID = FailedWeaponUniqueID;
	this->ProcessEvent ( prfAckUpdateWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckEntryQSlotUniqueIDList ( int UserNum, class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWUniqueID, class TArray< struct FBtrDouble > PistolUniqueID, class TArray< struct FBtrDouble > TW1UniqueID, class TArray< struct FBtrDouble > TW2UniqueID )
{
	static UFunction* prfAckEntryQSlotUniqueIDList = 0;
	UBTTcpHandler_execrfAckEntryQSlotUniqueIDList_Parms parms;

	if ( !prfAckEntryQSlotUniqueIDList )
		prfAckEntryQSlotUniqueIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckEntryQSlotUniqueIDList" );

	parms.UserNum = UserNum;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWUniqueID = MWUniqueID;
	parms.PistolUniqueID = PistolUniqueID;
	parms.TW1UniqueID = TW1UniqueID;
	parms.TW2UniqueID = TW2UniqueID;
	this->ProcessEvent ( prfAckEntryQSlotUniqueIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckEntryQSlotIDList ( int UserNum, class TArray< unsigned char > QSlotDispOrder, class TArray< int > MWItemID, class TArray< int > MWPartID, class TArray< int > MWPaintID, class TArray< int > PistolItemID, class TArray< int > PistolPartID, class TArray< int > PistolPaintID, class TArray< int > TWItemID1, class TArray< int > TWItemID2, class TArray< int > Skill1ID, class TArray< int > Skill2ID, class TArray< int > Skill3ID, class TArray< int > Skill4ID )
{
	static UFunction* prfAckEntryQSlotIDList = 0;
	UBTTcpHandler_execrfAckEntryQSlotIDList_Parms parms;

	if ( !prfAckEntryQSlotIDList )
		prfAckEntryQSlotIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckEntryQSlotIDList" );

	parms.UserNum = UserNum;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWItemID = MWItemID;
	parms.MWPartID = MWPartID;
	parms.MWPaintID = MWPaintID;
	parms.PistolItemID = PistolItemID;
	parms.PistolPartID = PistolPartID;
	parms.PistolPaintID = PistolPaintID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1ID = Skill1ID;
	parms.Skill2ID = Skill2ID;
	parms.Skill3ID = Skill3ID;
	parms.Skill4ID = Skill4ID;
	this->ProcessEvent ( prfAckEntryQSlotIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckUpdateQSlot ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUpdateQSlot = 0;
	UBTTcpHandler_execrfAckUpdateQSlot_Parms parms;

	if ( !prfAckUpdateQSlot )
		prfAckUpdateQSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckUpdateQSlot" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUpdateQSlot, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckQSlotList ( int Result, struct FString ErrMsg, class TArray< int > QSlotID, class TArray< struct FString > QSlotName, class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWItemID, class TArray< struct FBtrDouble > PistolItemID, class TArray< struct FBtrDouble > TWItemID1, class TArray< struct FBtrDouble > TWItemID2, class TArray< int > Skill1, class TArray< int > Skill2, class TArray< int > Skill3, class TArray< int > Skill4 )
{
	static UFunction* prfAckQSlotList = 0;
	UBTTcpHandler_execrfAckQSlotList_Parms parms;

	if ( !prfAckQSlotList )
		prfAckQSlotList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckQSlotList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.QSlotID = QSlotID;
	parms.QSlotName = QSlotName;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWItemID = MWItemID;
	parms.PistolItemID = PistolItemID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1 = Skill1;
	parms.Skill2 = Skill2;
	parms.Skill3 = Skill3;
	parms.Skill4 = Skill4;
	this->ProcessEvent ( prfAckQSlotList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckModifyWeapon ( int Result, struct FString ErrMsg, struct FBtrDouble UniqueID, int AddPartID, int PaintID, int Point, int Cash )
{
	static UFunction* prfAckModifyWeapon = 0;
	UBTTcpHandler_execrfAckModifyWeapon_Parms parms;

	if ( !prfAckModifyWeapon )
		prfAckModifyWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckModifyWeapon" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueID = UniqueID;
	parms.AddPartID = AddPartID;
	parms.PaintID = PaintID;
	parms.Point = Point;
	parms.Cash = Cash;
	this->ProcessEvent ( prfAckModifyWeapon, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckSellShopItem ( int Result, struct FString ErrMsg, int PointRemain, int CashRemain, int Count )
{
	static UFunction* prfAckSellShopItem = 0;
	UBTTcpHandler_execrfAckSellShopItem_Parms parms;

	if ( !prfAckSellShopItem )
		prfAckSellShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckSellShopItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	parms.Count = Count;
	this->ProcessEvent ( prfAckSellShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckBuyShopItem ( int ItemCount, class TArray< int > Result, class TArray< int > BoughtItemTypeID, class TArray< struct FBtrDouble > BoughtItemUniqueID, class TArray< int > BoughtPartID, class TArray< struct FBtrDouble > BoughtUntilTIme, class TArray< int > BoughtStackCnt, int PointRemain, int CashRemain )
{
	static UFunction* prfAckBuyShopItem = 0;
	UBTTcpHandler_execrfAckBuyShopItem_Parms parms;

	if ( !prfAckBuyShopItem )
		prfAckBuyShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckBuyShopItem" );

	parms.ItemCount = ItemCount;
	parms.Result = Result;
	parms.BoughtItemTypeID = BoughtItemTypeID;
	parms.BoughtItemUniqueID = BoughtItemUniqueID;
	parms.BoughtPartID = BoughtPartID;
	parms.BoughtUntilTIme = BoughtUntilTIme;
	parms.BoughtStackCnt = BoughtStackCnt;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	this->ProcessEvent ( prfAckBuyShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckShopItemListEnd (  )
{
	static UFunction* prfAckShopItemListEnd = 0;
	UBTTcpHandler_execrfAckShopItemListEnd_Parms parms;

	if ( !prfAckShopItemListEnd )
		prfAckShopItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckShopItemListEnd" );

	this->ProcessEvent ( prfAckShopItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckShopItemList ( class TArray< int > ItemID )
{
	static UFunction* prfAckShopItemList = 0;
	UBTTcpHandler_execrfAckShopItemList_Parms parms;

	if ( !prfAckShopItemList )
		prfAckShopItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckShopItemList" );

	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckShopItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckShopItemListStart ( int Count )
{
	static UFunction* prfAckShopItemListStart = 0;
	UBTTcpHandler_execrfAckShopItemListStart_Parms parms;

	if ( !prfAckShopItemListStart )
		prfAckShopItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckShopItemListStart" );

	parms.Count = Count;
	this->ProcessEvent ( prfAckShopItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqConfirmSkillChanged (  )
{
	static UFunction* prfReqConfirmSkillChanged = 0;
	UBTTcpHandler_execrfReqConfirmSkillChanged_Parms parms;

	if ( !prfReqConfirmSkillChanged )
		prfReqConfirmSkillChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqConfirmSkillChanged" );

	this->ProcessEvent ( prfReqConfirmSkillChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckEquipSkill ( int ChangedNewSkillID, int ChangedNewSkillUniqueID, unsigned char ChangedNewSlotPosition, int ChangedOldSkillID, int ChangedOldSkillUniqueID, unsigned char ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipSkill = 0;
	UBTTcpHandler_execrfAckEquipSkill_Parms parms;

	if ( !prfAckEquipSkill )
		prfAckEquipSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckEquipSkill" );

	parms.ChangedNewSkillID = ChangedNewSkillID;
	parms.ChangedNewSkillUniqueID = ChangedNewSkillUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldSkillID = ChangedOldSkillID;
	parms.ChangedOldSkillUniqueID = ChangedOldSkillUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipSkill, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckEntrySkillList ( class TArray< int > UserIDs, class TArray< int > SkillIDs, class TArray< int > SlotPositions, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEntrySkillList = 0;
	UBTTcpHandler_execrfAckEntrySkillList_Parms parms;

	if ( !prfAckEntrySkillList )
		prfAckEntrySkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckEntrySkillList" );

	parms.UserIDs = UserIDs;
	parms.SkillIDs = SkillIDs;
	parms.SlotPositions = SlotPositions;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEntrySkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckUserSkillListEnd (  )
{
	static UFunction* prfAckUserSkillListEnd = 0;
	UBTTcpHandler_execrfAckUserSkillListEnd_Parms parms;

	if ( !prfAckUserSkillListEnd )
		prfAckUserSkillListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckUserSkillListEnd" );

	this->ProcessEvent ( prfAckUserSkillListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckUserSkillList ( class TArray< int > UniqueSkillID, class TArray< int > SkillID, class TArray< struct FBtrDouble > UntilTime, class TArray< unsigned char > SlotPosition )
{
	static UFunction* prfAckUserSkillList = 0;
	UBTTcpHandler_execrfAckUserSkillList_Parms parms;

	if ( !prfAckUserSkillList )
		prfAckUserSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckUserSkillList" );

	parms.UniqueSkillID = UniqueSkillID;
	parms.SkillID = SkillID;
	parms.UntilTime = UntilTime;
	parms.SlotPosition = SlotPosition;
	this->ProcessEvent ( prfAckUserSkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckUserSkillListStart ( int Count, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUserSkillListStart = 0;
	UBTTcpHandler_execrfAckUserSkillListStart_Parms parms;

	if ( !prfAckUserSkillListStart )
		prfAckUserSkillListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckUserSkillListStart" );

	parms.Count = Count;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUserSkillListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetBootyChoose ( int Result, struct FString ErrMsg, unsigned char GiveType, struct FBtrDouble ItemUniqueNumber, int ItemID, int PartID, unsigned char ItemType, struct FBtrDouble UntilTime, int StackCount, int PaintID )
{
	static UFunction* prfAckGetBootyChoose = 0;
	UBTTcpHandler_execrfAckGetBootyChoose_Parms parms;

	if ( !prfAckGetBootyChoose )
		prfAckGetBootyChoose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetBootyChoose" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.GiveType = GiveType;
	parms.ItemUniqueNumber = ItemUniqueNumber;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	parms.ItemType = ItemType;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	parms.PaintID = PaintID;
	this->ProcessEvent ( prfAckGetBootyChoose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGetBooty ( int Result, struct FString ErrMsg, class TArray< int > PrizeWinUserID, class TArray< int > BootyItemID, class TArray< int > BootyPartsID )
{
	static UFunction* prfAckGetBooty = 0;
	UBTTcpHandler_execrfAckGetBooty_Parms parms;

	if ( !prfAckGetBooty )
		prfAckGetBooty = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGetBooty" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PrizeWinUserID = PrizeWinUserID;
	parms.BootyItemID = BootyItemID;
	parms.BootyPartsID = BootyPartsID;
	this->ProcessEvent ( prfAckGetBooty, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckForceGameOver ( int UserID, int GameRoomNumber, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckForceGameOver = 0;
	UBTTcpHandler_execrfAckForceGameOver_Parms parms;

	if ( !prfAckForceGameOver )
		prfAckForceGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckForceGameOver" );

	parms.UserID = UserID;
	parms.GameRoomNumber = GameRoomNumber;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckForceGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckEntryItemList ( class TArray< int > UserIDs, class TArray< int > ItemIDs, class TArray< int > SlotPositions, class TArray< int > AddPartsID, class TArray< struct FBtrDouble > UniqueID, class TArray< int > PaintID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEntryItemList = 0;
	UBTTcpHandler_execrfAckEntryItemList_Parms parms;

	if ( !prfAckEntryItemList )
		prfAckEntryItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckEntryItemList" );

	parms.UserIDs = UserIDs;
	parms.ItemIDs = ItemIDs;
	parms.SlotPositions = SlotPositions;
	parms.AddPartsID = AddPartsID;
	parms.UniqueID = UniqueID;
	parms.PaintID = PaintID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEntryItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRegisterOtherUdpInfo ( int UID, struct FString IP, int Port, unsigned char NatType, unsigned char Intervention, struct FString HostInnerIP, int HostInnerPort )
{
	static UFunction* prfAckRegisterOtherUdpInfo = 0;
	UBTTcpHandler_execrfAckRegisterOtherUdpInfo_Parms parms;

	if ( !prfAckRegisterOtherUdpInfo )
		prfAckRegisterOtherUdpInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRegisterOtherUdpInfo" );

	parms.UID = UID;
	parms.IP = IP;
	parms.Port = Port;
	parms.NatType = NatType;
	parms.Intervention = Intervention;
	parms.HostInnerIP = HostInnerIP;
	parms.HostInnerPort = HostInnerPort;
	this->ProcessEvent ( prfAckRegisterOtherUdpInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqForceNatTypeSetting ( int NatType )
{
	static UFunction* prfReqForceNatTypeSetting = 0;
	UBTTcpHandler_execrfReqForceNatTypeSetting_Parms parms;

	if ( !prfReqForceNatTypeSetting )
		prfReqForceNatTypeSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqForceNatTypeSetting" );

	parms.NatType = NatType;
	this->ProcessEvent ( prfReqForceNatTypeSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqStartNatDiag ( struct FString Server1Addr, int Server1Port, struct FString Server2Addr, int Server2Port )
{
	static UFunction* prfReqStartNatDiag = 0;
	UBTTcpHandler_execrfReqStartNatDiag_Parms parms;

	if ( !prfReqStartNatDiag )
		prfReqStartNatDiag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqStartNatDiag" );

	parms.Server1Addr = Server1Addr;
	parms.Server1Port = Server1Port;
	parms.Server2Addr = Server2Addr;
	parms.Server2Port = Server2Port;
	this->ProcessEvent ( prfReqStartNatDiag, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChangeUserState ( int Result, struct FString ErrMsg, class TArray< int > UserIDs, class TArray< unsigned char > Positions, class TArray< int > Numbers, class TArray< unsigned char > OldStates, class TArray< unsigned char > NewStates )
{
	static UFunction* prfAckChangeUserState = 0;
	UBTTcpHandler_execrfAckChangeUserState_Parms parms;

	if ( !prfAckChangeUserState )
		prfAckChangeUserState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChangeUserState" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserIDs = UserIDs;
	parms.Positions = Positions;
	parms.Numbers = Numbers;
	parms.OldStates = OldStates;
	parms.NewStates = NewStates;
	this->ProcessEvent ( prfAckChangeUserState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqExteriorRoomState ( int RoomNumber, unsigned char RoomState )
{
	static UFunction* prfReqExteriorRoomState = 0;
	UBTTcpHandler_execrfReqExteriorRoomState_Parms parms;

	if ( !prfReqExteriorRoomState )
		prfReqExteriorRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqExteriorRoomState" );

	parms.RoomNumber = RoomNumber;
	parms.RoomState = RoomState;
	this->ProcessEvent ( prfReqExteriorRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqExteriorRoomUserCount ( int RoomNumber, int RoomUserCount )
{
	static UFunction* prfReqExteriorRoomUserCount = 0;
	UBTTcpHandler_execrfReqExteriorRoomUserCount_Parms parms;

	if ( !prfReqExteriorRoomUserCount )
		prfReqExteriorRoomUserCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqExteriorRoomUserCount" );

	parms.RoomNumber = RoomNumber;
	parms.RoomUserCount = RoomUserCount;
	this->ProcessEvent ( prfReqExteriorRoomUserCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqExteriorRoomInfo ( int SP, int RoomNumber, unsigned char IsPW, struct FString RoomName, struct FString MapName, struct FString ModeName, int MapNum, int ModeNum, unsigned char IsTeamBalance, int MaxUserCount, int RoomUserCount, unsigned char RoomState, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum )
{
	static UFunction* prfReqExteriorRoomInfo = 0;
	UBTTcpHandler_execrfReqExteriorRoomInfo_Parms parms;

	if ( !prfReqExteriorRoomInfo )
		prfReqExteriorRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqExteriorRoomInfo" );

	parms.SP = SP;
	parms.RoomNumber = RoomNumber;
	parms.IsPW = IsPW;
	parms.RoomName = RoomName;
	parms.MapName = MapName;
	parms.ModeName = ModeName;
	parms.MapNum = MapNum;
	parms.ModeNum = ModeNum;
	parms.IsTeamBalance = IsTeamBalance;
	parms.MaxUserCount = MaxUserCount;
	parms.RoomUserCount = RoomUserCount;
	parms.RoomState = RoomState;
	parms.BotDifficult = BotDifficult;
	parms.WeaponLimit = WeaponLimit;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfReqExteriorRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckCharInfo ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FCharInfo stCharInfo, unsigned char InClanRank, int ClanLevel )
{
	static UFunction* prfAckCharInfo = 0;
	UBTTcpHandler_execrfAckCharInfo_Parms parms;

	if ( !prfAckCharInfo )
		prfAckCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.stCharInfo = stCharInfo;
	parms.InClanRank = InClanRank;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckConfirmItemChanged ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmItemChanged = 0;
	UBTTcpHandler_execrfAckConfirmItemChanged_Parms parms;

	if ( !prfAckConfirmItemChanged )
		prfAckConfirmItemChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckConfirmItemChanged" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmItemChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckEquipItem ( int ChangedNewItemID, struct FBtrDouble ChangedNewUniqueID, int ChangedNewSlotPosition, int ChangedOldItemID, struct FBtrDouble ChangedOldUniqueID, int ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipItem = 0;
	UBTTcpHandler_execrfAckEquipItem_Parms parms;

	if ( !prfAckEquipItem )
		prfAckEquipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckEquipItem" );

	parms.ChangedNewItemID = ChangedNewItemID;
	parms.ChangedNewUniqueID = ChangedNewUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldItemID = ChangedOldItemID;
	parms.ChangedOldUniqueID = ChangedOldUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChangeRoomSetting ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckChangeRoomSetting = 0;
	UBTTcpHandler_execrfAckChangeRoomSetting_Parms parms;

	if ( !prfAckChangeRoomSetting )
		prfAckChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChangeRoomSetting" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckUpdateScore ( class TArray< int > UserIDs, class TArray< struct FString > NickNames, class TArray< unsigned char > TeamIDs, class TArray< int > Scores, class TArray< int > Kills, class TArray< int > Assists, class TArray< int > Deaths, class TArray< int > EXPs, class TArray< int > EXPBonuses, class TArray< int > Points, class TArray< int > PointBonuses, class TArray< int > TeamScores, class TArray< int > BonusOwnerID, class TArray< int > BonusID )
{
	static UFunction* prfAckUpdateScore = 0;
	UBTTcpHandler_execrfAckUpdateScore_Parms parms;

	if ( !prfAckUpdateScore )
		prfAckUpdateScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckUpdateScore" );

	parms.UserIDs = UserIDs;
	parms.NickNames = NickNames;
	parms.TeamIDs = TeamIDs;
	parms.Scores = Scores;
	parms.Kills = Kills;
	parms.Assists = Assists;
	parms.Deaths = Deaths;
	parms.EXPs = EXPs;
	parms.EXPBonuses = EXPBonuses;
	parms.Points = Points;
	parms.PointBonuses = PointBonuses;
	parms.TeamScores = TeamScores;
	parms.BonusOwnerID = BonusOwnerID;
	parms.BonusID = BonusID;
	this->ProcessEvent ( prfAckUpdateScore, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckConnectGame ( int UserID, int Result )
{
	static UFunction* prfAckConnectGame = 0;
	UBTTcpHandler_execrfAckConnectGame_Parms parms;

	if ( !prfAckConnectGame )
		prfAckConnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckConnectGame" );

	parms.UserID = UserID;
	parms.Result = Result;
	this->ProcessEvent ( prfAckConnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChangeNewGuest ( struct FString HostIP )
{
	static UFunction* prfAckChangeNewGuest = 0;
	UBTTcpHandler_execrfAckChangeNewGuest_Parms parms;

	if ( !prfAckChangeNewGuest )
		prfAckChangeNewGuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChangeNewGuest" );

	parms.HostIP = HostIP;
	this->ProcessEvent ( prfAckChangeNewGuest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChangeHost ( unsigned char ClientNum )
{
	static UFunction* prfAckChangeHost = 0;
	UBTTcpHandler_execrfAckChangeHost_Parms parms;

	if ( !prfAckChangeHost )
		prfAckChangeHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChangeHost" );

	parms.ClientNum = ClientNum;
	this->ProcessEvent ( prfAckChangeHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChangeRoomOwner ( int GameNum, int OldOwner, int NewOwner, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeRoomOwner = 0;
	UBTTcpHandler_execrfAckChangeRoomOwner_Parms parms;

	if ( !prfAckChangeRoomOwner )
		prfAckChangeRoomOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChangeRoomOwner" );

	parms.GameNum = GameNum;
	parms.OldOwner = OldOwner;
	parms.NewOwner = NewOwner;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeRoomOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckDisconnectGame ( int Result, int DisconnectUserID, struct FString DisconnectUserName )
{
	static UFunction* prfAckDisconnectGame = 0;
	UBTTcpHandler_execrfAckDisconnectGame_Parms parms;

	if ( !prfAckDisconnectGame )
		prfAckDisconnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckDisconnectGame" );

	parms.Result = Result;
	parms.DisconnectUserID = DisconnectUserID;
	parms.DisconnectUserName = DisconnectUserName;
	this->ProcessEvent ( prfAckDisconnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRelayServerOff (  )
{
	static UFunction* prfReqRelayServerOff = 0;
	UBTTcpHandler_execrfReqRelayServerOff_Parms parms;

	if ( !prfReqRelayServerOff )
		prfReqRelayServerOff = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRelayServerOff" );

	this->ProcessEvent ( prfReqRelayServerOff, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfReqRelayServerOn ( struct FString RelayServerIP, int RelayServerPortNum )
{
	static UFunction* prfReqRelayServerOn = 0;
	UBTTcpHandler_execrfReqRelayServerOn_Parms parms;

	if ( !prfReqRelayServerOn )
		prfReqRelayServerOn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfReqRelayServerOn" );

	parms.RelayServerIP = RelayServerIP;
	parms.RelayServerPortNum = RelayServerPortNum;
	this->ProcessEvent ( prfReqRelayServerOn, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGameRoomInfo ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckGameRoomInfo = 0;
	UBTTcpHandler_execrfAckGameRoomInfo_Parms parms;

	if ( !prfAckGameRoomInfo )
		prfAckGameRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGameRoomInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckGameRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGameOver ( int UID, int GameRoomNumber, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameOver = 0;
	UBTTcpHandler_execrfAckGameOver_Parms parms;

	if ( !prfAckGameOver )
		prfAckGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGameOver" );

	parms.UID = UID;
	parms.GameRoomNumber = GameRoomNumber;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChangeGameMode ( int GameNum, int UID, struct FString GameMode, unsigned char GameModeNum, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeGameMode = 0;
	UBTTcpHandler_execrfAckChangeGameMode_Parms parms;

	if ( !prfAckChangeGameMode )
		prfAckChangeGameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChangeGameMode" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.GameMode = GameMode;
	parms.GameModeNum = GameModeNum;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeGameMode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckSelectMap ( int GameNum, int UID, struct FString MapName, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSelectMap = 0;
	UBTTcpHandler_execrfAckSelectMap_Parms parms;

	if ( !prfAckSelectMap )
		prfAckSelectMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckSelectMap" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.MapName = MapName;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSelectMap, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckIsGameRoomPlaying ( int GameRoomNum, unsigned char IsPlaying )
{
	static UFunction* prfAckIsGameRoomPlaying = 0;
	UBTTcpHandler_execrfAckIsGameRoomPlaying_Parms parms;

	if ( !prfAckIsGameRoomPlaying )
		prfAckIsGameRoomPlaying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckIsGameRoomPlaying" );

	parms.GameRoomNum = GameRoomNum;
	parms.IsPlaying = IsPlaying;
	this->ProcessEvent ( prfAckIsGameRoomPlaying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGameRoomDestroy ( int GameRoomNum )
{
	static UFunction* prfAckGameRoomDestroy = 0;
	UBTTcpHandler_execrfAckGameRoomDestroy_Parms parms;

	if ( !prfAckGameRoomDestroy )
		prfAckGameRoomDestroy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGameRoomDestroy" );

	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckGameRoomDestroy, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckStartGame ( int GameNumber, int ClientsCount, int StartSeed, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckStartGame = 0;
	UBTTcpHandler_execrfAckStartGame_Parms parms;

	if ( !prfAckStartGame )
		prfAckStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckStartGame" );

	parms.GameNumber = GameNumber;
	parms.ClientsCount = ClientsCount;
	parms.StartSeed = StartSeed;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckGameHostInfo ( int GameNumber, struct FString UserID, struct FString IP, int Port, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameHostInfo = 0;
	UBTTcpHandler_execrfAckGameHostInfo_Parms parms;

	if ( !prfAckGameHostInfo )
		prfAckGameHostInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckGameHostInfo" );

	parms.GameNumber = GameNumber;
	parms.UserID = UserID;
	parms.IP = IP;
	parms.Port = Port;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameHostInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChangeTeam ( int GameNumber, struct FString UserID, int UID, int TeamNum, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeTeam = 0;
	UBTTcpHandler_execrfAckChangeTeam_Parms parms;

	if ( !prfAckChangeTeam )
		prfAckChangeTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChangeTeam" );

	parms.GameNumber = GameNumber;
	parms.UserID = UserID;
	parms.UID = UID;
	parms.TeamNum = TeamNum;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeTeam, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckCreateGameRoom ( int Result, struct FString ErrMsg, int UserID, struct FString RoomOwnerIP, struct FGameRoomInfo NetRoomInfo )
{
	static UFunction* prfAckCreateGameRoom = 0;
	UBTTcpHandler_execrfAckCreateGameRoom_Parms parms;

	if ( !prfAckCreateGameRoom )
		prfAckCreateGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckCreateGameRoom" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.RoomOwnerIP = RoomOwnerIP;
	parms.NetRoomInfo = NetRoomInfo;
	this->ProcessEvent ( prfAckCreateGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckLeaveRoom ( int Num, int UID, struct FString UserID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckLeaveRoom = 0;
	UBTTcpHandler_execrfAckLeaveRoom_Parms parms;

	if ( !prfAckLeaveRoom )
		prfAckLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckLeaveRoom" );

	parms.Num = Num;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRoomUserList ( class TArray< int > UID, class TArray< struct FString > UserName, class TArray< int > Grade, class TArray< int > TeamNum, class TArray< unsigned char > Statue, class TArray< unsigned char > IsHost, class TArray< struct FString > UserIP, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< unsigned char > IsLookingFor, class TArray< int > GMUID, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckRoomUserList = 0;
	UBTTcpHandler_execrfAckRoomUserList_Parms parms;

	if ( !prfAckRoomUserList )
		prfAckRoomUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRoomUserList" );

	parms.UID = UID;
	parms.UserName = UserName;
	parms.Grade = Grade;
	parms.TeamNum = TeamNum;
	parms.Statue = Statue;
	parms.IsHost = IsHost;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.IsLookingFor = IsLookingFor;
	parms.GMUID = GMUID;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckRoomUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckEnterRoom ( int GameNum, int OwnerID, int UID, struct FString UserID, int TeamNum, int Grade, struct FString UserIP, struct FString ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterRoom = 0;
	UBTTcpHandler_execrfAckEnterRoom_Parms parms;

	if ( !prfAckEnterRoom )
		prfAckEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckEnterRoom" );

	parms.GameNum = GameNum;
	parms.OwnerID = OwnerID;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.Grade = Grade;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.Clan_Mark_Pattern = Clan_Mark_Pattern;
	parms.Clan_Mark_BG = Clan_Mark_BG;
	parms.Clan_Mark_BL = Clan_Mark_BL;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChatClan ( struct FString CharName, struct FString Message, int Result )
{
	static UFunction* prfAckChatClan = 0;
	UBTTcpHandler_execrfAckChatClan_Parms parms;

	if ( !prfAckChatClan )
		prfAckChatClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChatClan" );

	parms.CharName = CharName;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChatNormal ( int id, struct FString Sender, struct FString Message, int Result )
{
	static UFunction* prfAckChatNormal = 0;
	UBTTcpHandler_execrfAckChatNormal_Parms parms;

	if ( !prfAckChatNormal )
		prfAckChatNormal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChatNormal" );

	parms.id = id;
	parms.Sender = Sender;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatNormal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRoomListEnd (  )
{
	static UFunction* prfAckRoomListEnd = 0;
	UBTTcpHandler_execrfAckRoomListEnd_Parms parms;

	if ( !prfAckRoomListEnd )
		prfAckRoomListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRoomListEnd" );

	this->ProcessEvent ( prfAckRoomListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRoomList ( class TArray< int > GameNum, class TArray< struct FString > Title, class TArray< struct FString > MapName, class TArray< int > MapNum, class TArray< unsigned char > UserCount, class TArray< unsigned char > MaxCount, class TArray< struct FString > ModeName, class TArray< int > ModeNum, class TArray< unsigned char > WeaponLimit, class TArray< unsigned char > IsTeamBalance, class TArray< unsigned char > Status, class TArray< struct FString > RoomOwnerIP, class TArray< int > GameMinute, class TArray< struct FString > RoomOwnerName, class TArray< unsigned char > IsSpecial, class TArray< unsigned char > IsPassword, class TArray< unsigned char > BotDifficult, class TArray< unsigned char > BotModeUserTeamNum )
{
	static UFunction* prfAckRoomList = 0;
	UBTTcpHandler_execrfAckRoomList_Parms parms;

	if ( !prfAckRoomList )
		prfAckRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRoomList" );

	parms.GameNum = GameNum;
	parms.Title = Title;
	parms.MapName = MapName;
	parms.MapNum = MapNum;
	parms.UserCount = UserCount;
	parms.MaxCount = MaxCount;
	parms.ModeName = ModeName;
	parms.ModeNum = ModeNum;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Status = Status;
	parms.RoomOwnerIP = RoomOwnerIP;
	parms.GameMinute = GameMinute;
	parms.RoomOwnerName = RoomOwnerName;
	parms.IsSpecial = IsSpecial;
	parms.IsPassword = IsPassword;
	parms.BotDifficult = BotDifficult;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfAckRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckRoomListStart ( int Result, int TotalCount, int Count, int StartIndex )
{
	static UFunction* prfAckRoomListStart = 0;
	UBTTcpHandler_execrfAckRoomListStart_Parms parms;

	if ( !prfAckRoomListStart )
		prfAckRoomListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckRoomListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	this->ProcessEvent ( prfAckRoomListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChannelUserList ( int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > UserID, class TArray< int > UserLevels, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, int Result, struct FString ErrMsg, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserList = 0;
	UBTTcpHandler_execrfAckChannelUserList_Parms parms;

	if ( !prfAckChannelUserList )
		prfAckChannelUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChannelUserList" );

	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.UserLevels = UserLevels;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckLogin2 ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FBtrDouble CurServerTime, int CharDBID, unsigned char IsGM )
{
	static UFunction* prfAckLogin2 = 0;
	UBTTcpHandler_execrfAckLogin2_Parms parms;

	if ( !prfAckLogin2 )
		prfAckLogin2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckLogin2" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.CurServerTime = CurServerTime;
	parms.CharDBID = CharDBID;
	parms.IsGM = IsGM;
	this->ProcessEvent ( prfAckLogin2, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckLeaveChannel ( int Result, struct FString UserID, int UID )
{
	static UFunction* prfAckLeaveChannel = 0;
	UBTTcpHandler_execrfAckLeaveChannel_Parms parms;

	if ( !prfAckLeaveChannel )
		prfAckLeaveChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckLeaveChannel" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.UID = UID;
	this->ProcessEvent ( prfAckLeaveChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTTcpHandler_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckChannelList ( class TArray< int > id, class TArray< struct FString > Title, class TArray< int > CurUser, class TArray< int > MaxUser )
{
	static UFunction* prfAckChannelList = 0;
	UBTTcpHandler_execrfAckChannelList_Parms parms;

	if ( !prfAckChannelList )
		prfAckChannelList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckChannelList" );

	parms.id = id;
	parms.Title = Title;
	parms.CurUser = CurUser;
	parms.MaxUser = MaxUser;
	this->ProcessEvent ( prfAckChannelList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAuctionInstantlyBuying ( int Result, struct FString ErrMsg, int PointRemain )
{
	static UFunction* prfAckAuctionInstantlyBuying = 0;
	UBTTcpHandler_execrfAckAuctionInstantlyBuying_Parms parms;

	if ( !prfAckAuctionInstantlyBuying )
		prfAckAuctionInstantlyBuying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAuctionInstantlyBuying" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionInstantlyBuying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAuctionMyItemCancel ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckAuctionMyItemCancel = 0;
	UBTTcpHandler_execrfAckAuctionMyItemCancel_Parms parms;

	if ( !prfAckAuctionMyItemCancel )
		prfAckAuctionMyItemCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAuctionMyItemCancel" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckAuctionMyItemCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAuctionItemListEnd ( unsigned char Section )
{
	static UFunction* prfAckAuctionItemListEnd = 0;
	UBTTcpHandler_execrfAckAuctionItemListEnd_Parms parms;

	if ( !prfAckAuctionItemListEnd )
		prfAckAuctionItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAuctionItemListEnd" );

	parms.Section = Section;
	this->ProcessEvent ( prfAckAuctionItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAuctionItemList ( unsigned char Section, class TArray< int > UniqueIDs, class TArray< int > ItemIDs, class TArray< int > AddPartsIDs, class TArray< struct FBtrDouble > UntilTimes, class TArray< int > BiddingPrices, class TArray< int > InstantlyByuingPrices, class TArray< int > ItemDamageds, class TArray< struct FString > HighestBidderNames, class TArray< struct FString > SellerNames, class TArray< int > ItemCount )
{
	static UFunction* prfAckAuctionItemList = 0;
	UBTTcpHandler_execrfAckAuctionItemList_Parms parms;

	if ( !prfAckAuctionItemList )
		prfAckAuctionItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAuctionItemList" );

	parms.Section = Section;
	parms.UniqueIDs = UniqueIDs;
	parms.ItemIDs = ItemIDs;
	parms.AddPartsIDs = AddPartsIDs;
	parms.UntilTimes = UntilTimes;
	parms.BiddingPrices = BiddingPrices;
	parms.InstantlyByuingPrices = InstantlyByuingPrices;
	parms.ItemDamageds = ItemDamageds;
	parms.HighestBidderNames = HighestBidderNames;
	parms.SellerNames = SellerNames;
	parms.ItemCount = ItemCount;
	this->ProcessEvent ( prfAckAuctionItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAuctionItemListStart ( int Result, struct FString ErrMsg, unsigned char Section, int PageNum, int Count )
{
	static UFunction* prfAckAuctionItemListStart = 0;
	UBTTcpHandler_execrfAckAuctionItemListStart_Parms parms;

	if ( !prfAckAuctionItemListStart )
		prfAckAuctionItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAuctionItemListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Section = Section;
	parms.PageNum = PageNum;
	parms.Count = Count;
	this->ProcessEvent ( prfAckAuctionItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAuctionItemListCount ( int Result, struct FString ErrMsg, unsigned char Section, unsigned char Classfy, int ItemType, int ItemGrade, int Count )
{
	static UFunction* prfAckAuctionItemListCount = 0;
	UBTTcpHandler_execrfAckAuctionItemListCount_Parms parms;

	if ( !prfAckAuctionItemListCount )
		prfAckAuctionItemListCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAuctionItemListCount" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Section = Section;
	parms.Classfy = Classfy;
	parms.ItemType = ItemType;
	parms.ItemGrade = ItemGrade;
	parms.Count = Count;
	this->ProcessEvent ( prfAckAuctionItemListCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckAuctionMyItemRegister ( int Result, struct FString ErrMsg, int BeginPrice, int BuyPrice, int GuarantyPoint, int PointRemain )
{
	static UFunction* prfAckAuctionMyItemRegister = 0;
	UBTTcpHandler_execrfAckAuctionMyItemRegister_Parms parms;

	if ( !prfAckAuctionMyItemRegister )
		prfAckAuctionMyItemRegister = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckAuctionMyItemRegister" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.BeginPrice = BeginPrice;
	parms.BuyPrice = BuyPrice;
	parms.GuarantyPoint = GuarantyPoint;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionMyItemRegister, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckItemListEnd (  )
{
	static UFunction* prfAckItemListEnd = 0;
	UBTTcpHandler_execrfAckItemListEnd_Parms parms;

	if ( !prfAckItemListEnd )
		prfAckItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckItemListEnd" );

	this->ProcessEvent ( prfAckItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckItemList ( class TArray< struct FBtrDouble > UniqueID, class TArray< int > ItemID, class TArray< int > ItemType, class TArray< int > Durability, class TArray< struct FBtrDouble > UntilTime, class TArray< int > SlotPosition, class TArray< int > AddPartsID, class TArray< int > DamageDegree, class TArray< unsigned char > ItemState, class TArray< int > StackCount, class TArray< int > PaintID, class TArray< int > TradeCount )
{
	static UFunction* prfAckItemList = 0;
	UBTTcpHandler_execrfAckItemList_Parms parms;

	if ( !prfAckItemList )
		prfAckItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckItemList" );

	parms.UniqueID = UniqueID;
	parms.ItemID = ItemID;
	parms.ItemType = ItemType;
	parms.Durability = Durability;
	parms.UntilTime = UntilTime;
	parms.SlotPosition = SlotPosition;
	parms.AddPartsID = AddPartsID;
	parms.DamageDegree = DamageDegree;
	parms.ItemState = ItemState;
	parms.StackCount = StackCount;
	parms.PaintID = PaintID;
	parms.TradeCount = TradeCount;
	this->ProcessEvent ( prfAckItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckItemListStart ( int Count, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckItemListStart = 0;
	UBTTcpHandler_execrfAckItemListStart_Parms parms;

	if ( !prfAckItemListStart )
		prfAckItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckItemListStart" );

	parms.Count = Count;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckLogin ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FString ClanName, struct FCharInfo btCharInfo )
{
	static UFunction* prfAckLogin = 0;
	UBTTcpHandler_execrfAckLogin_Parms parms;

	if ( !prfAckLogin )
		prfAckLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckLogin" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.btCharInfo = btCharInfo;
	this->ProcessEvent ( prfAckLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfAckClanMatch_RecvInviteCrew ( int Result, struct FString Inviter )
{
	static UFunction* psfAckClanMatch_RecvInviteCrew = 0;
	UBTTcpHandler_execsfAckClanMatch_RecvInviteCrew_Parms parms;

	if ( !psfAckClanMatch_RecvInviteCrew )
		psfAckClanMatch_RecvInviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfAckClanMatch_RecvInviteCrew" );

	parms.Result = Result;
	parms.Inviter = Inviter;
	this->ProcessEvent ( psfAckClanMatch_RecvInviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfAckRecvInviteGameRoom ( struct FString RoomUniqueID, int RoomNumber, unsigned char Answer, struct FString InviteCharName )
{
	static UFunction* psfAckRecvInviteGameRoom = 0;
	UBTTcpHandler_execsfAckRecvInviteGameRoom_Parms parms;

	if ( !psfAckRecvInviteGameRoom )
		psfAckRecvInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfAckRecvInviteGameRoom" );

	parms.RoomUniqueID = RoomUniqueID;
	parms.RoomNumber = RoomNumber;
	parms.Answer = Answer;
	parms.InviteCharName = InviteCharName;
	this->ProcessEvent ( psfAckRecvInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfAckRecvJoinClan ( int UserIdx, struct FString CharName, struct FString ReqMsg, unsigned char Permit )
{
	static UFunction* psfAckRecvJoinClan = 0;
	UBTTcpHandler_execsfAckRecvJoinClan_Parms parms;

	if ( !psfAckRecvJoinClan )
		psfAckRecvJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfAckRecvJoinClan" );

	parms.UserIdx = UserIdx;
	parms.CharName = CharName;
	parms.ReqMsg = ReqMsg;
	parms.Permit = Permit;
	this->ProcessEvent ( psfAckRecvJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfAckRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString InviterMsg, struct FString ClanName, unsigned char Permit )
{
	static UFunction* psfAckRecvClanInvite = 0;
	UBTTcpHandler_execsfAckRecvClanInvite_Parms parms;

	if ( !psfAckRecvClanInvite )
		psfAckRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfAckRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.InviterMsg = InviterMsg;
	parms.ClanName = ClanName;
	parms.Permit = Permit;
	this->ProcessEvent ( psfAckRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfAckStartNatDiag ( int NatType )
{
	static UFunction* psfAckStartNatDiag = 0;
	UBTTcpHandler_execsfAckStartNatDiag_Parms parms;

	if ( !psfAckStartNatDiag )
		psfAckStartNatDiag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfAckStartNatDiag" );

	parms.NatType = NatType;
	this->ProcessEvent ( psfAckStartNatDiag, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqMyEquipedQSlotList (  )
{
	static UFunction* psfReqMyEquipedQSlotList = 0;
	UBTTcpHandler_execsfReqMyEquipedQSlotList_Parms parms;

	if ( !psfReqMyEquipedQSlotList )
		psfReqMyEquipedQSlotList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqMyEquipedQSlotList" );

	this->ProcessEvent ( psfReqMyEquipedQSlotList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqMyEquipedSkillList (  )
{
	static UFunction* psfReqMyEquipedSkillList = 0;
	UBTTcpHandler_execsfReqMyEquipedSkillList_Parms parms;

	if ( !psfReqMyEquipedSkillList )
		psfReqMyEquipedSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqMyEquipedSkillList" );

	this->ProcessEvent ( psfReqMyEquipedSkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqMyEquipedItemList (  )
{
	static UFunction* psfReqMyEquipedItemList = 0;
	UBTTcpHandler_execsfReqMyEquipedItemList_Parms parms;

	if ( !psfReqMyEquipedItemList )
		psfReqMyEquipedItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqMyEquipedItemList" );

	this->ProcessEvent ( psfReqMyEquipedItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGetMyMailBoxState (  )
{
	static UFunction* psfReqGetMyMailBoxState = 0;
	UBTTcpHandler_execsfReqGetMyMailBoxState_Parms parms;

	if ( !psfReqGetMyMailBoxState )
		psfReqGetMyMailBoxState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGetMyMailBoxState" );

	this->ProcessEvent ( psfReqGetMyMailBoxState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSetLookForClan ( unsigned char IsLookingFor )
{
	static UFunction* psfReqSetLookForClan = 0;
	UBTTcpHandler_execsfReqSetLookForClan_Parms parms;

	if ( !psfReqSetLookForClan )
		psfReqSetLookForClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSetLookForClan" );

	parms.IsLookingFor = IsLookingFor;
	this->ProcessEvent ( psfReqSetLookForClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqExteriorRoomOwnerInfo ( int RoomNum, struct FString OwnerName, struct FString OwnerIP )
{
	static UFunction* psfReqExteriorRoomOwnerInfo = 0;
	UBTTcpHandler_execsfReqExteriorRoomOwnerInfo_Parms parms;

	if ( !psfReqExteriorRoomOwnerInfo )
		psfReqExteriorRoomOwnerInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqExteriorRoomOwnerInfo" );

	parms.RoomNum = RoomNum;
	parms.OwnerName = OwnerName;
	parms.OwnerIP = OwnerIP;
	this->ProcessEvent ( psfReqExteriorRoomOwnerInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_SetWaitRoomPublic ( unsigned char Set )
{
	static UFunction* psfReqClanMatch_SetWaitRoomPublic = 0;
	UBTTcpHandler_execsfReqClanMatch_SetWaitRoomPublic_Parms parms;

	if ( !psfReqClanMatch_SetWaitRoomPublic )
		psfReqClanMatch_SetWaitRoomPublic = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_SetWaitRoomPublic" );

	parms.Set = Set;
	this->ProcessEvent ( psfReqClanMatch_SetWaitRoomPublic, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRemoveCheckTeamBalanceList (  )
{
	static UFunction* psfReqRemoveCheckTeamBalanceList = 0;
	UBTTcpHandler_execsfReqRemoveCheckTeamBalanceList_Parms parms;

	if ( !psfReqRemoveCheckTeamBalanceList )
		psfReqRemoveCheckTeamBalanceList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRemoveCheckTeamBalanceList" );

	this->ProcessEvent ( psfReqRemoveCheckTeamBalanceList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqPaidItem_ChangeClanMark ( struct FBtrDouble ItemIdx, unsigned char IsPaid, int Pattern, int BG, int BL )
{
	static UFunction* psfReqPaidItem_ChangeClanMark = 0;
	UBTTcpHandler_execsfReqPaidItem_ChangeClanMark_Parms parms;

	if ( !psfReqPaidItem_ChangeClanMark )
		psfReqPaidItem_ChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqPaidItem_ChangeClanMark" );

	parms.ItemIdx = ItemIdx;
	parms.IsPaid = IsPaid;
	parms.Pattern = Pattern;
	parms.BG = BG;
	parms.BL = BL;
	this->ProcessEvent ( psfReqPaidItem_ChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqPaidItem_ClanMarkDupCheck ( unsigned char IsPaid, int Pattern, int BG, int BL )
{
	static UFunction* psfReqPaidItem_ClanMarkDupCheck = 0;
	UBTTcpHandler_execsfReqPaidItem_ClanMarkDupCheck_Parms parms;

	if ( !psfReqPaidItem_ClanMarkDupCheck )
		psfReqPaidItem_ClanMarkDupCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqPaidItem_ClanMarkDupCheck" );

	parms.IsPaid = IsPaid;
	parms.Pattern = Pattern;
	parms.BG = BG;
	parms.BL = BL;
	this->ProcessEvent ( psfReqPaidItem_ClanMarkDupCheck, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqPaidItem_BroadCast ( struct FBtrDouble ItemIdx, int Command, struct FString Message )
{
	static UFunction* psfReqPaidItem_BroadCast = 0;
	UBTTcpHandler_execsfReqPaidItem_BroadCast_Parms parms;

	if ( !psfReqPaidItem_BroadCast )
		psfReqPaidItem_BroadCast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqPaidItem_BroadCast" );

	parms.ItemIdx = ItemIdx;
	parms.Command = Command;
	parms.Message = Message;
	this->ProcessEvent ( psfReqPaidItem_BroadCast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqPaidItem_EraseRecord ( struct FBtrDouble ItemIdx, int Command )
{
	static UFunction* psfReqPaidItem_EraseRecord = 0;
	UBTTcpHandler_execsfReqPaidItem_EraseRecord_Parms parms;

	if ( !psfReqPaidItem_EraseRecord )
		psfReqPaidItem_EraseRecord = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqPaidItem_EraseRecord" );

	parms.ItemIdx = ItemIdx;
	parms.Command = Command;
	this->ProcessEvent ( psfReqPaidItem_EraseRecord, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSendSystemMsg ( unsigned char RecvType, struct FString SendCharName, struct FString RecvCharname, struct FSystemMsgParam MsgInfo )
{
	static UFunction* psfReqSendSystemMsg = 0;
	UBTTcpHandler_execsfReqSendSystemMsg_Parms parms;

	if ( !psfReqSendSystemMsg )
		psfReqSendSystemMsg = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSendSystemMsg" );

	parms.RecvType = RecvType;
	parms.SendCharName = SendCharName;
	parms.RecvCharname = RecvCharname;
	parms.MsgInfo = MsgInfo;
	this->ProcessEvent ( psfReqSendSystemMsg, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRandomBox_Use ( struct FBtrDouble ItemIdx )
{
	static UFunction* psfReqRandomBox_Use = 0;
	UBTTcpHandler_execsfReqRandomBox_Use_Parms parms;

	if ( !psfReqRandomBox_Use )
		psfReqRandomBox_Use = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRandomBox_Use" );

	parms.ItemIdx = ItemIdx;
	this->ProcessEvent ( psfReqRandomBox_Use, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChangeRoomTitle_GM ( int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* psfReqChangeRoomTitle_GM = 0;
	UBTTcpHandler_execsfReqChangeRoomTitle_GM_Parms parms;

	if ( !psfReqChangeRoomTitle_GM )
		psfReqChangeRoomTitle_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChangeRoomTitle_GM" );

	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( psfReqChangeRoomTitle_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqQuestGetAvailableEventList (  )
{
	static UFunction* psfReqQuestGetAvailableEventList = 0;
	UBTTcpHandler_execsfReqQuestGetAvailableEventList_Parms parms;

	if ( !psfReqQuestGetAvailableEventList )
		psfReqQuestGetAvailableEventList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqQuestGetAvailableEventList" );

	this->ProcessEvent ( psfReqQuestGetAvailableEventList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqCharBlockInfo (  )
{
	static UFunction* psfReqCharBlockInfo = 0;
	UBTTcpHandler_execsfReqCharBlockInfo_Parms parms;

	if ( !psfReqCharBlockInfo )
		psfReqCharBlockInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqCharBlockInfo" );

	this->ProcessEvent ( psfReqCharBlockInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqIsPaidWebzenPCBang ( unsigned char IsPaid )
{
	static UFunction* psfReqIsPaidWebzenPCBang = 0;
	UBTTcpHandler_execsfReqIsPaidWebzenPCBang_Parms parms;

	if ( !psfReqIsPaidWebzenPCBang )
		psfReqIsPaidWebzenPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqIsPaidWebzenPCBang" );

	parms.IsPaid = IsPaid;
	this->ProcessEvent ( psfReqIsPaidWebzenPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_GetClanWaittingRoomInfo (  )
{
	static UFunction* psfReqClanMatch_GetClanWaittingRoomInfo = 0;
	UBTTcpHandler_execsfReqClanMatch_GetClanWaittingRoomInfo_Parms parms;

	if ( !psfReqClanMatch_GetClanWaittingRoomInfo )
		psfReqClanMatch_GetClanWaittingRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_GetClanWaittingRoomInfo" );

	this->ProcessEvent ( psfReqClanMatch_GetClanWaittingRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqReturnBotID ( class TArray< int > BotID )
{
	static UFunction* psfReqReturnBotID = 0;
	UBTTcpHandler_execsfReqReturnBotID_Parms parms;

	if ( !psfReqReturnBotID )
		psfReqReturnBotID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqReturnBotID" );

	parms.BotID = BotID;
	this->ProcessEvent ( psfReqReturnBotID, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGetBotID ( unsigned char AFCount, unsigned char RSACount )
{
	static UFunction* psfReqGetBotID = 0;
	UBTTcpHandler_execsfReqGetBotID_Parms parms;

	if ( !psfReqGetBotID )
		psfReqGetBotID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGetBotID" );

	parms.AFCount = AFCount;
	parms.RSACount = RSACount;
	this->ProcessEvent ( psfReqGetBotID, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_ChangeRoomSetting ( int WaitRoomIndex, class TArray< int > MapNumArray, int VersusMode, unsigned char IsPublic )
{
	static UFunction* psfReqClanMatch_ChangeRoomSetting = 0;
	UBTTcpHandler_execsfReqClanMatch_ChangeRoomSetting_Parms parms;

	if ( !psfReqClanMatch_ChangeRoomSetting )
		psfReqClanMatch_ChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_ChangeRoomSetting" );

	parms.WaitRoomIndex = WaitRoomIndex;
	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	parms.IsPublic = IsPublic;
	this->ProcessEvent ( psfReqClanMatch_ChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqParamCheckSum ( struct FString key, struct FString Value )
{
	static UFunction* psfReqParamCheckSum = 0;
	UBTTcpHandler_execsfReqParamCheckSum_Parms parms;

	if ( !psfReqParamCheckSum )
		psfReqParamCheckSum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqParamCheckSum" );

	parms.key = key;
	parms.Value = Value;
	this->ProcessEvent ( psfReqParamCheckSum, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqWebzenBillingUseStorageItem ( int StorageSeq, int StorageItemSeq, unsigned char StorageItemType )
{
	static UFunction* psfReqWebzenBillingUseStorageItem = 0;
	UBTTcpHandler_execsfReqWebzenBillingUseStorageItem_Parms parms;

	if ( !psfReqWebzenBillingUseStorageItem )
		psfReqWebzenBillingUseStorageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqWebzenBillingUseStorageItem" );

	parms.StorageSeq = StorageSeq;
	parms.StorageItemSeq = StorageItemSeq;
	parms.StorageItemType = StorageItemType;
	this->ProcessEvent ( psfReqWebzenBillingUseStorageItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqWebzenBillingStorageList ( int Page, int CountForPage, unsigned char Type )
{
	static UFunction* psfReqWebzenBillingStorageList = 0;
	UBTTcpHandler_execsfReqWebzenBillingStorageList_Parms parms;

	if ( !psfReqWebzenBillingStorageList )
		psfReqWebzenBillingStorageList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqWebzenBillingStorageList" );

	parms.Page = Page;
	parms.CountForPage = CountForPage;
	parms.Type = Type;
	this->ProcessEvent ( psfReqWebzenBillingStorageList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGiftItemByWebzenCash ( struct FString ReceiverCharName, struct FString Message, int PackageProductSeq, int PriceSeq, int ProductDisplaySeq )
{
	static UFunction* psfReqGiftItemByWebzenCash = 0;
	UBTTcpHandler_execsfReqGiftItemByWebzenCash_Parms parms;

	if ( !psfReqGiftItemByWebzenCash )
		psfReqGiftItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGiftItemByWebzenCash" );

	parms.ReceiverCharName = ReceiverCharName;
	parms.Message = Message;
	parms.PackageProductSeq = PackageProductSeq;
	parms.PriceSeq = PriceSeq;
	parms.ProductDisplaySeq = ProductDisplaySeq;
	this->ProcessEvent ( psfReqGiftItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqBuyItemByWebzenCash ( int PackageProductSeq, int ProductDisplaySeq, int PriceSeq, class TArray< int > ItemIDs, struct FBtrDouble ItemUniqueID, unsigned char BuyOption1, unsigned char BuyOption2 )
{
	static UFunction* psfReqBuyItemByWebzenCash = 0;
	UBTTcpHandler_execsfReqBuyItemByWebzenCash_Parms parms;

	if ( !psfReqBuyItemByWebzenCash )
		psfReqBuyItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqBuyItemByWebzenCash" );

	parms.PackageProductSeq = PackageProductSeq;
	parms.ProductDisplaySeq = ProductDisplaySeq;
	parms.PriceSeq = PriceSeq;
	parms.ItemIDs = ItemIDs;
	parms.ItemUniqueID = ItemUniqueID;
	parms.BuyOption1 = BuyOption1;
	parms.BuyOption2 = BuyOption2;
	this->ProcessEvent ( psfReqBuyItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqWebzenShopScriptVersion (  )
{
	static UFunction* psfReqWebzenShopScriptVersion = 0;
	UBTTcpHandler_execsfReqWebzenShopScriptVersion_Parms parms;

	if ( !psfReqWebzenShopScriptVersion )
		psfReqWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqWebzenShopScriptVersion" );

	this->ProcessEvent ( psfReqWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqWebzenCash (  )
{
	static UFunction* psfReqWebzenCash = 0;
	UBTTcpHandler_execsfReqWebzenCash_Parms parms;

	if ( !psfReqWebzenCash )
		psfReqWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqWebzenCash" );

	this->ProcessEvent ( psfReqWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRegisteredPCBangInfo (  )
{
	static UFunction* psfReqRegisteredPCBangInfo = 0;
	UBTTcpHandler_execsfReqRegisteredPCBangInfo_Parms parms;

	if ( !psfReqRegisteredPCBangInfo )
		psfReqRegisteredPCBangInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRegisteredPCBangInfo" );

	this->ProcessEvent ( psfReqRegisteredPCBangInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRegisterMainPCBang (  )
{
	static UFunction* psfReqRegisterMainPCBang = 0;
	UBTTcpHandler_execsfReqRegisterMainPCBang_Parms parms;

	if ( !psfReqRegisterMainPCBang )
		psfReqRegisterMainPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRegisterMainPCBang" );

	this->ProcessEvent ( psfReqRegisterMainPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqPCBangUserList (  )
{
	static UFunction* psfReqPCBangUserList = 0;
	UBTTcpHandler_execsfReqPCBangUserList_Parms parms;

	if ( !psfReqPCBangUserList )
		psfReqPCBangUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqPCBangUserList" );

	this->ProcessEvent ( psfReqPCBangUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqDailyQuestNewAvailable ( class TArray< int > ExpiredQuestID, class TArray< int > NewQuestID )
{
	static UFunction* psfReqDailyQuestNewAvailable = 0;
	UBTTcpHandler_execsfReqDailyQuestNewAvailable_Parms parms;

	if ( !psfReqDailyQuestNewAvailable )
		psfReqDailyQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqDailyQuestNewAvailable" );

	parms.ExpiredQuestID = ExpiredQuestID;
	parms.NewQuestID = NewQuestID;
	this->ProcessEvent ( psfReqDailyQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqQuestNewAvailable ( class TArray< int > AchivedQuestID, class TArray< int > NewQuestID, class TArray< unsigned char > IsDailyQuest, class TArray< int > ExpiredQuest )
{
	static UFunction* psfReqQuestNewAvailable = 0;
	UBTTcpHandler_execsfReqQuestNewAvailable_Parms parms;

	if ( !psfReqQuestNewAvailable )
		psfReqQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqQuestNewAvailable" );

	parms.AchivedQuestID = AchivedQuestID;
	parms.NewQuestID = NewQuestID;
	parms.IsDailyQuest = IsDailyQuest;
	parms.ExpiredQuest = ExpiredQuest;
	this->ProcessEvent ( psfReqQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqQuestUpdate ( int UniqueID, int GameRoomNum, class TArray< int > QuestID, class TArray< int > CountPrograss )
{
	static UFunction* psfReqQuestUpdate = 0;
	UBTTcpHandler_execsfReqQuestUpdate_Parms parms;

	if ( !psfReqQuestUpdate )
		psfReqQuestUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqQuestUpdate" );

	parms.UniqueID = UniqueID;
	parms.GameRoomNum = GameRoomNum;
	parms.QuestID = QuestID;
	parms.CountPrograss = CountPrograss;
	this->ProcessEvent ( psfReqQuestUpdate, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqQuestList (  )
{
	static UFunction* psfReqQuestList = 0;
	UBTTcpHandler_execsfReqQuestList_Parms parms;

	if ( !psfReqQuestList )
		psfReqQuestList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqQuestList" );

	this->ProcessEvent ( psfReqQuestList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqPermanentRoomInfo ( int RoomNum )
{
	static UFunction* psfReqPermanentRoomInfo = 0;
	UBTTcpHandler_execsfReqPermanentRoomInfo_Parms parms;

	if ( !psfReqPermanentRoomInfo )
		psfReqPermanentRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqPermanentRoomInfo" );

	parms.RoomNum = RoomNum;
	this->ProcessEvent ( psfReqPermanentRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_FoundMatch ( int ChannelID, int RoomNumber )
{
	static UFunction* psfReqClanMatch_FoundMatch = 0;
	UBTTcpHandler_execsfReqClanMatch_FoundMatch_Parms parms;

	if ( !psfReqClanMatch_FoundMatch )
		psfReqClanMatch_FoundMatch = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_FoundMatch" );

	parms.ChannelID = ChannelID;
	parms.RoomNumber = RoomNumber;
	this->ProcessEvent ( psfReqClanMatch_FoundMatch, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_StartSearching ( int RequestCount )
{
	static UFunction* psfReqClanMatch_StartSearching = 0;
	UBTTcpHandler_execsfReqClanMatch_StartSearching_Parms parms;

	if ( !psfReqClanMatch_StartSearching )
		psfReqClanMatch_StartSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_StartSearching" );

	parms.RequestCount = RequestCount;
	this->ProcessEvent ( psfReqClanMatch_StartSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqLimitedListInChannel (  )
{
	static UFunction* psfReqLimitedListInChannel = 0;
	UBTTcpHandler_execsfReqLimitedListInChannel_Parms parms;

	if ( !psfReqLimitedListInChannel )
		psfReqLimitedListInChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqLimitedListInChannel" );

	this->ProcessEvent ( psfReqLimitedListInChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvInviteGameRoom ( struct FString InviteUserServerName, int InviteUserServerID, int InviteUserChannelNumber, struct FString RoomUniqueID, int RoomNumber, struct FString RoomName, unsigned char RoomState, struct FString MapName, struct FString OwnerName, unsigned char GameMode, unsigned char WeaponLimit, unsigned char IsTeamBalance, struct FString Password, struct FString InviteCharName )
{
	static UFunction* psfReqRecvInviteGameRoom = 0;
	UBTTcpHandler_execsfReqRecvInviteGameRoom_Parms parms;

	if ( !psfReqRecvInviteGameRoom )
		psfReqRecvInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvInviteGameRoom" );

	parms.InviteUserServerName = InviteUserServerName;
	parms.InviteUserServerID = InviteUserServerID;
	parms.InviteUserChannelNumber = InviteUserChannelNumber;
	parms.RoomUniqueID = RoomUniqueID;
	parms.RoomNumber = RoomNumber;
	parms.RoomName = RoomName;
	parms.RoomState = RoomState;
	parms.MapName = MapName;
	parms.OwnerName = OwnerName;
	parms.GameMode = GameMode;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Password = Password;
	parms.InviteCharName = InviteCharName;
	this->ProcessEvent ( psfReqRecvInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqInviteGameRoom ( struct FString GuestCharName )
{
	static UFunction* psfReqInviteGameRoom = 0;
	UBTTcpHandler_execsfReqInviteGameRoom_Parms parms;

	if ( !psfReqInviteGameRoom )
		psfReqInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqInviteGameRoom" );

	parms.GuestCharName = GuestCharName;
	this->ProcessEvent ( psfReqInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_StopSearching (  )
{
	static UFunction* psfReqClanMatch_StopSearching = 0;
	UBTTcpHandler_execsfReqClanMatch_StopSearching_Parms parms;

	if ( !psfReqClanMatch_StopSearching )
		psfReqClanMatch_StopSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_StopSearching" );

	this->ProcessEvent ( psfReqClanMatch_StopSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_ChangeLeader ( int WaitRoomIdx, int NewLeaderID, struct FString NewLeaderName )
{
	static UFunction* psfReqClanMatch_ChangeLeader = 0;
	UBTTcpHandler_execsfReqClanMatch_ChangeLeader_Parms parms;

	if ( !psfReqClanMatch_ChangeLeader )
		psfReqClanMatch_ChangeLeader = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_ChangeLeader" );

	parms.WaitRoomIdx = WaitRoomIdx;
	parms.NewLeaderID = NewLeaderID;
	parms.NewLeaderName = NewLeaderName;
	this->ProcessEvent ( psfReqClanMatch_ChangeLeader, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_WaittingTeamList ( int StartIndex, int ReturnCount )
{
	static UFunction* psfReqClanMatch_WaittingTeamList = 0;
	UBTTcpHandler_execsfReqClanMatch_WaittingTeamList_Parms parms;

	if ( !psfReqClanMatch_WaittingTeamList )
		psfReqClanMatch_WaittingTeamList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_WaittingTeamList" );

	parms.StartIndex = StartIndex;
	parms.ReturnCount = ReturnCount;
	this->ProcessEvent ( psfReqClanMatch_WaittingTeamList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_Chat ( struct FString Msg )
{
	static UFunction* psfReqClanMatch_Chat = 0;
	UBTTcpHandler_execsfReqClanMatch_Chat_Parms parms;

	if ( !psfReqClanMatch_Chat )
		psfReqClanMatch_Chat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_Chat" );

	parms.Msg = Msg;
	this->ProcessEvent ( psfReqClanMatch_Chat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_Leave ( int WaittingID )
{
	static UFunction* psfReqClanMatch_Leave = 0;
	UBTTcpHandler_execsfReqClanMatch_Leave_Parms parms;

	if ( !psfReqClanMatch_Leave )
		psfReqClanMatch_Leave = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_Leave" );

	parms.WaittingID = WaittingID;
	this->ProcessEvent ( psfReqClanMatch_Leave, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_MemberList (  )
{
	static UFunction* psfReqClanMatch_MemberList = 0;
	UBTTcpHandler_execsfReqClanMatch_MemberList_Parms parms;

	if ( !psfReqClanMatch_MemberList )
		psfReqClanMatch_MemberList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_MemberList" );

	this->ProcessEvent ( psfReqClanMatch_MemberList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_Join ( int WaittingID )
{
	static UFunction* psfReqClanMatch_Join = 0;
	UBTTcpHandler_execsfReqClanMatch_Join_Parms parms;

	if ( !psfReqClanMatch_Join )
		psfReqClanMatch_Join = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_Join" );

	parms.WaittingID = WaittingID;
	this->ProcessEvent ( psfReqClanMatch_Join, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_InviteCrewResult ( struct FString Invitee, int Result )
{
	static UFunction* psfReqClanMatch_InviteCrewResult = 0;
	UBTTcpHandler_execsfReqClanMatch_InviteCrewResult_Parms parms;

	if ( !psfReqClanMatch_InviteCrewResult )
		psfReqClanMatch_InviteCrewResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_InviteCrewResult" );

	parms.Invitee = Invitee;
	parms.Result = Result;
	this->ProcessEvent ( psfReqClanMatch_InviteCrewResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_RecvInviteCrew ( struct FString Inviter, struct FString ServerIP, int Port, int WaittingID, struct FString Msg, int MapNum, int InviteUserChannelNum, struct FString LeaderName, struct FString RoomName )
{
	static UFunction* psfReqClanMatch_RecvInviteCrew = 0;
	UBTTcpHandler_execsfReqClanMatch_RecvInviteCrew_Parms parms;

	if ( !psfReqClanMatch_RecvInviteCrew )
		psfReqClanMatch_RecvInviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_RecvInviteCrew" );

	parms.Inviter = Inviter;
	parms.ServerIP = ServerIP;
	parms.Port = Port;
	parms.WaittingID = WaittingID;
	parms.Msg = Msg;
	parms.MapNum = MapNum;
	parms.InviteUserChannelNum = InviteUserChannelNum;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	this->ProcessEvent ( psfReqClanMatch_RecvInviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_InviteCrew ( struct FString Invitee )
{
	static UFunction* psfReqClanMatch_InviteCrew = 0;
	UBTTcpHandler_execsfReqClanMatch_InviteCrew_Parms parms;

	if ( !psfReqClanMatch_InviteCrew )
		psfReqClanMatch_InviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_InviteCrew" );

	parms.Invitee = Invitee;
	this->ProcessEvent ( psfReqClanMatch_InviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_StartCombat ( class TArray< int > MapNumArray, int VersusMode )
{
	static UFunction* psfReqClanMatch_StartCombat = 0;
	UBTTcpHandler_execsfReqClanMatch_StartCombat_Parms parms;

	if ( !psfReqClanMatch_StartCombat )
		psfReqClanMatch_StartCombat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_StartCombat" );

	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	this->ProcessEvent ( psfReqClanMatch_StartCombat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanMatch_GetReady (  )
{
	static UFunction* psfReqClanMatch_GetReady = 0;
	UBTTcpHandler_execsfReqClanMatch_GetReady_Parms parms;

	if ( !psfReqClanMatch_GetReady )
		psfReqClanMatch_GetReady = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanMatch_GetReady" );

	this->ProcessEvent ( psfReqClanMatch_GetReady, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGetItemFromItemBox ( struct FBtrDouble ItemUniqueID, int ItemID, int ItemIDChoose, int PartIDChoose )
{
	static UFunction* psfReqGetItemFromItemBox = 0;
	UBTTcpHandler_execsfReqGetItemFromItemBox_Parms parms;

	if ( !psfReqGetItemFromItemBox )
		psfReqGetItemFromItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGetItemFromItemBox" );

	parms.ItemUniqueID = ItemUniqueID;
	parms.ItemID = ItemID;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	this->ProcessEvent ( psfReqGetItemFromItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqItemListInItemBox ( struct FBtrDouble ItemUniqueID, int BoxItemID )
{
	static UFunction* psfReqItemListInItemBox = 0;
	UBTTcpHandler_execsfReqItemListInItemBox_Parms parms;

	if ( !psfReqItemListInItemBox )
		psfReqItemListInItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqItemListInItemBox" );

	parms.ItemUniqueID = ItemUniqueID;
	parms.BoxItemID = BoxItemID;
	this->ProcessEvent ( psfReqItemListInItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvForceFailedClientLoading ( int ErrCode )
{
	static UFunction* psfReqRecvForceFailedClientLoading = 0;
	UBTTcpHandler_execsfReqRecvForceFailedClientLoading_Parms parms;

	if ( !psfReqRecvForceFailedClientLoading )
		psfReqRecvForceFailedClientLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvForceFailedClientLoading" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( psfReqRecvForceFailedClientLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqForceFailedClientLoading ( int FailedUserID, int ErrCode )
{
	static UFunction* psfReqForceFailedClientLoading = 0;
	UBTTcpHandler_execsfReqForceFailedClientLoading_Parms parms;

	if ( !psfReqForceFailedClientLoading )
		psfReqForceFailedClientLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqForceFailedClientLoading" );

	parms.FailedUserID = FailedUserID;
	parms.ErrCode = ErrCode;
	this->ProcessEvent ( psfReqForceFailedClientLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqStartHolePunching ( int GameType, int ReqStartUserID )
{
	static UFunction* psfReqStartHolePunching = 0;
	UBTTcpHandler_execsfReqStartHolePunching_Parms parms;

	if ( !psfReqStartHolePunching )
		psfReqStartHolePunching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqStartHolePunching" );

	parms.GameType = GameType;
	parms.ReqStartUserID = ReqStartUserID;
	this->ProcessEvent ( psfReqStartHolePunching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyMyCharInfoToRoomUser (  )
{
	static UFunction* psfReqNotifyMyCharInfoToRoomUser = 0;
	UBTTcpHandler_execsfReqNotifyMyCharInfoToRoomUser_Parms parms;

	if ( !psfReqNotifyMyCharInfoToRoomUser )
		psfReqNotifyMyCharInfoToRoomUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyMyCharInfoToRoomUser" );

	this->ProcessEvent ( psfReqNotifyMyCharInfoToRoomUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyDurabilityZeroItem ( int Result, struct FString ErrMsg, int UserID, class TArray< struct FBtrDouble > ItemUniqueIDs, class TArray< int > ItemIDs, class TArray< int > ItemPartIDs, class TArray< unsigned char > ItemSlotPos )
{
	static UFunction* psfReqNotifyDurabilityZeroItem = 0;
	UBTTcpHandler_execsfReqNotifyDurabilityZeroItem_Parms parms;

	if ( !psfReqNotifyDurabilityZeroItem )
		psfReqNotifyDurabilityZeroItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyDurabilityZeroItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.ItemUniqueIDs = ItemUniqueIDs;
	parms.ItemIDs = ItemIDs;
	parms.ItemPartIDs = ItemPartIDs;
	parms.ItemSlotPos = ItemSlotPos;
	this->ProcessEvent ( psfReqNotifyDurabilityZeroItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChatWispherMyCommunity ( struct FString SourceCharName, struct FString SenderName, struct FString Msg )
{
	static UFunction* psfReqChatWispherMyCommunity = 0;
	UBTTcpHandler_execsfReqChatWispherMyCommunity_Parms parms;

	if ( !psfReqChatWispherMyCommunity )
		psfReqChatWispherMyCommunity = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChatWispherMyCommunity" );

	parms.SourceCharName = SourceCharName;
	parms.SenderName = SenderName;
	parms.Msg = Msg;
	this->ProcessEvent ( psfReqChatWispherMyCommunity, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyDisconnectHostInLoading ( int Result, struct FString ErrMsg, int HostID )
{
	static UFunction* psfReqNotifyDisconnectHostInLoading = 0;
	UBTTcpHandler_execsfReqNotifyDisconnectHostInLoading_Parms parms;

	if ( !psfReqNotifyDisconnectHostInLoading )
		psfReqNotifyDisconnectHostInLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyDisconnectHostInLoading" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.HostID = HostID;
	this->ProcessEvent ( psfReqNotifyDisconnectHostInLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvForceDisconnected_FromGM ( int Result, struct FString ErrMsg )
{
	static UFunction* psfReqRecvForceDisconnected_FromGM = 0;
	UBTTcpHandler_execsfReqRecvForceDisconnected_FromGM_Parms parms;

	if ( !psfReqRecvForceDisconnected_FromGM )
		psfReqRecvForceDisconnected_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvForceDisconnected_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( psfReqRecvForceDisconnected_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqForceDisconnectUser_GM ( struct FString CharName )
{
	static UFunction* psfReqForceDisconnectUser_GM = 0;
	UBTTcpHandler_execsfReqForceDisconnectUser_GM_Parms parms;

	if ( !psfReqForceDisconnectUser_GM )
		psfReqForceDisconnectUser_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqForceDisconnectUser_GM" );

	parms.CharName = CharName;
	this->ProcessEvent ( psfReqForceDisconnectUser_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvNotice_FromGM ( int Result, struct FString ErrMsg, class TArray< struct FString > NoticeMsg, unsigned char IsFromDB )
{
	static UFunction* psfReqRecvNotice_FromGM = 0;
	UBTTcpHandler_execsfReqRecvNotice_FromGM_Parms parms;

	if ( !psfReqRecvNotice_FromGM )
		psfReqRecvNotice_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvNotice_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeMsg = NoticeMsg;
	parms.IsFromDB = IsFromDB;
	this->ProcessEvent ( psfReqRecvNotice_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotice_GM ( unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, struct FString Msg )
{
	static UFunction* psfReqNotice_GM = 0;
	UBTTcpHandler_execsfReqNotice_GM_Parms parms;

	if ( !psfReqNotice_GM )
		psfReqNotice_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotice_GM" );

	parms.NoticeType = NoticeType;
	parms.ServerID = ServerID;
	parms.ChannelNum = ChannelNum;
	parms.GameRoomNum = GameRoomNum;
	parms.Msg = Msg;
	this->ProcessEvent ( psfReqNotice_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSpecificChannelUserInfo ( int UserID )
{
	static UFunction* psfReqSpecificChannelUserInfo = 0;
	UBTTcpHandler_execsfReqSpecificChannelUserInfo_Parms parms;

	if ( !psfReqSpecificChannelUserInfo )
		psfReqSpecificChannelUserInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSpecificChannelUserInfo" );

	parms.UserID = UserID;
	this->ProcessEvent ( psfReqSpecificChannelUserInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSpecificGameRoomInfo ( int RoomNum )
{
	static UFunction* psfReqSpecificGameRoomInfo = 0;
	UBTTcpHandler_execsfReqSpecificGameRoomInfo_Parms parms;

	if ( !psfReqSpecificGameRoomInfo )
		psfReqSpecificGameRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSpecificGameRoomInfo" );

	parms.RoomNum = RoomNum;
	this->ProcessEvent ( psfReqSpecificGameRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChannelUserListInGameRoom ( int ChannelNum, int StartIndex, int Count )
{
	static UFunction* psfReqChannelUserListInGameRoom = 0;
	UBTTcpHandler_execsfReqChannelUserListInGameRoom_Parms parms;

	if ( !psfReqChannelUserListInGameRoom )
		psfReqChannelUserListInGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChannelUserListInGameRoom" );

	parms.ChannelNum = ChannelNum;
	parms.StartIndex = StartIndex;
	parms.Count = Count;
	this->ProcessEvent ( psfReqChannelUserListInGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvDeleteFriend ( int Result, struct FString FromCharName )
{
	static UFunction* psfReqRecvDeleteFriend = 0;
	UBTTcpHandler_execsfReqRecvDeleteFriend_Parms parms;

	if ( !psfReqRecvDeleteFriend )
		psfReqRecvDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvDeleteFriend" );

	parms.Result = Result;
	parms.FromCharName = FromCharName;
	this->ProcessEvent ( psfReqRecvDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqDeleteFriend ( class TArray< struct FString > DeleteCharName )
{
	static UFunction* psfReqDeleteFriend = 0;
	UBTTcpHandler_execsfReqDeleteFriend_Parms parms;

	if ( !psfReqDeleteFriend )
		psfReqDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqDeleteFriend" );

	parms.DeleteCharName = DeleteCharName;
	this->ProcessEvent ( psfReqDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGameGuardAuthData ( int AuthDataIndex, int AuthDataVal1, int AuthDataVal2, int AuthDataVal3 )
{
	static UFunction* psfReqGameGuardAuthData = 0;
	UBTTcpHandler_execsfReqGameGuardAuthData_Parms parms;

	if ( !psfReqGameGuardAuthData )
		psfReqGameGuardAuthData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGameGuardAuthData" );

	parms.AuthDataIndex = AuthDataIndex;
	parms.AuthDataVal1 = AuthDataVal1;
	parms.AuthDataVal2 = AuthDataVal2;
	parms.AuthDataVal3 = AuthDataVal3;
	this->ProcessEvent ( psfReqGameGuardAuthData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqCheckEquipedWeaponDurability (  )
{
	static UFunction* psfReqCheckEquipedWeaponDurability = 0;
	UBTTcpHandler_execsfReqCheckEquipedWeaponDurability_Parms parms;

	if ( !psfReqCheckEquipedWeaponDurability )
		psfReqCheckEquipedWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqCheckEquipedWeaponDurability" );

	this->ProcessEvent ( psfReqCheckEquipedWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGamePlay_GetChopper ( int GetChopperUID, class TArray< int > GetChopperAssistUID, float KillXCoord, float KillYCoord, float KillZCoord, int KillPos, int KillWeaponID, int KillWeaponPartID, int KillRange, int KillDamage, int ChopperCallerID, struct FString ChopperCallerName, float ChopperXCoord, float ChopperYCoord, float ChopperZCoord )
{
	static UFunction* psfReqGamePlay_GetChopper = 0;
	UBTTcpHandler_execsfReqGamePlay_GetChopper_Parms parms;

	if ( !psfReqGamePlay_GetChopper )
		psfReqGamePlay_GetChopper = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGamePlay_GetChopper" );

	parms.GetChopperUID = GetChopperUID;
	parms.GetChopperAssistUID = GetChopperAssistUID;
	parms.KillXCoord = KillXCoord;
	parms.KillYCoord = KillYCoord;
	parms.KillZCoord = KillZCoord;
	parms.KillPos = KillPos;
	parms.KillWeaponID = KillWeaponID;
	parms.KillWeaponPartID = KillWeaponPartID;
	parms.KillRange = KillRange;
	parms.KillDamage = KillDamage;
	parms.ChopperCallerID = ChopperCallerID;
	parms.ChopperCallerName = ChopperCallerName;
	parms.ChopperXCoord = ChopperXCoord;
	parms.ChopperYCoord = ChopperYCoord;
	parms.ChopperZCoord = ChopperZCoord;
	this->ProcessEvent ( psfReqGamePlay_GetChopper, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqIsAvailClanURL ( struct FString ClanURL )
{
	static UFunction* psfReqIsAvailClanURL = 0;
	UBTTcpHandler_execsfReqIsAvailClanURL_Parms parms;

	if ( !psfReqIsAvailClanURL )
		psfReqIsAvailClanURL = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqIsAvailClanURL" );

	parms.ClanURL = ClanURL;
	this->ProcessEvent ( psfReqIsAvailClanURL, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGetIsHostBlocking (  )
{
	static UFunction* psfReqGetIsHostBlocking = 0;
	UBTTcpHandler_execsfReqGetIsHostBlocking_Parms parms;

	if ( !psfReqGetIsHostBlocking )
		psfReqGetIsHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGetIsHostBlocking" );

	this->ProcessEvent ( psfReqGetIsHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyHostBlocking ( unsigned char Blocking )
{
	static UFunction* psfReqNotifyHostBlocking = 0;
	UBTTcpHandler_execsfReqNotifyHostBlocking_Parms parms;

	if ( !psfReqNotifyHostBlocking )
		psfReqNotifyHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyHostBlocking" );

	parms.Blocking = Blocking;
	this->ProcessEvent ( psfReqNotifyHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGetHolePunchingResult (  )
{
	static UFunction* psfReqGetHolePunchingResult = 0;
	UBTTcpHandler_execsfReqGetHolePunchingResult_Parms parms;

	if ( !psfReqGetHolePunchingResult )
		psfReqGetHolePunchingResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGetHolePunchingResult" );

	this->ProcessEvent ( psfReqGetHolePunchingResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyRecvDummyForHolePunching ( int ClientUserID, unsigned char Phrase )
{
	static UFunction* psfReqNotifyRecvDummyForHolePunching = 0;
	UBTTcpHandler_execsfReqNotifyRecvDummyForHolePunching_Parms parms;

	if ( !psfReqNotifyRecvDummyForHolePunching )
		psfReqNotifyRecvDummyForHolePunching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyRecvDummyForHolePunching" );

	parms.ClientUserID = ClientUserID;
	parms.Phrase = Phrase;
	this->ProcessEvent ( psfReqNotifyRecvDummyForHolePunching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGamePlay_ChangeWeaponSet ( int UID, int SetNumber )
{
	static UFunction* psfReqGamePlay_ChangeWeaponSet = 0;
	UBTTcpHandler_execsfReqGamePlay_ChangeWeaponSet_Parms parms;

	if ( !psfReqGamePlay_ChangeWeaponSet )
		psfReqGamePlay_ChangeWeaponSet = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGamePlay_ChangeWeaponSet" );

	parms.UID = UID;
	parms.SetNumber = SetNumber;
	this->ProcessEvent ( psfReqGamePlay_ChangeWeaponSet, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGamePlay_UpdateDomScore ( int AFScore, int RSAScore )
{
	static UFunction* psfReqGamePlay_UpdateDomScore = 0;
	UBTTcpHandler_execsfReqGamePlay_UpdateDomScore_Parms parms;

	if ( !psfReqGamePlay_UpdateDomScore )
		psfReqGamePlay_UpdateDomScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGamePlay_UpdateDomScore" );

	parms.AFScore = AFScore;
	parms.RSAScore = RSAScore;
	this->ProcessEvent ( psfReqGamePlay_UpdateDomScore, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyRelayServerAddr ( struct FString RelayIP, int RelayPort )
{
	static UFunction* psfReqNotifyRelayServerAddr = 0;
	UBTTcpHandler_execsfReqNotifyRelayServerAddr_Parms parms;

	if ( !psfReqNotifyRelayServerAddr )
		psfReqNotifyRelayServerAddr = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyRelayServerAddr" );

	parms.RelayIP = RelayIP;
	parms.RelayPort = RelayPort;
	this->ProcessEvent ( psfReqNotifyRelayServerAddr, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGetUserHostPriorityPoint ( int UserID )
{
	static UFunction* psfReqGetUserHostPriorityPoint = 0;
	UBTTcpHandler_execsfReqGetUserHostPriorityPoint_Parms parms;

	if ( !psfReqGetUserHostPriorityPoint )
		psfReqGetUserHostPriorityPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGetUserHostPriorityPoint" );

	parms.UserID = UserID;
	this->ProcessEvent ( psfReqGetUserHostPriorityPoint, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqUpdateMyHostPriorityPoint ( int HostPriorityPoint )
{
	static UFunction* psfReqUpdateMyHostPriorityPoint = 0;
	UBTTcpHandler_execsfReqUpdateMyHostPriorityPoint_Parms parms;

	if ( !psfReqUpdateMyHostPriorityPoint )
		psfReqUpdateMyHostPriorityPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqUpdateMyHostPriorityPoint" );

	parms.HostPriorityPoint = HostPriorityPoint;
	this->ProcessEvent ( psfReqUpdateMyHostPriorityPoint, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqWriteServerLog ( unsigned char Destination, struct FString LogMsg )
{
	static UFunction* psfReqWriteServerLog = 0;
	UBTTcpHandler_execsfReqWriteServerLog_Parms parms;

	if ( !psfReqWriteServerLog )
		psfReqWriteServerLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqWriteServerLog" );

	parms.Destination = Destination;
	parms.LogMsg = LogMsg;
	this->ProcessEvent ( psfReqWriteServerLog, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGamePlay_SetRoundStartTime ( class TArray< int > UID )
{
	static UFunction* psfReqGamePlay_SetRoundStartTime = 0;
	UBTTcpHandler_execsfReqGamePlay_SetRoundStartTime_Parms parms;

	if ( !psfReqGamePlay_SetRoundStartTime )
		psfReqGamePlay_SetRoundStartTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGamePlay_SetRoundStartTime" );

	parms.UID = UID;
	this->ProcessEvent ( psfReqGamePlay_SetRoundStartTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGamePlay_SetGameStartTime ( class TArray< int > UID )
{
	static UFunction* psfReqGamePlay_SetGameStartTime = 0;
	UBTTcpHandler_execsfReqGamePlay_SetGameStartTime_Parms parms;

	if ( !psfReqGamePlay_SetGameStartTime )
		psfReqGamePlay_SetGameStartTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGamePlay_SetGameStartTime" );

	parms.UID = UID;
	this->ProcessEvent ( psfReqGamePlay_SetGameStartTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvForceDisconnectUDPFromHost ( int Result )
{
	static UFunction* psfReqRecvForceDisconnectUDPFromHost = 0;
	UBTTcpHandler_execsfReqRecvForceDisconnectUDPFromHost_Parms parms;

	if ( !psfReqRecvForceDisconnectUDPFromHost )
		psfReqRecvForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvForceDisconnectUDPFromHost" );

	parms.Result = Result;
	this->ProcessEvent ( psfReqRecvForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqForceDisconnectUDPFromHost ( int UserID )
{
	static UFunction* psfReqForceDisconnectUDPFromHost = 0;
	UBTTcpHandler_execsfReqForceDisconnectUDPFromHost_Parms parms;

	if ( !psfReqForceDisconnectUDPFromHost )
		psfReqForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqForceDisconnectUDPFromHost" );

	parms.UserID = UserID;
	this->ProcessEvent ( psfReqForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGamePlay_TakeAPoint ( class TArray< int > TakerUID, unsigned char TakePos, class TArray< float > TakerXCoord, class TArray< float > TakerYCoord, class TArray< float > TakerZCoord, class TArray< int > TakerPos, class TArray< int > TakerWeaponID, class TArray< int > TakerWeaponPartID, class TArray< int > TakerRange )
{
	static UFunction* psfReqGamePlay_TakeAPoint = 0;
	UBTTcpHandler_execsfReqGamePlay_TakeAPoint_Parms parms;

	if ( !psfReqGamePlay_TakeAPoint )
		psfReqGamePlay_TakeAPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGamePlay_TakeAPoint" );

	parms.TakerUID = TakerUID;
	parms.TakePos = TakePos;
	parms.TakerXCoord = TakerXCoord;
	parms.TakerYCoord = TakerYCoord;
	parms.TakerZCoord = TakerZCoord;
	parms.TakerPos = TakerPos;
	parms.TakerWeaponID = TakerWeaponID;
	parms.TakerWeaponPartID = TakerWeaponPartID;
	parms.TakerRange = TakerRange;
	this->ProcessEvent ( psfReqGamePlay_TakeAPoint, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyChangeRoomState ( unsigned char RoomState )
{
	static UFunction* psfReqNotifyChangeRoomState = 0;
	UBTTcpHandler_execsfReqNotifyChangeRoomState_Parms parms;

	if ( !psfReqNotifyChangeRoomState )
		psfReqNotifyChangeRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyChangeRoomState" );

	parms.RoomState = RoomState;
	this->ProcessEvent ( psfReqNotifyChangeRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGamePlay_DefuseBomb ( int DefuserUID, unsigned char DefusePos, float DefuserXCoord, float DefuserYCoord, float DefuserZCoord, int DefuserPos, int DefuserWeaponID, int DefuserWeaponPartID, int DefuserRange )
{
	static UFunction* psfReqGamePlay_DefuseBomb = 0;
	UBTTcpHandler_execsfReqGamePlay_DefuseBomb_Parms parms;

	if ( !psfReqGamePlay_DefuseBomb )
		psfReqGamePlay_DefuseBomb = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGamePlay_DefuseBomb" );

	parms.DefuserUID = DefuserUID;
	parms.DefusePos = DefusePos;
	parms.DefuserXCoord = DefuserXCoord;
	parms.DefuserYCoord = DefuserYCoord;
	parms.DefuserZCoord = DefuserZCoord;
	parms.DefuserPos = DefuserPos;
	parms.DefuserWeaponID = DefuserWeaponID;
	parms.DefuserWeaponPartID = DefuserWeaponPartID;
	parms.DefuserRange = DefuserRange;
	this->ProcessEvent ( psfReqGamePlay_DefuseBomb, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGamePlay_InstallBomb ( int InstallerUID, unsigned char InstallPos, float InstallerXCoord, float InstallerYCoord, float InstallerZCoord, int InstallerPos, int InstallerWeaponID, int InstallerWeaponPartID, int InstallerRange )
{
	static UFunction* psfReqGamePlay_InstallBomb = 0;
	UBTTcpHandler_execsfReqGamePlay_InstallBomb_Parms parms;

	if ( !psfReqGamePlay_InstallBomb )
		psfReqGamePlay_InstallBomb = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGamePlay_InstallBomb" );

	parms.InstallerUID = InstallerUID;
	parms.InstallPos = InstallPos;
	parms.InstallerXCoord = InstallerXCoord;
	parms.InstallerYCoord = InstallerYCoord;
	parms.InstallerZCoord = InstallerZCoord;
	parms.InstallerPos = InstallerPos;
	parms.InstallerWeaponID = InstallerWeaponID;
	parms.InstallerWeaponPartID = InstallerWeaponPartID;
	parms.InstallerRange = InstallerRange;
	this->ProcessEvent ( psfReqGamePlay_InstallBomb, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqDBCharInfo ( struct FString CharName )
{
	static UFunction* psfReqDBCharInfo = 0;
	UBTTcpHandler_execsfReqDBCharInfo_Parms parms;

	if ( !psfReqDBCharInfo )
		psfReqDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqDBCharInfo" );

	parms.CharName = CharName;
	this->ProcessEvent ( psfReqDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqForceNatTypeSetting ( int NatType )
{
	static UFunction* psfReqForceNatTypeSetting = 0;
	UBTTcpHandler_execsfReqForceNatTypeSetting_Parms parms;

	if ( !psfReqForceNatTypeSetting )
		psfReqForceNatTypeSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqForceNatTypeSetting" );

	parms.NatType = NatType;
	this->ProcessEvent ( psfReqForceNatTypeSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGetServerTime (  )
{
	static UFunction* psfReqGetServerTime = 0;
	UBTTcpHandler_execsfReqGetServerTime_Parms parms;

	if ( !psfReqGetServerTime )
		psfReqGetServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGetServerTime" );

	this->ProcessEvent ( psfReqGetServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqLogEndEachRound ( int StartCnt, int EndCnt, int RoundEndType, int RoundEndTime, unsigned char VTeam, unsigned char VTeamAD, int AFScore, int RSAScore, int Round )
{
	static UFunction* psfReqLogEndEachRound = 0;
	UBTTcpHandler_execsfReqLogEndEachRound_Parms parms;

	if ( !psfReqLogEndEachRound )
		psfReqLogEndEachRound = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqLogEndEachRound" );

	parms.StartCnt = StartCnt;
	parms.EndCnt = EndCnt;
	parms.RoundEndType = RoundEndType;
	parms.RoundEndTime = RoundEndTime;
	parms.VTeam = VTeam;
	parms.VTeamAD = VTeamAD;
	parms.AFScore = AFScore;
	parms.RSAScore = RSAScore;
	parms.Round = Round;
	this->ProcessEvent ( psfReqLogEndEachRound, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqLogGetScore ( struct FKillDeathLog KillDeathLogParam, class TArray< int > AssistUIDs, class TArray< unsigned char > AssistScores )
{
	static UFunction* psfReqLogGetScore = 0;
	UBTTcpHandler_execsfReqLogGetScore_Parms parms;

	if ( !psfReqLogGetScore )
		psfReqLogGetScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqLogGetScore" );

	parms.KillDeathLogParam = KillDeathLogParam;
	parms.AssistUIDs = AssistUIDs;
	parms.AssistScores = AssistScores;
	this->ProcessEvent ( psfReqLogGetScore, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqAuctionTradeHistory ( int ItemID, int PartID )
{
	static UFunction* psfReqAuctionTradeHistory = 0;
	UBTTcpHandler_execsfReqAuctionTradeHistory_Parms parms;

	if ( !psfReqAuctionTradeHistory )
		psfReqAuctionTradeHistory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqAuctionTradeHistory" );

	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( psfReqAuctionTradeHistory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSendGift ( int ItemID, struct FString RecvCharname, struct FString RecvMessage, unsigned char BuyOption1, unsigned char BuyOption2 )
{
	static UFunction* psfReqSendGift = 0;
	UBTTcpHandler_execsfReqSendGift_Parms parms;

	if ( !psfReqSendGift )
		psfReqSendGift = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSendGift" );

	parms.ItemID = ItemID;
	parms.RecvCharname = RecvCharname;
	parms.RecvMessage = RecvMessage;
	parms.BuyOption1 = BuyOption1;
	parms.BuyOption2 = BuyOption2;
	this->ProcessEvent ( psfReqSendGift, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGetAttachedItemFromMemo ( int UserID, int MemoIdx, int ItemID )
{
	static UFunction* psfReqGetAttachedItemFromMemo = 0;
	UBTTcpHandler_execsfReqGetAttachedItemFromMemo_Parms parms;

	if ( !psfReqGetAttachedItemFromMemo )
		psfReqGetAttachedItemFromMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGetAttachedItemFromMemo" );

	parms.UserID = UserID;
	parms.MemoIdx = MemoIdx;
	parms.ItemID = ItemID;
	this->ProcessEvent ( psfReqGetAttachedItemFromMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChatClan ( struct FString Message )
{
	static UFunction* psfReqChatClan = 0;
	UBTTcpHandler_execsfReqChatClan_Parms parms;

	if ( !psfReqChatClan )
		psfReqChatClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChatClan" );

	parms.Message = Message;
	this->ProcessEvent ( psfReqChatClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqTestDouble ( struct FBtrDouble vDouble, class TArray< struct FBtrDouble > vDoubles )
{
	static UFunction* psfReqTestDouble = 0;
	UBTTcpHandler_execsfReqTestDouble_Parms parms;

	if ( !psfReqTestDouble )
		psfReqTestDouble = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqTestDouble" );

	parms.vDouble = vDouble;
	parms.vDoubles = vDoubles;
	this->ProcessEvent ( psfReqTestDouble, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyLoadingState ( unsigned char LoadingState )
{
	static UFunction* psfReqNotifyLoadingState = 0;
	UBTTcpHandler_execsfReqNotifyLoadingState_Parms parms;

	if ( !psfReqNotifyLoadingState )
		psfReqNotifyLoadingState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyLoadingState" );

	parms.LoadingState = LoadingState;
	this->ProcessEvent ( psfReqNotifyLoadingState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqFailedStartGame ( int LoadingStep )
{
	static UFunction* psfReqFailedStartGame = 0;
	UBTTcpHandler_execsfReqFailedStartGame_Parms parms;

	if ( !psfReqFailedStartGame )
		psfReqFailedStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqFailedStartGame" );

	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( psfReqFailedStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSuccessStartGame ( int LoadingStep )
{
	static UFunction* psfReqSuccessStartGame = 0;
	UBTTcpHandler_execsfReqSuccessStartGame_Parms parms;

	if ( !psfReqSuccessStartGame )
		psfReqSuccessStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSuccessStartGame" );

	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( psfReqSuccessStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanCharPersonelIntro ( struct FString ClanName, struct FString CharName )
{
	static UFunction* psfReqClanCharPersonelIntro = 0;
	UBTTcpHandler_execsfReqClanCharPersonelIntro_Parms parms;

	if ( !psfReqClanCharPersonelIntro )
		psfReqClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanCharPersonelIntro" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( psfReqClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanPersonelIntro ( struct FString ClanName, struct FString CharName, struct FString PersonelIntro )
{
	static UFunction* psfReqClanPersonelIntro = 0;
	UBTTcpHandler_execsfReqClanPersonelIntro_Parms parms;

	if ( !psfReqClanPersonelIntro )
		psfReqClanPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanPersonelIntro" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( psfReqClanPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanChangeInfo ( struct FString ClanName, unsigned char IsRecruit, unsigned char Region, struct FString Keyword, struct FString ClanIntro, struct FString Notice )
{
	static UFunction* psfReqClanChangeInfo = 0;
	UBTTcpHandler_execsfReqClanChangeInfo_Parms parms;

	if ( !psfReqClanChangeInfo )
		psfReqClanChangeInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanChangeInfo" );

	parms.ClanName = ClanName;
	parms.IsRecruit = IsRecruit;
	parms.Region = Region;
	parms.Keyword = Keyword;
	parms.ClanIntro = ClanIntro;
	parms.Notice = Notice;
	this->ProcessEvent ( psfReqClanChangeInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanClose ( struct FString ClanName )
{
	static UFunction* psfReqClanClose = 0;
	UBTTcpHandler_execsfReqClanClose_Parms parms;

	if ( !psfReqClanClose )
		psfReqClanClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanClose" );

	parms.ClanName = ClanName;
	this->ProcessEvent ( psfReqClanClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanSecession ( struct FString ClanName )
{
	static UFunction* psfReqClanSecession = 0;
	UBTTcpHandler_execsfReqClanSecession_Parms parms;

	if ( !psfReqClanSecession )
		psfReqClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanSecession" );

	parms.ClanName = ClanName;
	this->ProcessEvent ( psfReqClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanNews ( struct FString ClanName )
{
	static UFunction* psfReqClanNews = 0;
	UBTTcpHandler_execsfReqClanNews_Parms parms;

	if ( !psfReqClanNews )
		psfReqClanNews = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanNews" );

	parms.ClanName = ClanName;
	this->ProcessEvent ( psfReqClanNews, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* psfReqAdjustClanMemberGrade = 0;
	UBTTcpHandler_execsfReqAdjustClanMemberGrade_Parms parms;

	if ( !psfReqAdjustClanMemberGrade )
		psfReqAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( psfReqAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanUserList ( struct FString ClanName )
{
	static UFunction* psfReqClanUserList = 0;
	UBTTcpHandler_execsfReqClanUserList_Parms parms;

	if ( !psfReqClanUserList )
		psfReqClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanUserList" );

	parms.ClanName = ClanName;
	this->ProcessEvent ( psfReqClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSerachClan ( unsigned char SearchType, struct FString Keyword, unsigned char ClanStatus, unsigned char ClanRegion, int ReqPage )
{
	static UFunction* psfReqSerachClan = 0;
	UBTTcpHandler_execsfReqSerachClan_Parms parms;

	if ( !psfReqSerachClan )
		psfReqSerachClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSerachClan" );

	parms.SearchType = SearchType;
	parms.Keyword = Keyword;
	parms.ClanStatus = ClanStatus;
	parms.ClanRegion = ClanRegion;
	parms.ReqPage = ReqPage;
	this->ProcessEvent ( psfReqSerachClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvJoinClan ( int UserIdx, struct FString CharName, struct FString Message )
{
	static UFunction* psfReqRecvJoinClan = 0;
	UBTTcpHandler_execsfReqRecvJoinClan_Parms parms;

	if ( !psfReqRecvJoinClan )
		psfReqRecvJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvJoinClan" );

	parms.UserIdx = UserIdx;
	parms.CharName = CharName;
	parms.Message = Message;
	this->ProcessEvent ( psfReqRecvJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqJoinClan ( struct FString ClanName, struct FString ClanManagerName, struct FString Message )
{
	static UFunction* psfReqJoinClan = 0;
	UBTTcpHandler_execsfReqJoinClan_Parms parms;

	if ( !psfReqJoinClan )
		psfReqJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqJoinClan" );

	parms.ClanName = ClanName;
	parms.ClanManagerName = ClanManagerName;
	parms.Message = Message;
	this->ProcessEvent ( psfReqJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* psfReqRecvClanInvite = 0;
	UBTTcpHandler_execsfReqRecvClanInvite_Parms parms;

	if ( !psfReqRecvClanInvite )
		psfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( psfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqInviteClan ( struct FString CharName, struct FString InviteMsg )
{
	static UFunction* psfReqInviteClan = 0;
	UBTTcpHandler_execsfReqInviteClan_Parms parms;

	if ( !psfReqInviteClan )
		psfReqInviteClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqInviteClan" );

	parms.CharName = CharName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( psfReqInviteClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClanInfo ( struct FString ClanName )
{
	static UFunction* psfReqClanInfo = 0;
	UBTTcpHandler_execsfReqClanInfo_Parms parms;

	if ( !psfReqClanInfo )
		psfReqClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClanInfo" );

	parms.ClanName = ClanName;
	this->ProcessEvent ( psfReqClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqCreateClan ( struct FString ClanName, struct FString ClanURL, struct FString ClanIntro, struct FString ClanKeyword, unsigned char ClanRegion )
{
	static UFunction* psfReqCreateClan = 0;
	UBTTcpHandler_execsfReqCreateClan_Parms parms;

	if ( !psfReqCreateClan )
		psfReqCreateClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqCreateClan" );

	parms.ClanName = ClanName;
	parms.ClanURL = ClanURL;
	parms.ClanIntro = ClanIntro;
	parms.ClanKeyword = ClanKeyword;
	parms.ClanRegion = ClanRegion;
	this->ProcessEvent ( psfReqCreateClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqDupCheckClanName ( struct FString ClanNam )
{
	static UFunction* psfReqDupCheckClanName = 0;
	UBTTcpHandler_execsfReqDupCheckClanName_Parms parms;

	if ( !psfReqDupCheckClanName )
		psfReqDupCheckClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqDupCheckClanName" );

	parms.ClanNam = ClanNam;
	this->ProcessEvent ( psfReqDupCheckClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSellShopItemInfo ( struct FBtrDouble UniqueItemID, int Count )
{
	static UFunction* psfReqSellShopItemInfo = 0;
	UBTTcpHandler_execsfReqSellShopItemInfo_Parms parms;

	if ( !psfReqSellShopItemInfo )
		psfReqSellShopItemInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSellShopItemInfo" );

	parms.UniqueItemID = UniqueItemID;
	parms.Count = Count;
	this->ProcessEvent ( psfReqSellShopItemInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGameOverEnd (  )
{
	static UFunction* psfReqGameOverEnd = 0;
	UBTTcpHandler_execsfReqGameOverEnd_Parms parms;

	if ( !psfReqGameOverEnd )
		psfReqGameOverEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGameOverEnd" );

	this->ProcessEvent ( psfReqGameOverEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqAuctionItemListCount ( unsigned char Section, unsigned char Classfy, int ItemType, int ItemGrade )
{
	static UFunction* psfReqAuctionItemListCount = 0;
	UBTTcpHandler_execsfReqAuctionItemListCount_Parms parms;

	if ( !psfReqAuctionItemListCount )
		psfReqAuctionItemListCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqAuctionItemListCount" );

	parms.Section = Section;
	parms.Classfy = Classfy;
	parms.ItemType = ItemType;
	parms.ItemGrade = ItemGrade;
	this->ProcessEvent ( psfReqAuctionItemListCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqServerTime (  )
{
	static UFunction* psfReqServerTime = 0;
	UBTTcpHandler_execsfReqServerTime_Parms parms;

	if ( !psfReqServerTime )
		psfReqServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqServerTime" );

	this->ProcessEvent ( psfReqServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqEntryQSlotIDList ( int UserNum )
{
	static UFunction* psfReqEntryQSlotIDList = 0;
	UBTTcpHandler_execsfReqEntryQSlotIDList_Parms parms;

	if ( !psfReqEntryQSlotIDList )
		psfReqEntryQSlotIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqEntryQSlotIDList" );

	parms.UserNum = UserNum;
	this->ProcessEvent ( psfReqEntryQSlotIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqEntryQSlotUniqueIDList ( int UserNum )
{
	static UFunction* psfReqEntryQSlotUniqueIDList = 0;
	UBTTcpHandler_execsfReqEntryQSlotUniqueIDList_Parms parms;

	if ( !psfReqEntryQSlotUniqueIDList )
		psfReqEntryQSlotUniqueIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqEntryQSlotUniqueIDList" );

	parms.UserNum = UserNum;
	this->ProcessEvent ( psfReqEntryQSlotUniqueIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqAuctionBidding ( int UniqueID, int BiddingPrice )
{
	static UFunction* psfReqAuctionBidding = 0;
	UBTTcpHandler_execsfReqAuctionBidding_Parms parms;

	if ( !psfReqAuctionBidding )
		psfReqAuctionBidding = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqAuctionBidding" );

	parms.UniqueID = UniqueID;
	parms.BiddingPrice = BiddingPrice;
	this->ProcessEvent ( psfReqAuctionBidding, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqAuctionInstantlyBuying ( int UniqueID )
{
	static UFunction* psfReqAuctionInstantlyBuying = 0;
	UBTTcpHandler_execsfReqAuctionInstantlyBuying_Parms parms;

	if ( !psfReqAuctionInstantlyBuying )
		psfReqAuctionInstantlyBuying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqAuctionInstantlyBuying" );

	parms.UniqueID = UniqueID;
	this->ProcessEvent ( psfReqAuctionInstantlyBuying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqAuctionItemList ( unsigned char Section, struct FString Keyword, int ItemRank, unsigned char ItemClassfy, unsigned char IsAvailable, int PageNum, int Count, int SortOpt )
{
	static UFunction* psfReqAuctionItemList = 0;
	UBTTcpHandler_execsfReqAuctionItemList_Parms parms;

	if ( !psfReqAuctionItemList )
		psfReqAuctionItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqAuctionItemList" );

	parms.Section = Section;
	parms.Keyword = Keyword;
	parms.ItemRank = ItemRank;
	parms.ItemClassfy = ItemClassfy;
	parms.IsAvailable = IsAvailable;
	parms.PageNum = PageNum;
	parms.Count = Count;
	parms.SortOpt = SortOpt;
	this->ProcessEvent ( psfReqAuctionItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqAuctionMyItemCancel ( int UniqueID )
{
	static UFunction* psfReqAuctionMyItemCancel = 0;
	UBTTcpHandler_execsfReqAuctionMyItemCancel_Parms parms;

	if ( !psfReqAuctionMyItemCancel )
		psfReqAuctionMyItemCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqAuctionMyItemCancel" );

	parms.UniqueID = UniqueID;
	this->ProcessEvent ( psfReqAuctionMyItemCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqAuctionMyItemRegister ( struct FBtrDouble UniqueID, int ItemCount, int BeginPrice, int PeriodHour, int InstantlyBuyingPrice )
{
	static UFunction* psfReqAuctionMyItemRegister = 0;
	UBTTcpHandler_execsfReqAuctionMyItemRegister_Parms parms;

	if ( !psfReqAuctionMyItemRegister )
		psfReqAuctionMyItemRegister = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqAuctionMyItemRegister" );

	parms.UniqueID = UniqueID;
	parms.ItemCount = ItemCount;
	parms.BeginPrice = BeginPrice;
	parms.PeriodHour = PeriodHour;
	parms.InstantlyBuyingPrice = InstantlyBuyingPrice;
	this->ProcessEvent ( psfReqAuctionMyItemRegister, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqMyMoney (  )
{
	static UFunction* psfReqMyMoney = 0;
	UBTTcpHandler_execsfReqMyMoney_Parms parms;

	if ( !psfReqMyMoney )
		psfReqMyMoney = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqMyMoney" );

	this->ProcessEvent ( psfReqMyMoney, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqUpdateQSlot ( int QSlotID, struct FString QSlotName, struct FBtrDouble MWItemID, struct FBtrDouble PistolItemID, struct FBtrDouble TWItemID1, struct FBtrDouble TWItemID2, int Skill1, int Skill2, int Skill3, int Skill4 )
{
	static UFunction* psfReqUpdateQSlot = 0;
	UBTTcpHandler_execsfReqUpdateQSlot_Parms parms;

	if ( !psfReqUpdateQSlot )
		psfReqUpdateQSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqUpdateQSlot" );

	parms.QSlotID = QSlotID;
	parms.QSlotName = QSlotName;
	parms.MWItemID = MWItemID;
	parms.PistolItemID = PistolItemID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1 = Skill1;
	parms.Skill2 = Skill2;
	parms.Skill3 = Skill3;
	parms.Skill4 = Skill4;
	this->ProcessEvent ( psfReqUpdateQSlot, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqQSlotList (  )
{
	static UFunction* psfReqQSlotList = 0;
	UBTTcpHandler_execsfReqQSlotList_Parms parms;

	if ( !psfReqQSlotList )
		psfReqQSlotList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqQSlotList" );

	this->ProcessEvent ( psfReqQSlotList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRepairItem ( class TArray< struct FBtrDouble > UniqueItemcID )
{
	static UFunction* psfReqRepairItem = 0;
	UBTTcpHandler_execsfReqRepairItem_Parms parms;

	if ( !psfReqRepairItem )
		psfReqRepairItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRepairItem" );

	parms.UniqueItemcID = UniqueItemcID;
	this->ProcessEvent ( psfReqRepairItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRepairCost ( class TArray< struct FBtrDouble > UniqueItemID )
{
	static UFunction* psfReqRepairCost = 0;
	UBTTcpHandler_execsfReqRepairCost_Parms parms;

	if ( !psfReqRepairCost )
		psfReqRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRepairCost" );

	parms.UniqueItemID = UniqueItemID;
	this->ProcessEvent ( psfReqRepairCost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqUpdateWeaponDurability ( int TotalPlayTime, class TArray< int > OwnerID, class TArray< int > Number, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > UsingSec, class TArray< int > UsingRoundInSD )
{
	static UFunction* psfReqUpdateWeaponDurability = 0;
	UBTTcpHandler_execsfReqUpdateWeaponDurability_Parms parms;

	if ( !psfReqUpdateWeaponDurability )
		psfReqUpdateWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqUpdateWeaponDurability" );

	parms.TotalPlayTime = TotalPlayTime;
	parms.OwnerID = OwnerID;
	parms.Number = Number;
	parms.UniqueItemID = UniqueItemID;
	parms.UsingSec = UsingSec;
	parms.UsingRoundInSD = UsingRoundInSD;
	this->ProcessEvent ( psfReqUpdateWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqModifyWeapon ( struct FBtrDouble UniqueID, int AddPartID, int PaintID )
{
	static UFunction* psfReqModifyWeapon = 0;
	UBTTcpHandler_execsfReqModifyWeapon_Parms parms;

	if ( !psfReqModifyWeapon )
		psfReqModifyWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqModifyWeapon" );

	parms.UniqueID = UniqueID;
	parms.AddPartID = AddPartID;
	parms.PaintID = PaintID;
	this->ProcessEvent ( psfReqModifyWeapon, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSellShopItem ( struct FBtrDouble ItemUniqueID, int Count )
{
	static UFunction* psfReqSellShopItem = 0;
	UBTTcpHandler_execsfReqSellShopItem_Parms parms;

	if ( !psfReqSellShopItem )
		psfReqSellShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSellShopItem" );

	parms.ItemUniqueID = ItemUniqueID;
	parms.Count = Count;
	this->ProcessEvent ( psfReqSellShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqBuyShopItem ( int ItemID, struct FBtrDouble ItemUniqueID, unsigned char BuyOption1, unsigned char BuyOption2 )
{
	static UFunction* psfReqBuyShopItem = 0;
	UBTTcpHandler_execsfReqBuyShopItem_Parms parms;

	if ( !psfReqBuyShopItem )
		psfReqBuyShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqBuyShopItem" );

	parms.ItemID = ItemID;
	parms.ItemUniqueID = ItemUniqueID;
	parms.BuyOption1 = BuyOption1;
	parms.BuyOption2 = BuyOption2;
	this->ProcessEvent ( psfReqBuyShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqShopItemList (  )
{
	static UFunction* psfReqShopItemList = 0;
	UBTTcpHandler_execsfReqShopItemList_Parms parms;

	if ( !psfReqShopItemList )
		psfReqShopItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqShopItemList" );

	this->ProcessEvent ( psfReqShopItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqForceGameOver (  )
{
	static UFunction* psfReqForceGameOver = 0;
	UBTTcpHandler_execsfReqForceGameOver_Parms parms;

	if ( !psfReqForceGameOver )
		psfReqForceGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqForceGameOver" );

	this->ProcessEvent ( psfReqForceGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGiveSkill (  )
{
	static UFunction* psfReqGiveSkill = 0;
	UBTTcpHandler_execsfReqGiveSkill_Parms parms;

	if ( !psfReqGiveSkill )
		psfReqGiveSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGiveSkill" );

	this->ProcessEvent ( psfReqGiveSkill, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyExpiredItemIDs (  )
{
	static UFunction* psfReqNotifyExpiredItemIDs = 0;
	UBTTcpHandler_execsfReqNotifyExpiredItemIDs_Parms parms;

	if ( !psfReqNotifyExpiredItemIDs )
		psfReqNotifyExpiredItemIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyExpiredItemIDs" );

	this->ProcessEvent ( psfReqNotifyExpiredItemIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyExpiredSkillIDs (  )
{
	static UFunction* psfReqNotifyExpiredSkillIDs = 0;
	UBTTcpHandler_execsfReqNotifyExpiredSkillIDs_Parms parms;

	if ( !psfReqNotifyExpiredSkillIDs )
		psfReqNotifyExpiredSkillIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyExpiredSkillIDs" );

	this->ProcessEvent ( psfReqNotifyExpiredSkillIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyChangedSkillState (  )
{
	static UFunction* psfReqNotifyChangedSkillState = 0;
	UBTTcpHandler_execsfReqNotifyChangedSkillState_Parms parms;

	if ( !psfReqNotifyChangedSkillState )
		psfReqNotifyChangedSkillState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyChangedSkillState" );

	this->ProcessEvent ( psfReqNotifyChangedSkillState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyChangedItemState (  )
{
	static UFunction* psfReqNotifyChangedItemState = 0;
	UBTTcpHandler_execsfReqNotifyChangedItemState_Parms parms;

	if ( !psfReqNotifyChangedItemState )
		psfReqNotifyChangedItemState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyChangedItemState" );

	this->ProcessEvent ( psfReqNotifyChangedItemState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqConfirmSkillChanged (  )
{
	static UFunction* psfReqConfirmSkillChanged = 0;
	UBTTcpHandler_execsfReqConfirmSkillChanged_Parms parms;

	if ( !psfReqConfirmSkillChanged )
		psfReqConfirmSkillChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqConfirmSkillChanged" );

	this->ProcessEvent ( psfReqConfirmSkillChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqEquipSkill ( int SkillID, int SkillUniqueID, unsigned char NewSlotPosition )
{
	static UFunction* psfReqEquipSkill = 0;
	UBTTcpHandler_execsfReqEquipSkill_Parms parms;

	if ( !psfReqEquipSkill )
		psfReqEquipSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqEquipSkill" );

	parms.SkillID = SkillID;
	parms.SkillUniqueID = SkillUniqueID;
	parms.NewSlotPosition = NewSlotPosition;
	this->ProcessEvent ( psfReqEquipSkill, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqUserSkillList ( int UserID )
{
	static UFunction* psfReqUserSkillList = 0;
	UBTTcpHandler_execsfReqUserSkillList_Parms parms;

	if ( !psfReqUserSkillList )
		psfReqUserSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqUserSkillList" );

	parms.UserID = UserID;
	this->ProcessEvent ( psfReqUserSkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqDelMemo ( class TArray< int > MemoIdx, unsigned char Type )
{
	static UFunction* psfReqDelMemo = 0;
	UBTTcpHandler_execsfReqDelMemo_Parms parms;

	if ( !psfReqDelMemo )
		psfReqDelMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqDelMemo" );

	parms.MemoIdx = MemoIdx;
	parms.Type = Type;
	this->ProcessEvent ( psfReqDelMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqReadMemo ( int MemoIdx )
{
	static UFunction* psfReqReadMemo = 0;
	UBTTcpHandler_execsfReqReadMemo_Parms parms;

	if ( !psfReqReadMemo )
		psfReqReadMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqReadMemo" );

	parms.MemoIdx = MemoIdx;
	this->ProcessEvent ( psfReqReadMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqMemoList ( unsigned char Type, unsigned char MemoType )
{
	static UFunction* psfReqMemoList = 0;
	UBTTcpHandler_execsfReqMemoList_Parms parms;

	if ( !psfReqMemoList )
		psfReqMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqMemoList" );

	parms.Type = Type;
	parms.MemoType = MemoType;
	this->ProcessEvent ( psfReqMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvMemo ( struct FString cnameFrom, unsigned char MemoType )
{
	static UFunction* psfReqRecvMemo = 0;
	UBTTcpHandler_execsfReqRecvMemo_Parms parms;

	if ( !psfReqRecvMemo )
		psfReqRecvMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvMemo" );

	parms.cnameFrom = cnameFrom;
	parms.MemoType = MemoType;
	this->ProcessEvent ( psfReqRecvMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSendMemo ( class TArray< struct FString > cnames, struct FString Msg, int ItemUID )
{
	static UFunction* psfReqSendMemo = 0;
	UBTTcpHandler_execsfReqSendMemo_Parms parms;

	if ( !psfReqSendMemo )
		psfReqSendMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSendMemo" );

	parms.cnames = cnames;
	parms.Msg = Msg;
	parms.ItemUID = ItemUID;
	this->ProcessEvent ( psfReqSendMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvChatWispher ( struct FString CharnameFrom, struct FString Message )
{
	static UFunction* psfReqRecvChatWispher = 0;
	UBTTcpHandler_execsfReqRecvChatWispher_Parms parms;

	if ( !psfReqRecvChatWispher )
		psfReqRecvChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvChatWispher" );

	parms.CharnameFrom = CharnameFrom;
	parms.Message = Message;
	this->ProcessEvent ( psfReqRecvChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChatWispher ( struct FString CharName, struct FString Message )
{
	static UFunction* psfReqChatWispher = 0;
	UBTTcpHandler_execsfReqChatWispher_Parms parms;

	if ( !psfReqChatWispher )
		psfReqChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChatWispher" );

	parms.CharName = CharName;
	parms.Message = Message;
	this->ProcessEvent ( psfReqChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRemoveBlockUserList ( struct FString CharName )
{
	static UFunction* psfReqRemoveBlockUserList = 0;
	UBTTcpHandler_execsfReqRemoveBlockUserList_Parms parms;

	if ( !psfReqRemoveBlockUserList )
		psfReqRemoveBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRemoveBlockUserList" );

	parms.CharName = CharName;
	this->ProcessEvent ( psfReqRemoveBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqAddBlockUserList ( struct FString CharName )
{
	static UFunction* psfReqAddBlockUserList = 0;
	UBTTcpHandler_execsfReqAddBlockUserList_Parms parms;

	if ( !psfReqAddBlockUserList )
		psfReqAddBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqAddBlockUserList" );

	parms.CharName = CharName;
	this->ProcessEvent ( psfReqAddBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqBlockUserList (  )
{
	static UFunction* psfReqBlockUserList = 0;
	UBTTcpHandler_execsfReqBlockUserList_Parms parms;

	if ( !psfReqBlockUserList )
		psfReqBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqBlockUserList" );

	this->ProcessEvent ( psfReqBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqCompleteFriendInvite ( struct FString CharnameToBeInvited, unsigned char IsPermit )
{
	static UFunction* psfReqCompleteFriendInvite = 0;
	UBTTcpHandler_execsfReqCompleteFriendInvite_Parms parms;

	if ( !psfReqCompleteFriendInvite )
		psfReqCompleteFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqCompleteFriendInvite" );

	parms.CharnameToBeInvited = CharnameToBeInvited;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( psfReqCompleteFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqConfirmFriendInvite ( int ReqUserID, struct FString ReqedCharname, unsigned char IsPermit )
{
	static UFunction* psfReqConfirmFriendInvite = 0;
	UBTTcpHandler_execsfReqConfirmFriendInvite_Parms parms;

	if ( !psfReqConfirmFriendInvite )
		psfReqConfirmFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqConfirmFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqedCharname = ReqedCharname;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( psfReqConfirmFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRecvFriendInvite ( int ReqUserID, struct FString ReqCharname, struct FString InviteMsg )
{
	static UFunction* psfReqRecvFriendInvite = 0;
	UBTTcpHandler_execsfReqRecvFriendInvite_Parms parms;

	if ( !psfReqRecvFriendInvite )
		psfReqRecvFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRecvFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqCharname = ReqCharname;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( psfReqRecvFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSendFriendInvite ( int InviteUserID, struct FString InviteName, struct FString InviteMsg )
{
	static UFunction* psfReqSendFriendInvite = 0;
	UBTTcpHandler_execsfReqSendFriendInvite_Parms parms;

	if ( !psfReqSendFriendInvite )
		psfReqSendFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSendFriendInvite" );

	parms.InviteUserID = InviteUserID;
	parms.InviteName = InviteName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( psfReqSendFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChatNormal ( struct FString Message )
{
	static UFunction* psfReqChatNormal = 0;
	UBTTcpHandler_execsfReqChatNormal_Parms parms;

	if ( !psfReqChatNormal )
		psfReqChatNormal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChatNormal" );

	parms.Message = Message;
	this->ProcessEvent ( psfReqChatNormal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqDummy ( int DelayCheck )
{
	static UFunction* psfReqDummy = 0;
	UBTTcpHandler_execsfReqDummy_Parms parms;

	if ( !psfReqDummy )
		psfReqDummy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqDummy" );

	parms.DelayCheck = DelayCheck;
	this->ProcessEvent ( psfReqDummy, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqConfirmItemChanged (  )
{
	static UFunction* psfReqConfirmItemChanged = 0;
	UBTTcpHandler_execsfReqConfirmItemChanged_Parms parms;

	if ( !psfReqConfirmItemChanged )
		psfReqConfirmItemChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqConfirmItemChanged" );

	this->ProcessEvent ( psfReqConfirmItemChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqEquipItem ( int ItemID, struct FBtrDouble UniqueID, int SlotPosition )
{
	static UFunction* psfReqEquipItem = 0;
	UBTTcpHandler_execsfReqEquipItem_Parms parms;

	if ( !psfReqEquipItem )
		psfReqEquipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqEquipItem" );

	parms.ItemID = ItemID;
	parms.UniqueID = UniqueID;
	parms.SlotPosition = SlotPosition;
	this->ProcessEvent ( psfReqEquipItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqItemList ( int UID )
{
	static UFunction* psfReqItemList = 0;
	UBTTcpHandler_execsfReqItemList_Parms parms;

	if ( !psfReqItemList )
		psfReqItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqItemList" );

	parms.UID = UID;
	this->ProcessEvent ( psfReqItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqEntrySkillList ( int UserID )
{
	static UFunction* psfReqEntrySkillList = 0;
	UBTTcpHandler_execsfReqEntrySkillList_Parms parms;

	if ( !psfReqEntrySkillList )
		psfReqEntrySkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqEntrySkillList" );

	parms.UserID = UserID;
	this->ProcessEvent ( psfReqEntrySkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqEntryItemList ( int UserID )
{
	static UFunction* psfReqEntryItemList = 0;
	UBTTcpHandler_execsfReqEntryItemList_Parms parms;

	if ( !psfReqEntryItemList )
		psfReqEntryItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqEntryItemList" );

	parms.UserID = UserID;
	this->ProcessEvent ( psfReqEntryItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChangeUserState ( unsigned char NewState, unsigned char CheckPlaying )
{
	static UFunction* psfReqChangeUserState = 0;
	UBTTcpHandler_execsfReqChangeUserState_Parms parms;

	if ( !psfReqChangeUserState )
		psfReqChangeUserState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChangeUserState" );

	parms.NewState = NewState;
	parms.CheckPlaying = CheckPlaying;
	this->ProcessEvent ( psfReqChangeUserState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqExteriorRoomState ( int RoomNumber, unsigned char RoomState )
{
	static UFunction* psfReqExteriorRoomState = 0;
	UBTTcpHandler_execsfReqExteriorRoomState_Parms parms;

	if ( !psfReqExteriorRoomState )
		psfReqExteriorRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqExteriorRoomState" );

	parms.RoomNumber = RoomNumber;
	parms.RoomState = RoomState;
	this->ProcessEvent ( psfReqExteriorRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqExteriorRoomUserCount ( int RoomNumber, int RoomUserCount )
{
	static UFunction* psfReqExteriorRoomUserCount = 0;
	UBTTcpHandler_execsfReqExteriorRoomUserCount_Parms parms;

	if ( !psfReqExteriorRoomUserCount )
		psfReqExteriorRoomUserCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqExteriorRoomUserCount" );

	parms.RoomNumber = RoomNumber;
	parms.RoomUserCount = RoomUserCount;
	this->ProcessEvent ( psfReqExteriorRoomUserCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqExteriorRoomInfo ( int SP, int RoomNumber, unsigned char IsPW, struct FString RoomName, struct FString MapName, struct FString ModeName, int MapNum, int ModeNum, unsigned char IsTeamBalance, int MaxUserCount, int RoomUserCount, unsigned char RoomState, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum )
{
	static UFunction* psfReqExteriorRoomInfo = 0;
	UBTTcpHandler_execsfReqExteriorRoomInfo_Parms parms;

	if ( !psfReqExteriorRoomInfo )
		psfReqExteriorRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqExteriorRoomInfo" );

	parms.SP = SP;
	parms.RoomNumber = RoomNumber;
	parms.IsPW = IsPW;
	parms.RoomName = RoomName;
	parms.MapName = MapName;
	parms.ModeName = ModeName;
	parms.MapNum = MapNum;
	parms.ModeNum = ModeNum;
	parms.IsTeamBalance = IsTeamBalance;
	parms.MaxUserCount = MaxUserCount;
	parms.RoomUserCount = RoomUserCount;
	parms.RoomState = RoomState;
	parms.BotDifficult = BotDifficult;
	parms.WeaponLimit = WeaponLimit;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( psfReqExteriorRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGetBooty ( int RoomNumber )
{
	static UFunction* psfReqGetBooty = 0;
	UBTTcpHandler_execsfReqGetBooty_Parms parms;

	if ( !psfReqGetBooty )
		psfReqGetBooty = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGetBooty" );

	parms.RoomNumber = RoomNumber;
	this->ProcessEvent ( psfReqGetBooty, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSetUserBootySeedValue ( int UserID, int SeedValue )
{
	static UFunction* psfReqSetUserBootySeedValue = 0;
	UBTTcpHandler_execsfReqSetUserBootySeedValue_Parms parms;

	if ( !psfReqSetUserBootySeedValue )
		psfReqSetUserBootySeedValue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSetUserBootySeedValue" );

	parms.UserID = UserID;
	parms.SeedValue = SeedValue;
	this->ProcessEvent ( psfReqSetUserBootySeedValue, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChangeRoomSetting ( struct FGameRoomInfo RoomInfo )
{
	static UFunction* psfReqChangeRoomSetting = 0;
	UBTTcpHandler_execsfReqChangeRoomSetting_Parms parms;

	if ( !psfReqChangeRoomSetting )
		psfReqChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChangeRoomSetting" );

	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( psfReqChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyLevelUp ( int LevelUpUserID, int Level, int Exp, class TArray< int > ItemID, class TArray< int > PartID )
{
	static UFunction* psfReqNotifyLevelUp = 0;
	UBTTcpHandler_execsfReqNotifyLevelUp_Parms parms;

	if ( !psfReqNotifyLevelUp )
		psfReqNotifyLevelUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyLevelUp" );

	parms.LevelUpUserID = LevelUpUserID;
	parms.Level = Level;
	parms.Exp = Exp;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( psfReqNotifyLevelUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqClientUdpInfoList ( int GameNum )
{
	static UFunction* psfReqClientUdpInfoList = 0;
	UBTTcpHandler_execsfReqClientUdpInfoList_Parms parms;

	if ( !psfReqClientUdpInfoList )
		psfReqClientUdpInfoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqClientUdpInfoList" );

	parms.GameNum = GameNum;
	this->ProcessEvent ( psfReqClientUdpInfoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRegisterMyUdpInfo ( unsigned char IsHost, struct FString IP, int Port, unsigned char Intervention, struct FString HostInnerIP, int HostInnerPort )
{
	static UFunction* psfReqRegisterMyUdpInfo = 0;
	UBTTcpHandler_execsfReqRegisterMyUdpInfo_Parms parms;

	if ( !psfReqRegisterMyUdpInfo )
		psfReqRegisterMyUdpInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRegisterMyUdpInfo" );

	parms.IsHost = IsHost;
	parms.IP = IP;
	parms.Port = Port;
	parms.Intervention = Intervention;
	parms.HostInnerIP = HostInnerIP;
	parms.HostInnerPort = HostInnerPort;
	this->ProcessEvent ( psfReqRegisterMyUdpInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqNotifyClientJoinTime ( int JoinedClientID )
{
	static UFunction* psfReqNotifyClientJoinTime = 0;
	UBTTcpHandler_execsfReqNotifyClientJoinTime_Parms parms;

	if ( !psfReqNotifyClientJoinTime )
		psfReqNotifyClientJoinTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqNotifyClientJoinTime" );

	parms.JoinedClientID = JoinedClientID;
	this->ProcessEvent ( psfReqNotifyClientJoinTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqDisconnectGame (  )
{
	static UFunction* psfReqDisconnectGame = 0;
	UBTTcpHandler_execsfReqDisconnectGame_Parms parms;

	if ( !psfReqDisconnectGame )
		psfReqDisconnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqDisconnectGame" );

	this->ProcessEvent ( psfReqDisconnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqConnectGame (  )
{
	static UFunction* psfReqConnectGame = 0;
	UBTTcpHandler_execsfReqConnectGame_Parms parms;

	if ( !psfReqConnectGame )
		psfReqConnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqConnectGame" );

	this->ProcessEvent ( psfReqConnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRelayServerOff (  )
{
	static UFunction* psfReqRelayServerOff = 0;
	UBTTcpHandler_execsfReqRelayServerOff_Parms parms;

	if ( !psfReqRelayServerOff )
		psfReqRelayServerOff = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRelayServerOff" );

	this->ProcessEvent ( psfReqRelayServerOff, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRelayServerOn ( struct FString RelayServerIP, int RelayServerPortNum )
{
	static UFunction* psfReqRelayServerOn = 0;
	UBTTcpHandler_execsfReqRelayServerOn_Parms parms;

	if ( !psfReqRelayServerOn )
		psfReqRelayServerOn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRelayServerOn" );

	parms.RelayServerIP = RelayServerIP;
	parms.RelayServerPortNum = RelayServerPortNum;
	this->ProcessEvent ( psfReqRelayServerOn, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGameOver ( int UID, int GameRoomNumber )
{
	static UFunction* psfReqGameOver = 0;
	UBTTcpHandler_execsfReqGameOver_Parms parms;

	if ( !psfReqGameOver )
		psfReqGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGameOver" );

	parms.UID = UID;
	parms.GameRoomNumber = GameRoomNumber;
	this->ProcessEvent ( psfReqGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqIsGameRoomPlaying ( int GameRoomNum )
{
	static UFunction* psfReqIsGameRoomPlaying = 0;
	UBTTcpHandler_execsfReqIsGameRoomPlaying_Parms parms;

	if ( !psfReqIsGameRoomPlaying )
		psfReqIsGameRoomPlaying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqIsGameRoomPlaying" );

	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( psfReqIsGameRoomPlaying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChangeRoomMaxNum ( int GameNum, int UID, int Number, int TeamNum )
{
	static UFunction* psfReqChangeRoomMaxNum = 0;
	UBTTcpHandler_execsfReqChangeRoomMaxNum_Parms parms;

	if ( !psfReqChangeRoomMaxNum )
		psfReqChangeRoomMaxNum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChangeRoomMaxNum" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.Number = Number;
	parms.TeamNum = TeamNum;
	this->ProcessEvent ( psfReqChangeRoomMaxNum, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqUpdateScore ( int GameNumber, class TArray< int > UserIDs, class TArray< int > Kills, class TArray< int > Assists, class TArray< int > Deaths, class TArray< int > EXPs, class TArray< int > Points, class TArray< int > Scores, class TArray< int > TeamScores, class TArray< int > RoundJoin, class TArray< int > TimeJoin, int Playtime, unsigned char GameEndType, class TArray< struct FString > UserNames )
{
	static UFunction* psfReqUpdateScore = 0;
	UBTTcpHandler_execsfReqUpdateScore_Parms parms;

	if ( !psfReqUpdateScore )
		psfReqUpdateScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqUpdateScore" );

	parms.GameNumber = GameNumber;
	parms.UserIDs = UserIDs;
	parms.Kills = Kills;
	parms.Assists = Assists;
	parms.Deaths = Deaths;
	parms.EXPs = EXPs;
	parms.Points = Points;
	parms.Scores = Scores;
	parms.TeamScores = TeamScores;
	parms.RoundJoin = RoundJoin;
	parms.TimeJoin = TimeJoin;
	parms.Playtime = Playtime;
	parms.GameEndType = GameEndType;
	parms.UserNames = UserNames;
	this->ProcessEvent ( psfReqUpdateScore, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqStartGame ( int GameNumber )
{
	static UFunction* psfReqStartGame = 0;
	UBTTcpHandler_execsfReqStartGame_Parms parms;

	if ( !psfReqStartGame )
		psfReqStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqStartGame" );

	parms.GameNumber = GameNumber;
	this->ProcessEvent ( psfReqStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGameHostInfo ( int GameNumber )
{
	static UFunction* psfReqGameHostInfo = 0;
	UBTTcpHandler_execsfReqGameHostInfo_Parms parms;

	if ( !psfReqGameHostInfo )
		psfReqGameHostInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGameHostInfo" );

	parms.GameNumber = GameNumber;
	this->ProcessEvent ( psfReqGameHostInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqIsHostAvailable ( struct FString MyIp, int CPUGrade, int RamGrade, int VGAGrade, int VGARam )
{
	static UFunction* psfReqIsHostAvailable = 0;
	UBTTcpHandler_execsfReqIsHostAvailable_Parms parms;

	if ( !psfReqIsHostAvailable )
		psfReqIsHostAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqIsHostAvailable" );

	parms.MyIp = MyIp;
	parms.CPUGrade = CPUGrade;
	parms.RamGrade = RamGrade;
	parms.VGAGrade = VGAGrade;
	parms.VGARam = VGARam;
	this->ProcessEvent ( psfReqIsHostAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChangeTeam ( int TeamNum )
{
	static UFunction* psfReqChangeTeam = 0;
	UBTTcpHandler_execsfReqChangeTeam_Parms parms;

	if ( !psfReqChangeTeam )
		psfReqChangeTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChangeTeam" );

	parms.TeamNum = TeamNum;
	this->ProcessEvent ( psfReqChangeTeam, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChangeRoomOwner ( int GameNum, int UID, int NewOwner )
{
	static UFunction* psfReqChangeRoomOwner = 0;
	UBTTcpHandler_execsfReqChangeRoomOwner_Parms parms;

	if ( !psfReqChangeRoomOwner )
		psfReqChangeRoomOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChangeRoomOwner" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.NewOwner = NewOwner;
	this->ProcessEvent ( psfReqChangeRoomOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChangeGameMode ( int GameNum, int UID, struct FString GameMode, unsigned char GameModeNum )
{
	static UFunction* psfReqChangeGameMode = 0;
	UBTTcpHandler_execsfReqChangeGameMode_Parms parms;

	if ( !psfReqChangeGameMode )
		psfReqChangeGameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChangeGameMode" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.GameMode = GameMode;
	parms.GameModeNum = GameModeNum;
	this->ProcessEvent ( psfReqChangeGameMode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqBanUser ( int GameNum, int UID, int BanUID )
{
	static UFunction* psfReqBanUser = 0;
	UBTTcpHandler_execsfReqBanUser_Parms parms;

	if ( !psfReqBanUser )
		psfReqBanUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqBanUser" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.BanUID = BanUID;
	this->ProcessEvent ( psfReqBanUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqSelectMap ( int GameNum, int UID, struct FString MapName )
{
	static UFunction* psfReqSelectMap = 0;
	UBTTcpHandler_execsfReqSelectMap_Parms parms;

	if ( !psfReqSelectMap )
		psfReqSelectMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqSelectMap" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.MapName = MapName;
	this->ProcessEvent ( psfReqSelectMap, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqGameRoomInfo ( int GameNum, int UID )
{
	static UFunction* psfReqGameRoomInfo = 0;
	UBTTcpHandler_execsfReqGameRoomInfo_Parms parms;

	if ( !psfReqGameRoomInfo )
		psfReqGameRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqGameRoomInfo" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	this->ProcessEvent ( psfReqGameRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqCreateGameRoom ( struct FGameRoomInfo NetRoomInfo )
{
	static UFunction* psfReqCreateGameRoom = 0;
	UBTTcpHandler_execsfReqCreateGameRoom_Parms parms;

	if ( !psfReqCreateGameRoom )
		psfReqCreateGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqCreateGameRoom" );

	parms.NetRoomInfo = NetRoomInfo;
	this->ProcessEvent ( psfReqCreateGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqLeaveRoom ( int Num )
{
	static UFunction* psfReqLeaveRoom = 0;
	UBTTcpHandler_execsfReqLeaveRoom_Parms parms;

	if ( !psfReqLeaveRoom )
		psfReqLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqLeaveRoom" );

	parms.Num = Num;
	this->ProcessEvent ( psfReqLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRoomUserList ( int GameNum )
{
	static UFunction* psfReqRoomUserList = 0;
	UBTTcpHandler_execsfReqRoomUserList_Parms parms;

	if ( !psfReqRoomUserList )
		psfReqRoomUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRoomUserList" );

	parms.GameNum = GameNum;
	this->ProcessEvent ( psfReqRoomUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqEnterRoom ( int GameNum, struct FString Password, unsigned char RoomEnterType )
{
	static UFunction* psfReqEnterRoom = 0;
	UBTTcpHandler_execsfReqEnterRoom_Parms parms;

	if ( !psfReqEnterRoom )
		psfReqEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqEnterRoom" );

	parms.GameNum = GameNum;
	parms.Password = Password;
	parms.RoomEnterType = RoomEnterType;
	this->ProcessEvent ( psfReqEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqRoomList ( int id, int StartIndex, int Count )
{
	static UFunction* psfReqRoomList = 0;
	UBTTcpHandler_execsfReqRoomList_Parms parms;

	if ( !psfReqRoomList )
		psfReqRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqRoomList" );

	parms.id = id;
	parms.StartIndex = StartIndex;
	parms.Count = Count;
	this->ProcessEvent ( psfReqRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChannelUserList ( int id, int StartIndex, int Count )
{
	static UFunction* psfReqChannelUserList = 0;
	UBTTcpHandler_execsfReqChannelUserList_Parms parms;

	if ( !psfReqChannelUserList )
		psfReqChannelUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChannelUserList" );

	parms.id = id;
	parms.StartIndex = StartIndex;
	parms.Count = Count;
	this->ProcessEvent ( psfReqChannelUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqLeaveChannel ( int id )
{
	static UFunction* psfReqLeaveChannel = 0;
	UBTTcpHandler_execsfReqLeaveChannel_Parms parms;

	if ( !psfReqLeaveChannel )
		psfReqLeaveChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqLeaveChannel" );

	parms.id = id;
	this->ProcessEvent ( psfReqLeaveChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqEnterChannel ( int id )
{
	static UFunction* psfReqEnterChannel = 0;
	UBTTcpHandler_execsfReqEnterChannel_Parms parms;

	if ( !psfReqEnterChannel )
		psfReqEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqEnterChannel" );

	parms.id = id;
	this->ProcessEvent ( psfReqEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqChannelList ( int bChannelType )
{
	static UFunction* psfReqChannelList = 0;
	UBTTcpHandler_execsfReqChannelList_Parms parms;

	if ( !psfReqChannelList )
		psfReqChannelList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqChannelList" );

	parms.bChannelType = bChannelType;
	this->ProcessEvent ( psfReqChannelList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqFriendList (  )
{
	static UFunction* psfReqFriendList = 0;
	UBTTcpHandler_execsfReqFriendList_Parms parms;

	if ( !psfReqFriendList )
		psfReqFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqFriendList" );

	this->ProcessEvent ( psfReqFriendList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqCharInfo (  )
{
	static UFunction* psfReqCharInfo = 0;
	UBTTcpHandler_execsfReqCharInfo_Parms parms;

	if ( !psfReqCharInfo )
		psfReqCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqCharInfo" );

	this->ProcessEvent ( psfReqCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqLogin2 ( struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, struct FString Guid, int UserType )
{
	static UFunction* psfReqLogin2 = 0;
	UBTTcpHandler_execsfReqLogin2_Parms parms;

	if ( !psfReqLogin2 )
		psfReqLogin2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqLogin2" );

	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.Guid = Guid;
	parms.UserType = UserType;
	this->ProcessEvent ( psfReqLogin2, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqStartNatDiag ( struct FString Server1Addr, int Server1Port, struct FString Server2Addr, int Server2Port )
{
	static UFunction* psfReqStartNatDiag = 0;
	UBTTcpHandler_execsfReqStartNatDiag_Parms parms;

	if ( !psfReqStartNatDiag )
		psfReqStartNatDiag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqStartNatDiag" );

	parms.Server1Addr = Server1Addr;
	parms.Server1Port = Server1Port;
	parms.Server2Addr = Server2Addr;
	parms.Server2Port = Server2Port;
	this->ProcessEvent ( psfReqStartNatDiag, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqForceLogoutByOwner (  )
{
	static UFunction* psfReqForceLogoutByOwner = 0;
	UBTTcpHandler_execsfReqForceLogoutByOwner_Parms parms;

	if ( !psfReqForceLogoutByOwner )
		psfReqForceLogoutByOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqForceLogoutByOwner" );

	this->ProcessEvent ( psfReqForceLogoutByOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqLogin ( struct FString id )
{
	static UFunction* psfReqLogin = 0;
	UBTTcpHandler_execsfReqLogin_Parms parms;

	if ( !psfReqLogin )
		psfReqLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqLogin" );

	parms.id = id;
	this->ProcessEvent ( psfReqLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::sfReqHash ( int HashField0, int HashField1, int HashField2, int HashField3 )
{
	static UFunction* psfReqHash = 0;
	UBTTcpHandler_execsfReqHash_Parms parms;

	if ( !psfReqHash )
		psfReqHash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.sfReqHash" );

	parms.HashField0 = HashField0;
	parms.HashField1 = HashField1;
	parms.HashField2 = HashField2;
	parms.HashField3 = HashField3;
	this->ProcessEvent ( psfReqHash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckMyEquipedQSlotList ( class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWUniqueID, class TArray< int > MWItemID, class TArray< int > MWPartID, class TArray< int > MWPaintID, class TArray< struct FBtrDouble > PistolUniqueID, class TArray< int > PistolItemID, class TArray< int > PistolPartID, class TArray< int > PistolPaintID, class TArray< struct FBtrDouble > TW1UniqueID, class TArray< int > TWItemID1, class TArray< struct FBtrDouble > TW2UniqueID, class TArray< int > TWItemID2, class TArray< int > Skill1ID, class TArray< int > Skill2ID, class TArray< int > Skill3ID, class TArray< int > Skill4ID, int Result )
{
	static UFunction* prfAckMyEquipedQSlotList = 0;
	UBTTcpHandler_execrfAckMyEquipedQSlotList_Parms parms;

	if ( !prfAckMyEquipedQSlotList )
		prfAckMyEquipedQSlotList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckMyEquipedQSlotList" );

	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWUniqueID = MWUniqueID;
	parms.MWItemID = MWItemID;
	parms.MWPartID = MWPartID;
	parms.MWPaintID = MWPaintID;
	parms.PistolUniqueID = PistolUniqueID;
	parms.PistolItemID = PistolItemID;
	parms.PistolPartID = PistolPartID;
	parms.PistolPaintID = PistolPaintID;
	parms.TW1UniqueID = TW1UniqueID;
	parms.TWItemID1 = TWItemID1;
	parms.TW2UniqueID = TW2UniqueID;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1ID = Skill1ID;
	parms.Skill2ID = Skill2ID;
	parms.Skill3ID = Skill3ID;
	parms.Skill4ID = Skill4ID;
	parms.Result = Result;
	this->ProcessEvent ( prfAckMyEquipedQSlotList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckMyEquipedSkillList ( class TArray< int > SkillIDs, class TArray< int > SlotPositions, int Result )
{
	static UFunction* prfAckMyEquipedSkillList = 0;
	UBTTcpHandler_execrfAckMyEquipedSkillList_Parms parms;

	if ( !prfAckMyEquipedSkillList )
		prfAckMyEquipedSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckMyEquipedSkillList" );

	parms.SkillIDs = SkillIDs;
	parms.SlotPositions = SlotPositions;
	parms.Result = Result;
	this->ProcessEvent ( prfAckMyEquipedSkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::rfAckMyEquipedItemList ( class TArray< int > ItemIDs, class TArray< int > SlotPositions, class TArray< int > AddPartsID, class TArray< int > PaintID, class TArray< struct FBtrDouble > UniqueID, int Result )
{
	static UFunction* prfAckMyEquipedItemList = 0;
	UBTTcpHandler_execrfAckMyEquipedItemList_Parms parms;

	if ( !prfAckMyEquipedItemList )
		prfAckMyEquipedItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.rfAckMyEquipedItemList" );

	parms.ItemIDs = ItemIDs;
	parms.SlotPositions = SlotPositions;
	parms.AddPartsID = AddPartsID;
	parms.PaintID = PaintID;
	parms.UniqueID = UniqueID;
	parms.Result = Result;
	this->ProcessEvent ( prfAckMyEquipedItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTTcpHandler::endTutorial (  )
{
	static UFunction* pendTutorial = 0;
	UBTTcpHandler_execendTutorial_Parms parms;

	if ( !pendTutorial )
		pendTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.endTutorial" );

	this->ProcessEvent ( pendTutorial, &parms, NULL );

}*/

/*void UBTTcpHandler::OnPageRoomLobbyInited (  )
{
	static UFunction* pOnPageRoomLobbyInited = 0;
	UBTTcpHandler_execOnPageRoomLobbyInited_Parms parms;

	if ( !pOnPageRoomLobbyInited )
		pOnPageRoomLobbyInited = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.OnPageRoomLobbyInited" );

	this->ProcessEvent ( pOnPageRoomLobbyInited, &parms, NULL );

}*/

/*void UBTTcpHandler::BeginTutorialCreateRoom (  )
{
	static UFunction* pBeginTutorialCreateRoom = 0;
	UBTTcpHandler_execBeginTutorialCreateRoom_Parms parms;

	if ( !pBeginTutorialCreateRoom )
		pBeginTutorialCreateRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.BeginTutorialCreateRoom" );

	this->ProcessEvent ( pBeginTutorialCreateRoom, &parms, NULL );

}*/

/*void UBTTcpHandler::SetupTutorialRoomInfo ( struct FString MapName )
{
	static UFunction* pSetupTutorialRoomInfo = 0;
	UBTTcpHandler_execSetupTutorialRoomInfo_Parms parms;

	if ( !pSetupTutorialRoomInfo )
		pSetupTutorialRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.SetupTutorialRoomInfo" );

	parms.MapName = MapName;
	this->ProcessEvent ( pSetupTutorialRoomInfo, &parms, NULL );

}*/

/*void UBTTcpHandler::BeginTutorial ( struct FString MapName )
{
	static UFunction* pBeginTutorial = 0;
	UBTTcpHandler_execBeginTutorial_Parms parms;

	if ( !pBeginTutorial )
		pBeginTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.BeginTutorial" );

	parms.MapName = MapName;
	this->ProcessEvent ( pBeginTutorial, &parms, NULL );

}*/

/*void UBTTcpHandler::OnReqSuccessStartGame ( int Step )
{
	static UFunction* pOnReqSuccessStartGame = 0;
	UBTTcpHandler_execOnReqSuccessStartGame_Parms parms;

	if ( !pOnReqSuccessStartGame )
		pOnReqSuccessStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.OnReqSuccessStartGame" );

	parms.Step = Step;
	this->ProcessEvent ( pOnReqSuccessStartGame, &parms, NULL );

}*/

/*void UBTTcpHandler::OnError ( int ErrCode )
{
	static UFunction* pOnError = 0;
	UBTTcpHandler_execOnError_Parms parms;

	if ( !pOnError )
		pOnError = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.OnError" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnError, &parms, NULL );

}*/

/*void UBTTcpHandler::OnClose ( int ErrCode )
{
	static UFunction* pOnClose = 0;
	UBTTcpHandler_execOnClose_Parms parms;

	if ( !pOnClose )
		pOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.OnClose" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnClose, &parms, NULL );

}*/

/*void UBTTcpHandler::OnConnect ( int ErrCode )
{
	static UFunction* pOnConnect = 0;
	UBTTcpHandler_execOnConnect_Parms parms;

	if ( !pOnConnect )
		pOnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnConnect, &parms, NULL );

}*/

/*void UBTTcpHandler::eventCreated (  )
{
	static UFunction* pCreated = 0;
	UBTTcpHandler_eventCreated_Parms parms;

	if ( !pCreated )
		pCreated = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.Created" );

	this->ProcessEvent ( pCreated, &parms, NULL );

}*/

/*bool UBTTcpHandler::Close (  )
{
	static UFunction* pClose = 0;
	UBTTcpHandler_execClose_Parms parms;

	if ( !pClose )
		pClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.Close" );

	this->ProcessEvent ( pClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::Connect ( struct FString sIpaddr, int nPort )
{
	static UFunction* pConnect = 0;
	UBTTcpHandler_execConnect_Parms parms;

	if ( !pConnect )
		pConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.Connect" );

	parms.sIpaddr = sIpaddr;
	parms.nPort = nPort;
	this->ProcessEvent ( pConnect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandler::InitNetwork (  )
{
	static UFunction* pInitNetwork = 0;
	UBTTcpHandler_execInitNetwork_Parms parms;

	if ( !pInitNetwork )
		pInitNetwork = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandler.InitNetwork" );

	this->ProcessEvent ( pInitNetwork, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLogo::ShowNotify (  )
{
	static UFunction* pShowNotify = 0;
	UBTPageLogo_execShowNotify_Parms parms;

	if ( !pShowNotify )
		pShowNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.ShowNotify" );

	this->ProcessEvent ( pShowNotify, &parms, NULL );

}*/

/*bool UBTPageLogo::rfAckEventNotify ( int Type )
{
	static UFunction* prfAckEventNotify = 0;
	UBTPageLogo_execrfAckEventNotify_Parms parms;

	if ( !prfAckEventNotify )
		prfAckEventNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.rfAckEventNotify" );

	parms.Type = Type;
	this->ProcessEvent ( prfAckEventNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::rfAckClientChecksum ( int Result )
{
	static UFunction* prfAckClientChecksum = 0;
	UBTPageLogo_execrfAckClientChecksum_Parms parms;

	if ( !prfAckClientChecksum )
		prfAckClientChecksum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.rfAckClientChecksum" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckClientChecksum, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::rfAckClientChallenge ( struct FString Key1, struct FBtrDouble Key2 )
{
	static UFunction* prfAckClientChallenge = 0;
	UBTPageLogo_execrfAckClientChallenge_Parms parms;

	if ( !prfAckClientChallenge )
		prfAckClientChallenge = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.rfAckClientChallenge" );

	parms.Key1 = Key1;
	parms.Key2 = Key2;
	this->ProcessEvent ( prfAckClientChallenge, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTPageLogo_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageLogo_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageLogo_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::Exit_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pExit_OnOK = 0;
	UBTPageLogo_execExit_OnOK_Parms parms;

	if ( !pExit_OnOK )
		pExit_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.Exit_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pExit_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::ForceDisconnect_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pForceDisconnect_OnOK = 0;
	UBTPageLogo_execForceDisconnect_OnOK_Parms parms;

	if ( !pForceDisconnect_OnOK )
		pForceDisconnect_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.ForceDisconnect_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pForceDisconnect_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::rfAckLoginWithGlobal ( int Result )
{
	static UFunction* prfAckLoginWithGlobal = 0;
	UBTPageLogo_execrfAckLoginWithGlobal_Parms parms;

	if ( !prfAckLoginWithGlobal )
		prfAckLoginWithGlobal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.rfAckLoginWithGlobal" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithGlobal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::rfAckLoginWithThailand ( int Result )
{
	static UFunction* prfAckLoginWithThailand = 0;
	UBTPageLogo_execrfAckLoginWithThailand_Parms parms;

	if ( !prfAckLoginWithThailand )
		prfAckLoginWithThailand = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.rfAckLoginWithThailand" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithThailand, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::rfAckLoginWithWZAuth ( int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType )
{
	static UFunction* prfAckLoginWithWZAuth = 0;
	UBTPageLogo_execrfAckLoginWithWZAuth_Parms parms;

	if ( !prfAckLoginWithWZAuth )
		prfAckLoginWithWZAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.rfAckLoginWithWZAuth" );

	parms.Result = Result;
	parms.wzp_AccountType = wzp_AccountType;
	parms.wzp_IsBlock = wzp_IsBlock;
	parms.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	parms.ChannelType = ChannelType;
	this->ProcessEvent ( prfAckLoginWithWZAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::rfAckLoginWithTencentAuth ( int Result, unsigned char tc_AccountType, unsigned char tc_IsBlock )
{
	static UFunction* prfAckLoginWithTencentAuth = 0;
	UBTPageLogo_execrfAckLoginWithTencentAuth_Parms parms;

	if ( !prfAckLoginWithTencentAuth )
		prfAckLoginWithTencentAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.rfAckLoginWithTencentAuth" );

	parms.Result = Result;
	parms.tc_AccountType = tc_AccountType;
	parms.tc_IsBlock = tc_IsBlock;
	this->ProcessEvent ( prfAckLoginWithTencentAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::Exit_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pExit_OnClick = 0;
	UBTPageLogo_execExit_OnClick_Parms parms;

	if ( !pExit_OnClick )
		pExit_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.Exit_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pExit_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo::Internal_KeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pInternal_KeyEvent = 0;
	UBTPageLogo_execInternal_KeyEvent_Parms parms;

	if ( !pInternal_KeyEvent )
		pInternal_KeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.Internal_KeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternal_KeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageLogo::LabelLogo_Decrease_OnTimer ( class UGUIComponent* Sender )
{
	static UFunction* pLabelLogo_Decrease_OnTimer = 0;
	UBTPageLogo_execLabelLogo_Decrease_OnTimer_Parms parms;

	if ( !pLabelLogo_Decrease_OnTimer )
		pLabelLogo_Decrease_OnTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.LabelLogo_Decrease_OnTimer" );

	parms.Sender = Sender;
	this->ProcessEvent ( pLabelLogo_Decrease_OnTimer, &parms, NULL );

}*/

/*void UBTPageLogo::LabelLogo_Delay_OnTimer ( class UGUIComponent* Sender )
{
	static UFunction* pLabelLogo_Delay_OnTimer = 0;
	UBTPageLogo_execLabelLogo_Delay_OnTimer_Parms parms;

	if ( !pLabelLogo_Delay_OnTimer )
		pLabelLogo_Delay_OnTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.LabelLogo_Delay_OnTimer" );

	parms.Sender = Sender;
	this->ProcessEvent ( pLabelLogo_Delay_OnTimer, &parms, NULL );

}*/

/*void UBTPageLogo::LabelLogo_Increase_OnTimer ( class UGUIComponent* Sender )
{
	static UFunction* pLabelLogo_Increase_OnTimer = 0;
	UBTPageLogo_execLabelLogo_Increase_OnTimer_Parms parms;

	if ( !pLabelLogo_Increase_OnTimer )
		pLabelLogo_Increase_OnTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.LabelLogo_Increase_OnTimer" );

	parms.Sender = Sender;
	this->ProcessEvent ( pLabelLogo_Increase_OnTimer, &parms, NULL );

}*/

/*void UBTPageLogo::SupportResolution (  )
{
	static UFunction* pSupportResolution = 0;
	UBTPageLogo_execSupportResolution_Parms parms;

	if ( !pSupportResolution )
		pSupportResolution = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.SupportResolution" );

	this->ProcessEvent ( pSupportResolution, &parms, NULL );

}*/

/*void UBTPageLogo::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageLogo_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTPageLogo::TcpLogin_OnConnect ( int ErrCode )
{
	static UFunction* pTcpLogin_OnConnect = 0;
	UBTPageLogo_execTcpLogin_OnConnect_Parms parms;

	if ( !pTcpLogin_OnConnect )
		pTcpLogin_OnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.TcpLogin_OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpLogin_OnConnect, &parms, NULL );

}*/

/*float UBTPageLogo::DegreeToRadian ( float Angle )
{
	static UFunction* pDegreeToRadian = 0;
	UBTPageLogo_execDegreeToRadian_Parms parms;

	if ( !pDegreeToRadian )
		pDegreeToRadian = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.DegreeToRadian" );

	parms.Angle = Angle;
	this->ProcessEvent ( pDegreeToRadian, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLogo::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageLogo_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageLogo::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageLogo_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*class UBTTcpLink_Login* UBTPageLogo::GetTcpLogin (  )
{
	static UFunction* pGetTcpLogin = 0;
	UBTPageLogo_execGetTcpLogin_Parms parms;

	if ( !pGetTcpLogin )
		pGetTcpLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo.GetTcpLogin" );

	this->ProcessEvent ( pGetTcpLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::rfAckLoginWithGlobal ( int Result )
{
	static UFunction* prfAckLoginWithGlobal = 0;
	UBTPageLogin_execrfAckLoginWithGlobal_Parms parms;

	if ( !prfAckLoginWithGlobal )
		prfAckLoginWithGlobal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.rfAckLoginWithGlobal" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithGlobal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::rfAckLoginWithThailand ( int Result )
{
	static UFunction* prfAckLoginWithThailand = 0;
	UBTPageLogin_execrfAckLoginWithThailand_Parms parms;

	if ( !prfAckLoginWithThailand )
		prfAckLoginWithThailand = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.rfAckLoginWithThailand" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithThailand, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::rfAckLoginWithWZAuth ( int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType )
{
	static UFunction* prfAckLoginWithWZAuth = 0;
	UBTPageLogin_execrfAckLoginWithWZAuth_Parms parms;

	if ( !prfAckLoginWithWZAuth )
		prfAckLoginWithWZAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.rfAckLoginWithWZAuth" );

	parms.Result = Result;
	parms.wzp_AccountType = wzp_AccountType;
	parms.wzp_IsBlock = wzp_IsBlock;
	parms.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	parms.ChannelType = ChannelType;
	this->ProcessEvent ( prfAckLoginWithWZAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::rfAckLoginWithTencentAuth ( int Result, unsigned char tc_AccountType, unsigned char tc_IsBlock )
{
	static UFunction* prfAckLoginWithTencentAuth = 0;
	UBTPageLogin_execrfAckLoginWithTencentAuth_Parms parms;

	if ( !prfAckLoginWithTencentAuth )
		prfAckLoginWithTencentAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.rfAckLoginWithTencentAuth" );

	parms.Result = Result;
	parms.tc_AccountType = tc_AccountType;
	parms.tc_IsBlock = tc_IsBlock;
	this->ProcessEvent ( prfAckLoginWithTencentAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::rfAckCreateChar ( int Success, struct FString ErrMsg )
{
	static UFunction* prfAckCreateChar = 0;
	UBTPageLogin_execrfAckCreateChar_Parms parms;

	if ( !prfAckCreateChar )
		prfAckCreateChar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.rfAckCreateChar" );

	parms.Success = Success;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCreateChar, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::Disconnect_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pDisconnect_OnCancel = 0;
	UBTPageLogin_execDisconnect_OnCancel_Parms parms;

	if ( !pDisconnect_OnCancel )
		pDisconnect_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.Disconnect_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pDisconnect_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::Disconnect_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pDisconnect_OnOK = 0;
	UBTPageLogin_execDisconnect_OnOK_Parms parms;

	if ( !pDisconnect_OnOK )
		pDisconnect_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.Disconnect_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pDisconnect_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLogin::RequestProcessPreLoginUser (  )
{
	static UFunction* pRequestProcessPreLoginUser = 0;
	UBTPageLogin_execRequestProcessPreLoginUser_Parms parms;

	if ( !pRequestProcessPreLoginUser )
		pRequestProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.RequestProcessPreLoginUser" );

	this->ProcessEvent ( pRequestProcessPreLoginUser, &parms, NULL );

}*/

/*bool UBTPageLogin::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageLogin_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageLogin_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::rfAckLogin ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg )
{
	static UFunction* prfAckLogin = 0;
	UBTPageLogin_execrfAckLogin_Parms parms;

	if ( !prfAckLogin )
		prfAckLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.rfAckLogin" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::ButtionSettings_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtionSettings_OnClick = 0;
	UBTPageLogin_execButtionSettings_OnClick_Parms parms;

	if ( !pButtionSettings_OnClick )
		pButtionSettings_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.ButtionSettings_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtionSettings_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::ButtonQuit_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonQuit_OnClick = 0;
	UBTPageLogin_execButtonQuit_OnClick_Parms parms;

	if ( !pButtonQuit_OnClick )
		pButtonQuit_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.ButtonQuit_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonQuit_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::ButtonLogin_Ver1_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonLogin_Ver1_OnClick = 0;
	UBTPageLogin_execButtonLogin_Ver1_OnClick_Parms parms;

	if ( !pButtonLogin_Ver1_OnClick )
		pButtonLogin_Ver1_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.ButtonLogin_Ver1_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonLogin_Ver1_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::ButtonLogin_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonLogin_OnClick = 0;
	UBTPageLogin_execButtonLogin_OnClick_Parms parms;

	if ( !pButtonLogin_OnClick )
		pButtonLogin_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.ButtonLogin_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonLogin_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::SendLogin_Ver1 (  )
{
	static UFunction* pSendLogin_Ver1 = 0;
	UBTPageLogin_execSendLogin_Ver1_Parms parms;

	if ( !pSendLogin_Ver1 )
		pSendLogin_Ver1 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.SendLogin_Ver1" );

	this->ProcessEvent ( pSendLogin_Ver1, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLogin::Quit (  )
{
	static UFunction* pQuit = 0;
	UBTPageLogin_execQuit_Parms parms;

	if ( !pQuit )
		pQuit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.Quit" );

	this->ProcessEvent ( pQuit, &parms, NULL );

}*/

/*bool UBTPageLogin::internalKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pinternalKeyEvent = 0;
	UBTPageLogin_execinternalKeyEvent_Parms parms;

	if ( !pinternalKeyEvent )
		pinternalKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.internalKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pinternalKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageLogin::eventOpened ( class UGUIComponent* Sender )
{
	static UFunction* pOpened = 0;
	UBTPageLogin_eventOpened_Parms parms;

	if ( !pOpened )
		pOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.Opened" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOpened, &parms, NULL );

}*/

/*void UBTPageLogin::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageLogin_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageLogin::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageLogin_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*class UBTTcpLink_Login* UBTPageLogin::GetTcpLogin (  )
{
	static UFunction* pGetTcpLogin = 0;
	UBTPageLogin_execGetTcpLogin_Parms parms;

	if ( !pGetTcpLogin )
		pGetTcpLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.GetTcpLogin" );

	this->ProcessEvent ( pGetTcpLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::Edit_OnEnter ( class UGUIComponent* Sender, struct FString txt )
{
	static UFunction* pEdit_OnEnter = 0;
	UBTPageLogin_execEdit_OnEnter_Parms parms;

	if ( !pEdit_OnEnter )
		pEdit_OnEnter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.Edit_OnEnter" );

	parms.Sender = Sender;
	parms.txt = txt;
	this->ProcessEvent ( pEdit_OnEnter, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin::ButtonFontTest_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonFontTest_OnClick = 0;
	UBTPageLogin_execButtonFontTest_OnClick_Parms parms;

	if ( !pButtonFontTest_OnClick )
		pButtonFontTest_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.ButtonFontTest_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonFontTest_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLogin::Internal_OnRendered ( class UCanvas* C )
{
	static UFunction* pInternal_OnRendered = 0;
	UBTPageLogin_execInternal_OnRendered_Parms parms;

	if ( !pInternal_OnRendered )
		pInternal_OnRendered = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.Internal_OnRendered" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnRendered, &parms, NULL );

}*/

/*void UBTPageLogin::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageLogin_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTPageCharacterCreation::Internal_OnRendered ( class UCanvas* Canvas )
{
	static UFunction* pInternal_OnRendered = 0;
	UBTPageCharacterCreation_execInternal_OnRendered_Parms parms;

	if ( !pInternal_OnRendered )
		pInternal_OnRendered = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.Internal_OnRendered" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pInternal_OnRendered, &parms, NULL );

}*/

/*bool UBTPageCharacterCreation::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageCharacterCreation_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageCharacterCreation::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageCharacterCreation_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageCharacterCreation::Exit_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pExit_OnOK = 0;
	UBTPageCharacterCreation_execExit_OnOK_Parms parms;

	if ( !pExit_OnOK )
		pExit_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.Exit_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pExit_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageCharacterCreation::ForceDisconnect_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pForceDisconnect_OnOK = 0;
	UBTPageCharacterCreation_execForceDisconnect_OnOK_Parms parms;

	if ( !pForceDisconnect_OnOK )
		pForceDisconnect_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.ForceDisconnect_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pForceDisconnect_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageCharacterCreation::rfAckCreateChar ( int Success, struct FString ErrMsg )
{
	static UFunction* prfAckCreateChar = 0;
	UBTPageCharacterCreation_execrfAckCreateChar_Parms parms;

	if ( !prfAckCreateChar )
		prfAckCreateChar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.rfAckCreateChar" );

	parms.Success = Success;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCreateChar, &parms, NULL );

}*/

/*bool UBTPageCharacterCreation::ButtonConfirm_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonConfirm_OnClick = 0;
	UBTPageCharacterCreation_execButtonConfirm_OnClick_Parms parms;

	if ( !pButtonConfirm_OnClick )
		pButtonConfirm_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.ButtonConfirm_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonConfirm_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageCharacterCreation::ButtonRSA_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonRSA_OnClick = 0;
	UBTPageCharacterCreation_execButtonRSA_OnClick_Parms parms;

	if ( !pButtonRSA_OnClick )
		pButtonRSA_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.ButtonRSA_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonRSA_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageCharacterCreation::ButtonAF_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonAF_OnClick = 0;
	UBTPageCharacterCreation_execButtonAF_OnClick_Parms parms;

	if ( !pButtonAF_OnClick )
		pButtonAF_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.ButtonAF_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonAF_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageCharacterCreation::ButtonRR_OnRelease ( class UGUIComponent* Sender )
{
	static UFunction* pButtonRR_OnRelease = 0;
	UBTPageCharacterCreation_execButtonRR_OnRelease_Parms parms;

	if ( !pButtonRR_OnRelease )
		pButtonRR_OnRelease = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.ButtonRR_OnRelease" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonRR_OnRelease, &parms, NULL );

}*/

/*void UBTPageCharacterCreation::ButtonRR_OnPressed ( class UGUIComponent* Sender, bool bRepeat )
{
	static UFunction* pButtonRR_OnPressed = 0;
	UBTPageCharacterCreation_execButtonRR_OnPressed_Parms parms;

	if ( !pButtonRR_OnPressed )
		pButtonRR_OnPressed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.ButtonRR_OnPressed" );

	parms.Sender = Sender;
	parms.bRepeat = bRepeat;
	this->ProcessEvent ( pButtonRR_OnPressed, &parms, NULL );

}*/

/*void UBTPageCharacterCreation::ButtonLR_OnRelease ( class UGUIComponent* Sender )
{
	static UFunction* pButtonLR_OnRelease = 0;
	UBTPageCharacterCreation_execButtonLR_OnRelease_Parms parms;

	if ( !pButtonLR_OnRelease )
		pButtonLR_OnRelease = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.ButtonLR_OnRelease" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonLR_OnRelease, &parms, NULL );

}*/

/*void UBTPageCharacterCreation::ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat )
{
	static UFunction* pButtonLR_OnPressed = 0;
	UBTPageCharacterCreation_execButtonLR_OnPressed_Parms parms;

	if ( !pButtonLR_OnPressed )
		pButtonLR_OnPressed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.ButtonLR_OnPressed" );

	parms.Sender = Sender;
	parms.bRepeat = bRepeat;
	this->ProcessEvent ( pButtonLR_OnPressed, &parms, NULL );

}*/

/*void UBTPageCharacterCreation::CharRotByDrag (  )
{
	static UFunction* pCharRotByDrag = 0;
	UBTPageCharacterCreation_execCharRotByDrag_Parms parms;

	if ( !pCharRotByDrag )
		pCharRotByDrag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.CharRotByDrag" );

	this->ProcessEvent ( pCharRotByDrag, &parms, NULL );

}*/

/*bool UBTPageCharacterCreation::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTPageCharacterCreation_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UBTPageCharacterCreation::GetStringCount ( struct FString Text )
{
	static UFunction* pGetStringCount = 0;
	UBTPageCharacterCreation_execGetStringCount_Parms parms;

	if ( !pGetStringCount )
		pGetStringCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.GetStringCount" );

	parms.Text = Text;
	this->ProcessEvent ( pGetStringCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageCharacterCreation::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageCharacterCreation_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageCharacterCreation::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageCharacterCreation_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageCharacterCreation::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageCharacterCreation_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*class UBTTcpLink_Login* UBTPageCharacterCreation::GetTcpLogin (  )
{
	static UFunction* pGetTcpLogin = 0;
	UBTPageCharacterCreation_execGetTcpLogin_Parms parms;

	if ( !pGetTcpLogin )
		pGetTcpLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.GetTcpLogin" );

	this->ProcessEvent ( pGetTcpLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageCharacterCreation::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageCharacterCreation_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfNotifyClanLevelup ( struct FString ClanName, int Levelup )
{
	static UFunction* prfNotifyClanLevelup = 0;
	UBTPageLobby_execrfNotifyClanLevelup_Parms parms;

	if ( !prfNotifyClanLevelup )
		prfNotifyClanLevelup = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfNotifyClanLevelup" );

	parms.ClanName = ClanName;
	parms.Levelup = Levelup;
	this->ProcessEvent ( prfNotifyClanLevelup, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfNotifyNewClanName ( struct FString New_NickName )
{
	static UFunction* prfNotifyNewClanName = 0;
	UBTPageLobby_execrfNotifyNewClanName_Parms parms;

	if ( !prfNotifyNewClanName )
		prfNotifyNewClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfNotifyNewClanName" );

	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTPageLobby_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfNotifyNewNickName ( int Community_Type, struct FString Old_NickName, struct FString New_NickName )
{
	static UFunction* prfNotifyNewNickName = 0;
	UBTPageLobby_execrfNotifyNewNickName_Parms parms;

	if ( !prfNotifyNewNickName )
		prfNotifyNewNickName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfNotifyNewNickName" );

	parms.Community_Type = Community_Type;
	parms.Old_NickName = Old_NickName;
	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewNickName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckGetRankingInfoListEnd (  )
{
	static UFunction* prfAckGetRankingInfoListEnd = 0;
	UBTPageLobby_execrfAckGetRankingInfoListEnd_Parms parms;

	if ( !prfAckGetRankingInfoListEnd )
		prfAckGetRankingInfoListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckGetRankingInfoListEnd" );

	this->ProcessEvent ( prfAckGetRankingInfoListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckGetRankingInfoList ( int Result, unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckGetRankingInfoList = 0;
	UBTPageLobby_execrfAckGetRankingInfoList_Parms parms;

	if ( !prfAckGetRankingInfoList )
		prfAckGetRankingInfoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckGetRankingInfoList" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.CharName = CharName;
	parms.CharLevel = CharLevel;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Ranking_Accum = Ranking_Accum;
	parms.Ranking_Accum_Prev = Ranking_Accum_Prev;
	parms.Ranking_Accum_Exp = Ranking_Accum_Exp;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckGetRankingInfoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckGetRankingInfoListStart ( int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount )
{
	static UFunction* prfAckGetRankingInfoListStart = 0;
	UBTPageLobby_execrfAckGetRankingInfoListStart_Parms parms;

	if ( !prfAckGetRankingInfoListStart )
		prfAckGetRankingInfoListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckGetRankingInfoListStart" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckGetRankingInfoListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb )
{
	static UFunction* prfAckCharDetailInfo = 0;
	UBTPageLobby_execrfAckCharDetailInfo_Parms parms;

	if ( !prfAckCharDetailInfo )
		prfAckCharDetailInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckCharDetailInfo" );

	parms.MaxSerial = MaxSerial;
	parms.MaxScore = MaxScore;
	parms.MaxKill = MaxKill;
	parms.MaxAssist = MaxAssist;
	parms.Serial3 = Serial3;
	parms.Serial5 = Serial5;
	parms.Serial7 = Serial7;
	parms.Serial10 = Serial10;
	parms.Serial15 = Serial15;
	parms.AR = AR;
	parms.SMG = SMG;
	parms.SR = SR;
	parms.SW = SW;
	parms.Melee = Melee;
	parms.Grenade = Grenade;
	parms.FlashBang = FlashBang;
	parms.Foot = Foot;
	parms.AT4 = AT4;
	parms.MG = MG;
	parms.Fire = Fire;
	parms.RPG7 = RPG7;
	parms.TimeBomb = TimeBomb;
	parms.IcendiaryBomb = IcendiaryBomb;
	parms.ClusterBomb = ClusterBomb;
	parms.ByChopper = ByChopper;
	parms.Artillery = Artillery;
	parms.KillChopper = KillChopper;
	parms.FirstKill = FirstKill;
	parms.LastKill = LastKill;
	parms.AllKill = AllKill;
	parms.Dominate = Dominate;
	parms.InstallBomb = InstallBomb;
	parms.DefuseBomb = DefuseBomb;
	this->ProcessEvent ( prfAckCharDetailInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckFriendPosition ( int Result, struct FString TargetCharName, unsigned char ServerType, struct FString fServername, struct FString fServerShortName, struct FString fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, struct FString ChannelNickName, int GameRoomNum )
{
	static UFunction* prfAckFriendPosition = 0;
	UBTPageLobby_execrfAckFriendPosition_Parms parms;

	if ( !prfAckFriendPosition )
		prfAckFriendPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckFriendPosition" );

	parms.Result = Result;
	parms.TargetCharName = TargetCharName;
	parms.ServerType = ServerType;
	parms.fServername = fServername;
	parms.fServerShortName = fServerShortName;
	parms.fServerIP = fServerIP;
	parms.fServerPort = fServerPort;
	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.ChannelNum = ChannelNum;
	parms.ChannelNickName = ChannelNickName;
	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckFriendPosition, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckMoveToLobby ( unsigned char MessageType )
{
	static UFunction* prfAckMoveToLobby = 0;
	UBTPageLobby_execrfAckMoveToLobby_Parms parms;

	if ( !prfAckMoveToLobby )
		prfAckMoveToLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckMoveToLobby" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckMoveToLobby, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckLogOut ( unsigned char Result, unsigned char Reason )
{
	static UFunction* prfAckLogOut = 0;
	UBTPageLobby_execrfAckLogOut_Parms parms;

	if ( !prfAckLogOut )
		prfAckLogOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckLogOut" );

	parms.Result = Result;
	parms.Reason = Reason;
	this->ProcessEvent ( prfAckLogOut, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckClanMatch_PublicWaitRoomChanged ( int WaitRoomIdx, struct FString RoomName, int MapNum, int CurUserCount, int MaxUserCount, unsigned char Status, unsigned char IsPublic )
{
	static UFunction* prfAckClanMatch_PublicWaitRoomChanged = 0;
	UBTPageLobby_execrfAckClanMatch_PublicWaitRoomChanged_Parms parms;

	if ( !prfAckClanMatch_PublicWaitRoomChanged )
		prfAckClanMatch_PublicWaitRoomChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckClanMatch_PublicWaitRoomChanged" );

	parms.WaitRoomIdx = WaitRoomIdx;
	parms.RoomName = RoomName;
	parms.MapNum = MapNum;
	parms.CurUserCount = CurUserCount;
	parms.MaxUserCount = MaxUserCount;
	parms.Status = Status;
	parms.IsPublic = IsPublic;
	this->ProcessEvent ( prfAckClanMatch_PublicWaitRoomChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckClanMatch_EndPublicWaitRoomList (  )
{
	static UFunction* prfAckClanMatch_EndPublicWaitRoomList = 0;
	UBTPageLobby_execrfAckClanMatch_EndPublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_EndPublicWaitRoomList )
		prfAckClanMatch_EndPublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckClanMatch_EndPublicWaitRoomList" );

	this->ProcessEvent ( prfAckClanMatch_EndPublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckClanMatch_PublicWaitRoomList ( class TArray< int > WaitRoomIdx, class TArray< struct FString > LeaderName, class TArray< struct FString > RoomName, class TArray< int > MapNum, class TArray< int > CurUserCount, class TArray< int > MaxUserCount, class TArray< unsigned char > Status )
{
	static UFunction* prfAckClanMatch_PublicWaitRoomList = 0;
	UBTPageLobby_execrfAckClanMatch_PublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_PublicWaitRoomList )
		prfAckClanMatch_PublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckClanMatch_PublicWaitRoomList" );

	parms.WaitRoomIdx = WaitRoomIdx;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	parms.MapNum = MapNum;
	parms.CurUserCount = CurUserCount;
	parms.MaxUserCount = MaxUserCount;
	parms.Status = Status;
	this->ProcessEvent ( prfAckClanMatch_PublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckClanMatch_StartPublicWaitRoomList ( int Result, struct FString ErrMsg, int Count )
{
	static UFunction* prfAckClanMatch_StartPublicWaitRoomList = 0;
	UBTPageLobby_execrfAckClanMatch_StartPublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_StartPublicWaitRoomList )
		prfAckClanMatch_StartPublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckClanMatch_StartPublicWaitRoomList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Count = Count;
	this->ProcessEvent ( prfAckClanMatch_StartPublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckNotifyEndTutorial ( int UserID, struct FString CharName, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckNotifyEndTutorial = 0;
	UBTPageLobby_execrfAckNotifyEndTutorial_Parms parms;

	if ( !prfAckNotifyEndTutorial )
		prfAckNotifyEndTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckNotifyEndTutorial" );

	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckNotifyEndTutorial, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckNotifyStartTutorial ( int Result, int UserID )
{
	static UFunction* prfAckNotifyStartTutorial = 0;
	UBTPageLobby_execrfAckNotifyStartTutorial_Parms parms;

	if ( !prfAckNotifyStartTutorial )
		prfAckNotifyStartTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckNotifyStartTutorial" );

	parms.Result = Result;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckNotifyStartTutorial, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::RoomPingRefresh (  )
{
	static UFunction* pRoomPingRefresh = 0;
	UBTPageLobby_execRoomPingRefresh_Parms parms;

	if ( !pRoomPingRefresh )
		pRoomPingRefresh = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.RoomPingRefresh" );

	this->ProcessEvent ( pRoomPingRefresh, &parms, NULL );

}*/

/*bool UBTPageLobby::rfAckChangedRoomTitle_FromGM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangedRoomTitle_FromGM = 0;
	UBTPageLobby_execrfAckChangedRoomTitle_FromGM_Parms parms;

	if ( !prfAckChangedRoomTitle_FromGM )
		prfAckChangedRoomTitle_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckChangedRoomTitle_FromGM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangedRoomTitle_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::IsEnterableRoom ( bool bPass, int nUser, int nMaxUser )
{
	static UFunction* pIsEnterableRoom = 0;
	UBTPageLobby_execIsEnterableRoom_Parms parms;

	if ( !pIsEnterableRoom )
		pIsEnterableRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.IsEnterableRoom" );

	parms.bPass = bPass;
	parms.nUser = nUser;
	parms.nMaxUser = nMaxUser;
	this->ProcessEvent ( pIsEnterableRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckQuestGetAvailableEventList ( int Result, struct FString ErrMsg, class TArray< int > QuestID )
{
	static UFunction* prfAckQuestGetAvailableEventList = 0;
	UBTPageLobby_execrfAckQuestGetAvailableEventList_Parms parms;

	if ( !prfAckQuestGetAvailableEventList )
		prfAckQuestGetAvailableEventList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckQuestGetAvailableEventList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.QuestID = QuestID;
	this->ProcessEvent ( prfAckQuestGetAvailableEventList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::UpdateRecv_ClanInfo ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateRecv_ClanInfo = 0;
	UBTPageLobby_execUpdateRecv_ClanInfo_Parms parms;

	if ( !pUpdateRecv_ClanInfo )
		pUpdateRecv_ClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateRecv_ClanInfo" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateRecv_ClanInfo, &parms, NULL );

}*/

/*bool UBTPageLobby::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTPageLobby_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckAdjustClanMemberGrade ( int Result, struct FString ErrMsg, struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckAdjustClanMemberGrade = 0;
	UBTPageLobby_execrfAckAdjustClanMemberGrade_Parms parms;

	if ( !prfAckAdjustClanMemberGrade )
		prfAckAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckAdjustClanMemberGrade" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqRecvDeleteFriend ( int Result, struct FString FromCharName )
{
	static UFunction* prfReqRecvDeleteFriend = 0;
	UBTPageLobby_execrfReqRecvDeleteFriend_Parms parms;

	if ( !prfReqRecvDeleteFriend )
		prfReqRecvDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqRecvDeleteFriend" );

	parms.Result = Result;
	parms.FromCharName = FromCharName;
	this->ProcessEvent ( prfReqRecvDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckDeleteFriend ( int Result, class TArray< struct FString > FailedCharname )
{
	static UFunction* prfAckDeleteFriend = 0;
	UBTPageLobby_execrfAckDeleteFriend_Parms parms;

	if ( !prfAckDeleteFriend )
		prfAckDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckDeleteFriend" );

	parms.Result = Result;
	parms.FailedCharname = FailedCharname;
	this->ProcessEvent ( prfAckDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckChatWispher ( int Result, struct FString ErrMsg, struct FString ToCharName )
{
	static UFunction* prfAckChatWispher = 0;
	UBTPageLobby_execrfAckChatWispher_Parms parms;

	if ( !prfAckChatWispher )
		prfAckChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckChatWispher" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ToCharName = ToCharName;
	this->ProcessEvent ( prfAckChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckRecvJoinClanResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvJoinClanResult = 0;
	UBTPageLobby_execrfAckRecvJoinClanResult_Parms parms;

	if ( !prfAckRecvJoinClanResult )
		prfAckRecvJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckRecvJoinClanResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckJoinClanResult ( struct FString ClanName, unsigned char Permit, struct FString PermitCharName )
{
	static UFunction* prfAckJoinClanResult = 0;
	UBTPageLobby_execrfAckJoinClanResult_Parms parms;

	if ( !prfAckJoinClanResult )
		prfAckJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckJoinClanResult" );

	parms.ClanName = ClanName;
	parms.Permit = Permit;
	parms.PermitCharName = PermitCharName;
	this->ProcessEvent ( prfAckJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::RefreshPage_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pRefreshPage_OnOK = 0;
	UBTPageLobby_execRefreshPage_OnOK_Parms parms;

	if ( !pRefreshPage_OnOK )
		pRefreshPage_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.RefreshPage_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pRefreshPage_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowRequestApprovalClanHK_OnSuspend ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnSuspend = 0;
	UBTPageLobby_execBTWindowRequestApprovalClanHK_OnSuspend_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnSuspend )
		pBTWindowRequestApprovalClanHK_OnSuspend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowRequestApprovalClanHK_OnSuspend" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnSuspend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowRequestApprovalClanHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnCancel = 0;
	UBTPageLobby_execBTWindowRequestApprovalClanHK_OnCancel_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnCancel )
		pBTWindowRequestApprovalClanHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowRequestApprovalClanHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowRequestApprovalClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnOK = 0;
	UBTPageLobby_execBTWindowRequestApprovalClanHK_OnOK_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnOK )
		pBTWindowRequestApprovalClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowRequestApprovalClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqRecvJoinClan ( int UserIdx, struct FString CharName, struct FString Message )
{
	static UFunction* prfReqRecvJoinClan = 0;
	UBTPageLobby_execrfReqRecvJoinClan_Parms parms;

	if ( !prfReqRecvJoinClan )
		prfReqRecvJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqRecvJoinClan" );

	parms.UserIdx = UserIdx;
	parms.CharName = CharName;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckNotifyClanSecession ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyClanSecession = 0;
	UBTPageLobby_execrfAckNotifyClanSecession_Parms parms;

	if ( !prfAckNotifyClanSecession )
		prfAckNotifyClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckNotifyClanSecession" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckNotifyNewClanMember ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyNewClanMember = 0;
	UBTPageLobby_execrfAckNotifyNewClanMember_Parms parms;

	if ( !prfAckNotifyNewClanMember )
		prfAckNotifyNewClanMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckNotifyNewClanMember" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyNewClanMember, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTPageLobby_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckInviteClanResult ( struct FString CharName, unsigned char Permit, struct FString ClanNm )
{
	static UFunction* prfAckInviteClanResult = 0;
	UBTPageLobby_execrfAckInviteClanResult_Parms parms;

	if ( !prfAckInviteClanResult )
		prfAckInviteClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckInviteClanResult" );

	parms.CharName = CharName;
	parms.Permit = Permit;
	parms.ClanNm = ClanNm;
	this->ProcessEvent ( prfAckInviteClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckJoinClan ( int Result, struct FString ErrMsg, struct FString SpecificCharName, struct FString RealRecvCharName, unsigned char RealRecvCharClanGrade )
{
	static UFunction* prfAckJoinClan = 0;
	UBTPageLobby_execrfAckJoinClan_Parms parms;

	if ( !prfAckJoinClan )
		prfAckJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckJoinClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.SpecificCharName = SpecificCharName;
	parms.RealRecvCharName = RealRecvCharName;
	parms.RealRecvCharClanGrade = RealRecvCharClanGrade;
	this->ProcessEvent ( prfAckJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckInviteClan ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckInviteClan = 0;
	UBTPageLobby_execrfAckInviteClan_Parms parms;

	if ( !prfAckInviteClan )
		prfAckInviteClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckInviteClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckInviteClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowUserPersonalInfo_OnClanInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowUserPersonalInfo_OnClanInfo = 0;
	UBTPageLobby_execBTWindowUserPersonalInfo_OnClanInfo_Parms parms;

	if ( !pBTWindowUserPersonalInfo_OnClanInfo )
		pBTWindowUserPersonalInfo_OnClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowUserPersonalInfo_OnClanInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowUserPersonalInfo_OnClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowUserDetailInfoHK_OnClanInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowUserDetailInfoHK_OnClanInfo = 0;
	UBTPageLobby_execBTWindowUserDetailInfoHK_OnClanInfo_Parms parms;

	if ( !pBTWindowUserDetailInfoHK_OnClanInfo )
		pBTWindowUserDetailInfoHK_OnClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowUserDetailInfoHK_OnClanInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowUserDetailInfoHK_OnClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqClanCharPersonelIntro ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfReqClanCharPersonelIntro = 0;
	UBTPageLobby_execrfReqClanCharPersonelIntro_Parms parms;

	if ( !prfReqClanCharPersonelIntro )
		prfReqClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqClanCharPersonelIntro" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfReqClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTPageLobby_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageLobby_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::MoveToClanPage_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pMoveToClanPage_OnOK = 0;
	UBTPageLobby_execMoveToClanPage_OnOK_Parms parms;

	if ( !pMoveToClanPage_OnOK )
		pMoveToClanPage_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.MoveToClanPage_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pMoveToClanPage_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckCreateClan ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckCreateClan = 0;
	UBTPageLobby_execrfAckCreateClan_Parms parms;

	if ( !prfAckCreateClan )
		prfAckCreateClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckCreateClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckCreateClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckDupCheckClanName ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckDupCheckClanName = 0;
	UBTPageLobby_execrfAckDupCheckClanName_Parms parms;

	if ( !prfAckDupCheckClanName )
		prfAckDupCheckClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckDupCheckClanName" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckDupCheckClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckGameRoomInfo ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckGameRoomInfo = 0;
	UBTPageLobby_execrfAckGameRoomInfo_Parms parms;

	if ( !prfAckGameRoomInfo )
		prfAckGameRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckGameRoomInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckGameRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqCompleteFriendInvite ( struct FString CharnameToBeInvited, unsigned char IsPermit )
{
	static UFunction* prfReqCompleteFriendInvite = 0;
	UBTPageLobby_execrfReqCompleteFriendInvite_Parms parms;

	if ( !prfReqCompleteFriendInvite )
		prfReqCompleteFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqCompleteFriendInvite" );

	parms.CharnameToBeInvited = CharnameToBeInvited;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( prfReqCompleteFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckConfirmFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmFriendInvite = 0;
	UBTPageLobby_execrfAckConfirmFriendInvite_Parms parms;

	if ( !prfAckConfirmFriendInvite )
		prfAckConfirmFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckConfirmFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqRecvFriendInvite ( int ReqUserID, struct FString ReqCharname, struct FString InviteMsg )
{
	static UFunction* prfReqRecvFriendInvite = 0;
	UBTPageLobby_execrfReqRecvFriendInvite_Parms parms;

	if ( !prfReqRecvFriendInvite )
		prfReqRecvFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqRecvFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqCharname = ReqCharname;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckSendFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSendFriendInvite = 0;
	UBTPageLobby_execrfAckSendFriendInvite_Parms parms;

	if ( !prfAckSendFriendInvite )
		prfAckSendFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckSendFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSendFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqExteriorRoomOwnerInfo ( int RoomNum, struct FString OwnerName, struct FString OwnerIP )
{
	static UFunction* prfReqExteriorRoomOwnerInfo = 0;
	UBTPageLobby_execrfReqExteriorRoomOwnerInfo_Parms parms;

	if ( !prfReqExteriorRoomOwnerInfo )
		prfReqExteriorRoomOwnerInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqExteriorRoomOwnerInfo" );

	parms.RoomNum = RoomNum;
	parms.OwnerName = OwnerName;
	parms.OwnerIP = OwnerIP;
	this->ProcessEvent ( prfReqExteriorRoomOwnerInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqExteriorRoomState ( int RoomNumber, unsigned char RoomState )
{
	static UFunction* prfReqExteriorRoomState = 0;
	UBTPageLobby_execrfReqExteriorRoomState_Parms parms;

	if ( !prfReqExteriorRoomState )
		prfReqExteriorRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqExteriorRoomState" );

	parms.RoomNumber = RoomNumber;
	parms.RoomState = RoomState;
	this->ProcessEvent ( prfReqExteriorRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqExteriorRoomUserCount ( int RoomNumber, int RoomUserCount )
{
	static UFunction* prfReqExteriorRoomUserCount = 0;
	UBTPageLobby_execrfReqExteriorRoomUserCount_Parms parms;

	if ( !prfReqExteriorRoomUserCount )
		prfReqExteriorRoomUserCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqExteriorRoomUserCount" );

	parms.RoomNumber = RoomNumber;
	parms.RoomUserCount = RoomUserCount;
	this->ProcessEvent ( prfReqExteriorRoomUserCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfReqExteriorRoomInfo ( int SP, int RoomNumber, unsigned char IsPW, struct FString RoomName, struct FString MapName, struct FString ModeName, int MapNum, int ModeNum, unsigned char IsTeamBalance, int MaxUserCount, int RoomUserCount, unsigned char RoomState, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum )
{
	static UFunction* prfReqExteriorRoomInfo = 0;
	UBTPageLobby_execrfReqExteriorRoomInfo_Parms parms;

	if ( !prfReqExteriorRoomInfo )
		prfReqExteriorRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfReqExteriorRoomInfo" );

	parms.SP = SP;
	parms.RoomNumber = RoomNumber;
	parms.IsPW = IsPW;
	parms.RoomName = RoomName;
	parms.MapName = MapName;
	parms.ModeName = ModeName;
	parms.MapNum = MapNum;
	parms.ModeNum = ModeNum;
	parms.IsTeamBalance = IsTeamBalance;
	parms.MaxUserCount = MaxUserCount;
	parms.RoomUserCount = RoomUserCount;
	parms.RoomState = RoomState;
	parms.BotDifficult = BotDifficult;
	parms.WeaponLimit = WeaponLimit;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfReqExteriorRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::SetCharacterInfo ( struct FString ClanName, struct FCharInfo btCharInfo )
{
	static UFunction* pSetCharacterInfo = 0;
	UBTPageLobby_execSetCharacterInfo_Parms parms;

	if ( !pSetCharacterInfo )
		pSetCharacterInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.SetCharacterInfo" );

	parms.ClanName = ClanName;
	parms.btCharInfo = btCharInfo;
	this->ProcessEvent ( pSetCharacterInfo, &parms, NULL );

}*/

/*bool UBTPageLobby::rfAckGameRoomDestroy ( int GameRoomNum )
{
	static UFunction* prfAckGameRoomDestroy = 0;
	UBTPageLobby_execrfAckGameRoomDestroy_Parms parms;

	if ( !prfAckGameRoomDestroy )
		prfAckGameRoomDestroy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckGameRoomDestroy" );

	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckGameRoomDestroy, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckChannelUserList ( int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > UserID, class TArray< int > UserLevels, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, int Result, struct FString ErrMsg, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserList = 0;
	UBTPageLobby_execrfAckChannelUserList_Parms parms;

	if ( !prfAckChannelUserList )
		prfAckChannelUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckChannelUserList" );

	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.UserLevels = UserLevels;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::TryEnterBotMode (  )
{
	static UFunction* pTryEnterBotMode = 0;
	UBTPageLobby_execTryEnterBotMode_Parms parms;

	if ( !pTryEnterBotMode )
		pTryEnterBotMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.TryEnterBotMode" );

	this->ProcessEvent ( pTryEnterBotMode, &parms, NULL );

}*/

/*bool UBTPageLobby::rfAckRoomList ( class TArray< int > GameNum, class TArray< struct FString > Title, class TArray< struct FString > MapName, class TArray< int > MapNum, class TArray< unsigned char > UserCount, class TArray< unsigned char > MaxCount, class TArray< struct FString > ModeName, class TArray< int > ModeNum, class TArray< unsigned char > WeaponLimit, class TArray< unsigned char > IsTeamBalance, class TArray< unsigned char > Status, class TArray< struct FString > RoomOwnerIP, class TArray< int > GameMinute, class TArray< struct FString > RoomOwnerName, class TArray< unsigned char > IsSpecial, class TArray< unsigned char > IsPassword, class TArray< unsigned char > BotDifficult, class TArray< unsigned char > BotModeUserTeamNum )
{
	static UFunction* prfAckRoomList = 0;
	UBTPageLobby_execrfAckRoomList_Parms parms;

	if ( !prfAckRoomList )
		prfAckRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckRoomList" );

	parms.GameNum = GameNum;
	parms.Title = Title;
	parms.MapName = MapName;
	parms.MapNum = MapNum;
	parms.UserCount = UserCount;
	parms.MaxCount = MaxCount;
	parms.ModeName = ModeName;
	parms.ModeNum = ModeNum;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Status = Status;
	parms.RoomOwnerIP = RoomOwnerIP;
	parms.GameMinute = GameMinute;
	parms.RoomOwnerName = RoomOwnerName;
	parms.IsSpecial = IsSpecial;
	parms.IsPassword = IsPassword;
	parms.BotDifficult = BotDifficult;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfAckRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckRoomListStart ( int Result, int TotalCount, int Count, int StartIndex )
{
	static UFunction* prfAckRoomListStart = 0;
	UBTPageLobby_execrfAckRoomListStart_Parms parms;

	if ( !prfAckRoomListStart )
		prfAckRoomListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckRoomListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	this->ProcessEvent ( prfAckRoomListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckEnterRoom ( int GameNum, int OwnerID, int UID, struct FString UserID, int TeamNum, int Grade, struct FString UserIP, struct FString ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterRoom = 0;
	UBTPageLobby_execrfAckEnterRoom_Parms parms;

	if ( !prfAckEnterRoom )
		prfAckEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckEnterRoom" );

	parms.GameNum = GameNum;
	parms.OwnerID = OwnerID;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.Grade = Grade;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.Clan_Mark_Pattern = Clan_Mark_Pattern;
	parms.Clan_Mark_BG = Clan_Mark_BG;
	parms.Clan_Mark_BL = Clan_Mark_BL;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckLeaveChannel ( int Result, struct FString UserID, int UID )
{
	static UFunction* prfAckLeaveChannel = 0;
	UBTPageLobby_execrfAckLeaveChannel_Parms parms;

	if ( !prfAckLeaveChannel )
		prfAckLeaveChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckLeaveChannel" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.UID = UID;
	this->ProcessEvent ( prfAckLeaveChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::LobbyToServerSelection (  )
{
	static UFunction* pLobbyToServerSelection = 0;
	UBTPageLobby_execLobbyToServerSelection_Parms parms;

	if ( !pLobbyToServerSelection )
		pLobbyToServerSelection = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.LobbyToServerSelection" );

	this->ProcessEvent ( pLobbyToServerSelection, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::LobbyToServerSelection_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pLobbyToServerSelection_OnOK = 0;
	UBTPageLobby_execLobbyToServerSelection_OnOK_Parms parms;

	if ( !pLobbyToServerSelection_OnOK )
		pLobbyToServerSelection_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.LobbyToServerSelection_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pLobbyToServerSelection_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTPageLobby_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckCreateGameRoom ( int Result, struct FString ErrMsg, int UserID, struct FString RoomOwnerIP, struct FGameRoomInfo NetRoomInfo )
{
	static UFunction* prfAckCreateGameRoom = 0;
	UBTPageLobby_execrfAckCreateGameRoom_Parms parms;

	if ( !prfAckCreateGameRoom )
		prfAckCreateGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckCreateGameRoom" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.RoomOwnerIP = RoomOwnerIP;
	parms.NetRoomInfo = NetRoomInfo;
	this->ProcessEvent ( prfAckCreateGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::TeamChatLog ( struct FString cL )
{
	static UFunction* pTeamChatLog = 0;
	UBTPageLobby_execTeamChatLog_Parms parms;

	if ( !pTeamChatLog )
		pTeamChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.TeamChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog, &parms, NULL );

}*/

/*void UBTPageLobby::BroadCastItemChatLog ( struct FString cL )
{
	static UFunction* pBroadCastItemChatLog = 0;
	UBTPageLobby_execBroadCastItemChatLog_Parms parms;

	if ( !pBroadCastItemChatLog )
		pBroadCastItemChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BroadCastItemChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pBroadCastItemChatLog, &parms, NULL );

}*/

/*void UBTPageLobby::SystemChatLog ( struct FString cL )
{
	static UFunction* pSystemChatLog = 0;
	UBTPageLobby_execSystemChatLog_Parms parms;

	if ( !pSystemChatLog )
		pSystemChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.SystemChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog, &parms, NULL );

}*/

/*void UBTPageLobby::SelfChatLog ( struct FString cL )
{
	static UFunction* pSelfChatLog = 0;
	UBTPageLobby_execSelfChatLog_Parms parms;

	if ( !pSelfChatLog )
		pSelfChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.SelfChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog, &parms, NULL );

}*/

/*void UBTPageLobby::WhisperChatLog ( struct FString cL )
{
	static UFunction* pWhisperChatLog = 0;
	UBTPageLobby_execWhisperChatLog_Parms parms;

	if ( !pWhisperChatLog )
		pWhisperChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.WhisperChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog, &parms, NULL );

}*/

/*void UBTPageLobby::ClanChatLog ( struct FString cL )
{
	static UFunction* pClanChatLog = 0;
	UBTPageLobby_execClanChatLog_Parms parms;

	if ( !pClanChatLog )
		pClanChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ClanChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog, &parms, NULL );

}*/

/*void UBTPageLobby::NormalChatLog ( struct FString cL )
{
	static UFunction* pNormalChatLog = 0;
	UBTPageLobby_execNormalChatLog_Parms parms;

	if ( !pNormalChatLog )
		pNormalChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.NormalChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog, &parms, NULL );

}*/

/*void UBTPageLobby::ClearChatLog (  )
{
	static UFunction* pClearChatLog = 0;
	UBTPageLobby_execClearChatLog_Parms parms;

	if ( !pClearChatLog )
		pClearChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ClearChatLog" );

	this->ProcessEvent ( pClearChatLog, &parms, NULL );

}*/

/*void UBTPageLobby::OnVisibleChannelListChanged ( int Index )
{
	static UFunction* pOnVisibleChannelListChanged = 0;
	UBTPageLobby_execOnVisibleChannelListChanged_Parms parms;

	if ( !pOnVisibleChannelListChanged )
		pOnVisibleChannelListChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnVisibleChannelListChanged" );

	parms.Index = Index;
	this->ProcessEvent ( pOnVisibleChannelListChanged, &parms, NULL );

}*/

/*bool UBTPageLobby::InternalKeyType ( struct FString Unicode, unsigned char* key )
{
	static UFunction* pInternalKeyType = 0;
	UBTPageLobby_execInternalKeyType_Parms parms;

	if ( !pInternalKeyType )
		pInternalKeyType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.InternalKeyType" );

	parms.Unicode = Unicode;
	this->ProcessEvent ( pInternalKeyType, &parms, NULL );

	*key = parms.key;
	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::internalKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pinternalKeyEvent = 0;
	UBTPageLobby_execinternalKeyEvent_Parms parms;

	if ( !pinternalKeyEvent )
		pinternalKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.internalKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pinternalKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageLobby::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageLobby_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageLobby::BTPageLobby_OnReceivedPing ( class UwMatchMaker* MM, struct FString fromAddr, int msec )
{
	static UFunction* pBTPageLobby_OnReceivedPing = 0;
	UBTPageLobby_execBTPageLobby_OnReceivedPing_Parms parms;

	if ( !pBTPageLobby_OnReceivedPing )
		pBTPageLobby_OnReceivedPing = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTPageLobby_OnReceivedPing" );

	parms.MM = MM;
	parms.fromAddr = fromAddr;
	parms.msec = msec;
	this->ProcessEvent ( pBTPageLobby_OnReceivedPing, &parms, NULL );

}*/

/*void UBTPageLobby::RefreshPage (  )
{
	static UFunction* pRefreshPage = 0;
	UBTPageLobby_execRefreshPage_Parms parms;

	if ( !pRefreshPage )
		pRefreshPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.RefreshPage" );

	this->ProcessEvent ( pRefreshPage, &parms, NULL );

}*/

/*void UBTPageLobby::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageLobby_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageLobby::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageLobby_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateWebzenItemList ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateWebzenItemList = 0;
	UBTPageLobby_execUpdateWebzenItemList_Parms parms;

	if ( !pUpdateWebzenItemList )
		pUpdateWebzenItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateWebzenItemList" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateWebzenItemList, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateItemList ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateItemList = 0;
	UBTPageLobby_execUpdateItemList_Parms parms;

	if ( !pUpdateItemList )
		pUpdateItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateItemList" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateItemList, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateBlockList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateBlockList = 0;
	UBTPageLobby_execUpdateBlockList_Parms parms;

	if ( !pUpdateBlockList )
		pUpdateBlockList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateBlockList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateBlockList, &parms, NULL );

}*/

/*void UBTPageLobby::UpdatePCBangList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdatePCBangList = 0;
	UBTPageLobby_execUpdatePCBangList_Parms parms;

	if ( !pUpdatePCBangList )
		pUpdatePCBangList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdatePCBangList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdatePCBangList, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateClanList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateClanList = 0;
	UBTPageLobby_execUpdateClanList_Parms parms;

	if ( !pUpdateClanList )
		pUpdateClanList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateClanList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateClanList, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateFriendList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateFriendList = 0;
	UBTPageLobby_execUpdateFriendList_Parms parms;

	if ( !pUpdateFriendList )
		pUpdateFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateFriendList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateFriendList, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateQuestList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateQuestList = 0;
	UBTPageLobby_execUpdateQuestList_Parms parms;

	if ( !pUpdateQuestList )
		pUpdateQuestList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateQuestList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateQuestList, &parms, NULL );

}*/

/*void UBTPageLobby::UpdatePositionInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdatePositionInfo = 0;
	UBTPageLobby_execUpdatePositionInfo_Parms parms;

	if ( !pUpdatePositionInfo )
		pUpdatePositionInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdatePositionInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdatePositionInfo, &parms, NULL );

}*/

/*void UBTPageLobby::UpdatePCBangInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdatePCBangInfo = 0;
	UBTPageLobby_execUpdatePCBangInfo_Parms parms;

	if ( !pUpdatePCBangInfo )
		pUpdatePCBangInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdatePCBangInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdatePCBangInfo, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateRecv_CharInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateRecv_CharInfo = 0;
	UBTPageLobby_execUpdateRecv_CharInfo_Parms parms;

	if ( !pUpdateRecv_CharInfo )
		pUpdateRecv_CharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateRecv_CharInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateRecv_CharInfo, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateMoneyInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateMoneyInfo = 0;
	UBTPageLobby_execUpdateMoneyInfo_Parms parms;

	if ( !pUpdateMoneyInfo )
		pUpdateMoneyInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateMoneyInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateMoneyInfo, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateEquipItemInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateEquipItemInfo = 0;
	UBTPageLobby_execUpdateEquipItemInfo_Parms parms;

	if ( !pUpdateEquipItemInfo )
		pUpdateEquipItemInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateEquipItemInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateEquipItemInfo, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateRankingInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateRankingInfo = 0;
	UBTPageLobby_execUpdateRankingInfo_Parms parms;

	if ( !pUpdateRankingInfo )
		pUpdateRankingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateRankingInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateRankingInfo, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateClanInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateClanInfo = 0;
	UBTPageLobby_execUpdateClanInfo_Parms parms;

	if ( !pUpdateClanInfo )
		pUpdateClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateClanInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateClanInfo, &parms, NULL );

}*/

/*void UBTPageLobby::UpdateCharInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateCharInfo = 0;
	UBTPageLobby_execUpdateCharInfo_Parms parms;

	if ( !pUpdateCharInfo )
		pUpdateCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.UpdateCharInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateCharInfo, &parms, NULL );

}*/

/*void UBTPageLobby::OnCompleteOpened (  )
{
	static UFunction* pOnCompleteOpened = 0;
	UBTPageLobby_execOnCompleteOpened_Parms parms;

	if ( !pOnCompleteOpened )
		pOnCompleteOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnCompleteOpened" );

	this->ProcessEvent ( pOnCompleteOpened, &parms, NULL );

}*/

/*void UBTPageLobby::OnBackToLastPage (  )
{
	static UFunction* pOnBackToLastPage = 0;
	UBTPageLobby_execOnBackToLastPage_Parms parms;

	if ( !pOnBackToLastPage )
		pOnBackToLastPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnBackToLastPage" );

	this->ProcessEvent ( pOnBackToLastPage, &parms, NULL );

}*/

/*void UBTPageLobby::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageLobby_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*bool UBTPageLobby::BTWindowDefineARHK_46_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_46_OnCancel = 0;
	UBTPageLobby_execBTWindowDefineARHK_46_OnCancel_Parms parms;

	if ( !pBTWindowDefineARHK_46_OnCancel )
		pBTWindowDefineARHK_46_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowDefineARHK_46_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_46_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowDefineARHK_46_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_46_OnOK = 0;
	UBTPageLobby_execBTWindowDefineARHK_46_OnOK_Parms parms;

	if ( !pBTWindowDefineARHK_46_OnOK )
		pBTWindowDefineARHK_46_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowDefineARHK_46_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_46_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowDefineARHK_45_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_45_OnCancel = 0;
	UBTPageLobby_execBTWindowDefineARHK_45_OnCancel_Parms parms;

	if ( !pBTWindowDefineARHK_45_OnCancel )
		pBTWindowDefineARHK_45_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowDefineARHK_45_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_45_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowDefineARHK_45_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_45_OnOK = 0;
	UBTPageLobby_execBTWindowDefineARHK_45_OnOK_Parms parms;

	if ( !pBTWindowDefineARHK_45_OnOK )
		pBTWindowDefineARHK_45_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowDefineARHK_45_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_45_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowDefineARHK_22_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_22_OnCancel = 0;
	UBTPageLobby_execBTWindowDefineARHK_22_OnCancel_Parms parms;

	if ( !pBTWindowDefineARHK_22_OnCancel )
		pBTWindowDefineARHK_22_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowDefineARHK_22_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_22_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowDefineARHK_22_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_22_OnOK = 0;
	UBTPageLobby_execBTWindowDefineARHK_22_OnOK_Parms parms;

	if ( !pBTWindowDefineARHK_22_OnOK )
		pBTWindowDefineARHK_22_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowDefineARHK_22_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_22_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::StartTutorial ( struct FString Map )
{
	static UFunction* pStartTutorial = 0;
	UBTPageLobby_execStartTutorial_Parms parms;

	if ( !pStartTutorial )
		pStartTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.StartTutorial" );

	parms.Map = Map;
	this->ProcessEvent ( pStartTutorial, &parms, NULL );

}*/

/*bool UBTPageLobby::BTWindowDefineARHK_43 ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_43 = 0;
	UBTPageLobby_execBTWindowDefineARHK_43_Parms parms;

	if ( !pBTWindowDefineARHK_43 )
		pBTWindowDefineARHK_43 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowDefineARHK_43" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_43, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::ShowTutorialWindow (  )
{
	static UFunction* pShowTutorialWindow = 0;
	UBTPageLobby_execShowTutorialWindow_Parms parms;

	if ( !pShowTutorialWindow )
		pShowTutorialWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ShowTutorialWindow" );

	this->ProcessEvent ( pShowTutorialWindow, &parms, NULL );

}*/

/*void UBTPageLobby::InternalOnReOpen (  )
{
	static UFunction* pInternalOnReOpen = 0;
	UBTPageLobby_execInternalOnReOpen_Parms parms;

	if ( !pInternalOnReOpen )
		pInternalOnReOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.InternalOnReOpen" );

	this->ProcessEvent ( pInternalOnReOpen, &parms, NULL );

}*/

/*bool UBTPageLobby::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageLobby_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageLobby_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::Exit_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pExit_OnOK = 0;
	UBTPageLobby_execExit_OnOK_Parms parms;

	if ( !pExit_OnOK )
		pExit_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.Exit_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pExit_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::ForceDisconnect_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pForceDisconnect_OnOK = 0;
	UBTPageLobby_execForceDisconnect_OnOK_Parms parms;

	if ( !pForceDisconnect_OnOK )
		pForceDisconnect_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ForceDisconnect_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pForceDisconnect_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::TcpLogin_OnConnect ( int ErrCode )
{
	static UFunction* pTcpLogin_OnConnect = 0;
	UBTPageLobby_execTcpLogin_OnConnect_Parms parms;

	if ( !pTcpLogin_OnConnect )
		pTcpLogin_OnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.TcpLogin_OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpLogin_OnConnect, &parms, NULL );

}*/

/*class UBTTcpLink_Login* UBTPageLobby::GetTcpLogin (  )
{
	static UFunction* pGetTcpLogin = 0;
	UBTPageLobby_execGetTcpLogin_Parms parms;

	if ( !pGetTcpLogin )
		pGetTcpLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.GetTcpLogin" );

	this->ProcessEvent ( pGetTcpLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTPageLobby::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageLobby_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTPageLobby_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::TPMessenger_ButtonMsg_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pTPMessenger_ButtonMsg_OnClick = 0;
	UBTPageLobby_execTPMessenger_ButtonMsg_OnClick_Parms parms;

	if ( !pTPMessenger_ButtonMsg_OnClick )
		pTPMessenger_ButtonMsg_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.TPMessenger_ButtonMsg_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTPMessenger_ButtonMsg_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::TPMessenger_ACLMsg0_OnHitBottom ( int Top, int Count, int itemperpage )
{
	static UFunction* pTPMessenger_ACLMsg0_OnHitBottom = 0;
	UBTPageLobby_execTPMessenger_ACLMsg0_OnHitBottom_Parms parms;

	if ( !pTPMessenger_ACLMsg0_OnHitBottom )
		pTPMessenger_ACLMsg0_OnHitBottom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.TPMessenger_ACLMsg0_OnHitBottom" );

	parms.Top = Top;
	parms.Count = Count;
	parms.itemperpage = itemperpage;
	this->ProcessEvent ( pTPMessenger_ACLMsg0_OnHitBottom, &parms, NULL );

}*/

/*void UBTPageLobby::ACLLobby_OnHitBottom ( int Top, int Count, int itemperpage )
{
	static UFunction* pACLLobby_OnHitBottom = 0;
	UBTPageLobby_execACLLobby_OnHitBottom_Parms parms;

	if ( !pACLLobby_OnHitBottom )
		pACLLobby_OnHitBottom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ACLLobby_OnHitBottom" );

	parms.Top = Top;
	parms.Count = Count;
	parms.itemperpage = itemperpage;
	this->ProcessEvent ( pACLLobby_OnHitBottom, &parms, NULL );

}*/

/*bool UBTPageLobby::TestButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pTestButton_OnClick = 0;
	UBTPageLobby_execTestButton_OnClick_Parms parms;

	if ( !pTestButton_OnClick )
		pTestButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.TestButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTestButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageLobby_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UBTPageLobby::MoveToRoom ( int Index )
{
	static UFunction* pMoveToRoom = 0;
	UBTPageLobby_execMoveToRoom_Parms parms;

	if ( !pMoveToRoom )
		pMoveToRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.MoveToRoom" );

	parms.Index = Index;
	this->ProcessEvent ( pMoveToRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::AutoMoveReturnClanReadyRoom ( int RoomNum, struct FString Password )
{
	static UFunction* pAutoMoveReturnClanReadyRoom = 0;
	UBTPageLobby_execAutoMoveReturnClanReadyRoom_Parms parms;

	if ( !pAutoMoveReturnClanReadyRoom )
		pAutoMoveReturnClanReadyRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.AutoMoveReturnClanReadyRoom" );

	parms.RoomNum = RoomNum;
	parms.Password = Password;
	this->ProcessEvent ( pAutoMoveReturnClanReadyRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::AutoMoveToClanReadyRoom ( int RoomNum, struct FString Password )
{
	static UFunction* pAutoMoveToClanReadyRoom = 0;
	UBTPageLobby_execAutoMoveToClanReadyRoom_Parms parms;

	if ( !pAutoMoveToClanReadyRoom )
		pAutoMoveToClanReadyRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.AutoMoveToClanReadyRoom" );

	parms.RoomNum = RoomNum;
	parms.Password = Password;
	this->ProcessEvent ( pAutoMoveToClanReadyRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::AutoMoveToRoom ( int RoomNum, struct FString Password )
{
	static UFunction* pAutoMoveToRoom = 0;
	UBTPageLobby_execAutoMoveToRoom_Parms parms;

	if ( !pAutoMoveToRoom )
		pAutoMoveToRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.AutoMoveToRoom" );

	parms.RoomNum = RoomNum;
	parms.Password = Password;
	this->ProcessEvent ( pAutoMoveToRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::OnLobby_DblClick ( class UGUIComponent* Sender )
{
	static UFunction* pOnLobby_DblClick = 0;
	UBTPageLobby_execOnLobby_DblClick_Parms parms;

	if ( !pOnLobby_DblClick )
		pOnLobby_DblClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnLobby_DblClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnLobby_DblClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowPasswordHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowPasswordHK_OnCancel = 0;
	UBTPageLobby_execBTWindowPasswordHK_OnCancel_Parms parms;

	if ( !pBTWindowPasswordHK_OnCancel )
		pBTWindowPasswordHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowPasswordHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowPasswordHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowPasswordHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowPasswordHK_OnOK = 0;
	UBTPageLobby_execBTWindowPasswordHK_OnOK_Parms parms;

	if ( !pBTWindowPasswordHK_OnOK )
		pBTWindowPasswordHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowPasswordHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowPasswordHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckEnterRoom_AfterJoinRoom ( int GameNum, int OwnerID, int UID, struct FString UserID, int TeamNum, int Grade, struct FString UserIP, struct FString ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterRoom_AfterJoinRoom = 0;
	UBTPageLobby_execrfAckEnterRoom_AfterJoinRoom_Parms parms;

	if ( !prfAckEnterRoom_AfterJoinRoom )
		prfAckEnterRoom_AfterJoinRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckEnterRoom_AfterJoinRoom" );

	parms.GameNum = GameNum;
	parms.OwnerID = OwnerID;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.Grade = Grade;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.Clan_Mark_Pattern = Clan_Mark_Pattern;
	parms.Clan_Mark_BG = Clan_Mark_BG;
	parms.Clan_Mark_BL = Clan_Mark_BL;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterRoom_AfterJoinRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckEnterRoom_AfterCreateRoom ( int GameNum, int OwnerID, int UID, struct FString UserID, int TeamNum, int Grade, struct FString UserIP, struct FString ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterRoom_AfterCreateRoom = 0;
	UBTPageLobby_execrfAckEnterRoom_AfterCreateRoom_Parms parms;

	if ( !prfAckEnterRoom_AfterCreateRoom )
		prfAckEnterRoom_AfterCreateRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckEnterRoom_AfterCreateRoom" );

	parms.GameNum = GameNum;
	parms.OwnerID = OwnerID;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.Grade = Grade;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.Clan_Mark_Pattern = Clan_Mark_Pattern;
	parms.Clan_Mark_BG = Clan_Mark_BG;
	parms.Clan_Mark_BL = Clan_Mark_BL;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterRoom_AfterCreateRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckClanMatch_Join ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Join = 0;
	UBTPageLobby_execrfAckClanMatch_Join_Parms parms;

	if ( !prfAckClanMatch_Join )
		prfAckClanMatch_Join = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckClanMatch_Join" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Join, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::rfAckClanMatch_GetReady ( int Result, struct FString ErrMsg, int RoomIndex )
{
	static UFunction* prfAckClanMatch_GetReady = 0;
	UBTPageLobby_execrfAckClanMatch_GetReady_Parms parms;

	if ( !prfAckClanMatch_GetReady )
		prfAckClanMatch_GetReady = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.rfAckClanMatch_GetReady" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomIndex = RoomIndex;
	this->ProcessEvent ( prfAckClanMatch_GetReady, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowDefineSelectHK_23_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineSelectHK_23_OnOK = 0;
	UBTPageLobby_execBTWindowDefineSelectHK_23_OnOK_Parms parms;

	if ( !pBTWindowDefineSelectHK_23_OnOK )
		pBTWindowDefineSelectHK_23_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowDefineSelectHK_23_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineSelectHK_23_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::ButtonRegularClanWar_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonRegularClanWar_OnClick = 0;
	UBTPageLobby_execButtonRegularClanWar_OnClick_Parms parms;

	if ( !pButtonRegularClanWar_OnClick )
		pButtonRegularClanWar_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ButtonRegularClanWar_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonRegularClanWar_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::ButtonFriendlyClanWar_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonFriendlyClanWar_OnClick = 0;
	UBTPageLobby_execButtonFriendlyClanWar_OnClick_Parms parms;

	if ( !pButtonFriendlyClanWar_OnClick )
		pButtonFriendlyClanWar_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ButtonFriendlyClanWar_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonFriendlyClanWar_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::OpenBTWindowCreateRoom (  )
{
	static UFunction* pOpenBTWindowCreateRoom = 0;
	UBTPageLobby_execOpenBTWindowCreateRoom_Parms parms;

	if ( !pOpenBTWindowCreateRoom )
		pOpenBTWindowCreateRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OpenBTWindowCreateRoom" );

	this->ProcessEvent ( pOpenBTWindowCreateRoom, &parms, NULL );

}*/

/*bool UBTPageLobby::OnBottomButton_Click ( class UGUIComponent* Sender )
{
	static UFunction* pOnBottomButton_Click = 0;
	UBTPageLobby_execOnBottomButton_Click_Parms parms;

	if ( !pOnBottomButton_Click )
		pOnBottomButton_Click = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnBottomButton_Click" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnBottomButton_Click, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby::OnPopupPCBang ( int ContextMenuIndex, class UBTACLMessengerPCBangHK* acl )
{
	static UFunction* pOnPopupPCBang = 0;
	UBTPageLobby_execOnPopupPCBang_Parms parms;

	if ( !pOnPopupPCBang )
		pOnPopupPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupPCBang" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupPCBang, &parms, NULL );

}*/

/*void UBTPageLobby::OnPopupPCBangCheck ( class UBTACLMessengerPCBangHK* acl, class UBTCMMessengerPCBangHK* cm )
{
	static UFunction* pOnPopupPCBangCheck = 0;
	UBTPageLobby_execOnPopupPCBangCheck_Parms parms;

	if ( !pOnPopupPCBangCheck )
		pOnPopupPCBangCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupPCBangCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupPCBangCheck, &parms, NULL );

}*/

/*void UBTPageLobby::OnPopupBan ( int ContextMenuIndex, class UBTACLMessengerBanHK* acl )
{
	static UFunction* pOnPopupBan = 0;
	UBTPageLobby_execOnPopupBan_Parms parms;

	if ( !pOnPopupBan )
		pOnPopupBan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupBan" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupBan, &parms, NULL );

}*/

/*void UBTPageLobby::OnPopupBanCheck ( class UBTACLMessengerBanHK* acl, class UBTCMMessengerBanHK* cm )
{
	static UFunction* pOnPopupBanCheck = 0;
	UBTPageLobby_execOnPopupBanCheck_Parms parms;

	if ( !pOnPopupBanCheck )
		pOnPopupBanCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupBanCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupBanCheck, &parms, NULL );

}*/

/*void UBTPageLobby::OnPopupClan ( int ContextMenuIndex, class UBTACLMessengerClanHK* acl )
{
	static UFunction* pOnPopupClan = 0;
	UBTPageLobby_execOnPopupClan_Parms parms;

	if ( !pOnPopupClan )
		pOnPopupClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupClan" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupClan, &parms, NULL );

}*/

/*void UBTPageLobby::OnPopupClanCheck ( class UBTACLMessengerClanHK* acl, class UBTCMMessengerClanHK* cm )
{
	static UFunction* pOnPopupClanCheck = 0;
	UBTPageLobby_execOnPopupClanCheck_Parms parms;

	if ( !pOnPopupClanCheck )
		pOnPopupClanCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupClanCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupClanCheck, &parms, NULL );

}*/

/*void UBTPageLobby::OnPopupFriend ( int ContextMenuIndex, class UBTACLMessengerFriendHK* acl )
{
	static UFunction* pOnPopupFriend = 0;
	UBTPageLobby_execOnPopupFriend_Parms parms;

	if ( !pOnPopupFriend )
		pOnPopupFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupFriend" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupFriend, &parms, NULL );

}*/

/*void UBTPageLobby::OnPopupFriendCheck ( class UBTACLMessengerFriendHK* acl, class UBTCMMessengerFriendHK* cm )
{
	static UFunction* pOnPopupFriendCheck = 0;
	UBTPageLobby_execOnPopupFriendCheck_Parms parms;

	if ( !pOnPopupFriendCheck )
		pOnPopupFriendCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupFriendCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupFriendCheck, &parms, NULL );

}*/

/*void UBTPageLobby::OnPopupChannel ( int ContextMenuIndex, class UBTACLMessengerChannelHK* acl )
{
	static UFunction* pOnPopupChannel = 0;
	UBTPageLobby_execOnPopupChannel_Parms parms;

	if ( !pOnPopupChannel )
		pOnPopupChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupChannel" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupChannel, &parms, NULL );

}*/

/*void UBTPageLobby::OnPopupChannelCheck ( class UBTACLMessengerChannelHK* acl, class UBTCMMessengerChannelHK* cm )
{
	static UFunction* pOnPopupChannelCheck = 0;
	UBTPageLobby_execOnPopupChannelCheck_Parms parms;

	if ( !pOnPopupChannelCheck )
		pOnPopupChannelCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.OnPopupChannelCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupChannelCheck, &parms, NULL );

}*/

/*bool UBTPageLobby::ProcessQuickEnter ( int MapIndex, int GameMode, int WRestrict, int botLevel )
{
	static UFunction* pProcessQuickEnter = 0;
	UBTPageLobby_execProcessQuickEnter_Parms parms;

	if ( !pProcessQuickEnter )
		pProcessQuickEnter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ProcessQuickEnter" );

	parms.MapIndex = MapIndex;
	parms.GameMode = GameMode;
	parms.WRestrict = WRestrict;
	parms.botLevel = botLevel;
	this->ProcessEvent ( pProcessQuickEnter, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::QuickEnter_OnOK (  )
{
	static UFunction* pQuickEnter_OnOK = 0;
	UBTPageLobby_execQuickEnter_OnOK_Parms parms;

	if ( !pQuickEnter_OnOK )
		pQuickEnter_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.QuickEnter_OnOK" );

	this->ProcessEvent ( pQuickEnter_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowInviteClan_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowInviteClan_OnOK = 0;
	UBTPageLobby_execBTWindowInviteClan_OnOK_Parms parms;

	if ( !pBTWindowInviteClan_OnOK )
		pBTWindowInviteClan_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowInviteClan_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowInviteClan_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::WindowRequestFriend_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pWindowRequestFriend_OnCancel = 0;
	UBTPageLobby_execWindowRequestFriend_OnCancel_Parms parms;

	if ( !pWindowRequestFriend_OnCancel )
		pWindowRequestFriend_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.WindowRequestFriend_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWindowRequestFriend_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::WindowRequestFriend_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pWindowRequestFriend_OnOK = 0;
	UBTPageLobby_execWindowRequestFriend_OnOK_Parms parms;

	if ( !pWindowRequestFriend_OnOK )
		pWindowRequestFriend_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.WindowRequestFriend_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWindowRequestFriend_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::WindowInviteFriend_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pWindowInviteFriend_OnOK = 0;
	UBTPageLobby_execWindowInviteFriend_OnOK_Parms parms;

	if ( !pWindowInviteFriend_OnOK )
		pWindowInviteFriend_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.WindowInviteFriend_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWindowInviteFriend_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowCreateRoom_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateRoom_OnOK = 0;
	UBTPageLobby_execBTWindowCreateRoom_OnOK_Parms parms;

	if ( !pBTWindowCreateRoom_OnOK )
		pBTWindowCreateRoom_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowCreateRoom_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateRoom_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowJoinClan_OK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowJoinClan_OK = 0;
	UBTPageLobby_execBTWindowJoinClan_OK_Parms parms;

	if ( !pBTWindowJoinClan_OK )
		pBTWindowJoinClan_OK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowJoinClan_OK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowJoinClan_OK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowCreateClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanHK_OnOK = 0;
	UBTPageLobby_execBTWindowCreateClanHK_OnOK_Parms parms;

	if ( !pBTWindowCreateClanHK_OnOK )
		pBTWindowCreateClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowCreateClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowCreateClanNeedPointHK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanNeedPointHK_OnClick = 0;
	UBTPageLobby_execBTWindowCreateClanNeedPointHK_OnClick_Parms parms;

	if ( !pBTWindowCreateClanNeedPointHK_OnClick )
		pBTWindowCreateClanNeedPointHK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowCreateClanNeedPointHK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanNeedPointHK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::ClanMenu_ButtonCreateClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonCreateClan_OnClick = 0;
	UBTPageLobby_execClanMenu_ButtonCreateClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonCreateClan_OnClick )
		pClanMenu_ButtonCreateClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ClanMenu_ButtonCreateClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonCreateClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowFindClanHK_OnInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnInfo = 0;
	UBTPageLobby_execBTWindowFindClanHK_OnInfo_Parms parms;

	if ( !pBTWindowFindClanHK_OnInfo )
		pBTWindowFindClanHK_OnInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowFindClanHK_OnInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::BTWindowFindClanHK_OnRequestJoin ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnRequestJoin = 0;
	UBTPageLobby_execBTWindowFindClanHK_OnRequestJoin_Parms parms;

	if ( !pBTWindowFindClanHK_OnRequestJoin )
		pBTWindowFindClanHK_OnRequestJoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.BTWindowFindClanHK_OnRequestJoin" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnRequestJoin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::ClanMenu_ButtonFindClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonFindClan_OnClick = 0;
	UBTPageLobby_execClanMenu_ButtonFindClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonFindClan_OnClick )
		pClanMenu_ButtonFindClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ClanMenu_ButtonFindClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonFindClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::ClanMenu_ButtonLookingForClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonLookingForClan_OnClick = 0;
	UBTPageLobby_execClanMenu_ButtonLookingForClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonLookingForClan_OnClick )
		pClanMenu_ButtonLookingForClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.ClanMenu_ButtonLookingForClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonLookingForClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTWindowCreateRoom* UBTPageLobby::GetWindowCreateRoom (  )
{
	static UFunction* pGetWindowCreateRoom = 0;
	UBTPageLobby_execGetWindowCreateRoom_Parms parms;

	if ( !pGetWindowCreateRoom )
		pGetWindowCreateRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.GetWindowCreateRoom" );

	this->ProcessEvent ( pGetWindowCreateRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::TopButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pTopButton_OnClick = 0;
	UBTPageLobby_execTopButton_OnClick_Parms parms;

	if ( !pTopButton_OnClick )
		pTopButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.TopButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTopButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageLobby_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby::delegateAckEnterRoom ( int GameNum, int OwnerID, int UID, struct FString UserID, int TeamNum, int Grade, struct FString UserIP, struct FString ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* pdelegateAckEnterRoom = 0;
	UBTPageLobby_execdelegateAckEnterRoom_Parms parms;

	if ( !pdelegateAckEnterRoom )
		pdelegateAckEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby.delegateAckEnterRoom" );

	parms.GameNum = GameNum;
	parms.OwnerID = OwnerID;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.Grade = Grade;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.Clan_Mark_Pattern = Clan_Mark_Pattern;
	parms.Clan_Mark_BG = Clan_Mark_BG;
	parms.Clan_Mark_BL = Clan_Mark_BL;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( pdelegateAckEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfNotifyCouponUseError ( int Time )
{
	static UFunction* prfNotifyCouponUseError = 0;
	UBTPageServerSelection_execrfNotifyCouponUseError_Parms parms;

	if ( !prfNotifyCouponUseError )
		prfNotifyCouponUseError = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfNotifyCouponUseError" );

	parms.Time = Time;
	this->ProcessEvent ( prfNotifyCouponUseError, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckRecvClanInviteResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvClanInviteResult = 0;
	UBTPageServerSelection_execrfAckRecvClanInviteResult_Parms parms;

	if ( !prfAckRecvClanInviteResult )
		prfAckRecvClanInviteResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckRecvClanInviteResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvClanInviteResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowRequestClanHK_OnSuspend ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestClanHK_OnSuspend = 0;
	UBTPageServerSelection_execBTWindowRequestClanHK_OnSuspend_Parms parms;

	if ( !pBTWindowRequestClanHK_OnSuspend )
		pBTWindowRequestClanHK_OnSuspend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowRequestClanHK_OnSuspend" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestClanHK_OnSuspend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowRequestClanHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestClanHK_OnCancel = 0;
	UBTPageServerSelection_execBTWindowRequestClanHK_OnCancel_Parms parms;

	if ( !pBTWindowRequestClanHK_OnCancel )
		pBTWindowRequestClanHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowRequestClanHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestClanHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowRequestClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestClanHK_OnOK = 0;
	UBTPageServerSelection_execBTWindowRequestClanHK_OnOK_Parms parms;

	if ( !pBTWindowRequestClanHK_OnOK )
		pBTWindowRequestClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowRequestClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTPageServerSelection_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqNotifyShopItemDataEnd ( int Ver )
{
	static UFunction* prfReqNotifyShopItemDataEnd = 0;
	UBTPageServerSelection_execrfReqNotifyShopItemDataEnd_Parms parms;

	if ( !prfReqNotifyShopItemDataEnd )
		prfReqNotifyShopItemDataEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqNotifyShopItemDataEnd" );

	parms.Ver = Ver;
	this->ProcessEvent ( prfReqNotifyShopItemDataEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqNotifyShopItemData ( class TArray< int > ProductNo, class TArray< struct FString > ProductRowGuid, class TArray< struct FString > ServiceCode, class TArray< struct FString > ProductName, class TArray< struct FString > ProductCode, class TArray< struct FString > ProductType, class TArray< unsigned char > SaleType, class TArray< struct FString > ItemSaleType, class TArray< unsigned char > ISIncludeBonus, class TArray< int > ProductCost, class TArray< int > ProductHour, class TArray< int > ProductQuantity, class TArray< int > TotalQuantity, class TArray< int > ReOrderTerms, class TArray< int > ReorderCount, class TArray< int > PurchaseAvailableQuantity, class TArray< int > AvailableMinLevel, class TArray< int > AvailableMaxLevel, class TArray< unsigned char > AvailableGender, class TArray< int > InventoryKeepDays, class TArray< int > SaleMasterFlag, class TArray< int > SaleStatus, class TArray< struct FString > Description, class TArray< struct FString > Property0, class TArray< struct FString > Property1, class TArray< struct FString > Property2, class TArray< struct FString > Property3, class TArray< struct FString > Property4, class TArray< int > IsGift )
{
	static UFunction* prfReqNotifyShopItemData = 0;
	UBTPageServerSelection_execrfReqNotifyShopItemData_Parms parms;

	if ( !prfReqNotifyShopItemData )
		prfReqNotifyShopItemData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqNotifyShopItemData" );

	parms.ProductNo = ProductNo;
	parms.ProductRowGuid = ProductRowGuid;
	parms.ServiceCode = ServiceCode;
	parms.ProductName = ProductName;
	parms.ProductCode = ProductCode;
	parms.ProductType = ProductType;
	parms.SaleType = SaleType;
	parms.ItemSaleType = ItemSaleType;
	parms.ISIncludeBonus = ISIncludeBonus;
	parms.ProductCost = ProductCost;
	parms.ProductHour = ProductHour;
	parms.ProductQuantity = ProductQuantity;
	parms.TotalQuantity = TotalQuantity;
	parms.ReOrderTerms = ReOrderTerms;
	parms.ReorderCount = ReorderCount;
	parms.PurchaseAvailableQuantity = PurchaseAvailableQuantity;
	parms.AvailableMinLevel = AvailableMinLevel;
	parms.AvailableMaxLevel = AvailableMaxLevel;
	parms.AvailableGender = AvailableGender;
	parms.InventoryKeepDays = InventoryKeepDays;
	parms.SaleMasterFlag = SaleMasterFlag;
	parms.SaleStatus = SaleStatus;
	parms.Description = Description;
	parms.Property0 = Property0;
	parms.Property1 = Property1;
	parms.Property2 = Property2;
	parms.Property3 = Property3;
	parms.Property4 = Property4;
	parms.IsGift = IsGift;
	this->ProcessEvent ( prfReqNotifyShopItemData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckShopItemData (  )
{
	static UFunction* prfAckShopItemData = 0;
	UBTPageServerSelection_execrfAckShopItemData_Parms parms;

	if ( !prfAckShopItemData )
		prfAckShopItemData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckShopItemData" );

	this->ProcessEvent ( prfAckShopItemData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckLoginWithGlobal ( int Result )
{
	static UFunction* prfAckLoginWithGlobal = 0;
	UBTPageServerSelection_execrfAckLoginWithGlobal_Parms parms;

	if ( !prfAckLoginWithGlobal )
		prfAckLoginWithGlobal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckLoginWithGlobal" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithGlobal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckLoginWithThailand ( int Result )
{
	static UFunction* prfAckLoginWithThailand = 0;
	UBTPageServerSelection_execrfAckLoginWithThailand_Parms parms;

	if ( !prfAckLoginWithThailand )
		prfAckLoginWithThailand = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckLoginWithThailand" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithThailand, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckLoginWithWZAuth ( int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType )
{
	static UFunction* prfAckLoginWithWZAuth = 0;
	UBTPageServerSelection_execrfAckLoginWithWZAuth_Parms parms;

	if ( !prfAckLoginWithWZAuth )
		prfAckLoginWithWZAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckLoginWithWZAuth" );

	parms.Result = Result;
	parms.wzp_AccountType = wzp_AccountType;
	parms.wzp_IsBlock = wzp_IsBlock;
	parms.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	parms.ChannelType = ChannelType;
	this->ProcessEvent ( prfAckLoginWithWZAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckLoginWithTencentAuth ( int Result, unsigned char tc_AccountType, unsigned char tc_IsBlock )
{
	static UFunction* prfAckLoginWithTencentAuth = 0;
	UBTPageServerSelection_execrfAckLoginWithTencentAuth_Parms parms;

	if ( !prfAckLoginWithTencentAuth )
		prfAckLoginWithTencentAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckLoginWithTencentAuth" );

	parms.Result = Result;
	parms.tc_AccountType = tc_AccountType;
	parms.tc_IsBlock = tc_IsBlock;
	this->ProcessEvent ( prfAckLoginWithTencentAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckEquipSkill ( int ChangedNewSkillID, int ChangedNewSkillUniqueID, unsigned char ChangedNewSlotPosition, int ChangedOldSkillID, int ChangedOldSkillUniqueID, unsigned char ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipSkill = 0;
	UBTPageServerSelection_execrfAckEquipSkill_Parms parms;

	if ( !prfAckEquipSkill )
		prfAckEquipSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckEquipSkill" );

	parms.ChangedNewSkillID = ChangedNewSkillID;
	parms.ChangedNewSkillUniqueID = ChangedNewSkillUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldSkillID = ChangedOldSkillID;
	parms.ChangedOldSkillUniqueID = ChangedOldSkillUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipSkill, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckTencent_StartTenProtect ( int CharDBID )
{
	static UFunction* prfAckTencent_StartTenProtect = 0;
	UBTPageServerSelection_execrfAckTencent_StartTenProtect_Parms parms;

	if ( !prfAckTencent_StartTenProtect )
		prfAckTencent_StartTenProtect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckTencent_StartTenProtect" );

	parms.CharDBID = CharDBID;
	this->ProcessEvent ( prfAckTencent_StartTenProtect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckMoveToLobby ( unsigned char MessageType )
{
	static UFunction* prfAckMoveToLobby = 0;
	UBTPageServerSelection_execrfAckMoveToLobby_Parms parms;

	if ( !prfAckMoveToLobby )
		prfAckMoveToLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckMoveToLobby" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckMoveToLobby, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::eventrfAckPopUpMessage ( int MessageType )
{
	static UFunction* prfAckPopUpMessage = 0;
	UBTPageServerSelection_eventrfAckPopUpMessage_Parms parms;

	if ( !prfAckPopUpMessage )
		prfAckPopUpMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPopUpMessage" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckPopUpMessage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfUpdateWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfUpdateWebzenShopScriptVersion = 0;
	UBTPageServerSelection_execrfUpdateWebzenShopScriptVersion_Parms parms;

	if ( !prfUpdateWebzenShopScriptVersion )
		prfUpdateWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfUpdateWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfUpdateWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckLogOut ( unsigned char Result, unsigned char Reason )
{
	static UFunction* prfAckLogOut = 0;
	UBTPageServerSelection_execrfAckLogOut_Parms parms;

	if ( !prfAckLogOut )
		prfAckLogOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckLogOut" );

	parms.Result = Result;
	parms.Reason = Reason;
	this->ProcessEvent ( prfAckLogOut, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckServerType ( unsigned char Type )
{
	static UFunction* prfAckServerType = 0;
	UBTPageServerSelection_execrfAckServerType_Parms parms;

	if ( !prfAckServerType )
		prfAckServerType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckServerType" );

	parms.Type = Type;
	this->ProcessEvent ( prfAckServerType, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelection::Receive_EventGift ( int Index )
{
	static UFunction* pReceive_EventGift = 0;
	UBTPageServerSelection_execReceive_EventGift_Parms parms;

	if ( !pReceive_EventGift )
		pReceive_EventGift = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.Receive_EventGift" );

	parms.Index = Index;
	this->ProcessEvent ( pReceive_EventGift, &parms, NULL );

}*/

/*bool UBTPageServerSelection::rfAckRecvSystemMsg ( unsigned char CommunityType, struct FSystemMsgParam MsgInfo )
{
	static UFunction* prfAckRecvSystemMsg = 0;
	UBTPageServerSelection_execrfAckRecvSystemMsg_Parms parms;

	if ( !prfAckRecvSystemMsg )
		prfAckRecvSystemMsg = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckRecvSystemMsg" );

	parms.CommunityType = CommunityType;
	parms.MsgInfo = MsgInfo;
	this->ProcessEvent ( prfAckRecvSystemMsg, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPaidItem_RelayBroadcast ( struct FString CharName, struct FString Msg )
{
	static UFunction* prfAckPaidItem_RelayBroadcast = 0;
	UBTPageServerSelection_execrfAckPaidItem_RelayBroadcast_Parms parms;

	if ( !prfAckPaidItem_RelayBroadcast )
		prfAckPaidItem_RelayBroadcast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPaidItem_RelayBroadcast" );

	parms.CharName = CharName;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckPaidItem_RelayBroadcast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckChatClan ( struct FString CharName, struct FString Message, int Result )
{
	static UFunction* prfAckChatClan = 0;
	UBTPageServerSelection_execrfAckChatClan_Parms parms;

	if ( !prfAckChatClan )
		prfAckChatClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckChatClan" );

	parms.CharName = CharName;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqRecvChatWispher ( struct FString CharnameFrom, struct FString Message )
{
	static UFunction* prfReqRecvChatWispher = 0;
	UBTPageServerSelection_execrfReqRecvChatWispher_Parms parms;

	if ( !prfReqRecvChatWispher )
		prfReqRecvChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqRecvChatWispher" );

	parms.CharnameFrom = CharnameFrom;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckChatNormal ( int id, struct FString Sender, struct FString Message, int Result )
{
	static UFunction* prfAckChatNormal = 0;
	UBTPageServerSelection_execrfAckChatNormal_Parms parms;

	if ( !prfAckChatNormal )
		prfAckChatNormal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckChatNormal" );

	parms.id = id;
	parms.Sender = Sender;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatNormal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckSetLookForClan ( int Result, struct FString ErrMsg, unsigned char IsLookingFor )
{
	static UFunction* prfAckSetLookForClan = 0;
	UBTPageServerSelection_execrfAckSetLookForClan_Parms parms;

	if ( !prfAckSetLookForClan )
		prfAckSetLookForClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckSetLookForClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsLookingFor = IsLookingFor;
	this->ProcessEvent ( prfAckSetLookForClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckGetMyMailBoxState ( int Result, unsigned char IsFull, int NewMailCount )
{
	static UFunction* prfAckGetMyMailBoxState = 0;
	UBTPageServerSelection_execrfAckGetMyMailBoxState_Parms parms;

	if ( !prfAckGetMyMailBoxState )
		prfAckGetMyMailBoxState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckGetMyMailBoxState" );

	parms.Result = Result;
	parms.IsFull = IsFull;
	parms.NewMailCount = NewMailCount;
	this->ProcessEvent ( prfAckGetMyMailBoxState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowDefineARHK_40_41_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_40_41_OnOK = 0;
	UBTPageServerSelection_execBTWindowDefineARHK_40_41_OnOK_Parms parms;

	if ( !pBTWindowDefineARHK_40_41_OnOK )
		pBTWindowDefineARHK_40_41_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowDefineARHK_40_41_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_40_41_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckClientChecksum ( int Result )
{
	static UFunction* prfAckClientChecksum = 0;
	UBTPageServerSelection_execrfAckClientChecksum_Parms parms;

	if ( !prfAckClientChecksum )
		prfAckClientChecksum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckClientChecksum" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckClientChecksum, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckClientChallenge ( struct FString Key1, struct FBtrDouble Key2 )
{
	static UFunction* prfAckClientChallenge = 0;
	UBTPageServerSelection_execrfAckClientChallenge_Parms parms;

	if ( !prfAckClientChallenge )
		prfAckClientChallenge = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckClientChallenge" );

	parms.Key1 = Key1;
	parms.Key2 = Key2;
	this->ProcessEvent ( prfAckClientChallenge, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelection::ChatBlockEndTime_OnEventTimer ( int Index )
{
	static UFunction* pChatBlockEndTime_OnEventTimer = 0;
	UBTPageServerSelection_execChatBlockEndTime_OnEventTimer_Parms parms;

	if ( !pChatBlockEndTime_OnEventTimer )
		pChatBlockEndTime_OnEventTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.ChatBlockEndTime_OnEventTimer" );

	parms.Index = Index;
	this->ProcessEvent ( pChatBlockEndTime_OnEventTimer, &parms, NULL );

}*/

/*void UBTPageServerSelection::ChatBlockStartTime_OnEventTimer ( int Index )
{
	static UFunction* pChatBlockStartTime_OnEventTimer = 0;
	UBTPageServerSelection_execChatBlockStartTime_OnEventTimer_Parms parms;

	if ( !pChatBlockStartTime_OnEventTimer )
		pChatBlockStartTime_OnEventTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.ChatBlockStartTime_OnEventTimer" );

	parms.Index = Index;
	this->ProcessEvent ( pChatBlockStartTime_OnEventTimer, &parms, NULL );

}*/

/*bool UBTPageServerSelection::rfAckCharBlockInfo ( int Result, struct FBtrDouble ChatBlockStartTime, struct FBtrDouble ChatBlockEndTime, class TArray< struct FBtrDouble > BlockedItemIdx )
{
	static UFunction* prfAckCharBlockInfo = 0;
	UBTPageServerSelection_execrfAckCharBlockInfo_Parms parms;

	if ( !prfAckCharBlockInfo )
		prfAckCharBlockInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckCharBlockInfo" );

	parms.Result = Result;
	parms.ChatBlockStartTime = ChatBlockStartTime;
	parms.ChatBlockEndTime = ChatBlockEndTime;
	parms.BlockedItemIdx = BlockedItemIdx;
	this->ProcessEvent ( prfAckCharBlockInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckGMLeaveRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMLeaveRoom = 0;
	UBTPageServerSelection_execrfAckGMLeaveRoom_Parms parms;

	if ( !prfAckGMLeaveRoom )
		prfAckGMLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckGMLeaveRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckGMEnterRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMEnterRoom = 0;
	UBTPageServerSelection_execrfAckGMEnterRoom_Parms parms;

	if ( !prfAckGMEnterRoom )
		prfAckGMEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckGMEnterRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckForceDisconnectUser_GM ( int Result, struct FString ErrMsg, struct FString CharName )
{
	static UFunction* prfAckForceDisconnectUser_GM = 0;
	UBTPageServerSelection_execrfAckForceDisconnectUser_GM_Parms parms;

	if ( !prfAckForceDisconnectUser_GM )
		prfAckForceDisconnectUser_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckForceDisconnectUser_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckForceDisconnectUser_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckNotice_GM ( int Result, struct FString ErrMsg, unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, struct FString Msg )
{
	static UFunction* prfAckNotice_GM = 0;
	UBTPageServerSelection_execrfAckNotice_GM_Parms parms;

	if ( !prfAckNotice_GM )
		prfAckNotice_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckNotice_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeType = NoticeType;
	parms.ServerID = ServerID;
	parms.ChannelNum = ChannelNum;
	parms.GameRoomNum = GameRoomNum;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckNotice_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckChangeRoomTitle_GM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangeRoomTitle_GM = 0;
	UBTPageServerSelection_execrfAckChangeRoomTitle_GM_Parms parms;

	if ( !prfAckChangeRoomTitle_GM )
		prfAckChangeRoomTitle_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckChangeRoomTitle_GM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangeRoomTitle_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPaidItem_NotifyChangeClanMark ( struct FString ClanName, int Pattern, int BG, int BL )
{
	static UFunction* prfAckPaidItem_NotifyChangeClanMark = 0;
	UBTPageServerSelection_execrfAckPaidItem_NotifyChangeClanMark_Parms parms;

	if ( !prfAckPaidItem_NotifyChangeClanMark )
		prfAckPaidItem_NotifyChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPaidItem_NotifyChangeClanMark" );

	parms.ClanName = ClanName;
	parms.Pattern = Pattern;
	parms.BG = BG;
	parms.BL = BL;
	this->ProcessEvent ( prfAckPaidItem_NotifyChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPaidItem_ChangeClanMark ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_ChangeClanMark = 0;
	UBTPageServerSelection_execrfAckPaidItem_ChangeClanMark_Parms parms;

	if ( !prfAckPaidItem_ChangeClanMark )
		prfAckPaidItem_ChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPaidItem_ChangeClanMark" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_ChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPaidItem_ClanMarkDupCheck ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckPaidItem_ClanMarkDupCheck = 0;
	UBTPageServerSelection_execrfAckPaidItem_ClanMarkDupCheck_Parms parms;

	if ( !prfAckPaidItem_ClanMarkDupCheck )
		prfAckPaidItem_ClanMarkDupCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPaidItem_ClanMarkDupCheck" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckPaidItem_ClanMarkDupCheck, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPaidItem_NotifyChangeClanname ( struct FString NewClanname )
{
	static UFunction* prfAckPaidItem_NotifyChangeClanname = 0;
	UBTPageServerSelection_execrfAckPaidItem_NotifyChangeClanname_Parms parms;

	if ( !prfAckPaidItem_NotifyChangeClanname )
		prfAckPaidItem_NotifyChangeClanname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPaidItem_NotifyChangeClanname" );

	parms.NewClanname = NewClanname;
	this->ProcessEvent ( prfAckPaidItem_NotifyChangeClanname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPaidItem_ChangeClanname ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int RemainCount, struct FString NewClanname )
{
	static UFunction* prfAckPaidItem_ChangeClanname = 0;
	UBTPageServerSelection_execrfAckPaidItem_ChangeClanname_Parms parms;

	if ( !prfAckPaidItem_ChangeClanname )
		prfAckPaidItem_ChangeClanname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPaidItem_ChangeClanname" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.RemainCount = RemainCount;
	parms.NewClanname = NewClanname;
	this->ProcessEvent ( prfAckPaidItem_ChangeClanname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPaidItem_ChangeCharname ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int RemainCount, struct FString NewCharname )
{
	static UFunction* prfAckPaidItem_ChangeCharname = 0;
	UBTPageServerSelection_execrfAckPaidItem_ChangeCharname_Parms parms;

	if ( !prfAckPaidItem_ChangeCharname )
		prfAckPaidItem_ChangeCharname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPaidItem_ChangeCharname" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.RemainCount = RemainCount;
	parms.NewCharname = NewCharname;
	this->ProcessEvent ( prfAckPaidItem_ChangeCharname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPaidItem_BroadCast ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_BroadCast = 0;
	UBTPageServerSelection_execrfAckPaidItem_BroadCast_Parms parms;

	if ( !prfAckPaidItem_BroadCast )
		prfAckPaidItem_BroadCast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPaidItem_BroadCast" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_BroadCast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPaidItem_EraseRecord ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int Command, int RemainCount )
{
	static UFunction* prfAckPaidItem_EraseRecord = 0;
	UBTPageServerSelection_execrfAckPaidItem_EraseRecord_Parms parms;

	if ( !prfAckPaidItem_EraseRecord )
		prfAckPaidItem_EraseRecord = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPaidItem_EraseRecord" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.Command = Command;
	parms.RemainCount = RemainCount;
	this->ProcessEvent ( prfAckPaidItem_EraseRecord, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckWebzenBillingUseStorageItem ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int ItemID, struct FBtrDouble ItemExtra )
{
	static UFunction* prfAckWebzenBillingUseStorageItem = 0;
	UBTPageServerSelection_execrfAckWebzenBillingUseStorageItem_Parms parms;

	if ( !prfAckWebzenBillingUseStorageItem )
		prfAckWebzenBillingUseStorageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckWebzenBillingUseStorageItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.ItemID = ItemID;
	parms.ItemExtra = ItemExtra;
	this->ProcessEvent ( prfAckWebzenBillingUseStorageItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckWebzenBillingStorageListEnd (  )
{
	static UFunction* prfAckWebzenBillingStorageListEnd = 0;
	UBTPageServerSelection_execrfAckWebzenBillingStorageListEnd_Parms parms;

	if ( !prfAckWebzenBillingStorageListEnd )
		prfAckWebzenBillingStorageListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckWebzenBillingStorageListEnd" );

	this->ProcessEvent ( prfAckWebzenBillingStorageListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckWebzenBillingStorageList ( class TArray< int > Seq, class TArray< int > ItemSeq, class TArray< int > GroupCode, class TArray< int > ShareFlag, class TArray< int > ProductSeq, class TArray< struct FString > CashName, class TArray< struct FBtrDouble > CashPoint, class TArray< struct FString > SendAccountID, class TArray< struct FString > SendMessage, class TArray< unsigned char > ItemType, class TArray< unsigned char > RelationType, class TArray< int > ProductType, class TArray< int > PriceSeq )
{
	static UFunction* prfAckWebzenBillingStorageList = 0;
	UBTPageServerSelection_execrfAckWebzenBillingStorageList_Parms parms;

	if ( !prfAckWebzenBillingStorageList )
		prfAckWebzenBillingStorageList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckWebzenBillingStorageList" );

	parms.Seq = Seq;
	parms.ItemSeq = ItemSeq;
	parms.GroupCode = GroupCode;
	parms.ShareFlag = ShareFlag;
	parms.ProductSeq = ProductSeq;
	parms.CashName = CashName;
	parms.CashPoint = CashPoint;
	parms.SendAccountID = SendAccountID;
	parms.SendMessage = SendMessage;
	parms.ItemType = ItemType;
	parms.RelationType = RelationType;
	parms.ProductType = ProductType;
	parms.PriceSeq = PriceSeq;
	this->ProcessEvent ( prfAckWebzenBillingStorageList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckWebzenBillingStorageListStart ( int Result, struct FString ErrMsg, int TotalCount, int TotalPage, int CurPage )
{
	static UFunction* prfAckWebzenBillingStorageListStart = 0;
	UBTPageServerSelection_execrfAckWebzenBillingStorageListStart_Parms parms;

	if ( !prfAckWebzenBillingStorageListStart )
		prfAckWebzenBillingStorageListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckWebzenBillingStorageListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalCount = TotalCount;
	parms.TotalPage = TotalPage;
	parms.CurPage = CurPage;
	this->ProcessEvent ( prfAckWebzenBillingStorageListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckRemoveBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRemoveBlockUserList = 0;
	UBTPageServerSelection_execrfAckRemoveBlockUserList_Parms parms;

	if ( !prfAckRemoveBlockUserList )
		prfAckRemoveBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckRemoveBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRemoveBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckAddBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckAddBlockUserList = 0;
	UBTPageServerSelection_execrfAckAddBlockUserList_Parms parms;

	if ( !prfAckAddBlockUserList )
		prfAckAddBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckAddBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckAddBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckEquipItem ( int ChangedNewItemID, struct FBtrDouble ChangedNewUniqueID, int ChangedNewSlotPosition, int ChangedOldItemID, struct FBtrDouble ChangedOldUniqueID, int ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipItem = 0;
	UBTPageServerSelection_execrfAckEquipItem_Parms parms;

	if ( !prfAckEquipItem )
		prfAckEquipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckEquipItem" );

	parms.ChangedNewItemID = ChangedNewItemID;
	parms.ChangedNewUniqueID = ChangedNewUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldItemID = ChangedOldItemID;
	parms.ChangedOldUniqueID = ChangedOldUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckRandomBox_Use ( int Result, struct FString ErrMsg, struct FBtrDouble RandomBoxItemIdx, int RandomBxoItemCount, class TArray< int > ItemIDChoose, class TArray< int > PartIDChoose, class TArray< int > PeriodOnChoosenItem, class TArray< int > StackCountOnChoosenItem, class TArray< unsigned char > bHave, class TArray< struct FBtrDouble > ItemIdx, class TArray< struct FBtrDouble > UntilTime, class TArray< int > StackCount )
{
	static UFunction* prfAckRandomBox_Use = 0;
	UBTPageServerSelection_execrfAckRandomBox_Use_Parms parms;

	if ( !prfAckRandomBox_Use )
		prfAckRandomBox_Use = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckRandomBox_Use" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RandomBoxItemIdx = RandomBoxItemIdx;
	parms.RandomBxoItemCount = RandomBxoItemCount;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	parms.PeriodOnChoosenItem = PeriodOnChoosenItem;
	parms.StackCountOnChoosenItem = StackCountOnChoosenItem;
	parms.bHave = bHave;
	parms.ItemIdx = ItemIdx;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckRandomBox_Use, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowRandBoxHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRandBoxHK_OnOK = 0;
	UBTPageServerSelection_execBTWindowRandBoxHK_OnOK_Parms parms;

	if ( !pBTWindowRandBoxHK_OnOK )
		pBTWindowRandBoxHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowRandBoxHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRandBoxHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckBlockUserList ( class TArray< struct FString > CharName )
{
	static UFunction* prfAckBlockUserList = 0;
	UBTPageServerSelection_execrfAckBlockUserList_Parms parms;

	if ( !prfAckBlockUserList )
		prfAckBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckBlockUserList" );

	parms.CharName = CharName;
	this->ProcessEvent ( prfAckBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckBlockUserListEnd (  )
{
	static UFunction* prfAckBlockUserListEnd = 0;
	UBTPageServerSelection_execrfAckBlockUserListEnd_Parms parms;

	if ( !prfAckBlockUserListEnd )
		prfAckBlockUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckBlockUserListEnd" );

	this->ProcessEvent ( prfAckBlockUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckBlockUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckBlockUserListStart = 0;
	UBTPageServerSelection_execrfAckBlockUserListStart_Parms parms;

	if ( !prfAckBlockUserListStart )
		prfAckBlockUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckBlockUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckBlockUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPCBangUserListEnd (  )
{
	static UFunction* prfAckPCBangUserListEnd = 0;
	UBTPageServerSelection_execrfAckPCBangUserListEnd_Parms parms;

	if ( !prfAckPCBangUserListEnd )
		prfAckPCBangUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPCBangUserListEnd" );

	this->ProcessEvent ( prfAckPCBangUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPCBangUserList ( class TArray< struct FString > FriendName, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > Level, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, class TArray< unsigned char > IsCombat, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckPCBangUserList = 0;
	UBTPageServerSelection_execrfAckPCBangUserList_Parms parms;

	if ( !prfAckPCBangUserList )
		prfAckPCBangUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPCBangUserList" );

	parms.FriendName = FriendName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.Level = Level;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.IsCombat = IsCombat;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckPCBangUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckPCBangUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckPCBangUserListStart = 0;
	UBTPageServerSelection_execrfAckPCBangUserListStart_Parms parms;

	if ( !prfAckPCBangUserListStart )
		prfAckPCBangUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckPCBangUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckPCBangUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckFriendListEnd (  )
{
	static UFunction* prfAckFriendListEnd = 0;
	UBTPageServerSelection_execrfAckFriendListEnd_Parms parms;

	if ( !prfAckFriendListEnd )
		prfAckFriendListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckFriendListEnd" );

	this->ProcessEvent ( prfAckFriendListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckFriendList ( class TArray< struct FString > FriendName, class TArray< unsigned char > IsLogOn, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > LevelMarkID, class TArray< int > ClanLevel, class TArray< int > Level, class TArray< unsigned char > IsLookForClan )
{
	static UFunction* prfAckFriendList = 0;
	UBTPageServerSelection_execrfAckFriendList_Parms parms;

	if ( !prfAckFriendList )
		prfAckFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckFriendList" );

	parms.FriendName = FriendName;
	parms.IsLogOn = IsLogOn;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.LevelMarkID = LevelMarkID;
	parms.ClanLevel = ClanLevel;
	parms.Level = Level;
	parms.IsLookForClan = IsLookForClan;
	this->ProcessEvent ( prfAckFriendList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckFriendListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckFriendListStart = 0;
	UBTPageServerSelection_execrfAckFriendListStart_Parms parms;

	if ( !prfAckFriendListStart )
		prfAckFriendListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckFriendListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckFriendListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckClanUserListEnd (  )
{
	static UFunction* prfAckClanUserListEnd = 0;
	UBTPageServerSelection_execrfAckClanUserListEnd_Parms parms;

	if ( !prfAckClanUserListEnd )
		prfAckClanUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckClanUserListEnd" );

	this->ProcessEvent ( prfAckClanUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckClanUserList ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< int > ClanWinCnt, class TArray< int > ClanLoseCnt, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > DudeId )
{
	static UFunction* prfAckClanUserList = 0;
	UBTPageServerSelection_execrfAckClanUserList_Parms parms;

	if ( !prfAckClanUserList )
		prfAckClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckClanUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWinCnt = ClanWinCnt;
	parms.ClanLoseCnt = ClanLoseCnt;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.DudeId = DudeId;
	this->ProcessEvent ( prfAckClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckClanUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanUserListStart = 0;
	UBTPageServerSelection_execrfAckClanUserListStart_Parms parms;

	if ( !prfAckClanUserListStart )
		prfAckClanUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckClanUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckRegisterMainPCBang ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRegisterMainPCBang = 0;
	UBTPageServerSelection_execrfAckRegisterMainPCBang_Parms parms;

	if ( !prfAckRegisterMainPCBang )
		prfAckRegisterMainPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckRegisterMainPCBang" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRegisterMainPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqIsPaidWebzenPCBang ( unsigned char IsPaid )
{
	static UFunction* prfReqIsPaidWebzenPCBang = 0;
	UBTPageServerSelection_execrfReqIsPaidWebzenPCBang_Parms parms;

	if ( !prfReqIsPaidWebzenPCBang )
		prfReqIsPaidWebzenPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqIsPaidWebzenPCBang" );

	parms.IsPaid = IsPaid;
	this->ProcessEvent ( prfReqIsPaidWebzenPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckClanInfo ( struct FClanInfo stClanInfo )
{
	static UFunction* prfAckClanInfo = 0;
	UBTPageServerSelection_execrfAckClanInfo_Parms parms;

	if ( !prfAckClanInfo )
		prfAckClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckClanInfo" );

	parms.stClanInfo = stClanInfo;
	this->ProcessEvent ( prfAckClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckCharInfo ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FCharInfo stCharInfo, unsigned char InClanRank, int ClanLevel )
{
	static UFunction* prfAckCharInfo = 0;
	UBTPageServerSelection_execrfAckCharInfo_Parms parms;

	if ( !prfAckCharInfo )
		prfAckCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.stCharInfo = stCharInfo;
	parms.InClanRank = InClanRank;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckRegisteredPCBangInfo ( int Result, struct FString ErrMsg, unsigned char IsRegisteredPCBang, unsigned char IsMainPCBang, struct FString PCBangName )
{
	static UFunction* prfAckRegisteredPCBangInfo = 0;
	UBTPageServerSelection_execrfAckRegisteredPCBangInfo_Parms parms;

	if ( !prfAckRegisteredPCBangInfo )
		prfAckRegisteredPCBangInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckRegisteredPCBangInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsRegisteredPCBang = IsRegisteredPCBang;
	parms.IsMainPCBang = IsMainPCBang;
	parms.PCBangName = PCBangName;
	this->ProcessEvent ( prfAckRegisteredPCBangInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfAckWebzenShopScriptVersion = 0;
	UBTPageServerSelection_execrfAckWebzenShopScriptVersion_Parms parms;

	if ( !prfAckWebzenShopScriptVersion )
		prfAckWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfAckWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckMyMoney ( int Result, struct FString ErrMsg, int Point, int Cash )
{
	static UFunction* prfAckMyMoney = 0;
	UBTPageServerSelection_execrfAckMyMoney_Parms parms;

	if ( !prfAckMyMoney )
		prfAckMyMoney = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckMyMoney" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Point = Point;
	parms.Cash = Cash;
	this->ProcessEvent ( prfAckMyMoney, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckBuyItemByWebzenCash ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBuyItemByWebzenCash = 0;
	UBTPageServerSelection_execrfAckBuyItemByWebzenCash_Parms parms;

	if ( !prfAckBuyItemByWebzenCash )
		prfAckBuyItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckBuyItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBuyItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckWebzenCash ( int Result, struct FString ErrMsg, struct FBtrDouble PCoinCash, struct FBtrDouble CCoinCash )
{
	static UFunction* prfAckWebzenCash = 0;
	UBTPageServerSelection_execrfAckWebzenCash_Parms parms;

	if ( !prfAckWebzenCash )
		prfAckWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PCoinCash = PCoinCash;
	parms.CCoinCash = CCoinCash;
	this->ProcessEvent ( prfAckWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqDailyQuestNewAvailable ( class TArray< int > ExpiredQuestID, class TArray< int > NewQuestID )
{
	static UFunction* prfReqDailyQuestNewAvailable = 0;
	UBTPageServerSelection_execrfReqDailyQuestNewAvailable_Parms parms;

	if ( !prfReqDailyQuestNewAvailable )
		prfReqDailyQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqDailyQuestNewAvailable" );

	parms.ExpiredQuestID = ExpiredQuestID;
	parms.NewQuestID = NewQuestID;
	this->ProcessEvent ( prfReqDailyQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqQuestNewAvailable ( class TArray< int > AchivedQuestID, class TArray< int > NewQuestID, class TArray< unsigned char > IsDailyQuest, class TArray< int > ExpiredQuest )
{
	static UFunction* prfReqQuestNewAvailable = 0;
	UBTPageServerSelection_execrfReqQuestNewAvailable_Parms parms;

	if ( !prfReqQuestNewAvailable )
		prfReqQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqQuestNewAvailable" );

	parms.AchivedQuestID = AchivedQuestID;
	parms.NewQuestID = NewQuestID;
	parms.IsDailyQuest = IsDailyQuest;
	parms.ExpiredQuest = ExpiredQuest;
	this->ProcessEvent ( prfReqQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckQuestUpdate ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestUpdate = 0;
	UBTPageServerSelection_execrfAckQuestUpdate_Parms parms;

	if ( !prfAckQuestUpdate )
		prfAckQuestUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckQuestUpdate" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestUpdate, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckQuestListEnd (  )
{
	static UFunction* prfAckQuestListEnd = 0;
	UBTPageServerSelection_execrfAckQuestListEnd_Parms parms;

	if ( !prfAckQuestListEnd )
		prfAckQuestListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckQuestListEnd" );

	this->ProcessEvent ( prfAckQuestListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckQuestList ( class TArray< int > QuestID, class TArray< int > CountPrograss, class TArray< unsigned char > IsDailyQuest )
{
	static UFunction* prfAckQuestList = 0;
	UBTPageServerSelection_execrfAckQuestList_Parms parms;

	if ( !prfAckQuestList )
		prfAckQuestList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckQuestList" );

	parms.QuestID = QuestID;
	parms.CountPrograss = CountPrograss;
	parms.IsDailyQuest = IsDailyQuest;
	this->ProcessEvent ( prfAckQuestList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckQuestListStart ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestListStart = 0;
	UBTPageServerSelection_execrfAckQuestListStart_Parms parms;

	if ( !prfAckQuestListStart )
		prfAckQuestListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckQuestListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckLimitedListInChannel ( int Result, class TArray< int > LimitedMapID, class TArray< int > LimitedModeID )
{
	static UFunction* prfAckLimitedListInChannel = 0;
	UBTPageServerSelection_execrfAckLimitedListInChannel_Parms parms;

	if ( !prfAckLimitedListInChannel )
		prfAckLimitedListInChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckLimitedListInChannel" );

	parms.Result = Result;
	parms.LimitedMapID = LimitedMapID;
	parms.LimitedModeID = LimitedModeID;
	this->ProcessEvent ( prfAckLimitedListInChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqClanMatch_InviteCrewResult ( struct FString Invitee, int Result )
{
	static UFunction* prfReqClanMatch_InviteCrewResult = 0;
	UBTPageServerSelection_execrfReqClanMatch_InviteCrewResult_Parms parms;

	if ( !prfReqClanMatch_InviteCrewResult )
		prfReqClanMatch_InviteCrewResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqClanMatch_InviteCrewResult" );

	parms.Invitee = Invitee;
	parms.Result = Result;
	this->ProcessEvent ( prfReqClanMatch_InviteCrewResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowInviteClanWarGameHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowInviteClanWarGameHK_OnCancel = 0;
	UBTPageServerSelection_execBTWindowInviteClanWarGameHK_OnCancel_Parms parms;

	if ( !pBTWindowInviteClanWarGameHK_OnCancel )
		pBTWindowInviteClanWarGameHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowInviteClanWarGameHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowInviteClanWarGameHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowInviteClanWarGameHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowInviteClanWarGameHK_OnOK = 0;
	UBTPageServerSelection_execBTWindowInviteClanWarGameHK_OnOK_Parms parms;

	if ( !pBTWindowInviteClanWarGameHK_OnOK )
		pBTWindowInviteClanWarGameHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowInviteClanWarGameHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowInviteClanWarGameHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqClanMatch_RecvInviteCrew ( struct FString Inviter, struct FString ServerIP, int Port, int WaittingID, struct FString Msg, int MapNum, int InviteUserChannelNum, struct FString LeaderName, struct FString RoomName )
{
	static UFunction* prfReqClanMatch_RecvInviteCrew = 0;
	UBTPageServerSelection_execrfReqClanMatch_RecvInviteCrew_Parms parms;

	if ( !prfReqClanMatch_RecvInviteCrew )
		prfReqClanMatch_RecvInviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqClanMatch_RecvInviteCrew" );

	parms.Inviter = Inviter;
	parms.ServerIP = ServerIP;
	parms.Port = Port;
	parms.WaittingID = WaittingID;
	parms.Msg = Msg;
	parms.MapNum = MapNum;
	parms.InviteUserChannelNum = InviteUserChannelNum;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	this->ProcessEvent ( prfReqClanMatch_RecvInviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckClanMatch_InviteCrew ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_InviteCrew = 0;
	UBTPageServerSelection_execrfAckClanMatch_InviteCrew_Parms parms;

	if ( !prfAckClanMatch_InviteCrew )
		prfAckClanMatch_InviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckClanMatch_InviteCrew" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_InviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckRecvInviteGameRoomResult ( int Result )
{
	static UFunction* prfAckRecvInviteGameRoomResult = 0;
	UBTPageServerSelection_execrfAckRecvInviteGameRoomResult_Parms parms;

	if ( !prfAckRecvInviteGameRoomResult )
		prfAckRecvInviteGameRoomResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckRecvInviteGameRoomResult" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckRecvInviteGameRoomResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowInviteGameHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowInviteGameHK_OnCancel = 0;
	UBTPageServerSelection_execBTWindowInviteGameHK_OnCancel_Parms parms;

	if ( !pBTWindowInviteGameHK_OnCancel )
		pBTWindowInviteGameHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowInviteGameHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowInviteGameHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowInviteGameHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowInviteGameHK_OnOK = 0;
	UBTPageServerSelection_execBTWindowInviteGameHK_OnOK_Parms parms;

	if ( !pBTWindowInviteGameHK_OnOK )
		pBTWindowInviteGameHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowInviteGameHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowInviteGameHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqRecvInviteGameRoom ( struct FString InviteUserServerName, int InviteUserServerID, int InviteUserChannelNumber, struct FString RoomUniqueID, int RoomNumber, struct FString RoomName, unsigned char RoomState, struct FString MapName, struct FString OwnerName, unsigned char GameMode, unsigned char WeaponLimit, unsigned char IsTeamBalance, struct FString Password, struct FString InviteCharName )
{
	static UFunction* prfReqRecvInviteGameRoom = 0;
	UBTPageServerSelection_execrfReqRecvInviteGameRoom_Parms parms;

	if ( !prfReqRecvInviteGameRoom )
		prfReqRecvInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqRecvInviteGameRoom" );

	parms.InviteUserServerName = InviteUserServerName;
	parms.InviteUserServerID = InviteUserServerID;
	parms.InviteUserChannelNumber = InviteUserChannelNumber;
	parms.RoomUniqueID = RoomUniqueID;
	parms.RoomNumber = RoomNumber;
	parms.RoomName = RoomName;
	parms.RoomState = RoomState;
	parms.MapName = MapName;
	parms.OwnerName = OwnerName;
	parms.GameMode = GameMode;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Password = Password;
	parms.InviteCharName = InviteCharName;
	this->ProcessEvent ( prfReqRecvInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckInviteGameRoom ( int Result, unsigned char Answer, struct FString GuestCharName )
{
	static UFunction* prfAckInviteGameRoom = 0;
	UBTPageServerSelection_execrfAckInviteGameRoom_Parms parms;

	if ( !prfAckInviteGameRoom )
		prfAckInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckInviteGameRoom" );

	parms.Result = Result;
	parms.Answer = Answer;
	parms.GuestCharName = GuestCharName;
	this->ProcessEvent ( prfAckInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckCharInfoFromLoginServer ( int Result, struct FString CharName, int Level, int Exp, struct FString ClanName )
{
	static UFunction* prfAckCharInfoFromLoginServer = 0;
	UBTPageServerSelection_execrfAckCharInfoFromLoginServer_Parms parms;

	if ( !prfAckCharInfoFromLoginServer )
		prfAckCharInfoFromLoginServer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckCharInfoFromLoginServer" );

	parms.Result = Result;
	parms.CharName = CharName;
	parms.Level = Level;
	parms.Exp = Exp;
	parms.ClanName = ClanName;
	this->ProcessEvent ( prfAckCharInfoFromLoginServer, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowItemBoxHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowItemBoxHK_OnOK = 0;
	UBTPageServerSelection_execBTWindowItemBoxHK_OnOK_Parms parms;

	if ( !pBTWindowItemBoxHK_OnOK )
		pBTWindowItemBoxHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowItemBoxHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowItemBoxHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckItemListInItemBox ( int Result, struct FString ErrMsg, struct FBtrDouble ItemUniqueID, int BoxItemID, class TArray< int > ItemID, class TArray< int > PartID )
{
	static UFunction* prfAckItemListInItemBox = 0;
	UBTPageServerSelection_execrfAckItemListInItemBox_Parms parms;

	if ( !prfAckItemListInItemBox )
		prfAckItemListInItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckItemListInItemBox" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemUniqueID = ItemUniqueID;
	parms.BoxItemID = BoxItemID;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( prfAckItemListInItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTPageServerSelection_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckGetServerTime ( struct FBtrDouble ServerTime, struct FString ClientIP )
{
	static UFunction* prfAckGetServerTime = 0;
	UBTPageServerSelection_execrfAckGetServerTime_Parms parms;

	if ( !prfAckGetServerTime )
		prfAckGetServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckGetServerTime" );

	parms.ServerTime = ServerTime;
	parms.ClientIP = ClientIP;
	this->ProcessEvent ( prfAckGetServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageServerSelection_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckExceedMaxUser (  )
{
	static UFunction* prfAckExceedMaxUser = 0;
	UBTPageServerSelection_execrfAckExceedMaxUser_Parms parms;

	if ( !prfAckExceedMaxUser )
		prfAckExceedMaxUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckExceedMaxUser" );

	this->ProcessEvent ( prfAckExceedMaxUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BackToServerSelection_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBackToServerSelection_OnClick = 0;
	UBTPageServerSelection_execBackToServerSelection_OnClick_Parms parms;

	if ( !pBackToServerSelection_OnClick )
		pBackToServerSelection_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BackToServerSelection_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBackToServerSelection_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqRecvForceDisconnected_FromGM ( int Result, struct FString ErrMsg )
{
	static UFunction* prfReqRecvForceDisconnected_FromGM = 0;
	UBTPageServerSelection_execrfReqRecvForceDisconnected_FromGM_Parms parms;

	if ( !prfReqRecvForceDisconnected_FromGM )
		prfReqRecvForceDisconnected_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqRecvForceDisconnected_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfReqRecvForceDisconnected_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqRecvNotice_FromGM ( int Result, struct FString ErrMsg, class TArray< struct FString > NoticeMsg, unsigned char IsFromDB )
{
	static UFunction* prfReqRecvNotice_FromGM = 0;
	UBTPageServerSelection_execrfReqRecvNotice_FromGM_Parms parms;

	if ( !prfReqRecvNotice_FromGM )
		prfReqRecvNotice_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqRecvNotice_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeMsg = NoticeMsg;
	parms.IsFromDB = IsFromDB;
	this->ProcessEvent ( prfReqRecvNotice_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckRepairItem ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, int RepairCost, class TArray< int > DamageDegree )
{
	static UFunction* prfAckRepairItem = 0;
	UBTPageServerSelection_execrfAckRepairItem_Parms parms;

	if ( !prfAckRepairItem )
		prfAckRepairItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckRepairItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	parms.DamageDegree = DamageDegree;
	this->ProcessEvent ( prfAckRepairItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckRepairCost ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > RepairCost )
{
	static UFunction* prfAckRepairCost = 0;
	UBTPageServerSelection_execrfAckRepairCost_Parms parms;

	if ( !prfAckRepairCost )
		prfAckRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckRepairCost" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( prfAckRepairCost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqNotifyDurabilityZeroItem ( int Result, struct FString ErrMsg, int UserID, class TArray< struct FBtrDouble > ItemUniqueIDs, class TArray< int > ItemIDs, class TArray< int > ItemPartIDs, class TArray< unsigned char > ItemSlotPos )
{
	static UFunction* prfReqNotifyDurabilityZeroItem = 0;
	UBTPageServerSelection_execrfReqNotifyDurabilityZeroItem_Parms parms;

	if ( !prfReqNotifyDurabilityZeroItem )
		prfReqNotifyDurabilityZeroItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqNotifyDurabilityZeroItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.ItemUniqueIDs = ItemUniqueIDs;
	parms.ItemIDs = ItemIDs;
	parms.ItemPartIDs = ItemPartIDs;
	parms.ItemSlotPos = ItemSlotPos;
	this->ProcessEvent ( prfReqNotifyDurabilityZeroItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowBuyShopItem_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowBuyShopItem_OnOK = 0;
	UBTPageServerSelection_execBTWindowBuyShopItem_OnOK_Parms parms;

	if ( !pBTWindowBuyShopItem_OnOK )
		pBTWindowBuyShopItem_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowBuyShopItem_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowBuyShopItem_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckUpdateQSlot ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUpdateQSlot = 0;
	UBTPageServerSelection_execrfAckUpdateQSlot_Parms parms;

	if ( !prfAckUpdateQSlot )
		prfAckUpdateQSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckUpdateQSlot" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUpdateQSlot, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckBuyShopItem ( int ItemCount, class TArray< int > Result, class TArray< int > BoughtItemTypeID, class TArray< struct FBtrDouble > BoughtItemUniqueID, class TArray< int > BoughtPartID, class TArray< struct FBtrDouble > BoughtUntilTIme, class TArray< int > BoughtStackCnt, int PointRemain, int CashRemain )
{
	static UFunction* prfAckBuyShopItem = 0;
	UBTPageServerSelection_execrfAckBuyShopItem_Parms parms;

	if ( !prfAckBuyShopItem )
		prfAckBuyShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckBuyShopItem" );

	parms.ItemCount = ItemCount;
	parms.Result = Result;
	parms.BoughtItemTypeID = BoughtItemTypeID;
	parms.BoughtItemUniqueID = BoughtItemUniqueID;
	parms.BoughtPartID = BoughtPartID;
	parms.BoughtUntilTIme = BoughtUntilTIme;
	parms.BoughtStackCnt = BoughtStackCnt;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	this->ProcessEvent ( prfAckBuyShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::BTWindowItemExpiredHK_OnOK_CheckDurX ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowItemExpiredHK_OnOK_CheckDurX = 0;
	UBTPageServerSelection_execBTWindowItemExpiredHK_OnOK_CheckDurX_Parms parms;

	if ( !pBTWindowItemExpiredHK_OnOK_CheckDurX )
		pBTWindowItemExpiredHK_OnOK_CheckDurX = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWindowItemExpiredHK_OnOK_CheckDurX" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowItemExpiredHK_OnOK_CheckDurX, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckNotifyExpiredSkillIDs ( int UserID, class TArray< struct FBtrDouble > ExpiredSkillUniqueIDs, class TArray< int > ExpiredSkillIDs, int Result, struct FString ErrMsg, class TArray< unsigned char > ExpiredSkillSlotPositions )
{
	static UFunction* prfAckNotifyExpiredSkillIDs = 0;
	UBTPageServerSelection_execrfAckNotifyExpiredSkillIDs_Parms parms;

	if ( !prfAckNotifyExpiredSkillIDs )
		prfAckNotifyExpiredSkillIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckNotifyExpiredSkillIDs" );

	parms.UserID = UserID;
	parms.ExpiredSkillUniqueIDs = ExpiredSkillUniqueIDs;
	parms.ExpiredSkillIDs = ExpiredSkillIDs;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ExpiredSkillSlotPositions = ExpiredSkillSlotPositions;
	this->ProcessEvent ( prfAckNotifyExpiredSkillIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckNotifyExpiredItemIDs ( int UserID, class TArray< struct FBtrDouble > ExpiredItemUniqueIDs, class TArray< int > ExpiredItemIDs, class TArray< int > ExpiredItemPartIDs, class TArray< unsigned char > ExpiredItemSlotPos, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckNotifyExpiredItemIDs = 0;
	UBTPageServerSelection_execrfAckNotifyExpiredItemIDs_Parms parms;

	if ( !prfAckNotifyExpiredItemIDs )
		prfAckNotifyExpiredItemIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckNotifyExpiredItemIDs" );

	parms.UserID = UserID;
	parms.ExpiredItemUniqueIDs = ExpiredItemUniqueIDs;
	parms.ExpiredItemIDs = ExpiredItemIDs;
	parms.ExpiredItemPartIDs = ExpiredItemPartIDs;
	parms.ExpiredItemSlotPos = ExpiredItemSlotPos;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckNotifyExpiredItemIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfReqNotifyRelayServerAddr ( struct FString RelayIP, int RelayPort )
{
	static UFunction* prfReqNotifyRelayServerAddr = 0;
	UBTPageServerSelection_execrfReqNotifyRelayServerAddr_Parms parms;

	if ( !prfReqNotifyRelayServerAddr )
		prfReqNotifyRelayServerAddr = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfReqNotifyRelayServerAddr" );

	parms.RelayIP = RelayIP;
	parms.RelayPort = RelayPort;
	this->ProcessEvent ( prfReqNotifyRelayServerAddr, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckHash_BTWindowErrorDefineHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* prfAckHash_BTWindowErrorDefineHK_OnOK = 0;
	UBTPageServerSelection_execrfAckHash_BTWindowErrorDefineHK_OnOK_Parms parms;

	if ( !prfAckHash_BTWindowErrorDefineHK_OnOK )
		prfAckHash_BTWindowErrorDefineHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckHash_BTWindowErrorDefineHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( prfAckHash_BTWindowErrorDefineHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckHash ( int Result, struct FString Error )
{
	static UFunction* prfAckHash = 0;
	UBTPageServerSelection_execrfAckHash_Parms parms;

	if ( !prfAckHash )
		prfAckHash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckHash" );

	parms.Result = Result;
	parms.Error = Error;
	this->ProcessEvent ( prfAckHash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelection::CheckToSetPageLobby (  )
{
	static UFunction* pCheckToSetPageLobby = 0;
	UBTPageServerSelection_execCheckToSetPageLobby_Parms parms;

	if ( !pCheckToSetPageLobby )
		pCheckToSetPageLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.CheckToSetPageLobby" );

	this->ProcessEvent ( pCheckToSetPageLobby, &parms, NULL );

}*/

/*bool UBTPageServerSelection::rfAckServerTime ( int Time )
{
	static UFunction* prfAckServerTime = 0;
	UBTPageServerSelection_execrfAckServerTime_Parms parms;

	if ( !prfAckServerTime )
		prfAckServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckServerTime" );

	parms.Time = Time;
	this->ProcessEvent ( prfAckServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckQSlotList ( int Result, struct FString ErrMsg, class TArray< int > QSlotID, class TArray< struct FString > QSlotName, class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWItemID, class TArray< struct FBtrDouble > PistolItemID, class TArray< struct FBtrDouble > TWItemID1, class TArray< struct FBtrDouble > TWItemID2, class TArray< int > Skill1, class TArray< int > Skill2, class TArray< int > Skill3, class TArray< int > Skill4 )
{
	static UFunction* prfAckQSlotList = 0;
	UBTPageServerSelection_execrfAckQSlotList_Parms parms;

	if ( !prfAckQSlotList )
		prfAckQSlotList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckQSlotList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.QSlotID = QSlotID;
	parms.QSlotName = QSlotName;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWItemID = MWItemID;
	parms.PistolItemID = PistolItemID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1 = Skill1;
	parms.Skill2 = Skill2;
	parms.Skill3 = Skill3;
	parms.Skill4 = Skill4;
	this->ProcessEvent ( prfAckQSlotList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckUserSkillListEnd (  )
{
	static UFunction* prfAckUserSkillListEnd = 0;
	UBTPageServerSelection_execrfAckUserSkillListEnd_Parms parms;

	if ( !prfAckUserSkillListEnd )
		prfAckUserSkillListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckUserSkillListEnd" );

	this->ProcessEvent ( prfAckUserSkillListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckUserSkillList ( class TArray< int > UniqueSkillID, class TArray< int > SkillID, class TArray< struct FBtrDouble > UntilTime, class TArray< unsigned char > SlotPosition )
{
	static UFunction* prfAckUserSkillList = 0;
	UBTPageServerSelection_execrfAckUserSkillList_Parms parms;

	if ( !prfAckUserSkillList )
		prfAckUserSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckUserSkillList" );

	parms.UniqueSkillID = UniqueSkillID;
	parms.SkillID = SkillID;
	parms.UntilTime = UntilTime;
	parms.SlotPosition = SlotPosition;
	this->ProcessEvent ( prfAckUserSkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckUserSkillListStart ( int Count, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUserSkillListStart = 0;
	UBTPageServerSelection_execrfAckUserSkillListStart_Parms parms;

	if ( !prfAckUserSkillListStart )
		prfAckUserSkillListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckUserSkillListStart" );

	parms.Count = Count;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUserSkillListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckItemListEnd (  )
{
	static UFunction* prfAckItemListEnd = 0;
	UBTPageServerSelection_execrfAckItemListEnd_Parms parms;

	if ( !prfAckItemListEnd )
		prfAckItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckItemListEnd" );

	this->ProcessEvent ( prfAckItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckItemList ( class TArray< struct FBtrDouble > UniqueID, class TArray< int > ItemID, class TArray< int > ItemType, class TArray< int > Durability, class TArray< struct FBtrDouble > UntilTime, class TArray< int > SlotPosition, class TArray< int > AddPartsID, class TArray< int > DamageDegree, class TArray< unsigned char > ItemState, class TArray< int > StackCount, class TArray< int > PaintID, class TArray< int > TradeCount )
{
	static UFunction* prfAckItemList = 0;
	UBTPageServerSelection_execrfAckItemList_Parms parms;

	if ( !prfAckItemList )
		prfAckItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckItemList" );

	parms.UniqueID = UniqueID;
	parms.ItemID = ItemID;
	parms.ItemType = ItemType;
	parms.Durability = Durability;
	parms.UntilTime = UntilTime;
	parms.SlotPosition = SlotPosition;
	parms.AddPartsID = AddPartsID;
	parms.DamageDegree = DamageDegree;
	parms.ItemState = ItemState;
	parms.StackCount = StackCount;
	parms.PaintID = PaintID;
	parms.TradeCount = TradeCount;
	this->ProcessEvent ( prfAckItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckItemListStart ( int Count, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckItemListStart = 0;
	UBTPageServerSelection_execrfAckItemListStart_Parms parms;

	if ( !prfAckItemListStart )
		prfAckItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckItemListStart" );

	parms.Count = Count;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckLogin2 ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FBtrDouble CurServerTime, int CharDBID, unsigned char IsGM )
{
	static UFunction* prfAckLogin2 = 0;
	UBTPageServerSelection_execrfAckLogin2_Parms parms;

	if ( !prfAckLogin2 )
		prfAckLogin2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckLogin2" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.CurServerTime = CurServerTime;
	parms.CharDBID = CharDBID;
	parms.IsGM = IsGM;
	this->ProcessEvent ( prfAckLogin2, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckLeaveChannel ( int Result, struct FString UserID, int UID )
{
	static UFunction* prfAckLeaveChannel = 0;
	UBTPageServerSelection_execrfAckLeaveChannel_Parms parms;

	if ( !prfAckLeaveChannel )
		prfAckLeaveChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckLeaveChannel" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.UID = UID;
	this->ProcessEvent ( prfAckLeaveChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTPageServerSelection_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::Exit_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pExit_OnOK = 0;
	UBTPageServerSelection_execExit_OnOK_Parms parms;

	if ( !pExit_OnOK )
		pExit_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.Exit_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pExit_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelection::TcpChannel_OnError ( int ErrCode )
{
	static UFunction* pTcpChannel_OnError = 0;
	UBTPageServerSelection_execTcpChannel_OnError_Parms parms;

	if ( !pTcpChannel_OnError )
		pTcpChannel_OnError = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.TcpChannel_OnError" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpChannel_OnError, &parms, NULL );

}*/

/*void UBTPageServerSelection::TcpChannel_OnClose ( int ErrCode )
{
	static UFunction* pTcpChannel_OnClose = 0;
	UBTPageServerSelection_execTcpChannel_OnClose_Parms parms;

	if ( !pTcpChannel_OnClose )
		pTcpChannel_OnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.TcpChannel_OnClose" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpChannel_OnClose, &parms, NULL );

}*/

/*void UBTPageServerSelection::TcpChannel_OnConnect ( int ErrCode )
{
	static UFunction* pTcpChannel_OnConnect = 0;
	UBTPageServerSelection_execTcpChannel_OnConnect_Parms parms;

	if ( !pTcpChannel_OnConnect )
		pTcpChannel_OnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.TcpChannel_OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpChannel_OnConnect, &parms, NULL );

}*/

/*void UBTPageServerSelection::TcpLogin_OnConnect ( int ErrCode )
{
	static UFunction* pTcpLogin_OnConnect = 0;
	UBTPageServerSelection_execTcpLogin_OnConnect_Parms parms;

	if ( !pTcpLogin_OnConnect )
		pTcpLogin_OnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.TcpLogin_OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpLogin_OnConnect, &parms, NULL );

}*/

/*void UBTPageServerSelection::NewDrawServerSelection ( class TArray< struct FString > CServername, class TArray< struct FString > CServerShortName, class TArray< struct FString > ServerIP, class TArray< int > serverPort, class TArray< struct FString > ChannelName, class TArray< struct FString > ChannelNickName, class TArray< int > ChannelNum, class TArray< int > chMaxUser, class TArray< int > chCurUser, class TArray< struct FString > ServerGroupName, class TArray< int > ServerGroupID, class TArray< int > ServerDispOrder, class TArray< int > DataPort, class TArray< unsigned char > OptionCount_byte, class TArray< unsigned char > OptionKey_byte, class TArray< unsigned char > OptionValue_byte, class TArray< unsigned char > OptionCount_int, class TArray< unsigned char > OptionKey_int, class TArray< int > OptionValue_int, class TArray< unsigned char > OptionCount_float, class TArray< unsigned char > OptionKey_float, class TArray< float > OptionValue_float, class TArray< unsigned char > IsClanChannel, class TArray< unsigned char > IsUseDedicateHost )
{
	static UFunction* pNewDrawServerSelection = 0;
	UBTPageServerSelection_execNewDrawServerSelection_Parms parms;

	if ( !pNewDrawServerSelection )
		pNewDrawServerSelection = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.NewDrawServerSelection" );

	parms.CServername = CServername;
	parms.CServerShortName = CServerShortName;
	parms.ServerIP = ServerIP;
	parms.serverPort = serverPort;
	parms.ChannelName = ChannelName;
	parms.ChannelNickName = ChannelNickName;
	parms.ChannelNum = ChannelNum;
	parms.chMaxUser = chMaxUser;
	parms.chCurUser = chCurUser;
	parms.ServerGroupName = ServerGroupName;
	parms.ServerGroupID = ServerGroupID;
	parms.ServerDispOrder = ServerDispOrder;
	parms.DataPort = DataPort;
	parms.OptionCount_byte = OptionCount_byte;
	parms.OptionKey_byte = OptionKey_byte;
	parms.OptionValue_byte = OptionValue_byte;
	parms.OptionCount_int = OptionCount_int;
	parms.OptionKey_int = OptionKey_int;
	parms.OptionValue_int = OptionValue_int;
	parms.OptionCount_float = OptionCount_float;
	parms.OptionKey_float = OptionKey_float;
	parms.OptionValue_float = OptionValue_float;
	parms.IsClanChannel = IsClanChannel;
	parms.IsUseDedicateHost = IsUseDedicateHost;
	this->ProcessEvent ( pNewDrawServerSelection, &parms, NULL );

}*/

/*bool UBTPageServerSelection::rfAckServerListFromLoginServer ( class TArray< struct FString > CServername, class TArray< struct FString > CServerShortName, class TArray< struct FString > ServerIP, class TArray< int > serverPort, class TArray< struct FString > ChannelName, class TArray< struct FString > ChannelNickName, class TArray< int > ChannelNum, class TArray< int > chMaxUser, class TArray< int > chCurUser, class TArray< struct FString > ServerGroupName, class TArray< int > ServerGroupID, class TArray< int > ServerDispOrder, class TArray< int > DataPort, class TArray< unsigned char > OptionCount_byte, class TArray< unsigned char > OptionKey_byte, class TArray< unsigned char > OptionValue_byte, class TArray< unsigned char > OptionCount_int, class TArray< unsigned char > OptionKey_int, class TArray< int > OptionValue_int, class TArray< unsigned char > OptionCount_float, class TArray< unsigned char > OptionKey_float, class TArray< float > OptionValue_float, class TArray< unsigned char > IsClanChannel, class TArray< unsigned char > IsUseDedicateHost )
{
	static UFunction* prfAckServerListFromLoginServer = 0;
	UBTPageServerSelection_execrfAckServerListFromLoginServer_Parms parms;

	if ( !prfAckServerListFromLoginServer )
		prfAckServerListFromLoginServer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.rfAckServerListFromLoginServer" );

	parms.CServername = CServername;
	parms.CServerShortName = CServerShortName;
	parms.ServerIP = ServerIP;
	parms.serverPort = serverPort;
	parms.ChannelName = ChannelName;
	parms.ChannelNickName = ChannelNickName;
	parms.ChannelNum = ChannelNum;
	parms.chMaxUser = chMaxUser;
	parms.chCurUser = chCurUser;
	parms.ServerGroupName = ServerGroupName;
	parms.ServerGroupID = ServerGroupID;
	parms.ServerDispOrder = ServerDispOrder;
	parms.DataPort = DataPort;
	parms.OptionCount_byte = OptionCount_byte;
	parms.OptionKey_byte = OptionKey_byte;
	parms.OptionValue_byte = OptionValue_byte;
	parms.OptionCount_int = OptionCount_int;
	parms.OptionKey_int = OptionKey_int;
	parms.OptionValue_int = OptionValue_int;
	parms.OptionCount_float = OptionCount_float;
	parms.OptionKey_float = OptionKey_float;
	parms.OptionValue_float = OptionValue_float;
	parms.IsClanChannel = IsClanChannel;
	parms.IsUseDedicateHost = IsUseDedicateHost;
	this->ProcessEvent ( prfAckServerListFromLoginServer, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelection::MoveToChannel ( class UBTACLServerSelectionHK* serverACL )
{
	static UFunction* pMoveToChannel = 0;
	UBTPageServerSelection_execMoveToChannel_Parms parms;

	if ( !pMoveToChannel )
		pMoveToChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.MoveToChannel" );

	parms.serverACL = serverACL;
	this->ProcessEvent ( pMoveToChannel, &parms, NULL );

}*/

/*void UBTPageServerSelection::FirstShowChannelList (  )
{
	static UFunction* pFirstShowChannelList = 0;
	UBTPageServerSelection_execFirstShowChannelList_Parms parms;

	if ( !pFirstShowChannelList )
		pFirstShowChannelList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.FirstShowChannelList" );

	this->ProcessEvent ( pFirstShowChannelList, &parms, NULL );

}*/

/*void UBTPageServerSelection::ShowChannelList ( class UBTACLGroutSelection* serverACL )
{
	static UFunction* pShowChannelList = 0;
	UBTPageServerSelection_execShowChannelList_Parms parms;

	if ( !pShowChannelList )
		pShowChannelList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.ShowChannelList" );

	parms.serverACL = serverACL;
	this->ProcessEvent ( pShowChannelList, &parms, NULL );

}*/

/*void UBTPageServerSelection::NewMoveToChannel ( class UBTACLServerSelectionHK* serverACL )
{
	static UFunction* pNewMoveToChannel = 0;
	UBTPageServerSelection_execNewMoveToChannel_Parms parms;

	if ( !pNewMoveToChannel )
		pNewMoveToChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.NewMoveToChannel" );

	parms.serverACL = serverACL;
	this->ProcessEvent ( pNewMoveToChannel, &parms, NULL );

}*/

/*void UBTPageServerSelection::AutoMoveTochannel ( int ServerID, int ChannelID )
{
	static UFunction* pAutoMoveTochannel = 0;
	UBTPageServerSelection_execAutoMoveTochannel_Parms parms;

	if ( !pAutoMoveTochannel )
		pAutoMoveTochannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.AutoMoveTochannel" );

	parms.ServerID = ServerID;
	parms.ChannelID = ChannelID;
	this->ProcessEvent ( pAutoMoveTochannel, &parms, NULL );

}*/

/*void UBTPageServerSelection::AutoMoveAtFirstLogin (  )
{
	static UFunction* pAutoMoveAtFirstLogin = 0;
	UBTPageServerSelection_execAutoMoveAtFirstLogin_Parms parms;

	if ( !pAutoMoveAtFirstLogin )
		pAutoMoveAtFirstLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.AutoMoveAtFirstLogin" );

	this->ProcessEvent ( pAutoMoveAtFirstLogin, &parms, NULL );

}*/

/*void UBTPageServerSelection::OnVisibleChannelListChanged ( int Index )
{
	static UFunction* pOnVisibleChannelListChanged = 0;
	UBTPageServerSelection_execOnVisibleChannelListChanged_Parms parms;

	if ( !pOnVisibleChannelListChanged )
		pOnVisibleChannelListChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.OnVisibleChannelListChanged" );

	parms.Index = Index;
	this->ProcessEvent ( pOnVisibleChannelListChanged, &parms, NULL );

}*/

/*void UBTPageServerSelection::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageServerSelection_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageServerSelection::RefreshVisibleSet (  )
{
	static UFunction* pRefreshVisibleSet = 0;
	UBTPageServerSelection_execRefreshVisibleSet_Parms parms;

	if ( !pRefreshVisibleSet )
		pRefreshVisibleSet = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.RefreshVisibleSet" );

	this->ProcessEvent ( pRefreshVisibleSet, &parms, NULL );

}*/

/*void UBTPageServerSelection::RefreshPage (  )
{
	static UFunction* pRefreshPage = 0;
	UBTPageServerSelection_execRefreshPage_Parms parms;

	if ( !pRefreshPage )
		pRefreshPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.RefreshPage" );

	this->ProcessEvent ( pRefreshPage, &parms, NULL );

}*/

/*void UBTPageServerSelection::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageServerSelection_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageServerSelection::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageServerSelection_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageServerSelection::TestTestTest (  )
{
	static UFunction* pTestTestTest = 0;
	UBTPageServerSelection_execTestTestTest_Parms parms;

	if ( !pTestTestTest )
		pTestTestTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.TestTestTest" );

	this->ProcessEvent ( pTestTestTest, &parms, NULL );

}*/

/*void UBTPageServerSelection::CMDHK ( int Index, struct FString Param1, struct FString Param2, struct FString param3 )
{
	static UFunction* pCMDHK = 0;
	UBTPageServerSelection_execCMDHK_Parms parms;

	if ( !pCMDHK )
		pCMDHK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.CMDHK" );

	parms.Index = Index;
	parms.Param1 = Param1;
	parms.Param2 = Param2;
	parms.param3 = param3;
	this->ProcessEvent ( pCMDHK, &parms, NULL );

}*/

/*void UBTPageServerSelection::LogControllerInfo (  )
{
	static UFunction* pLogControllerInfo = 0;
	UBTPageServerSelection_execLogControllerInfo_Parms parms;

	if ( !pLogControllerInfo )
		pLogControllerInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.LogControllerInfo" );

	this->ProcessEvent ( pLogControllerInfo, &parms, NULL );

}*/

/*void UBTPageServerSelection::LogMenuStack (  )
{
	static UFunction* pLogMenuStack = 0;
	UBTPageServerSelection_execLogMenuStack_Parms parms;

	if ( !pLogMenuStack )
		pLogMenuStack = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.LogMenuStack" );

	this->ProcessEvent ( pLogMenuStack, &parms, NULL );

}*/

/*void UBTPageServerSelection::OnBackToLastPage (  )
{
	static UFunction* pOnBackToLastPage = 0;
	UBTPageServerSelection_execOnBackToLastPage_Parms parms;

	if ( !pOnBackToLastPage )
		pOnBackToLastPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.OnBackToLastPage" );

	this->ProcessEvent ( pOnBackToLastPage, &parms, NULL );

}*/

/*void UBTPageServerSelection::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageServerSelection_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageServerSelection::InternalOnReOpen (  )
{
	static UFunction* pInternalOnReOpen = 0;
	UBTPageServerSelection_execInternalOnReOpen_Parms parms;

	if ( !pInternalOnReOpen )
		pInternalOnReOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.InternalOnReOpen" );

	this->ProcessEvent ( pInternalOnReOpen, &parms, NULL );

}*/

/*void UBTPageServerSelection::DefaultSvrnChSelect (  )
{
	static UFunction* pDefaultSvrnChSelect = 0;
	UBTPageServerSelection_execDefaultSvrnChSelect_Parms parms;

	if ( !pDefaultSvrnChSelect )
		pDefaultSvrnChSelect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.DefaultSvrnChSelect" );

	this->ProcessEvent ( pDefaultSvrnChSelect, &parms, NULL );

}*/

/*void UBTPageServerSelection::ApplyLocalizedString (  )
{
	static UFunction* pApplyLocalizedString = 0;
	UBTPageServerSelection_execApplyLocalizedString_Parms parms;

	if ( !pApplyLocalizedString )
		pApplyLocalizedString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.ApplyLocalizedString" );

	this->ProcessEvent ( pApplyLocalizedString, &parms, NULL );

}*/

/*bool UBTPageServerSelection::BTWIndowTodayResultHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWIndowTodayResultHK_OnOK = 0;
	UBTPageServerSelection_execBTWIndowTodayResultHK_OnOK_Parms parms;

	if ( !pBTWIndowTodayResultHK_OnOK )
		pBTWIndowTodayResultHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.BTWIndowTodayResultHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWIndowTodayResultHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::ButtonTemp2_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonTemp2_OnClick = 0;
	UBTPageServerSelection_execButtonTemp2_OnClick_Parms parms;

	if ( !pButtonTemp2_OnClick )
		pButtonTemp2_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.ButtonTemp2_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonTemp2_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection::ButtonTemp_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonTemp_OnClick = 0;
	UBTPageServerSelection_execButtonTemp_OnClick_Parms parms;

	if ( !pButtonTemp_OnClick )
		pButtonTemp_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.ButtonTemp_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonTemp_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelection::Event3_Timer ( int Index )
{
	static UFunction* pEvent3_Timer = 0;
	UBTPageServerSelection_execEvent3_Timer_Parms parms;

	if ( !pEvent3_Timer )
		pEvent3_Timer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.Event3_Timer" );

	parms.Index = Index;
	this->ProcessEvent ( pEvent3_Timer, &parms, NULL );

}*/

/*void UBTPageServerSelection::Event0_Timer ( int Index )
{
	static UFunction* pEvent0_Timer = 0;
	UBTPageServerSelection_execEvent0_Timer_Parms parms;

	if ( !pEvent0_Timer )
		pEvent0_Timer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.Event0_Timer" );

	parms.Index = Index;
	this->ProcessEvent ( pEvent0_Timer, &parms, NULL );

}*/

/*void UBTPageServerSelection::gameMgr_UpdateEventTimer ( int EventType, struct FBtrDouble EventTime )
{
	static UFunction* pgameMgr_UpdateEventTimer = 0;
	UBTPageServerSelection_execgameMgr_UpdateEventTimer_Parms parms;

	if ( !pgameMgr_UpdateEventTimer )
		pgameMgr_UpdateEventTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.gameMgr_UpdateEventTimer" );

	parms.EventType = EventType;
	parms.EventTime = EventTime;
	this->ProcessEvent ( pgameMgr_UpdateEventTimer, &parms, NULL );

}*/

/*bool UBTPageServerSelection::ButtonCredit_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonCredit_OnClick = 0;
	UBTPageServerSelection_execButtonCredit_OnClick_Parms parms;

	if ( !pButtonCredit_OnClick )
		pButtonCredit_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.ButtonCredit_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonCredit_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelection::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageServerSelection_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*class UBTOwnerDrawCaptionButtonHK* UBTPageServerSelection::NewButtonComponent ( struct FFloatBox fbNewCompo, float RenderWeight )
{
	static UFunction* pNewButtonComponent = 0;
	UBTPageServerSelection_execNewButtonComponent_Parms parms;

	if ( !pNewButtonComponent )
		pNewButtonComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.NewButtonComponent" );

	parms.fbNewCompo = fbNewCompo;
	parms.RenderWeight = RenderWeight;
	this->ProcessEvent ( pNewButtonComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTOwnerDrawImageHK* UBTPageServerSelection::NewLabelComponent ( struct FFloatBox fbNewCompo, struct FImage bgImg, float RenderWeight )
{
	static UFunction* pNewLabelComponent = 0;
	UBTPageServerSelection_execNewLabelComponent_Parms parms;

	if ( !pNewLabelComponent )
		pNewLabelComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.NewLabelComponent" );

	parms.fbNewCompo = fbNewCompo;
	parms.bgImg = bgImg;
	parms.RenderWeight = RenderWeight;
	this->ProcessEvent ( pNewLabelComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelection::ExitGame (  )
{
	static UFunction* pExitGame = 0;
	UBTPageServerSelection_execExitGame_Parms parms;

	if ( !pExitGame )
		pExitGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.ExitGame" );

	this->ProcessEvent ( pExitGame, &parms, NULL );

}*/

/*bool UBTPageServerSelection::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageServerSelection_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Login* UBTPageServerSelection::GetTcpLogin (  )
{
	static UFunction* pGetTcpLogin = 0;
	UBTPageServerSelection_execGetTcpLogin_Parms parms;

	if ( !pGetTcpLogin )
		pGetTcpLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.GetTcpLogin" );

	this->ProcessEvent ( pGetTcpLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTPageServerSelection::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageServerSelection_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTPageMatchResult::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageMatchResult_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::InternalOnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternalOnPreDraw = 0;
	UBTPageMatchResult_execInternalOnPreDraw_Parms parms;

	if ( !pInternalOnPreDraw )
		pInternalOnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.InternalOnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternalOnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::internalKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pinternalKeyEvent = 0;
	UBTPageMatchResult_execinternalKeyEvent_Parms parms;

	if ( !pinternalKeyEvent )
		pinternalKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.internalKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pinternalKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::InternalOnCanClose ( bool bCancelled )
{
	static UFunction* pInternalOnCanClose = 0;
	UBTPageMatchResult_execInternalOnCanClose_Parms parms;

	if ( !pInternalOnCanClose )
		pInternalOnCanClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.InternalOnCanClose" );

	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pInternalOnCanClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageMatchResult::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageMatchResult_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageMatchResult::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageMatchResult_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageMatchResult::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageMatchResult_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageMatchResult::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageMatchResult_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*bool UBTPageMatchResult::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageMatchResult_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageMatchResult::UpdateRecv_CharInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateRecv_CharInfo = 0;
	UBTPageMatchResult_execUpdateRecv_CharInfo_Parms parms;

	if ( !pUpdateRecv_CharInfo )
		pUpdateRecv_CharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.UpdateRecv_CharInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateRecv_CharInfo, &parms, NULL );

}*/

/*void UBTPageMatchResult::UpdateItemList ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateItemList = 0;
	UBTPageMatchResult_execUpdateItemList_Parms parms;

	if ( !pUpdateItemList )
		pUpdateItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.UpdateItemList" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateItemList, &parms, NULL );

}*/

/*void UBTPageMatchResult::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageMatchResult_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UBTPageMatchResult::ButtonClose_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonClose_OnClick = 0;
	UBTPageMatchResult_execButtonClose_OnClick_Parms parms;

	if ( !pButtonClose_OnClick )
		pButtonClose_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.ButtonClose_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonClose_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowTrophyHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowTrophyHK_OnCancel = 0;
	UBTPageMatchResult_execBTWindowTrophyHK_OnCancel_Parms parms;

	if ( !pBTWindowTrophyHK_OnCancel )
		pBTWindowTrophyHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowTrophyHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowTrophyHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowTrophyHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowTrophyHK_OnOK = 0;
	UBTPageMatchResult_execBTWindowTrophyHK_OnOK_Parms parms;

	if ( !pBTWindowTrophyHK_OnOK )
		pBTWindowTrophyHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowTrophyHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowTrophyHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowAlreadyGotTrophyHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowAlreadyGotTrophyHK_OnCancel = 0;
	UBTPageMatchResult_execBTWindowAlreadyGotTrophyHK_OnCancel_Parms parms;

	if ( !pBTWindowAlreadyGotTrophyHK_OnCancel )
		pBTWindowAlreadyGotTrophyHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowAlreadyGotTrophyHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowAlreadyGotTrophyHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowAlreadyGotTrophyHK_OnMail ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowAlreadyGotTrophyHK_OnMail = 0;
	UBTPageMatchResult_execBTWindowAlreadyGotTrophyHK_OnMail_Parms parms;

	if ( !pBTWindowAlreadyGotTrophyHK_OnMail )
		pBTWindowAlreadyGotTrophyHK_OnMail = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowAlreadyGotTrophyHK_OnMail" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowAlreadyGotTrophyHK_OnMail, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowAlreadyGotTrophyHK_OnInventory ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowAlreadyGotTrophyHK_OnInventory = 0;
	UBTPageMatchResult_execBTWindowAlreadyGotTrophyHK_OnInventory_Parms parms;

	if ( !pBTWindowAlreadyGotTrophyHK_OnInventory )
		pBTWindowAlreadyGotTrophyHK_OnInventory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowAlreadyGotTrophyHK_OnInventory" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowAlreadyGotTrophyHK_OnInventory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::SameWeaponAddTime_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pSameWeaponAddTime_OnCancel = 0;
	UBTPageMatchResult_execSameWeaponAddTime_OnCancel_Parms parms;

	if ( !pSameWeaponAddTime_OnCancel )
		pSameWeaponAddTime_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.SameWeaponAddTime_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pSameWeaponAddTime_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::SameWeaponAddTime_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pSameWeaponAddTime_OnOK = 0;
	UBTPageMatchResult_execSameWeaponAddTime_OnOK_Parms parms;

	if ( !pSameWeaponAddTime_OnOK )
		pSameWeaponAddTime_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.SameWeaponAddTime_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pSameWeaponAddTime_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::SameWeaponAddCount_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pSameWeaponAddCount_OnCancel = 0;
	UBTPageMatchResult_execSameWeaponAddCount_OnCancel_Parms parms;

	if ( !pSameWeaponAddCount_OnCancel )
		pSameWeaponAddCount_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.SameWeaponAddCount_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pSameWeaponAddCount_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::SameWeaponAddCount_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pSameWeaponAddCount_OnOK = 0;
	UBTPageMatchResult_execSameWeaponAddCount_OnOK_Parms parms;

	if ( !pSameWeaponAddCount_OnOK )
		pSameWeaponAddCount_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.SameWeaponAddCount_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pSameWeaponAddCount_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::SameWeapon_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pSameWeapon_OnCancel = 0;
	UBTPageMatchResult_execSameWeapon_OnCancel_Parms parms;

	if ( !pSameWeapon_OnCancel )
		pSameWeapon_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.SameWeapon_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pSameWeapon_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::SameWeapon_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pSameWeapon_OnOK = 0;
	UBTPageMatchResult_execSameWeapon_OnOK_Parms parms;

	if ( !pSameWeapon_OnOK )
		pSameWeapon_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.SameWeapon_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pSameWeapon_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageMatchResult::NeedUpdate (  )
{
	static UFunction* pNeedUpdate = 0;
	UBTPageMatchResult_execNeedUpdate_Parms parms;

	if ( !pNeedUpdate )
		pNeedUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.NeedUpdate" );

	this->ProcessEvent ( pNeedUpdate, &parms, NULL );

}*/

/*bool UBTPageMatchResult::BTWindowTrophyHK_OpenMenu ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowTrophyHK_OpenMenu = 0;
	UBTPageMatchResult_execBTWindowTrophyHK_OpenMenu_Parms parms;

	if ( !pBTWindowTrophyHK_OpenMenu )
		pBTWindowTrophyHK_OpenMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowTrophyHK_OpenMenu" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowTrophyHK_OpenMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowPromotionToTrophy_OpenMenu ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowPromotionToTrophy_OpenMenu = 0;
	UBTPageMatchResult_execBTWindowPromotionToTrophy_OpenMenu_Parms parms;

	if ( !pBTWindowPromotionToTrophy_OpenMenu )
		pBTWindowPromotionToTrophy_OpenMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowPromotionToTrophy_OpenMenu" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowPromotionToTrophy_OpenMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowQuestInfoToTrophy_OpenMenu ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowQuestInfoToTrophy_OpenMenu = 0;
	UBTPageMatchResult_execBTWindowQuestInfoToTrophy_OpenMenu_Parms parms;

	if ( !pBTWindowQuestInfoToTrophy_OpenMenu )
		pBTWindowQuestInfoToTrophy_OpenMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowQuestInfoToTrophy_OpenMenu" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowQuestInfoToTrophy_OpenMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowQuestInfoHK_OpenMenu ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowQuestInfoHK_OpenMenu = 0;
	UBTPageMatchResult_execBTWindowQuestInfoHK_OpenMenu_Parms parms;

	if ( !pBTWindowQuestInfoHK_OpenMenu )
		pBTWindowQuestInfoHK_OpenMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowQuestInfoHK_OpenMenu" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowQuestInfoHK_OpenMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowPromotionToQuestInfo_OpenMenu ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowPromotionToQuestInfo_OpenMenu = 0;
	UBTPageMatchResult_execBTWindowPromotionToQuestInfo_OpenMenu_Parms parms;

	if ( !pBTWindowPromotionToQuestInfo_OpenMenu )
		pBTWindowPromotionToQuestInfo_OpenMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowPromotionToQuestInfo_OpenMenu" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowPromotionToQuestInfo_OpenMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowNoUpdateQuestHK_OpenMenu ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowNoUpdateQuestHK_OpenMenu = 0;
	UBTPageMatchResult_execBTWindowNoUpdateQuestHK_OpenMenu_Parms parms;

	if ( !pBTWindowNoUpdateQuestHK_OpenMenu )
		pBTWindowNoUpdateQuestHK_OpenMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowNoUpdateQuestHK_OpenMenu" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowNoUpdateQuestHK_OpenMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMatchResult::BTWindowPromotionToNoUpdateQuestHK_OpenMenu ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowPromotionToNoUpdateQuestHK_OpenMenu = 0;
	UBTPageMatchResult_execBTWindowPromotionToNoUpdateQuestHK_OpenMenu_Parms parms;

	if ( !pBTWindowPromotionToNoUpdateQuestHK_OpenMenu )
		pBTWindowPromotionToNoUpdateQuestHK_OpenMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.BTWindowPromotionToNoUpdateQuestHK_OpenMenu" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowPromotionToNoUpdateQuestHK_OpenMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageMatchResult::MatchReultPostStep (  )
{
	static UFunction* pMatchReultPostStep = 0;
	UBTPageMatchResult_execMatchReultPostStep_Parms parms;

	if ( !pMatchReultPostStep )
		pMatchReultPostStep = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMatchResult.MatchReultPostStep" );

	this->ProcessEvent ( pMatchReultPostStep, &parms, NULL );

}*/

/*bool UBTPageAuction::rfAckRepairItem ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, int RepairCost, class TArray< int > DamageDegree )
{
	static UFunction* prfAckRepairItem = 0;
	UBTPageAuction_execrfAckRepairItem_Parms parms;

	if ( !prfAckRepairItem )
		prfAckRepairItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckRepairItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	parms.DamageDegree = DamageDegree;
	this->ProcessEvent ( prfAckRepairItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::rfAckRepairCost ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > RepairCost )
{
	static UFunction* prfAckRepairCost = 0;
	UBTPageAuction_execrfAckRepairCost_Parms parms;

	if ( !prfAckRepairCost )
		prfAckRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckRepairCost" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( prfAckRepairCost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::RepairAllItem_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pRepairAllItem_OnOK = 0;
	UBTPageAuction_execRepairAllItem_OnOK_Parms parms;

	if ( !pRepairAllItem_OnOK )
		pRepairAllItem_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.RepairAllItem_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pRepairAllItem_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::BTWindowItemRepairAllHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowItemRepairAllHK_OnOK = 0;
	UBTPageAuction_execBTWindowItemRepairAllHK_OnOK_Parms parms;

	if ( !pBTWindowItemRepairAllHK_OnOK )
		pBTWindowItemRepairAllHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.BTWindowItemRepairAllHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowItemRepairAllHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::RepairItem_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pRepairItem_OnOK = 0;
	UBTPageAuction_execRepairItem_OnOK_Parms parms;

	if ( !pRepairItem_OnOK )
		pRepairItem_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.RepairItem_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pRepairItem_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::BTWindowItemRepairHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowItemRepairHK_OnOK = 0;
	UBTPageAuction_execBTWindowItemRepairHK_OnOK_Parms parms;

	if ( !pBTWindowItemRepairHK_OnOK )
		pBTWindowItemRepairHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.BTWindowItemRepairHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowItemRepairHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTPageAuction_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::rfAckAuctionInstantlyBuying ( int Result, struct FString ErrMsg, int PointRemain )
{
	static UFunction* prfAckAuctionInstantlyBuying = 0;
	UBTPageAuction_execrfAckAuctionInstantlyBuying_Parms parms;

	if ( !prfAckAuctionInstantlyBuying )
		prfAckAuctionInstantlyBuying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckAuctionInstantlyBuying" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionInstantlyBuying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::rfAckAuctionBidding ( int Result, struct FString ErrMsg, int PointRemain )
{
	static UFunction* prfAckAuctionBidding = 0;
	UBTPageAuction_execrfAckAuctionBidding_Parms parms;

	if ( !prfAckAuctionBidding )
		prfAckAuctionBidding = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckAuctionBidding" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionBidding, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageAuction::UpdateAuctionList (  )
{
	static UFunction* pUpdateAuctionList = 0;
	UBTPageAuction_execUpdateAuctionList_Parms parms;

	if ( !pUpdateAuctionList )
		pUpdateAuctionList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.UpdateAuctionList" );

	this->ProcessEvent ( pUpdateAuctionList, &parms, NULL );

}*/

/*bool UBTPageAuction::rfAckAuctionTradeHistory ( int Result, struct FString ErrMsg, int ItemID, int PartID, class TArray< struct FString > SellerCharNm, class TArray< int > DamageDegree, class TArray< int > Price )
{
	static UFunction* prfAckAuctionTradeHistory = 0;
	UBTPageAuction_execrfAckAuctionTradeHistory_Parms parms;

	if ( !prfAckAuctionTradeHistory )
		prfAckAuctionTradeHistory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckAuctionTradeHistory" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	parms.SellerCharNm = SellerCharNm;
	parms.DamageDegree = DamageDegree;
	parms.Price = Price;
	this->ProcessEvent ( prfAckAuctionTradeHistory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::rfAckAuctionMyItemCancel ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckAuctionMyItemCancel = 0;
	UBTPageAuction_execrfAckAuctionMyItemCancel_Parms parms;

	if ( !prfAckAuctionMyItemCancel )
		prfAckAuctionMyItemCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckAuctionMyItemCancel" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckAuctionMyItemCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::rfAckAuctionMyItemRegister ( int Result, struct FString ErrMsg, int BeginPrice, int BuyPrice, int GuarantyPoint, int PointRemain )
{
	static UFunction* prfAckAuctionMyItemRegister = 0;
	UBTPageAuction_execrfAckAuctionMyItemRegister_Parms parms;

	if ( !prfAckAuctionMyItemRegister )
		prfAckAuctionMyItemRegister = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckAuctionMyItemRegister" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.BeginPrice = BeginPrice;
	parms.BuyPrice = BuyPrice;
	parms.GuarantyPoint = GuarantyPoint;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionMyItemRegister, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::rfAckAuctionItemListEnd ( unsigned char Section )
{
	static UFunction* prfAckAuctionItemListEnd = 0;
	UBTPageAuction_execrfAckAuctionItemListEnd_Parms parms;

	if ( !prfAckAuctionItemListEnd )
		prfAckAuctionItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckAuctionItemListEnd" );

	parms.Section = Section;
	this->ProcessEvent ( prfAckAuctionItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::rfAckAuctionItemList ( unsigned char Section, class TArray< int > UniqueIDs, class TArray< int > ItemIDs, class TArray< int > AddPartsIDs, class TArray< struct FBtrDouble > UntilTimes, class TArray< int > BiddingPrices, class TArray< int > InstantlyByuingPrices, class TArray< int > ItemDamageds, class TArray< struct FString > HighestBidderNames, class TArray< struct FString > SellerNames, class TArray< int > ItemCount )
{
	static UFunction* prfAckAuctionItemList = 0;
	UBTPageAuction_execrfAckAuctionItemList_Parms parms;

	if ( !prfAckAuctionItemList )
		prfAckAuctionItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckAuctionItemList" );

	parms.Section = Section;
	parms.UniqueIDs = UniqueIDs;
	parms.ItemIDs = ItemIDs;
	parms.AddPartsIDs = AddPartsIDs;
	parms.UntilTimes = UntilTimes;
	parms.BiddingPrices = BiddingPrices;
	parms.InstantlyByuingPrices = InstantlyByuingPrices;
	parms.ItemDamageds = ItemDamageds;
	parms.HighestBidderNames = HighestBidderNames;
	parms.SellerNames = SellerNames;
	parms.ItemCount = ItemCount;
	this->ProcessEvent ( prfAckAuctionItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::rfAckAuctionItemListStart ( int Result, struct FString ErrMsg, unsigned char Section, int PageNum, int Count )
{
	static UFunction* prfAckAuctionItemListStart = 0;
	UBTPageAuction_execrfAckAuctionItemListStart_Parms parms;

	if ( !prfAckAuctionItemListStart )
		prfAckAuctionItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckAuctionItemListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Section = Section;
	parms.PageNum = PageNum;
	parms.Count = Count;
	this->ProcessEvent ( prfAckAuctionItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::rfAckAuctionItemListCount ( int Result, struct FString ErrMsg, unsigned char Section, unsigned char Classfy, int ItemType, int ItemGrade, int Count )
{
	static UFunction* prfAckAuctionItemListCount = 0;
	UBTPageAuction_execrfAckAuctionItemListCount_Parms parms;

	if ( !prfAckAuctionItemListCount )
		prfAckAuctionItemListCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.rfAckAuctionItemListCount" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Section = Section;
	parms.Classfy = Classfy;
	parms.ItemType = ItemType;
	parms.ItemGrade = ItemGrade;
	parms.Count = Count;
	this->ProcessEvent ( prfAckAuctionItemListCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageAuction::SortAuctionItemList ( int SortType )
{
	static UFunction* pSortAuctionItemList = 0;
	UBTPageAuction_execSortAuctionItemList_Parms parms;

	if ( !pSortAuctionItemList )
		pSortAuctionItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.SortAuctionItemList" );

	parms.SortType = SortType;
	this->ProcessEvent ( pSortAuctionItemList, &parms, NULL );

}*/

/*bool UBTPageAuction::sfReqAuctionItemList ( int Section, struct FString Keyword, int ItemRank, unsigned char ItemClassify, unsigned char IsAvailable, int PageNum, int Count, int SortType )
{
	static UFunction* psfReqAuctionItemList = 0;
	UBTPageAuction_execsfReqAuctionItemList_Parms parms;

	if ( !psfReqAuctionItemList )
		psfReqAuctionItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.sfReqAuctionItemList" );

	parms.Section = Section;
	parms.Keyword = Keyword;
	parms.ItemRank = ItemRank;
	parms.ItemClassify = ItemClassify;
	parms.IsAvailable = IsAvailable;
	parms.PageNum = PageNum;
	parms.Count = Count;
	parms.SortType = SortType;
	this->ProcessEvent ( psfReqAuctionItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageAuction::RefreshAuction ( bool bStopLoop )
{
	static UFunction* pRefreshAuction = 0;
	UBTPageAuction_execRefreshAuction_Parms parms;

	if ( !pRefreshAuction )
		pRefreshAuction = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.RefreshAuction" );

	parms.bStopLoop = bStopLoop;
	this->ProcessEvent ( pRefreshAuction, &parms, NULL );

}*/

/*void UBTPageAuction::RefreshCashNPoint (  )
{
	static UFunction* pRefreshCashNPoint = 0;
	UBTPageAuction_execRefreshCashNPoint_Parms parms;

	if ( !pRefreshCashNPoint )
		pRefreshCashNPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.RefreshCashNPoint" );

	this->ProcessEvent ( pRefreshCashNPoint, &parms, NULL );

}*/

/*bool UBTPageAuction::BTWindowJoinClan_OK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowJoinClan_OK = 0;
	UBTPageAuction_execBTWindowJoinClan_OK_Parms parms;

	if ( !pBTWindowJoinClan_OK )
		pBTWindowJoinClan_OK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.BTWindowJoinClan_OK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowJoinClan_OK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::BTWindowCreateClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanHK_OnOK = 0;
	UBTPageAuction_execBTWindowCreateClanHK_OnOK_Parms parms;

	if ( !pBTWindowCreateClanHK_OnOK )
		pBTWindowCreateClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.BTWindowCreateClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::BTWindowCreateClanNeedPointHK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanNeedPointHK_OnClick = 0;
	UBTPageAuction_execBTWindowCreateClanNeedPointHK_OnClick_Parms parms;

	if ( !pBTWindowCreateClanNeedPointHK_OnClick )
		pBTWindowCreateClanNeedPointHK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.BTWindowCreateClanNeedPointHK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanNeedPointHK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::ClanMenu_ButtonCreateClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonCreateClan_OnClick = 0;
	UBTPageAuction_execClanMenu_ButtonCreateClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonCreateClan_OnClick )
		pClanMenu_ButtonCreateClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.ClanMenu_ButtonCreateClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonCreateClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::BTWindowFindClanHK_OnInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnInfo = 0;
	UBTPageAuction_execBTWindowFindClanHK_OnInfo_Parms parms;

	if ( !pBTWindowFindClanHK_OnInfo )
		pBTWindowFindClanHK_OnInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.BTWindowFindClanHK_OnInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::BTWindowFindClanHK_OnRequestJoin ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnRequestJoin = 0;
	UBTPageAuction_execBTWindowFindClanHK_OnRequestJoin_Parms parms;

	if ( !pBTWindowFindClanHK_OnRequestJoin )
		pBTWindowFindClanHK_OnRequestJoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.BTWindowFindClanHK_OnRequestJoin" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnRequestJoin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::ClanMenu_ButtonFindClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonFindClan_OnClick = 0;
	UBTPageAuction_execClanMenu_ButtonFindClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonFindClan_OnClick )
		pClanMenu_ButtonFindClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.ClanMenu_ButtonFindClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonFindClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::ClanMenu_ButtonLookingForClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonLookingForClan_OnClick = 0;
	UBTPageAuction_execClanMenu_ButtonLookingForClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonLookingForClan_OnClick )
		pClanMenu_ButtonLookingForClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.ClanMenu_ButtonLookingForClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonLookingForClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTPageAuction::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageAuction_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::internalKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pinternalKeyEvent = 0;
	UBTPageAuction_execinternalKeyEvent_Parms parms;

	if ( !pinternalKeyEvent )
		pinternalKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.internalKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pinternalKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageAuction::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageAuction_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageAuction::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageAuction_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageAuction::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageAuction_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageAuction::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageAuction_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageAuction::UpdateServerTime ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateServerTime = 0;
	UBTPageAuction_execUpdateServerTime_Parms parms;

	if ( !pUpdateServerTime )
		pUpdateServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.UpdateServerTime" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateServerTime, &parms, NULL );

}*/

/*void UBTPageAuction::UpdateItemList ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateItemList = 0;
	UBTPageAuction_execUpdateItemList_Parms parms;

	if ( !pUpdateItemList )
		pUpdateItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.UpdateItemList" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateItemList, &parms, NULL );

}*/

/*void UBTPageAuction::UpdateMoneyInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateMoneyInfo = 0;
	UBTPageAuction_execUpdateMoneyInfo_Parms parms;

	if ( !pUpdateMoneyInfo )
		pUpdateMoneyInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.UpdateMoneyInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateMoneyInfo, &parms, NULL );

}*/

/*void UBTPageAuction::InitializeCashNPoint (  )
{
	static UFunction* pInitializeCashNPoint = 0;
	UBTPageAuction_execInitializeCashNPoint_Parms parms;

	if ( !pInitializeCashNPoint )
		pInitializeCashNPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.InitializeCashNPoint" );

	this->ProcessEvent ( pInitializeCashNPoint, &parms, NULL );

}*/

/*bool UBTPageAuction::ButtonTest_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonTest_OnClick = 0;
	UBTPageAuction_execButtonTest_OnClick_Parms parms;

	if ( !pButtonTest_OnClick )
		pButtonTest_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.ButtonTest_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonTest_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageAuction::TeamChatLog_Extra ( struct FString cL )
{
	static UFunction* pTeamChatLog_Extra = 0;
	UBTPageAuction_execTeamChatLog_Extra_Parms parms;

	if ( !pTeamChatLog_Extra )
		pTeamChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.TeamChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageAuction::BroadCastItemChatLog_Extra ( struct FString cL )
{
	static UFunction* pBroadCastItemChatLog_Extra = 0;
	UBTPageAuction_execBroadCastItemChatLog_Extra_Parms parms;

	if ( !pBroadCastItemChatLog_Extra )
		pBroadCastItemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.BroadCastItemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pBroadCastItemChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageAuction::SystemChatLog_Extra ( struct FString cL )
{
	static UFunction* pSystemChatLog_Extra = 0;
	UBTPageAuction_execSystemChatLog_Extra_Parms parms;

	if ( !pSystemChatLog_Extra )
		pSystemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.SystemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageAuction::SelfChatLog_Extra ( struct FString cL )
{
	static UFunction* pSelfChatLog_Extra = 0;
	UBTPageAuction_execSelfChatLog_Extra_Parms parms;

	if ( !pSelfChatLog_Extra )
		pSelfChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.SelfChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageAuction::WhisperChatLog_Extra ( struct FString cL )
{
	static UFunction* pWhisperChatLog_Extra = 0;
	UBTPageAuction_execWhisperChatLog_Extra_Parms parms;

	if ( !pWhisperChatLog_Extra )
		pWhisperChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.WhisperChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageAuction::ClanChatLog_Extra ( struct FString cL )
{
	static UFunction* pClanChatLog_Extra = 0;
	UBTPageAuction_execClanChatLog_Extra_Parms parms;

	if ( !pClanChatLog_Extra )
		pClanChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.ClanChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageAuction::NormalChatLog_Extra ( struct FString cL )
{
	static UFunction* pNormalChatLog_Extra = 0;
	UBTPageAuction_execNormalChatLog_Extra_Parms parms;

	if ( !pNormalChatLog_Extra )
		pNormalChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.NormalChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageAuction::ClearChatLog_Extra (  )
{
	static UFunction* pClearChatLog_Extra = 0;
	UBTPageAuction_execClearChatLog_Extra_Parms parms;

	if ( !pClearChatLog_Extra )
		pClearChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.ClearChatLog_Extra" );

	this->ProcessEvent ( pClearChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageAuction::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageAuction_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTPageAuction::TPMyAuction_PageButton_OnClick ( int pageIndex )
{
	static UFunction* pTPMyAuction_PageButton_OnClick = 0;
	UBTPageAuction_execTPMyAuction_PageButton_OnClick_Parms parms;

	if ( !pTPMyAuction_PageButton_OnClick )
		pTPMyAuction_PageButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.TPMyAuction_PageButton_OnClick" );

	parms.pageIndex = pageIndex;
	this->ProcessEvent ( pTPMyAuction_PageButton_OnClick, &parms, NULL );

}*/

/*void UBTPageAuction::TPBuying_PageButton_OnClick ( int pageIndex )
{
	static UFunction* pTPBuying_PageButton_OnClick = 0;
	UBTPageAuction_execTPBuying_PageButton_OnClick_Parms parms;

	if ( !pTPBuying_PageButton_OnClick )
		pTPBuying_PageButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.TPBuying_PageButton_OnClick" );

	parms.pageIndex = pageIndex;
	this->ProcessEvent ( pTPBuying_PageButton_OnClick, &parms, NULL );

}*/

/*bool UBTPageAuction::TPAuction_TabButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pTPAuction_TabButton_OnClick = 0;
	UBTPageAuction_execTPAuction_TabButton_OnClick_Parms parms;

	if ( !pTPAuction_TabButton_OnClick )
		pTPAuction_TabButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.TPAuction_TabButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTPAuction_TabButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageAuction_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTPageHelp::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageHelp_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageHelp.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageHelp::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageHelp_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageHelp.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UBTPageHelp::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageHelp_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageHelp.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageHelp::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageHelp_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageHelp.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageHelp::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageHelp_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageHelp.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*bool UBTPageMail::BTWindowUserDetailInfoHK_OnClanInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowUserDetailInfoHK_OnClanInfo = 0;
	UBTPageMail_execBTWindowUserDetailInfoHK_OnClanInfo_Parms parms;

	if ( !pBTWindowUserDetailInfoHK_OnClanInfo )
		pBTWindowUserDetailInfoHK_OnClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowUserDetailInfoHK_OnClanInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowUserDetailInfoHK_OnClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageMail::UpdateRecv_ClanInfo ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateRecv_ClanInfo = 0;
	UBTPageMail_execUpdateRecv_ClanInfo_Parms parms;

	if ( !pUpdateRecv_ClanInfo )
		pUpdateRecv_ClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.UpdateRecv_ClanInfo" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateRecv_ClanInfo, &parms, NULL );

}*/

/*bool UBTPageMail::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageMail_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::rfAckGetAttachedItemFromMemo ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int ItemID )
{
	static UFunction* prfAckGetAttachedItemFromMemo = 0;
	UBTPageMail_execrfAckGetAttachedItemFromMemo_Parms parms;

	if ( !prfAckGetAttachedItemFromMemo )
		prfAckGetAttachedItemFromMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfAckGetAttachedItemFromMemo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckGetAttachedItemFromMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::rfAckDeleteMailAll ( int Result, unsigned char MailType, int Count )
{
	static UFunction* prfAckDeleteMailAll = 0;
	UBTPageMail_execrfAckDeleteMailAll_Parms parms;

	if ( !prfAckDeleteMailAll )
		prfAckDeleteMailAll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfAckDeleteMailAll" );

	parms.Result = Result;
	parms.MailType = MailType;
	parms.Count = Count;
	this->ProcessEvent ( prfAckDeleteMailAll, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::rfAckDelMemo ( int Result, struct FString ErrMsg, class TArray< int > FailedMemoID )
{
	static UFunction* prfAckDelMemo = 0;
	UBTPageMail_execrfAckDelMemo_Parms parms;

	if ( !prfAckDelMemo )
		prfAckDelMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfAckDelMemo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.FailedMemoID = FailedMemoID;
	this->ProcessEvent ( prfAckDelMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::rfAckSendMemo ( class TArray< struct FString > CnamesToFail, class TArray< int > ResultArray )
{
	static UFunction* prfAckSendMemo = 0;
	UBTPageMail_execrfAckSendMemo_Parms parms;

	if ( !prfAckSendMemo )
		prfAckSendMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfAckSendMemo" );

	parms.CnamesToFail = CnamesToFail;
	parms.ResultArray = ResultArray;
	this->ProcessEvent ( prfAckSendMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::rfReqRecvMemo ( struct FString cnameFrom, unsigned char MemoType )
{
	static UFunction* prfReqRecvMemo = 0;
	UBTPageMail_execrfReqRecvMemo_Parms parms;

	if ( !prfReqRecvMemo )
		prfReqRecvMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfReqRecvMemo" );

	parms.cnameFrom = cnameFrom;
	parms.MemoType = MemoType;
	this->ProcessEvent ( prfReqRecvMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::rfAckReadMemo ( struct FString cnameFrom, struct FString Text, struct FString dateRecv, struct FBtrDouble ItemUID )
{
	static UFunction* prfAckReadMemo = 0;
	UBTPageMail_execrfAckReadMemo_Parms parms;

	if ( !prfAckReadMemo )
		prfAckReadMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfAckReadMemo" );

	parms.cnameFrom = cnameFrom;
	parms.Text = Text;
	parms.dateRecv = dateRecv;
	parms.ItemUID = ItemUID;
	this->ProcessEvent ( prfAckReadMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::rfAckEndMemoList (  )
{
	static UFunction* prfAckEndMemoList = 0;
	UBTPageMail_execrfAckEndMemoList_Parms parms;

	if ( !prfAckEndMemoList )
		prfAckEndMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfAckEndMemoList" );

	this->ProcessEvent ( prfAckEndMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::rfAckMemoList ( class TArray< int > MemoIdx, class TArray< struct FString > cnameFrom, class TArray< struct FString > dateRecv, class TArray< struct FString > Text, class TArray< unsigned char > Status, class TArray< int > UntilExpire, class TArray< struct FBtrDouble > ItemUID, class TArray< int > ItemID, class TArray< unsigned char > MsgType, class TArray< int > ItemPartID )
{
	static UFunction* prfAckMemoList = 0;
	UBTPageMail_execrfAckMemoList_Parms parms;

	if ( !prfAckMemoList )
		prfAckMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfAckMemoList" );

	parms.MemoIdx = MemoIdx;
	parms.cnameFrom = cnameFrom;
	parms.dateRecv = dateRecv;
	parms.Text = Text;
	parms.Status = Status;
	parms.UntilExpire = UntilExpire;
	parms.ItemUID = ItemUID;
	parms.ItemID = ItemID;
	parms.MsgType = MsgType;
	parms.ItemPartID = ItemPartID;
	this->ProcessEvent ( prfAckMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::rfAckStartMemoList ( int Result, struct FString ErrMsg, unsigned char Type, int TotalCount )
{
	static UFunction* prfAckStartMemoList = 0;
	UBTPageMail_execrfAckStartMemoList_Parms parms;

	if ( !prfAckStartMemoList )
		prfAckStartMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.rfAckStartMemoList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Type = Type;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckStartMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowJoinClan_OK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowJoinClan_OK = 0;
	UBTPageMail_execBTWindowJoinClan_OK_Parms parms;

	if ( !pBTWindowJoinClan_OK )
		pBTWindowJoinClan_OK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowJoinClan_OK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowJoinClan_OK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowCreateClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanHK_OnOK = 0;
	UBTPageMail_execBTWindowCreateClanHK_OnOK_Parms parms;

	if ( !pBTWindowCreateClanHK_OnOK )
		pBTWindowCreateClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowCreateClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowCreateClanNeedPointHK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanNeedPointHK_OnClick = 0;
	UBTPageMail_execBTWindowCreateClanNeedPointHK_OnClick_Parms parms;

	if ( !pBTWindowCreateClanNeedPointHK_OnClick )
		pBTWindowCreateClanNeedPointHK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowCreateClanNeedPointHK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanNeedPointHK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ClanMenu_ButtonCreateClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonCreateClan_OnClick = 0;
	UBTPageMail_execClanMenu_ButtonCreateClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonCreateClan_OnClick )
		pClanMenu_ButtonCreateClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ClanMenu_ButtonCreateClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonCreateClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowFindClanHK_OnInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnInfo = 0;
	UBTPageMail_execBTWindowFindClanHK_OnInfo_Parms parms;

	if ( !pBTWindowFindClanHK_OnInfo )
		pBTWindowFindClanHK_OnInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowFindClanHK_OnInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowFindClanHK_OnRequestJoin ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnRequestJoin = 0;
	UBTPageMail_execBTWindowFindClanHK_OnRequestJoin_Parms parms;

	if ( !pBTWindowFindClanHK_OnRequestJoin )
		pBTWindowFindClanHK_OnRequestJoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowFindClanHK_OnRequestJoin" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnRequestJoin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ClanMenu_ButtonFindClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonFindClan_OnClick = 0;
	UBTPageMail_execClanMenu_ButtonFindClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonFindClan_OnClick )
		pClanMenu_ButtonFindClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ClanMenu_ButtonFindClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonFindClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ClanMenu_ButtonLookingForClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonLookingForClan_OnClick = 0;
	UBTPageMail_execClanMenu_ButtonLookingForClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonLookingForClan_OnClick )
		pClanMenu_ButtonLookingForClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ClanMenu_ButtonLookingForClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonLookingForClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTPageMail::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageMail_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::internalKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pinternalKeyEvent = 0;
	UBTPageMail_execinternalKeyEvent_Parms parms;

	if ( !pinternalKeyEvent )
		pinternalKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.internalKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pinternalKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*bool UBTPageMail::sfReqMemoList ( int RequestMailType, int RequestItemType )
{
	static UFunction* psfReqMemoList = 0;
	UBTPageMail_execsfReqMemoList_Parms parms;

	if ( !psfReqMemoList )
		psfReqMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.sfReqMemoList" );

	parms.RequestMailType = RequestMailType;
	parms.RequestItemType = RequestItemType;
	this->ProcessEvent ( psfReqMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageMail::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageMail_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageMail::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageMail_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageMail::UpdateClanInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateClanInfo = 0;
	UBTPageMail_execUpdateClanInfo_Parms parms;

	if ( !pUpdateClanInfo )
		pUpdateClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.UpdateClanInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateClanInfo, &parms, NULL );

}*/

/*void UBTPageMail::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageMail_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTPageMail::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageMail_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageMail::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageMail_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageMail::UpdateItemList ( class UwGameManager* MM )
{
	static UFunction* pUpdateItemList = 0;
	UBTPageMail_execUpdateItemList_Parms parms;

	if ( !pUpdateItemList )
		pUpdateItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.UpdateItemList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateItemList, &parms, NULL );

}*/

/*void UBTPageMail::UpdateWebzenInvenListEnd ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateWebzenInvenListEnd = 0;
	UBTPageMail_execUpdateWebzenInvenListEnd_Parms parms;

	if ( !pUpdateWebzenInvenListEnd )
		pUpdateWebzenInvenListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.UpdateWebzenInvenListEnd" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateWebzenInvenListEnd, &parms, NULL );

}*/

/*bool UBTPageMail::BTWindowRequestApprovalClanHK_OnSuspend ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnSuspend = 0;
	UBTPageMail_execBTWindowRequestApprovalClanHK_OnSuspend_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnSuspend )
		pBTWindowRequestApprovalClanHK_OnSuspend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowRequestApprovalClanHK_OnSuspend" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnSuspend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowRequestApprovalClanHK_OnSuspend2 ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnSuspend2 = 0;
	UBTPageMail_execBTWindowRequestApprovalClanHK_OnSuspend2_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnSuspend2 )
		pBTWindowRequestApprovalClanHK_OnSuspend2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowRequestApprovalClanHK_OnSuspend2" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnSuspend2, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowRequestApprovalClanHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnCancel = 0;
	UBTPageMail_execBTWindowRequestApprovalClanHK_OnCancel_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnCancel )
		pBTWindowRequestApprovalClanHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowRequestApprovalClanHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowRequestApprovalClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnOK = 0;
	UBTPageMail_execBTWindowRequestApprovalClanHK_OnOK_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnOK )
		pBTWindowRequestApprovalClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowRequestApprovalClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowRequestClanHK_OnSuspend ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestClanHK_OnSuspend = 0;
	UBTPageMail_execBTWindowRequestClanHK_OnSuspend_Parms parms;

	if ( !pBTWindowRequestClanHK_OnSuspend )
		pBTWindowRequestClanHK_OnSuspend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowRequestClanHK_OnSuspend" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestClanHK_OnSuspend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowRequestClanHK_OnSuspend2 ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestClanHK_OnSuspend2 = 0;
	UBTPageMail_execBTWindowRequestClanHK_OnSuspend2_Parms parms;

	if ( !pBTWindowRequestClanHK_OnSuspend2 )
		pBTWindowRequestClanHK_OnSuspend2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowRequestClanHK_OnSuspend2" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestClanHK_OnSuspend2, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowRequestClanHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestClanHK_OnCancel = 0;
	UBTPageMail_execBTWindowRequestClanHK_OnCancel_Parms parms;

	if ( !pBTWindowRequestClanHK_OnCancel )
		pBTWindowRequestClanHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowRequestClanHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestClanHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowRequestClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestClanHK_OnOK = 0;
	UBTPageMail_execBTWindowRequestClanHK_OnOK_Parms parms;

	if ( !pBTWindowRequestClanHK_OnOK )
		pBTWindowRequestClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowRequestClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ReceiveACL_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pReceiveACL_OnClick = 0;
	UBTPageMail_execReceiveACL_OnClick_Parms parms;

	if ( !pReceiveACL_OnClick )
		pReceiveACL_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ReceiveACL_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pReceiveACL_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ButtonReceiveItem_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonReceiveItem_OnClick = 0;
	UBTPageMail_execButtonReceiveItem_OnClick_Parms parms;

	if ( !pButtonReceiveItem_OnClick )
		pButtonReceiveItem_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ButtonReceiveItem_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonReceiveItem_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BTWindowDefineARHK_ReceiveCashItem_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_ReceiveCashItem_OnOK = 0;
	UBTPageMail_execBTWindowDefineARHK_ReceiveCashItem_OnOK_Parms parms;

	if ( !pBTWindowDefineARHK_ReceiveCashItem_OnOK )
		pBTWindowDefineARHK_ReceiveCashItem_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BTWindowDefineARHK_ReceiveCashItem_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_ReceiveCashItem_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ButtonReply_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonReply_OnClick = 0;
	UBTPageMail_execButtonReply_OnClick_Parms parms;

	if ( !pButtonReply_OnClick )
		pButtonReply_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ButtonReply_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonReply_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ButtonDelete_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonDelete_OnClick = 0;
	UBTPageMail_execButtonDelete_OnClick_Parms parms;

	if ( !pButtonDelete_OnClick )
		pButtonDelete_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ButtonDelete_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonDelete_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ButtonDelete_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pButtonDelete_OnOK = 0;
	UBTPageMail_execButtonDelete_OnOK_Parms parms;

	if ( !pButtonDelete_OnOK )
		pButtonDelete_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ButtonDelete_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonDelete_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ButtonCancel_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonCancel_OnClick = 0;
	UBTPageMail_execButtonCancel_OnClick_Parms parms;

	if ( !pButtonCancel_OnClick )
		pButtonCancel_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ButtonCancel_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonCancel_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BtnDeleteAll_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBtnDeleteAll_OnOK = 0;
	UBTPageMail_execBtnDeleteAll_OnOK_Parms parms;

	if ( !pBtnDeleteAll_OnOK )
		pBtnDeleteAll_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BtnDeleteAll_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBtnDeleteAll_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::BtnDeleteAll_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBtnDeleteAll_OnClick = 0;
	UBTPageMail_execBtnDeleteAll_OnClick_Parms parms;

	if ( !pBtnDeleteAll_OnClick )
		pBtnDeleteAll_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.BtnDeleteAll_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBtnDeleteAll_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ButtonWrite_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonWrite_OnClick = 0;
	UBTPageMail_execButtonWrite_OnClick_Parms parms;

	if ( !pButtonWrite_OnClick )
		pButtonWrite_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ButtonWrite_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonWrite_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::ButtonSendMail_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonSendMail_OnClick = 0;
	UBTPageMail_execButtonSendMail_OnClick_Parms parms;

	if ( !pButtonSendMail_OnClick )
		pButtonSendMail_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.ButtonSendMail_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonSendMail_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::TabButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pTabButton_OnClick = 0;
	UBTPageMail_execTabButton_OnClick_Parms parms;

	if ( !pTabButton_OnClick )
		pTabButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.TabButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTabButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageMail_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::rfAckCouponUse ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckCouponUse = 0;
	UBTPageStore_execrfAckCouponUse_Parms parms;

	if ( !prfAckCouponUse )
		prfAckCouponUse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.rfAckCouponUse" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCouponUse, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::rfAckGiftItemByWebzenCash ( int Result, struct FString ErrMsg, int LeftProductCount )
{
	static UFunction* prfAckGiftItemByWebzenCash = 0;
	UBTPageStore_execrfAckGiftItemByWebzenCash_Parms parms;

	if ( !prfAckGiftItemByWebzenCash )
		prfAckGiftItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.rfAckGiftItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.LeftProductCount = LeftProductCount;
	this->ProcessEvent ( prfAckGiftItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::BTWindowDefineInfoHK_BuyGiftByWebzenCash_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineInfoHK_BuyGiftByWebzenCash_OnOK = 0;
	UBTPageStore_execBTWindowDefineInfoHK_BuyGiftByWebzenCash_OnOK_Parms parms;

	if ( !pBTWindowDefineInfoHK_BuyGiftByWebzenCash_OnOK )
		pBTWindowDefineInfoHK_BuyGiftByWebzenCash_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BTWindowDefineInfoHK_BuyGiftByWebzenCash_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineInfoHK_BuyGiftByWebzenCash_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageStore::BTWindowDefineInfoHK_ButtonOK_OnTimeOut ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineInfoHK_ButtonOK_OnTimeOut = 0;
	UBTPageStore_execBTWindowDefineInfoHK_ButtonOK_OnTimeOut_Parms parms;

	if ( !pBTWindowDefineInfoHK_ButtonOK_OnTimeOut )
		pBTWindowDefineInfoHK_ButtonOK_OnTimeOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BTWindowDefineInfoHK_ButtonOK_OnTimeOut" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineInfoHK_ButtonOK_OnTimeOut, &parms, NULL );

}*/

/*bool UBTPageStore::rfAckBuyItemByWebzenCash ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBuyItemByWebzenCash = 0;
	UBTPageStore_execrfAckBuyItemByWebzenCash_Parms parms;

	if ( !prfAckBuyItemByWebzenCash )
		prfAckBuyItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.rfAckBuyItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBuyItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::rfAckSendGift ( int Result, struct FString ErrMsg, int PointRemain, int CashRemain )
{
	static UFunction* prfAckSendGift = 0;
	UBTPageStore_execrfAckSendGift_Parms parms;

	if ( !prfAckSendGift )
		prfAckSendGift = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.rfAckSendGift" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	this->ProcessEvent ( prfAckSendGift, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageStore::BoughtItemMark ( int BoughtItemID )
{
	static UFunction* pBoughtItemMark = 0;
	UBTPageStore_execBoughtItemMark_Parms parms;

	if ( !pBoughtItemMark )
		pBoughtItemMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BoughtItemMark" );

	parms.BoughtItemID = BoughtItemID;
	this->ProcessEvent ( pBoughtItemMark, &parms, NULL );

}*/

/*bool UBTPageStore::rfAckShopItemListEnd (  )
{
	static UFunction* prfAckShopItemListEnd = 0;
	UBTPageStore_execrfAckShopItemListEnd_Parms parms;

	if ( !prfAckShopItemListEnd )
		prfAckShopItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.rfAckShopItemListEnd" );

	this->ProcessEvent ( prfAckShopItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::rfAckShopItemList ( class TArray< int > ItemID )
{
	static UFunction* prfAckShopItemList = 0;
	UBTPageStore_execrfAckShopItemList_Parms parms;

	if ( !prfAckShopItemList )
		prfAckShopItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.rfAckShopItemList" );

	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckShopItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::rfAckShopItemListStart ( int Count )
{
	static UFunction* prfAckShopItemListStart = 0;
	UBTPageStore_execrfAckShopItemListStart_Parms parms;

	if ( !prfAckShopItemListStart )
		prfAckShopItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.rfAckShopItemListStart" );

	parms.Count = Count;
	this->ProcessEvent ( prfAckShopItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::BTWindowJoinClan_OK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowJoinClan_OK = 0;
	UBTPageStore_execBTWindowJoinClan_OK_Parms parms;

	if ( !pBTWindowJoinClan_OK )
		pBTWindowJoinClan_OK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BTWindowJoinClan_OK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowJoinClan_OK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::BTWindowCreateClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanHK_OnOK = 0;
	UBTPageStore_execBTWindowCreateClanHK_OnOK_Parms parms;

	if ( !pBTWindowCreateClanHK_OnOK )
		pBTWindowCreateClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BTWindowCreateClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::BTWindowCreateClanNeedPointHK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanNeedPointHK_OnClick = 0;
	UBTPageStore_execBTWindowCreateClanNeedPointHK_OnClick_Parms parms;

	if ( !pBTWindowCreateClanNeedPointHK_OnClick )
		pBTWindowCreateClanNeedPointHK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BTWindowCreateClanNeedPointHK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanNeedPointHK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::ClanMenu_ButtonCreateClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonCreateClan_OnClick = 0;
	UBTPageStore_execClanMenu_ButtonCreateClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonCreateClan_OnClick )
		pClanMenu_ButtonCreateClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.ClanMenu_ButtonCreateClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonCreateClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::BTWindowFindClanHK_OnInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnInfo = 0;
	UBTPageStore_execBTWindowFindClanHK_OnInfo_Parms parms;

	if ( !pBTWindowFindClanHK_OnInfo )
		pBTWindowFindClanHK_OnInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BTWindowFindClanHK_OnInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::BTWindowFindClanHK_OnRequestJoin ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnRequestJoin = 0;
	UBTPageStore_execBTWindowFindClanHK_OnRequestJoin_Parms parms;

	if ( !pBTWindowFindClanHK_OnRequestJoin )
		pBTWindowFindClanHK_OnRequestJoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BTWindowFindClanHK_OnRequestJoin" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnRequestJoin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::ClanMenu_ButtonFindClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonFindClan_OnClick = 0;
	UBTPageStore_execClanMenu_ButtonFindClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonFindClan_OnClick )
		pClanMenu_ButtonFindClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.ClanMenu_ButtonFindClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonFindClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::ClanMenu_ButtonLookingForClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonLookingForClan_OnClick = 0;
	UBTPageStore_execClanMenu_ButtonLookingForClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonLookingForClan_OnClick )
		pClanMenu_ButtonLookingForClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.ClanMenu_ButtonLookingForClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonLookingForClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTPageStore::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageStore_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageStore::RefreshShop (  )
{
	static UFunction* pRefreshShop = 0;
	UBTPageStore_execRefreshShop_Parms parms;

	if ( !pRefreshShop )
		pRefreshShop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.RefreshShop" );

	this->ProcessEvent ( pRefreshShop, &parms, NULL );

}*/

/*void UBTPageStore::RefreshCashNPoint (  )
{
	static UFunction* pRefreshCashNPoint = 0;
	UBTPageStore_execRefreshCashNPoint_Parms parms;

	if ( !pRefreshCashNPoint )
		pRefreshCashNPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.RefreshCashNPoint" );

	this->ProcessEvent ( pRefreshCashNPoint, &parms, NULL );

}*/

/*bool UBTPageStore::internalKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pinternalKeyEvent = 0;
	UBTPageStore_execinternalKeyEvent_Parms parms;

	if ( !pinternalKeyEvent )
		pinternalKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.internalKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pinternalKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageStore::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageStore_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageStore::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageStore_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageStore::InternalOnReOpen (  )
{
	static UFunction* pInternalOnReOpen = 0;
	UBTPageStore_execInternalOnReOpen_Parms parms;

	if ( !pInternalOnReOpen )
		pInternalOnReOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.InternalOnReOpen" );

	this->ProcessEvent ( pInternalOnReOpen, &parms, NULL );

}*/

/*void UBTPageStore::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageStore_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageStore::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageStore_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*bool UBTPageStore::BTWindowDefineARHK_24_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_24_OnOK = 0;
	UBTPageStore_execBTWindowDefineARHK_24_OnOK_Parms parms;

	if ( !pBTWindowDefineARHK_24_OnOK )
		pBTWindowDefineARHK_24_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BTWindowDefineARHK_24_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_24_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageStore::UpdateWebzenItemList ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateWebzenItemList = 0;
	UBTPageStore_execUpdateWebzenItemList_Parms parms;

	if ( !pUpdateWebzenItemList )
		pUpdateWebzenItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.UpdateWebzenItemList" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateWebzenItemList, &parms, NULL );

}*/

/*void UBTPageStore::UpdateItemList ( class UwGameManager* MM )
{
	static UFunction* pUpdateItemList = 0;
	UBTPageStore_execUpdateItemList_Parms parms;

	if ( !pUpdateItemList )
		pUpdateItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.UpdateItemList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateItemList, &parms, NULL );

}*/

/*void UBTPageStore::UpdateServerTime ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateServerTime = 0;
	UBTPageStore_execUpdateServerTime_Parms parms;

	if ( !pUpdateServerTime )
		pUpdateServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.UpdateServerTime" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateServerTime, &parms, NULL );

}*/

/*void UBTPageStore::UpdateMoneyInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateMoneyInfo = 0;
	UBTPageStore_execUpdateMoneyInfo_Parms parms;

	if ( !pUpdateMoneyInfo )
		pUpdateMoneyInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.UpdateMoneyInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateMoneyInfo, &parms, NULL );

}*/

/*void UBTPageStore::InitializeCashNPoint (  )
{
	static UFunction* pInitializeCashNPoint = 0;
	UBTPageStore_execInitializeCashNPoint_Parms parms;

	if ( !pInitializeCashNPoint )
		pInitializeCashNPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.InitializeCashNPoint" );

	this->ProcessEvent ( pInitializeCashNPoint, &parms, NULL );

}*/

/*void UBTPageStore::TeamChatLog_Extra ( struct FString cL )
{
	static UFunction* pTeamChatLog_Extra = 0;
	UBTPageStore_execTeamChatLog_Extra_Parms parms;

	if ( !pTeamChatLog_Extra )
		pTeamChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.TeamChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageStore::BroadCastItemChatLog_Extra ( struct FString cL )
{
	static UFunction* pBroadCastItemChatLog_Extra = 0;
	UBTPageStore_execBroadCastItemChatLog_Extra_Parms parms;

	if ( !pBroadCastItemChatLog_Extra )
		pBroadCastItemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.BroadCastItemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pBroadCastItemChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageStore::SystemChatLog_Extra ( struct FString cL )
{
	static UFunction* pSystemChatLog_Extra = 0;
	UBTPageStore_execSystemChatLog_Extra_Parms parms;

	if ( !pSystemChatLog_Extra )
		pSystemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.SystemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageStore::SelfChatLog_Extra ( struct FString cL )
{
	static UFunction* pSelfChatLog_Extra = 0;
	UBTPageStore_execSelfChatLog_Extra_Parms parms;

	if ( !pSelfChatLog_Extra )
		pSelfChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.SelfChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageStore::WhisperChatLog_Extra ( struct FString cL )
{
	static UFunction* pWhisperChatLog_Extra = 0;
	UBTPageStore_execWhisperChatLog_Extra_Parms parms;

	if ( !pWhisperChatLog_Extra )
		pWhisperChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.WhisperChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageStore::ClanChatLog_Extra ( struct FString cL )
{
	static UFunction* pClanChatLog_Extra = 0;
	UBTPageStore_execClanChatLog_Extra_Parms parms;

	if ( !pClanChatLog_Extra )
		pClanChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.ClanChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageStore::NormalChatLog_Extra ( struct FString cL )
{
	static UFunction* pNormalChatLog_Extra = 0;
	UBTPageStore_execNormalChatLog_Extra_Parms parms;

	if ( !pNormalChatLog_Extra )
		pNormalChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.NormalChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageStore::ClearChatLog_Extra (  )
{
	static UFunction* pClearChatLog_Extra = 0;
	UBTPageStore_execClearChatLog_Extra_Parms parms;

	if ( !pClearChatLog_Extra )
		pClearChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.ClearChatLog_Extra" );

	this->ProcessEvent ( pClearChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageStore::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageStore_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UBTPageStore::TPStore_TabButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pTPStore_TabButton_OnClick = 0;
	UBTPageStore_execTPStore_TabButton_OnClick_Parms parms;

	if ( !pTPStore_TabButton_OnClick )
		pTPStore_TabButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.TPStore_TabButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTPStore_TabButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageStore_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckCouponUse ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckCouponUse = 0;
	UBTPageInventory_execrfAckCouponUse_Parms parms;

	if ( !prfAckCouponUse )
		prfAckCouponUse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckCouponUse" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCouponUse, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::Internal_KeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pInternal_KeyEvent = 0;
	UBTPageInventory_execInternal_KeyEvent_Parms parms;

	if ( !pInternal_KeyEvent )
		pInternal_KeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.Internal_KeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternal_KeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageInventory::RefreshSlotNum (  )
{
	static UFunction* pRefreshSlotNum = 0;
	UBTPageInventory_execRefreshSlotNum_Parms parms;

	if ( !pRefreshSlotNum )
		pRefreshSlotNum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.RefreshSlotNum" );

	this->ProcessEvent ( pRefreshSlotNum, &parms, NULL );

}*/

/*bool UBTPageInventory::rfAckGetItemFromItemBox ( int Result, struct FString ErrMsg, int ItemIDChoose, int PartIDChoose, struct FBtrDouble BoxItemIdx, int BxoItemCount, unsigned char bHave, struct FBtrDouble ItemIdx, struct FBtrDouble UntilTime, int StackCount )
{
	static UFunction* prfAckGetItemFromItemBox = 0;
	UBTPageInventory_execrfAckGetItemFromItemBox_Parms parms;

	if ( !prfAckGetItemFromItemBox )
		prfAckGetItemFromItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckGetItemFromItemBox" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	parms.BoxItemIdx = BoxItemIdx;
	parms.BxoItemCount = BxoItemCount;
	parms.bHave = bHave;
	parms.ItemIdx = ItemIdx;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckGetItemFromItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckUpdateQSlot ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUpdateQSlot = 0;
	UBTPageInventory_execrfAckUpdateQSlot_Parms parms;

	if ( !prfAckUpdateQSlot )
		prfAckUpdateQSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckUpdateQSlot" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUpdateQSlot, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckModifyWeapon ( int Result, struct FString ErrMsg, struct FBtrDouble UniqueID, int AddPartID, int PaintID, int Point, int Cash )
{
	static UFunction* prfAckModifyWeapon = 0;
	UBTPageInventory_execrfAckModifyWeapon_Parms parms;

	if ( !prfAckModifyWeapon )
		prfAckModifyWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckModifyWeapon" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueID = UniqueID;
	parms.AddPartID = AddPartID;
	parms.PaintID = PaintID;
	parms.Point = Point;
	parms.Cash = Cash;
	this->ProcessEvent ( prfAckModifyWeapon, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckSellShopItem ( int Result, struct FString ErrMsg, int PointRemain, int CashRemain, int Count )
{
	static UFunction* prfAckSellShopItem = 0;
	UBTPageInventory_execrfAckSellShopItem_Parms parms;

	if ( !prfAckSellShopItem )
		prfAckSellShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckSellShopItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	parms.Count = Count;
	this->ProcessEvent ( prfAckSellShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckSellShopItemInfo ( int Result, struct FString ErrMsg, struct FBtrDouble UniqueItemID, int SellPoint, int CurPoint, int AfterPoint )
{
	static UFunction* prfAckSellShopItemInfo = 0;
	UBTPageInventory_execrfAckSellShopItemInfo_Parms parms;

	if ( !prfAckSellShopItemInfo )
		prfAckSellShopItemInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckSellShopItemInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.SellPoint = SellPoint;
	parms.CurPoint = CurPoint;
	parms.AfterPoint = AfterPoint;
	this->ProcessEvent ( prfAckSellShopItemInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::BTWindowItemSellHK_OnSellOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowItemSellHK_OnSellOK = 0;
	UBTPageInventory_execBTWindowItemSellHK_OnSellOK_Parms parms;

	if ( !pBTWindowItemSellHK_OnSellOK )
		pBTWindowItemSellHK_OnSellOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowItemSellHK_OnSellOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowItemSellHK_OnSellOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckRepairItem ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, int RepairCost, class TArray< int > DamageDegree )
{
	static UFunction* prfAckRepairItem = 0;
	UBTPageInventory_execrfAckRepairItem_Parms parms;

	if ( !prfAckRepairItem )
		prfAckRepairItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckRepairItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	parms.DamageDegree = DamageDegree;
	this->ProcessEvent ( prfAckRepairItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckRepairCost ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > RepairCost )
{
	static UFunction* prfAckRepairCost = 0;
	UBTPageInventory_execrfAckRepairCost_Parms parms;

	if ( !prfAckRepairCost )
		prfAckRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckRepairCost" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( prfAckRepairCost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::RepairAllItem_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pRepairAllItem_OnOK = 0;
	UBTPageInventory_execRepairAllItem_OnOK_Parms parms;

	if ( !pRepairAllItem_OnOK )
		pRepairAllItem_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.RepairAllItem_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pRepairAllItem_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::BTWindowItemRepairAllHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowItemRepairAllHK_OnOK = 0;
	UBTPageInventory_execBTWindowItemRepairAllHK_OnOK_Parms parms;

	if ( !pBTWindowItemRepairAllHK_OnOK )
		pBTWindowItemRepairAllHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowItemRepairAllHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowItemRepairAllHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::RepairItem_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pRepairItem_OnOK = 0;
	UBTPageInventory_execRepairItem_OnOK_Parms parms;

	if ( !pRepairItem_OnOK )
		pRepairItem_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.RepairItem_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pRepairItem_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::BTWindowItemRepairHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowItemRepairHK_OnOK = 0;
	UBTPageInventory_execBTWindowItemRepairHK_OnOK_Parms parms;

	if ( !pBTWindowItemRepairHK_OnOK )
		pBTWindowItemRepairHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowItemRepairHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowItemRepairHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfReqConfirmSkillChanged (  )
{
	static UFunction* prfReqConfirmSkillChanged = 0;
	UBTPageInventory_execrfReqConfirmSkillChanged_Parms parms;

	if ( !prfReqConfirmSkillChanged )
		prfReqConfirmSkillChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfReqConfirmSkillChanged" );

	this->ProcessEvent ( prfReqConfirmSkillChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckEquipSkill ( int ChangedNewSkillID, int ChangedNewSkillUniqueID, unsigned char ChangedNewSlotPosition, int ChangedOldSkillID, int ChangedOldSkillUniqueID, unsigned char ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipSkill = 0;
	UBTPageInventory_execrfAckEquipSkill_Parms parms;

	if ( !prfAckEquipSkill )
		prfAckEquipSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckEquipSkill" );

	parms.ChangedNewSkillID = ChangedNewSkillID;
	parms.ChangedNewSkillUniqueID = ChangedNewSkillUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldSkillID = ChangedOldSkillID;
	parms.ChangedOldSkillUniqueID = ChangedOldSkillUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipSkill, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckConfirmItemChanged ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmItemChanged = 0;
	UBTPageInventory_execrfAckConfirmItemChanged_Parms parms;

	if ( !prfAckConfirmItemChanged )
		prfAckConfirmItemChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckConfirmItemChanged" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmItemChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckEquipItem ( int ChangedNewItemID, struct FBtrDouble ChangedNewUniqueID, int ChangedNewSlotPosition, int ChangedOldItemID, struct FBtrDouble ChangedOldUniqueID, int ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipItem = 0;
	UBTPageInventory_execrfAckEquipItem_Parms parms;

	if ( !prfAckEquipItem )
		prfAckEquipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckEquipItem" );

	parms.ChangedNewItemID = ChangedNewItemID;
	parms.ChangedNewUniqueID = ChangedNewUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldItemID = ChangedOldItemID;
	parms.ChangedOldUniqueID = ChangedOldUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::BTWindowJoinClan_OK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowJoinClan_OK = 0;
	UBTPageInventory_execBTWindowJoinClan_OK_Parms parms;

	if ( !pBTWindowJoinClan_OK )
		pBTWindowJoinClan_OK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowJoinClan_OK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowJoinClan_OK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::BTWindowCreateClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanHK_OnOK = 0;
	UBTPageInventory_execBTWindowCreateClanHK_OnOK_Parms parms;

	if ( !pBTWindowCreateClanHK_OnOK )
		pBTWindowCreateClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowCreateClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::BTWindowCreateClanNeedPointHK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanNeedPointHK_OnClick = 0;
	UBTPageInventory_execBTWindowCreateClanNeedPointHK_OnClick_Parms parms;

	if ( !pBTWindowCreateClanNeedPointHK_OnClick )
		pBTWindowCreateClanNeedPointHK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowCreateClanNeedPointHK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanNeedPointHK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::ClanMenu_ButtonCreateClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonCreateClan_OnClick = 0;
	UBTPageInventory_execClanMenu_ButtonCreateClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonCreateClan_OnClick )
		pClanMenu_ButtonCreateClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.ClanMenu_ButtonCreateClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonCreateClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::BTWindowFindClanHK_OnInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnInfo = 0;
	UBTPageInventory_execBTWindowFindClanHK_OnInfo_Parms parms;

	if ( !pBTWindowFindClanHK_OnInfo )
		pBTWindowFindClanHK_OnInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowFindClanHK_OnInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::BTWindowFindClanHK_OnRequestJoin ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnRequestJoin = 0;
	UBTPageInventory_execBTWindowFindClanHK_OnRequestJoin_Parms parms;

	if ( !pBTWindowFindClanHK_OnRequestJoin )
		pBTWindowFindClanHK_OnRequestJoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowFindClanHK_OnRequestJoin" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnRequestJoin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::ClanMenu_ButtonFindClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonFindClan_OnClick = 0;
	UBTPageInventory_execClanMenu_ButtonFindClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonFindClan_OnClick )
		pClanMenu_ButtonFindClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.ClanMenu_ButtonFindClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonFindClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::ClanMenu_ButtonLookingForClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonLookingForClan_OnClick = 0;
	UBTPageInventory_execClanMenu_ButtonLookingForClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonLookingForClan_OnClick )
		pClanMenu_ButtonLookingForClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.ClanMenu_ButtonLookingForClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonLookingForClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageInventory::UpdateQuickSlot ( int i )
{
	static UFunction* pUpdateQuickSlot = 0;
	UBTPageInventory_execUpdateQuickSlot_Parms parms;

	if ( !pUpdateQuickSlot )
		pUpdateQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.UpdateQuickSlot" );

	parms.i = i;
	this->ProcessEvent ( pUpdateQuickSlot, &parms, NULL );

}*/

/*void UBTPageInventory::UnequipQuickSlot ( int ButtonID )
{
	static UFunction* pUnequipQuickSlot = 0;
	UBTPageInventory_execUnequipQuickSlot_Parms parms;

	if ( !pUnequipQuickSlot )
		pUnequipQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.UnequipQuickSlot" );

	parms.ButtonID = ButtonID;
	this->ProcessEvent ( pUnequipQuickSlot, &parms, NULL );

}*/

/*void UBTPageInventory::EquipMainQuickSlot (  )
{
	static UFunction* pEquipMainQuickSlot = 0;
	UBTPageInventory_execEquipMainQuickSlot_Parms parms;

	if ( !pEquipMainQuickSlot )
		pEquipMainQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.EquipMainQuickSlot" );

	this->ProcessEvent ( pEquipMainQuickSlot, &parms, NULL );

}*/

/*bool UBTPageInventory::MainButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pMainButton_OnClick = 0;
	UBTPageInventory_execMainButton_OnClick_Parms parms;

	if ( !pMainButton_OnClick )
		pMainButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.MainButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pMainButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageInventory::RefreshWarehouse ( bool isSkipAddQSNum )
{
	static UFunction* pRefreshWarehouse = 0;
	UBTPageInventory_execRefreshWarehouse_Parms parms;

	if ( !pRefreshWarehouse )
		pRefreshWarehouse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.RefreshWarehouse" );

	parms.isSkipAddQSNum = isSkipAddQSNum;
	this->ProcessEvent ( pRefreshWarehouse, &parms, NULL );

}*/

/*void UBTPageInventory::FillQuickSlotInventories (  )
{
	static UFunction* pFillQuickSlotInventories = 0;
	UBTPageInventory_execFillQuickSlotInventories_Parms parms;

	if ( !pFillQuickSlotInventories )
		pFillQuickSlotInventories = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.FillQuickSlotInventories" );

	this->ProcessEvent ( pFillQuickSlotInventories, &parms, NULL );

}*/

/*void UBTPageInventory::RefreshCashNPoint (  )
{
	static UFunction* pRefreshCashNPoint = 0;
	UBTPageInventory_execRefreshCashNPoint_Parms parms;

	if ( !pRefreshCashNPoint )
		pRefreshCashNPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.RefreshCashNPoint" );

	this->ProcessEvent ( pRefreshCashNPoint, &parms, NULL );

}*/

/*void UBTPageInventory::RefreshQuickSlot (  )
{
	static UFunction* pRefreshQuickSlot = 0;
	UBTPageInventory_execRefreshQuickSlot_Parms parms;

	if ( !pRefreshQuickSlot )
		pRefreshQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.RefreshQuickSlot" );

	this->ProcessEvent ( pRefreshQuickSlot, &parms, NULL );

}*/

/*void UBTPageInventory::RefreshEquipSkill (  )
{
	static UFunction* pRefreshEquipSkill = 0;
	UBTPageInventory_execRefreshEquipSkill_Parms parms;

	if ( !pRefreshEquipSkill )
		pRefreshEquipSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.RefreshEquipSkill" );

	this->ProcessEvent ( pRefreshEquipSkill, &parms, NULL );

}*/

/*class UBTTcpLink_Channel* UBTPageInventory::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageInventory_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageInventory::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageInventory_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageInventory::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageInventory_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageInventory::InternalOnReOpen (  )
{
	static UFunction* pInternalOnReOpen = 0;
	UBTPageInventory_execInternalOnReOpen_Parms parms;

	if ( !pInternalOnReOpen )
		pInternalOnReOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.InternalOnReOpen" );

	this->ProcessEvent ( pInternalOnReOpen, &parms, NULL );

}*/

/*bool UBTPageInventory::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTPageInventory_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageInventory::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageInventory_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageInventory::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageInventory_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*bool UBTPageInventory::BTWindowDefineARHK_25_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_25_OnOK = 0;
	UBTPageInventory_execBTWindowDefineARHK_25_OnOK_Parms parms;

	if ( !pBTWindowDefineARHK_25_OnOK )
		pBTWindowDefineARHK_25_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowDefineARHK_25_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_25_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageInventory::UpdateServerTime ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateServerTime = 0;
	UBTPageInventory_execUpdateServerTime_Parms parms;

	if ( !pUpdateServerTime )
		pUpdateServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.UpdateServerTime" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateServerTime, &parms, NULL );

}*/

/*void UBTPageInventory::UpdateWebzenItemList ( class UwGameManager* MM )
{
	static UFunction* pUpdateWebzenItemList = 0;
	UBTPageInventory_execUpdateWebzenItemList_Parms parms;

	if ( !pUpdateWebzenItemList )
		pUpdateWebzenItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.UpdateWebzenItemList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateWebzenItemList, &parms, NULL );

}*/

/*void UBTPageInventory::UpdateItemList ( class UwGameManager* MM )
{
	static UFunction* pUpdateItemList = 0;
	UBTPageInventory_execUpdateItemList_Parms parms;

	if ( !pUpdateItemList )
		pUpdateItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.UpdateItemList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateItemList, &parms, NULL );

}*/

/*void UBTPageInventory::UpdateMoneyInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateMoneyInfo = 0;
	UBTPageInventory_execUpdateMoneyInfo_Parms parms;

	if ( !pUpdateMoneyInfo )
		pUpdateMoneyInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.UpdateMoneyInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateMoneyInfo, &parms, NULL );

}*/

/*void UBTPageInventory::InitializeCashNPoint (  )
{
	static UFunction* pInitializeCashNPoint = 0;
	UBTPageInventory_execInitializeCashNPoint_Parms parms;

	if ( !pInitializeCashNPoint )
		pInitializeCashNPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.InitializeCashNPoint" );

	this->ProcessEvent ( pInitializeCashNPoint, &parms, NULL );

}*/

/*void UBTPageInventory::TeamChatLog_Extra ( struct FString cL )
{
	static UFunction* pTeamChatLog_Extra = 0;
	UBTPageInventory_execTeamChatLog_Extra_Parms parms;

	if ( !pTeamChatLog_Extra )
		pTeamChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.TeamChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageInventory::BroadCastItemChatLog_Extra ( struct FString cL )
{
	static UFunction* pBroadCastItemChatLog_Extra = 0;
	UBTPageInventory_execBroadCastItemChatLog_Extra_Parms parms;

	if ( !pBroadCastItemChatLog_Extra )
		pBroadCastItemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BroadCastItemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pBroadCastItemChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageInventory::SystemChatLog_Extra ( struct FString cL )
{
	static UFunction* pSystemChatLog_Extra = 0;
	UBTPageInventory_execSystemChatLog_Extra_Parms parms;

	if ( !pSystemChatLog_Extra )
		pSystemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.SystemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageInventory::SelfChatLog_Extra ( struct FString cL )
{
	static UFunction* pSelfChatLog_Extra = 0;
	UBTPageInventory_execSelfChatLog_Extra_Parms parms;

	if ( !pSelfChatLog_Extra )
		pSelfChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.SelfChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageInventory::WhisperChatLog_Extra ( struct FString cL )
{
	static UFunction* pWhisperChatLog_Extra = 0;
	UBTPageInventory_execWhisperChatLog_Extra_Parms parms;

	if ( !pWhisperChatLog_Extra )
		pWhisperChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.WhisperChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageInventory::ClanChatLog_Extra ( struct FString cL )
{
	static UFunction* pClanChatLog_Extra = 0;
	UBTPageInventory_execClanChatLog_Extra_Parms parms;

	if ( !pClanChatLog_Extra )
		pClanChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.ClanChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageInventory::NormalChatLog_Extra ( struct FString cL )
{
	static UFunction* pNormalChatLog_Extra = 0;
	UBTPageInventory_execNormalChatLog_Extra_Parms parms;

	if ( !pNormalChatLog_Extra )
		pNormalChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.NormalChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageInventory::ClearChatLog_Extra (  )
{
	static UFunction* pClearChatLog_Extra = 0;
	UBTPageInventory_execClearChatLog_Extra_Parms parms;

	if ( !pClearChatLog_Extra )
		pClearChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.ClearChatLog_Extra" );

	this->ProcessEvent ( pClearChatLog_Extra, &parms, NULL );

}*/

/*bool UBTPageInventory::WeaponListClick ( class UGUIComponent* Sender )
{
	static UFunction* pWeaponListClick = 0;
	UBTPageInventory_execWeaponListClick_Parms parms;

	if ( !pWeaponListClick )
		pWeaponListClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.WeaponListClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWeaponListClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::ImageListBox_OnHover ( class UGUIComponent* Sender )
{
	static UFunction* pImageListBox_OnHover = 0;
	UBTPageInventory_execImageListBox_OnHover_Parms parms;

	if ( !pImageListBox_OnHover )
		pImageListBox_OnHover = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.ImageListBox_OnHover" );

	parms.Sender = Sender;
	this->ProcessEvent ( pImageListBox_OnHover, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::SubButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pSubButton_OnClick = 0;
	UBTPageInventory_execSubButton_OnClick_Parms parms;

	if ( !pSubButton_OnClick )
		pSubButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.SubButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pSubButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::SubButton_OnHover ( class UGUIComponent* Sender )
{
	static UFunction* pSubButton_OnHover = 0;
	UBTPageInventory_execSubButton_OnHover_Parms parms;

	if ( !pSubButton_OnHover )
		pSubButton_OnHover = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.SubButton_OnHover" );

	parms.Sender = Sender;
	this->ProcessEvent ( pSubButton_OnHover, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::TPQSClick ( class UGUIComponent* Sender )
{
	static UFunction* pTPQSClick = 0;
	UBTPageInventory_execTPQSClick_Parms parms;

	if ( !pTPQSClick )
		pTPQSClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.TPQSClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTPQSClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::ImageListBox_OnlClick ( class UGUIComponent* Sender )
{
	static UFunction* pImageListBox_OnlClick = 0;
	UBTPageInventory_execImageListBox_OnlClick_Parms parms;

	if ( !pImageListBox_OnlClick )
		pImageListBox_OnlClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.ImageListBox_OnlClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pImageListBox_OnlClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageInventory::SendCodes ( struct FString codes )
{
	static UFunction* pSendCodes = 0;
	UBTPageInventory_execSendCodes_Parms parms;

	if ( !pSendCodes )
		pSendCodes = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.SendCodes" );

	parms.codes = codes;
	this->ProcessEvent ( pSendCodes, &parms, NULL );

}*/

/*bool UBTPageInventory::ClickRedeemCodes ( class UGUIComponent* Sender )
{
	static UFunction* pClickRedeemCodes = 0;
	UBTPageInventory_execClickRedeemCodes_Parms parms;

	if ( !pClickRedeemCodes )
		pClickRedeemCodes = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.ClickRedeemCodes" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClickRedeemCodes, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::ClickChargeCash ( class UGUIComponent* Sender )
{
	static UFunction* pClickChargeCash = 0;
	UBTPageInventory_execClickChargeCash_Parms parms;

	if ( !pClickChargeCash )
		pClickChargeCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.ClickChargeCash" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClickChargeCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageInventory::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageInventory_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTPageInventory::UpdateWebzenInvenListEnd ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateWebzenInvenListEnd = 0;
	UBTPageInventory_execUpdateWebzenInvenListEnd_Parms parms;

	if ( !pUpdateWebzenInvenListEnd )
		pUpdateWebzenInvenListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.UpdateWebzenInvenListEnd" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateWebzenInvenListEnd, &parms, NULL );

}*/

/*void UBTPageInventory::UnequipItem ( int ButtonID )
{
	static UFunction* pUnequipItem = 0;
	UBTPageInventory_execUnequipItem_Parms parms;

	if ( !pUnequipItem )
		pUnequipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.UnequipItem" );

	parms.ButtonID = ButtonID;
	this->ProcessEvent ( pUnequipItem, &parms, NULL );

}*/

/*bool UBTPageInventory::TPInventoryQS_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pTPInventoryQS_OnClick = 0;
	UBTPageInventory_execTPInventoryQS_OnClick_Parms parms;

	if ( !pTPInventoryQS_OnClick )
		pTPInventoryQS_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.TPInventoryQS_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTPInventoryQS_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::BTWindowModifyHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowModifyHK_OnOK = 0;
	UBTPageInventory_execBTWindowModifyHK_OnOK_Parms parms;

	if ( !pBTWindowModifyHK_OnOK )
		pBTWindowModifyHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.BTWindowModifyHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowModifyHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageInventory::EquipQuickSlot (  )
{
	static UFunction* pEquipQuickSlot = 0;
	UBTPageInventory_execEquipQuickSlot_Parms parms;

	if ( !pEquipQuickSlot )
		pEquipQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.EquipQuickSlot" );

	this->ProcessEvent ( pEquipQuickSlot, &parms, NULL );

}*/

/*void UBTPageInventory::EquipItem (  )
{
	static UFunction* pEquipItem = 0;
	UBTPageInventory_execEquipItem_Parms parms;

	if ( !pEquipItem )
		pEquipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.EquipItem" );

	this->ProcessEvent ( pEquipItem, &parms, NULL );

}*/

/*bool UBTPageInventory::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageInventory_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckShopItemListEnd (  )
{
	static UFunction* prfAckShopItemListEnd = 0;
	UBTPageInventory_execrfAckShopItemListEnd_Parms parms;

	if ( !prfAckShopItemListEnd )
		prfAckShopItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckShopItemListEnd" );

	this->ProcessEvent ( prfAckShopItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckShopItemList ( class TArray< int > ItemID )
{
	static UFunction* prfAckShopItemList = 0;
	UBTPageInventory_execrfAckShopItemList_Parms parms;

	if ( !prfAckShopItemList )
		prfAckShopItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckShopItemList" );

	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckShopItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory::rfAckShopItemListStart ( int Count )
{
	static UFunction* prfAckShopItemListStart = 0;
	UBTPageInventory_execrfAckShopItemListStart_Parms parms;

	if ( !prfAckShopItemListStart )
		prfAckShopItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory.rfAckShopItemListStart" );

	parms.Count = Count;
	this->ProcessEvent ( prfAckShopItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::rfAckGetRankingInfoListEnd (  )
{
	static UFunction* prfAckGetRankingInfoListEnd = 0;
	UBTPageMyInfo_execrfAckGetRankingInfoListEnd_Parms parms;

	if ( !prfAckGetRankingInfoListEnd )
		prfAckGetRankingInfoListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.rfAckGetRankingInfoListEnd" );

	this->ProcessEvent ( prfAckGetRankingInfoListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::rfAckGetRankingInfoList ( int Result, unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckGetRankingInfoList = 0;
	UBTPageMyInfo_execrfAckGetRankingInfoList_Parms parms;

	if ( !prfAckGetRankingInfoList )
		prfAckGetRankingInfoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.rfAckGetRankingInfoList" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.CharName = CharName;
	parms.CharLevel = CharLevel;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Ranking_Accum = Ranking_Accum;
	parms.Ranking_Accum_Prev = Ranking_Accum_Prev;
	parms.Ranking_Accum_Exp = Ranking_Accum_Exp;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckGetRankingInfoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::rfAckGetRankingInfoListStart ( int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount )
{
	static UFunction* prfAckGetRankingInfoListStart = 0;
	UBTPageMyInfo_execrfAckGetRankingInfoListStart_Parms parms;

	if ( !prfAckGetRankingInfoListStart )
		prfAckGetRankingInfoListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.rfAckGetRankingInfoListStart" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckGetRankingInfoListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::rfAckCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb )
{
	static UFunction* prfAckCharDetailInfo = 0;
	UBTPageMyInfo_execrfAckCharDetailInfo_Parms parms;

	if ( !prfAckCharDetailInfo )
		prfAckCharDetailInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.rfAckCharDetailInfo" );

	parms.MaxSerial = MaxSerial;
	parms.MaxScore = MaxScore;
	parms.MaxKill = MaxKill;
	parms.MaxAssist = MaxAssist;
	parms.Serial3 = Serial3;
	parms.Serial5 = Serial5;
	parms.Serial7 = Serial7;
	parms.Serial10 = Serial10;
	parms.Serial15 = Serial15;
	parms.AR = AR;
	parms.SMG = SMG;
	parms.SR = SR;
	parms.SW = SW;
	parms.Melee = Melee;
	parms.Grenade = Grenade;
	parms.FlashBang = FlashBang;
	parms.Foot = Foot;
	parms.AT4 = AT4;
	parms.MG = MG;
	parms.Fire = Fire;
	parms.RPG7 = RPG7;
	parms.TimeBomb = TimeBomb;
	parms.IcendiaryBomb = IcendiaryBomb;
	parms.ClusterBomb = ClusterBomb;
	parms.ByChopper = ByChopper;
	parms.Artillery = Artillery;
	parms.KillChopper = KillChopper;
	parms.FirstKill = FirstKill;
	parms.LastKill = LastKill;
	parms.AllKill = AllKill;
	parms.Dominate = Dominate;
	parms.InstallBomb = InstallBomb;
	parms.DefuseBomb = DefuseBomb;
	this->ProcessEvent ( prfAckCharDetailInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageMyInfo_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::BTWindowJoinClan_OK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowJoinClan_OK = 0;
	UBTPageMyInfo_execBTWindowJoinClan_OK_Parms parms;

	if ( !pBTWindowJoinClan_OK )
		pBTWindowJoinClan_OK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.BTWindowJoinClan_OK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowJoinClan_OK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::BTWindowCreateClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanHK_OnOK = 0;
	UBTPageMyInfo_execBTWindowCreateClanHK_OnOK_Parms parms;

	if ( !pBTWindowCreateClanHK_OnOK )
		pBTWindowCreateClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.BTWindowCreateClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::BTWindowCreateClanNeedPointHK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanNeedPointHK_OnClick = 0;
	UBTPageMyInfo_execBTWindowCreateClanNeedPointHK_OnClick_Parms parms;

	if ( !pBTWindowCreateClanNeedPointHK_OnClick )
		pBTWindowCreateClanNeedPointHK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.BTWindowCreateClanNeedPointHK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanNeedPointHK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::ClanMenu_ButtonCreateClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonCreateClan_OnClick = 0;
	UBTPageMyInfo_execClanMenu_ButtonCreateClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonCreateClan_OnClick )
		pClanMenu_ButtonCreateClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.ClanMenu_ButtonCreateClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonCreateClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::BTWindowFindClanHK_OnInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnInfo = 0;
	UBTPageMyInfo_execBTWindowFindClanHK_OnInfo_Parms parms;

	if ( !pBTWindowFindClanHK_OnInfo )
		pBTWindowFindClanHK_OnInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.BTWindowFindClanHK_OnInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::BTWindowFindClanHK_OnRequestJoin ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnRequestJoin = 0;
	UBTPageMyInfo_execBTWindowFindClanHK_OnRequestJoin_Parms parms;

	if ( !pBTWindowFindClanHK_OnRequestJoin )
		pBTWindowFindClanHK_OnRequestJoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.BTWindowFindClanHK_OnRequestJoin" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnRequestJoin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::ClanMenu_ButtonFindClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonFindClan_OnClick = 0;
	UBTPageMyInfo_execClanMenu_ButtonFindClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonFindClan_OnClick )
		pClanMenu_ButtonFindClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.ClanMenu_ButtonFindClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonFindClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::ClanMenu_ButtonLookingForClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonLookingForClan_OnClick = 0;
	UBTPageMyInfo_execClanMenu_ButtonLookingForClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonLookingForClan_OnClick )
		pClanMenu_ButtonLookingForClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.ClanMenu_ButtonLookingForClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonLookingForClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTTcpLink_Channel* UBTPageMyInfo::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageMyInfo_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo::InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* KeyState )
{
	static UFunction* pInternalOnKeyEvent = 0;
	UBTPageMyInfo_execInternalOnKeyEvent_Parms parms;

	if ( !pInternalOnKeyEvent )
		pInternalOnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.InternalOnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternalOnKeyEvent, &parms, NULL );

	*key = parms.key;
	*KeyState = parms.KeyState;
	return parms.ReturnValue;
}*/

/*void UBTPageMyInfo::InternalOnHideComboBoxList (  )
{
	static UFunction* pInternalOnHideComboBoxList = 0;
	UBTPageMyInfo_execInternalOnHideComboBoxList_Parms parms;

	if ( !pInternalOnHideComboBoxList )
		pInternalOnHideComboBoxList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.InternalOnHideComboBoxList" );

	this->ProcessEvent ( pInternalOnHideComboBoxList, &parms, NULL );

}*/

/*void UBTPageMyInfo::InternalOnChangeRankingComboBox (  )
{
	static UFunction* pInternalOnChangeRankingComboBox = 0;
	UBTPageMyInfo_execInternalOnChangeRankingComboBox_Parms parms;

	if ( !pInternalOnChangeRankingComboBox )
		pInternalOnChangeRankingComboBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.InternalOnChangeRankingComboBox" );

	this->ProcessEvent ( pInternalOnChangeRankingComboBox, &parms, NULL );

}*/

/*void UBTPageMyInfo::InternalOnChangeFriendlyUser (  )
{
	static UFunction* pInternalOnChangeFriendlyUser = 0;
	UBTPageMyInfo_execInternalOnChangeFriendlyUser_Parms parms;

	if ( !pInternalOnChangeFriendlyUser )
		pInternalOnChangeFriendlyUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.InternalOnChangeFriendlyUser" );

	this->ProcessEvent ( pInternalOnChangeFriendlyUser, &parms, NULL );

}*/

/*void UBTPageMyInfo::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageMyInfo_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageMyInfo::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageMyInfo_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageMyInfo::TeamChatLog_Extra ( struct FString cL )
{
	static UFunction* pTeamChatLog_Extra = 0;
	UBTPageMyInfo_execTeamChatLog_Extra_Parms parms;

	if ( !pTeamChatLog_Extra )
		pTeamChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.TeamChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageMyInfo::BroadCastItemChatLog_Extra ( struct FString cL )
{
	static UFunction* pBroadCastItemChatLog_Extra = 0;
	UBTPageMyInfo_execBroadCastItemChatLog_Extra_Parms parms;

	if ( !pBroadCastItemChatLog_Extra )
		pBroadCastItemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.BroadCastItemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pBroadCastItemChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageMyInfo::SystemChatLog_Extra ( struct FString cL )
{
	static UFunction* pSystemChatLog_Extra = 0;
	UBTPageMyInfo_execSystemChatLog_Extra_Parms parms;

	if ( !pSystemChatLog_Extra )
		pSystemChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.SystemChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageMyInfo::SelfChatLog_Extra ( struct FString cL )
{
	static UFunction* pSelfChatLog_Extra = 0;
	UBTPageMyInfo_execSelfChatLog_Extra_Parms parms;

	if ( !pSelfChatLog_Extra )
		pSelfChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.SelfChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageMyInfo::WhisperChatLog_Extra ( struct FString cL )
{
	static UFunction* pWhisperChatLog_Extra = 0;
	UBTPageMyInfo_execWhisperChatLog_Extra_Parms parms;

	if ( !pWhisperChatLog_Extra )
		pWhisperChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.WhisperChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageMyInfo::ClanChatLog_Extra ( struct FString cL )
{
	static UFunction* pClanChatLog_Extra = 0;
	UBTPageMyInfo_execClanChatLog_Extra_Parms parms;

	if ( !pClanChatLog_Extra )
		pClanChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.ClanChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageMyInfo::NormalChatLog_Extra ( struct FString cL )
{
	static UFunction* pNormalChatLog_Extra = 0;
	UBTPageMyInfo_execNormalChatLog_Extra_Parms parms;

	if ( !pNormalChatLog_Extra )
		pNormalChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.NormalChatLog_Extra" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageMyInfo::ClearChatLog_Extra (  )
{
	static UFunction* pClearChatLog_Extra = 0;
	UBTPageMyInfo_execClearChatLog_Extra_Parms parms;

	if ( !pClearChatLog_Extra )
		pClearChatLog_Extra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.ClearChatLog_Extra" );

	this->ProcessEvent ( pClearChatLog_Extra, &parms, NULL );

}*/

/*void UBTPageMyInfo::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageMyInfo_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTPageMyInfo::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageMyInfo_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageMyInfo::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageMyInfo_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageMyInfo::UpdateCharInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateCharInfo = 0;
	UBTPageMyInfo_execUpdateCharInfo_Parms parms;

	if ( !pUpdateCharInfo )
		pUpdateCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.UpdateCharInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateCharInfo, &parms, NULL );

}*/

/*bool UBTPageMyInfo::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageMyInfo_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckFriendPosition ( int Result, struct FString TargetCharName, unsigned char ServerType, struct FString fServername, struct FString fServerShortName, struct FString fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, struct FString ChannelNickName, int GameRoomNum )
{
	static UFunction* prfAckFriendPosition = 0;
	UBTPageClan_execrfAckFriendPosition_Parms parms;

	if ( !prfAckFriendPosition )
		prfAckFriendPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckFriendPosition" );

	parms.Result = Result;
	parms.TargetCharName = TargetCharName;
	parms.ServerType = ServerType;
	parms.fServername = fServername;
	parms.fServerShortName = fServerShortName;
	parms.fServerIP = fServerIP;
	parms.fServerPort = fServerPort;
	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.ChannelNum = ChannelNum;
	parms.ChannelNickName = ChannelNickName;
	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckFriendPosition, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClan::UpdateRecv_ClanInfo ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateRecv_ClanInfo = 0;
	UBTPageClan_execUpdateRecv_ClanInfo_Parms parms;

	if ( !pUpdateRecv_ClanInfo )
		pUpdateRecv_ClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.UpdateRecv_ClanInfo" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateRecv_ClanInfo, &parms, NULL );

}*/

/*bool UBTPageClan::rfAckNotifyUpdateCharInfo_LevelMark ( struct FString CharName, int LevelMarkID )
{
	static UFunction* prfAckNotifyUpdateCharInfo_LevelMark = 0;
	UBTPageClan_execrfAckNotifyUpdateCharInfo_LevelMark_Parms parms;

	if ( !prfAckNotifyUpdateCharInfo_LevelMark )
		prfAckNotifyUpdateCharInfo_LevelMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckNotifyUpdateCharInfo_LevelMark" );

	parms.CharName = CharName;
	parms.LevelMarkID = LevelMarkID;
	this->ProcessEvent ( prfAckNotifyUpdateCharInfo_LevelMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckChatWispher ( int Result, struct FString ErrMsg, struct FString ToCharName )
{
	static UFunction* prfAckChatWispher = 0;
	UBTPageClan_execrfAckChatWispher_Parms parms;

	if ( !prfAckChatWispher )
		prfAckChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckChatWispher" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ToCharName = ToCharName;
	this->ProcessEvent ( prfAckChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTPageClan_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTPageClan_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckAdjustClanMemberGrade ( int Result, struct FString ErrMsg, struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckAdjustClanMemberGrade = 0;
	UBTPageClan_execrfAckAdjustClanMemberGrade_Parms parms;

	if ( !prfAckAdjustClanMemberGrade )
		prfAckAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckAdjustClanMemberGrade" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTPageClan_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::BTWindowUserDetailInfoHK_OnClanInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowUserDetailInfoHK_OnClanInfo = 0;
	UBTPageClan_execBTWindowUserDetailInfoHK_OnClanInfo_Parms parms;

	if ( !pBTWindowUserDetailInfoHK_OnClanInfo )
		pBTWindowUserDetailInfoHK_OnClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BTWindowUserDetailInfoHK_OnClanInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowUserDetailInfoHK_OnClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageClan_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTPageClan_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanPersonelIntro ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanPersonelIntro = 0;
	UBTPageClan_execrfAckClanPersonelIntro_Parms parms;

	if ( !prfAckClanPersonelIntro )
		prfAckClanPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanChangeInfo ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanChangeInfo = 0;
	UBTPageClan_execrfAckClanChangeInfo_Parms parms;

	if ( !prfAckClanChangeInfo )
		prfAckClanChangeInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanChangeInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanChangeInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanSecession ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanSecession = 0;
	UBTPageClan_execrfAckClanSecession_Parms parms;

	if ( !prfAckClanSecession )
		prfAckClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanSecession" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanClose ( int Result, struct FString ErrMsg, struct FString ClanName )
{
	static UFunction* prfAckClanClose = 0;
	UBTPageClan_execrfAckClanClose_Parms parms;

	if ( !prfAckClanClose )
		prfAckClanClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanClose" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	this->ProcessEvent ( prfAckClanClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanMatchResultHistory ( class TArray< struct FBtrDouble > MatchDate, class TArray< unsigned char > IsWin, class TArray< struct FString > EnemyClanname )
{
	static UFunction* prfAckClanMatchResultHistory = 0;
	UBTPageClan_execrfAckClanMatchResultHistory_Parms parms;

	if ( !prfAckClanMatchResultHistory )
		prfAckClanMatchResultHistory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanMatchResultHistory" );

	parms.MatchDate = MatchDate;
	parms.IsWin = IsWin;
	parms.EnemyClanname = EnemyClanname;
	this->ProcessEvent ( prfAckClanMatchResultHistory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanNews ( class TArray< struct FString > IssueDate, class TArray< unsigned char > IssueType, class TArray< struct FString > IssuedClanMember )
{
	static UFunction* prfAckClanNews = 0;
	UBTPageClan_execrfAckClanNews_Parms parms;

	if ( !prfAckClanNews )
		prfAckClanNews = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanNews" );

	parms.IssueDate = IssueDate;
	parms.IssueType = IssueType;
	parms.IssuedClanMember = IssuedClanMember;
	this->ProcessEvent ( prfAckClanNews, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanUserListEnd (  )
{
	static UFunction* prfAckClanUserListEnd = 0;
	UBTPageClan_execrfAckClanUserListEnd_Parms parms;

	if ( !prfAckClanUserListEnd )
		prfAckClanUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanUserListEnd" );

	this->ProcessEvent ( prfAckClanUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanUserList ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< int > ClanWinCnt, class TArray< int > ClanLoseCnt, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > DudeId )
{
	static UFunction* prfAckClanUserList = 0;
	UBTPageClan_execrfAckClanUserList_Parms parms;

	if ( !prfAckClanUserList )
		prfAckClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWinCnt = ClanWinCnt;
	parms.ClanLoseCnt = ClanLoseCnt;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.DudeId = DudeId;
	this->ProcessEvent ( prfAckClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::rfAckClanUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanUserListStart = 0;
	UBTPageClan_execrfAckClanUserListStart_Parms parms;

	if ( !prfAckClanUserListStart )
		prfAckClanUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.rfAckClanUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClan::TeamChatLog ( struct FString cL )
{
	static UFunction* pTeamChatLog = 0;
	UBTPageClan_execTeamChatLog_Parms parms;

	if ( !pTeamChatLog )
		pTeamChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.TeamChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog, &parms, NULL );

}*/

/*void UBTPageClan::BroadCastItemChatLog ( struct FString cL )
{
	static UFunction* pBroadCastItemChatLog = 0;
	UBTPageClan_execBroadCastItemChatLog_Parms parms;

	if ( !pBroadCastItemChatLog )
		pBroadCastItemChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BroadCastItemChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pBroadCastItemChatLog, &parms, NULL );

}*/

/*void UBTPageClan::SystemChatLog ( struct FString cL )
{
	static UFunction* pSystemChatLog = 0;
	UBTPageClan_execSystemChatLog_Parms parms;

	if ( !pSystemChatLog )
		pSystemChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.SystemChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog, &parms, NULL );

}*/

/*void UBTPageClan::SelfChatLog ( struct FString cL )
{
	static UFunction* pSelfChatLog = 0;
	UBTPageClan_execSelfChatLog_Parms parms;

	if ( !pSelfChatLog )
		pSelfChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.SelfChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog, &parms, NULL );

}*/

/*void UBTPageClan::WhisperChatLog ( struct FString cL )
{
	static UFunction* pWhisperChatLog = 0;
	UBTPageClan_execWhisperChatLog_Parms parms;

	if ( !pWhisperChatLog )
		pWhisperChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.WhisperChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog, &parms, NULL );

}*/

/*void UBTPageClan::ClanChatLog ( struct FString cL )
{
	static UFunction* pClanChatLog = 0;
	UBTPageClan_execClanChatLog_Parms parms;

	if ( !pClanChatLog )
		pClanChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.ClanChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog, &parms, NULL );

}*/

/*void UBTPageClan::NormalChatLog ( struct FString cL )
{
	static UFunction* pNormalChatLog = 0;
	UBTPageClan_execNormalChatLog_Parms parms;

	if ( !pNormalChatLog )
		pNormalChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.NormalChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog, &parms, NULL );

}*/

/*void UBTPageClan::ClearChatLog (  )
{
	static UFunction* pClearChatLog = 0;
	UBTPageClan_execClearChatLog_Parms parms;

	if ( !pClearChatLog )
		pClearChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.ClearChatLog" );

	this->ProcessEvent ( pClearChatLog, &parms, NULL );

}*/

/*class UBTTcpLink_Channel* UBTPageClan::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageClan_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTPageClan_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::internalKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pinternalKeyEvent = 0;
	UBTPageClan_execinternalKeyEvent_Parms parms;

	if ( !pinternalKeyEvent )
		pinternalKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.internalKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pinternalKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageClan::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageClan_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*bool UBTPageClan::CheckInviteUser ( int CurPos, int CurState, struct FString szNickName )
{
	static UFunction* pCheckInviteUser = 0;
	UBTPageClan_execCheckInviteUser_Parms parms;

	if ( !pCheckInviteUser )
		pCheckInviteUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.CheckInviteUser" );

	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.szNickName = szNickName;
	this->ProcessEvent ( pCheckInviteUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClan::ContextMenu_OnSelected ( int ContextMenuIndex )
{
	static UFunction* pContextMenu_OnSelected = 0;
	UBTPageClan_execContextMenu_OnSelected_Parms parms;

	if ( !pContextMenu_OnSelected )
		pContextMenu_OnSelected = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.ContextMenu_OnSelected" );

	parms.ContextMenuIndex = ContextMenuIndex;
	this->ProcessEvent ( pContextMenu_OnSelected, &parms, NULL );

}*/

/*bool UBTPageClan::ContextMenu_OnClose ( class UGUIContextMenu* Sender )
{
	static UFunction* pContextMenu_OnClose = 0;
	UBTPageClan_execContextMenu_OnClose_Parms parms;

	if ( !pContextMenu_OnClose )
		pContextMenu_OnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.ContextMenu_OnClose" );

	parms.Sender = Sender;
	this->ProcessEvent ( pContextMenu_OnClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClan::OnPopupCheck (  )
{
	static UFunction* pOnPopupCheck = 0;
	UBTPageClan_execOnPopupCheck_Parms parms;

	if ( !pOnPopupCheck )
		pOnPopupCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.OnPopupCheck" );

	this->ProcessEvent ( pOnPopupCheck, &parms, NULL );

}*/

/*bool UBTPageClan::ContextMenu_OnOpen ( class UGUIContextMenu* Sender )
{
	static UFunction* pContextMenu_OnOpen = 0;
	UBTPageClan_execContextMenu_OnOpen_Parms parms;

	if ( !pContextMenu_OnOpen )
		pContextMenu_OnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.ContextMenu_OnOpen" );

	parms.Sender = Sender;
	this->ProcessEvent ( pContextMenu_OnOpen, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClan::RefreshPage (  )
{
	static UFunction* pRefreshPage = 0;
	UBTPageClan_execRefreshPage_Parms parms;

	if ( !pRefreshPage )
		pRefreshPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.RefreshPage" );

	this->ProcessEvent ( pRefreshPage, &parms, NULL );

}*/

/*void UBTPageClan::UnInitializeDelegate (  )
{
	static UFunction* pUnInitializeDelegate = 0;
	UBTPageClan_execUnInitializeDelegate_Parms parms;

	if ( !pUnInitializeDelegate )
		pUnInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.UnInitializeDelegate" );

	this->ProcessEvent ( pUnInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageClan::InitializeDelegate (  )
{
	static UFunction* pInitializeDelegate = 0;
	UBTPageClan_execInitializeDelegate_Parms parms;

	if ( !pInitializeDelegate )
		pInitializeDelegate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.InitializeDelegate" );

	this->ProcessEvent ( pInitializeDelegate, &parms, NULL );

}*/

/*void UBTPageClan::UpdateClanInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateClanInfo = 0;
	UBTPageClan_execUpdateClanInfo_Parms parms;

	if ( !pUpdateClanInfo )
		pUpdateClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.UpdateClanInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateClanInfo, &parms, NULL );

}*/

/*void UBTPageClan::OnCompleteOpened (  )
{
	static UFunction* pOnCompleteOpened = 0;
	UBTPageClan_execOnCompleteOpened_Parms parms;

	if ( !pOnCompleteOpened )
		pOnCompleteOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.OnCompleteOpened" );

	this->ProcessEvent ( pOnCompleteOpened, &parms, NULL );

}*/

/*void UBTPageClan::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageClan_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageClan::InternalOnReOpen (  )
{
	static UFunction* pInternalOnReOpen = 0;
	UBTPageClan_execInternalOnReOpen_Parms parms;

	if ( !pInternalOnReOpen )
		pInternalOnReOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.InternalOnReOpen" );

	this->ProcessEvent ( pInternalOnReOpen, &parms, NULL );

}*/

/*void UBTPageClan::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageClan_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UBTPageClan::BTWindowAdjustClanMasterOnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowAdjustClanMasterOnOK = 0;
	UBTPageClan_execBTWindowAdjustClanMasterOnOK_Parms parms;

	if ( !pBTWindowAdjustClanMasterOnOK )
		pBTWindowAdjustClanMasterOnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BTWindowAdjustClanMasterOnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowAdjustClanMasterOnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::BTWindowBackToLastPage_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowBackToLastPage_OnOK = 0;
	UBTPageClan_execBTWindowBackToLastPage_OnOK_Parms parms;

	if ( !pBTWindowBackToLastPage_OnOK )
		pBTWindowBackToLastPage_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BTWindowBackToLastPage_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowBackToLastPage_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::BTWindowClanClose_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowClanClose_OnOK = 0;
	UBTPageClan_execBTWindowClanClose_OnOK_Parms parms;

	if ( !pBTWindowClanClose_OnOK )
		pBTWindowClanClose_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BTWindowClanClose_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowClanClose_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::BTWindowClanSecession_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowClanSecession_OnOK = 0;
	UBTPageClan_execBTWindowClanSecession_OnOK_Parms parms;

	if ( !pBTWindowClanSecession_OnOK )
		pBTWindowClanSecession_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BTWindowClanSecession_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowClanSecession_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::BTWindowClanInfoChangeHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowClanInfoChangeHK_OnOK = 0;
	UBTPageClan_execBTWindowClanInfoChangeHK_OnOK_Parms parms;

	if ( !pBTWindowClanInfoChangeHK_OnOK )
		pBTWindowClanInfoChangeHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BTWindowClanInfoChangeHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowClanInfoChangeHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::BTWindowSelfIntroductionChangeHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowSelfIntroductionChangeHK_OnOK = 0;
	UBTPageClan_execBTWindowSelfIntroductionChangeHK_OnOK_Parms parms;

	if ( !pBTWindowSelfIntroductionChangeHK_OnOK )
		pBTWindowSelfIntroductionChangeHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BTWindowSelfIntroductionChangeHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowSelfIntroductionChangeHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::BTWindowFindClanHK_OnInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnInfo = 0;
	UBTPageClan_execBTWindowFindClanHK_OnInfo_Parms parms;

	if ( !pBTWindowFindClanHK_OnInfo )
		pBTWindowFindClanHK_OnInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BTWindowFindClanHK_OnInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::BTWindowFindClanHK_OnRequestJoin ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnRequestJoin = 0;
	UBTPageClan_execBTWindowFindClanHK_OnRequestJoin_Parms parms;

	if ( !pBTWindowFindClanHK_OnRequestJoin )
		pBTWindowFindClanHK_OnRequestJoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.BTWindowFindClanHK_OnRequestJoin" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnRequestJoin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::ListBottomButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pListBottomButton_OnClick = 0;
	UBTPageClan_execListBottomButton_OnClick_Parms parms;

	if ( !pListBottomButton_OnClick )
		pListBottomButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.ListBottomButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pListBottomButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageClan_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageCredit::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageCredit_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCredit.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageCredit::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageCredit_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCredit.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*bool UBTPageCredit::Internal_KeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pInternal_KeyEvent = 0;
	UBTPageCredit_execInternal_KeyEvent_Parms parms;

	if ( !pInternal_KeyEvent )
		pInternal_KeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCredit.Internal_KeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternal_KeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageCredit::LabelCredit_OnEndCredit (  )
{
	static UFunction* pLabelCredit_OnEndCredit = 0;
	UBTPageCredit_execLabelCredit_OnEndCredit_Parms parms;

	if ( !pLabelCredit_OnEndCredit )
		pLabelCredit_OnEndCredit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCredit.LabelCredit_OnEndCredit" );

	this->ProcessEvent ( pLabelCredit_OnEndCredit, &parms, NULL );

}*/

/*void UBTPageCredit::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageCredit_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCredit.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UBTPageClanWar::rfNotifyClanLevelup ( struct FString ClanName, int Levelup )
{
	static UFunction* prfNotifyClanLevelup = 0;
	UBTPageClanWar_execrfNotifyClanLevelup_Parms parms;

	if ( !prfNotifyClanLevelup )
		prfNotifyClanLevelup = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfNotifyClanLevelup" );

	parms.ClanName = ClanName;
	parms.Levelup = Levelup;
	this->ProcessEvent ( prfNotifyClanLevelup, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_NotifiyStartCombat ( class TArray< int > MapNumArray, int VersusMode )
{
	static UFunction* prfAckClanMatch_NotifiyStartCombat = 0;
	UBTPageClanWar_execrfAckClanMatch_NotifiyStartCombat_Parms parms;

	if ( !prfAckClanMatch_NotifiyStartCombat )
		prfAckClanMatch_NotifiyStartCombat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_NotifiyStartCombat" );

	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	this->ProcessEvent ( prfAckClanMatch_NotifiyStartCombat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_StartCombat ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_StartCombat = 0;
	UBTPageClanWar_execrfAckClanMatch_StartCombat_Parms parms;

	if ( !prfAckClanMatch_StartCombat )
		prfAckClanMatch_StartCombat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_StartCombat" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_StartCombat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfReqClanMatch_FoundMatch ( int ChannelID, int RoomNumber )
{
	static UFunction* prfReqClanMatch_FoundMatch = 0;
	UBTPageClanWar_execrfReqClanMatch_FoundMatch_Parms parms;

	if ( !prfReqClanMatch_FoundMatch )
		prfReqClanMatch_FoundMatch = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfReqClanMatch_FoundMatch" );

	parms.ChannelID = ChannelID;
	parms.RoomNumber = RoomNumber;
	this->ProcessEvent ( prfReqClanMatch_FoundMatch, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_StopSearching (  )
{
	static UFunction* prfAckClanMatch_StopSearching = 0;
	UBTPageClanWar_execrfAckClanMatch_StopSearching_Parms parms;

	if ( !prfAckClanMatch_StopSearching )
		prfAckClanMatch_StopSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_StopSearching" );

	this->ProcessEvent ( prfAckClanMatch_StopSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_NotifyStartSearching ( int ShouldWaitMore )
{
	static UFunction* prfAckClanMatch_NotifyStartSearching = 0;
	UBTPageClanWar_execrfAckClanMatch_NotifyStartSearching_Parms parms;

	if ( !prfAckClanMatch_NotifyStartSearching )
		prfAckClanMatch_NotifyStartSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_NotifyStartSearching" );

	parms.ShouldWaitMore = ShouldWaitMore;
	this->ProcessEvent ( prfAckClanMatch_NotifyStartSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_StartSearching ( int Result, struct FString ErrMsg, int ShouldWaitMore )
{
	static UFunction* prfAckClanMatch_StartSearching = 0;
	UBTPageClanWar_execrfAckClanMatch_StartSearching_Parms parms;

	if ( !prfAckClanMatch_StartSearching )
		prfAckClanMatch_StartSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_StartSearching" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ShouldWaitMore = ShouldWaitMore;
	this->ProcessEvent ( prfAckClanMatch_StartSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClanWar::BTWindowDefineARHK_OnTimeTick ( float LeftTime )
{
	static UFunction* pBTWindowDefineARHK_OnTimeTick = 0;
	UBTPageClanWar_execBTWindowDefineARHK_OnTimeTick_Parms parms;

	if ( !pBTWindowDefineARHK_OnTimeTick )
		pBTWindowDefineARHK_OnTimeTick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowDefineARHK_OnTimeTick" );

	parms.LeftTime = LeftTime;
	this->ProcessEvent ( pBTWindowDefineARHK_OnTimeTick, &parms, NULL );

}*/

/*void UBTPageClanWar::BTWindowDefineARHK_ButtonOK_OnTimeOut ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_ButtonOK_OnTimeOut = 0;
	UBTPageClanWar_execBTWindowDefineARHK_ButtonOK_OnTimeOut_Parms parms;

	if ( !pBTWindowDefineARHK_ButtonOK_OnTimeOut )
		pBTWindowDefineARHK_ButtonOK_OnTimeOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowDefineARHK_ButtonOK_OnTimeOut" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_ButtonOK_OnTimeOut, &parms, NULL );

}*/

/*bool UBTPageClanWar::BTWindowDefineARHK_ClanMatch_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_ClanMatch_OnOK = 0;
	UBTPageClanWar_execBTWindowDefineARHK_ClanMatch_OnOK_Parms parms;

	if ( !pBTWindowDefineARHK_ClanMatch_OnOK )
		pBTWindowDefineARHK_ClanMatch_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowDefineARHK_ClanMatch_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_ClanMatch_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTPageClanWar_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTPageClanWar_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckAdjustClanMemberGrade ( int Result, struct FString ErrMsg, struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckAdjustClanMemberGrade = 0;
	UBTPageClanWar_execrfAckAdjustClanMemberGrade_Parms parms;

	if ( !prfAckAdjustClanMemberGrade )
		prfAckAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckAdjustClanMemberGrade" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfReqRecvDeleteFriend ( int Result, struct FString FromCharName )
{
	static UFunction* prfReqRecvDeleteFriend = 0;
	UBTPageClanWar_execrfReqRecvDeleteFriend_Parms parms;

	if ( !prfReqRecvDeleteFriend )
		prfReqRecvDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfReqRecvDeleteFriend" );

	parms.Result = Result;
	parms.FromCharName = FromCharName;
	this->ProcessEvent ( prfReqRecvDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckDeleteFriend ( int Result, class TArray< struct FString > FailedCharname )
{
	static UFunction* prfAckDeleteFriend = 0;
	UBTPageClanWar_execrfAckDeleteFriend_Parms parms;

	if ( !prfAckDeleteFriend )
		prfAckDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckDeleteFriend" );

	parms.Result = Result;
	parms.FailedCharname = FailedCharname;
	this->ProcessEvent ( prfAckDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckRecvJoinClanResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvJoinClanResult = 0;
	UBTPageClanWar_execrfAckRecvJoinClanResult_Parms parms;

	if ( !prfAckRecvJoinClanResult )
		prfAckRecvJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckRecvJoinClanResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckJoinClanResult ( struct FString ClanName, unsigned char Permit, struct FString PermitCharName )
{
	static UFunction* prfAckJoinClanResult = 0;
	UBTPageClanWar_execrfAckJoinClanResult_Parms parms;

	if ( !prfAckJoinClanResult )
		prfAckJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckJoinClanResult" );

	parms.ClanName = ClanName;
	parms.Permit = Permit;
	parms.PermitCharName = PermitCharName;
	this->ProcessEvent ( prfAckJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::RefreshPage_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pRefreshPage_OnOK = 0;
	UBTPageClanWar_execRefreshPage_OnOK_Parms parms;

	if ( !pRefreshPage_OnOK )
		pRefreshPage_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.RefreshPage_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pRefreshPage_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowRequestApprovalClanHK_OnSuspend ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnSuspend = 0;
	UBTPageClanWar_execBTWindowRequestApprovalClanHK_OnSuspend_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnSuspend )
		pBTWindowRequestApprovalClanHK_OnSuspend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowRequestApprovalClanHK_OnSuspend" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnSuspend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowRequestApprovalClanHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnCancel = 0;
	UBTPageClanWar_execBTWindowRequestApprovalClanHK_OnCancel_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnCancel )
		pBTWindowRequestApprovalClanHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowRequestApprovalClanHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowRequestApprovalClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRequestApprovalClanHK_OnOK = 0;
	UBTPageClanWar_execBTWindowRequestApprovalClanHK_OnOK_Parms parms;

	if ( !pBTWindowRequestApprovalClanHK_OnOK )
		pBTWindowRequestApprovalClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowRequestApprovalClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRequestApprovalClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfReqRecvJoinClan ( int UserIdx, struct FString CharName, struct FString Message )
{
	static UFunction* prfReqRecvJoinClan = 0;
	UBTPageClanWar_execrfReqRecvJoinClan_Parms parms;

	if ( !prfReqRecvJoinClan )
		prfReqRecvJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfReqRecvJoinClan" );

	parms.UserIdx = UserIdx;
	parms.CharName = CharName;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckNotifyClanSecession ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyClanSecession = 0;
	UBTPageClanWar_execrfAckNotifyClanSecession_Parms parms;

	if ( !prfAckNotifyClanSecession )
		prfAckNotifyClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckNotifyClanSecession" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckNotifyNewClanMember ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyNewClanMember = 0;
	UBTPageClanWar_execrfAckNotifyNewClanMember_Parms parms;

	if ( !prfAckNotifyNewClanMember )
		prfAckNotifyNewClanMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckNotifyNewClanMember" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyNewClanMember, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTPageClanWar_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckInviteClanResult ( struct FString CharName, unsigned char Permit, struct FString ClanNm )
{
	static UFunction* prfAckInviteClanResult = 0;
	UBTPageClanWar_execrfAckInviteClanResult_Parms parms;

	if ( !prfAckInviteClanResult )
		prfAckInviteClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckInviteClanResult" );

	parms.CharName = CharName;
	parms.Permit = Permit;
	parms.ClanNm = ClanNm;
	this->ProcessEvent ( prfAckInviteClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTPageClanWar_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckJoinClan ( int Result, struct FString ErrMsg, struct FString SpecificCharName, struct FString RealRecvCharName, unsigned char RealRecvCharClanGrade )
{
	static UFunction* prfAckJoinClan = 0;
	UBTPageClanWar_execrfAckJoinClan_Parms parms;

	if ( !prfAckJoinClan )
		prfAckJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckJoinClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.SpecificCharName = SpecificCharName;
	parms.RealRecvCharName = RealRecvCharName;
	parms.RealRecvCharClanGrade = RealRecvCharClanGrade;
	this->ProcessEvent ( prfAckJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckInviteClan ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckInviteClan = 0;
	UBTPageClanWar_execrfAckInviteClan_Parms parms;

	if ( !prfAckInviteClan )
		prfAckInviteClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckInviteClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckInviteClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowUserDetailInfoHK_OnClanInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowUserDetailInfoHK_OnClanInfo = 0;
	UBTPageClanWar_execBTWindowUserDetailInfoHK_OnClanInfo_Parms parms;

	if ( !pBTWindowUserDetailInfoHK_OnClanInfo )
		pBTWindowUserDetailInfoHK_OnClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowUserDetailInfoHK_OnClanInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowUserDetailInfoHK_OnClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfReqClanCharPersonelIntro ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfReqClanCharPersonelIntro = 0;
	UBTPageClanWar_execrfReqClanCharPersonelIntro_Parms parms;

	if ( !prfReqClanCharPersonelIntro )
		prfReqClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfReqClanCharPersonelIntro" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfReqClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTPageClanWar_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageClanWar_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::MoveToClanPage_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pMoveToClanPage_OnOK = 0;
	UBTPageClanWar_execMoveToClanPage_OnOK_Parms parms;

	if ( !pMoveToClanPage_OnOK )
		pMoveToClanPage_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.MoveToClanPage_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pMoveToClanPage_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckCreateClan ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckCreateClan = 0;
	UBTPageClanWar_execrfAckCreateClan_Parms parms;

	if ( !prfAckCreateClan )
		prfAckCreateClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckCreateClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckCreateClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckDupCheckClanName ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckDupCheckClanName = 0;
	UBTPageClanWar_execrfAckDupCheckClanName_Parms parms;

	if ( !prfAckDupCheckClanName )
		prfAckDupCheckClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckDupCheckClanName" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckDupCheckClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::WindowRequestFriend_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pWindowRequestFriend_OnCancel = 0;
	UBTPageClanWar_execWindowRequestFriend_OnCancel_Parms parms;

	if ( !pWindowRequestFriend_OnCancel )
		pWindowRequestFriend_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.WindowRequestFriend_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWindowRequestFriend_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::WindowRequestFriend_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pWindowRequestFriend_OnOK = 0;
	UBTPageClanWar_execWindowRequestFriend_OnOK_Parms parms;

	if ( !pWindowRequestFriend_OnOK )
		pWindowRequestFriend_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.WindowRequestFriend_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWindowRequestFriend_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::WindowInviteFriend_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pWindowInviteFriend_OnOK = 0;
	UBTPageClanWar_execWindowInviteFriend_OnOK_Parms parms;

	if ( !pWindowInviteFriend_OnOK )
		pWindowInviteFriend_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.WindowInviteFriend_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pWindowInviteFriend_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfReqCompleteFriendInvite ( struct FString CharnameToBeInvited, unsigned char IsPermit )
{
	static UFunction* prfReqCompleteFriendInvite = 0;
	UBTPageClanWar_execrfReqCompleteFriendInvite_Parms parms;

	if ( !prfReqCompleteFriendInvite )
		prfReqCompleteFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfReqCompleteFriendInvite" );

	parms.CharnameToBeInvited = CharnameToBeInvited;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( prfReqCompleteFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckConfirmFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmFriendInvite = 0;
	UBTPageClanWar_execrfAckConfirmFriendInvite_Parms parms;

	if ( !prfAckConfirmFriendInvite )
		prfAckConfirmFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckConfirmFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfReqRecvFriendInvite ( int ReqUserID, struct FString ReqCharname, struct FString InviteMsg )
{
	static UFunction* prfReqRecvFriendInvite = 0;
	UBTPageClanWar_execrfReqRecvFriendInvite_Parms parms;

	if ( !prfReqRecvFriendInvite )
		prfReqRecvFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfReqRecvFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqCharname = ReqCharname;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckSendFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSendFriendInvite = 0;
	UBTPageClanWar_execrfAckSendFriendInvite_Parms parms;

	if ( !prfAckSendFriendInvite )
		prfAckSendFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckSendFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSendFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckChannelUserList ( int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > UserID, class TArray< int > UserLevels, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, int Result, struct FString ErrMsg, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserList = 0;
	UBTPageClanWar_execrfAckChannelUserList_Parms parms;

	if ( !prfAckChannelUserList )
		prfAckChannelUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckChannelUserList" );

	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.UserLevels = UserLevels;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanUserListEnd (  )
{
	static UFunction* prfAckClanUserListEnd = 0;
	UBTPageClanWar_execrfAckClanUserListEnd_Parms parms;

	if ( !prfAckClanUserListEnd )
		prfAckClanUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanUserListEnd" );

	this->ProcessEvent ( prfAckClanUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanUserList ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< int > ClanWinCnt, class TArray< int > ClanLoseCnt, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > DudeId )
{
	static UFunction* prfAckClanUserList = 0;
	UBTPageClanWar_execrfAckClanUserList_Parms parms;

	if ( !prfAckClanUserList )
		prfAckClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWinCnt = ClanWinCnt;
	parms.ClanLoseCnt = ClanLoseCnt;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.DudeId = DudeId;
	this->ProcessEvent ( prfAckClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanUserListStart = 0;
	UBTPageClanWar_execrfAckClanUserListStart_Parms parms;

	if ( !prfAckClanUserListStart )
		prfAckClanUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckFriendListEnd (  )
{
	static UFunction* prfAckFriendListEnd = 0;
	UBTPageClanWar_execrfAckFriendListEnd_Parms parms;

	if ( !prfAckFriendListEnd )
		prfAckFriendListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckFriendListEnd" );

	this->ProcessEvent ( prfAckFriendListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckFriendList ( class TArray< struct FString > FriendName, class TArray< unsigned char > IsLogOn, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > LevelMarkID, class TArray< int > ClanLevel, class TArray< int > Level, class TArray< unsigned char > IsLookForClan )
{
	static UFunction* prfAckFriendList = 0;
	UBTPageClanWar_execrfAckFriendList_Parms parms;

	if ( !prfAckFriendList )
		prfAckFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckFriendList" );

	parms.FriendName = FriendName;
	parms.IsLogOn = IsLogOn;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.LevelMarkID = LevelMarkID;
	parms.ClanLevel = ClanLevel;
	parms.Level = Level;
	parms.IsLookForClan = IsLookForClan;
	this->ProcessEvent ( prfAckFriendList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckFriendListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckFriendListStart = 0;
	UBTPageClanWar_execrfAckFriendListStart_Parms parms;

	if ( !prfAckFriendListStart )
		prfAckFriendListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckFriendListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckFriendListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_SetWaitRoomPublic ( int Result, struct FString ErrMsg, unsigned char Set )
{
	static UFunction* prfAckClanMatch_SetWaitRoomPublic = 0;
	UBTPageClanWar_execrfAckClanMatch_SetWaitRoomPublic_Parms parms;

	if ( !prfAckClanMatch_SetWaitRoomPublic )
		prfAckClanMatch_SetWaitRoomPublic = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_SetWaitRoomPublic" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Set = Set;
	this->ProcessEvent ( prfAckClanMatch_SetWaitRoomPublic, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_GetClanWaittingRoomInfo ( int WaitRoomIndex, int Result, struct FString ErrMsg, class TArray< int > MapNumArray, int VersusMode, struct FString WaitRoomName )
{
	static UFunction* prfAckClanMatch_GetClanWaittingRoomInfo = 0;
	UBTPageClanWar_execrfAckClanMatch_GetClanWaittingRoomInfo_Parms parms;

	if ( !prfAckClanMatch_GetClanWaittingRoomInfo )
		prfAckClanMatch_GetClanWaittingRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_GetClanWaittingRoomInfo" );

	parms.WaitRoomIndex = WaitRoomIndex;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	parms.WaitRoomName = WaitRoomName;
	this->ProcessEvent ( prfAckClanMatch_GetClanWaittingRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClanWar::SelectMapIndex ( int MPanelIndex, int MapID )
{
	static UFunction* pSelectMapIndex = 0;
	UBTPageClanWar_execSelectMapIndex_Parms parms;

	if ( !pSelectMapIndex )
		pSelectMapIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.SelectMapIndex" );

	parms.MPanelIndex = MPanelIndex;
	parms.MapID = MapID;
	this->ProcessEvent ( pSelectMapIndex, &parms, NULL );

}*/

/*bool UBTPageClanWar::rfAckClanMatch_ChangeRoomSetting ( int WaitRoomIndex, int Result, struct FString ErrMsg, class TArray< int > MapNumArray, int VersusMode, unsigned char IsPublic )
{
	static UFunction* prfAckClanMatch_ChangeRoomSetting = 0;
	UBTPageClanWar_execrfAckClanMatch_ChangeRoomSetting_Parms parms;

	if ( !prfAckClanMatch_ChangeRoomSetting )
		prfAckClanMatch_ChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_ChangeRoomSetting" );

	parms.WaitRoomIndex = WaitRoomIndex;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	parms.IsPublic = IsPublic;
	this->ProcessEvent ( prfAckClanMatch_ChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_ChangeLeader ( int Result, struct FString ErrMsg, int NewLeader, struct FString NewLeaderName )
{
	static UFunction* prfAckClanMatch_ChangeLeader = 0;
	UBTPageClanWar_execrfAckClanMatch_ChangeLeader_Parms parms;

	if ( !prfAckClanMatch_ChangeLeader )
		prfAckClanMatch_ChangeLeader = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_ChangeLeader" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NewLeader = NewLeader;
	parms.NewLeaderName = NewLeaderName;
	this->ProcessEvent ( prfAckClanMatch_ChangeLeader, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_Leave ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Leave = 0;
	UBTPageClanWar_execrfAckClanMatch_Leave_Parms parms;

	if ( !prfAckClanMatch_Leave )
		prfAckClanMatch_Leave = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_Leave" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Leave, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_LeaveNotify ( struct FString CharName )
{
	static UFunction* prfAckClanMatch_LeaveNotify = 0;
	UBTPageClanWar_execrfAckClanMatch_LeaveNotify_Parms parms;

	if ( !prfAckClanMatch_LeaveNotify )
		prfAckClanMatch_LeaveNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_LeaveNotify" );

	parms.CharName = CharName;
	this->ProcessEvent ( prfAckClanMatch_LeaveNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_JoinNotify ( unsigned char IsLeader, int ClanMarkPA, int ClanMarkBG, int ClanMarkBL, int Level, struct FString CharName, int ClanGrade, int ClanWin, int ClanLose, struct FString ClanName, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckClanMatch_JoinNotify = 0;
	UBTPageClanWar_execrfAckClanMatch_JoinNotify_Parms parms;

	if ( !prfAckClanMatch_JoinNotify )
		prfAckClanMatch_JoinNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_JoinNotify" );

	parms.IsLeader = IsLeader;
	parms.ClanMarkPA = ClanMarkPA;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanName = ClanName;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckClanMatch_JoinNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_Chat ( int Result, struct FString ErrMsg, struct FString Sender, struct FString Message )
{
	static UFunction* prfAckClanMatch_Chat = 0;
	UBTPageClanWar_execrfAckClanMatch_Chat_Parms parms;

	if ( !prfAckClanMatch_Chat )
		prfAckClanMatch_Chat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_Chat" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Sender = Sender;
	parms.Message = Message;
	this->ProcessEvent ( prfAckClanMatch_Chat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_Join ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Join = 0;
	UBTPageClanWar_execrfAckClanMatch_Join_Parms parms;

	if ( !prfAckClanMatch_Join )
		prfAckClanMatch_Join = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_Join" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Join, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_GetReady ( int Result, struct FString ErrMsg, int RoomIndex )
{
	static UFunction* prfAckClanMatch_GetReady = 0;
	UBTPageClanWar_execrfAckClanMatch_GetReady_Parms parms;

	if ( !prfAckClanMatch_GetReady )
		prfAckClanMatch_GetReady = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_GetReady" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomIndex = RoomIndex;
	this->ProcessEvent ( prfAckClanMatch_GetReady, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClanWar::ChangeReadyRoomLeader ( bool bLeader )
{
	static UFunction* pChangeReadyRoomLeader = 0;
	UBTPageClanWar_execChangeReadyRoomLeader_Parms parms;

	if ( !pChangeReadyRoomLeader )
		pChangeReadyRoomLeader = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ChangeReadyRoomLeader" );

	parms.bLeader = bLeader;
	this->ProcessEvent ( pChangeReadyRoomLeader, &parms, NULL );

}*/

/*bool UBTPageClanWar::rfAckClanMatch_MemberList ( class TArray< unsigned char > IsLeader, class TArray< int > ClanMarkPA, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< struct FString > ClanName, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckClanMatch_MemberList = 0;
	UBTPageClanWar_execrfAckClanMatch_MemberList_Parms parms;

	if ( !prfAckClanMatch_MemberList )
		prfAckClanMatch_MemberList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_MemberList" );

	parms.IsLeader = IsLeader;
	parms.ClanMarkPA = ClanMarkPA;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanName = ClanName;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckClanMatch_MemberList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::rfAckClanMatch_WaittingTeamList ( int TtotlCount, class TArray< int > Grade, class TArray< int > Map, class TArray< int > Versus )
{
	static UFunction* prfAckClanMatch_WaittingTeamList = 0;
	UBTPageClanWar_execrfAckClanMatch_WaittingTeamList_Parms parms;

	if ( !prfAckClanMatch_WaittingTeamList )
		prfAckClanMatch_WaittingTeamList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.rfAckClanMatch_WaittingTeamList" );

	parms.TtotlCount = TtotlCount;
	parms.Grade = Grade;
	parms.Map = Map;
	parms.Versus = Versus;
	this->ProcessEvent ( prfAckClanMatch_WaittingTeamList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowJoinClan_OK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowJoinClan_OK = 0;
	UBTPageClanWar_execBTWindowJoinClan_OK_Parms parms;

	if ( !pBTWindowJoinClan_OK )
		pBTWindowJoinClan_OK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowJoinClan_OK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowJoinClan_OK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowInviteClan_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowInviteClan_OnOK = 0;
	UBTPageClanWar_execBTWindowInviteClan_OnOK_Parms parms;

	if ( !pBTWindowInviteClan_OnOK )
		pBTWindowInviteClan_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowInviteClan_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowInviteClan_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowCreateClanHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanHK_OnOK = 0;
	UBTPageClanWar_execBTWindowCreateClanHK_OnOK_Parms parms;

	if ( !pBTWindowCreateClanHK_OnOK )
		pBTWindowCreateClanHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowCreateClanHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowCreateClanNeedPointHK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowCreateClanNeedPointHK_OnClick = 0;
	UBTPageClanWar_execBTWindowCreateClanNeedPointHK_OnClick_Parms parms;

	if ( !pBTWindowCreateClanNeedPointHK_OnClick )
		pBTWindowCreateClanNeedPointHK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowCreateClanNeedPointHK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowCreateClanNeedPointHK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::ClanMenu_ButtonCreateClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonCreateClan_OnClick = 0;
	UBTPageClanWar_execClanMenu_ButtonCreateClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonCreateClan_OnClick )
		pClanMenu_ButtonCreateClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ClanMenu_ButtonCreateClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonCreateClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowFindClanHK_OnInfo ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnInfo = 0;
	UBTPageClanWar_execBTWindowFindClanHK_OnInfo_Parms parms;

	if ( !pBTWindowFindClanHK_OnInfo )
		pBTWindowFindClanHK_OnInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowFindClanHK_OnInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::BTWindowFindClanHK_OnRequestJoin ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowFindClanHK_OnRequestJoin = 0;
	UBTPageClanWar_execBTWindowFindClanHK_OnRequestJoin_Parms parms;

	if ( !pBTWindowFindClanHK_OnRequestJoin )
		pBTWindowFindClanHK_OnRequestJoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.BTWindowFindClanHK_OnRequestJoin" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowFindClanHK_OnRequestJoin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::ClanMenu_ButtonFindClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonFindClan_OnClick = 0;
	UBTPageClanWar_execClanMenu_ButtonFindClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonFindClan_OnClick )
		pClanMenu_ButtonFindClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ClanMenu_ButtonFindClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonFindClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::ClanMenu_ButtonLookingForClan_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pClanMenu_ButtonLookingForClan_OnClick = 0;
	UBTPageClanWar_execClanMenu_ButtonLookingForClan_OnClick_Parms parms;

	if ( !pClanMenu_ButtonLookingForClan_OnClick )
		pClanMenu_ButtonLookingForClan_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ClanMenu_ButtonLookingForClan_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pClanMenu_ButtonLookingForClan_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClanWar::OnPopupPCBang ( int ContextMenuIndex, class UBTACLMessengerPCBangHK* acl )
{
	static UFunction* pOnPopupPCBang = 0;
	UBTPageClanWar_execOnPopupPCBang_Parms parms;

	if ( !pOnPopupPCBang )
		pOnPopupPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupPCBang" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupPCBang, &parms, NULL );

}*/

/*void UBTPageClanWar::OnPopupPCBangCheck ( class UBTACLMessengerPCBangHK* acl, class UBTCMMessengerPCBangHK* cm )
{
	static UFunction* pOnPopupPCBangCheck = 0;
	UBTPageClanWar_execOnPopupPCBangCheck_Parms parms;

	if ( !pOnPopupPCBangCheck )
		pOnPopupPCBangCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupPCBangCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupPCBangCheck, &parms, NULL );

}*/

/*void UBTPageClanWar::OnPopupBan ( int ContextMenuIndex, class UBTACLMessengerBanHK* acl )
{
	static UFunction* pOnPopupBan = 0;
	UBTPageClanWar_execOnPopupBan_Parms parms;

	if ( !pOnPopupBan )
		pOnPopupBan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupBan" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupBan, &parms, NULL );

}*/

/*void UBTPageClanWar::OnPopupBanCheck ( class UBTACLMessengerBanHK* acl, class UBTCMMessengerBanHK* cm )
{
	static UFunction* pOnPopupBanCheck = 0;
	UBTPageClanWar_execOnPopupBanCheck_Parms parms;

	if ( !pOnPopupBanCheck )
		pOnPopupBanCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupBanCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupBanCheck, &parms, NULL );

}*/

/*void UBTPageClanWar::OnPopupClan ( int ContextMenuIndex, class UBTACLCWMessengerClanHK* acl )
{
	static UFunction* pOnPopupClan = 0;
	UBTPageClanWar_execOnPopupClan_Parms parms;

	if ( !pOnPopupClan )
		pOnPopupClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupClan" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupClan, &parms, NULL );

}*/

/*void UBTPageClanWar::OnPopupClanCheck ( class UBTACLCWMessengerClanHK* acl, class UBTCMMessengerClanHK* cm )
{
	static UFunction* pOnPopupClanCheck = 0;
	UBTPageClanWar_execOnPopupClanCheck_Parms parms;

	if ( !pOnPopupClanCheck )
		pOnPopupClanCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupClanCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupClanCheck, &parms, NULL );

}*/

/*void UBTPageClanWar::OnPopupFriend ( int ContextMenuIndex, class UBTACLCWMessengerFriendHK* acl )
{
	static UFunction* pOnPopupFriend = 0;
	UBTPageClanWar_execOnPopupFriend_Parms parms;

	if ( !pOnPopupFriend )
		pOnPopupFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupFriend" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupFriend, &parms, NULL );

}*/

/*void UBTPageClanWar::OnPopupFriendCheck ( class UBTACLCWMessengerFriendHK* acl, class UBTCMMessengerFriendHK* cm )
{
	static UFunction* pOnPopupFriendCheck = 0;
	UBTPageClanWar_execOnPopupFriendCheck_Parms parms;

	if ( !pOnPopupFriendCheck )
		pOnPopupFriendCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupFriendCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupFriendCheck, &parms, NULL );

}*/

/*void UBTPageClanWar::OnPopupChannel ( int ContextMenuIndex, class UBTACLCWMessengerChannelHK* acl )
{
	static UFunction* pOnPopupChannel = 0;
	UBTPageClanWar_execOnPopupChannel_Parms parms;

	if ( !pOnPopupChannel )
		pOnPopupChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupChannel" );

	parms.ContextMenuIndex = ContextMenuIndex;
	parms.acl = acl;
	this->ProcessEvent ( pOnPopupChannel, &parms, NULL );

}*/

/*void UBTPageClanWar::OnPopupChannelCheck ( class UBTACLCWMessengerChannelHK* acl, class UBTCMMessengerChannelHK* cm )
{
	static UFunction* pOnPopupChannelCheck = 0;
	UBTPageClanWar_execOnPopupChannelCheck_Parms parms;

	if ( !pOnPopupChannelCheck )
		pOnPopupChannelCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnPopupChannelCheck" );

	parms.acl = acl;
	parms.cm = cm;
	this->ProcessEvent ( pOnPopupChannelCheck, &parms, NULL );

}*/

/*void UBTPageClanWar::TeamChatLog ( struct FString cL )
{
	static UFunction* pTeamChatLog = 0;
	UBTPageClanWar_execTeamChatLog_Parms parms;

	if ( !pTeamChatLog )
		pTeamChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.TeamChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pTeamChatLog, &parms, NULL );

}*/

/*void UBTPageClanWar::SystemChatLog ( struct FString cL )
{
	static UFunction* pSystemChatLog = 0;
	UBTPageClanWar_execSystemChatLog_Parms parms;

	if ( !pSystemChatLog )
		pSystemChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.SystemChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSystemChatLog, &parms, NULL );

}*/

/*void UBTPageClanWar::SelfChatLog ( struct FString cL )
{
	static UFunction* pSelfChatLog = 0;
	UBTPageClanWar_execSelfChatLog_Parms parms;

	if ( !pSelfChatLog )
		pSelfChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.SelfChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pSelfChatLog, &parms, NULL );

}*/

/*void UBTPageClanWar::WhisperChatLog ( struct FString cL )
{
	static UFunction* pWhisperChatLog = 0;
	UBTPageClanWar_execWhisperChatLog_Parms parms;

	if ( !pWhisperChatLog )
		pWhisperChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.WhisperChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pWhisperChatLog, &parms, NULL );

}*/

/*void UBTPageClanWar::ClanChatLog ( struct FString cL )
{
	static UFunction* pClanChatLog = 0;
	UBTPageClanWar_execClanChatLog_Parms parms;

	if ( !pClanChatLog )
		pClanChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ClanChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pClanChatLog, &parms, NULL );

}*/

/*void UBTPageClanWar::NormalChatLog ( struct FString cL )
{
	static UFunction* pNormalChatLog = 0;
	UBTPageClanWar_execNormalChatLog_Parms parms;

	if ( !pNormalChatLog )
		pNormalChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.NormalChatLog" );

	parms.cL = cL;
	this->ProcessEvent ( pNormalChatLog, &parms, NULL );

}*/

/*void UBTPageClanWar::ClearChatLog (  )
{
	static UFunction* pClearChatLog = 0;
	UBTPageClanWar_execClearChatLog_Parms parms;

	if ( !pClearChatLog )
		pClearChatLog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ClearChatLog" );

	this->ProcessEvent ( pClearChatLog, &parms, NULL );

}*/

/*class UBTTcpLink_Channel* UBTPageClanWar::GetTcpChannel (  )
{
	static UFunction* pGetTcpChannel = 0;
	UBTPageClanWar_execGetTcpChannel_Parms parms;

	if ( !pGetTcpChannel )
		pGetTcpChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.GetTcpChannel" );

	this->ProcessEvent ( pGetTcpChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::internalKeyEvent ( float Delta, unsigned char* key, unsigned char* Action )
{
	static UFunction* pinternalKeyEvent = 0;
	UBTPageClanWar_execinternalKeyEvent_Parms parms;

	if ( !pinternalKeyEvent )
		pinternalKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.internalKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pinternalKeyEvent, &parms, NULL );

	*key = parms.key;
	*Action = parms.Action;
	return parms.ReturnValue;
}*/

/*void UBTPageClanWar::InternalOnClose ( bool bCanceled )
{
	static UFunction* pInternalOnClose = 0;
	UBTPageClanWar_execInternalOnClose_Parms parms;

	if ( !pInternalOnClose )
		pInternalOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.InternalOnClose" );

	parms.bCanceled = bCanceled;
	this->ProcessEvent ( pInternalOnClose, &parms, NULL );

}*/

/*void UBTPageClanWar::RefreshPage (  )
{
	static UFunction* pRefreshPage = 0;
	UBTPageClanWar_execRefreshPage_Parms parms;

	if ( !pRefreshPage )
		pRefreshPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.RefreshPage" );

	this->ProcessEvent ( pRefreshPage, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateItemList ( class UwGameManager* GameMgr )
{
	static UFunction* pUpdateItemList = 0;
	UBTPageClanWar_execUpdateItemList_Parms parms;

	if ( !pUpdateItemList )
		pUpdateItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateItemList" );

	parms.GameMgr = GameMgr;
	this->ProcessEvent ( pUpdateItemList, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateBlockList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateBlockList = 0;
	UBTPageClanWar_execUpdateBlockList_Parms parms;

	if ( !pUpdateBlockList )
		pUpdateBlockList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateBlockList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateBlockList, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdatePCBangList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdatePCBangList = 0;
	UBTPageClanWar_execUpdatePCBangList_Parms parms;

	if ( !pUpdatePCBangList )
		pUpdatePCBangList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdatePCBangList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdatePCBangList, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateClanList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateClanList = 0;
	UBTPageClanWar_execUpdateClanList_Parms parms;

	if ( !pUpdateClanList )
		pUpdateClanList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateClanList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateClanList, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateFriendList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateFriendList = 0;
	UBTPageClanWar_execUpdateFriendList_Parms parms;

	if ( !pUpdateFriendList )
		pUpdateFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateFriendList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateFriendList, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateQuestList ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateQuestList = 0;
	UBTPageClanWar_execUpdateQuestList_Parms parms;

	if ( !pUpdateQuestList )
		pUpdateQuestList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateQuestList" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateQuestList, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdatePositionInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdatePositionInfo = 0;
	UBTPageClanWar_execUpdatePositionInfo_Parms parms;

	if ( !pUpdatePositionInfo )
		pUpdatePositionInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdatePositionInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdatePositionInfo, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdatePCBangInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdatePCBangInfo = 0;
	UBTPageClanWar_execUpdatePCBangInfo_Parms parms;

	if ( !pUpdatePCBangInfo )
		pUpdatePCBangInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdatePCBangInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdatePCBangInfo, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateRecv_CharInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateRecv_CharInfo = 0;
	UBTPageClanWar_execUpdateRecv_CharInfo_Parms parms;

	if ( !pUpdateRecv_CharInfo )
		pUpdateRecv_CharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateRecv_CharInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateRecv_CharInfo, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateMoneyInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateMoneyInfo = 0;
	UBTPageClanWar_execUpdateMoneyInfo_Parms parms;

	if ( !pUpdateMoneyInfo )
		pUpdateMoneyInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateMoneyInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateMoneyInfo, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateEquipItemInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateEquipItemInfo = 0;
	UBTPageClanWar_execUpdateEquipItemInfo_Parms parms;

	if ( !pUpdateEquipItemInfo )
		pUpdateEquipItemInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateEquipItemInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateEquipItemInfo, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateRankingInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateRankingInfo = 0;
	UBTPageClanWar_execUpdateRankingInfo_Parms parms;

	if ( !pUpdateRankingInfo )
		pUpdateRankingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateRankingInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateRankingInfo, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateRecv_ClanInfo ( class UBTNetMainMenu* MainMenu )
{
	static UFunction* pUpdateRecv_ClanInfo = 0;
	UBTPageClanWar_execUpdateRecv_ClanInfo_Parms parms;

	if ( !pUpdateRecv_ClanInfo )
		pUpdateRecv_ClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateRecv_ClanInfo" );

	parms.MainMenu = MainMenu;
	this->ProcessEvent ( pUpdateRecv_ClanInfo, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateClanInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateClanInfo = 0;
	UBTPageClanWar_execUpdateClanInfo_Parms parms;

	if ( !pUpdateClanInfo )
		pUpdateClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateClanInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateClanInfo, &parms, NULL );

}*/

/*void UBTPageClanWar::UpdateCharInfo ( class UwMatchMaker* MM )
{
	static UFunction* pUpdateCharInfo = 0;
	UBTPageClanWar_execUpdateCharInfo_Parms parms;

	if ( !pUpdateCharInfo )
		pUpdateCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.UpdateCharInfo" );

	parms.MM = MM;
	this->ProcessEvent ( pUpdateCharInfo, &parms, NULL );

}*/

/*void UBTPageClanWar::OnCompleteOpened (  )
{
	static UFunction* pOnCompleteOpened = 0;
	UBTPageClanWar_execOnCompleteOpened_Parms parms;

	if ( !pOnCompleteOpened )
		pOnCompleteOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.OnCompleteOpened" );

	this->ProcessEvent ( pOnCompleteOpened, &parms, NULL );

}*/

/*void UBTPageClanWar::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTPageClanWar_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTPageClanWar::InternalOnReOpen (  )
{
	static UFunction* pInternalOnReOpen = 0;
	UBTPageClanWar_execInternalOnReOpen_Parms parms;

	if ( !pInternalOnReOpen )
		pInternalOnReOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.InternalOnReOpen" );

	this->ProcessEvent ( pInternalOnReOpen, &parms, NULL );

}*/

/*void UBTPageClanWar::ContextMenu_OnSelected ( int ContextMenuIndex )
{
	static UFunction* pContextMenu_OnSelected = 0;
	UBTPageClanWar_execContextMenu_OnSelected_Parms parms;

	if ( !pContextMenu_OnSelected )
		pContextMenu_OnSelected = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ContextMenu_OnSelected" );

	parms.ContextMenuIndex = ContextMenuIndex;
	this->ProcessEvent ( pContextMenu_OnSelected, &parms, NULL );

}*/

/*bool UBTPageClanWar::ContextMenu_OnClose ( class UGUIContextMenu* Sender )
{
	static UFunction* pContextMenu_OnClose = 0;
	UBTPageClanWar_execContextMenu_OnClose_Parms parms;

	if ( !pContextMenu_OnClose )
		pContextMenu_OnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ContextMenu_OnClose" );

	parms.Sender = Sender;
	this->ProcessEvent ( pContextMenu_OnClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::ContextMenu_OnOpen ( class UGUIContextMenu* Sender )
{
	static UFunction* pContextMenu_OnOpen = 0;
	UBTPageClanWar_execContextMenu_OnOpen_Parms parms;

	if ( !pContextMenu_OnOpen )
		pContextMenu_OnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ContextMenu_OnOpen" );

	parms.Sender = Sender;
	this->ProcessEvent ( pContextMenu_OnOpen, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageClanWar::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageClanWar_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTPageClanWar::FillCapacityList (  )
{
	static UFunction* pFillCapacityList = 0;
	UBTPageClanWar_execFillCapacityList_Parms parms;

	if ( !pFillCapacityList )
		pFillCapacityList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.FillCapacityList" );

	this->ProcessEvent ( pFillCapacityList, &parms, NULL );

}*/

/*void UBTPageClanWar::FillMapList (  )
{
	static UFunction* pFillMapList = 0;
	UBTPageClanWar_execFillMapList_Parms parms;

	if ( !pFillMapList )
		pFillMapList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.FillMapList" );

	this->ProcessEvent ( pFillMapList, &parms, NULL );

}*/

/*void UBTPageClanWar::ComboMap3_OnChange ( class UGUIComponent* Sender )
{
	static UFunction* pComboMap3_OnChange = 0;
	UBTPageClanWar_execComboMap3_OnChange_Parms parms;

	if ( !pComboMap3_OnChange )
		pComboMap3_OnChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ComboMap3_OnChange" );

	parms.Sender = Sender;
	this->ProcessEvent ( pComboMap3_OnChange, &parms, NULL );

}*/

/*void UBTPageClanWar::ComboMap2_OnChange ( class UGUIComponent* Sender )
{
	static UFunction* pComboMap2_OnChange = 0;
	UBTPageClanWar_execComboMap2_OnChange_Parms parms;

	if ( !pComboMap2_OnChange )
		pComboMap2_OnChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ComboMap2_OnChange" );

	parms.Sender = Sender;
	this->ProcessEvent ( pComboMap2_OnChange, &parms, NULL );

}*/

/*void UBTPageClanWar::ComboMap1_OnChange ( class UGUIComponent* Sender )
{
	static UFunction* pComboMap1_OnChange = 0;
	UBTPageClanWar_execComboMap1_OnChange_Parms parms;

	if ( !pComboMap1_OnChange )
		pComboMap1_OnChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ComboMap1_OnChange" );

	parms.Sender = Sender;
	this->ProcessEvent ( pComboMap1_OnChange, &parms, NULL );

}*/

/*void UBTPageClanWar::ComboMap0_OnChange ( class UGUIComponent* Sender )
{
	static UFunction* pComboMap0_OnChange = 0;
	UBTPageClanWar_execComboMap0_OnChange_Parms parms;

	if ( !pComboMap0_OnChange )
		pComboMap0_OnChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ComboMap0_OnChange" );

	parms.Sender = Sender;
	this->ProcessEvent ( pComboMap0_OnChange, &parms, NULL );

}*/

/*void UBTPageClanWar::RefreshSlideShowMap (  )
{
	static UFunction* pRefreshSlideShowMap = 0;
	UBTPageClanWar_execRefreshSlideShowMap_Parms parms;

	if ( !pRefreshSlideShowMap )
		pRefreshSlideShowMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.RefreshSlideShowMap" );

	this->ProcessEvent ( pRefreshSlideShowMap, &parms, NULL );

}*/

/*bool UBTPageClanWar::ListBottomButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pListBottomButton_OnClick = 0;
	UBTPageClanWar_execListBottomButton_OnClick_Parms parms;

	if ( !pListBottomButton_OnClick )
		pListBottomButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.ListBottomButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pListBottomButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageClanWar_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckLogOut ( unsigned char Result, unsigned char Reason )
{
	static UFunction* prfAckLogOut = 0;
	UBTTcpLoginHandler_execrfAckLogOut_Parms parms;

	if ( !prfAckLogOut )
		prfAckLogOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckLogOut" );

	parms.Result = Result;
	parms.Reason = Reason;
	this->ProcessEvent ( prfAckLogOut, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckPCBangUserListEnd (  )
{
	static UFunction* prfAckPCBangUserListEnd = 0;
	UBTTcpLoginHandler_execrfAckPCBangUserListEnd_Parms parms;

	if ( !prfAckPCBangUserListEnd )
		prfAckPCBangUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckPCBangUserListEnd" );

	this->ProcessEvent ( prfAckPCBangUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckPCBangUserList ( class TArray< struct FString > FriendName, class TArray< unsigned char > IsLogOn, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > Level, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose )
{
	static UFunction* prfAckPCBangUserList = 0;
	UBTTcpLoginHandler_execrfAckPCBangUserList_Parms parms;

	if ( !prfAckPCBangUserList )
		prfAckPCBangUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckPCBangUserList" );

	parms.FriendName = FriendName;
	parms.IsLogOn = IsLogOn;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.Level = Level;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	this->ProcessEvent ( prfAckPCBangUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckPCBangUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckPCBangUserListStart = 0;
	UBTTcpLoginHandler_execrfAckPCBangUserListStart_Parms parms;

	if ( !prfAckPCBangUserListStart )
		prfAckPCBangUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckPCBangUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckPCBangUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckEventNotify ( int Type )
{
	static UFunction* prfAckEventNotify = 0;
	UBTTcpLoginHandler_execrfAckEventNotify_Parms parms;

	if ( !prfAckEventNotify )
		prfAckEventNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckEventNotify" );

	parms.Type = Type;
	this->ProcessEvent ( prfAckEventNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckErrorReportServerAddr ( struct FString Addr, int Port )
{
	static UFunction* prfAckErrorReportServerAddr = 0;
	UBTTcpLoginHandler_execrfAckErrorReportServerAddr_Parms parms;

	if ( !prfAckErrorReportServerAddr )
		prfAckErrorReportServerAddr = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckErrorReportServerAddr" );

	parms.Addr = Addr;
	parms.Port = Port;
	this->ProcessEvent ( prfAckErrorReportServerAddr, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckClientChecksum ( int Result )
{
	static UFunction* prfAckClientChecksum = 0;
	UBTTcpLoginHandler_execrfAckClientChecksum_Parms parms;

	if ( !prfAckClientChecksum )
		prfAckClientChecksum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckClientChecksum" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckClientChecksum, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckClientChallenge ( struct FString Key1, struct FBtrDouble Key2 )
{
	static UFunction* prfAckClientChallenge = 0;
	UBTTcpLoginHandler_execrfAckClientChallenge_Parms parms;

	if ( !prfAckClientChallenge )
		prfAckClientChallenge = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckClientChallenge" );

	parms.Key1 = Key1;
	parms.Key2 = Key2;
	this->ProcessEvent ( prfAckClientChallenge, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckCharInfo ( int Result, struct FString CharName, int Level, int Exp, struct FString ClanName )
{
	static UFunction* prfAckCharInfo = 0;
	UBTTcpLoginHandler_execrfAckCharInfo_Parms parms;

	if ( !prfAckCharInfo )
		prfAckCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckCharInfo" );

	parms.Result = Result;
	parms.CharName = CharName;
	parms.Level = Level;
	parms.Exp = Exp;
	parms.ClanName = ClanName;
	this->ProcessEvent ( prfAckCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckFriendsListEnd (  )
{
	static UFunction* prfAckFriendsListEnd = 0;
	UBTTcpLoginHandler_execrfAckFriendsListEnd_Parms parms;

	if ( !prfAckFriendsListEnd )
		prfAckFriendsListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckFriendsListEnd" );

	this->ProcessEvent ( prfAckFriendsListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckFriendsListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckFriendsListStart = 0;
	UBTTcpLoginHandler_execrfAckFriendsListStart_Parms parms;

	if ( !prfAckFriendsListStart )
		prfAckFriendsListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckFriendsListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckFriendsListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckClanMemberListFromClientEnd (  )
{
	static UFunction* prfAckClanMemberListFromClientEnd = 0;
	UBTTcpLoginHandler_execrfAckClanMemberListFromClientEnd_Parms parms;

	if ( !prfAckClanMemberListFromClientEnd )
		prfAckClanMemberListFromClientEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckClanMemberListFromClientEnd" );

	this->ProcessEvent ( prfAckClanMemberListFromClientEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckClanMemberListFromClientStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanMemberListFromClientStart = 0;
	UBTTcpLoginHandler_execrfAckClanMemberListFromClientStart_Parms parms;

	if ( !prfAckClanMemberListFromClientStart )
		prfAckClanMemberListFromClientStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckClanMemberListFromClientStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanMemberListFromClientStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfReqForceLogoutByOwner (  )
{
	static UFunction* prfReqForceLogoutByOwner = 0;
	UBTTcpLoginHandler_execrfReqForceLogoutByOwner_Parms parms;

	if ( !prfReqForceLogoutByOwner )
		prfReqForceLogoutByOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfReqForceLogoutByOwner" );

	this->ProcessEvent ( prfReqForceLogoutByOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckMaxUserExceed (  )
{
	static UFunction* prfAckMaxUserExceed = 0;
	UBTTcpLoginHandler_execrfAckMaxUserExceed_Parms parms;

	if ( !prfAckMaxUserExceed )
		prfAckMaxUserExceed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckMaxUserExceed" );

	this->ProcessEvent ( prfAckMaxUserExceed, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::Exit_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pExit_OnOK = 0;
	UBTTcpLoginHandler_execExit_OnOK_Parms parms;

	if ( !pExit_OnOK )
		pExit_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.Exit_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pExit_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckLoginWithGlobal ( int Result )
{
	static UFunction* prfAckLoginWithGlobal = 0;
	UBTTcpLoginHandler_execrfAckLoginWithGlobal_Parms parms;

	if ( !prfAckLoginWithGlobal )
		prfAckLoginWithGlobal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckLoginWithGlobal" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithGlobal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckLoginWithWZAuth ( int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType )
{
	static UFunction* prfAckLoginWithWZAuth = 0;
	UBTTcpLoginHandler_execrfAckLoginWithWZAuth_Parms parms;

	if ( !prfAckLoginWithWZAuth )
		prfAckLoginWithWZAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckLoginWithWZAuth" );

	parms.Result = Result;
	parms.wzp_AccountType = wzp_AccountType;
	parms.wzp_IsBlock = wzp_IsBlock;
	parms.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	parms.ChannelType = ChannelType;
	this->ProcessEvent ( prfAckLoginWithWZAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckClanMemberListFromClient ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< struct FString > ServerName, class TArray< struct FString > ServerShortName, class TArray< struct FString > ServerIP, class TArray< int > serverPort, class TArray< unsigned char > CurPos, class TArray< int > ChannelNum, class TArray< struct FString > ChannelNickName, class TArray< int > GameRoomNum )
{
	static UFunction* prfAckClanMemberListFromClient = 0;
	UBTTcpLoginHandler_execrfAckClanMemberListFromClient_Parms parms;

	if ( !prfAckClanMemberListFromClient )
		prfAckClanMemberListFromClient = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckClanMemberListFromClient" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ServerName = ServerName;
	parms.ServerShortName = ServerShortName;
	parms.ServerIP = ServerIP;
	parms.serverPort = serverPort;
	parms.CurPos = CurPos;
	parms.ChannelNum = ChannelNum;
	parms.ChannelNickName = ChannelNickName;
	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckClanMemberListFromClient, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckFriendsList ( unsigned char ListType, class TArray< struct FString > UserName, class TArray< unsigned char > IsLogOn, class TArray< int > CMarkPattern, class TArray< int > CMarkBG, class TArray< int > CMarkBL, class TArray< struct FString > ClanName, class TArray< int > Level )
{
	static UFunction* prfAckFriendsList = 0;
	UBTTcpLoginHandler_execrfAckFriendsList_Parms parms;

	if ( !prfAckFriendsList )
		prfAckFriendsList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckFriendsList" );

	parms.ListType = ListType;
	parms.UserName = UserName;
	parms.IsLogOn = IsLogOn;
	parms.CMarkPattern = CMarkPattern;
	parms.CMarkBG = CMarkBG;
	parms.CMarkBL = CMarkBL;
	parms.ClanName = ClanName;
	parms.Level = Level;
	this->ProcessEvent ( prfAckFriendsList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfReqFriendsList (  )
{
	static UFunction* prfReqFriendsList = 0;
	UBTTcpLoginHandler_execrfReqFriendsList_Parms parms;

	if ( !prfReqFriendsList )
		prfReqFriendsList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfReqFriendsList" );

	this->ProcessEvent ( prfReqFriendsList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTTcpLoginHandler_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTTcpLoginHandler_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckCreateChar ( int Success, struct FString ErrMsg )
{
	static UFunction* prfAckCreateChar = 0;
	UBTTcpLoginHandler_execrfAckCreateChar_Parms parms;

	if ( !prfAckCreateChar )
		prfAckCreateChar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckCreateChar" );

	parms.Success = Success;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCreateChar, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckServerList ( class TArray< struct FString > CServername, class TArray< struct FString > CServerShortName, class TArray< struct FString > ServerIP, class TArray< int > serverPort, class TArray< struct FString > ChannelName, class TArray< struct FString > ChannelNickName, class TArray< int > ChannelNum, class TArray< int > chMaxUser, class TArray< int > chCurUser, class TArray< struct FString > ServerGroupName, class TArray< int > ServerGroupID, class TArray< int > ServerDispOrder, class TArray< int > DataPort, class TArray< unsigned char > OptionCount_byte, class TArray< unsigned char > OptionKey_byte, class TArray< unsigned char > OptionValue_byte, class TArray< unsigned char > OptionCount_int, class TArray< unsigned char > OptionKey_int, class TArray< int > OptionValue_int, class TArray< unsigned char > OptionCount_float, class TArray< unsigned char > OptionKey_float, class TArray< float > OptionValue_float, class TArray< unsigned char > IsClanChannel, class TArray< unsigned char > IsUseDedicateHost )
{
	static UFunction* prfAckServerList = 0;
	UBTTcpLoginHandler_execrfAckServerList_Parms parms;

	if ( !prfAckServerList )
		prfAckServerList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckServerList" );

	parms.CServername = CServername;
	parms.CServerShortName = CServerShortName;
	parms.ServerIP = ServerIP;
	parms.serverPort = serverPort;
	parms.ChannelName = ChannelName;
	parms.ChannelNickName = ChannelNickName;
	parms.ChannelNum = ChannelNum;
	parms.chMaxUser = chMaxUser;
	parms.chCurUser = chCurUser;
	parms.ServerGroupName = ServerGroupName;
	parms.ServerGroupID = ServerGroupID;
	parms.ServerDispOrder = ServerDispOrder;
	parms.DataPort = DataPort;
	parms.OptionCount_byte = OptionCount_byte;
	parms.OptionKey_byte = OptionKey_byte;
	parms.OptionValue_byte = OptionValue_byte;
	parms.OptionCount_int = OptionCount_int;
	parms.OptionKey_int = OptionKey_int;
	parms.OptionValue_int = OptionValue_int;
	parms.OptionCount_float = OptionCount_float;
	parms.OptionKey_float = OptionKey_float;
	parms.OptionValue_float = OptionValue_float;
	parms.IsClanChannel = IsClanChannel;
	parms.IsUseDedicateHost = IsUseDedicateHost;
	this->ProcessEvent ( prfAckServerList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckLogin ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg )
{
	static UFunction* prfAckLogin = 0;
	UBTTcpLoginHandler_execrfAckLogin_Parms parms;

	if ( !prfAckLogin )
		prfAckLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckLogin" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpLoginHandler::rfAckHash ( int Result, struct FString Error )
{
	static UFunction* prfAckHash = 0;
	UBTTcpLoginHandler_execrfAckHash_Parms parms;

	if ( !prfAckHash )
		prfAckHash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.rfAckHash" );

	parms.Result = Result;
	parms.Error = Error;
	this->ProcessEvent ( prfAckHash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTTcpLoginHandler::OnError ( int ErrCode )
{
	static UFunction* pOnError = 0;
	UBTTcpLoginHandler_execOnError_Parms parms;

	if ( !pOnError )
		pOnError = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.OnError" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnError, &parms, NULL );

}*/

/*void UBTTcpLoginHandler::OnClose ( int ErrCode )
{
	static UFunction* pOnClose = 0;
	UBTTcpLoginHandler_execOnClose_Parms parms;

	if ( !pOnClose )
		pOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.OnClose" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnClose, &parms, NULL );

}*/

/*void UBTTcpLoginHandler::OnConnect ( int ErrCode )
{
	static UFunction* pOnConnect = 0;
	UBTTcpLoginHandler_execOnConnect_Parms parms;

	if ( !pOnConnect )
		pOnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpLoginHandler.OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnConnect, &parms, NULL );

}*/

/*bool UBTWindowItemExpiredHK::CalculateCashSelect ( int ListIndex, class UBTROItemBoxHK* ro, int cashType )
{
	static UFunction* pCalculateCashSelect = 0;
	UBTWindowItemExpiredHK_execCalculateCashSelect_Parms parms;

	if ( !pCalculateCashSelect )
		pCalculateCashSelect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.CalculateCashSelect" );

	parms.ListIndex = ListIndex;
	parms.ro = ro;
	parms.cashType = cashType;
	this->ProcessEvent ( pCalculateCashSelect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTWindowItemExpiredHK::PopAndBuy ( int ReservedItemID )
{
	static UFunction* pPopAndBuy = 0;
	UBTWindowItemExpiredHK_execPopAndBuy_Parms parms;

	if ( !pPopAndBuy )
		pPopAndBuy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.PopAndBuy" );

	parms.ReservedItemID = ReservedItemID;
	this->ProcessEvent ( pPopAndBuy, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::CheckSubBtn (  )
{
	static UFunction* pCheckSubBtn = 0;
	UBTWindowItemExpiredHK_execCheckSubBtn_Parms parms;

	if ( !pCheckSubBtn )
		pCheckSubBtn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.CheckSubBtn" );

	this->ProcessEvent ( pCheckSubBtn, &parms, NULL );

}*/

/*bool UBTWindowItemExpiredHK::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTWindowItemExpiredHK_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTWindowItemExpiredHK::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTWindowItemExpiredHK_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTWindowItemExpiredHK_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::AddSubMenuBtn (  )
{
	static UFunction* pAddSubMenuBtn = 0;
	UBTWindowItemExpiredHK_execAddSubMenuBtn_Parms parms;

	if ( !pAddSubMenuBtn )
		pAddSubMenuBtn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.AddSubMenuBtn" );

	this->ProcessEvent ( pAddSubMenuBtn, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::AddItem ( int ItemID, struct FBtrDouble UniqueItemID, int UniqueSkillID, int PartID, int SlotPosition )
{
	static UFunction* pAddItem = 0;
	UBTWindowItemExpiredHK_execAddItem_Parms parms;

	if ( !pAddItem )
		pAddItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.AddItem" );

	parms.ItemID = ItemID;
	parms.UniqueItemID = UniqueItemID;
	parms.UniqueSkillID = UniqueSkillID;
	parms.PartID = PartID;
	parms.SlotPosition = SlotPosition;
	this->ProcessEvent ( pAddItem, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::SetCurrentCCoin ( int MyCCoin )
{
	static UFunction* pSetCurrentCCoin = 0;
	UBTWindowItemExpiredHK_execSetCurrentCCoin_Parms parms;

	if ( !pSetCurrentCCoin )
		pSetCurrentCCoin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.SetCurrentCCoin" );

	parms.MyCCoin = MyCCoin;
	this->ProcessEvent ( pSetCurrentCCoin, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::SetCurrentLevel ( int myLevel )
{
	static UFunction* pSetCurrentLevel = 0;
	UBTWindowItemExpiredHK_execSetCurrentLevel_Parms parms;

	if ( !pSetCurrentLevel )
		pSetCurrentLevel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.SetCurrentLevel" );

	parms.myLevel = myLevel;
	this->ProcessEvent ( pSetCurrentLevel, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::SetCurrentCash ( int MyCash )
{
	static UFunction* pSetCurrentCash = 0;
	UBTWindowItemExpiredHK_execSetCurrentCash_Parms parms;

	if ( !pSetCurrentCash )
		pSetCurrentCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.SetCurrentCash" );

	parms.MyCash = MyCash;
	this->ProcessEvent ( pSetCurrentCash, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::SetCurrentPoint ( int MyPoint )
{
	static UFunction* pSetCurrentPoint = 0;
	UBTWindowItemExpiredHK_execSetCurrentPoint_Parms parms;

	if ( !pSetCurrentPoint )
		pSetCurrentPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.SetCurrentPoint" );

	parms.MyPoint = MyPoint;
	this->ProcessEvent ( pSetCurrentPoint, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::UpdateNEditBox (  )
{
	static UFunction* pUpdateNEditBox = 0;
	UBTWindowItemExpiredHK_execUpdateNEditBox_Parms parms;

	if ( !pUpdateNEditBox )
		pUpdateNEditBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.UpdateNEditBox" );

	this->ProcessEvent ( pUpdateNEditBox, &parms, NULL );

}*/

/*bool UBTWindowItemExpiredHK::ImageListBox_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pImageListBox_OnClick = 0;
	UBTWindowItemExpiredHK_execImageListBox_OnClick_Parms parms;

	if ( !pImageListBox_OnClick )
		pImageListBox_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.ImageListBox_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pImageListBox_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTWindowItemExpiredHK::ButtonCancel_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonCancel_OnClick = 0;
	UBTWindowItemExpiredHK_execButtonCancel_OnClick_Parms parms;

	if ( !pButtonCancel_OnClick )
		pButtonCancel_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.ButtonCancel_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonCancel_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTWindowItemExpiredHK::RemoveAllItem (  )
{
	static UFunction* pRemoveAllItem = 0;
	UBTWindowItemExpiredHK_execRemoveAllItem_Parms parms;

	if ( !pRemoveAllItem )
		pRemoveAllItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.RemoveAllItem" );

	this->ProcessEvent ( pRemoveAllItem, &parms, NULL );

}*/

/*void UBTWindowItemExpiredHK::RemoveAllExpiredItem (  )
{
	static UFunction* pRemoveAllExpiredItem = 0;
	UBTWindowItemExpiredHK_execRemoveAllExpiredItem_Parms parms;

	if ( !pRemoveAllExpiredItem )
		pRemoveAllExpiredItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.RemoveAllExpiredItem" );

	this->ProcessEvent ( pRemoveAllExpiredItem, &parms, NULL );

}*/

/*bool UBTWindowItemExpiredHK::ButtonOK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonOK_OnClick = 0;
	UBTWindowItemExpiredHK_execButtonOK_OnClick_Parms parms;

	if ( !pButtonOK_OnClick )
		pButtonOK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.ButtonOK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonOK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTWindowItemExpiredHK::ButtonNonSelectAll_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonNonSelectAll_OnClick = 0;
	UBTWindowItemExpiredHK_execButtonNonSelectAll_OnClick_Parms parms;

	if ( !pButtonNonSelectAll_OnClick )
		pButtonNonSelectAll_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.ButtonNonSelectAll_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonNonSelectAll_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTWindowItemExpiredHK::ButtonSelectAll_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonSelectAll_OnClick = 0;
	UBTWindowItemExpiredHK_execButtonSelectAll_OnClick_Parms parms;

	if ( !pButtonSelectAll_OnClick )
		pButtonSelectAll_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.ButtonSelectAll_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonSelectAll_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UBTWindowItemExpiredHK::PopExpiredSlotPos (  )
{
	static UFunction* pPopExpiredSlotPos = 0;
	UBTWindowItemExpiredHK_execPopExpiredSlotPos_Parms parms;

	if ( !pPopExpiredSlotPos )
		pPopExpiredSlotPos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.PopExpiredSlotPos" );

	this->ProcessEvent ( pPopExpiredSlotPos, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTWindowItemExpiredHK::PopExpiredCashInfo ( int* iCategoryID, int* iPackageID, int* iPriceID, int* cashType )
{
	static UFunction* pPopExpiredCashInfo = 0;
	UBTWindowItemExpiredHK_execPopExpiredCashInfo_Parms parms;

	if ( !pPopExpiredCashInfo )
		pPopExpiredCashInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.PopExpiredCashInfo" );

	parms.iCategoryID = *iCategoryID;
	parms.iPackageID = *iPackageID;
	parms.iPriceID = *iPriceID;
	parms.cashType = *cashType;
	this->ProcessEvent ( pPopExpiredCashInfo, &parms, NULL );

	*iCategoryID = parms.iCategoryID;
	*iPackageID = parms.iPackageID;
	*iPriceID = parms.iPriceID;
	*cashType = parms.cashType;
}*/

/*struct FBtrDouble UBTWindowItemExpiredHK::PopExpiredUniqueID (  )
{
	static UFunction* pPopExpiredUniqueID = 0;
	UBTWindowItemExpiredHK_execPopExpiredUniqueID_Parms parms;

	if ( !pPopExpiredUniqueID )
		pPopExpiredUniqueID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.PopExpiredUniqueID" );

	this->ProcessEvent ( pPopExpiredUniqueID, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UBTWindowItemExpiredHK::PopExpiredItemID (  )
{
	static UFunction* pPopExpiredItemID = 0;
	UBTWindowItemExpiredHK_execPopExpiredItemID_Parms parms;

	if ( !pPopExpiredItemID )
		pPopExpiredItemID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.PopExpiredItemID" );

	this->ProcessEvent ( pPopExpiredItemID, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTWindowItemExpiredHK::PushExpiredItemID ( int ItemID, struct FBtrDouble UniqueID, int CategoryID, int PackageID, int PriceID, int SlotPos, int cashType )
{
	static UFunction* pPushExpiredItemID = 0;
	UBTWindowItemExpiredHK_execPushExpiredItemID_Parms parms;

	if ( !pPushExpiredItemID )
		pPushExpiredItemID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemExpiredHK.PushExpiredItemID" );

	parms.ItemID = ItemID;
	parms.UniqueID = UniqueID;
	parms.CategoryID = CategoryID;
	parms.PackageID = PackageID;
	parms.PriceID = PriceID;
	parms.SlotPos = SlotPos;
	parms.cashType = cashType;
	this->ProcessEvent ( pPushExpiredItemID, &parms, NULL );

}*/

/*bool UBTTcpHandlerMed::rfReqAhnNotifyDisconnct ( int Code )
{
	static UFunction* prfReqAhnNotifyDisconnct = 0;
	UBTTcpHandlerMed_execrfReqAhnNotifyDisconnct_Parms parms;

	if ( !prfReqAhnNotifyDisconnct )
		prfReqAhnNotifyDisconnct = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqAhnNotifyDisconnct" );

	parms.Code = Code;
	this->ProcessEvent ( prfReqAhnNotifyDisconnct, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqAhnHsObject ( class TArray< unsigned char > Data, int DataSize )
{
	static UFunction* prfReqAhnHsObject = 0;
	UBTTcpHandlerMed_execrfReqAhnHsObject_Parms parms;

	if ( !prfReqAhnHsObject )
		prfReqAhnHsObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqAhnHsObject" );

	parms.Data = Data;
	parms.DataSize = DataSize;
	this->ProcessEvent ( prfReqAhnHsObject, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfNotifyCouponUseError ( int Time )
{
	static UFunction* prfNotifyCouponUseError = 0;
	UBTTcpHandlerMed_execrfNotifyCouponUseError_Parms parms;

	if ( !prfNotifyCouponUseError )
		prfNotifyCouponUseError = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfNotifyCouponUseError" );

	parms.Time = Time;
	this->ProcessEvent ( prfNotifyCouponUseError, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqNotifyShopItemDataEnd ( int Ver )
{
	static UFunction* prfReqNotifyShopItemDataEnd = 0;
	UBTTcpHandlerMed_execrfReqNotifyShopItemDataEnd_Parms parms;

	if ( !prfReqNotifyShopItemDataEnd )
		prfReqNotifyShopItemDataEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqNotifyShopItemDataEnd" );

	parms.Ver = Ver;
	this->ProcessEvent ( prfReqNotifyShopItemDataEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckCouponUse ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckCouponUse = 0;
	UBTTcpHandlerMed_execrfAckCouponUse_Parms parms;

	if ( !prfAckCouponUse )
		prfAckCouponUse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckCouponUse" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCouponUse, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqNotifyShopItemData ( class TArray< int > ProductNo, class TArray< struct FString > ProductRowGuid, class TArray< struct FString > ServiceCode, class TArray< struct FString > ProductName, class TArray< struct FString > ProductCode, class TArray< struct FString > ProductType, class TArray< unsigned char > SaleType, class TArray< struct FString > ItemSaleType, class TArray< unsigned char > ISIncludeBonus, class TArray< int > ProductCost, class TArray< int > ProductHour, class TArray< int > ProductQuantity, class TArray< int > TotalQuantity, class TArray< int > ReOrderTerms, class TArray< int > ReorderCount, class TArray< int > PurchaseAvailableQuantity, class TArray< int > AvailableMinLevel, class TArray< int > AvailableMaxLevel, class TArray< unsigned char > AvailableGender, class TArray< int > InventoryKeepDays, class TArray< int > SaleMasterFlag, class TArray< int > SaleStatus, class TArray< struct FString > Description, class TArray< struct FString > Property0, class TArray< struct FString > Property1, class TArray< struct FString > Property2, class TArray< struct FString > Property3, class TArray< struct FString > Property4, class TArray< int > IsGift )
{
	static UFunction* prfReqNotifyShopItemData = 0;
	UBTTcpHandlerMed_execrfReqNotifyShopItemData_Parms parms;

	if ( !prfReqNotifyShopItemData )
		prfReqNotifyShopItemData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqNotifyShopItemData" );

	parms.ProductNo = ProductNo;
	parms.ProductRowGuid = ProductRowGuid;
	parms.ServiceCode = ServiceCode;
	parms.ProductName = ProductName;
	parms.ProductCode = ProductCode;
	parms.ProductType = ProductType;
	parms.SaleType = SaleType;
	parms.ItemSaleType = ItemSaleType;
	parms.ISIncludeBonus = ISIncludeBonus;
	parms.ProductCost = ProductCost;
	parms.ProductHour = ProductHour;
	parms.ProductQuantity = ProductQuantity;
	parms.TotalQuantity = TotalQuantity;
	parms.ReOrderTerms = ReOrderTerms;
	parms.ReorderCount = ReorderCount;
	parms.PurchaseAvailableQuantity = PurchaseAvailableQuantity;
	parms.AvailableMinLevel = AvailableMinLevel;
	parms.AvailableMaxLevel = AvailableMaxLevel;
	parms.AvailableGender = AvailableGender;
	parms.InventoryKeepDays = InventoryKeepDays;
	parms.SaleMasterFlag = SaleMasterFlag;
	parms.SaleStatus = SaleStatus;
	parms.Description = Description;
	parms.Property0 = Property0;
	parms.Property1 = Property1;
	parms.Property2 = Property2;
	parms.Property3 = Property3;
	parms.Property4 = Property4;
	parms.IsGift = IsGift;
	this->ProcessEvent ( prfReqNotifyShopItemData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckShopItemData (  )
{
	static UFunction* prfAckShopItemData = 0;
	UBTTcpHandlerMed_execrfAckShopItemData_Parms parms;

	if ( !prfAckShopItemData )
		prfAckShopItemData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckShopItemData" );

	this->ProcessEvent ( prfAckShopItemData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfNotifyClanLevelup ( struct FString ClanName, int Levelup )
{
	static UFunction* prfNotifyClanLevelup = 0;
	UBTTcpHandlerMed_execrfNotifyClanLevelup_Parms parms;

	if ( !prfNotifyClanLevelup )
		prfNotifyClanLevelup = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfNotifyClanLevelup" );

	parms.ClanName = ClanName;
	parms.Levelup = Levelup;
	this->ProcessEvent ( prfNotifyClanLevelup, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfNotifyNewClanName ( struct FString New_NickName )
{
	static UFunction* prfNotifyNewClanName = 0;
	UBTTcpHandlerMed_execrfNotifyNewClanName_Parms parms;

	if ( !prfNotifyNewClanName )
		prfNotifyNewClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfNotifyNewClanName" );

	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfNotifyNewNickName ( int Community_Type, struct FString Old_NickName, struct FString New_NickName )
{
	static UFunction* prfNotifyNewNickName = 0;
	UBTTcpHandlerMed_execrfNotifyNewNickName_Parms parms;

	if ( !prfNotifyNewNickName )
		prfNotifyNewNickName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfNotifyNewNickName" );

	parms.Community_Type = Community_Type;
	parms.Old_NickName = Old_NickName;
	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewNickName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckTencent_StartTenProtect ( int CharDBID )
{
	static UFunction* prfAckTencent_StartTenProtect = 0;
	UBTTcpHandlerMed_execrfAckTencent_StartTenProtect_Parms parms;

	if ( !prfAckTencent_StartTenProtect )
		prfAckTencent_StartTenProtect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckTencent_StartTenProtect" );

	parms.CharDBID = CharDBID;
	this->ProcessEvent ( prfAckTencent_StartTenProtect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckMoveToLobby ( unsigned char MessageType )
{
	static UFunction* prfAckMoveToLobby = 0;
	UBTTcpHandlerMed_execrfAckMoveToLobby_Parms parms;

	if ( !prfAckMoveToLobby )
		prfAckMoveToLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckMoveToLobby" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckMoveToLobby, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPopUpMessage ( int MessageType )
{
	static UFunction* prfAckPopUpMessage = 0;
	UBTTcpHandlerMed_execrfAckPopUpMessage_Parms parms;

	if ( !prfAckPopUpMessage )
		prfAckPopUpMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPopUpMessage" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckPopUpMessage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfUpdateWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfUpdateWebzenShopScriptVersion = 0;
	UBTTcpHandlerMed_execrfUpdateWebzenShopScriptVersion_Parms parms;

	if ( !prfUpdateWebzenShopScriptVersion )
		prfUpdateWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfUpdateWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfUpdateWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckFriendPosition ( int Result, struct FString TargetCharName, unsigned char ServerType, struct FString fServername, struct FString fServerShortName, struct FString fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, struct FString ChannelNickName, int GameRoomNum )
{
	static UFunction* prfAckFriendPosition = 0;
	UBTTcpHandlerMed_execrfAckFriendPosition_Parms parms;

	if ( !prfAckFriendPosition )
		prfAckFriendPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckFriendPosition" );

	parms.Result = Result;
	parms.TargetCharName = TargetCharName;
	parms.ServerType = ServerType;
	parms.fServername = fServername;
	parms.fServerShortName = fServerShortName;
	parms.fServerIP = fServerIP;
	parms.fServerPort = fServerPort;
	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.ChannelNum = ChannelNum;
	parms.ChannelNickName = ChannelNickName;
	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckFriendPosition, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckLogOut ( unsigned char Result, unsigned char Reason )
{
	static UFunction* prfAckLogOut = 0;
	UBTTcpHandlerMed_execrfAckLogOut_Parms parms;

	if ( !prfAckLogOut )
		prfAckLogOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckLogOut" );

	parms.Result = Result;
	parms.Reason = Reason;
	this->ProcessEvent ( prfAckLogOut, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyUpdateCharInfo_LevelMark ( struct FString CharName, int LevelMarkID )
{
	static UFunction* prfAckNotifyUpdateCharInfo_LevelMark = 0;
	UBTTcpHandlerMed_execrfAckNotifyUpdateCharInfo_LevelMark_Parms parms;

	if ( !prfAckNotifyUpdateCharInfo_LevelMark )
		prfAckNotifyUpdateCharInfo_LevelMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyUpdateCharInfo_LevelMark" );

	parms.CharName = CharName;
	parms.LevelMarkID = LevelMarkID;
	this->ProcessEvent ( prfAckNotifyUpdateCharInfo_LevelMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetRankingInfoListEnd (  )
{
	static UFunction* prfAckGetRankingInfoListEnd = 0;
	UBTTcpHandlerMed_execrfAckGetRankingInfoListEnd_Parms parms;

	if ( !prfAckGetRankingInfoListEnd )
		prfAckGetRankingInfoListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetRankingInfoListEnd" );

	this->ProcessEvent ( prfAckGetRankingInfoListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetRankingInfoList ( int Result, unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckGetRankingInfoList = 0;
	UBTTcpHandlerMed_execrfAckGetRankingInfoList_Parms parms;

	if ( !prfAckGetRankingInfoList )
		prfAckGetRankingInfoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetRankingInfoList" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.CharName = CharName;
	parms.CharLevel = CharLevel;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Ranking_Accum = Ranking_Accum;
	parms.Ranking_Accum_Prev = Ranking_Accum_Prev;
	parms.Ranking_Accum_Exp = Ranking_Accum_Exp;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckGetRankingInfoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetRankingInfoListStart ( int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount )
{
	static UFunction* prfAckGetRankingInfoListStart = 0;
	UBTTcpHandlerMed_execrfAckGetRankingInfoListStart_Parms parms;

	if ( !prfAckGetRankingInfoListStart )
		prfAckGetRankingInfoListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetRankingInfoListStart" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckGetRankingInfoListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb )
{
	static UFunction* prfAckCharDetailInfo = 0;
	UBTTcpHandlerMed_execrfAckCharDetailInfo_Parms parms;

	if ( !prfAckCharDetailInfo )
		prfAckCharDetailInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckCharDetailInfo" );

	parms.MaxSerial = MaxSerial;
	parms.MaxScore = MaxScore;
	parms.MaxKill = MaxKill;
	parms.MaxAssist = MaxAssist;
	parms.Serial3 = Serial3;
	parms.Serial5 = Serial5;
	parms.Serial7 = Serial7;
	parms.Serial10 = Serial10;
	parms.Serial15 = Serial15;
	parms.AR = AR;
	parms.SMG = SMG;
	parms.SR = SR;
	parms.SW = SW;
	parms.Melee = Melee;
	parms.Grenade = Grenade;
	parms.FlashBang = FlashBang;
	parms.Foot = Foot;
	parms.AT4 = AT4;
	parms.MG = MG;
	parms.Fire = Fire;
	parms.RPG7 = RPG7;
	parms.TimeBomb = TimeBomb;
	parms.IcendiaryBomb = IcendiaryBomb;
	parms.ClusterBomb = ClusterBomb;
	parms.ByChopper = ByChopper;
	parms.Artillery = Artillery;
	parms.KillChopper = KillChopper;
	parms.FirstKill = FirstKill;
	parms.LastKill = LastKill;
	parms.AllKill = AllKill;
	parms.Dominate = Dominate;
	parms.InstallBomb = InstallBomb;
	parms.DefuseBomb = DefuseBomb;
	this->ProcessEvent ( prfAckCharDetailInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatchResultHistory ( class TArray< struct FBtrDouble > MatchDate, class TArray< unsigned char > IsWin, class TArray< struct FString > EnemyClanname )
{
	static UFunction* prfAckClanMatchResultHistory = 0;
	UBTTcpHandlerMed_execrfAckClanMatchResultHistory_Parms parms;

	if ( !prfAckClanMatchResultHistory )
		prfAckClanMatchResultHistory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatchResultHistory" );

	parms.MatchDate = MatchDate;
	parms.IsWin = IsWin;
	parms.EnemyClanname = EnemyClanname;
	this->ProcessEvent ( prfAckClanMatchResultHistory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqInGameRoomUserInfoChanged (  )
{
	static UFunction* prfReqInGameRoomUserInfoChanged = 0;
	UBTTcpHandlerMed_execrfReqInGameRoomUserInfoChanged_Parms parms;

	if ( !prfReqInGameRoomUserInfoChanged )
		prfReqInGameRoomUserInfoChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqInGameRoomUserInfoChanged" );

	this->ProcessEvent ( prfReqInGameRoomUserInfoChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckServerType ( unsigned char Type )
{
	static UFunction* prfAckServerType = 0;
	UBTTcpHandlerMed_execrfAckServerType_Parms parms;

	if ( !prfAckServerType )
		prfAckServerType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckServerType" );

	parms.Type = Type;
	this->ProcessEvent ( prfAckServerType, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_ChangeRoomSetting ( int WaitRoomIndex, int Result, struct FString ErrMsg, class TArray< int > MapNumArray, int VersusMode, unsigned char IsPublic )
{
	static UFunction* prfAckClanMatch_ChangeRoomSetting = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_ChangeRoomSetting_Parms parms;

	if ( !prfAckClanMatch_ChangeRoomSetting )
		prfAckClanMatch_ChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_ChangeRoomSetting" );

	parms.WaitRoomIndex = WaitRoomIndex;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	parms.IsPublic = IsPublic;
	this->ProcessEvent ( prfAckClanMatch_ChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_PublicWaitRoomChanged ( int WaitRoomIdx, struct FString RoomName, int MapNum, int CurUserCount, int MaxUserCount, unsigned char Status, unsigned char IsPublic )
{
	static UFunction* prfAckClanMatch_PublicWaitRoomChanged = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_PublicWaitRoomChanged_Parms parms;

	if ( !prfAckClanMatch_PublicWaitRoomChanged )
		prfAckClanMatch_PublicWaitRoomChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_PublicWaitRoomChanged" );

	parms.WaitRoomIdx = WaitRoomIdx;
	parms.RoomName = RoomName;
	parms.MapNum = MapNum;
	parms.CurUserCount = CurUserCount;
	parms.MaxUserCount = MaxUserCount;
	parms.Status = Status;
	parms.IsPublic = IsPublic;
	this->ProcessEvent ( prfAckClanMatch_PublicWaitRoomChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_EndPublicWaitRoomList (  )
{
	static UFunction* prfAckClanMatch_EndPublicWaitRoomList = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_EndPublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_EndPublicWaitRoomList )
		prfAckClanMatch_EndPublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_EndPublicWaitRoomList" );

	this->ProcessEvent ( prfAckClanMatch_EndPublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_PublicWaitRoomList ( class TArray< int > WaitRoomIdx, class TArray< struct FString > LeaderName, class TArray< struct FString > RoomName, class TArray< int > MapNum, class TArray< int > CurUserCount, class TArray< int > MaxUserCount, class TArray< unsigned char > Status )
{
	static UFunction* prfAckClanMatch_PublicWaitRoomList = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_PublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_PublicWaitRoomList )
		prfAckClanMatch_PublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_PublicWaitRoomList" );

	parms.WaitRoomIdx = WaitRoomIdx;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	parms.MapNum = MapNum;
	parms.CurUserCount = CurUserCount;
	parms.MaxUserCount = MaxUserCount;
	parms.Status = Status;
	this->ProcessEvent ( prfAckClanMatch_PublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_StartPublicWaitRoomList ( int Result, struct FString ErrMsg, int Count )
{
	static UFunction* prfAckClanMatch_StartPublicWaitRoomList = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_StartPublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_StartPublicWaitRoomList )
		prfAckClanMatch_StartPublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_StartPublicWaitRoomList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Count = Count;
	this->ProcessEvent ( prfAckClanMatch_StartPublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPaidItem_NotifyChangeClanname ( struct FString NewClanname )
{
	static UFunction* prfAckPaidItem_NotifyChangeClanname = 0;
	UBTTcpHandlerMed_execrfAckPaidItem_NotifyChangeClanname_Parms parms;

	if ( !prfAckPaidItem_NotifyChangeClanname )
		prfAckPaidItem_NotifyChangeClanname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPaidItem_NotifyChangeClanname" );

	parms.NewClanname = NewClanname;
	this->ProcessEvent ( prfAckPaidItem_NotifyChangeClanname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPaidItem_ChangeClanname ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int RemainCount, struct FString NewCharname )
{
	static UFunction* prfAckPaidItem_ChangeClanname = 0;
	UBTTcpHandlerMed_execrfAckPaidItem_ChangeClanname_Parms parms;

	if ( !prfAckPaidItem_ChangeClanname )
		prfAckPaidItem_ChangeClanname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPaidItem_ChangeClanname" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.RemainCount = RemainCount;
	parms.NewCharname = NewCharname;
	this->ProcessEvent ( prfAckPaidItem_ChangeClanname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPaidItem_ChangeCharname ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int RemainCount, struct FString NewCharname )
{
	static UFunction* prfAckPaidItem_ChangeCharname = 0;
	UBTTcpHandlerMed_execrfAckPaidItem_ChangeCharname_Parms parms;

	if ( !prfAckPaidItem_ChangeCharname )
		prfAckPaidItem_ChangeCharname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPaidItem_ChangeCharname" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.RemainCount = RemainCount;
	parms.NewCharname = NewCharname;
	this->ProcessEvent ( prfAckPaidItem_ChangeCharname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyEndTutorial ( int UserID, struct FString CharName, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckNotifyEndTutorial = 0;
	UBTTcpHandlerMed_execrfAckNotifyEndTutorial_Parms parms;

	if ( !prfAckNotifyEndTutorial )
		prfAckNotifyEndTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyEndTutorial" );

	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckNotifyEndTutorial, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyStartTutorial ( int Result, int UserID )
{
	static UFunction* prfAckNotifyStartTutorial = 0;
	UBTTcpHandlerMed_execrfAckNotifyStartTutorial_Parms parms;

	if ( !prfAckNotifyStartTutorial )
		prfAckNotifyStartTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyStartTutorial" );

	parms.Result = Result;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckNotifyStartTutorial, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetMyMailBoxState ( int Result, unsigned char IsFull, int NewMailCount )
{
	static UFunction* prfAckGetMyMailBoxState = 0;
	UBTTcpHandlerMed_execrfAckGetMyMailBoxState_Parms parms;

	if ( !prfAckGetMyMailBoxState )
		prfAckGetMyMailBoxState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetMyMailBoxState" );

	parms.Result = Result;
	parms.IsFull = IsFull;
	parms.NewMailCount = NewMailCount;
	this->ProcessEvent ( prfAckGetMyMailBoxState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckSetLookForClan ( int Result, struct FString ErrMsg, unsigned char IsLookingFor )
{
	static UFunction* prfAckSetLookForClan = 0;
	UBTTcpHandlerMed_execrfAckSetLookForClan_Parms parms;

	if ( !prfAckSetLookForClan )
		prfAckSetLookForClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckSetLookForClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsLookingFor = IsLookingFor;
	this->ProcessEvent ( prfAckSetLookForClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRoomUserPingInfo ( class TArray< int > UnqueID, class TArray< int > Ping, int HostPriorityPoint )
{
	static UFunction* prfAckRoomUserPingInfo = 0;
	UBTTcpHandlerMed_execrfAckRoomUserPingInfo_Parms parms;

	if ( !prfAckRoomUserPingInfo )
		prfAckRoomUserPingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRoomUserPingInfo" );

	parms.UnqueID = UnqueID;
	parms.Ping = Ping;
	parms.HostPriorityPoint = HostPriorityPoint;
	this->ProcessEvent ( prfAckRoomUserPingInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRecvSystemMsg ( unsigned char CommunityType, struct FSystemMsgParam MsgInfo )
{
	static UFunction* prfAckRecvSystemMsg = 0;
	UBTTcpHandlerMed_execrfAckRecvSystemMsg_Parms parms;

	if ( !prfAckRecvSystemMsg )
		prfAckRecvSystemMsg = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRecvSystemMsg" );

	parms.CommunityType = CommunityType;
	parms.MsgInfo = MsgInfo;
	this->ProcessEvent ( prfAckRecvSystemMsg, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGMLeaveRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMLeaveRoom = 0;
	UBTTcpHandlerMed_execrfAckGMLeaveRoom_Parms parms;

	if ( !prfAckGMLeaveRoom )
		prfAckGMLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGMLeaveRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGMEnterRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMEnterRoom = 0;
	UBTTcpHandlerMed_execrfAckGMEnterRoom_Parms parms;

	if ( !prfAckGMEnterRoom )
		prfAckGMEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGMEnterRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckForceDisconnectUser_GM ( int Result, struct FString ErrMsg, struct FString CharName )
{
	static UFunction* prfAckForceDisconnectUser_GM = 0;
	UBTTcpHandlerMed_execrfAckForceDisconnectUser_GM_Parms parms;

	if ( !prfAckForceDisconnectUser_GM )
		prfAckForceDisconnectUser_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckForceDisconnectUser_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckForceDisconnectUser_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotice_GM ( int Result, struct FString ErrMsg, unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, struct FString Msg )
{
	static UFunction* prfAckNotice_GM = 0;
	UBTTcpHandlerMed_execrfAckNotice_GM_Parms parms;

	if ( !prfAckNotice_GM )
		prfAckNotice_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotice_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeType = NoticeType;
	parms.ServerID = ServerID;
	parms.ChannelNum = ChannelNum;
	parms.GameRoomNum = GameRoomNum;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckNotice_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChangeRoomTitle_GM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangeRoomTitle_GM = 0;
	UBTTcpHandlerMed_execrfAckChangeRoomTitle_GM_Parms parms;

	if ( !prfAckChangeRoomTitle_GM )
		prfAckChangeRoomTitle_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChangeRoomTitle_GM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangeRoomTitle_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqExteriorRoomOwnerInfo ( int RoomNum, struct FString OwnerName, struct FString OwnerIP )
{
	static UFunction* prfReqExteriorRoomOwnerInfo = 0;
	UBTTcpHandlerMed_execrfReqExteriorRoomOwnerInfo_Parms parms;

	if ( !prfReqExteriorRoomOwnerInfo )
		prfReqExteriorRoomOwnerInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqExteriorRoomOwnerInfo" );

	parms.RoomNum = RoomNum;
	parms.OwnerName = OwnerName;
	parms.OwnerIP = OwnerIP;
	this->ProcessEvent ( prfReqExteriorRoomOwnerInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckCharBlockInfo ( int Result, struct FBtrDouble ChatBlockStartTime, struct FBtrDouble ChatBlockEndTime, class TArray< struct FBtrDouble > BlockedItemIdx )
{
	static UFunction* prfAckCharBlockInfo = 0;
	UBTTcpHandlerMed_execrfAckCharBlockInfo_Parms parms;

	if ( !prfAckCharBlockInfo )
		prfAckCharBlockInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckCharBlockInfo" );

	parms.Result = Result;
	parms.ChatBlockStartTime = ChatBlockStartTime;
	parms.ChatBlockEndTime = ChatBlockEndTime;
	parms.BlockedItemIdx = BlockedItemIdx;
	this->ProcessEvent ( prfAckCharBlockInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckQuestGetAvailableEventList ( int Result, struct FString ErrMsg, class TArray< int > QuestID )
{
	static UFunction* prfAckQuestGetAvailableEventList = 0;
	UBTTcpHandlerMed_execrfAckQuestGetAvailableEventList_Parms parms;

	if ( !prfAckQuestGetAvailableEventList )
		prfAckQuestGetAvailableEventList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckQuestGetAvailableEventList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.QuestID = QuestID;
	this->ProcessEvent ( prfAckQuestGetAvailableEventList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPaidItem_NotifyChangeClanMark ( struct FString ClanName, int Pattern, int BG, int BL )
{
	static UFunction* prfAckPaidItem_NotifyChangeClanMark = 0;
	UBTTcpHandlerMed_execrfAckPaidItem_NotifyChangeClanMark_Parms parms;

	if ( !prfAckPaidItem_NotifyChangeClanMark )
		prfAckPaidItem_NotifyChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPaidItem_NotifyChangeClanMark" );

	parms.ClanName = ClanName;
	parms.Pattern = Pattern;
	parms.BG = BG;
	parms.BL = BL;
	this->ProcessEvent ( prfAckPaidItem_NotifyChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPaidItem_ChangeClanMark ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_ChangeClanMark = 0;
	UBTTcpHandlerMed_execrfAckPaidItem_ChangeClanMark_Parms parms;

	if ( !prfAckPaidItem_ChangeClanMark )
		prfAckPaidItem_ChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPaidItem_ChangeClanMark" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_ChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPaidItem_ClanMarkDupCheck ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckPaidItem_ClanMarkDupCheck = 0;
	UBTTcpHandlerMed_execrfAckPaidItem_ClanMarkDupCheck_Parms parms;

	if ( !prfAckPaidItem_ClanMarkDupCheck )
		prfAckPaidItem_ClanMarkDupCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPaidItem_ClanMarkDupCheck" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckPaidItem_ClanMarkDupCheck, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckWebzenBillingUseStorageItem ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int ItemID, struct FBtrDouble ItemExtra )
{
	static UFunction* prfAckWebzenBillingUseStorageItem = 0;
	UBTTcpHandlerMed_execrfAckWebzenBillingUseStorageItem_Parms parms;

	if ( !prfAckWebzenBillingUseStorageItem )
		prfAckWebzenBillingUseStorageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckWebzenBillingUseStorageItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.ItemID = ItemID;
	parms.ItemExtra = ItemExtra;
	this->ProcessEvent ( prfAckWebzenBillingUseStorageItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPaidItem_RelayBroadcast ( struct FString CharName, struct FString Msg )
{
	static UFunction* prfAckPaidItem_RelayBroadcast = 0;
	UBTTcpHandlerMed_execrfAckPaidItem_RelayBroadcast_Parms parms;

	if ( !prfAckPaidItem_RelayBroadcast )
		prfAckPaidItem_RelayBroadcast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPaidItem_RelayBroadcast" );

	parms.CharName = CharName;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckPaidItem_RelayBroadcast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPaidItem_BroadCast ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_BroadCast = 0;
	UBTTcpHandlerMed_execrfAckPaidItem_BroadCast_Parms parms;

	if ( !prfAckPaidItem_BroadCast )
		prfAckPaidItem_BroadCast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPaidItem_BroadCast" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_BroadCast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPaidItem_EraseRecord ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int Command, int RemainCount )
{
	static UFunction* prfAckPaidItem_EraseRecord = 0;
	UBTTcpHandlerMed_execrfAckPaidItem_EraseRecord_Parms parms;

	if ( !prfAckPaidItem_EraseRecord )
		prfAckPaidItem_EraseRecord = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPaidItem_EraseRecord" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.Command = Command;
	parms.RemainCount = RemainCount;
	this->ProcessEvent ( prfAckPaidItem_EraseRecord, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckWebzenBillingStorageListEnd (  )
{
	static UFunction* prfAckWebzenBillingStorageListEnd = 0;
	UBTTcpHandlerMed_execrfAckWebzenBillingStorageListEnd_Parms parms;

	if ( !prfAckWebzenBillingStorageListEnd )
		prfAckWebzenBillingStorageListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckWebzenBillingStorageListEnd" );

	this->ProcessEvent ( prfAckWebzenBillingStorageListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckWebzenBillingStorageList ( class TArray< int > Seq, class TArray< int > ItemSeq, class TArray< int > GroupCode, class TArray< int > ShareFlag, class TArray< int > ProductSeq, class TArray< struct FString > CashName, class TArray< struct FBtrDouble > CashPoint, class TArray< struct FString > SendAccountID, class TArray< struct FString > SendMessage, class TArray< unsigned char > ItemType, class TArray< unsigned char > RelationType, class TArray< int > ProductType, class TArray< int > PriceSeq )
{
	static UFunction* prfAckWebzenBillingStorageList = 0;
	UBTTcpHandlerMed_execrfAckWebzenBillingStorageList_Parms parms;

	if ( !prfAckWebzenBillingStorageList )
		prfAckWebzenBillingStorageList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckWebzenBillingStorageList" );

	parms.Seq = Seq;
	parms.ItemSeq = ItemSeq;
	parms.GroupCode = GroupCode;
	parms.ShareFlag = ShareFlag;
	parms.ProductSeq = ProductSeq;
	parms.CashName = CashName;
	parms.CashPoint = CashPoint;
	parms.SendAccountID = SendAccountID;
	parms.SendMessage = SendMessage;
	parms.ItemType = ItemType;
	parms.RelationType = RelationType;
	parms.ProductType = ProductType;
	parms.PriceSeq = PriceSeq;
	this->ProcessEvent ( prfAckWebzenBillingStorageList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckWebzenBillingStorageListStart ( int Result, struct FString ErrMsg, int TotalCount, int TotalPage, int CurPage )
{
	static UFunction* prfAckWebzenBillingStorageListStart = 0;
	UBTTcpHandlerMed_execrfAckWebzenBillingStorageListStart_Parms parms;

	if ( !prfAckWebzenBillingStorageListStart )
		prfAckWebzenBillingStorageListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckWebzenBillingStorageListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalCount = TotalCount;
	parms.TotalPage = TotalPage;
	parms.CurPage = CurPage;
	this->ProcessEvent ( prfAckWebzenBillingStorageListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRandomBox_Use ( int Result, struct FString ErrMsg, struct FBtrDouble RandomBoxItemIdx, int RandomBxoItemCount, class TArray< int > ItemIDChoose, class TArray< int > PartIDChoose, class TArray< int > PeriodOnChoosenItem, class TArray< int > StackCountOnChoosenItem, class TArray< unsigned char > bHave, class TArray< struct FBtrDouble > ItemIdx, class TArray< struct FBtrDouble > UntilTime, class TArray< int > StackCount )
{
	static UFunction* prfAckRandomBox_Use = 0;
	UBTTcpHandlerMed_execrfAckRandomBox_Use_Parms parms;

	if ( !prfAckRandomBox_Use )
		prfAckRandomBox_Use = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRandomBox_Use" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RandomBoxItemIdx = RandomBoxItemIdx;
	parms.RandomBxoItemCount = RandomBxoItemCount;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	parms.PeriodOnChoosenItem = PeriodOnChoosenItem;
	parms.StackCountOnChoosenItem = StackCountOnChoosenItem;
	parms.bHave = bHave;
	parms.ItemIdx = ItemIdx;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckRandomBox_Use, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRegisterMainPCBang ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRegisterMainPCBang = 0;
	UBTTcpHandlerMed_execrfAckRegisterMainPCBang_Parms parms;

	if ( !prfAckRegisterMainPCBang )
		prfAckRegisterMainPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRegisterMainPCBang" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRegisterMainPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqIsPaidWebzenPCBang ( unsigned char IsPaid )
{
	static UFunction* prfReqIsPaidWebzenPCBang = 0;
	UBTTcpHandlerMed_execrfReqIsPaidWebzenPCBang_Parms parms;

	if ( !prfReqIsPaidWebzenPCBang )
		prfReqIsPaidWebzenPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqIsPaidWebzenPCBang" );

	parms.IsPaid = IsPaid;
	this->ProcessEvent ( prfReqIsPaidWebzenPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPCBangUserListEnd (  )
{
	static UFunction* prfAckPCBangUserListEnd = 0;
	UBTTcpHandlerMed_execrfAckPCBangUserListEnd_Parms parms;

	if ( !prfAckPCBangUserListEnd )
		prfAckPCBangUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPCBangUserListEnd" );

	this->ProcessEvent ( prfAckPCBangUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPCBangUserList ( class TArray< struct FString > FriendName, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > Level, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, class TArray< unsigned char > IsCombat, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckPCBangUserList = 0;
	UBTTcpHandlerMed_execrfAckPCBangUserList_Parms parms;

	if ( !prfAckPCBangUserList )
		prfAckPCBangUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPCBangUserList" );

	parms.FriendName = FriendName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.Level = Level;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.IsCombat = IsCombat;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckPCBangUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckPCBangUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckPCBangUserListStart = 0;
	UBTTcpHandlerMed_execrfAckPCBangUserListStart_Parms parms;

	if ( !prfAckPCBangUserListStart )
		prfAckPCBangUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckPCBangUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckPCBangUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGiftItemByWebzenCash ( int Result, struct FString ErrMsg, int LeftProductCount )
{
	static UFunction* prfAckGiftItemByWebzenCash = 0;
	UBTTcpHandlerMed_execrfAckGiftItemByWebzenCash_Parms parms;

	if ( !prfAckGiftItemByWebzenCash )
		prfAckGiftItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGiftItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.LeftProductCount = LeftProductCount;
	this->ProcessEvent ( prfAckGiftItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckBuyItemByWebzenCash ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBuyItemByWebzenCash = 0;
	UBTTcpHandlerMed_execrfAckBuyItemByWebzenCash_Parms parms;

	if ( !prfAckBuyItemByWebzenCash )
		prfAckBuyItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckBuyItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBuyItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_GetClanWaittingRoomInfo ( int WaitRoomIndex, int Result, struct FString ErrMsg, class TArray< int > MapNumArray, int VersusMode, struct FString WaitRoomName )
{
	static UFunction* prfAckClanMatch_GetClanWaittingRoomInfo = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_GetClanWaittingRoomInfo_Parms parms;

	if ( !prfAckClanMatch_GetClanWaittingRoomInfo )
		prfAckClanMatch_GetClanWaittingRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_GetClanWaittingRoomInfo" );

	parms.WaitRoomIndex = WaitRoomIndex;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	parms.WaitRoomName = WaitRoomName;
	this->ProcessEvent ( prfAckClanMatch_GetClanWaittingRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetBotID ( int Result, unsigned char RequestedAFCount, unsigned char RequestedRSACount, class TArray< int > AFBotID, class TArray< int > RSABotID )
{
	static UFunction* prfAckGetBotID = 0;
	UBTTcpHandlerMed_execrfAckGetBotID_Parms parms;

	if ( !prfAckGetBotID )
		prfAckGetBotID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetBotID" );

	parms.Result = Result;
	parms.RequestedAFCount = RequestedAFCount;
	parms.RequestedRSACount = RequestedRSACount;
	parms.AFBotID = AFBotID;
	parms.RSABotID = RSABotID;
	this->ProcessEvent ( prfAckGetBotID, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRegisteredPCBangInfo ( int Result, struct FString ErrMsg, unsigned char IsRegisteredPCBang, unsigned char IsMainPCBang, struct FString PCBangName )
{
	static UFunction* prfAckRegisteredPCBangInfo = 0;
	UBTTcpHandlerMed_execrfAckRegisteredPCBangInfo_Parms parms;

	if ( !prfAckRegisteredPCBangInfo )
		prfAckRegisteredPCBangInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRegisteredPCBangInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsRegisteredPCBang = IsRegisteredPCBang;
	parms.IsMainPCBang = IsMainPCBang;
	parms.PCBangName = PCBangName;
	this->ProcessEvent ( prfAckRegisteredPCBangInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfAckWebzenShopScriptVersion = 0;
	UBTTcpHandlerMed_execrfAckWebzenShopScriptVersion_Parms parms;

	if ( !prfAckWebzenShopScriptVersion )
		prfAckWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfAckWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckWebzenCash ( int Result, struct FString ErrMsg, struct FBtrDouble PCoinCash, struct FBtrDouble CCoinCash )
{
	static UFunction* prfAckWebzenCash = 0;
	UBTTcpHandlerMed_execrfAckWebzenCash_Parms parms;

	if ( !prfAckWebzenCash )
		prfAckWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PCoinCash = PCoinCash;
	parms.CCoinCash = CCoinCash;
	this->ProcessEvent ( prfAckWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckCheckEquipedWeaponDurability ( int Result, class TArray< struct FBtrDouble > ItemUniqueID, class TArray< int > ItemSlotNum )
{
	static UFunction* prfAckCheckEquipedWeaponDurability = 0;
	UBTTcpHandlerMed_execrfAckCheckEquipedWeaponDurability_Parms parms;

	if ( !prfAckCheckEquipedWeaponDurability )
		prfAckCheckEquipedWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckCheckEquipedWeaponDurability" );

	parms.Result = Result;
	parms.ItemUniqueID = ItemUniqueID;
	parms.ItemSlotNum = ItemSlotNum;
	this->ProcessEvent ( prfAckCheckEquipedWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqClanMatch_InviteCrewResult ( struct FString Invitee, int Result )
{
	static UFunction* prfReqClanMatch_InviteCrewResult = 0;
	UBTTcpHandlerMed_execrfReqClanMatch_InviteCrewResult_Parms parms;

	if ( !prfReqClanMatch_InviteCrewResult )
		prfReqClanMatch_InviteCrewResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqClanMatch_InviteCrewResult" );

	parms.Invitee = Invitee;
	parms.Result = Result;
	this->ProcessEvent ( prfReqClanMatch_InviteCrewResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqClanMatch_RecvInviteCrew ( struct FString Inviter, struct FString ServerIP, int Port, int WaittingID, struct FString Msg, int MapNum, int InviteUserChannelNum, struct FString LeaderName, struct FString RoomName )
{
	static UFunction* prfReqClanMatch_RecvInviteCrew = 0;
	UBTTcpHandlerMed_execrfReqClanMatch_RecvInviteCrew_Parms parms;

	if ( !prfReqClanMatch_RecvInviteCrew )
		prfReqClanMatch_RecvInviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqClanMatch_RecvInviteCrew" );

	parms.Inviter = Inviter;
	parms.ServerIP = ServerIP;
	parms.Port = Port;
	parms.WaittingID = WaittingID;
	parms.Msg = Msg;
	parms.MapNum = MapNum;
	parms.InviteUserChannelNum = InviteUserChannelNum;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	this->ProcessEvent ( prfReqClanMatch_RecvInviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_InviteCrew ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_InviteCrew = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_InviteCrew_Parms parms;

	if ( !prfAckClanMatch_InviteCrew )
		prfAckClanMatch_InviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_InviteCrew" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_InviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqDailyQuestNewAvailable ( class TArray< int > ExpiredQuestID, class TArray< int > NewQuestID )
{
	static UFunction* prfReqDailyQuestNewAvailable = 0;
	UBTTcpHandlerMed_execrfReqDailyQuestNewAvailable_Parms parms;

	if ( !prfReqDailyQuestNewAvailable )
		prfReqDailyQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqDailyQuestNewAvailable" );

	parms.ExpiredQuestID = ExpiredQuestID;
	parms.NewQuestID = NewQuestID;
	this->ProcessEvent ( prfReqDailyQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqQuestNewAvailable ( class TArray< int > AchivedQuestID, class TArray< int > NewQuestID, class TArray< unsigned char > IsDailyQuest, class TArray< int > ExpiredQuest )
{
	static UFunction* prfReqQuestNewAvailable = 0;
	UBTTcpHandlerMed_execrfReqQuestNewAvailable_Parms parms;

	if ( !prfReqQuestNewAvailable )
		prfReqQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqQuestNewAvailable" );

	parms.AchivedQuestID = AchivedQuestID;
	parms.NewQuestID = NewQuestID;
	parms.IsDailyQuest = IsDailyQuest;
	parms.ExpiredQuest = ExpiredQuest;
	this->ProcessEvent ( prfReqQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckQuestUpdate ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestUpdate = 0;
	UBTTcpHandlerMed_execrfAckQuestUpdate_Parms parms;

	if ( !prfAckQuestUpdate )
		prfAckQuestUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckQuestUpdate" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestUpdate, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckQuestListEnd (  )
{
	static UFunction* prfAckQuestListEnd = 0;
	UBTTcpHandlerMed_execrfAckQuestListEnd_Parms parms;

	if ( !prfAckQuestListEnd )
		prfAckQuestListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckQuestListEnd" );

	this->ProcessEvent ( prfAckQuestListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckQuestList ( class TArray< int > QuestID, class TArray< int > CountPrograss, class TArray< unsigned char > IsDailyQuest )
{
	static UFunction* prfAckQuestList = 0;
	UBTTcpHandlerMed_execrfAckQuestList_Parms parms;

	if ( !prfAckQuestList )
		prfAckQuestList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckQuestList" );

	parms.QuestID = QuestID;
	parms.CountPrograss = CountPrograss;
	parms.IsDailyQuest = IsDailyQuest;
	this->ProcessEvent ( prfAckQuestList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckQuestListStart ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestListStart = 0;
	UBTTcpHandlerMed_execrfAckQuestListStart_Parms parms;

	if ( !prfAckQuestListStart )
		prfAckQuestListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckQuestListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_SetWaitRoomPublic ( int Result, struct FString ErrMsg, unsigned char Set )
{
	static UFunction* prfAckClanMatch_SetWaitRoomPublic = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_SetWaitRoomPublic_Parms parms;

	if ( !prfAckClanMatch_SetWaitRoomPublic )
		prfAckClanMatch_SetWaitRoomPublic = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_SetWaitRoomPublic" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Set = Set;
	this->ProcessEvent ( prfAckClanMatch_SetWaitRoomPublic, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_StopSearching (  )
{
	static UFunction* prfAckClanMatch_StopSearching = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_StopSearching_Parms parms;

	if ( !prfAckClanMatch_StopSearching )
		prfAckClanMatch_StopSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_StopSearching" );

	this->ProcessEvent ( prfAckClanMatch_StopSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqClanMatch_FoundMatch ( int ChannelID, int RoomNumber )
{
	static UFunction* prfReqClanMatch_FoundMatch = 0;
	UBTTcpHandlerMed_execrfReqClanMatch_FoundMatch_Parms parms;

	if ( !prfReqClanMatch_FoundMatch )
		prfReqClanMatch_FoundMatch = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqClanMatch_FoundMatch" );

	parms.ChannelID = ChannelID;
	parms.RoomNumber = RoomNumber;
	this->ProcessEvent ( prfReqClanMatch_FoundMatch, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_FoundMatch (  )
{
	static UFunction* prfAckClanMatch_FoundMatch = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_FoundMatch_Parms parms;

	if ( !prfAckClanMatch_FoundMatch )
		prfAckClanMatch_FoundMatch = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_FoundMatch" );

	this->ProcessEvent ( prfAckClanMatch_FoundMatch, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_NotifyStartSearching ( int ShouldWaitMore )
{
	static UFunction* prfAckClanMatch_NotifyStartSearching = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_NotifyStartSearching_Parms parms;

	if ( !prfAckClanMatch_NotifyStartSearching )
		prfAckClanMatch_NotifyStartSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_NotifyStartSearching" );

	parms.ShouldWaitMore = ShouldWaitMore;
	this->ProcessEvent ( prfAckClanMatch_NotifyStartSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_StartSearching ( int Result, struct FString ErrMsg, int ShouldWaitMore )
{
	static UFunction* prfAckClanMatch_StartSearching = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_StartSearching_Parms parms;

	if ( !prfAckClanMatch_StartSearching )
		prfAckClanMatch_StartSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_StartSearching" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ShouldWaitMore = ShouldWaitMore;
	this->ProcessEvent ( prfAckClanMatch_StartSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_ChangeLeader ( int Result, struct FString ErrMsg, int NewLeader, struct FString NewLeaderName )
{
	static UFunction* prfAckClanMatch_ChangeLeader = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_ChangeLeader_Parms parms;

	if ( !prfAckClanMatch_ChangeLeader )
		prfAckClanMatch_ChangeLeader = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_ChangeLeader" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NewLeader = NewLeader;
	parms.NewLeaderName = NewLeaderName;
	this->ProcessEvent ( prfAckClanMatch_ChangeLeader, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_WaittingTeamList ( int TtotlCount, class TArray< int > Grade, class TArray< int > Map, class TArray< int > Versus )
{
	static UFunction* prfAckClanMatch_WaittingTeamList = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_WaittingTeamList_Parms parms;

	if ( !prfAckClanMatch_WaittingTeamList )
		prfAckClanMatch_WaittingTeamList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_WaittingTeamList" );

	parms.TtotlCount = TtotlCount;
	parms.Grade = Grade;
	parms.Map = Map;
	parms.Versus = Versus;
	this->ProcessEvent ( prfAckClanMatch_WaittingTeamList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_Chat ( int Result, struct FString ErrMsg, struct FString CharName, struct FString Msg )
{
	static UFunction* prfAckClanMatch_Chat = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_Chat_Parms parms;

	if ( !prfAckClanMatch_Chat )
		prfAckClanMatch_Chat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_Chat" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckClanMatch_Chat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_Leave ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Leave = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_Leave_Parms parms;

	if ( !prfAckClanMatch_Leave )
		prfAckClanMatch_Leave = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_Leave" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Leave, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_MemberList ( class TArray< unsigned char > IsLeader, class TArray< int > ClanMarkPA, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< struct FString > ClanName, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckClanMatch_MemberList = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_MemberList_Parms parms;

	if ( !prfAckClanMatch_MemberList )
		prfAckClanMatch_MemberList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_MemberList" );

	parms.IsLeader = IsLeader;
	parms.ClanMarkPA = ClanMarkPA;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanName = ClanName;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckClanMatch_MemberList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_LeaveNotify ( struct FString CharName )
{
	static UFunction* prfAckClanMatch_LeaveNotify = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_LeaveNotify_Parms parms;

	if ( !prfAckClanMatch_LeaveNotify )
		prfAckClanMatch_LeaveNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_LeaveNotify" );

	parms.CharName = CharName;
	this->ProcessEvent ( prfAckClanMatch_LeaveNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_JoinNotify ( unsigned char IsLeader, int ClanMarkPA, int ClanMarkBG, int ClanMarkBL, int Level, struct FString CharName, int ClanGrade, int ClanWin, int ClanLose, struct FString ClanName, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckClanMatch_JoinNotify = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_JoinNotify_Parms parms;

	if ( !prfAckClanMatch_JoinNotify )
		prfAckClanMatch_JoinNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_JoinNotify" );

	parms.IsLeader = IsLeader;
	parms.ClanMarkPA = ClanMarkPA;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanName = ClanName;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckClanMatch_JoinNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_Join ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Join = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_Join_Parms parms;

	if ( !prfAckClanMatch_Join )
		prfAckClanMatch_Join = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_Join" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Join, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_NotifiyStartCombat ( class TArray< int > MapNumArray, int VersusMode )
{
	static UFunction* prfAckClanMatch_NotifiyStartCombat = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_NotifiyStartCombat_Parms parms;

	if ( !prfAckClanMatch_NotifiyStartCombat )
		prfAckClanMatch_NotifiyStartCombat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_NotifiyStartCombat" );

	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	this->ProcessEvent ( prfAckClanMatch_NotifiyStartCombat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_StartCombat ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_StartCombat = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_StartCombat_Parms parms;

	if ( !prfAckClanMatch_StartCombat )
		prfAckClanMatch_StartCombat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_StartCombat" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_StartCombat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanMatch_GetReady ( int Result, struct FString ErrMsg, int RoomIndex )
{
	static UFunction* prfAckClanMatch_GetReady = 0;
	UBTTcpHandlerMed_execrfAckClanMatch_GetReady_Parms parms;

	if ( !prfAckClanMatch_GetReady )
		prfAckClanMatch_GetReady = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanMatch_GetReady" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomIndex = RoomIndex;
	this->ProcessEvent ( prfAckClanMatch_GetReady, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckLimitedListInChannel ( int Result, class TArray< int > LimitedMapID, class TArray< int > LimitedModeID )
{
	static UFunction* prfAckLimitedListInChannel = 0;
	UBTTcpHandlerMed_execrfAckLimitedListInChannel_Parms parms;

	if ( !prfAckLimitedListInChannel )
		prfAckLimitedListInChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckLimitedListInChannel" );

	parms.Result = Result;
	parms.LimitedMapID = LimitedMapID;
	parms.LimitedModeID = LimitedModeID;
	this->ProcessEvent ( prfAckLimitedListInChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRecvInviteGameRoomResult ( int Result )
{
	static UFunction* prfAckRecvInviteGameRoomResult = 0;
	UBTTcpHandlerMed_execrfAckRecvInviteGameRoomResult_Parms parms;

	if ( !prfAckRecvInviteGameRoomResult )
		prfAckRecvInviteGameRoomResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRecvInviteGameRoomResult" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckRecvInviteGameRoomResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvInviteGameRoom ( struct FString InviteUserServerName, int InviteUserServerID, int InviteUserChannelNumber, struct FString RoomUniqueID, int RoomNumber, struct FString RoomName, unsigned char RoomState, struct FString MapName, struct FString OwnerName, unsigned char GameMode, unsigned char WeaponLimit, unsigned char IsTeamBalance, struct FString Password, struct FString InviteCharName )
{
	static UFunction* prfReqRecvInviteGameRoom = 0;
	UBTTcpHandlerMed_execrfReqRecvInviteGameRoom_Parms parms;

	if ( !prfReqRecvInviteGameRoom )
		prfReqRecvInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvInviteGameRoom" );

	parms.InviteUserServerName = InviteUserServerName;
	parms.InviteUserServerID = InviteUserServerID;
	parms.InviteUserChannelNumber = InviteUserChannelNumber;
	parms.RoomUniqueID = RoomUniqueID;
	parms.RoomNumber = RoomNumber;
	parms.RoomName = RoomName;
	parms.RoomState = RoomState;
	parms.MapName = MapName;
	parms.OwnerName = OwnerName;
	parms.GameMode = GameMode;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Password = Password;
	parms.InviteCharName = InviteCharName;
	this->ProcessEvent ( prfReqRecvInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckInviteGameRoom ( int Result, unsigned char Answer, struct FString GuestCharName )
{
	static UFunction* prfAckInviteGameRoom = 0;
	UBTTcpHandlerMed_execrfAckInviteGameRoom_Parms parms;

	if ( !prfAckInviteGameRoom )
		prfAckInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckInviteGameRoom" );

	parms.Result = Result;
	parms.Answer = Answer;
	parms.GuestCharName = GuestCharName;
	this->ProcessEvent ( prfAckInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAutoChangedTeamUserList ( class TArray< int > UserID, class TArray< int > TeamNum )
{
	static UFunction* prfAckAutoChangedTeamUserList = 0;
	UBTTcpHandlerMed_execrfAckAutoChangedTeamUserList_Parms parms;

	if ( !prfAckAutoChangedTeamUserList )
		prfAckAutoChangedTeamUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAutoChangedTeamUserList" );

	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	this->ProcessEvent ( prfAckAutoChangedTeamUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetItemFromItemBox ( int Result, struct FString ErrMsg, int ItemIDChoose, int PartIDChoose, struct FBtrDouble BoxItemIdx, int BxoItemCount, unsigned char bHave, struct FBtrDouble ItemIdx, struct FBtrDouble UntilTime, int StackCount )
{
	static UFunction* prfAckGetItemFromItemBox = 0;
	UBTTcpHandlerMed_execrfAckGetItemFromItemBox_Parms parms;

	if ( !prfAckGetItemFromItemBox )
		prfAckGetItemFromItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetItemFromItemBox" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	parms.BoxItemIdx = BoxItemIdx;
	parms.BxoItemCount = BxoItemCount;
	parms.bHave = bHave;
	parms.ItemIdx = ItemIdx;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckGetItemFromItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckItemListInItemBox ( int Result, struct FString ErrMsg, struct FBtrDouble ItemUniqueID, int BoxItemID, class TArray< int > ItemID, class TArray< int > PartID )
{
	static UFunction* prfAckItemListInItemBox = 0;
	UBTTcpHandlerMed_execrfAckItemListInItemBox_Parms parms;

	if ( !prfAckItemListInItemBox )
		prfAckItemListInItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckItemListInItemBox" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemUniqueID = ItemUniqueID;
	parms.BoxItemID = BoxItemID;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( prfAckItemListInItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvForceFailedClientLoading ( int ErrCode )
{
	static UFunction* prfReqRecvForceFailedClientLoading = 0;
	UBTTcpHandlerMed_execrfReqRecvForceFailedClientLoading_Parms parms;

	if ( !prfReqRecvForceFailedClientLoading )
		prfReqRecvForceFailedClientLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvForceFailedClientLoading" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( prfReqRecvForceFailedClientLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckStartHolePunching ( int Result, struct FString ErrMsg, int GameType, int ReqStartUserID )
{
	static UFunction* prfAckStartHolePunching = 0;
	UBTTcpHandlerMed_execrfAckStartHolePunching_Parms parms;

	if ( !prfAckStartHolePunching )
		prfAckStartHolePunching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckStartHolePunching" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.GameType = GameType;
	parms.ReqStartUserID = ReqStartUserID;
	this->ProcessEvent ( prfAckStartHolePunching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::eventrfAckRegisterMyUdpInfo ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRegisterMyUdpInfo = 0;
	UBTTcpHandlerMed_eventrfAckRegisterMyUdpInfo_Parms parms;

	if ( !prfAckRegisterMyUdpInfo )
		prfAckRegisterMyUdpInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRegisterMyUdpInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRegisterMyUdpInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyMyCharInfoToRoomUser ( int Result, struct FString ErrMsg, int UID, struct FString UserName, int Grade, int TeamNum, unsigned char Statue, unsigned char IsHost, struct FString UserIP, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, unsigned char IsLookFor )
{
	static UFunction* prfAckNotifyMyCharInfoToRoomUser = 0;
	UBTTcpHandlerMed_execrfAckNotifyMyCharInfoToRoomUser_Parms parms;

	if ( !prfAckNotifyMyCharInfoToRoomUser )
		prfAckNotifyMyCharInfoToRoomUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyMyCharInfoToRoomUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UID = UID;
	parms.UserName = UserName;
	parms.Grade = Grade;
	parms.TeamNum = TeamNum;
	parms.Statue = Statue;
	parms.IsHost = IsHost;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.IsLookFor = IsLookFor;
	this->ProcessEvent ( prfAckNotifyMyCharInfoToRoomUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqNotifyDisconnectHostInLoading ( int Result, struct FString ErrMsg, int HostID )
{
	static UFunction* prfReqNotifyDisconnectHostInLoading = 0;
	UBTTcpHandlerMed_execrfReqNotifyDisconnectHostInLoading_Parms parms;

	if ( !prfReqNotifyDisconnectHostInLoading )
		prfReqNotifyDisconnectHostInLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqNotifyDisconnectHostInLoading" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.HostID = HostID;
	this->ProcessEvent ( prfReqNotifyDisconnectHostInLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvForceDisconnected_FromGM ( int Result, struct FString ErrMsg )
{
	static UFunction* prfReqRecvForceDisconnected_FromGM = 0;
	UBTTcpHandlerMed_execrfReqRecvForceDisconnected_FromGM_Parms parms;

	if ( !prfReqRecvForceDisconnected_FromGM )
		prfReqRecvForceDisconnected_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvForceDisconnected_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfReqRecvForceDisconnected_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvNotice_FromGM ( int Result, struct FString ErrMsg, class TArray< struct FString > NoticeMsg, unsigned char IsFromDB )
{
	static UFunction* prfReqRecvNotice_FromGM = 0;
	UBTTcpHandlerMed_execrfReqRecvNotice_FromGM_Parms parms;

	if ( !prfReqRecvNotice_FromGM )
		prfReqRecvNotice_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvNotice_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeMsg = NoticeMsg;
	parms.IsFromDB = IsFromDB;
	this->ProcessEvent ( prfReqRecvNotice_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckJoinClan ( int Result, struct FString ErrMsg, struct FString SpecificCharName, struct FString RealRecvCharName, unsigned char RealRecvCharClanGrade )
{
	static UFunction* prfAckJoinClan = 0;
	UBTTcpHandlerMed_execrfAckJoinClan_Parms parms;

	if ( !prfAckJoinClan )
		prfAckJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckJoinClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.SpecificCharName = SpecificCharName;
	parms.RealRecvCharName = RealRecvCharName;
	parms.RealRecvCharClanGrade = RealRecvCharClanGrade;
	this->ProcessEvent ( prfAckJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckExceedMaxUser (  )
{
	static UFunction* prfAckExceedMaxUser = 0;
	UBTTcpHandlerMed_execrfAckExceedMaxUser_Parms parms;

	if ( !prfAckExceedMaxUser )
		prfAckExceedMaxUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckExceedMaxUser" );

	this->ProcessEvent ( prfAckExceedMaxUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChannelUserListInGameRoom ( int Result, int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > CharName, class TArray< int > UserLevel, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< unsigned char > IsLookForClan, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserListInGameRoom = 0;
	UBTTcpHandlerMed_execrfAckChannelUserListInGameRoom_Parms parms;

	if ( !prfAckChannelUserListInGameRoom )
		prfAckChannelUserListInGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChannelUserListInGameRoom" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.CharName = CharName;
	parms.UserLevel = UserLevel;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.IsLookForClan = IsLookForClan;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserListInGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvDeleteFriend ( int Result, struct FString FromCharName )
{
	static UFunction* prfReqRecvDeleteFriend = 0;
	UBTTcpHandlerMed_execrfReqRecvDeleteFriend_Parms parms;

	if ( !prfReqRecvDeleteFriend )
		prfReqRecvDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvDeleteFriend" );

	parms.Result = Result;
	parms.FromCharName = FromCharName;
	this->ProcessEvent ( prfReqRecvDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckDeleteFriend ( int Result, class TArray< struct FString > FailedCharname )
{
	static UFunction* prfAckDeleteFriend = 0;
	UBTTcpHandlerMed_execrfAckDeleteFriend_Parms parms;

	if ( !prfAckDeleteFriend )
		prfAckDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckDeleteFriend" );

	parms.Result = Result;
	parms.FailedCharname = FailedCharname;
	this->ProcessEvent ( prfAckDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChatWispher ( int Result, struct FString ErrMsg, struct FString ToCharName )
{
	static UFunction* prfAckChatWispher = 0;
	UBTTcpHandlerMed_execrfAckChatWispher_Parms parms;

	if ( !prfAckChatWispher )
		prfAckChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChatWispher" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ToCharName = ToCharName;
	this->ProcessEvent ( prfAckChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTTcpHandlerMed_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqNotifyDurabilityZeroItem ( int Result, struct FString ErrMsg, int UserID, class TArray< struct FBtrDouble > ItemUniqueIDs, class TArray< int > ItemIDs, class TArray< int > ItemPartIDs, class TArray< unsigned char > ItemSlotPos )
{
	static UFunction* prfReqNotifyDurabilityZeroItem = 0;
	UBTTcpHandlerMed_execrfReqNotifyDurabilityZeroItem_Parms parms;

	if ( !prfReqNotifyDurabilityZeroItem )
		prfReqNotifyDurabilityZeroItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqNotifyDurabilityZeroItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.ItemUniqueIDs = ItemUniqueIDs;
	parms.ItemIDs = ItemIDs;
	parms.ItemPartIDs = ItemPartIDs;
	parms.ItemSlotPos = ItemSlotPos;
	this->ProcessEvent ( prfReqNotifyDurabilityZeroItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAcquirePromotionItems ( int UID, int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > ItemUniqueID, class TArray< int > ItemIDs, class TArray< int > PartIDs )
{
	static UFunction* prfAckAcquirePromotionItems = 0;
	UBTTcpHandlerMed_execrfAckAcquirePromotionItems_Parms parms;

	if ( !prfAckAcquirePromotionItems )
		prfAckAcquirePromotionItems = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAcquirePromotionItems" );

	parms.UID = UID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemUniqueID = ItemUniqueID;
	parms.ItemIDs = ItemIDs;
	parms.PartIDs = PartIDs;
	this->ProcessEvent ( prfAckAcquirePromotionItems, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqNotifyLevelUp ( int LevelUpUserID, int Level, int Exp, class TArray< int > ItemID, class TArray< int > PartID )
{
	static UFunction* prfReqNotifyLevelUp = 0;
	UBTTcpHandlerMed_execrfReqNotifyLevelUp_Parms parms;

	if ( !prfReqNotifyLevelUp )
		prfReqNotifyLevelUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqNotifyLevelUp" );

	parms.LevelUpUserID = LevelUpUserID;
	parms.Level = Level;
	parms.Exp = Exp;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( prfReqNotifyLevelUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckBlockUserList ( class TArray< struct FString > CharName )
{
	static UFunction* prfAckBlockUserList = 0;
	UBTTcpHandlerMed_execrfAckBlockUserList_Parms parms;

	if ( !prfAckBlockUserList )
		prfAckBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckBlockUserList" );

	parms.CharName = CharName;
	this->ProcessEvent ( prfAckBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRemoveBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRemoveBlockUserList = 0;
	UBTTcpHandlerMed_execrfAckRemoveBlockUserList_Parms parms;

	if ( !prfAckRemoveBlockUserList )
		prfAckRemoveBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRemoveBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRemoveBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckBlockUserListEnd (  )
{
	static UFunction* prfAckBlockUserListEnd = 0;
	UBTTcpHandlerMed_execrfAckBlockUserListEnd_Parms parms;

	if ( !prfAckBlockUserListEnd )
		prfAckBlockUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckBlockUserListEnd" );

	this->ProcessEvent ( prfAckBlockUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAddBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckAddBlockUserList = 0;
	UBTTcpHandlerMed_execrfAckAddBlockUserList_Parms parms;

	if ( !prfAckAddBlockUserList )
		prfAckAddBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAddBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckAddBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckBlockUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckBlockUserListStart = 0;
	UBTTcpHandlerMed_execrfAckBlockUserListStart_Parms parms;

	if ( !prfAckBlockUserListStart )
		prfAckBlockUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckBlockUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckBlockUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAdjustClanMemberGrade ( int Result, struct FString ErrMsg, struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckAdjustClanMemberGrade = 0;
	UBTTcpHandlerMed_execrfAckAdjustClanMemberGrade_Parms parms;

	if ( !prfAckAdjustClanMemberGrade )
		prfAckAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAdjustClanMemberGrade" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqClanCharPersonelIntro ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfReqClanCharPersonelIntro = 0;
	UBTTcpHandlerMed_execrfReqClanCharPersonelIntro_Parms parms;

	if ( !prfReqClanCharPersonelIntro )
		prfReqClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqClanCharPersonelIntro" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfReqClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRecvJoinClanResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvJoinClanResult = 0;
	UBTTcpHandlerMed_execrfAckRecvJoinClanResult_Parms parms;

	if ( !prfAckRecvJoinClanResult )
		prfAckRecvJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRecvJoinClanResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckJoinClanResult ( struct FString ClanName, unsigned char Permit, struct FString PermitCharName )
{
	static UFunction* prfAckJoinClanResult = 0;
	UBTTcpHandlerMed_execrfAckJoinClanResult_Parms parms;

	if ( !prfAckJoinClanResult )
		prfAckJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckJoinClanResult" );

	parms.ClanName = ClanName;
	parms.Permit = Permit;
	parms.PermitCharName = PermitCharName;
	this->ProcessEvent ( prfAckJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyClanSecession ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyClanSecession = 0;
	UBTTcpHandlerMed_execrfAckNotifyClanSecession_Parms parms;

	if ( !prfAckNotifyClanSecession )
		prfAckNotifyClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyClanSecession" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyNewClanMember ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyNewClanMember = 0;
	UBTTcpHandlerMed_execrfAckNotifyNewClanMember_Parms parms;

	if ( !prfAckNotifyNewClanMember )
		prfAckNotifyNewClanMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyNewClanMember" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyNewClanMember, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvJoinClan ( int UserIdx, struct FString CharName, struct FString Message )
{
	static UFunction* prfReqRecvJoinClan = 0;
	UBTTcpHandlerMed_execrfReqRecvJoinClan_Parms parms;

	if ( !prfReqRecvJoinClan )
		prfReqRecvJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvJoinClan" );

	parms.UserIdx = UserIdx;
	parms.CharName = CharName;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRecvClanInviteResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvClanInviteResult = 0;
	UBTTcpHandlerMed_execrfAckRecvClanInviteResult_Parms parms;

	if ( !prfAckRecvClanInviteResult )
		prfAckRecvClanInviteResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRecvClanInviteResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvClanInviteResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckInviteClanResult ( struct FString CharName, unsigned char Permit, struct FString ClanNm )
{
	static UFunction* prfAckInviteClanResult = 0;
	UBTTcpHandlerMed_execrfAckInviteClanResult_Parms parms;

	if ( !prfAckInviteClanResult )
		prfAckInviteClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckInviteClanResult" );

	parms.CharName = CharName;
	parms.Permit = Permit;
	parms.ClanNm = ClanNm;
	this->ProcessEvent ( prfAckInviteClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckInviteClan ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckInviteClan = 0;
	UBTTcpHandlerMed_execrfAckInviteClan_Parms parms;

	if ( !prfAckInviteClan )
		prfAckInviteClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckInviteClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckInviteClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTTcpHandlerMed_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetIsHostBlocking ( int Result, unsigned char Blocking )
{
	static UFunction* prfAckGetIsHostBlocking = 0;
	UBTTcpHandlerMed_execrfAckGetIsHostBlocking_Parms parms;

	if ( !prfAckGetIsHostBlocking )
		prfAckGetIsHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetIsHostBlocking" );

	parms.Result = Result;
	parms.Blocking = Blocking;
	this->ProcessEvent ( prfAckGetIsHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyHostBlocking ( int Result, unsigned char Blocking )
{
	static UFunction* prfAckNotifyHostBlocking = 0;
	UBTTcpHandlerMed_execrfAckNotifyHostBlocking_Parms parms;

	if ( !prfAckNotifyHostBlocking )
		prfAckNotifyHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyHostBlocking" );

	parms.Result = Result;
	parms.Blocking = Blocking;
	this->ProcessEvent ( prfAckNotifyHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetHolePunchingResult ( int Result, unsigned char Phrase, int InterventionUserID, unsigned char Intervention, class TArray< int > FailedUserIDs )
{
	static UFunction* prfAckGetHolePunchingResult = 0;
	UBTTcpHandlerMed_execrfAckGetHolePunchingResult_Parms parms;

	if ( !prfAckGetHolePunchingResult )
		prfAckGetHolePunchingResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetHolePunchingResult" );

	parms.Result = Result;
	parms.Phrase = Phrase;
	parms.InterventionUserID = InterventionUserID;
	parms.Intervention = Intervention;
	parms.FailedUserIDs = FailedUserIDs;
	this->ProcessEvent ( prfAckGetHolePunchingResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetUserHostPriorityPoint ( int Result, int UserID, int HostPriorityPoint )
{
	static UFunction* prfAckGetUserHostPriorityPoint = 0;
	UBTTcpHandlerMed_execrfAckGetUserHostPriorityPoint_Parms parms;

	if ( !prfAckGetUserHostPriorityPoint )
		prfAckGetUserHostPriorityPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetUserHostPriorityPoint" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.HostPriorityPoint = HostPriorityPoint;
	this->ProcessEvent ( prfAckGetUserHostPriorityPoint, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqNotifyRelayServerAddr ( struct FString RelayIP, int RelayPort )
{
	static UFunction* prfReqNotifyRelayServerAddr = 0;
	UBTTcpHandlerMed_execrfReqNotifyRelayServerAddr_Parms parms;

	if ( !prfReqNotifyRelayServerAddr )
		prfReqNotifyRelayServerAddr = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqNotifyRelayServerAddr" );

	parms.RelayIP = RelayIP;
	parms.RelayPort = RelayPort;
	this->ProcessEvent ( prfReqNotifyRelayServerAddr, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvForceDisconnectUDPFromHost ( int Result )
{
	static UFunction* prfReqRecvForceDisconnectUDPFromHost = 0;
	UBTTcpHandlerMed_execrfReqRecvForceDisconnectUDPFromHost_Parms parms;

	if ( !prfReqRecvForceDisconnectUDPFromHost )
		prfReqRecvForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvForceDisconnectUDPFromHost" );

	parms.Result = Result;
	this->ProcessEvent ( prfReqRecvForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckForceDisconnectUDPFromHost ( int Result )
{
	static UFunction* prfAckForceDisconnectUDPFromHost = 0;
	UBTTcpHandlerMed_execrfAckForceDisconnectUDPFromHost_Parms parms;

	if ( !prfAckForceDisconnectUDPFromHost )
		prfAckForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckForceDisconnectUDPFromHost" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqNotifyChangeRoomState ( unsigned char RoomState )
{
	static UFunction* prfReqNotifyChangeRoomState = 0;
	UBTTcpHandlerMed_execrfReqNotifyChangeRoomState_Parms parms;

	if ( !prfReqNotifyChangeRoomState )
		prfReqNotifyChangeRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqNotifyChangeRoomState" );

	parms.RoomState = RoomState;
	this->ProcessEvent ( prfReqNotifyChangeRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTTcpHandlerMed_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTTcpHandlerMed_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTTcpHandlerMed_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanPersonelIntro ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanPersonelIntro = 0;
	UBTTcpHandlerMed_execrfAckClanPersonelIntro_Parms parms;

	if ( !prfAckClanPersonelIntro )
		prfAckClanPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanChangeInfo ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanChangeInfo = 0;
	UBTTcpHandlerMed_execrfAckClanChangeInfo_Parms parms;

	if ( !prfAckClanChangeInfo )
		prfAckClanChangeInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanChangeInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanChangeInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanSecession ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanSecession = 0;
	UBTTcpHandlerMed_execrfAckClanSecession_Parms parms;

	if ( !prfAckClanSecession )
		prfAckClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanSecession" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanClose ( int Result, struct FString ErrMsg, struct FString ClanName )
{
	static UFunction* prfAckClanClose = 0;
	UBTTcpHandlerMed_execrfAckClanClose_Parms parms;

	if ( !prfAckClanClose )
		prfAckClanClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanClose" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	this->ProcessEvent ( prfAckClanClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanNews ( class TArray< struct FString > IssueDate, class TArray< unsigned char > IssueType, class TArray< struct FString > IssuedClanMember )
{
	static UFunction* prfAckClanNews = 0;
	UBTTcpHandlerMed_execrfAckClanNews_Parms parms;

	if ( !prfAckClanNews )
		prfAckClanNews = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanNews" );

	parms.IssueDate = IssueDate;
	parms.IssueType = IssueType;
	parms.IssuedClanMember = IssuedClanMember;
	this->ProcessEvent ( prfAckClanNews, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanUserListEnd (  )
{
	static UFunction* prfAckClanUserListEnd = 0;
	UBTTcpHandlerMed_execrfAckClanUserListEnd_Parms parms;

	if ( !prfAckClanUserListEnd )
		prfAckClanUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanUserListEnd" );

	this->ProcessEvent ( prfAckClanUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanUserList ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< int > ClanWinCnt, class TArray< int > ClanLoseCnt, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > DudeId )
{
	static UFunction* prfAckClanUserList = 0;
	UBTTcpHandlerMed_execrfAckClanUserList_Parms parms;

	if ( !prfAckClanUserList )
		prfAckClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWinCnt = ClanWinCnt;
	parms.ClanLoseCnt = ClanLoseCnt;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.DudeId = DudeId;
	this->ProcessEvent ( prfAckClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanUserListStart = 0;
	UBTTcpHandlerMed_execrfAckClanUserListStart_Parms parms;

	if ( !prfAckClanUserListStart )
		prfAckClanUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckClanInfo ( struct FClanInfo stClanInfo )
{
	static UFunction* prfAckClanInfo = 0;
	UBTTcpHandlerMed_execrfAckClanInfo_Parms parms;

	if ( !prfAckClanInfo )
		prfAckClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckClanInfo" );

	parms.stClanInfo = stClanInfo;
	this->ProcessEvent ( prfAckClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckDupCheckClanName ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckDupCheckClanName = 0;
	UBTTcpHandlerMed_execrfAckDupCheckClanName_Parms parms;

	if ( !prfAckDupCheckClanName )
		prfAckDupCheckClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckDupCheckClanName" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckDupCheckClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckCreateClan ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckCreateClan = 0;
	UBTTcpHandlerMed_execrfAckCreateClan_Parms parms;

	if ( !prfAckCreateClan )
		prfAckCreateClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckCreateClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckCreateClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetServerTime ( struct FBtrDouble ServerTime, struct FString ClientIP )
{
	static UFunction* prfAckGetServerTime = 0;
	UBTTcpHandlerMed_execrfAckGetServerTime_Parms parms;

	if ( !prfAckGetServerTime )
		prfAckGetServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetServerTime" );

	parms.ServerTime = ServerTime;
	parms.ClientIP = ClientIP;
	this->ProcessEvent ( prfAckGetServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckMyMoney ( int Result, struct FString ErrMsg, int Point, int Cash )
{
	static UFunction* prfAckMyMoney = 0;
	UBTTcpHandlerMed_execrfAckMyMoney_Parms parms;

	if ( !prfAckMyMoney )
		prfAckMyMoney = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckMyMoney" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Point = Point;
	parms.Cash = Cash;
	this->ProcessEvent ( prfAckMyMoney, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckBanUser ( int GameNum, int UID, int BanUID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBanUser = 0;
	UBTTcpHandlerMed_execrfAckBanUser_Parms parms;

	if ( !prfAckBanUser )
		prfAckBanUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckBanUser" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.BanUID = BanUID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBanUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyExpiredSkillIDs ( int UserID, class TArray< struct FBtrDouble > ExpiredSkillUniqueIDs, class TArray< int > ExpiredSkillIDs, int Result, struct FString ErrMsg, class TArray< unsigned char > ExpiredSkillSlotPositions )
{
	static UFunction* prfAckNotifyExpiredSkillIDs = 0;
	UBTTcpHandlerMed_execrfAckNotifyExpiredSkillIDs_Parms parms;

	if ( !prfAckNotifyExpiredSkillIDs )
		prfAckNotifyExpiredSkillIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyExpiredSkillIDs" );

	parms.UserID = UserID;
	parms.ExpiredSkillUniqueIDs = ExpiredSkillUniqueIDs;
	parms.ExpiredSkillIDs = ExpiredSkillIDs;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ExpiredSkillSlotPositions = ExpiredSkillSlotPositions;
	this->ProcessEvent ( prfAckNotifyExpiredSkillIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyExpiredItemIDs ( int UserID, class TArray< struct FBtrDouble > ExpiredItemUniqueIDs, class TArray< int > ExpiredItemIDs, class TArray< int > ExpiredItemPartIDs, class TArray< unsigned char > ExpiredItemSlotPos, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckNotifyExpiredItemIDs = 0;
	UBTTcpHandlerMed_execrfAckNotifyExpiredItemIDs_Parms parms;

	if ( !prfAckNotifyExpiredItemIDs )
		prfAckNotifyExpiredItemIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyExpiredItemIDs" );

	parms.UserID = UserID;
	parms.ExpiredItemUniqueIDs = ExpiredItemUniqueIDs;
	parms.ExpiredItemIDs = ExpiredItemIDs;
	parms.ExpiredItemPartIDs = ExpiredItemPartIDs;
	parms.ExpiredItemSlotPos = ExpiredItemSlotPos;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckNotifyExpiredItemIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetAttachedItemFromMemo ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int ItemID )
{
	static UFunction* prfAckGetAttachedItemFromMemo = 0;
	UBTTcpHandlerMed_execrfAckGetAttachedItemFromMemo_Parms parms;

	if ( !prfAckGetAttachedItemFromMemo )
		prfAckGetAttachedItemFromMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetAttachedItemFromMemo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckGetAttachedItemFromMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::eventrfAckDeleteMailAll ( int Result, unsigned char MailType, int Count )
{
	static UFunction* prfAckDeleteMailAll = 0;
	UBTTcpHandlerMed_eventrfAckDeleteMailAll_Parms parms;

	if ( !prfAckDeleteMailAll )
		prfAckDeleteMailAll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckDeleteMailAll" );

	parms.Result = Result;
	parms.MailType = MailType;
	parms.Count = Count;
	this->ProcessEvent ( prfAckDeleteMailAll, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::eventrfAckDelMemo ( int Result, struct FString ErrMsg, class TArray< int > FailedMemoID )
{
	static UFunction* prfAckDelMemo = 0;
	UBTTcpHandlerMed_eventrfAckDelMemo_Parms parms;

	if ( !prfAckDelMemo )
		prfAckDelMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckDelMemo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.FailedMemoID = FailedMemoID;
	this->ProcessEvent ( prfAckDelMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckSendMemo ( class TArray< struct FString > CnamesToFail, class TArray< int > ResultArray )
{
	static UFunction* prfAckSendMemo = 0;
	UBTTcpHandlerMed_execrfAckSendMemo_Parms parms;

	if ( !prfAckSendMemo )
		prfAckSendMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckSendMemo" );

	parms.CnamesToFail = CnamesToFail;
	parms.ResultArray = ResultArray;
	this->ProcessEvent ( prfAckSendMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAuctionBidding ( int Result, struct FString ErrMsg, int PointRemain )
{
	static UFunction* prfAckAuctionBidding = 0;
	UBTTcpHandlerMed_execrfAckAuctionBidding_Parms parms;

	if ( !prfAckAuctionBidding )
		prfAckAuctionBidding = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAuctionBidding" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionBidding, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAuctionTradeHistory ( int Result, struct FString ErrMsg, int ItemID, int PartID, class TArray< struct FString > SellerCharNm, class TArray< int > DamageDegree, class TArray< int > Price )
{
	static UFunction* prfAckAuctionTradeHistory = 0;
	UBTTcpHandlerMed_execrfAckAuctionTradeHistory_Parms parms;

	if ( !prfAckAuctionTradeHistory )
		prfAckAuctionTradeHistory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAuctionTradeHistory" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	parms.SellerCharNm = SellerCharNm;
	parms.DamageDegree = DamageDegree;
	parms.Price = Price;
	this->ProcessEvent ( prfAckAuctionTradeHistory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckSendGift ( int Result, struct FString ErrMsg, int PointRemain, int CashRemain )
{
	static UFunction* prfAckSendGift = 0;
	UBTTcpHandlerMed_execrfAckSendGift_Parms parms;

	if ( !prfAckSendGift )
		prfAckSendGift = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckSendGift" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	this->ProcessEvent ( prfAckSendGift, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRecvMemo ( struct FString cnameFrom, unsigned char MemoType )
{
	static UFunction* prfAckRecvMemo = 0;
	UBTTcpHandlerMed_execrfAckRecvMemo_Parms parms;

	if ( !prfAckRecvMemo )
		prfAckRecvMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRecvMemo" );

	parms.cnameFrom = cnameFrom;
	parms.MemoType = MemoType;
	this->ProcessEvent ( prfAckRecvMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckReadMemo ( struct FString cnameFrom, struct FString Text, struct FString dateRecv, struct FBtrDouble ItemUID )
{
	static UFunction* prfAckReadMemo = 0;
	UBTTcpHandlerMed_execrfAckReadMemo_Parms parms;

	if ( !prfAckReadMemo )
		prfAckReadMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckReadMemo" );

	parms.cnameFrom = cnameFrom;
	parms.Text = Text;
	parms.dateRecv = dateRecv;
	parms.ItemUID = ItemUID;
	this->ProcessEvent ( prfAckReadMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckEndMemoList (  )
{
	static UFunction* prfAckEndMemoList = 0;
	UBTTcpHandlerMed_execrfAckEndMemoList_Parms parms;

	if ( !prfAckEndMemoList )
		prfAckEndMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckEndMemoList" );

	this->ProcessEvent ( prfAckEndMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckTestDouble ( struct FBtrDouble vDouble, class TArray< struct FBtrDouble > vDoubles )
{
	static UFunction* prfAckTestDouble = 0;
	UBTTcpHandlerMed_execrfAckTestDouble_Parms parms;

	if ( !prfAckTestDouble )
		prfAckTestDouble = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckTestDouble" );

	parms.vDouble = vDouble;
	parms.vDoubles = vDoubles;
	this->ProcessEvent ( prfAckTestDouble, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckMemoList ( class TArray< int > MemoIdx, class TArray< struct FString > cnameFrom, class TArray< struct FString > dateRecv, class TArray< struct FString > Text, class TArray< unsigned char > Status, class TArray< int > UntilExpire, class TArray< struct FBtrDouble > ItemUID, class TArray< int > ItemID, class TArray< unsigned char > MsgType, class TArray< int > ItemPartID )
{
	static UFunction* prfAckMemoList = 0;
	UBTTcpHandlerMed_execrfAckMemoList_Parms parms;

	if ( !prfAckMemoList )
		prfAckMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckMemoList" );

	parms.MemoIdx = MemoIdx;
	parms.cnameFrom = cnameFrom;
	parms.dateRecv = dateRecv;
	parms.Text = Text;
	parms.Status = Status;
	parms.UntilExpire = UntilExpire;
	parms.ItemUID = ItemUID;
	parms.ItemID = ItemID;
	parms.MsgType = MsgType;
	parms.ItemPartID = ItemPartID;
	this->ProcessEvent ( prfAckMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckStartMemoList ( int Result, struct FString ErrMsg, unsigned char Type, int TotalCount )
{
	static UFunction* prfAckStartMemoList = 0;
	UBTTcpHandlerMed_execrfAckStartMemoList_Parms parms;

	if ( !prfAckStartMemoList )
		prfAckStartMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckStartMemoList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Type = Type;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckStartMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckFriendListEnd (  )
{
	static UFunction* prfAckFriendListEnd = 0;
	UBTTcpHandlerMed_execrfAckFriendListEnd_Parms parms;

	if ( !prfAckFriendListEnd )
		prfAckFriendListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckFriendListEnd" );

	this->ProcessEvent ( prfAckFriendListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckFriendList ( class TArray< struct FString > FriendName, class TArray< unsigned char > IsLogOn, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > LevelMarkID, class TArray< int > ClanLevel, class TArray< int > Level, class TArray< unsigned char > IsLookForClan )
{
	static UFunction* prfAckFriendList = 0;
	UBTTcpHandlerMed_execrfAckFriendList_Parms parms;

	if ( !prfAckFriendList )
		prfAckFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckFriendList" );

	parms.FriendName = FriendName;
	parms.IsLogOn = IsLogOn;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.LevelMarkID = LevelMarkID;
	parms.ClanLevel = ClanLevel;
	parms.Level = Level;
	parms.IsLookForClan = IsLookForClan;
	this->ProcessEvent ( prfAckFriendList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckFriendListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckFriendListStart = 0;
	UBTTcpHandlerMed_execrfAckFriendListStart_Parms parms;

	if ( !prfAckFriendListStart )
		prfAckFriendListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckFriendListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckFriendListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqCompleteFriendInvite ( struct FString CharnameToBeInvited, unsigned char IsPermit )
{
	static UFunction* prfReqCompleteFriendInvite = 0;
	UBTTcpHandlerMed_execrfReqCompleteFriendInvite_Parms parms;

	if ( !prfReqCompleteFriendInvite )
		prfReqCompleteFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqCompleteFriendInvite" );

	parms.CharnameToBeInvited = CharnameToBeInvited;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( prfReqCompleteFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckConfirmFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmFriendInvite = 0;
	UBTTcpHandlerMed_execrfAckConfirmFriendInvite_Parms parms;

	if ( !prfAckConfirmFriendInvite )
		prfAckConfirmFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckConfirmFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvFriendInvite ( int ReqUserID, struct FString ReqCharname, struct FString InviteMsg )
{
	static UFunction* prfReqRecvFriendInvite = 0;
	UBTTcpHandlerMed_execrfReqRecvFriendInvite_Parms parms;

	if ( !prfReqRecvFriendInvite )
		prfReqRecvFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqCharname = ReqCharname;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckSendFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSendFriendInvite = 0;
	UBTTcpHandlerMed_execrfAckSendFriendInvite_Parms parms;

	if ( !prfAckSendFriendInvite )
		prfAckSendFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckSendFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSendFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckNotifyLoadingState ( int Result, int UserID, unsigned char LoadingState )
{
	static UFunction* prfAckNotifyLoadingState = 0;
	UBTTcpHandlerMed_execrfAckNotifyLoadingState_Parms parms;

	if ( !prfAckNotifyLoadingState )
		prfAckNotifyLoadingState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckNotifyLoadingState" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.LoadingState = LoadingState;
	this->ProcessEvent ( prfAckNotifyLoadingState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckFailedStartGame ( int Result, struct FString ErrMsg, unsigned char IsHost, int FailedUserID, int LoadingStep )
{
	static UFunction* prfAckFailedStartGame = 0;
	UBTTcpHandlerMed_execrfAckFailedStartGame_Parms parms;

	if ( !prfAckFailedStartGame )
		prfAckFailedStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckFailedStartGame" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsHost = IsHost;
	parms.FailedUserID = FailedUserID;
	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( prfAckFailedStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckSuccessStartGame ( int Result, struct FString ErrMsg, unsigned char IsHost, struct FString HostIP, int HostPort, int LoadingStep )
{
	static UFunction* prfAckSuccessStartGame = 0;
	UBTTcpHandlerMed_execrfAckSuccessStartGame_Parms parms;

	if ( !prfAckSuccessStartGame )
		prfAckSuccessStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckSuccessStartGame" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsHost = IsHost;
	parms.HostIP = HostIP;
	parms.HostPort = HostPort;
	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( prfAckSuccessStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckHash ( int Result, struct FString Error )
{
	static UFunction* prfAckHash = 0;
	UBTTcpHandlerMed_execrfAckHash_Parms parms;

	if ( !prfAckHash )
		prfAckHash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckHash" );

	parms.Result = Result;
	parms.Error = Error;
	this->ProcessEvent ( prfAckHash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqForceLogoutByOwner (  )
{
	static UFunction* prfReqForceLogoutByOwner = 0;
	UBTTcpHandlerMed_execrfReqForceLogoutByOwner_Parms parms;

	if ( !prfReqForceLogoutByOwner )
		prfReqForceLogoutByOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqForceLogoutByOwner" );

	this->ProcessEvent ( prfReqForceLogoutByOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::ForceLogout_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pForceLogout_OnOK = 0;
	UBTTcpHandlerMed_execForceLogout_OnOK_Parms parms;

	if ( !pForceLogout_OnOK )
		pForceLogout_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.ForceLogout_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pForceLogout_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckSellShopItemInfo ( int Result, struct FString ErrMsg, struct FBtrDouble UniqueItemID, int SellPoint, int CurPoint, int AfterPoint )
{
	static UFunction* prfAckSellShopItemInfo = 0;
	UBTTcpHandlerMed_execrfAckSellShopItemInfo_Parms parms;

	if ( !prfAckSellShopItemInfo )
		prfAckSellShopItemInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckSellShopItemInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.SellPoint = SellPoint;
	parms.CurPoint = CurPoint;
	parms.AfterPoint = AfterPoint;
	this->ProcessEvent ( prfAckSellShopItemInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRecvChatWispher ( struct FString CharnameFrom, struct FString Message )
{
	static UFunction* prfReqRecvChatWispher = 0;
	UBTTcpHandlerMed_execrfReqRecvChatWispher_Parms parms;

	if ( !prfReqRecvChatWispher )
		prfReqRecvChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRecvChatWispher" );

	parms.CharnameFrom = CharnameFrom;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckServerTime ( int Time )
{
	static UFunction* prfAckServerTime = 0;
	UBTTcpHandlerMed_execrfAckServerTime_Parms parms;

	if ( !prfAckServerTime )
		prfAckServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckServerTime" );

	parms.Time = Time;
	this->ProcessEvent ( prfAckServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGameOverEnd ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameOverEnd = 0;
	UBTTcpHandlerMed_execrfAckGameOverEnd_Parms parms;

	if ( !prfAckGameOverEnd )
		prfAckGameOverEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGameOverEnd" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameOverEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRepairItem ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, int RepairCost, class TArray< int > DamageDegree )
{
	static UFunction* prfAckRepairItem = 0;
	UBTTcpHandlerMed_execrfAckRepairItem_Parms parms;

	if ( !prfAckRepairItem )
		prfAckRepairItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRepairItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	parms.DamageDegree = DamageDegree;
	this->ProcessEvent ( prfAckRepairItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRepairCost ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > RepairCost )
{
	static UFunction* prfAckRepairCost = 0;
	UBTTcpHandlerMed_execrfAckRepairCost_Parms parms;

	if ( !prfAckRepairCost )
		prfAckRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRepairCost" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( prfAckRepairCost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::eventrfAckUpdateWeaponDurability ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > Durability, class TArray< unsigned char > IsDestroy, class TArray< struct FBtrDouble > FailedWeaponUniqueID )
{
	static UFunction* prfAckUpdateWeaponDurability = 0;
	UBTTcpHandlerMed_eventrfAckUpdateWeaponDurability_Parms parms;

	if ( !prfAckUpdateWeaponDurability )
		prfAckUpdateWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckUpdateWeaponDurability" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.Durability = Durability;
	parms.IsDestroy = IsDestroy;
	parms.FailedWeaponUniqueID = FailedWeaponUniqueID;
	this->ProcessEvent ( prfAckUpdateWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckEntryQSlotUniqueIDList ( int UserNum, class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWUniqueID, class TArray< struct FBtrDouble > PistolUniqueID, class TArray< struct FBtrDouble > TW1UniqueID, class TArray< struct FBtrDouble > TW2UniqueID )
{
	static UFunction* prfAckEntryQSlotUniqueIDList = 0;
	UBTTcpHandlerMed_execrfAckEntryQSlotUniqueIDList_Parms parms;

	if ( !prfAckEntryQSlotUniqueIDList )
		prfAckEntryQSlotUniqueIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckEntryQSlotUniqueIDList" );

	parms.UserNum = UserNum;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWUniqueID = MWUniqueID;
	parms.PistolUniqueID = PistolUniqueID;
	parms.TW1UniqueID = TW1UniqueID;
	parms.TW2UniqueID = TW2UniqueID;
	this->ProcessEvent ( prfAckEntryQSlotUniqueIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckEntryQSlotIDList ( int UserNum, class TArray< unsigned char > QSlotDispOrder, class TArray< int > MWItemID, class TArray< int > MWPartID, class TArray< int > MWPaintID, class TArray< int > PistolItemID, class TArray< int > PistolPartID, class TArray< int > PistolPaintID, class TArray< int > TWItemID1, class TArray< int > TWItemID2, class TArray< int > Skill1ID, class TArray< int > Skill2ID, class TArray< int > Skill3ID, class TArray< int > Skill4ID )
{
	static UFunction* prfAckEntryQSlotIDList = 0;
	UBTTcpHandlerMed_execrfAckEntryQSlotIDList_Parms parms;

	if ( !prfAckEntryQSlotIDList )
		prfAckEntryQSlotIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckEntryQSlotIDList" );

	parms.UserNum = UserNum;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWItemID = MWItemID;
	parms.MWPartID = MWPartID;
	parms.MWPaintID = MWPaintID;
	parms.PistolItemID = PistolItemID;
	parms.PistolPartID = PistolPartID;
	parms.PistolPaintID = PistolPaintID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1ID = Skill1ID;
	parms.Skill2ID = Skill2ID;
	parms.Skill3ID = Skill3ID;
	parms.Skill4ID = Skill4ID;
	this->ProcessEvent ( prfAckEntryQSlotIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckUpdateQSlot ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUpdateQSlot = 0;
	UBTTcpHandlerMed_execrfAckUpdateQSlot_Parms parms;

	if ( !prfAckUpdateQSlot )
		prfAckUpdateQSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckUpdateQSlot" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUpdateQSlot, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckQSlotList ( int Result, struct FString ErrMsg, class TArray< int > QSlotID, class TArray< struct FString > QSlotName, class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWItemID, class TArray< struct FBtrDouble > PistolItemID, class TArray< struct FBtrDouble > TWItemID1, class TArray< struct FBtrDouble > TWItemID2, class TArray< int > Skill1, class TArray< int > Skill2, class TArray< int > Skill3, class TArray< int > Skill4 )
{
	static UFunction* prfAckQSlotList = 0;
	UBTTcpHandlerMed_execrfAckQSlotList_Parms parms;

	if ( !prfAckQSlotList )
		prfAckQSlotList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckQSlotList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.QSlotID = QSlotID;
	parms.QSlotName = QSlotName;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWItemID = MWItemID;
	parms.PistolItemID = PistolItemID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1 = Skill1;
	parms.Skill2 = Skill2;
	parms.Skill3 = Skill3;
	parms.Skill4 = Skill4;
	this->ProcessEvent ( prfAckQSlotList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckModifyWeapon ( int Result, struct FString ErrMsg, struct FBtrDouble UniqueID, int AddPartID, int PaintID, int Point, int Cash )
{
	static UFunction* prfAckModifyWeapon = 0;
	UBTTcpHandlerMed_execrfAckModifyWeapon_Parms parms;

	if ( !prfAckModifyWeapon )
		prfAckModifyWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckModifyWeapon" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueID = UniqueID;
	parms.AddPartID = AddPartID;
	parms.PaintID = PaintID;
	parms.Point = Point;
	parms.Cash = Cash;
	this->ProcessEvent ( prfAckModifyWeapon, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckSellShopItem ( int Result, struct FString ErrMsg, int PointRemain, int CashRemain, int Count )
{
	static UFunction* prfAckSellShopItem = 0;
	UBTTcpHandlerMed_execrfAckSellShopItem_Parms parms;

	if ( !prfAckSellShopItem )
		prfAckSellShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckSellShopItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	parms.Count = Count;
	this->ProcessEvent ( prfAckSellShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckBuyShopItem ( int ItemCount, class TArray< int > Result, class TArray< int > BoughtItemTypeID, class TArray< struct FBtrDouble > BoughtItemUniqueID, class TArray< int > BoughtPartID, class TArray< struct FBtrDouble > BoughtUntilTIme, class TArray< int > BoughtStackCnt, int PointRemain, int CashRemain )
{
	static UFunction* prfAckBuyShopItem = 0;
	UBTTcpHandlerMed_execrfAckBuyShopItem_Parms parms;

	if ( !prfAckBuyShopItem )
		prfAckBuyShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckBuyShopItem" );

	parms.ItemCount = ItemCount;
	parms.Result = Result;
	parms.BoughtItemTypeID = BoughtItemTypeID;
	parms.BoughtItemUniqueID = BoughtItemUniqueID;
	parms.BoughtPartID = BoughtPartID;
	parms.BoughtUntilTIme = BoughtUntilTIme;
	parms.BoughtStackCnt = BoughtStackCnt;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	this->ProcessEvent ( prfAckBuyShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckShopItemListEnd (  )
{
	static UFunction* prfAckShopItemListEnd = 0;
	UBTTcpHandlerMed_execrfAckShopItemListEnd_Parms parms;

	if ( !prfAckShopItemListEnd )
		prfAckShopItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckShopItemListEnd" );

	this->ProcessEvent ( prfAckShopItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckShopItemList ( class TArray< int > ItemID )
{
	static UFunction* prfAckShopItemList = 0;
	UBTTcpHandlerMed_execrfAckShopItemList_Parms parms;

	if ( !prfAckShopItemList )
		prfAckShopItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckShopItemList" );

	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckShopItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckShopItemListStart ( int Count )
{
	static UFunction* prfAckShopItemListStart = 0;
	UBTTcpHandlerMed_execrfAckShopItemListStart_Parms parms;

	if ( !prfAckShopItemListStart )
		prfAckShopItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckShopItemListStart" );

	parms.Count = Count;
	this->ProcessEvent ( prfAckShopItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqConfirmSkillChanged (  )
{
	static UFunction* prfReqConfirmSkillChanged = 0;
	UBTTcpHandlerMed_execrfReqConfirmSkillChanged_Parms parms;

	if ( !prfReqConfirmSkillChanged )
		prfReqConfirmSkillChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqConfirmSkillChanged" );

	this->ProcessEvent ( prfReqConfirmSkillChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckEquipSkill ( int ChangedNewSkillID, int ChangedNewSkillUniqueID, unsigned char ChangedNewSlotPosition, int ChangedOldSkillID, int ChangedOldSkillUniqueID, unsigned char ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipSkill = 0;
	UBTTcpHandlerMed_execrfAckEquipSkill_Parms parms;

	if ( !prfAckEquipSkill )
		prfAckEquipSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckEquipSkill" );

	parms.ChangedNewSkillID = ChangedNewSkillID;
	parms.ChangedNewSkillUniqueID = ChangedNewSkillUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldSkillID = ChangedOldSkillID;
	parms.ChangedOldSkillUniqueID = ChangedOldSkillUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipSkill, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckEntrySkillList ( class TArray< int > UserIDs, class TArray< int > SkillIDs, class TArray< int > SlotPositions, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEntrySkillList = 0;
	UBTTcpHandlerMed_execrfAckEntrySkillList_Parms parms;

	if ( !prfAckEntrySkillList )
		prfAckEntrySkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckEntrySkillList" );

	parms.UserIDs = UserIDs;
	parms.SkillIDs = SkillIDs;
	parms.SlotPositions = SlotPositions;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEntrySkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckUserSkillListEnd (  )
{
	static UFunction* prfAckUserSkillListEnd = 0;
	UBTTcpHandlerMed_execrfAckUserSkillListEnd_Parms parms;

	if ( !prfAckUserSkillListEnd )
		prfAckUserSkillListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckUserSkillListEnd" );

	this->ProcessEvent ( prfAckUserSkillListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckUserSkillList ( class TArray< int > UniqueSkillID, class TArray< int > SkillID, class TArray< struct FBtrDouble > UntilTime, class TArray< unsigned char > SlotPosition )
{
	static UFunction* prfAckUserSkillList = 0;
	UBTTcpHandlerMed_execrfAckUserSkillList_Parms parms;

	if ( !prfAckUserSkillList )
		prfAckUserSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckUserSkillList" );

	parms.UniqueSkillID = UniqueSkillID;
	parms.SkillID = SkillID;
	parms.UntilTime = UntilTime;
	parms.SlotPosition = SlotPosition;
	this->ProcessEvent ( prfAckUserSkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckUserSkillListStart ( int Count, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUserSkillListStart = 0;
	UBTTcpHandlerMed_execrfAckUserSkillListStart_Parms parms;

	if ( !prfAckUserSkillListStart )
		prfAckUserSkillListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckUserSkillListStart" );

	parms.Count = Count;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUserSkillListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetBootyChoose ( int Result, struct FString ErrMsg, unsigned char GiveType, struct FBtrDouble ItemUniqueNumber, int ItemID, int PartID, unsigned char ItemType, struct FBtrDouble UntilTime, int StackCount, int PaintID )
{
	static UFunction* prfAckGetBootyChoose = 0;
	UBTTcpHandlerMed_execrfAckGetBootyChoose_Parms parms;

	if ( !prfAckGetBootyChoose )
		prfAckGetBootyChoose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetBootyChoose" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.GiveType = GiveType;
	parms.ItemUniqueNumber = ItemUniqueNumber;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	parms.ItemType = ItemType;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	parms.PaintID = PaintID;
	this->ProcessEvent ( prfAckGetBootyChoose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGetBooty ( int Result, struct FString ErrMsg, class TArray< int > PrizeWinUserID, class TArray< int > BootyItemID, class TArray< int > BootyPartsID )
{
	static UFunction* prfAckGetBooty = 0;
	UBTTcpHandlerMed_execrfAckGetBooty_Parms parms;

	if ( !prfAckGetBooty )
		prfAckGetBooty = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGetBooty" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PrizeWinUserID = PrizeWinUserID;
	parms.BootyItemID = BootyItemID;
	parms.BootyPartsID = BootyPartsID;
	this->ProcessEvent ( prfAckGetBooty, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckForceGameOver ( int UserID, int GameRoomNumber, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckForceGameOver = 0;
	UBTTcpHandlerMed_execrfAckForceGameOver_Parms parms;

	if ( !prfAckForceGameOver )
		prfAckForceGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckForceGameOver" );

	parms.UserID = UserID;
	parms.GameRoomNumber = GameRoomNumber;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckForceGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckEntryItemList ( class TArray< int > UserIDs, class TArray< int > ItemIDs, class TArray< int > SlotPositions, class TArray< int > AddPartsID, class TArray< struct FBtrDouble > UniqueID, class TArray< int > PaintID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEntryItemList = 0;
	UBTTcpHandlerMed_execrfAckEntryItemList_Parms parms;

	if ( !prfAckEntryItemList )
		prfAckEntryItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckEntryItemList" );

	parms.UserIDs = UserIDs;
	parms.ItemIDs = ItemIDs;
	parms.SlotPositions = SlotPositions;
	parms.AddPartsID = AddPartsID;
	parms.UniqueID = UniqueID;
	parms.PaintID = PaintID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEntryItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRegisterOtherUdpInfo ( int UID, struct FString IP, int Port, unsigned char NatType, unsigned char Intervention, struct FString HostInnerIP, int HostInnerPort )
{
	static UFunction* prfAckRegisterOtherUdpInfo = 0;
	UBTTcpHandlerMed_execrfAckRegisterOtherUdpInfo_Parms parms;

	if ( !prfAckRegisterOtherUdpInfo )
		prfAckRegisterOtherUdpInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRegisterOtherUdpInfo" );

	parms.UID = UID;
	parms.IP = IP;
	parms.Port = Port;
	parms.NatType = NatType;
	parms.Intervention = Intervention;
	parms.HostInnerIP = HostInnerIP;
	parms.HostInnerPort = HostInnerPort;
	this->ProcessEvent ( prfAckRegisterOtherUdpInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqForceNatTypeSetting ( int NatType )
{
	static UFunction* prfReqForceNatTypeSetting = 0;
	UBTTcpHandlerMed_execrfReqForceNatTypeSetting_Parms parms;

	if ( !prfReqForceNatTypeSetting )
		prfReqForceNatTypeSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqForceNatTypeSetting" );

	parms.NatType = NatType;
	this->ProcessEvent ( prfReqForceNatTypeSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqStartNatDiag ( struct FString Server1Addr, int Server1Port, struct FString Server2Addr, int Server2Port )
{
	static UFunction* prfReqStartNatDiag = 0;
	UBTTcpHandlerMed_execrfReqStartNatDiag_Parms parms;

	if ( !prfReqStartNatDiag )
		prfReqStartNatDiag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqStartNatDiag" );

	parms.Server1Addr = Server1Addr;
	parms.Server1Port = Server1Port;
	parms.Server2Addr = Server2Addr;
	parms.Server2Port = Server2Port;
	this->ProcessEvent ( prfReqStartNatDiag, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChangeUserState ( int Result, struct FString ErrMsg, class TArray< int > UserIDs, class TArray< unsigned char > Positions, class TArray< int > Numbers, class TArray< unsigned char > OldStates, class TArray< unsigned char > NewStates )
{
	static UFunction* prfAckChangeUserState = 0;
	UBTTcpHandlerMed_execrfAckChangeUserState_Parms parms;

	if ( !prfAckChangeUserState )
		prfAckChangeUserState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChangeUserState" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserIDs = UserIDs;
	parms.Positions = Positions;
	parms.Numbers = Numbers;
	parms.OldStates = OldStates;
	parms.NewStates = NewStates;
	this->ProcessEvent ( prfAckChangeUserState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqExteriorRoomState ( int RoomNumber, unsigned char RoomState )
{
	static UFunction* prfReqExteriorRoomState = 0;
	UBTTcpHandlerMed_execrfReqExteriorRoomState_Parms parms;

	if ( !prfReqExteriorRoomState )
		prfReqExteriorRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqExteriorRoomState" );

	parms.RoomNumber = RoomNumber;
	parms.RoomState = RoomState;
	this->ProcessEvent ( prfReqExteriorRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqExteriorRoomUserCount ( int RoomNumber, int RoomUserCount )
{
	static UFunction* prfReqExteriorRoomUserCount = 0;
	UBTTcpHandlerMed_execrfReqExteriorRoomUserCount_Parms parms;

	if ( !prfReqExteriorRoomUserCount )
		prfReqExteriorRoomUserCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqExteriorRoomUserCount" );

	parms.RoomNumber = RoomNumber;
	parms.RoomUserCount = RoomUserCount;
	this->ProcessEvent ( prfReqExteriorRoomUserCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqExteriorRoomInfo ( int SP, int RoomNumber, unsigned char IsPW, struct FString RoomName, struct FString MapName, struct FString ModeName, int MapNum, int ModeNum, unsigned char IsTeamBalance, int MaxUserCount, int RoomUserCount, unsigned char RoomState, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum )
{
	static UFunction* prfReqExteriorRoomInfo = 0;
	UBTTcpHandlerMed_execrfReqExteriorRoomInfo_Parms parms;

	if ( !prfReqExteriorRoomInfo )
		prfReqExteriorRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqExteriorRoomInfo" );

	parms.SP = SP;
	parms.RoomNumber = RoomNumber;
	parms.IsPW = IsPW;
	parms.RoomName = RoomName;
	parms.MapName = MapName;
	parms.ModeName = ModeName;
	parms.MapNum = MapNum;
	parms.ModeNum = ModeNum;
	parms.IsTeamBalance = IsTeamBalance;
	parms.MaxUserCount = MaxUserCount;
	parms.RoomUserCount = RoomUserCount;
	parms.RoomState = RoomState;
	parms.BotDifficult = BotDifficult;
	parms.WeaponLimit = WeaponLimit;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfReqExteriorRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckCharInfo ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FCharInfo stCharInfo, unsigned char InClanRank, int ClanLevel )
{
	static UFunction* prfAckCharInfo = 0;
	UBTTcpHandlerMed_execrfAckCharInfo_Parms parms;

	if ( !prfAckCharInfo )
		prfAckCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.stCharInfo = stCharInfo;
	parms.InClanRank = InClanRank;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckConfirmItemChanged ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmItemChanged = 0;
	UBTTcpHandlerMed_execrfAckConfirmItemChanged_Parms parms;

	if ( !prfAckConfirmItemChanged )
		prfAckConfirmItemChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckConfirmItemChanged" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmItemChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckEquipItem ( int ChangedNewItemID, struct FBtrDouble ChangedNewUniqueID, int ChangedNewSlotPosition, int ChangedOldItemID, struct FBtrDouble ChangedOldUniqueID, int ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipItem = 0;
	UBTTcpHandlerMed_execrfAckEquipItem_Parms parms;

	if ( !prfAckEquipItem )
		prfAckEquipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckEquipItem" );

	parms.ChangedNewItemID = ChangedNewItemID;
	parms.ChangedNewUniqueID = ChangedNewUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldItemID = ChangedOldItemID;
	parms.ChangedOldUniqueID = ChangedOldUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChangeRoomSetting ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckChangeRoomSetting = 0;
	UBTTcpHandlerMed_execrfAckChangeRoomSetting_Parms parms;

	if ( !prfAckChangeRoomSetting )
		prfAckChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChangeRoomSetting" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckUpdateScore ( class TArray< int > UserIDs, class TArray< struct FString > NickNames, class TArray< unsigned char > TeamIDs, class TArray< int > Scores, class TArray< int > Kills, class TArray< int > Assists, class TArray< int > Deaths, class TArray< int > EXPs, class TArray< int > EXPBonuses, class TArray< int > Points, class TArray< int > PointBonuses, class TArray< int > TeamScores, class TArray< int > BonusOwnerID, class TArray< int > BonusID )
{
	static UFunction* prfAckUpdateScore = 0;
	UBTTcpHandlerMed_execrfAckUpdateScore_Parms parms;

	if ( !prfAckUpdateScore )
		prfAckUpdateScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckUpdateScore" );

	parms.UserIDs = UserIDs;
	parms.NickNames = NickNames;
	parms.TeamIDs = TeamIDs;
	parms.Scores = Scores;
	parms.Kills = Kills;
	parms.Assists = Assists;
	parms.Deaths = Deaths;
	parms.EXPs = EXPs;
	parms.EXPBonuses = EXPBonuses;
	parms.Points = Points;
	parms.PointBonuses = PointBonuses;
	parms.TeamScores = TeamScores;
	parms.BonusOwnerID = BonusOwnerID;
	parms.BonusID = BonusID;
	this->ProcessEvent ( prfAckUpdateScore, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckConnectGame ( int UserID, int Result )
{
	static UFunction* prfAckConnectGame = 0;
	UBTTcpHandlerMed_execrfAckConnectGame_Parms parms;

	if ( !prfAckConnectGame )
		prfAckConnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckConnectGame" );

	parms.UserID = UserID;
	parms.Result = Result;
	this->ProcessEvent ( prfAckConnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckMyEquipedQSlotList ( class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWUniqueID, class TArray< int > MWItemID, class TArray< int > MWPartID, class TArray< int > MWPaintID, class TArray< struct FBtrDouble > PistolUniqueID, class TArray< int > PistolItemID, class TArray< int > PistolPartID, class TArray< int > PistolPaintID, class TArray< struct FBtrDouble > TW1UniqueID, class TArray< int > TWItemID1, class TArray< struct FBtrDouble > TW2UniqueID, class TArray< int > TWItemID2, class TArray< int > Skill1ID, class TArray< int > Skill2ID, class TArray< int > Skill3ID, class TArray< int > Skill4ID, int Result )
{
	static UFunction* prfAckMyEquipedQSlotList = 0;
	UBTTcpHandlerMed_execrfAckMyEquipedQSlotList_Parms parms;

	if ( !prfAckMyEquipedQSlotList )
		prfAckMyEquipedQSlotList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckMyEquipedQSlotList" );

	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWUniqueID = MWUniqueID;
	parms.MWItemID = MWItemID;
	parms.MWPartID = MWPartID;
	parms.MWPaintID = MWPaintID;
	parms.PistolUniqueID = PistolUniqueID;
	parms.PistolItemID = PistolItemID;
	parms.PistolPartID = PistolPartID;
	parms.PistolPaintID = PistolPaintID;
	parms.TW1UniqueID = TW1UniqueID;
	parms.TWItemID1 = TWItemID1;
	parms.TW2UniqueID = TW2UniqueID;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1ID = Skill1ID;
	parms.Skill2ID = Skill2ID;
	parms.Skill3ID = Skill3ID;
	parms.Skill4ID = Skill4ID;
	parms.Result = Result;
	this->ProcessEvent ( prfAckMyEquipedQSlotList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckMyEquipedSkillList ( class TArray< int > SkillIDs, class TArray< int > SlotPositions, int Result )
{
	static UFunction* prfAckMyEquipedSkillList = 0;
	UBTTcpHandlerMed_execrfAckMyEquipedSkillList_Parms parms;

	if ( !prfAckMyEquipedSkillList )
		prfAckMyEquipedSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckMyEquipedSkillList" );

	parms.SkillIDs = SkillIDs;
	parms.SlotPositions = SlotPositions;
	parms.Result = Result;
	this->ProcessEvent ( prfAckMyEquipedSkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckMyEquipedItemList ( class TArray< int > ItemIDs, class TArray< int > SlotPositions, class TArray< int > AddPartsID, class TArray< int > PaintID, class TArray< struct FBtrDouble > UniqueID, int Result )
{
	static UFunction* prfAckMyEquipedItemList = 0;
	UBTTcpHandlerMed_execrfAckMyEquipedItemList_Parms parms;

	if ( !prfAckMyEquipedItemList )
		prfAckMyEquipedItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckMyEquipedItemList" );

	parms.ItemIDs = ItemIDs;
	parms.SlotPositions = SlotPositions;
	parms.AddPartsID = AddPartsID;
	parms.PaintID = PaintID;
	parms.UniqueID = UniqueID;
	parms.Result = Result;
	this->ProcessEvent ( prfAckMyEquipedItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChangeNewGuest ( struct FString HostIP )
{
	static UFunction* prfAckChangeNewGuest = 0;
	UBTTcpHandlerMed_execrfAckChangeNewGuest_Parms parms;

	if ( !prfAckChangeNewGuest )
		prfAckChangeNewGuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChangeNewGuest" );

	parms.HostIP = HostIP;
	this->ProcessEvent ( prfAckChangeNewGuest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChangeHost ( unsigned char ClientNum )
{
	static UFunction* prfAckChangeHost = 0;
	UBTTcpHandlerMed_execrfAckChangeHost_Parms parms;

	if ( !prfAckChangeHost )
		prfAckChangeHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChangeHost" );

	parms.ClientNum = ClientNum;
	this->ProcessEvent ( prfAckChangeHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChangeRoomOwner ( int GameNum, int OldOwner, int NewOwner, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeRoomOwner = 0;
	UBTTcpHandlerMed_execrfAckChangeRoomOwner_Parms parms;

	if ( !prfAckChangeRoomOwner )
		prfAckChangeRoomOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChangeRoomOwner" );

	parms.GameNum = GameNum;
	parms.OldOwner = OldOwner;
	parms.NewOwner = NewOwner;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeRoomOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckDisconnectGame ( int Result, int DisconnectUserID, struct FString DisconnectUserName )
{
	static UFunction* prfAckDisconnectGame = 0;
	UBTTcpHandlerMed_execrfAckDisconnectGame_Parms parms;

	if ( !prfAckDisconnectGame )
		prfAckDisconnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckDisconnectGame" );

	parms.Result = Result;
	parms.DisconnectUserID = DisconnectUserID;
	parms.DisconnectUserName = DisconnectUserName;
	this->ProcessEvent ( prfAckDisconnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRelayServerOff (  )
{
	static UFunction* prfReqRelayServerOff = 0;
	UBTTcpHandlerMed_execrfReqRelayServerOff_Parms parms;

	if ( !prfReqRelayServerOff )
		prfReqRelayServerOff = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRelayServerOff" );

	this->ProcessEvent ( prfReqRelayServerOff, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfReqRelayServerOn ( struct FString RelayServerIP, int RelayServerPortNum )
{
	static UFunction* prfReqRelayServerOn = 0;
	UBTTcpHandlerMed_execrfReqRelayServerOn_Parms parms;

	if ( !prfReqRelayServerOn )
		prfReqRelayServerOn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfReqRelayServerOn" );

	parms.RelayServerIP = RelayServerIP;
	parms.RelayServerPortNum = RelayServerPortNum;
	this->ProcessEvent ( prfReqRelayServerOn, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGameRoomInfo ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckGameRoomInfo = 0;
	UBTTcpHandlerMed_execrfAckGameRoomInfo_Parms parms;

	if ( !prfAckGameRoomInfo )
		prfAckGameRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGameRoomInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckGameRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGameOver ( int UID, int GameRoomNumber, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameOver = 0;
	UBTTcpHandlerMed_execrfAckGameOver_Parms parms;

	if ( !prfAckGameOver )
		prfAckGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGameOver" );

	parms.UID = UID;
	parms.GameRoomNumber = GameRoomNumber;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChangeGameMode ( int GameNum, int UID, struct FString GameMode, unsigned char GameModeNum, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeGameMode = 0;
	UBTTcpHandlerMed_execrfAckChangeGameMode_Parms parms;

	if ( !prfAckChangeGameMode )
		prfAckChangeGameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChangeGameMode" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.GameMode = GameMode;
	parms.GameModeNum = GameModeNum;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeGameMode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckSelectMap ( int GameNum, int UID, struct FString MapName, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSelectMap = 0;
	UBTTcpHandlerMed_execrfAckSelectMap_Parms parms;

	if ( !prfAckSelectMap )
		prfAckSelectMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckSelectMap" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.MapName = MapName;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSelectMap, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckIsGameRoomPlaying ( int GameRoomNum, unsigned char IsPlaying )
{
	static UFunction* prfAckIsGameRoomPlaying = 0;
	UBTTcpHandlerMed_execrfAckIsGameRoomPlaying_Parms parms;

	if ( !prfAckIsGameRoomPlaying )
		prfAckIsGameRoomPlaying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckIsGameRoomPlaying" );

	parms.GameRoomNum = GameRoomNum;
	parms.IsPlaying = IsPlaying;
	this->ProcessEvent ( prfAckIsGameRoomPlaying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGameRoomDestroy ( int GameRoomNum )
{
	static UFunction* prfAckGameRoomDestroy = 0;
	UBTTcpHandlerMed_execrfAckGameRoomDestroy_Parms parms;

	if ( !prfAckGameRoomDestroy )
		prfAckGameRoomDestroy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGameRoomDestroy" );

	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckGameRoomDestroy, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckStartGame ( int GameNumber, int ClientsCount, int StartSeed, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckStartGame = 0;
	UBTTcpHandlerMed_execrfAckStartGame_Parms parms;

	if ( !prfAckStartGame )
		prfAckStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckStartGame" );

	parms.GameNumber = GameNumber;
	parms.ClientsCount = ClientsCount;
	parms.StartSeed = StartSeed;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckGameHostInfo ( int GameNumber, struct FString UserID, struct FString IP, int Port, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameHostInfo = 0;
	UBTTcpHandlerMed_execrfAckGameHostInfo_Parms parms;

	if ( !prfAckGameHostInfo )
		prfAckGameHostInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckGameHostInfo" );

	parms.GameNumber = GameNumber;
	parms.UserID = UserID;
	parms.IP = IP;
	parms.Port = Port;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameHostInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChangeTeam ( int GameNumber, struct FString UserID, int UID, int TeamNum, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeTeam = 0;
	UBTTcpHandlerMed_execrfAckChangeTeam_Parms parms;

	if ( !prfAckChangeTeam )
		prfAckChangeTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChangeTeam" );

	parms.GameNumber = GameNumber;
	parms.UserID = UserID;
	parms.UID = UID;
	parms.TeamNum = TeamNum;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeTeam, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckCreateGameRoom ( int Result, struct FString ErrMsg, int UserID, struct FString RoomOwnerIP, struct FGameRoomInfo NetRoomInfo )
{
	static UFunction* prfAckCreateGameRoom = 0;
	UBTTcpHandlerMed_execrfAckCreateGameRoom_Parms parms;

	if ( !prfAckCreateGameRoom )
		prfAckCreateGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckCreateGameRoom" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.RoomOwnerIP = RoomOwnerIP;
	parms.NetRoomInfo = NetRoomInfo;
	this->ProcessEvent ( prfAckCreateGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckLeaveRoom ( int Num, int UID, struct FString UserID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckLeaveRoom = 0;
	UBTTcpHandlerMed_execrfAckLeaveRoom_Parms parms;

	if ( !prfAckLeaveRoom )
		prfAckLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckLeaveRoom" );

	parms.Num = Num;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRoomUserList ( class TArray< int > UID, class TArray< struct FString > UserName, class TArray< int > Grade, class TArray< int > TeamNum, class TArray< unsigned char > Statue, class TArray< unsigned char > IsHost, class TArray< struct FString > UserIP, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< unsigned char > IsLookingFor, class TArray< int > GMUID, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckRoomUserList = 0;
	UBTTcpHandlerMed_execrfAckRoomUserList_Parms parms;

	if ( !prfAckRoomUserList )
		prfAckRoomUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRoomUserList" );

	parms.UID = UID;
	parms.UserName = UserName;
	parms.Grade = Grade;
	parms.TeamNum = TeamNum;
	parms.Statue = Statue;
	parms.IsHost = IsHost;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.IsLookingFor = IsLookingFor;
	parms.GMUID = GMUID;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckRoomUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckEnterRoom ( int GameNum, int OwnerID, int UID, struct FString UserID, int TeamNum, int Grade, struct FString UserIP, struct FString ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterRoom = 0;
	UBTTcpHandlerMed_execrfAckEnterRoom_Parms parms;

	if ( !prfAckEnterRoom )
		prfAckEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckEnterRoom" );

	parms.GameNum = GameNum;
	parms.OwnerID = OwnerID;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.Grade = Grade;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.Clan_Mark_Pattern = Clan_Mark_Pattern;
	parms.Clan_Mark_BG = Clan_Mark_BG;
	parms.Clan_Mark_BL = Clan_Mark_BL;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChatClan ( struct FString CharName, struct FString Message, int Result )
{
	static UFunction* prfAckChatClan = 0;
	UBTTcpHandlerMed_execrfAckChatClan_Parms parms;

	if ( !prfAckChatClan )
		prfAckChatClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChatClan" );

	parms.CharName = CharName;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChatNormal ( int id, struct FString Sender, struct FString Message, int Result )
{
	static UFunction* prfAckChatNormal = 0;
	UBTTcpHandlerMed_execrfAckChatNormal_Parms parms;

	if ( !prfAckChatNormal )
		prfAckChatNormal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChatNormal" );

	parms.id = id;
	parms.Sender = Sender;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatNormal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRoomListEnd (  )
{
	static UFunction* prfAckRoomListEnd = 0;
	UBTTcpHandlerMed_execrfAckRoomListEnd_Parms parms;

	if ( !prfAckRoomListEnd )
		prfAckRoomListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRoomListEnd" );

	this->ProcessEvent ( prfAckRoomListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRoomList ( class TArray< int > GameNum, class TArray< struct FString > Title, class TArray< struct FString > MapName, class TArray< int > MapNum, class TArray< unsigned char > UserCount, class TArray< unsigned char > MaxCount, class TArray< struct FString > ModeName, class TArray< int > ModeNum, class TArray< unsigned char > WeaponLimit, class TArray< unsigned char > IsHardCore, class TArray< unsigned char > Status, class TArray< struct FString > RoomOwnerIP, class TArray< int > GameMinute, class TArray< struct FString > RoomOwnerName, class TArray< unsigned char > IsSpecial, class TArray< unsigned char > IsPassword, class TArray< unsigned char > BotDifficult, class TArray< unsigned char > BotModeUserTeamNum )
{
	static UFunction* prfAckRoomList = 0;
	UBTTcpHandlerMed_execrfAckRoomList_Parms parms;

	if ( !prfAckRoomList )
		prfAckRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRoomList" );

	parms.GameNum = GameNum;
	parms.Title = Title;
	parms.MapName = MapName;
	parms.MapNum = MapNum;
	parms.UserCount = UserCount;
	parms.MaxCount = MaxCount;
	parms.ModeName = ModeName;
	parms.ModeNum = ModeNum;
	parms.WeaponLimit = WeaponLimit;
	parms.IsHardCore = IsHardCore;
	parms.Status = Status;
	parms.RoomOwnerIP = RoomOwnerIP;
	parms.GameMinute = GameMinute;
	parms.RoomOwnerName = RoomOwnerName;
	parms.IsSpecial = IsSpecial;
	parms.IsPassword = IsPassword;
	parms.BotDifficult = BotDifficult;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfAckRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckRoomListStart ( int Result, int TotalCount, int Count, int StartIndex )
{
	static UFunction* prfAckRoomListStart = 0;
	UBTTcpHandlerMed_execrfAckRoomListStart_Parms parms;

	if ( !prfAckRoomListStart )
		prfAckRoomListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckRoomListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	this->ProcessEvent ( prfAckRoomListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChannelUserList ( int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > UserID, class TArray< int > UserLevels, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, int Result, struct FString ErrMsg, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserList = 0;
	UBTTcpHandlerMed_execrfAckChannelUserList_Parms parms;

	if ( !prfAckChannelUserList )
		prfAckChannelUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChannelUserList" );

	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.UserLevels = UserLevels;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckLogin2 ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FBtrDouble CurServerTime, int CharDBID, unsigned char IsGM )
{
	static UFunction* prfAckLogin2 = 0;
	UBTTcpHandlerMed_execrfAckLogin2_Parms parms;

	if ( !prfAckLogin2 )
		prfAckLogin2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckLogin2" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.CurServerTime = CurServerTime;
	parms.CharDBID = CharDBID;
	parms.IsGM = IsGM;
	this->ProcessEvent ( prfAckLogin2, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckLeaveChannel ( int Result, struct FString UserID, int UID )
{
	static UFunction* prfAckLeaveChannel = 0;
	UBTTcpHandlerMed_execrfAckLeaveChannel_Parms parms;

	if ( !prfAckLeaveChannel )
		prfAckLeaveChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckLeaveChannel" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.UID = UID;
	this->ProcessEvent ( prfAckLeaveChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTTcpHandlerMed_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckChannelList ( class TArray< int > id, class TArray< struct FString > Title, class TArray< int > CurUser, class TArray< int > MaxUser )
{
	static UFunction* prfAckChannelList = 0;
	UBTTcpHandlerMed_execrfAckChannelList_Parms parms;

	if ( !prfAckChannelList )
		prfAckChannelList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckChannelList" );

	parms.id = id;
	parms.Title = Title;
	parms.CurUser = CurUser;
	parms.MaxUser = MaxUser;
	this->ProcessEvent ( prfAckChannelList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAuctionInstantlyBuying ( int Result, struct FString ErrMsg, int PointRemain )
{
	static UFunction* prfAckAuctionInstantlyBuying = 0;
	UBTTcpHandlerMed_execrfAckAuctionInstantlyBuying_Parms parms;

	if ( !prfAckAuctionInstantlyBuying )
		prfAckAuctionInstantlyBuying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAuctionInstantlyBuying" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionInstantlyBuying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAuctionMyItemCancel ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckAuctionMyItemCancel = 0;
	UBTTcpHandlerMed_execrfAckAuctionMyItemCancel_Parms parms;

	if ( !prfAckAuctionMyItemCancel )
		prfAckAuctionMyItemCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAuctionMyItemCancel" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckAuctionMyItemCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAuctionItemListEnd ( unsigned char Section )
{
	static UFunction* prfAckAuctionItemListEnd = 0;
	UBTTcpHandlerMed_execrfAckAuctionItemListEnd_Parms parms;

	if ( !prfAckAuctionItemListEnd )
		prfAckAuctionItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAuctionItemListEnd" );

	parms.Section = Section;
	this->ProcessEvent ( prfAckAuctionItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAuctionItemList ( unsigned char Section, class TArray< int > UniqueIDs, class TArray< int > ItemIDs, class TArray< int > AddPartsIDs, class TArray< struct FBtrDouble > UntilTimes, class TArray< int > BiddingPrices, class TArray< int > InstantlyByuingPrices, class TArray< int > ItemDamageds, class TArray< struct FString > HighestBidderNames, class TArray< struct FString > SellerNames, class TArray< int > ItemCount )
{
	static UFunction* prfAckAuctionItemList = 0;
	UBTTcpHandlerMed_execrfAckAuctionItemList_Parms parms;

	if ( !prfAckAuctionItemList )
		prfAckAuctionItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAuctionItemList" );

	parms.Section = Section;
	parms.UniqueIDs = UniqueIDs;
	parms.ItemIDs = ItemIDs;
	parms.AddPartsIDs = AddPartsIDs;
	parms.UntilTimes = UntilTimes;
	parms.BiddingPrices = BiddingPrices;
	parms.InstantlyByuingPrices = InstantlyByuingPrices;
	parms.ItemDamageds = ItemDamageds;
	parms.HighestBidderNames = HighestBidderNames;
	parms.SellerNames = SellerNames;
	parms.ItemCount = ItemCount;
	this->ProcessEvent ( prfAckAuctionItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAuctionItemListStart ( int Result, struct FString ErrMsg, unsigned char Section, int PageNum, int Count )
{
	static UFunction* prfAckAuctionItemListStart = 0;
	UBTTcpHandlerMed_execrfAckAuctionItemListStart_Parms parms;

	if ( !prfAckAuctionItemListStart )
		prfAckAuctionItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAuctionItemListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Section = Section;
	parms.PageNum = PageNum;
	parms.Count = Count;
	this->ProcessEvent ( prfAckAuctionItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAuctionItemListCount ( int Result, struct FString ErrMsg, unsigned char Section, unsigned char Classfy, int ItemType, int ItemGrade, int Count )
{
	static UFunction* prfAckAuctionItemListCount = 0;
	UBTTcpHandlerMed_execrfAckAuctionItemListCount_Parms parms;

	if ( !prfAckAuctionItemListCount )
		prfAckAuctionItemListCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAuctionItemListCount" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Section = Section;
	parms.Classfy = Classfy;
	parms.ItemType = ItemType;
	parms.ItemGrade = ItemGrade;
	parms.Count = Count;
	this->ProcessEvent ( prfAckAuctionItemListCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckAuctionMyItemRegister ( int Result, struct FString ErrMsg, int BeginPrice, int BuyPrice, int GuarantyPoint, int PointRemain )
{
	static UFunction* prfAckAuctionMyItemRegister = 0;
	UBTTcpHandlerMed_execrfAckAuctionMyItemRegister_Parms parms;

	if ( !prfAckAuctionMyItemRegister )
		prfAckAuctionMyItemRegister = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckAuctionMyItemRegister" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.BeginPrice = BeginPrice;
	parms.BuyPrice = BuyPrice;
	parms.GuarantyPoint = GuarantyPoint;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionMyItemRegister, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckItemListEnd (  )
{
	static UFunction* prfAckItemListEnd = 0;
	UBTTcpHandlerMed_execrfAckItemListEnd_Parms parms;

	if ( !prfAckItemListEnd )
		prfAckItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckItemListEnd" );

	this->ProcessEvent ( prfAckItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckItemList ( class TArray< struct FBtrDouble > UniqueID, class TArray< int > ItemID, class TArray< int > ItemType, class TArray< int > Durability, class TArray< struct FBtrDouble > UntilTime, class TArray< int > SlotPosition, class TArray< int > AddPartsID, class TArray< int > DamageDegree, class TArray< unsigned char > ItemState, class TArray< int > StackCount, class TArray< int > PaintID, class TArray< int > TradeCount )
{
	static UFunction* prfAckItemList = 0;
	UBTTcpHandlerMed_execrfAckItemList_Parms parms;

	if ( !prfAckItemList )
		prfAckItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckItemList" );

	parms.UniqueID = UniqueID;
	parms.ItemID = ItemID;
	parms.ItemType = ItemType;
	parms.Durability = Durability;
	parms.UntilTime = UntilTime;
	parms.SlotPosition = SlotPosition;
	parms.AddPartsID = AddPartsID;
	parms.DamageDegree = DamageDegree;
	parms.ItemState = ItemState;
	parms.StackCount = StackCount;
	parms.PaintID = PaintID;
	parms.TradeCount = TradeCount;
	this->ProcessEvent ( prfAckItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckItemListStart ( int Count, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckItemListStart = 0;
	UBTTcpHandlerMed_execrfAckItemListStart_Parms parms;

	if ( !prfAckItemListStart )
		prfAckItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckItemListStart" );

	parms.Count = Count;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTTcpHandlerMed::rfAckLogin ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FString ClanName, struct FCharInfo btCharInfo )
{
	static UFunction* prfAckLogin = 0;
	UBTTcpHandlerMed_execrfAckLogin_Parms parms;

	if ( !prfAckLogin )
		prfAckLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.rfAckLogin" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.btCharInfo = btCharInfo;
	this->ProcessEvent ( prfAckLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTTcpHandlerMed::OnError ( int ErrCode )
{
	static UFunction* pOnError = 0;
	UBTTcpHandlerMed_execOnError_Parms parms;

	if ( !pOnError )
		pOnError = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.OnError" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnError, &parms, NULL );

}*/

/*void UBTTcpHandlerMed::OnClose ( int ErrCode )
{
	static UFunction* pOnClose = 0;
	UBTTcpHandlerMed_execOnClose_Parms parms;

	if ( !pOnClose )
		pOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.OnClose" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnClose, &parms, NULL );

}*/

/*void UBTTcpHandlerMed::OnConnect ( int ErrCode )
{
	static UFunction* pOnConnect = 0;
	UBTTcpHandlerMed_execOnConnect_Parms parms;

	if ( !pOnConnect )
		pOnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTcpHandlerMed.OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnConnect, &parms, NULL );

}*/

/*void UBTLabelNoticeHK::Internal_OnRendered ( class UCanvas* C )
{
	static UFunction* pInternal_OnRendered = 0;
	UBTLabelNoticeHK_execInternal_OnRendered_Parms parms;

	if ( !pInternal_OnRendered )
		pInternal_OnRendered = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTLabelNoticeHK.Internal_OnRendered" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnRendered, &parms, NULL );

}*/

/*void UBTLabelNoticeHK::SetMainMenu ( class UBTNetMainMenu* MM )
{
	static UFunction* pSetMainMenu = 0;
	UBTLabelNoticeHK_execSetMainMenu_Parms parms;

	if ( !pSetMainMenu )
		pSetMainMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTLabelNoticeHK.SetMainMenu" );

	parms.MM = MM;
	this->ProcessEvent ( pSetMainMenu, &parms, NULL );

}*/

/*void UBTLabelNoticeHK::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTLabelNoticeHK_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTLabelNoticeHK.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTLabelNoticeHK::OnNextNotice ( struct FString NextNotice )
{
	static UFunction* pOnNextNotice = 0;
	UBTLabelNoticeHK_execOnNextNotice_Parms parms;

	if ( !pOnNextNotice )
		pOnNextNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTLabelNoticeHK.OnNextNotice" );

	parms.NextNotice = NextNotice;
	this->ProcessEvent ( pOnNextNotice, &parms, NULL );

}*/

/*void UBTTPAASHK::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTTPAASHK_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTPAASHK.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTTPAASHK::SetMainMenu ( class UBTNetMainMenu* MM )
{
	static UFunction* pSetMainMenu = 0;
	UBTTPAASHK_execSetMainMenu_Parms parms;

	if ( !pSetMainMenu )
		pSetMainMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTPAASHK.SetMainMenu" );

	parms.MM = MM;
	this->ProcessEvent ( pSetMainMenu, &parms, NULL );

}*/

/*bool UBTTPAASHK::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTTPAASHK_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTPAASHK.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTTPAASHK::OnNextAAS ( struct FString NextAAS )
{
	static UFunction* pOnNextAAS = 0;
	UBTTPAASHK_execOnNextAAS_Parms parms;

	if ( !pOnNextAAS )
		pOnNextAAS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTTPAASHK.OnNextAAS" );

	parms.NextAAS = NextAAS;
	this->ProcessEvent ( pOnNextAAS, &parms, NULL );

}*/

/*bool UBTPageRoomLobby_TcpLogin::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageRoomLobby_TcpLogin_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TcpLogin.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TcpLogin::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageRoomLobby_TcpLogin_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TcpLogin.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageRoomLobby_TcpLogin::OnConnect ( int ErrCode )
{
	static UFunction* pOnConnect = 0;
	UBTPageRoomLobby_TcpLogin_execOnConnect_Parms parms;

	if ( !pOnConnect )
		pOnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TcpLogin.OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnConnect, &parms, NULL );

}*/

/*bool UBTPageRoomLobby_TCP::rfNotifyClanLevelup ( struct FString ClanName, int Levelup )
{
	static UFunction* prfNotifyClanLevelup = 0;
	UBTPageRoomLobby_TCP_execrfNotifyClanLevelup_Parms parms;

	if ( !prfNotifyClanLevelup )
		prfNotifyClanLevelup = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfNotifyClanLevelup" );

	parms.ClanName = ClanName;
	parms.Levelup = Levelup;
	this->ProcessEvent ( prfNotifyClanLevelup, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfNotifyNewClanName ( struct FString New_NickName )
{
	static UFunction* prfNotifyNewClanName = 0;
	UBTPageRoomLobby_TCP_execrfNotifyNewClanName_Parms parms;

	if ( !prfNotifyNewClanName )
		prfNotifyNewClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfNotifyNewClanName" );

	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfNotifyNewNickName ( int Community_Type, struct FString Old_NickName, struct FString New_NickName )
{
	static UFunction* prfNotifyNewNickName = 0;
	UBTPageRoomLobby_TCP_execrfNotifyNewNickName_Parms parms;

	if ( !prfNotifyNewNickName )
		prfNotifyNewNickName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfNotifyNewNickName" );

	parms.Community_Type = Community_Type;
	parms.Old_NickName = Old_NickName;
	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewNickName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGetRankingInfoListEnd (  )
{
	static UFunction* prfAckGetRankingInfoListEnd = 0;
	UBTPageRoomLobby_TCP_execrfAckGetRankingInfoListEnd_Parms parms;

	if ( !prfAckGetRankingInfoListEnd )
		prfAckGetRankingInfoListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGetRankingInfoListEnd" );

	this->ProcessEvent ( prfAckGetRankingInfoListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGetRankingInfoList ( int Result, unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckGetRankingInfoList = 0;
	UBTPageRoomLobby_TCP_execrfAckGetRankingInfoList_Parms parms;

	if ( !prfAckGetRankingInfoList )
		prfAckGetRankingInfoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGetRankingInfoList" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.CharName = CharName;
	parms.CharLevel = CharLevel;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Ranking_Accum = Ranking_Accum;
	parms.Ranking_Accum_Prev = Ranking_Accum_Prev;
	parms.Ranking_Accum_Exp = Ranking_Accum_Exp;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckGetRankingInfoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGetRankingInfoListStart ( int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount )
{
	static UFunction* prfAckGetRankingInfoListStart = 0;
	UBTPageRoomLobby_TCP_execrfAckGetRankingInfoListStart_Parms parms;

	if ( !prfAckGetRankingInfoListStart )
		prfAckGetRankingInfoListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGetRankingInfoListStart" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckGetRankingInfoListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb )
{
	static UFunction* prfAckCharDetailInfo = 0;
	UBTPageRoomLobby_TCP_execrfAckCharDetailInfo_Parms parms;

	if ( !prfAckCharDetailInfo )
		prfAckCharDetailInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckCharDetailInfo" );

	parms.MaxSerial = MaxSerial;
	parms.MaxScore = MaxScore;
	parms.MaxKill = MaxKill;
	parms.MaxAssist = MaxAssist;
	parms.Serial3 = Serial3;
	parms.Serial5 = Serial5;
	parms.Serial7 = Serial7;
	parms.Serial10 = Serial10;
	parms.Serial15 = Serial15;
	parms.AR = AR;
	parms.SMG = SMG;
	parms.SR = SR;
	parms.SW = SW;
	parms.Melee = Melee;
	parms.Grenade = Grenade;
	parms.FlashBang = FlashBang;
	parms.Foot = Foot;
	parms.AT4 = AT4;
	parms.MG = MG;
	parms.Fire = Fire;
	parms.RPG7 = RPG7;
	parms.TimeBomb = TimeBomb;
	parms.IcendiaryBomb = IcendiaryBomb;
	parms.ClusterBomb = ClusterBomb;
	parms.ByChopper = ByChopper;
	parms.Artillery = Artillery;
	parms.KillChopper = KillChopper;
	parms.FirstKill = FirstKill;
	parms.LastKill = LastKill;
	parms.AllKill = AllKill;
	parms.Dominate = Dominate;
	parms.InstallBomb = InstallBomb;
	parms.DefuseBomb = DefuseBomb;
	this->ProcessEvent ( prfAckCharDetailInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckFriendPosition ( int Result, struct FString TargetCharName, unsigned char ServerType, struct FString fServername, struct FString fServerShortName, struct FString fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, struct FString ChannelNickName, int GameRoomNum )
{
	static UFunction* prfAckFriendPosition = 0;
	UBTPageRoomLobby_TCP_execrfAckFriendPosition_Parms parms;

	if ( !prfAckFriendPosition )
		prfAckFriendPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckFriendPosition" );

	parms.Result = Result;
	parms.TargetCharName = TargetCharName;
	parms.ServerType = ServerType;
	parms.fServername = fServername;
	parms.fServerShortName = fServerShortName;
	parms.fServerIP = fServerIP;
	parms.fServerPort = fServerPort;
	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.ChannelNum = ChannelNum;
	parms.ChannelNickName = ChannelNickName;
	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckFriendPosition, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckNotifyUpdateCharInfo_LevelMark ( struct FString CharName, int LevelMarkID )
{
	static UFunction* prfAckNotifyUpdateCharInfo_LevelMark = 0;
	UBTPageRoomLobby_TCP_execrfAckNotifyUpdateCharInfo_LevelMark_Parms parms;

	if ( !prfAckNotifyUpdateCharInfo_LevelMark )
		prfAckNotifyUpdateCharInfo_LevelMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckNotifyUpdateCharInfo_LevelMark" );

	parms.CharName = CharName;
	parms.LevelMarkID = LevelMarkID;
	this->ProcessEvent ( prfAckNotifyUpdateCharInfo_LevelMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqInGameRoomUserClanLevelChanged ( int UserID, int ClanLevel )
{
	static UFunction* prfReqInGameRoomUserClanLevelChanged = 0;
	UBTPageRoomLobby_TCP_execrfReqInGameRoomUserClanLevelChanged_Parms parms;

	if ( !prfReqInGameRoomUserClanLevelChanged )
		prfReqInGameRoomUserClanLevelChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqInGameRoomUserClanLevelChanged" );

	parms.UserID = UserID;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfReqInGameRoomUserClanLevelChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqInGameRoomUserInfoChanged (  )
{
	static UFunction* prfReqInGameRoomUserInfoChanged = 0;
	UBTPageRoomLobby_TCP_execrfReqInGameRoomUserInfoChanged_Parms parms;

	if ( !prfReqInGameRoomUserInfoChanged )
		prfReqInGameRoomUserInfoChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqInGameRoomUserInfoChanged" );

	this->ProcessEvent ( prfReqInGameRoomUserInfoChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTPageRoomLobby_TCP_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckRoomUserPingInfo ( class TArray< int > UnqueID, class TArray< int > Ping, int HostPriorityPoint )
{
	static UFunction* prfAckRoomUserPingInfo = 0;
	UBTPageRoomLobby_TCP_execrfAckRoomUserPingInfo_Parms parms;

	if ( !prfAckRoomUserPingInfo )
		prfAckRoomUserPingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckRoomUserPingInfo" );

	parms.UnqueID = UnqueID;
	parms.Ping = Ping;
	parms.HostPriorityPoint = HostPriorityPoint;
	this->ProcessEvent ( prfAckRoomUserPingInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChangedRoomTitle_FromGM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangedRoomTitle_FromGM = 0;
	UBTPageRoomLobby_TCP_execrfAckChangedRoomTitle_FromGM_Parms parms;

	if ( !prfAckChangedRoomTitle_FromGM )
		prfAckChangedRoomTitle_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChangedRoomTitle_FromGM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangedRoomTitle_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckCheckEquipedWeaponDurability ( int Result, class TArray< struct FBtrDouble > ItemUniqueID, class TArray< int > ItemSlotNum )
{
	static UFunction* prfAckCheckEquipedWeaponDurability = 0;
	UBTPageRoomLobby_TCP_execrfAckCheckEquipedWeaponDurability_Parms parms;

	if ( !prfAckCheckEquipedWeaponDurability )
		prfAckCheckEquipedWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckCheckEquipedWeaponDurability" );

	parms.Result = Result;
	parms.ItemUniqueID = ItemUniqueID;
	parms.ItemSlotNum = ItemSlotNum;
	this->ProcessEvent ( prfAckCheckEquipedWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGetBotID ( int Result, unsigned char RequestedAFCount, unsigned char RequestedRSACount, class TArray< int > AFBotID, class TArray< int > RSABotID )
{
	static UFunction* prfAckGetBotID = 0;
	UBTPageRoomLobby_TCP_execrfAckGetBotID_Parms parms;

	if ( !prfAckGetBotID )
		prfAckGetBotID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGetBotID" );

	parms.Result = Result;
	parms.RequestedAFCount = RequestedAFCount;
	parms.RequestedRSACount = RequestedRSACount;
	parms.AFBotID = AFBotID;
	parms.RSABotID = RSABotID;
	this->ProcessEvent ( prfAckGetBotID, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckAutoChangedTeamUserList ( class TArray< int > UserID, class TArray< int > TeamNum )
{
	static UFunction* prfAckAutoChangedTeamUserList = 0;
	UBTPageRoomLobby_TCP_execrfAckAutoChangedTeamUserList_Parms parms;

	if ( !prfAckAutoChangedTeamUserList )
		prfAckAutoChangedTeamUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckAutoChangedTeamUserList" );

	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	this->ProcessEvent ( prfAckAutoChangedTeamUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqRecvForceFailedClientLoading ( int ErrCode )
{
	static UFunction* prfReqRecvForceFailedClientLoading = 0;
	UBTPageRoomLobby_TCP_execrfReqRecvForceFailedClientLoading_Parms parms;

	if ( !prfReqRecvForceFailedClientLoading )
		prfReqRecvForceFailedClientLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqRecvForceFailedClientLoading" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( prfReqRecvForceFailedClientLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckStartHolePunching ( int Result, struct FString ErrMsg, int GameType, int ReqStartUserID )
{
	static UFunction* prfAckStartHolePunching = 0;
	UBTPageRoomLobby_TCP_execrfAckStartHolePunching_Parms parms;

	if ( !prfAckStartHolePunching )
		prfAckStartHolePunching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckStartHolePunching" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.GameType = GameType;
	parms.ReqStartUserID = ReqStartUserID;
	this->ProcessEvent ( prfAckStartHolePunching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckRegisterMyUdpInfo ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRegisterMyUdpInfo = 0;
	UBTPageRoomLobby_TCP_execrfAckRegisterMyUdpInfo_Parms parms;

	if ( !prfAckRegisterMyUdpInfo )
		prfAckRegisterMyUdpInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckRegisterMyUdpInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRegisterMyUdpInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckNotifyMyCharInfoToRoomUser ( int Result, struct FString ErrMsg, int UID, struct FString UserName, int Grade, int TeamNum, unsigned char Statue, unsigned char IsHost, struct FString UserIP, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, unsigned char IsLookFor )
{
	static UFunction* prfAckNotifyMyCharInfoToRoomUser = 0;
	UBTPageRoomLobby_TCP_execrfAckNotifyMyCharInfoToRoomUser_Parms parms;

	if ( !prfAckNotifyMyCharInfoToRoomUser )
		prfAckNotifyMyCharInfoToRoomUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckNotifyMyCharInfoToRoomUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UID = UID;
	parms.UserName = UserName;
	parms.Grade = Grade;
	parms.TeamNum = TeamNum;
	parms.Statue = Statue;
	parms.IsHost = IsHost;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.IsLookFor = IsLookFor;
	this->ProcessEvent ( prfAckNotifyMyCharInfoToRoomUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqNotifyDisconnectHostInLoading ( int Result, struct FString ErrMsg, int HostID )
{
	static UFunction* prfReqNotifyDisconnectHostInLoading = 0;
	UBTPageRoomLobby_TCP_execrfReqNotifyDisconnectHostInLoading_Parms parms;

	if ( !prfReqNotifyDisconnectHostInLoading )
		prfReqNotifyDisconnectHostInLoading = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqNotifyDisconnectHostInLoading" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.HostID = HostID;
	this->ProcessEvent ( prfReqNotifyDisconnectHostInLoading, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqRecvDeleteFriend ( int Result, struct FString FromCharName )
{
	static UFunction* prfReqRecvDeleteFriend = 0;
	UBTPageRoomLobby_TCP_execrfReqRecvDeleteFriend_Parms parms;

	if ( !prfReqRecvDeleteFriend )
		prfReqRecvDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqRecvDeleteFriend" );

	parms.Result = Result;
	parms.FromCharName = FromCharName;
	this->ProcessEvent ( prfReqRecvDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckDeleteFriend ( int Result, class TArray< struct FString > FailedCharname )
{
	static UFunction* prfAckDeleteFriend = 0;
	UBTPageRoomLobby_TCP_execrfAckDeleteFriend_Parms parms;

	if ( !prfAckDeleteFriend )
		prfAckDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckDeleteFriend" );

	parms.Result = Result;
	parms.FailedCharname = FailedCharname;
	this->ProcessEvent ( prfAckDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChannelUserListInGameRoom ( int Result, int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > CharName, class TArray< int > UserLevel, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< unsigned char > IsLookForClan, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserListInGameRoom = 0;
	UBTPageRoomLobby_TCP_execrfAckChannelUserListInGameRoom_Parms parms;

	if ( !prfAckChannelUserListInGameRoom )
		prfAckChannelUserListInGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChannelUserListInGameRoom" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.CharName = CharName;
	parms.UserLevel = UserLevel;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.IsLookForClan = IsLookForClan;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserListInGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChatWispher ( int Result, struct FString ErrMsg, struct FString ToCharName )
{
	static UFunction* prfAckChatWispher = 0;
	UBTPageRoomLobby_TCP_execrfAckChatWispher_Parms parms;

	if ( !prfAckChatWispher )
		prfAckChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChatWispher" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ToCharName = ToCharName;
	this->ProcessEvent ( prfAckChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckAcquirePromotionItems ( int UID, int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > ItemUniqueID, class TArray< int > ItemIDs, class TArray< int > PartIDs )
{
	static UFunction* prfAckAcquirePromotionItems = 0;
	UBTPageRoomLobby_TCP_execrfAckAcquirePromotionItems_Parms parms;

	if ( !prfAckAcquirePromotionItems )
		prfAckAcquirePromotionItems = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckAcquirePromotionItems" );

	parms.UID = UID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemUniqueID = ItemUniqueID;
	parms.ItemIDs = ItemIDs;
	parms.PartIDs = PartIDs;
	this->ProcessEvent ( prfAckAcquirePromotionItems, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqNotifyLevelUp ( int LevelUpUserID, int Level, int Exp, class TArray< int > ItemID, class TArray< int > PartID )
{
	static UFunction* prfReqNotifyLevelUp = 0;
	UBTPageRoomLobby_TCP_execrfReqNotifyLevelUp_Parms parms;

	if ( !prfReqNotifyLevelUp )
		prfReqNotifyLevelUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqNotifyLevelUp" );

	parms.LevelUpUserID = LevelUpUserID;
	parms.Level = Level;
	parms.Exp = Exp;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( prfReqNotifyLevelUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqClanCharPersonelIntro ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfReqClanCharPersonelIntro = 0;
	UBTPageRoomLobby_TCP_execrfReqClanCharPersonelIntro_Parms parms;

	if ( !prfReqClanCharPersonelIntro )
		prfReqClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqClanCharPersonelIntro" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfReqClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTPageRoomLobby_TCP_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckRecvJoinClanResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvJoinClanResult = 0;
	UBTPageRoomLobby_TCP_execrfAckRecvJoinClanResult_Parms parms;

	if ( !prfAckRecvJoinClanResult )
		prfAckRecvJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckRecvJoinClanResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckJoinClanResult ( struct FString ClanName, unsigned char Permit, struct FString PermitCharName )
{
	static UFunction* prfAckJoinClanResult = 0;
	UBTPageRoomLobby_TCP_execrfAckJoinClanResult_Parms parms;

	if ( !prfAckJoinClanResult )
		prfAckJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckJoinClanResult" );

	parms.ClanName = ClanName;
	parms.Permit = Permit;
	parms.PermitCharName = PermitCharName;
	this->ProcessEvent ( prfAckJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckNotifyClanSecession ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyClanSecession = 0;
	UBTPageRoomLobby_TCP_execrfAckNotifyClanSecession_Parms parms;

	if ( !prfAckNotifyClanSecession )
		prfAckNotifyClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckNotifyClanSecession" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckNotifyNewClanMember ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyNewClanMember = 0;
	UBTPageRoomLobby_TCP_execrfAckNotifyNewClanMember_Parms parms;

	if ( !prfAckNotifyNewClanMember )
		prfAckNotifyNewClanMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckNotifyNewClanMember" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyNewClanMember, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqRecvJoinClan ( int UserIdx, struct FString CharName, struct FString Message )
{
	static UFunction* prfReqRecvJoinClan = 0;
	UBTPageRoomLobby_TCP_execrfReqRecvJoinClan_Parms parms;

	if ( !prfReqRecvJoinClan )
		prfReqRecvJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqRecvJoinClan" );

	parms.UserIdx = UserIdx;
	parms.CharName = CharName;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckRecvClanInviteResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvClanInviteResult = 0;
	UBTPageRoomLobby_TCP_execrfAckRecvClanInviteResult_Parms parms;

	if ( !prfAckRecvClanInviteResult )
		prfAckRecvClanInviteResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckRecvClanInviteResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvClanInviteResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckInviteClanResult ( struct FString CharName, unsigned char Permit, struct FString ClanNm )
{
	static UFunction* prfAckInviteClanResult = 0;
	UBTPageRoomLobby_TCP_execrfAckInviteClanResult_Parms parms;

	if ( !prfAckInviteClanResult )
		prfAckInviteClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckInviteClanResult" );

	parms.CharName = CharName;
	parms.Permit = Permit;
	parms.ClanNm = ClanNm;
	this->ProcessEvent ( prfAckInviteClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckJoinClan ( int Result, struct FString ErrMsg, struct FString SpecificCharName, struct FString RealRecvCharName, unsigned char RealRecvCharClanGrade )
{
	static UFunction* prfAckJoinClan = 0;
	UBTPageRoomLobby_TCP_execrfAckJoinClan_Parms parms;

	if ( !prfAckJoinClan )
		prfAckJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckJoinClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.SpecificCharName = SpecificCharName;
	parms.RealRecvCharName = RealRecvCharName;
	parms.RealRecvCharClanGrade = RealRecvCharClanGrade;
	this->ProcessEvent ( prfAckJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckInviteClan ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckInviteClan = 0;
	UBTPageRoomLobby_TCP_execrfAckInviteClan_Parms parms;

	if ( !prfAckInviteClan )
		prfAckInviteClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckInviteClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckInviteClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTPageRoomLobby_TCP_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTPageRoomLobby_TCP_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageRoomLobby_TCP_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckDupCheckClanName ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckDupCheckClanName = 0;
	UBTPageRoomLobby_TCP_execrfAckDupCheckClanName_Parms parms;

	if ( !prfAckDupCheckClanName )
		prfAckDupCheckClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckDupCheckClanName" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckDupCheckClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckCreateClan ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckCreateClan = 0;
	UBTPageRoomLobby_TCP_execrfAckCreateClan_Parms parms;

	if ( !prfAckCreateClan )
		prfAckCreateClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckCreateClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckCreateClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGetIsHostBlocking ( int Result, unsigned char Blocking )
{
	static UFunction* prfAckGetIsHostBlocking = 0;
	UBTPageRoomLobby_TCP_execrfAckGetIsHostBlocking_Parms parms;

	if ( !prfAckGetIsHostBlocking )
		prfAckGetIsHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGetIsHostBlocking" );

	parms.Result = Result;
	parms.Blocking = Blocking;
	this->ProcessEvent ( prfAckGetIsHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckNotifyHostBlocking ( int Result, unsigned char Blocking )
{
	static UFunction* prfAckNotifyHostBlocking = 0;
	UBTPageRoomLobby_TCP_execrfAckNotifyHostBlocking_Parms parms;

	if ( !prfAckNotifyHostBlocking )
		prfAckNotifyHostBlocking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckNotifyHostBlocking" );

	parms.Result = Result;
	parms.Blocking = Blocking;
	this->ProcessEvent ( prfAckNotifyHostBlocking, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGetHolePunchingResult ( int Result, unsigned char Phrase, int InterventionUserID, unsigned char Intervention, class TArray< int > FailedUserIDs )
{
	static UFunction* prfAckGetHolePunchingResult = 0;
	UBTPageRoomLobby_TCP_execrfAckGetHolePunchingResult_Parms parms;

	if ( !prfAckGetHolePunchingResult )
		prfAckGetHolePunchingResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGetHolePunchingResult" );

	parms.Result = Result;
	parms.Phrase = Phrase;
	parms.InterventionUserID = InterventionUserID;
	parms.Intervention = Intervention;
	parms.FailedUserIDs = FailedUserIDs;
	this->ProcessEvent ( prfAckGetHolePunchingResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGetUserHostPriorityPoint ( int Result, int UserID, int HostPriorityPoint )
{
	static UFunction* prfAckGetUserHostPriorityPoint = 0;
	UBTPageRoomLobby_TCP_execrfAckGetUserHostPriorityPoint_Parms parms;

	if ( !prfAckGetUserHostPriorityPoint )
		prfAckGetUserHostPriorityPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGetUserHostPriorityPoint" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.HostPriorityPoint = HostPriorityPoint;
	this->ProcessEvent ( prfAckGetUserHostPriorityPoint, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqRecvForceDisconnectUDPFromHost ( int Result )
{
	static UFunction* prfReqRecvForceDisconnectUDPFromHost = 0;
	UBTPageRoomLobby_TCP_execrfReqRecvForceDisconnectUDPFromHost_Parms parms;

	if ( !prfReqRecvForceDisconnectUDPFromHost )
		prfReqRecvForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqRecvForceDisconnectUDPFromHost" );

	parms.Result = Result;
	this->ProcessEvent ( prfReqRecvForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckForceDisconnectUDPFromHost ( int Result )
{
	static UFunction* prfAckForceDisconnectUDPFromHost = 0;
	UBTPageRoomLobby_TCP_execrfAckForceDisconnectUDPFromHost_Parms parms;

	if ( !prfAckForceDisconnectUDPFromHost )
		prfAckForceDisconnectUDPFromHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckForceDisconnectUDPFromHost" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckForceDisconnectUDPFromHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqNotifyChangeRoomState ( unsigned char RoomState )
{
	static UFunction* prfReqNotifyChangeRoomState = 0;
	UBTPageRoomLobby_TCP_execrfReqNotifyChangeRoomState_Parms parms;

	if ( !prfReqNotifyChangeRoomState )
		prfReqNotifyChangeRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqNotifyChangeRoomState" );

	parms.RoomState = RoomState;
	this->ProcessEvent ( prfReqNotifyChangeRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckBanUser ( int GameNum, int UID, int BanUID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBanUser = 0;
	UBTPageRoomLobby_TCP_execrfAckBanUser_Parms parms;

	if ( !prfAckBanUser )
		prfAckBanUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckBanUser" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.BanUID = BanUID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBanUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqCompleteFriendInvite ( struct FString CharnameToBeInvited, unsigned char IsPermit )
{
	static UFunction* prfReqCompleteFriendInvite = 0;
	UBTPageRoomLobby_TCP_execrfReqCompleteFriendInvite_Parms parms;

	if ( !prfReqCompleteFriendInvite )
		prfReqCompleteFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqCompleteFriendInvite" );

	parms.CharnameToBeInvited = CharnameToBeInvited;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( prfReqCompleteFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckConfirmFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmFriendInvite = 0;
	UBTPageRoomLobby_TCP_execrfAckConfirmFriendInvite_Parms parms;

	if ( !prfAckConfirmFriendInvite )
		prfAckConfirmFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckConfirmFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqRecvFriendInvite ( int ReqUserID, struct FString ReqCharname, struct FString InviteMsg )
{
	static UFunction* prfReqRecvFriendInvite = 0;
	UBTPageRoomLobby_TCP_execrfReqRecvFriendInvite_Parms parms;

	if ( !prfReqRecvFriendInvite )
		prfReqRecvFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqRecvFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqCharname = ReqCharname;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckSendFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSendFriendInvite = 0;
	UBTPageRoomLobby_TCP_execrfAckSendFriendInvite_Parms parms;

	if ( !prfAckSendFriendInvite )
		prfAckSendFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckSendFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSendFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckNotifyLoadingState ( int Result, int UserID, unsigned char LoadingState )
{
	static UFunction* prfAckNotifyLoadingState = 0;
	UBTPageRoomLobby_TCP_execrfAckNotifyLoadingState_Parms parms;

	if ( !prfAckNotifyLoadingState )
		prfAckNotifyLoadingState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckNotifyLoadingState" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.LoadingState = LoadingState;
	this->ProcessEvent ( prfAckNotifyLoadingState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckFailedStartGame ( int Result, struct FString ErrMsg, unsigned char IsHost, int FailedUserID, int LoadingStep )
{
	static UFunction* prfAckFailedStartGame = 0;
	UBTPageRoomLobby_TCP_execrfAckFailedStartGame_Parms parms;

	if ( !prfAckFailedStartGame )
		prfAckFailedStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckFailedStartGame" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsHost = IsHost;
	parms.FailedUserID = FailedUserID;
	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( prfAckFailedStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckSuccessStartGame ( int Result, struct FString ErrMsg, unsigned char IsHost, struct FString HostIP, int HostPort, int LoadingStep )
{
	static UFunction* prfAckSuccessStartGame = 0;
	UBTPageRoomLobby_TCP_execrfAckSuccessStartGame_Parms parms;

	if ( !prfAckSuccessStartGame )
		prfAckSuccessStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckSuccessStartGame" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsHost = IsHost;
	parms.HostIP = HostIP;
	parms.HostPort = HostPort;
	parms.LoadingStep = LoadingStep;
	this->ProcessEvent ( prfAckSuccessStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfReqRelayServerOff (  )
{
	static UFunction* prfReqRelayServerOff = 0;
	UBTPageRoomLobby_TCP_execrfReqRelayServerOff_Parms parms;

	if ( !prfReqRelayServerOff )
		prfReqRelayServerOff = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfReqRelayServerOff" );

	this->ProcessEvent ( prfReqRelayServerOff, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGameOverEnd ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameOverEnd = 0;
	UBTPageRoomLobby_TCP_execrfAckGameOverEnd_Parms parms;

	if ( !prfAckGameOverEnd )
		prfAckGameOverEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGameOverEnd" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameOverEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckUpdateWeaponDurability ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > Durability, class TArray< unsigned char > IsDestroy, class TArray< struct FBtrDouble > FailedWeaponUniqueID )
{
	static UFunction* prfAckUpdateWeaponDurability = 0;
	UBTPageRoomLobby_TCP_execrfAckUpdateWeaponDurability_Parms parms;

	if ( !prfAckUpdateWeaponDurability )
		prfAckUpdateWeaponDurability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckUpdateWeaponDurability" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.Durability = Durability;
	parms.IsDestroy = IsDestroy;
	parms.FailedWeaponUniqueID = FailedWeaponUniqueID;
	this->ProcessEvent ( prfAckUpdateWeaponDurability, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckEntryQSlotUniqueIDList ( int UserNum, class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWUniqueID, class TArray< struct FBtrDouble > PistolUniqueID, class TArray< struct FBtrDouble > TW1UniqueID, class TArray< struct FBtrDouble > TW2UniqueID )
{
	static UFunction* prfAckEntryQSlotUniqueIDList = 0;
	UBTPageRoomLobby_TCP_execrfAckEntryQSlotUniqueIDList_Parms parms;

	if ( !prfAckEntryQSlotUniqueIDList )
		prfAckEntryQSlotUniqueIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckEntryQSlotUniqueIDList" );

	parms.UserNum = UserNum;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWUniqueID = MWUniqueID;
	parms.PistolUniqueID = PistolUniqueID;
	parms.TW1UniqueID = TW1UniqueID;
	parms.TW2UniqueID = TW2UniqueID;
	this->ProcessEvent ( prfAckEntryQSlotUniqueIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckEntryQSlotIDList ( int UserNum, class TArray< unsigned char > QSlotDispOrder, class TArray< int > MWItemID, class TArray< int > MWPartID, class TArray< int > MWPaintID, class TArray< int > PistolItemID, class TArray< int > PistolPartID, class TArray< int > PistolPaintID, class TArray< int > TWItemID1, class TArray< int > TWItemID2, class TArray< int > Skill1ID, class TArray< int > Skill2ID, class TArray< int > Skill3ID, class TArray< int > Skill4ID )
{
	static UFunction* prfAckEntryQSlotIDList = 0;
	UBTPageRoomLobby_TCP_execrfAckEntryQSlotIDList_Parms parms;

	if ( !prfAckEntryQSlotIDList )
		prfAckEntryQSlotIDList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckEntryQSlotIDList" );

	parms.UserNum = UserNum;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWItemID = MWItemID;
	parms.MWPartID = MWPartID;
	parms.MWPaintID = MWPaintID;
	parms.PistolItemID = PistolItemID;
	parms.PistolPartID = PistolPartID;
	parms.PistolPaintID = PistolPaintID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1ID = Skill1ID;
	parms.Skill2ID = Skill2ID;
	parms.Skill3ID = Skill3ID;
	parms.Skill4ID = Skill4ID;
	this->ProcessEvent ( prfAckEntryQSlotIDList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChangeNewGuest ( struct FString HostIP )
{
	static UFunction* prfAckChangeNewGuest = 0;
	UBTPageRoomLobby_TCP_execrfAckChangeNewGuest_Parms parms;

	if ( !prfAckChangeNewGuest )
		prfAckChangeNewGuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChangeNewGuest" );

	parms.HostIP = HostIP;
	this->ProcessEvent ( prfAckChangeNewGuest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChangeHost ( unsigned char ClientNum )
{
	static UFunction* prfAckChangeHost = 0;
	UBTPageRoomLobby_TCP_execrfAckChangeHost_Parms parms;

	if ( !prfAckChangeHost )
		prfAckChangeHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChangeHost" );

	parms.ClientNum = ClientNum;
	this->ProcessEvent ( prfAckChangeHost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGetBootyChoose ( int Result, struct FString ErrMsg, unsigned char GiveType, struct FBtrDouble ItemUniqueNumber, int ItemID, int PartID, unsigned char ItemType, struct FBtrDouble UntilTime, int StackCount, int PaintID )
{
	static UFunction* prfAckGetBootyChoose = 0;
	UBTPageRoomLobby_TCP_execrfAckGetBootyChoose_Parms parms;

	if ( !prfAckGetBootyChoose )
		prfAckGetBootyChoose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGetBootyChoose" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.GiveType = GiveType;
	parms.ItemUniqueNumber = ItemUniqueNumber;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	parms.ItemType = ItemType;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	parms.PaintID = PaintID;
	this->ProcessEvent ( prfAckGetBootyChoose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckEntrySkillList ( class TArray< int > UserIDs, class TArray< int > SkillIDs, class TArray< int > SlotPositions, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEntrySkillList = 0;
	UBTPageRoomLobby_TCP_execrfAckEntrySkillList_Parms parms;

	if ( !prfAckEntrySkillList )
		prfAckEntrySkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckEntrySkillList" );

	parms.UserIDs = UserIDs;
	parms.SkillIDs = SkillIDs;
	parms.SlotPositions = SlotPositions;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEntrySkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGetBooty ( int Result, struct FString ErrMsg, class TArray< int > PrizeWinUserID, class TArray< int > BootyItemID, class TArray< int > BootyPartsID )
{
	static UFunction* prfAckGetBooty = 0;
	UBTPageRoomLobby_TCP_execrfAckGetBooty_Parms parms;

	if ( !prfAckGetBooty )
		prfAckGetBooty = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGetBooty" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PrizeWinUserID = PrizeWinUserID;
	parms.BootyItemID = BootyItemID;
	parms.BootyPartsID = BootyPartsID;
	this->ProcessEvent ( prfAckGetBooty, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckForceGameOver ( int UserID, int GameRoomNumber, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckForceGameOver = 0;
	UBTPageRoomLobby_TCP_execrfAckForceGameOver_Parms parms;

	if ( !prfAckForceGameOver )
		prfAckForceGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckForceGameOver" );

	parms.UserID = UserID;
	parms.GameRoomNumber = GameRoomNumber;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckForceGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChangeRoomOwner ( int GameNum, int OldOwner, int NewOwner, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeRoomOwner = 0;
	UBTPageRoomLobby_TCP_execrfAckChangeRoomOwner_Parms parms;

	if ( !prfAckChangeRoomOwner )
		prfAckChangeRoomOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChangeRoomOwner" );

	parms.GameNum = GameNum;
	parms.OldOwner = OldOwner;
	parms.NewOwner = NewOwner;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeRoomOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckEntryItemList ( class TArray< int > UserIDs, class TArray< int > ItemIDs, class TArray< int > SlotPositions, class TArray< int > AddPartsID, class TArray< struct FBtrDouble > UniqueID, class TArray< int > PaintID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEntryItemList = 0;
	UBTPageRoomLobby_TCP_execrfAckEntryItemList_Parms parms;

	if ( !prfAckEntryItemList )
		prfAckEntryItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckEntryItemList" );

	parms.UserIDs = UserIDs;
	parms.ItemIDs = ItemIDs;
	parms.SlotPositions = SlotPositions;
	parms.AddPartsID = AddPartsID;
	parms.UniqueID = UniqueID;
	parms.PaintID = PaintID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEntryItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChangeUserState ( int Result, struct FString ErrMsg, class TArray< int > UserIDs, class TArray< unsigned char > Positions, class TArray< int > Numbers, class TArray< unsigned char > OldStates, class TArray< unsigned char > NewStates )
{
	static UFunction* prfAckChangeUserState = 0;
	UBTPageRoomLobby_TCP_execrfAckChangeUserState_Parms parms;

	if ( !prfAckChangeUserState )
		prfAckChangeUserState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChangeUserState" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserIDs = UserIDs;
	parms.Positions = Positions;
	parms.Numbers = Numbers;
	parms.OldStates = OldStates;
	parms.NewStates = NewStates;
	this->ProcessEvent ( prfAckChangeUserState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChangeRoomSetting ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckChangeRoomSetting = 0;
	UBTPageRoomLobby_TCP_execrfAckChangeRoomSetting_Parms parms;

	if ( !prfAckChangeRoomSetting )
		prfAckChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChangeRoomSetting" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckUpdateScore ( class TArray< int > UserIDs, class TArray< struct FString > NickNames, class TArray< unsigned char > TeamIDs, class TArray< int > Scores, class TArray< int > Kills, class TArray< int > Assists, class TArray< int > Deaths, class TArray< int > EXPs, class TArray< int > EXPBonuses, class TArray< int > Points, class TArray< int > PointBonuses, class TArray< int > TeamScores, class TArray< int > BonusOwnerID, class TArray< int > BonusID )
{
	static UFunction* prfAckUpdateScore = 0;
	UBTPageRoomLobby_TCP_execrfAckUpdateScore_Parms parms;

	if ( !prfAckUpdateScore )
		prfAckUpdateScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckUpdateScore" );

	parms.UserIDs = UserIDs;
	parms.NickNames = NickNames;
	parms.TeamIDs = TeamIDs;
	parms.Scores = Scores;
	parms.Kills = Kills;
	parms.Assists = Assists;
	parms.Deaths = Deaths;
	parms.EXPs = EXPs;
	parms.EXPBonuses = EXPBonuses;
	parms.Points = Points;
	parms.PointBonuses = PointBonuses;
	parms.TeamScores = TeamScores;
	parms.BonusOwnerID = BonusOwnerID;
	parms.BonusID = BonusID;
	this->ProcessEvent ( prfAckUpdateScore, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckRegisterOtherUdpInfo ( int UID, struct FString IP, int Port, unsigned char NatType, unsigned char Intervention, struct FString HostInnerIP, int HostInnerPort )
{
	static UFunction* prfAckRegisterOtherUdpInfo = 0;
	UBTPageRoomLobby_TCP_execrfAckRegisterOtherUdpInfo_Parms parms;

	if ( !prfAckRegisterOtherUdpInfo )
		prfAckRegisterOtherUdpInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckRegisterOtherUdpInfo" );

	parms.UID = UID;
	parms.IP = IP;
	parms.Port = Port;
	parms.NatType = NatType;
	parms.Intervention = Intervention;
	parms.HostInnerIP = HostInnerIP;
	parms.HostInnerPort = HostInnerPort;
	this->ProcessEvent ( prfAckRegisterOtherUdpInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckDisconnectGame ( int Result, int DisconnectUserID, struct FString DisconnectUserName )
{
	static UFunction* prfAckDisconnectGame = 0;
	UBTPageRoomLobby_TCP_execrfAckDisconnectGame_Parms parms;

	if ( !prfAckDisconnectGame )
		prfAckDisconnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckDisconnectGame" );

	parms.Result = Result;
	parms.DisconnectUserID = DisconnectUserID;
	parms.DisconnectUserName = DisconnectUserName;
	this->ProcessEvent ( prfAckDisconnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGameOver ( int UID, int GameRoomNumber, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameOver = 0;
	UBTPageRoomLobby_TCP_execrfAckGameOver_Parms parms;

	if ( !prfAckGameOver )
		prfAckGameOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGameOver" );

	parms.UID = UID;
	parms.GameRoomNumber = GameRoomNumber;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameOver, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGameRoomInfo ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckGameRoomInfo = 0;
	UBTPageRoomLobby_TCP_execrfAckGameRoomInfo_Parms parms;

	if ( !prfAckGameRoomInfo )
		prfAckGameRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGameRoomInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckGameRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChangeGameMode ( int GameNum, int UID, struct FString GameMode, unsigned char GameModeNum, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeGameMode = 0;
	UBTPageRoomLobby_TCP_execrfAckChangeGameMode_Parms parms;

	if ( !prfAckChangeGameMode )
		prfAckChangeGameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChangeGameMode" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.GameMode = GameMode;
	parms.GameModeNum = GameModeNum;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeGameMode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckSelectMap ( int GameNum, int UID, struct FString MapName, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSelectMap = 0;
	UBTPageRoomLobby_TCP_execrfAckSelectMap_Parms parms;

	if ( !prfAckSelectMap )
		prfAckSelectMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckSelectMap" );

	parms.GameNum = GameNum;
	parms.UID = UID;
	parms.MapName = MapName;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSelectMap, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckChangeTeam ( int GameNumber, struct FString UserID, int UID, int TeamNum, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckChangeTeam = 0;
	UBTPageRoomLobby_TCP_execrfAckChangeTeam_Parms parms;

	if ( !prfAckChangeTeam )
		prfAckChangeTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckChangeTeam" );

	parms.GameNumber = GameNumber;
	parms.UserID = UserID;
	parms.UID = UID;
	parms.TeamNum = TeamNum;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckChangeTeam, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckRoomUserList ( class TArray< int > UID, class TArray< struct FString > UserName, class TArray< int > Grade, class TArray< int > TeamNum, class TArray< unsigned char > Statue, class TArray< unsigned char > IsHost, class TArray< struct FString > UserIP, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< unsigned char > IsLookingFor, class TArray< int > GMUID, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckRoomUserList = 0;
	UBTPageRoomLobby_TCP_execrfAckRoomUserList_Parms parms;

	if ( !prfAckRoomUserList )
		prfAckRoomUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckRoomUserList" );

	parms.UID = UID;
	parms.UserName = UserName;
	parms.Grade = Grade;
	parms.TeamNum = TeamNum;
	parms.Statue = Statue;
	parms.IsHost = IsHost;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.IsLookingFor = IsLookingFor;
	parms.GMUID = GMUID;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckRoomUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTPageRoomLobby_TCP_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckLeaveRoom ( int Num, int UID, struct FString UserID, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckLeaveRoom = 0;
	UBTPageRoomLobby_TCP_execrfAckLeaveRoom_Parms parms;

	if ( !prfAckLeaveRoom )
		prfAckLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckLeaveRoom" );

	parms.Num = Num;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckEnterRoom ( int GameNum, int OwnerID, int UID, struct FString UserID, int TeamNum, int Grade, struct FString UserIP, struct FString ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterRoom = 0;
	UBTPageRoomLobby_TCP_execrfAckEnterRoom_Parms parms;

	if ( !prfAckEnterRoom )
		prfAckEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckEnterRoom" );

	parms.GameNum = GameNum;
	parms.OwnerID = OwnerID;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.Grade = Grade;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.Clan_Mark_Pattern = Clan_Mark_Pattern;
	parms.Clan_Mark_BG = Clan_Mark_BG;
	parms.Clan_Mark_BL = Clan_Mark_BL;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckStartGame ( int GameNumber, int ClientsCount, int StartSeed, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckStartGame = 0;
	UBTPageRoomLobby_TCP_execrfAckStartGame_Parms parms;

	if ( !prfAckStartGame )
		prfAckStartGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckStartGame" );

	parms.GameNumber = GameNumber;
	parms.ClientsCount = ClientsCount;
	parms.StartSeed = StartSeed;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckStartGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckIsGameRoomPlaying ( int GameRoomNum, unsigned char IsPlaying )
{
	static UFunction* prfAckIsGameRoomPlaying = 0;
	UBTPageRoomLobby_TCP_execrfAckIsGameRoomPlaying_Parms parms;

	if ( !prfAckIsGameRoomPlaying )
		prfAckIsGameRoomPlaying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckIsGameRoomPlaying" );

	parms.GameRoomNum = GameRoomNum;
	parms.IsPlaying = IsPlaying;
	this->ProcessEvent ( prfAckIsGameRoomPlaying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckGameHostInfo ( int GameNumber, struct FString UserID, struct FString IP, int Port, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckGameHostInfo = 0;
	UBTPageRoomLobby_TCP_execrfAckGameHostInfo_Parms parms;

	if ( !prfAckGameHostInfo )
		prfAckGameHostInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckGameHostInfo" );

	parms.GameNumber = GameNumber;
	parms.UserID = UserID;
	parms.IP = IP;
	parms.Port = Port;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckGameHostInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageRoomLobby_TCP::rfAckConnectGame ( int UserID, int Result )
{
	static UFunction* prfAckConnectGame = 0;
	UBTPageRoomLobby_TCP_execrfAckConnectGame_Parms parms;

	if ( !prfAckConnectGame )
		prfAckConnectGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageRoomLobby_TCP.rfAckConnectGame" );

	parms.UserID = UserID;
	parms.Result = Result;
	this->ProcessEvent ( prfAckConnectGame, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTRefreshTime::SetMaxTime ( float fMaxTime )
{
	static UFunction* pSetMaxTime = 0;
	UBTRefreshTime_execSetMaxTime_Parms parms;

	if ( !pSetMaxTime )
		pSetMaxTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTRefreshTime.SetMaxTime" );

	parms.fMaxTime = fMaxTime;
	this->ProcessEvent ( pSetMaxTime, &parms, NULL );

}*/

/*void UBTRefreshTime::Update ( float fAppDelta )
{
	static UFunction* pUpdate = 0;
	UBTRefreshTime_execUpdate_Parms parms;

	if ( !pUpdate )
		pUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTRefreshTime.Update" );

	parms.fAppDelta = fAppDelta;
	this->ProcessEvent ( pUpdate, &parms, NULL );

}*/

/*void UBTRefreshTime::ResetTime (  )
{
	static UFunction* pResetTime = 0;
	UBTRefreshTime_execResetTime_Parms parms;

	if ( !pResetTime )
		pResetTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTRefreshTime.ResetTime" );

	this->ProcessEvent ( pResetTime, &parms, NULL );

}*/

/*bool UBTRefreshTime::CheckCondition (  )
{
	static UFunction* pCheckCondition = 0;
	UBTRefreshTime_execCheckCondition_Parms parms;

	if ( !pCheckCondition )
		pCheckCondition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTRefreshTime.CheckCondition" );

	this->ProcessEvent ( pCheckCondition, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTWindowItemDurabilityWarningHK::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTWindowItemDurabilityWarningHK_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTWindowItemDurabilityWarningHK::InternalOnOpen (  )
{
	static UFunction* pInternalOnOpen = 0;
	UBTWindowItemDurabilityWarningHK_execInternalOnOpen_Parms parms;

	if ( !pInternalOnOpen )
		pInternalOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.InternalOnOpen" );

	this->ProcessEvent ( pInternalOnOpen, &parms, NULL );

}*/

/*void UBTWindowItemDurabilityWarningHK::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTWindowItemDurabilityWarningHK_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UBTWindowItemDurabilityWarningHK::AddItem ( struct FBtrDouble UniqueID, int ItemID, int PartID, int Durability, int RepairCost )
{
	static UFunction* pAddItem = 0;
	UBTWindowItemDurabilityWarningHK_execAddItem_Parms parms;

	if ( !pAddItem )
		pAddItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.AddItem" );

	parms.UniqueID = UniqueID;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	parms.Durability = Durability;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( pAddItem, &parms, NULL );

}*/

/*void UBTWindowItemDurabilityWarningHK::SetCurrentPoint ( int MyPoint )
{
	static UFunction* pSetCurrentPoint = 0;
	UBTWindowItemDurabilityWarningHK_execSetCurrentPoint_Parms parms;

	if ( !pSetCurrentPoint )
		pSetCurrentPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.SetCurrentPoint" );

	parms.MyPoint = MyPoint;
	this->ProcessEvent ( pSetCurrentPoint, &parms, NULL );

}*/

/*void UBTWindowItemDurabilityWarningHK::UpdateNEditBox (  )
{
	static UFunction* pUpdateNEditBox = 0;
	UBTWindowItemDurabilityWarningHK_execUpdateNEditBox_Parms parms;

	if ( !pUpdateNEditBox )
		pUpdateNEditBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.UpdateNEditBox" );

	this->ProcessEvent ( pUpdateNEditBox, &parms, NULL );

}*/

/*bool UBTWindowItemDurabilityWarningHK::ImageListBox_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pImageListBox_OnClick = 0;
	UBTWindowItemDurabilityWarningHK_execImageListBox_OnClick_Parms parms;

	if ( !pImageListBox_OnClick )
		pImageListBox_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.ImageListBox_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pImageListBox_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTWindowItemDurabilityWarningHK::ButtonNonSelectAll_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonNonSelectAll_OnClick = 0;
	UBTWindowItemDurabilityWarningHK_execButtonNonSelectAll_OnClick_Parms parms;

	if ( !pButtonNonSelectAll_OnClick )
		pButtonNonSelectAll_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.ButtonNonSelectAll_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonNonSelectAll_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTWindowItemDurabilityWarningHK::ButtonSelectAll_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonSelectAll_OnClick = 0;
	UBTWindowItemDurabilityWarningHK_execButtonSelectAll_OnClick_Parms parms;

	if ( !pButtonSelectAll_OnClick )
		pButtonSelectAll_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.ButtonSelectAll_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonSelectAll_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTWindowItemDurabilityWarningHK::ButtonCancel_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonCancel_OnClick = 0;
	UBTWindowItemDurabilityWarningHK_execButtonCancel_OnClick_Parms parms;

	if ( !pButtonCancel_OnClick )
		pButtonCancel_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.ButtonCancel_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonCancel_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTWindowItemDurabilityWarningHK::RepairItem_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pRepairItem_OnOK = 0;
	UBTWindowItemDurabilityWarningHK_execRepairItem_OnOK_Parms parms;

	if ( !pRepairItem_OnOK )
		pRepairItem_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.RepairItem_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pRepairItem_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTWindowItemDurabilityWarningHK::ButtonOK_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonOK_OnClick = 0;
	UBTWindowItemDurabilityWarningHK_execButtonOK_OnClick_Parms parms;

	if ( !pButtonOK_OnClick )
		pButtonOK_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTWindowItemDurabilityWarningHK.ButtonOK_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonOK_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TcpLogin::rfAckLogOut ( unsigned char Result, unsigned char Reason )
{
	static UFunction* prfAckLogOut = 0;
	UBTPageServerSelection_TcpLogin_execrfAckLogOut_Parms parms;

	if ( !prfAckLogOut )
		prfAckLogOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TcpLogin.rfAckLogOut" );

	parms.Result = Result;
	parms.Reason = Reason;
	this->ProcessEvent ( prfAckLogOut, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TcpLogin::rfAckClientChecksum ( int Result )
{
	static UFunction* prfAckClientChecksum = 0;
	UBTPageServerSelection_TcpLogin_execrfAckClientChecksum_Parms parms;

	if ( !prfAckClientChecksum )
		prfAckClientChecksum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TcpLogin.rfAckClientChecksum" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckClientChecksum, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TcpLogin::rfAckClientChallenge ( struct FString Key1, struct FBtrDouble Key2 )
{
	static UFunction* prfAckClientChallenge = 0;
	UBTPageServerSelection_TcpLogin_execrfAckClientChallenge_Parms parms;

	if ( !prfAckClientChallenge )
		prfAckClientChallenge = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TcpLogin.rfAckClientChallenge" );

	parms.Key1 = Key1;
	parms.Key2 = Key2;
	this->ProcessEvent ( prfAckClientChallenge, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TcpLogin::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageServerSelection_TcpLogin_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TcpLogin.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TcpLogin::rfAckCharInfo ( int Result, struct FString CharName, int Level, int Exp, struct FString ClanName )
{
	static UFunction* prfAckCharInfo = 0;
	UBTPageServerSelection_TcpLogin_execrfAckCharInfo_Parms parms;

	if ( !prfAckCharInfo )
		prfAckCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TcpLogin.rfAckCharInfo" );

	parms.Result = Result;
	parms.CharName = CharName;
	parms.Level = Level;
	parms.Exp = Exp;
	parms.ClanName = ClanName;
	this->ProcessEvent ( prfAckCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TcpLogin::rfAckServerList ( class TArray< struct FString > CServername, class TArray< struct FString > CServerShortName, class TArray< struct FString > ServerIP, class TArray< int > serverPort, class TArray< struct FString > ChannelName, class TArray< struct FString > ChannelNickName, class TArray< int > ChannelNum, class TArray< int > chMaxUser, class TArray< int > chCurUser, class TArray< struct FString > ServerGroupName, class TArray< int > ServerGroupID, class TArray< int > ServerDispOrder, class TArray< int > DataPort, class TArray< unsigned char > OptionCount_byte, class TArray< unsigned char > OptionKey_byte, class TArray< unsigned char > OptionValue_byte, class TArray< unsigned char > OptionCount_int, class TArray< unsigned char > OptionKey_int, class TArray< int > OptionValue_int, class TArray< unsigned char > OptionCount_float, class TArray< unsigned char > OptionKey_float, class TArray< float > OptionValue_float, class TArray< unsigned char > IsClanChannel, class TArray< unsigned char > IsUseDedicateHost )
{
	static UFunction* prfAckServerList = 0;
	UBTPageServerSelection_TcpLogin_execrfAckServerList_Parms parms;

	if ( !prfAckServerList )
		prfAckServerList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TcpLogin.rfAckServerList" );

	parms.CServername = CServername;
	parms.CServerShortName = CServerShortName;
	parms.ServerIP = ServerIP;
	parms.serverPort = serverPort;
	parms.ChannelName = ChannelName;
	parms.ChannelNickName = ChannelNickName;
	parms.ChannelNum = ChannelNum;
	parms.chMaxUser = chMaxUser;
	parms.chCurUser = chCurUser;
	parms.ServerGroupName = ServerGroupName;
	parms.ServerGroupID = ServerGroupID;
	parms.ServerDispOrder = ServerDispOrder;
	parms.DataPort = DataPort;
	parms.OptionCount_byte = OptionCount_byte;
	parms.OptionKey_byte = OptionKey_byte;
	parms.OptionValue_byte = OptionValue_byte;
	parms.OptionCount_int = OptionCount_int;
	parms.OptionKey_int = OptionKey_int;
	parms.OptionValue_int = OptionValue_int;
	parms.OptionCount_float = OptionCount_float;
	parms.OptionKey_float = OptionKey_float;
	parms.OptionValue_float = OptionValue_float;
	parms.IsClanChannel = IsClanChannel;
	parms.IsUseDedicateHost = IsUseDedicateHost;
	this->ProcessEvent ( prfAckServerList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckBuyItemByWebzenCash ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBuyItemByWebzenCash = 0;
	UBTPageServerSelection_TCP_execrfAckBuyItemByWebzenCash_Parms parms;

	if ( !prfAckBuyItemByWebzenCash )
		prfAckBuyItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckBuyItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBuyItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfNotifyCouponUseError ( int Time )
{
	static UFunction* prfNotifyCouponUseError = 0;
	UBTPageServerSelection_TCP_execrfNotifyCouponUseError_Parms parms;

	if ( !prfNotifyCouponUseError )
		prfNotifyCouponUseError = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfNotifyCouponUseError" );

	parms.Time = Time;
	this->ProcessEvent ( prfNotifyCouponUseError, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckRecvClanInviteResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvClanInviteResult = 0;
	UBTPageServerSelection_TCP_execrfAckRecvClanInviteResult_Parms parms;

	if ( !prfAckRecvClanInviteResult )
		prfAckRecvClanInviteResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckRecvClanInviteResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvClanInviteResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTPageServerSelection_TCP_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqNotifyShopItemDataEnd ( int Ver )
{
	static UFunction* prfReqNotifyShopItemDataEnd = 0;
	UBTPageServerSelection_TCP_execrfReqNotifyShopItemDataEnd_Parms parms;

	if ( !prfReqNotifyShopItemDataEnd )
		prfReqNotifyShopItemDataEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqNotifyShopItemDataEnd" );

	parms.Ver = Ver;
	this->ProcessEvent ( prfReqNotifyShopItemDataEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqNotifyShopItemData ( class TArray< int > ProductNo, class TArray< struct FString > ProductRowGuid, class TArray< struct FString > ServiceCode, class TArray< struct FString > ProductName, class TArray< struct FString > ProductCode, class TArray< struct FString > ProductType, class TArray< unsigned char > SaleType, class TArray< struct FString > ItemSaleType, class TArray< unsigned char > ISIncludeBonus, class TArray< int > ProductCost, class TArray< int > ProductHour, class TArray< int > ProductQuantity, class TArray< int > TotalQuantity, class TArray< int > ReOrderTerms, class TArray< int > ReorderCount, class TArray< int > PurchaseAvailableQuantity, class TArray< int > AvailableMinLevel, class TArray< int > AvailableMaxLevel, class TArray< unsigned char > AvailableGender, class TArray< int > InventoryKeepDays, class TArray< int > SaleMasterFlag, class TArray< int > SaleStatus, class TArray< struct FString > Description, class TArray< struct FString > Property0, class TArray< struct FString > Property1, class TArray< struct FString > Property2, class TArray< struct FString > Property3, class TArray< struct FString > Property4, class TArray< int > IsGift )
{
	static UFunction* prfReqNotifyShopItemData = 0;
	UBTPageServerSelection_TCP_execrfReqNotifyShopItemData_Parms parms;

	if ( !prfReqNotifyShopItemData )
		prfReqNotifyShopItemData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqNotifyShopItemData" );

	parms.ProductNo = ProductNo;
	parms.ProductRowGuid = ProductRowGuid;
	parms.ServiceCode = ServiceCode;
	parms.ProductName = ProductName;
	parms.ProductCode = ProductCode;
	parms.ProductType = ProductType;
	parms.SaleType = SaleType;
	parms.ItemSaleType = ItemSaleType;
	parms.ISIncludeBonus = ISIncludeBonus;
	parms.ProductCost = ProductCost;
	parms.ProductHour = ProductHour;
	parms.ProductQuantity = ProductQuantity;
	parms.TotalQuantity = TotalQuantity;
	parms.ReOrderTerms = ReOrderTerms;
	parms.ReorderCount = ReorderCount;
	parms.PurchaseAvailableQuantity = PurchaseAvailableQuantity;
	parms.AvailableMinLevel = AvailableMinLevel;
	parms.AvailableMaxLevel = AvailableMaxLevel;
	parms.AvailableGender = AvailableGender;
	parms.InventoryKeepDays = InventoryKeepDays;
	parms.SaleMasterFlag = SaleMasterFlag;
	parms.SaleStatus = SaleStatus;
	parms.Description = Description;
	parms.Property0 = Property0;
	parms.Property1 = Property1;
	parms.Property2 = Property2;
	parms.Property3 = Property3;
	parms.Property4 = Property4;
	parms.IsGift = IsGift;
	this->ProcessEvent ( prfReqNotifyShopItemData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckShopItemData (  )
{
	static UFunction* prfAckShopItemData = 0;
	UBTPageServerSelection_TCP_execrfAckShopItemData_Parms parms;

	if ( !prfAckShopItemData )
		prfAckShopItemData = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckShopItemData" );

	this->ProcessEvent ( prfAckShopItemData, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckTencent_StartTenProtect ( int CharDBID )
{
	static UFunction* prfAckTencent_StartTenProtect = 0;
	UBTPageServerSelection_TCP_execrfAckTencent_StartTenProtect_Parms parms;

	if ( !prfAckTencent_StartTenProtect )
		prfAckTencent_StartTenProtect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckTencent_StartTenProtect" );

	parms.CharDBID = CharDBID;
	this->ProcessEvent ( prfAckTencent_StartTenProtect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckMoveToLobby ( unsigned char MessageType )
{
	static UFunction* prfAckMoveToLobby = 0;
	UBTPageServerSelection_TCP_execrfAckMoveToLobby_Parms parms;

	if ( !prfAckMoveToLobby )
		prfAckMoveToLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckMoveToLobby" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckMoveToLobby, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPopUpMessage ( int MessageType )
{
	static UFunction* prfAckPopUpMessage = 0;
	UBTPageServerSelection_TCP_execrfAckPopUpMessage_Parms parms;

	if ( !prfAckPopUpMessage )
		prfAckPopUpMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPopUpMessage" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckPopUpMessage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfUpdateWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfUpdateWebzenShopScriptVersion = 0;
	UBTPageServerSelection_TCP_execrfUpdateWebzenShopScriptVersion_Parms parms;

	if ( !prfUpdateWebzenShopScriptVersion )
		prfUpdateWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfUpdateWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfUpdateWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckLogOut ( unsigned char Result, unsigned char Reason )
{
	static UFunction* prfAckLogOut = 0;
	UBTPageServerSelection_TCP_execrfAckLogOut_Parms parms;

	if ( !prfAckLogOut )
		prfAckLogOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckLogOut" );

	parms.Result = Result;
	parms.Reason = Reason;
	this->ProcessEvent ( prfAckLogOut, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckServerType ( unsigned char Type )
{
	static UFunction* prfAckServerType = 0;
	UBTPageServerSelection_TCP_execrfAckServerType_Parms parms;

	if ( !prfAckServerType )
		prfAckServerType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckServerType" );

	parms.Type = Type;
	this->ProcessEvent ( prfAckServerType, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPaidItem_NotifyChangeClanname ( struct FString NewClanname )
{
	static UFunction* prfAckPaidItem_NotifyChangeClanname = 0;
	UBTPageServerSelection_TCP_execrfAckPaidItem_NotifyChangeClanname_Parms parms;

	if ( !prfAckPaidItem_NotifyChangeClanname )
		prfAckPaidItem_NotifyChangeClanname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPaidItem_NotifyChangeClanname" );

	parms.NewClanname = NewClanname;
	this->ProcessEvent ( prfAckPaidItem_NotifyChangeClanname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPaidItem_ChangeClanname ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int RemainCount, struct FString NewClanname )
{
	static UFunction* prfAckPaidItem_ChangeClanname = 0;
	UBTPageServerSelection_TCP_execrfAckPaidItem_ChangeClanname_Parms parms;

	if ( !prfAckPaidItem_ChangeClanname )
		prfAckPaidItem_ChangeClanname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPaidItem_ChangeClanname" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.RemainCount = RemainCount;
	parms.NewClanname = NewClanname;
	this->ProcessEvent ( prfAckPaidItem_ChangeClanname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPaidItem_ChangeCharname ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int RemainCount, struct FString NewCharname )
{
	static UFunction* prfAckPaidItem_ChangeCharname = 0;
	UBTPageServerSelection_TCP_execrfAckPaidItem_ChangeCharname_Parms parms;

	if ( !prfAckPaidItem_ChangeCharname )
		prfAckPaidItem_ChangeCharname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPaidItem_ChangeCharname" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.RemainCount = RemainCount;
	parms.NewCharname = NewCharname;
	this->ProcessEvent ( prfAckPaidItem_ChangeCharname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckGetMyMailBoxState ( int Result, unsigned char IsFull, int NewMailCount )
{
	static UFunction* prfAckGetMyMailBoxState = 0;
	UBTPageServerSelection_TCP_execrfAckGetMyMailBoxState_Parms parms;

	if ( !prfAckGetMyMailBoxState )
		prfAckGetMyMailBoxState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckGetMyMailBoxState" );

	parms.Result = Result;
	parms.IsFull = IsFull;
	parms.NewMailCount = NewMailCount;
	this->ProcessEvent ( prfAckGetMyMailBoxState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckSetLookForClan ( int Result, struct FString ErrMsg, unsigned char IsLookingFor )
{
	static UFunction* prfAckSetLookForClan = 0;
	UBTPageServerSelection_TCP_execrfAckSetLookForClan_Parms parms;

	if ( !prfAckSetLookForClan )
		prfAckSetLookForClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckSetLookForClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsLookingFor = IsLookingFor;
	this->ProcessEvent ( prfAckSetLookForClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPaidItem_RelayBroadcast ( struct FString CharName, struct FString Msg )
{
	static UFunction* prfAckPaidItem_RelayBroadcast = 0;
	UBTPageServerSelection_TCP_execrfAckPaidItem_RelayBroadcast_Parms parms;

	if ( !prfAckPaidItem_RelayBroadcast )
		prfAckPaidItem_RelayBroadcast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPaidItem_RelayBroadcast" );

	parms.CharName = CharName;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckPaidItem_RelayBroadcast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckRecvSystemMsg ( unsigned char CommunityType, struct FSystemMsgParam MsgInfo )
{
	static UFunction* prfAckRecvSystemMsg = 0;
	UBTPageServerSelection_TCP_execrfAckRecvSystemMsg_Parms parms;

	if ( !prfAckRecvSystemMsg )
		prfAckRecvSystemMsg = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckRecvSystemMsg" );

	parms.CommunityType = CommunityType;
	parms.MsgInfo = MsgInfo;
	this->ProcessEvent ( prfAckRecvSystemMsg, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqRecvChatWispher ( struct FString CharnameFrom, struct FString Message )
{
	static UFunction* prfReqRecvChatWispher = 0;
	UBTPageServerSelection_TCP_execrfReqRecvChatWispher_Parms parms;

	if ( !prfReqRecvChatWispher )
		prfReqRecvChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqRecvChatWispher" );

	parms.CharnameFrom = CharnameFrom;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckChatClan ( struct FString CharName, struct FString Message, int Result )
{
	static UFunction* prfAckChatClan = 0;
	UBTPageServerSelection_TCP_execrfAckChatClan_Parms parms;

	if ( !prfAckChatClan )
		prfAckChatClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckChatClan" );

	parms.CharName = CharName;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckChatNormal ( int id, struct FString Sender, struct FString Message, int Result )
{
	static UFunction* prfAckChatNormal = 0;
	UBTPageServerSelection_TCP_execrfAckChatNormal_Parms parms;

	if ( !prfAckChatNormal )
		prfAckChatNormal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckChatNormal" );

	parms.id = id;
	parms.Sender = Sender;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatNormal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckGMLeaveRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMLeaveRoom = 0;
	UBTPageServerSelection_TCP_execrfAckGMLeaveRoom_Parms parms;

	if ( !prfAckGMLeaveRoom )
		prfAckGMLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckGMLeaveRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckGMEnterRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMEnterRoom = 0;
	UBTPageServerSelection_TCP_execrfAckGMEnterRoom_Parms parms;

	if ( !prfAckGMEnterRoom )
		prfAckGMEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckGMEnterRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckForceDisconnectUser_GM ( int Result, struct FString ErrMsg, struct FString CharName )
{
	static UFunction* prfAckForceDisconnectUser_GM = 0;
	UBTPageServerSelection_TCP_execrfAckForceDisconnectUser_GM_Parms parms;

	if ( !prfAckForceDisconnectUser_GM )
		prfAckForceDisconnectUser_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckForceDisconnectUser_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckForceDisconnectUser_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckNotice_GM ( int Result, struct FString ErrMsg, unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, struct FString Msg )
{
	static UFunction* prfAckNotice_GM = 0;
	UBTPageServerSelection_TCP_execrfAckNotice_GM_Parms parms;

	if ( !prfAckNotice_GM )
		prfAckNotice_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckNotice_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeType = NoticeType;
	parms.ServerID = ServerID;
	parms.ChannelNum = ChannelNum;
	parms.GameRoomNum = GameRoomNum;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckNotice_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckChangeRoomTitle_GM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangeRoomTitle_GM = 0;
	UBTPageServerSelection_TCP_execrfAckChangeRoomTitle_GM_Parms parms;

	if ( !prfAckChangeRoomTitle_GM )
		prfAckChangeRoomTitle_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckChangeRoomTitle_GM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangeRoomTitle_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckCharBlockInfo ( int Result, struct FBtrDouble ChatBlockStartTime, struct FBtrDouble ChatBlockEndTime, class TArray< struct FBtrDouble > BlockedItemIdx )
{
	static UFunction* prfAckCharBlockInfo = 0;
	UBTPageServerSelection_TCP_execrfAckCharBlockInfo_Parms parms;

	if ( !prfAckCharBlockInfo )
		prfAckCharBlockInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckCharBlockInfo" );

	parms.Result = Result;
	parms.ChatBlockStartTime = ChatBlockStartTime;
	parms.ChatBlockEndTime = ChatBlockEndTime;
	parms.BlockedItemIdx = BlockedItemIdx;
	this->ProcessEvent ( prfAckCharBlockInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPaidItem_NotifyChangeClanMark ( struct FString ClanName, int Pattern, int BG, int BL )
{
	static UFunction* prfAckPaidItem_NotifyChangeClanMark = 0;
	UBTPageServerSelection_TCP_execrfAckPaidItem_NotifyChangeClanMark_Parms parms;

	if ( !prfAckPaidItem_NotifyChangeClanMark )
		prfAckPaidItem_NotifyChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPaidItem_NotifyChangeClanMark" );

	parms.ClanName = ClanName;
	parms.Pattern = Pattern;
	parms.BG = BG;
	parms.BL = BL;
	this->ProcessEvent ( prfAckPaidItem_NotifyChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPaidItem_ChangeClanMark ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_ChangeClanMark = 0;
	UBTPageServerSelection_TCP_execrfAckPaidItem_ChangeClanMark_Parms parms;

	if ( !prfAckPaidItem_ChangeClanMark )
		prfAckPaidItem_ChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPaidItem_ChangeClanMark" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_ChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPaidItem_ClanMarkDupCheck ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckPaidItem_ClanMarkDupCheck = 0;
	UBTPageServerSelection_TCP_execrfAckPaidItem_ClanMarkDupCheck_Parms parms;

	if ( !prfAckPaidItem_ClanMarkDupCheck )
		prfAckPaidItem_ClanMarkDupCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPaidItem_ClanMarkDupCheck" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckPaidItem_ClanMarkDupCheck, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPaidItem_BroadCast ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_BroadCast = 0;
	UBTPageServerSelection_TCP_execrfAckPaidItem_BroadCast_Parms parms;

	if ( !prfAckPaidItem_BroadCast )
		prfAckPaidItem_BroadCast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPaidItem_BroadCast" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_BroadCast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPaidItem_EraseRecord ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int Command, int RemainCount )
{
	static UFunction* prfAckPaidItem_EraseRecord = 0;
	UBTPageServerSelection_TCP_execrfAckPaidItem_EraseRecord_Parms parms;

	if ( !prfAckPaidItem_EraseRecord )
		prfAckPaidItem_EraseRecord = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPaidItem_EraseRecord" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.Command = Command;
	parms.RemainCount = RemainCount;
	this->ProcessEvent ( prfAckPaidItem_EraseRecord, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckWebzenBillingUseStorageItem ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int ItemID, struct FBtrDouble ItemExtra )
{
	static UFunction* prfAckWebzenBillingUseStorageItem = 0;
	UBTPageServerSelection_TCP_execrfAckWebzenBillingUseStorageItem_Parms parms;

	if ( !prfAckWebzenBillingUseStorageItem )
		prfAckWebzenBillingUseStorageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckWebzenBillingUseStorageItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.ItemID = ItemID;
	parms.ItemExtra = ItemExtra;
	this->ProcessEvent ( prfAckWebzenBillingUseStorageItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckWebzenBillingStorageListEnd (  )
{
	static UFunction* prfAckWebzenBillingStorageListEnd = 0;
	UBTPageServerSelection_TCP_execrfAckWebzenBillingStorageListEnd_Parms parms;

	if ( !prfAckWebzenBillingStorageListEnd )
		prfAckWebzenBillingStorageListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckWebzenBillingStorageListEnd" );

	this->ProcessEvent ( prfAckWebzenBillingStorageListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckWebzenBillingStorageList ( class TArray< int > Seq, class TArray< int > ItemSeq, class TArray< int > GroupCode, class TArray< int > ShareFlag, class TArray< int > ProductSeq, class TArray< struct FString > CashName, class TArray< struct FBtrDouble > CashPoint, class TArray< struct FString > SendAccountID, class TArray< struct FString > SendMessage, class TArray< unsigned char > ItemType, class TArray< unsigned char > RelationType, class TArray< int > ProductType, class TArray< int > PriceSeq )
{
	static UFunction* prfAckWebzenBillingStorageList = 0;
	UBTPageServerSelection_TCP_execrfAckWebzenBillingStorageList_Parms parms;

	if ( !prfAckWebzenBillingStorageList )
		prfAckWebzenBillingStorageList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckWebzenBillingStorageList" );

	parms.Seq = Seq;
	parms.ItemSeq = ItemSeq;
	parms.GroupCode = GroupCode;
	parms.ShareFlag = ShareFlag;
	parms.ProductSeq = ProductSeq;
	parms.CashName = CashName;
	parms.CashPoint = CashPoint;
	parms.SendAccountID = SendAccountID;
	parms.SendMessage = SendMessage;
	parms.ItemType = ItemType;
	parms.RelationType = RelationType;
	parms.ProductType = ProductType;
	parms.PriceSeq = PriceSeq;
	this->ProcessEvent ( prfAckWebzenBillingStorageList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckWebzenBillingStorageListStart ( int Result, struct FString ErrMsg, int TotalCount, int TotalPage, int CurPage )
{
	static UFunction* prfAckWebzenBillingStorageListStart = 0;
	UBTPageServerSelection_TCP_execrfAckWebzenBillingStorageListStart_Parms parms;

	if ( !prfAckWebzenBillingStorageListStart )
		prfAckWebzenBillingStorageListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckWebzenBillingStorageListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalCount = TotalCount;
	parms.TotalPage = TotalPage;
	parms.CurPage = CurPage;
	this->ProcessEvent ( prfAckWebzenBillingStorageListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckEquipSkill ( int ChangedNewSkillID, int ChangedNewSkillUniqueID, unsigned char ChangedNewSlotPosition, int ChangedOldSkillID, int ChangedOldSkillUniqueID, unsigned char ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipSkill = 0;
	UBTPageServerSelection_TCP_execrfAckEquipSkill_Parms parms;

	if ( !prfAckEquipSkill )
		prfAckEquipSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckEquipSkill" );

	parms.ChangedNewSkillID = ChangedNewSkillID;
	parms.ChangedNewSkillUniqueID = ChangedNewSkillUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldSkillID = ChangedOldSkillID;
	parms.ChangedOldSkillUniqueID = ChangedOldSkillUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipSkill, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckEquipItem ( int ChangedNewItemID, struct FBtrDouble ChangedNewUniqueID, int ChangedNewSlotPosition, int ChangedOldItemID, struct FBtrDouble ChangedOldUniqueID, int ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipItem = 0;
	UBTPageServerSelection_TCP_execrfAckEquipItem_Parms parms;

	if ( !prfAckEquipItem )
		prfAckEquipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckEquipItem" );

	parms.ChangedNewItemID = ChangedNewItemID;
	parms.ChangedNewUniqueID = ChangedNewUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldItemID = ChangedOldItemID;
	parms.ChangedOldUniqueID = ChangedOldUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckRandomBox_Use ( int Result, struct FString ErrMsg, struct FBtrDouble RandomBoxItemIdx, int RandomBxoItemCount, class TArray< int > ItemIDChoose, class TArray< int > PartIDChoose, class TArray< int > PeriodOnChoosenItem, class TArray< int > StackCountOnChoosenItem, class TArray< unsigned char > bHave, class TArray< struct FBtrDouble > ItemIdx, class TArray< struct FBtrDouble > UntilTime, class TArray< int > StackCount )
{
	static UFunction* prfAckRandomBox_Use = 0;
	UBTPageServerSelection_TCP_execrfAckRandomBox_Use_Parms parms;

	if ( !prfAckRandomBox_Use )
		prfAckRandomBox_Use = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckRandomBox_Use" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RandomBoxItemIdx = RandomBoxItemIdx;
	parms.RandomBxoItemCount = RandomBxoItemCount;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	parms.PeriodOnChoosenItem = PeriodOnChoosenItem;
	parms.StackCountOnChoosenItem = StackCountOnChoosenItem;
	parms.bHave = bHave;
	parms.ItemIdx = ItemIdx;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckRandomBox_Use, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckRemoveBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRemoveBlockUserList = 0;
	UBTPageServerSelection_TCP_execrfAckRemoveBlockUserList_Parms parms;

	if ( !prfAckRemoveBlockUserList )
		prfAckRemoveBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckRemoveBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRemoveBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckAddBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckAddBlockUserList = 0;
	UBTPageServerSelection_TCP_execrfAckAddBlockUserList_Parms parms;

	if ( !prfAckAddBlockUserList )
		prfAckAddBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckAddBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckAddBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPCBangUserListEnd (  )
{
	static UFunction* prfAckPCBangUserListEnd = 0;
	UBTPageServerSelection_TCP_execrfAckPCBangUserListEnd_Parms parms;

	if ( !prfAckPCBangUserListEnd )
		prfAckPCBangUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPCBangUserListEnd" );

	this->ProcessEvent ( prfAckPCBangUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPCBangUserList ( class TArray< struct FString > FriendName, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > Level, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, class TArray< unsigned char > IsCombat, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckPCBangUserList = 0;
	UBTPageServerSelection_TCP_execrfAckPCBangUserList_Parms parms;

	if ( !prfAckPCBangUserList )
		prfAckPCBangUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPCBangUserList" );

	parms.FriendName = FriendName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.Level = Level;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.IsCombat = IsCombat;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckPCBangUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckPCBangUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckPCBangUserListStart = 0;
	UBTPageServerSelection_TCP_execrfAckPCBangUserListStart_Parms parms;

	if ( !prfAckPCBangUserListStart )
		prfAckPCBangUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckPCBangUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckPCBangUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckClanUserList ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< int > ClanWinCnt, class TArray< int > ClanLoseCnt, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > DudeId )
{
	static UFunction* prfAckClanUserList = 0;
	UBTPageServerSelection_TCP_execrfAckClanUserList_Parms parms;

	if ( !prfAckClanUserList )
		prfAckClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckClanUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWinCnt = ClanWinCnt;
	parms.ClanLoseCnt = ClanLoseCnt;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.DudeId = DudeId;
	this->ProcessEvent ( prfAckClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckClanUserListEnd (  )
{
	static UFunction* prfAckClanUserListEnd = 0;
	UBTPageServerSelection_TCP_execrfAckClanUserListEnd_Parms parms;

	if ( !prfAckClanUserListEnd )
		prfAckClanUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckClanUserListEnd" );

	this->ProcessEvent ( prfAckClanUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckClanUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanUserListStart = 0;
	UBTPageServerSelection_TCP_execrfAckClanUserListStart_Parms parms;

	if ( !prfAckClanUserListStart )
		prfAckClanUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckClanUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckBlockUserList ( class TArray< struct FString > CharName )
{
	static UFunction* prfAckBlockUserList = 0;
	UBTPageServerSelection_TCP_execrfAckBlockUserList_Parms parms;

	if ( !prfAckBlockUserList )
		prfAckBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckBlockUserList" );

	parms.CharName = CharName;
	this->ProcessEvent ( prfAckBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckBlockUserListEnd (  )
{
	static UFunction* prfAckBlockUserListEnd = 0;
	UBTPageServerSelection_TCP_execrfAckBlockUserListEnd_Parms parms;

	if ( !prfAckBlockUserListEnd )
		prfAckBlockUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckBlockUserListEnd" );

	this->ProcessEvent ( prfAckBlockUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckBlockUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckBlockUserListStart = 0;
	UBTPageServerSelection_TCP_execrfAckBlockUserListStart_Parms parms;

	if ( !prfAckBlockUserListStart )
		prfAckBlockUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckBlockUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckBlockUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckFriendListEnd (  )
{
	static UFunction* prfAckFriendListEnd = 0;
	UBTPageServerSelection_TCP_execrfAckFriendListEnd_Parms parms;

	if ( !prfAckFriendListEnd )
		prfAckFriendListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckFriendListEnd" );

	this->ProcessEvent ( prfAckFriendListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckFriendList ( class TArray< struct FString > FriendName, class TArray< unsigned char > IsLogOn, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > LevelMarkID, class TArray< int > ClanLevel, class TArray< int > Level, class TArray< unsigned char > IsLookForClan )
{
	static UFunction* prfAckFriendList = 0;
	UBTPageServerSelection_TCP_execrfAckFriendList_Parms parms;

	if ( !prfAckFriendList )
		prfAckFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckFriendList" );

	parms.FriendName = FriendName;
	parms.IsLogOn = IsLogOn;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.LevelMarkID = LevelMarkID;
	parms.ClanLevel = ClanLevel;
	parms.Level = Level;
	parms.IsLookForClan = IsLookForClan;
	this->ProcessEvent ( prfAckFriendList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckFriendListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckFriendListStart = 0;
	UBTPageServerSelection_TCP_execrfAckFriendListStart_Parms parms;

	if ( !prfAckFriendListStart )
		prfAckFriendListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckFriendListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckFriendListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckRegisterMainPCBang ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRegisterMainPCBang = 0;
	UBTPageServerSelection_TCP_execrfAckRegisterMainPCBang_Parms parms;

	if ( !prfAckRegisterMainPCBang )
		prfAckRegisterMainPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckRegisterMainPCBang" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRegisterMainPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqIsPaidWebzenPCBang ( unsigned char IsPaid )
{
	static UFunction* prfReqIsPaidWebzenPCBang = 0;
	UBTPageServerSelection_TCP_execrfReqIsPaidWebzenPCBang_Parms parms;

	if ( !prfReqIsPaidWebzenPCBang )
		prfReqIsPaidWebzenPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqIsPaidWebzenPCBang" );

	parms.IsPaid = IsPaid;
	this->ProcessEvent ( prfReqIsPaidWebzenPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckClanInfo ( struct FClanInfo stClanInfo )
{
	static UFunction* prfAckClanInfo = 0;
	UBTPageServerSelection_TCP_execrfAckClanInfo_Parms parms;

	if ( !prfAckClanInfo )
		prfAckClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckClanInfo" );

	parms.stClanInfo = stClanInfo;
	this->ProcessEvent ( prfAckClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckCharInfo ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FCharInfo stCharInfo, unsigned char InClanRank, int ClanLevel )
{
	static UFunction* prfAckCharInfo = 0;
	UBTPageServerSelection_TCP_execrfAckCharInfo_Parms parms;

	if ( !prfAckCharInfo )
		prfAckCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.stCharInfo = stCharInfo;
	parms.InClanRank = InClanRank;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckRegisteredPCBangInfo ( int Result, struct FString ErrMsg, unsigned char IsRegisteredPCBang, unsigned char IsMainPCBang, struct FString PCBangName )
{
	static UFunction* prfAckRegisteredPCBangInfo = 0;
	UBTPageServerSelection_TCP_execrfAckRegisteredPCBangInfo_Parms parms;

	if ( !prfAckRegisteredPCBangInfo )
		prfAckRegisteredPCBangInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckRegisteredPCBangInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsRegisteredPCBang = IsRegisteredPCBang;
	parms.IsMainPCBang = IsMainPCBang;
	parms.PCBangName = PCBangName;
	this->ProcessEvent ( prfAckRegisteredPCBangInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfAckWebzenShopScriptVersion = 0;
	UBTPageServerSelection_TCP_execrfAckWebzenShopScriptVersion_Parms parms;

	if ( !prfAckWebzenShopScriptVersion )
		prfAckWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfAckWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckMyMoney ( int Result, struct FString ErrMsg, int Point, int Cash )
{
	static UFunction* prfAckMyMoney = 0;
	UBTPageServerSelection_TCP_execrfAckMyMoney_Parms parms;

	if ( !prfAckMyMoney )
		prfAckMyMoney = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckMyMoney" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Point = Point;
	parms.Cash = Cash;
	this->ProcessEvent ( prfAckMyMoney, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckWebzenCash ( int Result, struct FString ErrMsg, struct FBtrDouble PCoinCash, struct FBtrDouble CCoinCash )
{
	static UFunction* prfAckWebzenCash = 0;
	UBTPageServerSelection_TCP_execrfAckWebzenCash_Parms parms;

	if ( !prfAckWebzenCash )
		prfAckWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PCoinCash = PCoinCash;
	parms.CCoinCash = CCoinCash;
	this->ProcessEvent ( prfAckWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqClanMatch_InviteCrewResult ( struct FString Invitee, int Result )
{
	static UFunction* prfReqClanMatch_InviteCrewResult = 0;
	UBTPageServerSelection_TCP_execrfReqClanMatch_InviteCrewResult_Parms parms;

	if ( !prfReqClanMatch_InviteCrewResult )
		prfReqClanMatch_InviteCrewResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqClanMatch_InviteCrewResult" );

	parms.Invitee = Invitee;
	parms.Result = Result;
	this->ProcessEvent ( prfReqClanMatch_InviteCrewResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqClanMatch_RecvInviteCrew ( struct FString Inviter, struct FString ServerIP, int Port, int WaittingID, struct FString Msg, int MapNum, int InviteUserChannelNum, struct FString LeaderName, struct FString RoomName )
{
	static UFunction* prfReqClanMatch_RecvInviteCrew = 0;
	UBTPageServerSelection_TCP_execrfReqClanMatch_RecvInviteCrew_Parms parms;

	if ( !prfReqClanMatch_RecvInviteCrew )
		prfReqClanMatch_RecvInviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqClanMatch_RecvInviteCrew" );

	parms.Inviter = Inviter;
	parms.ServerIP = ServerIP;
	parms.Port = Port;
	parms.WaittingID = WaittingID;
	parms.Msg = Msg;
	parms.MapNum = MapNum;
	parms.InviteUserChannelNum = InviteUserChannelNum;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	this->ProcessEvent ( prfReqClanMatch_RecvInviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckClanMatch_InviteCrew ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_InviteCrew = 0;
	UBTPageServerSelection_TCP_execrfAckClanMatch_InviteCrew_Parms parms;

	if ( !prfAckClanMatch_InviteCrew )
		prfAckClanMatch_InviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckClanMatch_InviteCrew" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_InviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckLimitedListInChannel ( int Result, class TArray< int > LimitedMapID, class TArray< int > LimitedModeID )
{
	static UFunction* prfAckLimitedListInChannel = 0;
	UBTPageServerSelection_TCP_execrfAckLimitedListInChannel_Parms parms;

	if ( !prfAckLimitedListInChannel )
		prfAckLimitedListInChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckLimitedListInChannel" );

	parms.Result = Result;
	parms.LimitedMapID = LimitedMapID;
	parms.LimitedModeID = LimitedModeID;
	this->ProcessEvent ( prfAckLimitedListInChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqDailyQuestNewAvailable ( class TArray< int > ExpiredQuestID, class TArray< int > NewQuestID )
{
	static UFunction* prfReqDailyQuestNewAvailable = 0;
	UBTPageServerSelection_TCP_execrfReqDailyQuestNewAvailable_Parms parms;

	if ( !prfReqDailyQuestNewAvailable )
		prfReqDailyQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqDailyQuestNewAvailable" );

	parms.ExpiredQuestID = ExpiredQuestID;
	parms.NewQuestID = NewQuestID;
	this->ProcessEvent ( prfReqDailyQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqQuestNewAvailable ( class TArray< int > AchivedQuestID, class TArray< int > NewQuestID, class TArray< unsigned char > IsDailyQuest, class TArray< int > ExpiredQuest )
{
	static UFunction* prfReqQuestNewAvailable = 0;
	UBTPageServerSelection_TCP_execrfReqQuestNewAvailable_Parms parms;

	if ( !prfReqQuestNewAvailable )
		prfReqQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqQuestNewAvailable" );

	parms.AchivedQuestID = AchivedQuestID;
	parms.NewQuestID = NewQuestID;
	parms.IsDailyQuest = IsDailyQuest;
	parms.ExpiredQuest = ExpiredQuest;
	this->ProcessEvent ( prfReqQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckQuestUpdate ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestUpdate = 0;
	UBTPageServerSelection_TCP_execrfAckQuestUpdate_Parms parms;

	if ( !prfAckQuestUpdate )
		prfAckQuestUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckQuestUpdate" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestUpdate, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckQuestListEnd (  )
{
	static UFunction* prfAckQuestListEnd = 0;
	UBTPageServerSelection_TCP_execrfAckQuestListEnd_Parms parms;

	if ( !prfAckQuestListEnd )
		prfAckQuestListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckQuestListEnd" );

	this->ProcessEvent ( prfAckQuestListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckQuestList ( class TArray< int > QuestID, class TArray< int > CountPrograss, class TArray< unsigned char > IsDailyQuest )
{
	static UFunction* prfAckQuestList = 0;
	UBTPageServerSelection_TCP_execrfAckQuestList_Parms parms;

	if ( !prfAckQuestList )
		prfAckQuestList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckQuestList" );

	parms.QuestID = QuestID;
	parms.CountPrograss = CountPrograss;
	parms.IsDailyQuest = IsDailyQuest;
	this->ProcessEvent ( prfAckQuestList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckQuestListStart ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestListStart = 0;
	UBTPageServerSelection_TCP_execrfAckQuestListStart_Parms parms;

	if ( !prfAckQuestListStart )
		prfAckQuestListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckQuestListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckRecvInviteGameRoomResult ( int Result )
{
	static UFunction* prfAckRecvInviteGameRoomResult = 0;
	UBTPageServerSelection_TCP_execrfAckRecvInviteGameRoomResult_Parms parms;

	if ( !prfAckRecvInviteGameRoomResult )
		prfAckRecvInviteGameRoomResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckRecvInviteGameRoomResult" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckRecvInviteGameRoomResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqRecvInviteGameRoom ( struct FString InviteUserServerName, int InviteUserServerID, int InviteUserChannelNumber, struct FString RoomUniqueID, int RoomNumber, struct FString RoomName, unsigned char RoomState, struct FString MapName, struct FString OwnerName, unsigned char GameMode, unsigned char WeaponLimit, unsigned char IsTeamBalance, struct FString Password, struct FString InviteCharName )
{
	static UFunction* prfReqRecvInviteGameRoom = 0;
	UBTPageServerSelection_TCP_execrfReqRecvInviteGameRoom_Parms parms;

	if ( !prfReqRecvInviteGameRoom )
		prfReqRecvInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqRecvInviteGameRoom" );

	parms.InviteUserServerName = InviteUserServerName;
	parms.InviteUserServerID = InviteUserServerID;
	parms.InviteUserChannelNumber = InviteUserChannelNumber;
	parms.RoomUniqueID = RoomUniqueID;
	parms.RoomNumber = RoomNumber;
	parms.RoomName = RoomName;
	parms.RoomState = RoomState;
	parms.MapName = MapName;
	parms.OwnerName = OwnerName;
	parms.GameMode = GameMode;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Password = Password;
	parms.InviteCharName = InviteCharName;
	this->ProcessEvent ( prfReqRecvInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckInviteGameRoom ( int Result, unsigned char Answer, struct FString GuestCharName )
{
	static UFunction* prfAckInviteGameRoom = 0;
	UBTPageServerSelection_TCP_execrfAckInviteGameRoom_Parms parms;

	if ( !prfAckInviteGameRoom )
		prfAckInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckInviteGameRoom" );

	parms.Result = Result;
	parms.Answer = Answer;
	parms.GuestCharName = GuestCharName;
	this->ProcessEvent ( prfAckInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckItemListInItemBox ( int Result, struct FString ErrMsg, struct FBtrDouble ItemUniqueID, int BoxItemID, class TArray< int > ItemID, class TArray< int > PartID )
{
	static UFunction* prfAckItemListInItemBox = 0;
	UBTPageServerSelection_TCP_execrfAckItemListInItemBox_Parms parms;

	if ( !prfAckItemListInItemBox )
		prfAckItemListInItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckItemListInItemBox" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemUniqueID = ItemUniqueID;
	parms.BoxItemID = BoxItemID;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	this->ProcessEvent ( prfAckItemListInItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckGetServerTime ( struct FBtrDouble ServerTime, struct FString ClientIP )
{
	static UFunction* prfAckGetServerTime = 0;
	UBTPageServerSelection_TCP_execrfAckGetServerTime_Parms parms;

	if ( !prfAckGetServerTime )
		prfAckGetServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckGetServerTime" );

	parms.ServerTime = ServerTime;
	parms.ClientIP = ClientIP;
	this->ProcessEvent ( prfAckGetServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckExceedMaxUser (  )
{
	static UFunction* prfAckExceedMaxUser = 0;
	UBTPageServerSelection_TCP_execrfAckExceedMaxUser_Parms parms;

	if ( !prfAckExceedMaxUser )
		prfAckExceedMaxUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckExceedMaxUser" );

	this->ProcessEvent ( prfAckExceedMaxUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckBuyShopItem ( int ItemCount, class TArray< int > Result, class TArray< int > BoughtItemTypeID, class TArray< struct FBtrDouble > BoughtItemUniqueID, class TArray< int > BoughtPartID, class TArray< struct FBtrDouble > BoughtUntilTIme, class TArray< int > BoughtStackCnt, int PointRemain, int CashRemain )
{
	static UFunction* prfAckBuyShopItem = 0;
	UBTPageServerSelection_TCP_execrfAckBuyShopItem_Parms parms;

	if ( !prfAckBuyShopItem )
		prfAckBuyShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckBuyShopItem" );

	parms.ItemCount = ItemCount;
	parms.Result = Result;
	parms.BoughtItemTypeID = BoughtItemTypeID;
	parms.BoughtItemUniqueID = BoughtItemUniqueID;
	parms.BoughtPartID = BoughtPartID;
	parms.BoughtUntilTIme = BoughtUntilTIme;
	parms.BoughtStackCnt = BoughtStackCnt;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	this->ProcessEvent ( prfAckBuyShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqRecvForceDisconnected_FromGM ( int Result, struct FString ErrMsg )
{
	static UFunction* prfReqRecvForceDisconnected_FromGM = 0;
	UBTPageServerSelection_TCP_execrfReqRecvForceDisconnected_FromGM_Parms parms;

	if ( !prfReqRecvForceDisconnected_FromGM )
		prfReqRecvForceDisconnected_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqRecvForceDisconnected_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfReqRecvForceDisconnected_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqRecvNotice_FromGM ( int Result, struct FString ErrMsg, class TArray< struct FString > NoticeMsg, unsigned char IsFromDB )
{
	static UFunction* prfReqRecvNotice_FromGM = 0;
	UBTPageServerSelection_TCP_execrfReqRecvNotice_FromGM_Parms parms;

	if ( !prfReqRecvNotice_FromGM )
		prfReqRecvNotice_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqRecvNotice_FromGM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeMsg = NoticeMsg;
	parms.IsFromDB = IsFromDB;
	this->ProcessEvent ( prfReqRecvNotice_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckUpdateQSlot ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUpdateQSlot = 0;
	UBTPageServerSelection_TCP_execrfAckUpdateQSlot_Parms parms;

	if ( !prfAckUpdateQSlot )
		prfAckUpdateQSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckUpdateQSlot" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUpdateQSlot, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckRepairItem ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, int RepairCost, class TArray< int > DamageDegree )
{
	static UFunction* prfAckRepairItem = 0;
	UBTPageServerSelection_TCP_execrfAckRepairItem_Parms parms;

	if ( !prfAckRepairItem )
		prfAckRepairItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckRepairItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	parms.DamageDegree = DamageDegree;
	this->ProcessEvent ( prfAckRepairItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckRepairCost ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > RepairCost )
{
	static UFunction* prfAckRepairCost = 0;
	UBTPageServerSelection_TCP_execrfAckRepairCost_Parms parms;

	if ( !prfAckRepairCost )
		prfAckRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckRepairCost" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( prfAckRepairCost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqNotifyDurabilityZeroItem ( int Result, struct FString ErrMsg, int UserID, class TArray< struct FBtrDouble > ItemUniqueIDs, class TArray< int > ItemIDs, class TArray< int > ItemPartIDs, class TArray< unsigned char > ItemSlotPos )
{
	static UFunction* prfReqNotifyDurabilityZeroItem = 0;
	UBTPageServerSelection_TCP_execrfReqNotifyDurabilityZeroItem_Parms parms;

	if ( !prfReqNotifyDurabilityZeroItem )
		prfReqNotifyDurabilityZeroItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqNotifyDurabilityZeroItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.ItemUniqueIDs = ItemUniqueIDs;
	parms.ItemIDs = ItemIDs;
	parms.ItemPartIDs = ItemPartIDs;
	parms.ItemSlotPos = ItemSlotPos;
	this->ProcessEvent ( prfReqNotifyDurabilityZeroItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckNotifyExpiredSkillIDs ( int UserID, class TArray< struct FBtrDouble > ExpiredSkillUniqueIDs, class TArray< int > ExpiredSkillIDs, int Result, struct FString ErrMsg, class TArray< unsigned char > ExpiredSkillSlotPositions )
{
	static UFunction* prfAckNotifyExpiredSkillIDs = 0;
	UBTPageServerSelection_TCP_execrfAckNotifyExpiredSkillIDs_Parms parms;

	if ( !prfAckNotifyExpiredSkillIDs )
		prfAckNotifyExpiredSkillIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckNotifyExpiredSkillIDs" );

	parms.UserID = UserID;
	parms.ExpiredSkillUniqueIDs = ExpiredSkillUniqueIDs;
	parms.ExpiredSkillIDs = ExpiredSkillIDs;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ExpiredSkillSlotPositions = ExpiredSkillSlotPositions;
	this->ProcessEvent ( prfAckNotifyExpiredSkillIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckNotifyExpiredItemIDs ( int UserID, class TArray< struct FBtrDouble > ExpiredItemUniqueIDs, class TArray< int > ExpiredItemIDs, class TArray< int > ExpiredItemPartIDs, class TArray< unsigned char > ExpiredItemSlotPos, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckNotifyExpiredItemIDs = 0;
	UBTPageServerSelection_TCP_execrfAckNotifyExpiredItemIDs_Parms parms;

	if ( !prfAckNotifyExpiredItemIDs )
		prfAckNotifyExpiredItemIDs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckNotifyExpiredItemIDs" );

	parms.UserID = UserID;
	parms.ExpiredItemUniqueIDs = ExpiredItemUniqueIDs;
	parms.ExpiredItemIDs = ExpiredItemIDs;
	parms.ExpiredItemPartIDs = ExpiredItemPartIDs;
	parms.ExpiredItemSlotPos = ExpiredItemSlotPos;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckNotifyExpiredItemIDs, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfReqNotifyRelayServerAddr ( struct FString RelayIP, int RelayPort )
{
	static UFunction* prfReqNotifyRelayServerAddr = 0;
	UBTPageServerSelection_TCP_execrfReqNotifyRelayServerAddr_Parms parms;

	if ( !prfReqNotifyRelayServerAddr )
		prfReqNotifyRelayServerAddr = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfReqNotifyRelayServerAddr" );

	parms.RelayIP = RelayIP;
	parms.RelayPort = RelayPort;
	this->ProcessEvent ( prfReqNotifyRelayServerAddr, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckHash ( int Result, struct FString Error )
{
	static UFunction* prfAckHash = 0;
	UBTPageServerSelection_TCP_execrfAckHash_Parms parms;

	if ( !prfAckHash )
		prfAckHash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckHash" );

	parms.Result = Result;
	parms.Error = Error;
	this->ProcessEvent ( prfAckHash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckServerTime ( int Time )
{
	static UFunction* prfAckServerTime = 0;
	UBTPageServerSelection_TCP_execrfAckServerTime_Parms parms;

	if ( !prfAckServerTime )
		prfAckServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckServerTime" );

	parms.Time = Time;
	this->ProcessEvent ( prfAckServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckQSlotList ( int Result, struct FString ErrMsg, class TArray< int > QSlotID, class TArray< struct FString > QSlotName, class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWItemID, class TArray< struct FBtrDouble > PistolItemID, class TArray< struct FBtrDouble > TWItemID1, class TArray< struct FBtrDouble > TWItemID2, class TArray< int > Skill1, class TArray< int > Skill2, class TArray< int > Skill3, class TArray< int > Skill4 )
{
	static UFunction* prfAckQSlotList = 0;
	UBTPageServerSelection_TCP_execrfAckQSlotList_Parms parms;

	if ( !prfAckQSlotList )
		prfAckQSlotList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckQSlotList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.QSlotID = QSlotID;
	parms.QSlotName = QSlotName;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWItemID = MWItemID;
	parms.PistolItemID = PistolItemID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1 = Skill1;
	parms.Skill2 = Skill2;
	parms.Skill3 = Skill3;
	parms.Skill4 = Skill4;
	this->ProcessEvent ( prfAckQSlotList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckUserSkillListEnd (  )
{
	static UFunction* prfAckUserSkillListEnd = 0;
	UBTPageServerSelection_TCP_execrfAckUserSkillListEnd_Parms parms;

	if ( !prfAckUserSkillListEnd )
		prfAckUserSkillListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckUserSkillListEnd" );

	this->ProcessEvent ( prfAckUserSkillListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckUserSkillList ( class TArray< int > UniqueSkillID, class TArray< int > SkillID, class TArray< struct FBtrDouble > UntilTime, class TArray< unsigned char > SlotPosition )
{
	static UFunction* prfAckUserSkillList = 0;
	UBTPageServerSelection_TCP_execrfAckUserSkillList_Parms parms;

	if ( !prfAckUserSkillList )
		prfAckUserSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckUserSkillList" );

	parms.UniqueSkillID = UniqueSkillID;
	parms.SkillID = SkillID;
	parms.UntilTime = UntilTime;
	parms.SlotPosition = SlotPosition;
	this->ProcessEvent ( prfAckUserSkillList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckUserSkillListStart ( int Count, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUserSkillListStart = 0;
	UBTPageServerSelection_TCP_execrfAckUserSkillListStart_Parms parms;

	if ( !prfAckUserSkillListStart )
		prfAckUserSkillListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckUserSkillListStart" );

	parms.Count = Count;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUserSkillListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckItemListEnd (  )
{
	static UFunction* prfAckItemListEnd = 0;
	UBTPageServerSelection_TCP_execrfAckItemListEnd_Parms parms;

	if ( !prfAckItemListEnd )
		prfAckItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckItemListEnd" );

	this->ProcessEvent ( prfAckItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckItemList ( class TArray< struct FBtrDouble > UniqueID, class TArray< int > ItemID, class TArray< int > ItemType, class TArray< int > Durability, class TArray< struct FBtrDouble > UntilTime, class TArray< int > SlotPosition, class TArray< int > AddPartsID, class TArray< int > DamageDegree, class TArray< unsigned char > ItemState, class TArray< int > StackCount, class TArray< int > PaintID, class TArray< int > TradeCount )
{
	static UFunction* prfAckItemList = 0;
	UBTPageServerSelection_TCP_execrfAckItemList_Parms parms;

	if ( !prfAckItemList )
		prfAckItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckItemList" );

	parms.UniqueID = UniqueID;
	parms.ItemID = ItemID;
	parms.ItemType = ItemType;
	parms.Durability = Durability;
	parms.UntilTime = UntilTime;
	parms.SlotPosition = SlotPosition;
	parms.AddPartsID = AddPartsID;
	parms.DamageDegree = DamageDegree;
	parms.ItemState = ItemState;
	parms.StackCount = StackCount;
	parms.PaintID = PaintID;
	parms.TradeCount = TradeCount;
	this->ProcessEvent ( prfAckItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckItemListStart ( int Count, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckItemListStart = 0;
	UBTPageServerSelection_TCP_execrfAckItemListStart_Parms parms;

	if ( !prfAckItemListStart )
		prfAckItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckItemListStart" );

	parms.Count = Count;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckLogin2 ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FBtrDouble CurServerTime, int CharDBID, unsigned char IsGM )
{
	static UFunction* prfAckLogin2 = 0;
	UBTPageServerSelection_TCP_execrfAckLogin2_Parms parms;

	if ( !prfAckLogin2 )
		prfAckLogin2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckLogin2" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.CurServerTime = CurServerTime;
	parms.CharDBID = CharDBID;
	parms.IsGM = IsGM;
	this->ProcessEvent ( prfAckLogin2, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckLeaveChannel ( int Result, struct FString UserID, int UID )
{
	static UFunction* prfAckLeaveChannel = 0;
	UBTPageServerSelection_TCP_execrfAckLeaveChannel_Parms parms;

	if ( !prfAckLeaveChannel )
		prfAckLeaveChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckLeaveChannel" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.UID = UID;
	this->ProcessEvent ( prfAckLeaveChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelection_TCP::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTPageServerSelection_TCP_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelection_TCP.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TcpLogin::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageLobby_TcpLogin_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TcpLogin.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TcpLogin::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageLobby_TcpLogin_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TcpLogin.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobby_TcpLogin::OnConnect ( int ErrCode )
{
	static UFunction* pOnConnect = 0;
	UBTPageLobby_TcpLogin_execOnConnect_Parms parms;

	if ( !pOnConnect )
		pOnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TcpLogin.OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pOnConnect, &parms, NULL );

}*/

/*bool UBTPageLobby_TCP::rfNotifyClanLevelup ( struct FString ClanName, int Levelup )
{
	static UFunction* prfNotifyClanLevelup = 0;
	UBTPageLobby_TCP_execrfNotifyClanLevelup_Parms parms;

	if ( !prfNotifyClanLevelup )
		prfNotifyClanLevelup = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfNotifyClanLevelup" );

	parms.ClanName = ClanName;
	parms.Levelup = Levelup;
	this->ProcessEvent ( prfNotifyClanLevelup, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfNotifyNewClanName ( struct FString New_NickName )
{
	static UFunction* prfNotifyNewClanName = 0;
	UBTPageLobby_TCP_execrfNotifyNewClanName_Parms parms;

	if ( !prfNotifyNewClanName )
		prfNotifyNewClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfNotifyNewClanName" );

	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfNotifyNewNickName ( int Community_Type, struct FString Old_NickName, struct FString New_NickName )
{
	static UFunction* prfNotifyNewNickName = 0;
	UBTPageLobby_TCP_execrfNotifyNewNickName_Parms parms;

	if ( !prfNotifyNewNickName )
		prfNotifyNewNickName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfNotifyNewNickName" );

	parms.Community_Type = Community_Type;
	parms.Old_NickName = Old_NickName;
	parms.New_NickName = New_NickName;
	this->ProcessEvent ( prfNotifyNewNickName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckGetRankingInfoListEnd (  )
{
	static UFunction* prfAckGetRankingInfoListEnd = 0;
	UBTPageLobby_TCP_execrfAckGetRankingInfoListEnd_Parms parms;

	if ( !prfAckGetRankingInfoListEnd )
		prfAckGetRankingInfoListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckGetRankingInfoListEnd" );

	this->ProcessEvent ( prfAckGetRankingInfoListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckGetRankingInfoList ( int Result, unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckGetRankingInfoList = 0;
	UBTPageLobby_TCP_execrfAckGetRankingInfoList_Parms parms;

	if ( !prfAckGetRankingInfoList )
		prfAckGetRankingInfoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckGetRankingInfoList" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.CharName = CharName;
	parms.CharLevel = CharLevel;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Ranking_Accum = Ranking_Accum;
	parms.Ranking_Accum_Prev = Ranking_Accum_Prev;
	parms.Ranking_Accum_Exp = Ranking_Accum_Exp;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckGetRankingInfoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckGetRankingInfoListStart ( int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount )
{
	static UFunction* prfAckGetRankingInfoListStart = 0;
	UBTPageLobby_TCP_execrfAckGetRankingInfoListStart_Parms parms;

	if ( !prfAckGetRankingInfoListStart )
		prfAckGetRankingInfoListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckGetRankingInfoListStart" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckGetRankingInfoListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb )
{
	static UFunction* prfAckCharDetailInfo = 0;
	UBTPageLobby_TCP_execrfAckCharDetailInfo_Parms parms;

	if ( !prfAckCharDetailInfo )
		prfAckCharDetailInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckCharDetailInfo" );

	parms.MaxSerial = MaxSerial;
	parms.MaxScore = MaxScore;
	parms.MaxKill = MaxKill;
	parms.MaxAssist = MaxAssist;
	parms.Serial3 = Serial3;
	parms.Serial5 = Serial5;
	parms.Serial7 = Serial7;
	parms.Serial10 = Serial10;
	parms.Serial15 = Serial15;
	parms.AR = AR;
	parms.SMG = SMG;
	parms.SR = SR;
	parms.SW = SW;
	parms.Melee = Melee;
	parms.Grenade = Grenade;
	parms.FlashBang = FlashBang;
	parms.Foot = Foot;
	parms.AT4 = AT4;
	parms.MG = MG;
	parms.Fire = Fire;
	parms.RPG7 = RPG7;
	parms.TimeBomb = TimeBomb;
	parms.IcendiaryBomb = IcendiaryBomb;
	parms.ClusterBomb = ClusterBomb;
	parms.ByChopper = ByChopper;
	parms.Artillery = Artillery;
	parms.KillChopper = KillChopper;
	parms.FirstKill = FirstKill;
	parms.LastKill = LastKill;
	parms.AllKill = AllKill;
	parms.Dominate = Dominate;
	parms.InstallBomb = InstallBomb;
	parms.DefuseBomb = DefuseBomb;
	this->ProcessEvent ( prfAckCharDetailInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckFriendPosition ( int Result, struct FString TargetCharName, unsigned char ServerType, struct FString fServername, struct FString fServerShortName, struct FString fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, struct FString ChannelNickName, int GameRoomNum )
{
	static UFunction* prfAckFriendPosition = 0;
	UBTPageLobby_TCP_execrfAckFriendPosition_Parms parms;

	if ( !prfAckFriendPosition )
		prfAckFriendPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckFriendPosition" );

	parms.Result = Result;
	parms.TargetCharName = TargetCharName;
	parms.ServerType = ServerType;
	parms.fServername = fServername;
	parms.fServerShortName = fServerShortName;
	parms.fServerIP = fServerIP;
	parms.fServerPort = fServerPort;
	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.ChannelNum = ChannelNum;
	parms.ChannelNickName = ChannelNickName;
	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckFriendPosition, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckMoveToLobby ( unsigned char MessageType )
{
	static UFunction* prfAckMoveToLobby = 0;
	UBTPageLobby_TCP_execrfAckMoveToLobby_Parms parms;

	if ( !prfAckMoveToLobby )
		prfAckMoveToLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckMoveToLobby" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckMoveToLobby, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckLogOut ( unsigned char Result, unsigned char Reason )
{
	static UFunction* prfAckLogOut = 0;
	UBTPageLobby_TCP_execrfAckLogOut_Parms parms;

	if ( !prfAckLogOut )
		prfAckLogOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckLogOut" );

	parms.Result = Result;
	parms.Reason = Reason;
	this->ProcessEvent ( prfAckLogOut, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckClanMatch_PublicWaitRoomChanged ( int WaitRoomIdx, struct FString RoomName, int MapNum, int CurUserCount, int MaxUserCount, unsigned char Status, unsigned char IsPublic )
{
	static UFunction* prfAckClanMatch_PublicWaitRoomChanged = 0;
	UBTPageLobby_TCP_execrfAckClanMatch_PublicWaitRoomChanged_Parms parms;

	if ( !prfAckClanMatch_PublicWaitRoomChanged )
		prfAckClanMatch_PublicWaitRoomChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckClanMatch_PublicWaitRoomChanged" );

	parms.WaitRoomIdx = WaitRoomIdx;
	parms.RoomName = RoomName;
	parms.MapNum = MapNum;
	parms.CurUserCount = CurUserCount;
	parms.MaxUserCount = MaxUserCount;
	parms.Status = Status;
	parms.IsPublic = IsPublic;
	this->ProcessEvent ( prfAckClanMatch_PublicWaitRoomChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckNotifyEndTutorial ( int UserID, struct FString CharName, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckNotifyEndTutorial = 0;
	UBTPageLobby_TCP_execrfAckNotifyEndTutorial_Parms parms;

	if ( !prfAckNotifyEndTutorial )
		prfAckNotifyEndTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckNotifyEndTutorial" );

	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckNotifyEndTutorial, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckNotifyStartTutorial ( int Result, int UserID )
{
	static UFunction* prfAckNotifyStartTutorial = 0;
	UBTPageLobby_TCP_execrfAckNotifyStartTutorial_Parms parms;

	if ( !prfAckNotifyStartTutorial )
		prfAckNotifyStartTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckNotifyStartTutorial" );

	parms.Result = Result;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckNotifyStartTutorial, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckChangedRoomTitle_FromGM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangedRoomTitle_FromGM = 0;
	UBTPageLobby_TCP_execrfAckChangedRoomTitle_FromGM_Parms parms;

	if ( !prfAckChangedRoomTitle_FromGM )
		prfAckChangedRoomTitle_FromGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckChangedRoomTitle_FromGM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangedRoomTitle_FromGM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckClanMatch_EndPublicWaitRoomList (  )
{
	static UFunction* prfAckClanMatch_EndPublicWaitRoomList = 0;
	UBTPageLobby_TCP_execrfAckClanMatch_EndPublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_EndPublicWaitRoomList )
		prfAckClanMatch_EndPublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckClanMatch_EndPublicWaitRoomList" );

	this->ProcessEvent ( prfAckClanMatch_EndPublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckClanMatch_PublicWaitRoomList ( class TArray< int > WaitRoomIdx, class TArray< struct FString > LeaderName, class TArray< struct FString > RoomName, class TArray< int > MapNum, class TArray< int > CurUserCount, class TArray< int > MaxUserCount, class TArray< unsigned char > Status )
{
	static UFunction* prfAckClanMatch_PublicWaitRoomList = 0;
	UBTPageLobby_TCP_execrfAckClanMatch_PublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_PublicWaitRoomList )
		prfAckClanMatch_PublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckClanMatch_PublicWaitRoomList" );

	parms.WaitRoomIdx = WaitRoomIdx;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	parms.MapNum = MapNum;
	parms.CurUserCount = CurUserCount;
	parms.MaxUserCount = MaxUserCount;
	parms.Status = Status;
	this->ProcessEvent ( prfAckClanMatch_PublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckClanMatch_StartPublicWaitRoomList ( int Result, struct FString ErrMsg, int Count )
{
	static UFunction* prfAckClanMatch_StartPublicWaitRoomList = 0;
	UBTPageLobby_TCP_execrfAckClanMatch_StartPublicWaitRoomList_Parms parms;

	if ( !prfAckClanMatch_StartPublicWaitRoomList )
		prfAckClanMatch_StartPublicWaitRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckClanMatch_StartPublicWaitRoomList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Count = Count;
	this->ProcessEvent ( prfAckClanMatch_StartPublicWaitRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqExteriorRoomOwnerInfo ( int RoomNum, struct FString OwnerName, struct FString OwnerIP )
{
	static UFunction* prfReqExteriorRoomOwnerInfo = 0;
	UBTPageLobby_TCP_execrfReqExteriorRoomOwnerInfo_Parms parms;

	if ( !prfReqExteriorRoomOwnerInfo )
		prfReqExteriorRoomOwnerInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqExteriorRoomOwnerInfo" );

	parms.RoomNum = RoomNum;
	parms.OwnerName = OwnerName;
	parms.OwnerIP = OwnerIP;
	this->ProcessEvent ( prfReqExteriorRoomOwnerInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckQuestGetAvailableEventList ( int Result, struct FString ErrMsg, class TArray< int > QuestID )
{
	static UFunction* prfAckQuestGetAvailableEventList = 0;
	UBTPageLobby_TCP_execrfAckQuestGetAvailableEventList_Parms parms;

	if ( !prfAckQuestGetAvailableEventList )
		prfAckQuestGetAvailableEventList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckQuestGetAvailableEventList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.QuestID = QuestID;
	this->ProcessEvent ( prfAckQuestGetAvailableEventList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckClanMatch_GetReady ( int Result, struct FString ErrMsg, int RoomIndex )
{
	static UFunction* prfAckClanMatch_GetReady = 0;
	UBTPageLobby_TCP_execrfAckClanMatch_GetReady_Parms parms;

	if ( !prfAckClanMatch_GetReady )
		prfAckClanMatch_GetReady = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckClanMatch_GetReady" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomIndex = RoomIndex;
	this->ProcessEvent ( prfAckClanMatch_GetReady, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckClanMatch_Join ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Join = 0;
	UBTPageLobby_TCP_execrfAckClanMatch_Join_Parms parms;

	if ( !prfAckClanMatch_Join )
		prfAckClanMatch_Join = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckClanMatch_Join" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Join, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckAdjustClanMemberGrade ( int Result, struct FString ErrMsg, struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckAdjustClanMemberGrade = 0;
	UBTPageLobby_TCP_execrfAckAdjustClanMemberGrade_Parms parms;

	if ( !prfAckAdjustClanMemberGrade )
		prfAckAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckAdjustClanMemberGrade" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqRecvDeleteFriend ( int Result, struct FString FromCharName )
{
	static UFunction* prfReqRecvDeleteFriend = 0;
	UBTPageLobby_TCP_execrfReqRecvDeleteFriend_Parms parms;

	if ( !prfReqRecvDeleteFriend )
		prfReqRecvDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqRecvDeleteFriend" );

	parms.Result = Result;
	parms.FromCharName = FromCharName;
	this->ProcessEvent ( prfReqRecvDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckDeleteFriend ( int Result, class TArray< struct FString > FailedCharname )
{
	static UFunction* prfAckDeleteFriend = 0;
	UBTPageLobby_TCP_execrfAckDeleteFriend_Parms parms;

	if ( !prfAckDeleteFriend )
		prfAckDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckDeleteFriend" );

	parms.Result = Result;
	parms.FailedCharname = FailedCharname;
	this->ProcessEvent ( prfAckDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckChatWispher ( int Result, struct FString ErrMsg, struct FString ToCharName )
{
	static UFunction* prfAckChatWispher = 0;
	UBTPageLobby_TCP_execrfAckChatWispher_Parms parms;

	if ( !prfAckChatWispher )
		prfAckChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckChatWispher" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ToCharName = ToCharName;
	this->ProcessEvent ( prfAckChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTPageLobby_TCP_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqClanCharPersonelIntro ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfReqClanCharPersonelIntro = 0;
	UBTPageLobby_TCP_execrfReqClanCharPersonelIntro_Parms parms;

	if ( !prfReqClanCharPersonelIntro )
		prfReqClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqClanCharPersonelIntro" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfReqClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTPageLobby_TCP_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckRecvJoinClanResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvJoinClanResult = 0;
	UBTPageLobby_TCP_execrfAckRecvJoinClanResult_Parms parms;

	if ( !prfAckRecvJoinClanResult )
		prfAckRecvJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckRecvJoinClanResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckJoinClanResult ( struct FString ClanName, unsigned char Permit, struct FString PermitCharName )
{
	static UFunction* prfAckJoinClanResult = 0;
	UBTPageLobby_TCP_execrfAckJoinClanResult_Parms parms;

	if ( !prfAckJoinClanResult )
		prfAckJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckJoinClanResult" );

	parms.ClanName = ClanName;
	parms.Permit = Permit;
	parms.PermitCharName = PermitCharName;
	this->ProcessEvent ( prfAckJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckNotifyClanSecession ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyClanSecession = 0;
	UBTPageLobby_TCP_execrfAckNotifyClanSecession_Parms parms;

	if ( !prfAckNotifyClanSecession )
		prfAckNotifyClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckNotifyClanSecession" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckNotifyNewClanMember ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyNewClanMember = 0;
	UBTPageLobby_TCP_execrfAckNotifyNewClanMember_Parms parms;

	if ( !prfAckNotifyNewClanMember )
		prfAckNotifyNewClanMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckNotifyNewClanMember" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyNewClanMember, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqRecvJoinClan ( int UserIdx, struct FString CharName, struct FString Message )
{
	static UFunction* prfReqRecvJoinClan = 0;
	UBTPageLobby_TCP_execrfReqRecvJoinClan_Parms parms;

	if ( !prfReqRecvJoinClan )
		prfReqRecvJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqRecvJoinClan" );

	parms.UserIdx = UserIdx;
	parms.CharName = CharName;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckInviteClanResult ( struct FString CharName, unsigned char Permit, struct FString ClanNm )
{
	static UFunction* prfAckInviteClanResult = 0;
	UBTPageLobby_TCP_execrfAckInviteClanResult_Parms parms;

	if ( !prfAckInviteClanResult )
		prfAckInviteClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckInviteClanResult" );

	parms.CharName = CharName;
	parms.Permit = Permit;
	parms.ClanNm = ClanNm;
	this->ProcessEvent ( prfAckInviteClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckJoinClan ( int Result, struct FString ErrMsg, struct FString SpecificCharName, struct FString RealRecvCharName, unsigned char RealRecvCharClanGrade )
{
	static UFunction* prfAckJoinClan = 0;
	UBTPageLobby_TCP_execrfAckJoinClan_Parms parms;

	if ( !prfAckJoinClan )
		prfAckJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckJoinClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.SpecificCharName = SpecificCharName;
	parms.RealRecvCharName = RealRecvCharName;
	parms.RealRecvCharClanGrade = RealRecvCharClanGrade;
	this->ProcessEvent ( prfAckJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckInviteClan ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckInviteClan = 0;
	UBTPageLobby_TCP_execrfAckInviteClan_Parms parms;

	if ( !prfAckInviteClan )
		prfAckInviteClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckInviteClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckInviteClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTPageLobby_TCP_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTPageLobby_TCP_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageLobby_TCP_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckDupCheckClanName ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckDupCheckClanName = 0;
	UBTPageLobby_TCP_execrfAckDupCheckClanName_Parms parms;

	if ( !prfAckDupCheckClanName )
		prfAckDupCheckClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckDupCheckClanName" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckDupCheckClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckCreateClan ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckCreateClan = 0;
	UBTPageLobby_TCP_execrfAckCreateClan_Parms parms;

	if ( !prfAckCreateClan )
		prfAckCreateClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckCreateClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckCreateClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckGameRoomInfo ( int Result, struct FString ErrMsg, struct FGameRoomInfo RoomInfo )
{
	static UFunction* prfAckGameRoomInfo = 0;
	UBTPageLobby_TCP_execrfAckGameRoomInfo_Parms parms;

	if ( !prfAckGameRoomInfo )
		prfAckGameRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckGameRoomInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomInfo = RoomInfo;
	this->ProcessEvent ( prfAckGameRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqCompleteFriendInvite ( struct FString CharnameToBeInvited, unsigned char IsPermit )
{
	static UFunction* prfReqCompleteFriendInvite = 0;
	UBTPageLobby_TCP_execrfReqCompleteFriendInvite_Parms parms;

	if ( !prfReqCompleteFriendInvite )
		prfReqCompleteFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqCompleteFriendInvite" );

	parms.CharnameToBeInvited = CharnameToBeInvited;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( prfReqCompleteFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckConfirmFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmFriendInvite = 0;
	UBTPageLobby_TCP_execrfAckConfirmFriendInvite_Parms parms;

	if ( !prfAckConfirmFriendInvite )
		prfAckConfirmFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckConfirmFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqRecvFriendInvite ( int ReqUserID, struct FString ReqCharname, struct FString InviteMsg )
{
	static UFunction* prfReqRecvFriendInvite = 0;
	UBTPageLobby_TCP_execrfReqRecvFriendInvite_Parms parms;

	if ( !prfReqRecvFriendInvite )
		prfReqRecvFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqRecvFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqCharname = ReqCharname;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckSendFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSendFriendInvite = 0;
	UBTPageLobby_TCP_execrfAckSendFriendInvite_Parms parms;

	if ( !prfAckSendFriendInvite )
		prfAckSendFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckSendFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSendFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqExteriorRoomState ( int RoomNumber, unsigned char RoomState )
{
	static UFunction* prfReqExteriorRoomState = 0;
	UBTPageLobby_TCP_execrfReqExteriorRoomState_Parms parms;

	if ( !prfReqExteriorRoomState )
		prfReqExteriorRoomState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqExteriorRoomState" );

	parms.RoomNumber = RoomNumber;
	parms.RoomState = RoomState;
	this->ProcessEvent ( prfReqExteriorRoomState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqExteriorRoomUserCount ( int RoomNumber, int RoomUserCount )
{
	static UFunction* prfReqExteriorRoomUserCount = 0;
	UBTPageLobby_TCP_execrfReqExteriorRoomUserCount_Parms parms;

	if ( !prfReqExteriorRoomUserCount )
		prfReqExteriorRoomUserCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqExteriorRoomUserCount" );

	parms.RoomNumber = RoomNumber;
	parms.RoomUserCount = RoomUserCount;
	this->ProcessEvent ( prfReqExteriorRoomUserCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfReqExteriorRoomInfo ( int SP, int RoomNumber, unsigned char IsPW, struct FString RoomName, struct FString MapName, struct FString ModeName, int MapNum, int ModeNum, unsigned char IsTeamBalance, int MaxUserCount, int RoomUserCount, unsigned char RoomState, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum )
{
	static UFunction* prfReqExteriorRoomInfo = 0;
	UBTPageLobby_TCP_execrfReqExteriorRoomInfo_Parms parms;

	if ( !prfReqExteriorRoomInfo )
		prfReqExteriorRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfReqExteriorRoomInfo" );

	parms.SP = SP;
	parms.RoomNumber = RoomNumber;
	parms.IsPW = IsPW;
	parms.RoomName = RoomName;
	parms.MapName = MapName;
	parms.ModeName = ModeName;
	parms.MapNum = MapNum;
	parms.ModeNum = ModeNum;
	parms.IsTeamBalance = IsTeamBalance;
	parms.MaxUserCount = MaxUserCount;
	parms.RoomUserCount = RoomUserCount;
	parms.RoomState = RoomState;
	parms.BotDifficult = BotDifficult;
	parms.WeaponLimit = WeaponLimit;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfReqExteriorRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckGameRoomDestroy ( int GameRoomNum )
{
	static UFunction* prfAckGameRoomDestroy = 0;
	UBTPageLobby_TCP_execrfAckGameRoomDestroy_Parms parms;

	if ( !prfAckGameRoomDestroy )
		prfAckGameRoomDestroy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckGameRoomDestroy" );

	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckGameRoomDestroy, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckChannelUserList ( int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > UserID, class TArray< int > UserLevels, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, int Result, struct FString ErrMsg, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserList = 0;
	UBTPageLobby_TCP_execrfAckChannelUserList_Parms parms;

	if ( !prfAckChannelUserList )
		prfAckChannelUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckChannelUserList" );

	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.UserLevels = UserLevels;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckRoomList ( class TArray< int > GameNum, class TArray< struct FString > Title, class TArray< struct FString > MapName, class TArray< int > MapNum, class TArray< unsigned char > UserCount, class TArray< unsigned char > MaxCount, class TArray< struct FString > ModeName, class TArray< int > ModeNum, class TArray< unsigned char > WeaponLimit, class TArray< unsigned char > IsTeamBalance, class TArray< unsigned char > Status, class TArray< struct FString > RoomOwnerIP, class TArray< int > GameMinute, class TArray< struct FString > RoomOwnerName, class TArray< unsigned char > IsSpecial, class TArray< unsigned char > IsPassword, class TArray< unsigned char > BotDifficult, class TArray< unsigned char > BotModeUserTeamNum )
{
	static UFunction* prfAckRoomList = 0;
	UBTPageLobby_TCP_execrfAckRoomList_Parms parms;

	if ( !prfAckRoomList )
		prfAckRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckRoomList" );

	parms.GameNum = GameNum;
	parms.Title = Title;
	parms.MapName = MapName;
	parms.MapNum = MapNum;
	parms.UserCount = UserCount;
	parms.MaxCount = MaxCount;
	parms.ModeName = ModeName;
	parms.ModeNum = ModeNum;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Status = Status;
	parms.RoomOwnerIP = RoomOwnerIP;
	parms.GameMinute = GameMinute;
	parms.RoomOwnerName = RoomOwnerName;
	parms.IsSpecial = IsSpecial;
	parms.IsPassword = IsPassword;
	parms.BotDifficult = BotDifficult;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfAckRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckRoomListStart ( int Result, int TotalCount, int Count, int StartIndex )
{
	static UFunction* prfAckRoomListStart = 0;
	UBTPageLobby_TCP_execrfAckRoomListStart_Parms parms;

	if ( !prfAckRoomListStart )
		prfAckRoomListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckRoomListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	this->ProcessEvent ( prfAckRoomListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckEnterRoom ( int GameNum, int OwnerID, int UID, struct FString UserID, int TeamNum, int Grade, struct FString UserIP, struct FString ClanName, int Clan_Mark_Pattern, int Clan_Mark_BG, int Clan_Mark_BL, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterRoom = 0;
	UBTPageLobby_TCP_execrfAckEnterRoom_Parms parms;

	if ( !prfAckEnterRoom )
		prfAckEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckEnterRoom" );

	parms.GameNum = GameNum;
	parms.OwnerID = OwnerID;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.TeamNum = TeamNum;
	parms.Grade = Grade;
	parms.UserIP = UserIP;
	parms.ClanName = ClanName;
	parms.Clan_Mark_Pattern = Clan_Mark_Pattern;
	parms.Clan_Mark_BG = Clan_Mark_BG;
	parms.Clan_Mark_BL = Clan_Mark_BL;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckLeaveChannel ( int Result, struct FString UserID, int UID )
{
	static UFunction* prfAckLeaveChannel = 0;
	UBTPageLobby_TCP_execrfAckLeaveChannel_Parms parms;

	if ( !prfAckLeaveChannel )
		prfAckLeaveChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckLeaveChannel" );

	parms.Result = Result;
	parms.UserID = UserID;
	parms.UID = UID;
	this->ProcessEvent ( prfAckLeaveChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTPageLobby_TCP_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobby_TCP::rfAckCreateGameRoom ( int Result, struct FString ErrMsg, int UserID, struct FString RoomOwnerIP, struct FGameRoomInfo NetRoomInfo )
{
	static UFunction* prfAckCreateGameRoom = 0;
	UBTPageLobby_TCP_execrfAckCreateGameRoom_Parms parms;

	if ( !prfAckCreateGameRoom )
		prfAckCreateGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobby_TCP.rfAckCreateGameRoom" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.RoomOwnerIP = RoomOwnerIP;
	parms.NetRoomInfo = NetRoomInfo;
	this->ProcessEvent ( prfAckCreateGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNuclearButtonHK::OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pOnClick = 0;
	UBTNuclearButtonHK_execOnClick_Parms parms;

	if ( !pOnClick )
		pOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNuclearButtonHK.OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTNuclearButtonHK::OnCoreClick ( class UGUIComponent* Sender )
{
	static UFunction* pOnCoreClick = 0;
	UBTNuclearButtonHK_execOnCoreClick_Parms parms;

	if ( !pOnCoreClick )
		pOnCoreClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNuclearButtonHK.OnCoreClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnCoreClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTNuclearButtonHK::OnRendered ( class UCanvas* C )
{
	static UFunction* pOnRendered = 0;
	UBTNuclearButtonHK_execOnRendered_Parms parms;

	if ( !pOnRendered )
		pOnRendered = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNuclearButtonHK.OnRendered" );

	parms.C = C;
	this->ProcessEvent ( pOnRendered, &parms, NULL );

}*/

/*void UBTNuclearButtonHK::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTNuclearButtonHK_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTNuclearButtonHK.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UBTPageInventory_TCP::rfAckCouponUse ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckCouponUse = 0;
	UBTPageInventory_TCP_execrfAckCouponUse_Parms parms;

	if ( !prfAckCouponUse )
		prfAckCouponUse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckCouponUse" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCouponUse, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckGetItemFromItemBox ( int Result, struct FString ErrMsg, int ItemIDChoose, int PartIDChoose, struct FBtrDouble BoxItemIdx, int BxoItemCount, unsigned char bHave, struct FBtrDouble ItemIdx, struct FBtrDouble UntilTime, int StackCount )
{
	static UFunction* prfAckGetItemFromItemBox = 0;
	UBTPageInventory_TCP_execrfAckGetItemFromItemBox_Parms parms;

	if ( !prfAckGetItemFromItemBox )
		prfAckGetItemFromItemBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckGetItemFromItemBox" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	parms.BoxItemIdx = BoxItemIdx;
	parms.BxoItemCount = BxoItemCount;
	parms.bHave = bHave;
	parms.ItemIdx = ItemIdx;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckGetItemFromItemBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckRepairItem ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, int RepairCost, class TArray< int > DamageDegree )
{
	static UFunction* prfAckRepairItem = 0;
	UBTPageInventory_TCP_execrfAckRepairItem_Parms parms;

	if ( !prfAckRepairItem )
		prfAckRepairItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckRepairItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	parms.DamageDegree = DamageDegree;
	this->ProcessEvent ( prfAckRepairItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckRepairCost ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > RepairCost )
{
	static UFunction* prfAckRepairCost = 0;
	UBTPageInventory_TCP_execrfAckRepairCost_Parms parms;

	if ( !prfAckRepairCost )
		prfAckRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckRepairCost" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( prfAckRepairCost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckUpdateQSlot ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckUpdateQSlot = 0;
	UBTPageInventory_TCP_execrfAckUpdateQSlot_Parms parms;

	if ( !prfAckUpdateQSlot )
		prfAckUpdateQSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckUpdateQSlot" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckUpdateQSlot, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckModifyWeapon ( int Result, struct FString ErrMsg, struct FBtrDouble UniqueID, int AddPartID, int PaintID, int Point, int Cash )
{
	static UFunction* prfAckModifyWeapon = 0;
	UBTPageInventory_TCP_execrfAckModifyWeapon_Parms parms;

	if ( !prfAckModifyWeapon )
		prfAckModifyWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckModifyWeapon" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueID = UniqueID;
	parms.AddPartID = AddPartID;
	parms.PaintID = PaintID;
	parms.Point = Point;
	parms.Cash = Cash;
	this->ProcessEvent ( prfAckModifyWeapon, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckSellShopItem ( int Result, struct FString ErrMsg, int PointRemain, int CashRemain, int Count )
{
	static UFunction* prfAckSellShopItem = 0;
	UBTPageInventory_TCP_execrfAckSellShopItem_Parms parms;

	if ( !prfAckSellShopItem )
		prfAckSellShopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckSellShopItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	parms.Count = Count;
	this->ProcessEvent ( prfAckSellShopItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckSellShopItemInfo ( int Result, struct FString ErrMsg, struct FBtrDouble UniqueItemID, int SellPoint, int CurPoint, int AfterPoint )
{
	static UFunction* prfAckSellShopItemInfo = 0;
	UBTPageInventory_TCP_execrfAckSellShopItemInfo_Parms parms;

	if ( !prfAckSellShopItemInfo )
		prfAckSellShopItemInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckSellShopItemInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.SellPoint = SellPoint;
	parms.CurPoint = CurPoint;
	parms.AfterPoint = AfterPoint;
	this->ProcessEvent ( prfAckSellShopItemInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfReqConfirmSkillChanged (  )
{
	static UFunction* prfReqConfirmSkillChanged = 0;
	UBTPageInventory_TCP_execrfReqConfirmSkillChanged_Parms parms;

	if ( !prfReqConfirmSkillChanged )
		prfReqConfirmSkillChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfReqConfirmSkillChanged" );

	this->ProcessEvent ( prfReqConfirmSkillChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckEquipSkill ( int ChangedNewSkillID, int ChangedNewSkillUniqueID, unsigned char ChangedNewSlotPosition, int ChangedOldSkillID, int ChangedOldSkillUniqueID, unsigned char ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipSkill = 0;
	UBTPageInventory_TCP_execrfAckEquipSkill_Parms parms;

	if ( !prfAckEquipSkill )
		prfAckEquipSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckEquipSkill" );

	parms.ChangedNewSkillID = ChangedNewSkillID;
	parms.ChangedNewSkillUniqueID = ChangedNewSkillUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldSkillID = ChangedOldSkillID;
	parms.ChangedOldSkillUniqueID = ChangedOldSkillUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipSkill, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckConfirmItemChanged ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmItemChanged = 0;
	UBTPageInventory_TCP_execrfAckConfirmItemChanged_Parms parms;

	if ( !prfAckConfirmItemChanged )
		prfAckConfirmItemChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckConfirmItemChanged" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmItemChanged, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckEquipItem ( int ChangedNewItemID, struct FBtrDouble ChangedNewUniqueID, int ChangedNewSlotPosition, int ChangedOldItemID, struct FBtrDouble ChangedOldUniqueID, int ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipItem = 0;
	UBTPageInventory_TCP_execrfAckEquipItem_Parms parms;

	if ( !prfAckEquipItem )
		prfAckEquipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckEquipItem" );

	parms.ChangedNewItemID = ChangedNewItemID;
	parms.ChangedNewUniqueID = ChangedNewUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldItemID = ChangedOldItemID;
	parms.ChangedOldUniqueID = ChangedOldUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckShopItemListEnd (  )
{
	static UFunction* prfAckShopItemListEnd = 0;
	UBTPageInventory_TCP_execrfAckShopItemListEnd_Parms parms;

	if ( !prfAckShopItemListEnd )
		prfAckShopItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckShopItemListEnd" );

	this->ProcessEvent ( prfAckShopItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckShopItemList ( class TArray< int > ItemID )
{
	static UFunction* prfAckShopItemList = 0;
	UBTPageInventory_TCP_execrfAckShopItemList_Parms parms;

	if ( !prfAckShopItemList )
		prfAckShopItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckShopItemList" );

	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckShopItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageInventory_TCP::rfAckShopItemListStart ( int Count )
{
	static UFunction* prfAckShopItemListStart = 0;
	UBTPageInventory_TCP_execrfAckShopItemListStart_Parms parms;

	if ( !prfAckShopItemListStart )
		prfAckShopItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageInventory_TCP.rfAckShopItemListStart" );

	parms.Count = Count;
	this->ProcessEvent ( prfAckShopItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfNotifyClanLevelup ( struct FString ClanName, int Levelup )
{
	static UFunction* prfNotifyClanLevelup = 0;
	UBTPageClanWar_TCP_execrfNotifyClanLevelup_Parms parms;

	if ( !prfNotifyClanLevelup )
		prfNotifyClanLevelup = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfNotifyClanLevelup" );

	parms.ClanName = ClanName;
	parms.Levelup = Levelup;
	this->ProcessEvent ( prfNotifyClanLevelup, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_ChangeRoomSetting ( int WaitRoomIndex, int Result, struct FString ErrMsg, class TArray< int > MapNumArray, int VersusMode, unsigned char IsPublic )
{
	static UFunction* prfAckClanMatch_ChangeRoomSetting = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_ChangeRoomSetting_Parms parms;

	if ( !prfAckClanMatch_ChangeRoomSetting )
		prfAckClanMatch_ChangeRoomSetting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_ChangeRoomSetting" );

	parms.WaitRoomIndex = WaitRoomIndex;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	parms.IsPublic = IsPublic;
	this->ProcessEvent ( prfAckClanMatch_ChangeRoomSetting, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_GetClanWaittingRoomInfo ( int WaitRoomIndex, int Result, struct FString ErrMsg, class TArray< int > MapNumArray, int VersusMode, struct FString WaitRoomName )
{
	static UFunction* prfAckClanMatch_GetClanWaittingRoomInfo = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_GetClanWaittingRoomInfo_Parms parms;

	if ( !prfAckClanMatch_GetClanWaittingRoomInfo )
		prfAckClanMatch_GetClanWaittingRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_GetClanWaittingRoomInfo" );

	parms.WaitRoomIndex = WaitRoomIndex;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	parms.WaitRoomName = WaitRoomName;
	this->ProcessEvent ( prfAckClanMatch_GetClanWaittingRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckEnterChannel ( int id, int UID, struct FString UserID, int Level, struct FString ClanName, int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookFor, int Result, struct FString ErrMsg, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckEnterChannel = 0;
	UBTPageClanWar_TCP_execrfAckEnterChannel_Parms parms;

	if ( !prfAckEnterChannel )
		prfAckEnterChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckEnterChannel" );

	parms.id = id;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.Level = Level;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookFor = IsLookFor;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckEnterChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTPageClanWar_TCP_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckAdjustClanMemberGrade ( int Result, struct FString ErrMsg, struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckAdjustClanMemberGrade = 0;
	UBTPageClanWar_TCP_execrfAckAdjustClanMemberGrade_Parms parms;

	if ( !prfAckAdjustClanMemberGrade )
		prfAckAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckAdjustClanMemberGrade" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfReqRecvDeleteFriend ( int Result, struct FString FromCharName )
{
	static UFunction* prfReqRecvDeleteFriend = 0;
	UBTPageClanWar_TCP_execrfReqRecvDeleteFriend_Parms parms;

	if ( !prfReqRecvDeleteFriend )
		prfReqRecvDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfReqRecvDeleteFriend" );

	parms.Result = Result;
	parms.FromCharName = FromCharName;
	this->ProcessEvent ( prfReqRecvDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckDeleteFriend ( int Result, class TArray< struct FString > FailedCharname )
{
	static UFunction* prfAckDeleteFriend = 0;
	UBTPageClanWar_TCP_execrfAckDeleteFriend_Parms parms;

	if ( !prfAckDeleteFriend )
		prfAckDeleteFriend = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckDeleteFriend" );

	parms.Result = Result;
	parms.FailedCharname = FailedCharname;
	this->ProcessEvent ( prfAckDeleteFriend, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckRecvJoinClanResult ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRecvJoinClanResult = 0;
	UBTPageClanWar_TCP_execrfAckRecvJoinClanResult_Parms parms;

	if ( !prfAckRecvJoinClanResult )
		prfAckRecvJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckRecvJoinClanResult" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRecvJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckJoinClanResult ( struct FString ClanName, unsigned char Permit, struct FString PermitCharName )
{
	static UFunction* prfAckJoinClanResult = 0;
	UBTPageClanWar_TCP_execrfAckJoinClanResult_Parms parms;

	if ( !prfAckJoinClanResult )
		prfAckJoinClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckJoinClanResult" );

	parms.ClanName = ClanName;
	parms.Permit = Permit;
	parms.PermitCharName = PermitCharName;
	this->ProcessEvent ( prfAckJoinClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckNotifyClanSecession ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyClanSecession = 0;
	UBTPageClanWar_TCP_execrfAckNotifyClanSecession_Parms parms;

	if ( !prfAckNotifyClanSecession )
		prfAckNotifyClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckNotifyClanSecession" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckNotifyNewClanMember ( struct FString ClanName, struct FString CharName )
{
	static UFunction* prfAckNotifyNewClanMember = 0;
	UBTPageClanWar_TCP_execrfAckNotifyNewClanMember_Parms parms;

	if ( !prfAckNotifyNewClanMember )
		prfAckNotifyNewClanMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckNotifyNewClanMember" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckNotifyNewClanMember, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTPageClanWar_TCP_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckInviteClanResult ( struct FString CharName, unsigned char Permit, struct FString ClanNm )
{
	static UFunction* prfAckInviteClanResult = 0;
	UBTPageClanWar_TCP_execrfAckInviteClanResult_Parms parms;

	if ( !prfAckInviteClanResult )
		prfAckInviteClanResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckInviteClanResult" );

	parms.CharName = CharName;
	parms.Permit = Permit;
	parms.ClanNm = ClanNm;
	this->ProcessEvent ( prfAckInviteClanResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckJoinClan ( int Result, struct FString ErrMsg, struct FString SpecificCharName, struct FString RealRecvCharName, unsigned char RealRecvCharClanGrade )
{
	static UFunction* prfAckJoinClan = 0;
	UBTPageClanWar_TCP_execrfAckJoinClan_Parms parms;

	if ( !prfAckJoinClan )
		prfAckJoinClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckJoinClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.SpecificCharName = SpecificCharName;
	parms.RealRecvCharName = RealRecvCharName;
	parms.RealRecvCharClanGrade = RealRecvCharClanGrade;
	this->ProcessEvent ( prfAckJoinClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckInviteClan ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckInviteClan = 0;
	UBTPageClanWar_TCP_execrfAckInviteClan_Parms parms;

	if ( !prfAckInviteClan )
		prfAckInviteClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckInviteClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckInviteClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTPageClanWar_TCP_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageClanWar_TCP_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckCreateClan ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckCreateClan = 0;
	UBTPageClanWar_TCP_execrfAckCreateClan_Parms parms;

	if ( !prfAckCreateClan )
		prfAckCreateClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckCreateClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckCreateClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckDupCheckClanName ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckDupCheckClanName = 0;
	UBTPageClanWar_TCP_execrfAckDupCheckClanName_Parms parms;

	if ( !prfAckDupCheckClanName )
		prfAckDupCheckClanName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckDupCheckClanName" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckDupCheckClanName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckChannelUserList ( int TotalCount, int Count, int StartIndex, class TArray< int > UID, class TArray< struct FString > UserID, class TArray< int > UserLevels, class TArray< struct FString > ClanName, class TArray< int > ClanPattern, class TArray< int > ClanBG, class TArray< int > ClanBL, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, int Result, struct FString ErrMsg, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckChannelUserList = 0;
	UBTPageClanWar_TCP_execrfAckChannelUserList_Parms parms;

	if ( !prfAckChannelUserList )
		prfAckChannelUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckChannelUserList" );

	parms.TotalCount = TotalCount;
	parms.Count = Count;
	parms.StartIndex = StartIndex;
	parms.UID = UID;
	parms.UserID = UserID;
	parms.UserLevels = UserLevels;
	parms.ClanName = ClanName;
	parms.ClanPattern = ClanPattern;
	parms.ClanBG = ClanBG;
	parms.ClanBL = ClanBL;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckChannelUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanUserList ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< int > ClanWinCnt, class TArray< int > ClanLoseCnt, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > DudeId )
{
	static UFunction* prfAckClanUserList = 0;
	UBTPageClanWar_TCP_execrfAckClanUserList_Parms parms;

	if ( !prfAckClanUserList )
		prfAckClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWinCnt = ClanWinCnt;
	parms.ClanLoseCnt = ClanLoseCnt;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.DudeId = DudeId;
	this->ProcessEvent ( prfAckClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanUserListEnd (  )
{
	static UFunction* prfAckClanUserListEnd = 0;
	UBTPageClanWar_TCP_execrfAckClanUserListEnd_Parms parms;

	if ( !prfAckClanUserListEnd )
		prfAckClanUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanUserListEnd" );

	this->ProcessEvent ( prfAckClanUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanUserListStart = 0;
	UBTPageClanWar_TCP_execrfAckClanUserListStart_Parms parms;

	if ( !prfAckClanUserListStart )
		prfAckClanUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckFriendListEnd (  )
{
	static UFunction* prfAckFriendListEnd = 0;
	UBTPageClanWar_TCP_execrfAckFriendListEnd_Parms parms;

	if ( !prfAckFriendListEnd )
		prfAckFriendListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckFriendListEnd" );

	this->ProcessEvent ( prfAckFriendListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckFriendList ( class TArray< struct FString > FriendName, class TArray< unsigned char > IsLogOn, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > LevelMarkID, class TArray< int > ClanLevel, class TArray< int > Level, class TArray< unsigned char > IsLookForClan )
{
	static UFunction* prfAckFriendList = 0;
	UBTPageClanWar_TCP_execrfAckFriendList_Parms parms;

	if ( !prfAckFriendList )
		prfAckFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckFriendList" );

	parms.FriendName = FriendName;
	parms.IsLogOn = IsLogOn;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.LevelMarkID = LevelMarkID;
	parms.ClanLevel = ClanLevel;
	parms.Level = Level;
	parms.IsLookForClan = IsLookForClan;
	this->ProcessEvent ( prfAckFriendList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckFriendListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckFriendListStart = 0;
	UBTPageClanWar_TCP_execrfAckFriendListStart_Parms parms;

	if ( !prfAckFriendListStart )
		prfAckFriendListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckFriendListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckFriendListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfReqCompleteFriendInvite ( struct FString CharnameToBeInvited, unsigned char IsPermit )
{
	static UFunction* prfReqCompleteFriendInvite = 0;
	UBTPageClanWar_TCP_execrfReqCompleteFriendInvite_Parms parms;

	if ( !prfReqCompleteFriendInvite )
		prfReqCompleteFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfReqCompleteFriendInvite" );

	parms.CharnameToBeInvited = CharnameToBeInvited;
	parms.IsPermit = IsPermit;
	this->ProcessEvent ( prfReqCompleteFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckConfirmFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckConfirmFriendInvite = 0;
	UBTPageClanWar_TCP_execrfAckConfirmFriendInvite_Parms parms;

	if ( !prfAckConfirmFriendInvite )
		prfAckConfirmFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckConfirmFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckConfirmFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfReqRecvFriendInvite ( int ReqUserID, struct FString ReqCharname, struct FString InviteMsg )
{
	static UFunction* prfReqRecvFriendInvite = 0;
	UBTPageClanWar_TCP_execrfReqRecvFriendInvite_Parms parms;

	if ( !prfReqRecvFriendInvite )
		prfReqRecvFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfReqRecvFriendInvite" );

	parms.ReqUserID = ReqUserID;
	parms.ReqCharname = ReqCharname;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckSendFriendInvite ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckSendFriendInvite = 0;
	UBTPageClanWar_TCP_execrfAckSendFriendInvite_Parms parms;

	if ( !prfAckSendFriendInvite )
		prfAckSendFriendInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckSendFriendInvite" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckSendFriendInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_SetWaitRoomPublic ( int Result, struct FString ErrMsg, unsigned char Set )
{
	static UFunction* prfAckClanMatch_SetWaitRoomPublic = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_SetWaitRoomPublic_Parms parms;

	if ( !prfAckClanMatch_SetWaitRoomPublic )
		prfAckClanMatch_SetWaitRoomPublic = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_SetWaitRoomPublic" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Set = Set;
	this->ProcessEvent ( prfAckClanMatch_SetWaitRoomPublic, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_StopSearching (  )
{
	static UFunction* prfAckClanMatch_StopSearching = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_StopSearching_Parms parms;

	if ( !prfAckClanMatch_StopSearching )
		prfAckClanMatch_StopSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_StopSearching" );

	this->ProcessEvent ( prfAckClanMatch_StopSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfReqClanMatch_FoundMatch ( int ChannelID, int RoomNumber )
{
	static UFunction* prfReqClanMatch_FoundMatch = 0;
	UBTPageClanWar_TCP_execrfReqClanMatch_FoundMatch_Parms parms;

	if ( !prfReqClanMatch_FoundMatch )
		prfReqClanMatch_FoundMatch = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfReqClanMatch_FoundMatch" );

	parms.ChannelID = ChannelID;
	parms.RoomNumber = RoomNumber;
	this->ProcessEvent ( prfReqClanMatch_FoundMatch, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_NotifyStartSearching ( int ShouldWaitMore )
{
	static UFunction* prfAckClanMatch_NotifyStartSearching = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_NotifyStartSearching_Parms parms;

	if ( !prfAckClanMatch_NotifyStartSearching )
		prfAckClanMatch_NotifyStartSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_NotifyStartSearching" );

	parms.ShouldWaitMore = ShouldWaitMore;
	this->ProcessEvent ( prfAckClanMatch_NotifyStartSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_StartSearching ( int Result, struct FString ErrMsg, int ShouldWaitMore )
{
	static UFunction* prfAckClanMatch_StartSearching = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_StartSearching_Parms parms;

	if ( !prfAckClanMatch_StartSearching )
		prfAckClanMatch_StartSearching = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_StartSearching" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ShouldWaitMore = ShouldWaitMore;
	this->ProcessEvent ( prfAckClanMatch_StartSearching, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_ChangeLeader ( int Result, struct FString ErrMsg, int NewLeader, struct FString NewLeaderName )
{
	static UFunction* prfAckClanMatch_ChangeLeader = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_ChangeLeader_Parms parms;

	if ( !prfAckClanMatch_ChangeLeader )
		prfAckClanMatch_ChangeLeader = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_ChangeLeader" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NewLeader = NewLeader;
	parms.NewLeaderName = NewLeaderName;
	this->ProcessEvent ( prfAckClanMatch_ChangeLeader, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_WaittingTeamList ( int TtotlCount, class TArray< int > Grade, class TArray< int > Map, class TArray< int > Versus )
{
	static UFunction* prfAckClanMatch_WaittingTeamList = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_WaittingTeamList_Parms parms;

	if ( !prfAckClanMatch_WaittingTeamList )
		prfAckClanMatch_WaittingTeamList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_WaittingTeamList" );

	parms.TtotlCount = TtotlCount;
	parms.Grade = Grade;
	parms.Map = Map;
	parms.Versus = Versus;
	this->ProcessEvent ( prfAckClanMatch_WaittingTeamList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_Chat ( int Result, struct FString ErrMsg, struct FString CharName, struct FString Msg )
{
	static UFunction* prfAckClanMatch_Chat = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_Chat_Parms parms;

	if ( !prfAckClanMatch_Chat )
		prfAckClanMatch_Chat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_Chat" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckClanMatch_Chat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_Leave ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Leave = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_Leave_Parms parms;

	if ( !prfAckClanMatch_Leave )
		prfAckClanMatch_Leave = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_Leave" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Leave, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_MemberList ( class TArray< unsigned char > IsLeader, class TArray< int > ClanMarkPA, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< struct FString > ClanName, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckClanMatch_MemberList = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_MemberList_Parms parms;

	if ( !prfAckClanMatch_MemberList )
		prfAckClanMatch_MemberList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_MemberList" );

	parms.IsLeader = IsLeader;
	parms.ClanMarkPA = ClanMarkPA;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanName = ClanName;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckClanMatch_MemberList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_LeaveNotify ( struct FString CharName )
{
	static UFunction* prfAckClanMatch_LeaveNotify = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_LeaveNotify_Parms parms;

	if ( !prfAckClanMatch_LeaveNotify )
		prfAckClanMatch_LeaveNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_LeaveNotify" );

	parms.CharName = CharName;
	this->ProcessEvent ( prfAckClanMatch_LeaveNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_JoinNotify ( unsigned char IsLeader, int ClanMarkPA, int ClanMarkBG, int ClanMarkBL, int Level, struct FString CharName, int ClanGrade, int ClanWin, int ClanLose, struct FString ClanName, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 )
{
	static UFunction* prfAckClanMatch_JoinNotify = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_JoinNotify_Parms parms;

	if ( !prfAckClanMatch_JoinNotify )
		prfAckClanMatch_JoinNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_JoinNotify" );

	parms.IsLeader = IsLeader;
	parms.ClanMarkPA = ClanMarkPA;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanName = ClanName;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckClanMatch_JoinNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_Join ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_Join = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_Join_Parms parms;

	if ( !prfAckClanMatch_Join )
		prfAckClanMatch_Join = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_Join" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_Join, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_NotifiyStartCombat ( class TArray< int > MapNumArray, int VersusMode )
{
	static UFunction* prfAckClanMatch_NotifiyStartCombat = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_NotifiyStartCombat_Parms parms;

	if ( !prfAckClanMatch_NotifiyStartCombat )
		prfAckClanMatch_NotifiyStartCombat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_NotifiyStartCombat" );

	parms.MapNumArray = MapNumArray;
	parms.VersusMode = VersusMode;
	this->ProcessEvent ( prfAckClanMatch_NotifiyStartCombat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_StartCombat ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_StartCombat = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_StartCombat_Parms parms;

	if ( !prfAckClanMatch_StartCombat )
		prfAckClanMatch_StartCombat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_StartCombat" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_StartCombat, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClanWar_TCP::rfAckClanMatch_GetReady ( int Result, struct FString ErrMsg, int RoomIndex )
{
	static UFunction* prfAckClanMatch_GetReady = 0;
	UBTPageClanWar_TCP_execrfAckClanMatch_GetReady_Parms parms;

	if ( !prfAckClanMatch_GetReady )
		prfAckClanMatch_GetReady = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClanWar_TCP.rfAckClanMatch_GetReady" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RoomIndex = RoomIndex;
	this->ProcessEvent ( prfAckClanMatch_GetReady, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageClan_TCP_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckFriendPosition ( int Result, struct FString TargetCharName, unsigned char ServerType, struct FString fServername, struct FString fServerShortName, struct FString fServerIP, int fServerPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, struct FString ChannelNickName, int GameRoomNum )
{
	static UFunction* prfAckFriendPosition = 0;
	UBTPageClan_TCP_execrfAckFriendPosition_Parms parms;

	if ( !prfAckFriendPosition )
		prfAckFriendPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckFriendPosition" );

	parms.Result = Result;
	parms.TargetCharName = TargetCharName;
	parms.ServerType = ServerType;
	parms.fServername = fServername;
	parms.fServerShortName = fServerShortName;
	parms.fServerIP = fServerIP;
	parms.fServerPort = fServerPort;
	parms.CurPos = CurPos;
	parms.CurState = CurState;
	parms.ChannelNum = ChannelNum;
	parms.ChannelNickName = ChannelNickName;
	parms.GameRoomNum = GameRoomNum;
	this->ProcessEvent ( prfAckFriendPosition, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckNotifyUpdateCharInfo_LevelMark ( struct FString CharName, int LevelMarkID )
{
	static UFunction* prfAckNotifyUpdateCharInfo_LevelMark = 0;
	UBTPageClan_TCP_execrfAckNotifyUpdateCharInfo_LevelMark_Parms parms;

	if ( !prfAckNotifyUpdateCharInfo_LevelMark )
		prfAckNotifyUpdateCharInfo_LevelMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckNotifyUpdateCharInfo_LevelMark" );

	parms.CharName = CharName;
	parms.LevelMarkID = LevelMarkID;
	this->ProcessEvent ( prfAckNotifyUpdateCharInfo_LevelMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanMatchResultHistory ( class TArray< struct FBtrDouble > MatchDate, class TArray< unsigned char > IsWin, class TArray< struct FString > EnemyClanname )
{
	static UFunction* prfAckClanMatchResultHistory = 0;
	UBTPageClan_TCP_execrfAckClanMatchResultHistory_Parms parms;

	if ( !prfAckClanMatchResultHistory )
		prfAckClanMatchResultHistory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanMatchResultHistory" );

	parms.MatchDate = MatchDate;
	parms.IsWin = IsWin;
	parms.EnemyClanname = EnemyClanname;
	this->ProcessEvent ( prfAckClanMatchResultHistory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckChatWispher ( int Result, struct FString ErrMsg, struct FString ToCharName )
{
	static UFunction* prfAckChatWispher = 0;
	UBTPageClan_TCP_execrfAckChatWispher_Parms parms;

	if ( !prfAckChatWispher )
		prfAckChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckChatWispher" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ToCharName = ToCharName;
	this->ProcessEvent ( prfAckChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckNotifyAdjustClanMemberGrade ( struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckNotifyAdjustClanMemberGrade = 0;
	UBTPageClan_TCP_execrfAckNotifyAdjustClanMemberGrade_Parms parms;

	if ( !prfAckNotifyAdjustClanMemberGrade )
		prfAckNotifyAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckNotifyAdjustClanMemberGrade" );

	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckNotifyAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckAdjustClanMemberGrade ( int Result, struct FString ErrMsg, struct FString ClanName, struct FString CharName, unsigned char CharGrade )
{
	static UFunction* prfAckAdjustClanMemberGrade = 0;
	UBTPageClan_TCP_execrfAckAdjustClanMemberGrade_Parms parms;

	if ( !prfAckAdjustClanMemberGrade )
		prfAckAdjustClanMemberGrade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckAdjustClanMemberGrade" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	parms.CharName = CharName;
	parms.CharGrade = CharGrade;
	this->ProcessEvent ( prfAckAdjustClanMemberGrade, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanCharPersonelIntro ( int Result, struct FString ErrMsg, struct FString PersonelIntro )
{
	static UFunction* prfAckClanCharPersonelIntro = 0;
	UBTPageClan_TCP_execrfAckClanCharPersonelIntro_Parms parms;

	if ( !prfAckClanCharPersonelIntro )
		prfAckClanCharPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanCharPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PersonelIntro = PersonelIntro;
	this->ProcessEvent ( prfAckClanCharPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckSearchClan ( int Result, struct FString ErrMsg, int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel )
{
	static UFunction* prfAckSearchClan = 0;
	UBTPageClan_TCP_execrfAckSearchClan_Parms parms;

	if ( !prfAckSearchClan )
		prfAckSearchClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckSearchClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalPage = TotalPage;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.ClanName = ClanName;
	parms.ClanMaster = ClanMaster;
	parms.ClanMember = ClanMember;
	parms.ClanMemberMax = ClanMemberMax;
	parms.ClanCreateDate = ClanCreateDate;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.ClanDraw = ClanDraw;
	parms.ClanRank = ClanRank;
	parms.ClanRecruit = ClanRecruit;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckSearchClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanPersonelIntro ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanPersonelIntro = 0;
	UBTPageClan_TCP_execrfAckClanPersonelIntro_Parms parms;

	if ( !prfAckClanPersonelIntro )
		prfAckClanPersonelIntro = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanPersonelIntro" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanPersonelIntro, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanChangeInfo ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanChangeInfo = 0;
	UBTPageClan_TCP_execrfAckClanChangeInfo_Parms parms;

	if ( !prfAckClanChangeInfo )
		prfAckClanChangeInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanChangeInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanChangeInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanSecession ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanSecession = 0;
	UBTPageClan_TCP_execrfAckClanSecession_Parms parms;

	if ( !prfAckClanSecession )
		prfAckClanSecession = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanSecession" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanSecession, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanClose ( int Result, struct FString ErrMsg, struct FString ClanName )
{
	static UFunction* prfAckClanClose = 0;
	UBTPageClan_TCP_execrfAckClanClose_Parms parms;

	if ( !prfAckClanClose )
		prfAckClanClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanClose" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ClanName = ClanName;
	this->ProcessEvent ( prfAckClanClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanNews ( class TArray< struct FString > IssueDate, class TArray< unsigned char > IssueType, class TArray< struct FString > IssuedClanMember )
{
	static UFunction* prfAckClanNews = 0;
	UBTPageClan_TCP_execrfAckClanNews_Parms parms;

	if ( !prfAckClanNews )
		prfAckClanNews = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanNews" );

	parms.IssueDate = IssueDate;
	parms.IssueType = IssueType;
	parms.IssuedClanMember = IssuedClanMember;
	this->ProcessEvent ( prfAckClanNews, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanUserListEnd (  )
{
	static UFunction* prfAckClanUserListEnd = 0;
	UBTPageClan_TCP_execrfAckClanUserListEnd_Parms parms;

	if ( !prfAckClanUserListEnd )
		prfAckClanUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanUserListEnd" );

	this->ProcessEvent ( prfAckClanUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanUserList ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< int > ClanWinCnt, class TArray< int > ClanLoseCnt, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > DudeId )
{
	static UFunction* prfAckClanUserList = 0;
	UBTPageClan_TCP_execrfAckClanUserList_Parms parms;

	if ( !prfAckClanUserList )
		prfAckClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWinCnt = ClanWinCnt;
	parms.ClanLoseCnt = ClanLoseCnt;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.DudeId = DudeId;
	this->ProcessEvent ( prfAckClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfAckClanUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanUserListStart = 0;
	UBTPageClan_TCP_execrfAckClanUserListStart_Parms parms;

	if ( !prfAckClanUserListStart )
		prfAckClanUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfAckClanUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageClan_TCP::rfReqRecvClanInvite ( int InviterUserDBID, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg )
{
	static UFunction* prfReqRecvClanInvite = 0;
	UBTPageClan_TCP_execrfReqRecvClanInvite_Parms parms;

	if ( !prfReqRecvClanInvite )
		prfReqRecvClanInvite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageClan_TCP.rfReqRecvClanInvite" );

	parms.InviterUserDBID = InviterUserDBID;
	parms.InviterCharname = InviterCharname;
	parms.ClanName = ClanName;
	parms.InviteMsg = InviteMsg;
	this->ProcessEvent ( prfReqRecvClanInvite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckRepairItem ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, int RepairCost, class TArray< int > DamageDegree )
{
	static UFunction* prfAckRepairItem = 0;
	UBTPageAuction_TCP_execrfAckRepairItem_Parms parms;

	if ( !prfAckRepairItem )
		prfAckRepairItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckRepairItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	parms.DamageDegree = DamageDegree;
	this->ProcessEvent ( prfAckRepairItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckRepairCost ( int Result, struct FString ErrMsg, class TArray< struct FBtrDouble > UniqueItemID, class TArray< int > RepairCost )
{
	static UFunction* prfAckRepairCost = 0;
	UBTPageAuction_TCP_execrfAckRepairCost_Parms parms;

	if ( !prfAckRepairCost )
		prfAckRepairCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckRepairCost" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UniqueItemID = UniqueItemID;
	parms.RepairCost = RepairCost;
	this->ProcessEvent ( prfAckRepairCost, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckAuctionInstantlyBuying ( int Result, struct FString ErrMsg, int PointRemain )
{
	static UFunction* prfAckAuctionInstantlyBuying = 0;
	UBTPageAuction_TCP_execrfAckAuctionInstantlyBuying_Parms parms;

	if ( !prfAckAuctionInstantlyBuying )
		prfAckAuctionInstantlyBuying = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckAuctionInstantlyBuying" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionInstantlyBuying, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckAuctionBidding ( int Result, struct FString ErrMsg, int PointRemain )
{
	static UFunction* prfAckAuctionBidding = 0;
	UBTPageAuction_TCP_execrfAckAuctionBidding_Parms parms;

	if ( !prfAckAuctionBidding )
		prfAckAuctionBidding = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckAuctionBidding" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionBidding, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckAuctionTradeHistory ( int Result, struct FString ErrMsg, int ItemID, int PartID, class TArray< struct FString > SellerCharNm, class TArray< int > DamageDegree, class TArray< int > Price )
{
	static UFunction* prfAckAuctionTradeHistory = 0;
	UBTPageAuction_TCP_execrfAckAuctionTradeHistory_Parms parms;

	if ( !prfAckAuctionTradeHistory )
		prfAckAuctionTradeHistory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckAuctionTradeHistory" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemID = ItemID;
	parms.PartID = PartID;
	parms.SellerCharNm = SellerCharNm;
	parms.DamageDegree = DamageDegree;
	parms.Price = Price;
	this->ProcessEvent ( prfAckAuctionTradeHistory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckAuctionItemListEnd ( unsigned char Section )
{
	static UFunction* prfAckAuctionItemListEnd = 0;
	UBTPageAuction_TCP_execrfAckAuctionItemListEnd_Parms parms;

	if ( !prfAckAuctionItemListEnd )
		prfAckAuctionItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckAuctionItemListEnd" );

	parms.Section = Section;
	this->ProcessEvent ( prfAckAuctionItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckAuctionItemList ( unsigned char Section, class TArray< int > UniqueIDs, class TArray< int > ItemIDs, class TArray< int > AddPartsIDs, class TArray< struct FBtrDouble > UntilTimes, class TArray< int > BiddingPrices, class TArray< int > InstantlyByuingPrices, class TArray< int > ItemDamageds, class TArray< struct FString > HighestBidderNames, class TArray< struct FString > SellerNames, class TArray< int > ItemCount )
{
	static UFunction* prfAckAuctionItemList = 0;
	UBTPageAuction_TCP_execrfAckAuctionItemList_Parms parms;

	if ( !prfAckAuctionItemList )
		prfAckAuctionItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckAuctionItemList" );

	parms.Section = Section;
	parms.UniqueIDs = UniqueIDs;
	parms.ItemIDs = ItemIDs;
	parms.AddPartsIDs = AddPartsIDs;
	parms.UntilTimes = UntilTimes;
	parms.BiddingPrices = BiddingPrices;
	parms.InstantlyByuingPrices = InstantlyByuingPrices;
	parms.ItemDamageds = ItemDamageds;
	parms.HighestBidderNames = HighestBidderNames;
	parms.SellerNames = SellerNames;
	parms.ItemCount = ItemCount;
	this->ProcessEvent ( prfAckAuctionItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckAuctionItemListStart ( int Result, struct FString ErrMsg, unsigned char Section, int PageNum, int Count )
{
	static UFunction* prfAckAuctionItemListStart = 0;
	UBTPageAuction_TCP_execrfAckAuctionItemListStart_Parms parms;

	if ( !prfAckAuctionItemListStart )
		prfAckAuctionItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckAuctionItemListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Section = Section;
	parms.PageNum = PageNum;
	parms.Count = Count;
	this->ProcessEvent ( prfAckAuctionItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckAuctionMyItemCancel ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckAuctionMyItemCancel = 0;
	UBTPageAuction_TCP_execrfAckAuctionMyItemCancel_Parms parms;

	if ( !prfAckAuctionMyItemCancel )
		prfAckAuctionMyItemCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckAuctionMyItemCancel" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckAuctionMyItemCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckAuctionMyItemRegister ( int Result, struct FString ErrMsg, int BeginPrice, int BuyPrice, int GuarantyPoint, int PointRemain )
{
	static UFunction* prfAckAuctionMyItemRegister = 0;
	UBTPageAuction_TCP_execrfAckAuctionMyItemRegister_Parms parms;

	if ( !prfAckAuctionMyItemRegister )
		prfAckAuctionMyItemRegister = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckAuctionMyItemRegister" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.BeginPrice = BeginPrice;
	parms.BuyPrice = BuyPrice;
	parms.GuarantyPoint = GuarantyPoint;
	parms.PointRemain = PointRemain;
	this->ProcessEvent ( prfAckAuctionMyItemRegister, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageAuction_TCP::rfAckAuctionItemListCount ( int Result, struct FString ErrMsg, unsigned char Section, unsigned char Classfy, int ItemType, int ItemGrade, int Count )
{
	static UFunction* prfAckAuctionItemListCount = 0;
	UBTPageAuction_TCP_execrfAckAuctionItemListCount_Parms parms;

	if ( !prfAckAuctionItemListCount )
		prfAckAuctionItemListCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageAuction_TCP.rfAckAuctionItemListCount" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Section = Section;
	parms.Classfy = Classfy;
	parms.ItemType = ItemType;
	parms.ItemGrade = ItemGrade;
	parms.Count = Count;
	this->ProcessEvent ( prfAckAuctionItemListCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageMail_TCP_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfAckGetAttachedItemFromMemo ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int ItemID )
{
	static UFunction* prfAckGetAttachedItemFromMemo = 0;
	UBTPageMail_TCP_execrfAckGetAttachedItemFromMemo_Parms parms;

	if ( !prfAckGetAttachedItemFromMemo )
		prfAckGetAttachedItemFromMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfAckGetAttachedItemFromMemo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckGetAttachedItemFromMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfAckDeleteMailAll ( int Result, unsigned char MailType, int Count )
{
	static UFunction* prfAckDeleteMailAll = 0;
	UBTPageMail_TCP_execrfAckDeleteMailAll_Parms parms;

	if ( !prfAckDeleteMailAll )
		prfAckDeleteMailAll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfAckDeleteMailAll" );

	parms.Result = Result;
	parms.MailType = MailType;
	parms.Count = Count;
	this->ProcessEvent ( prfAckDeleteMailAll, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfAckDelMemo ( int Result, struct FString ErrMsg, class TArray< int > FailedMemoID )
{
	static UFunction* prfAckDelMemo = 0;
	UBTPageMail_TCP_execrfAckDelMemo_Parms parms;

	if ( !prfAckDelMemo )
		prfAckDelMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfAckDelMemo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.FailedMemoID = FailedMemoID;
	this->ProcessEvent ( prfAckDelMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfAckReadMemo ( struct FString cnameFrom, struct FString Text, struct FString dateRecv, struct FBtrDouble ItemUID )
{
	static UFunction* prfAckReadMemo = 0;
	UBTPageMail_TCP_execrfAckReadMemo_Parms parms;

	if ( !prfAckReadMemo )
		prfAckReadMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfAckReadMemo" );

	parms.cnameFrom = cnameFrom;
	parms.Text = Text;
	parms.dateRecv = dateRecv;
	parms.ItemUID = ItemUID;
	this->ProcessEvent ( prfAckReadMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfAckEndMemoList (  )
{
	static UFunction* prfAckEndMemoList = 0;
	UBTPageMail_TCP_execrfAckEndMemoList_Parms parms;

	if ( !prfAckEndMemoList )
		prfAckEndMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfAckEndMemoList" );

	this->ProcessEvent ( prfAckEndMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfAckMemoList ( class TArray< int > MemoIdx, class TArray< struct FString > cnameFrom, class TArray< struct FString > dateRecv, class TArray< struct FString > Text, class TArray< unsigned char > Status, class TArray< int > UntilExpire, class TArray< struct FBtrDouble > ItemUID, class TArray< int > ItemID, class TArray< unsigned char > MsgType, class TArray< int > ItemPartID )
{
	static UFunction* prfAckMemoList = 0;
	UBTPageMail_TCP_execrfAckMemoList_Parms parms;

	if ( !prfAckMemoList )
		prfAckMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfAckMemoList" );

	parms.MemoIdx = MemoIdx;
	parms.cnameFrom = cnameFrom;
	parms.dateRecv = dateRecv;
	parms.Text = Text;
	parms.Status = Status;
	parms.UntilExpire = UntilExpire;
	parms.ItemUID = ItemUID;
	parms.ItemID = ItemID;
	parms.MsgType = MsgType;
	parms.ItemPartID = ItemPartID;
	this->ProcessEvent ( prfAckMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfAckStartMemoList ( int Result, struct FString ErrMsg, unsigned char Type, int TotalCount )
{
	static UFunction* prfAckStartMemoList = 0;
	UBTPageMail_TCP_execrfAckStartMemoList_Parms parms;

	if ( !prfAckStartMemoList )
		prfAckStartMemoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfAckStartMemoList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Type = Type;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckStartMemoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfReqRecvMemo ( struct FString cnameFrom, unsigned char MemoType )
{
	static UFunction* prfReqRecvMemo = 0;
	UBTPageMail_TCP_execrfReqRecvMemo_Parms parms;

	if ( !prfReqRecvMemo )
		prfReqRecvMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfReqRecvMemo" );

	parms.cnameFrom = cnameFrom;
	parms.MemoType = MemoType;
	this->ProcessEvent ( prfReqRecvMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMail_TCP::rfAckSendMemo ( class TArray< struct FString > CnamesToFail, class TArray< int > ResultArray )
{
	static UFunction* prfAckSendMemo = 0;
	UBTPageMail_TCP_execrfAckSendMemo_Parms parms;

	if ( !prfAckSendMemo )
		prfAckSendMemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMail_TCP.rfAckSendMemo" );

	parms.CnamesToFail = CnamesToFail;
	parms.ResultArray = ResultArray;
	this->ProcessEvent ( prfAckSendMemo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo_TcpLogin::rfAckLoginWithGlobal ( int Result )
{
	static UFunction* prfAckLoginWithGlobal = 0;
	UBTPageLogo_TcpLogin_execrfAckLoginWithGlobal_Parms parms;

	if ( !prfAckLoginWithGlobal )
		prfAckLoginWithGlobal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo_TcpLogin.rfAckLoginWithGlobal" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithGlobal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo_TcpLogin::rfAckLoginWithThailand ( int Result )
{
	static UFunction* prfAckLoginWithThailand = 0;
	UBTPageLogo_TcpLogin_execrfAckLoginWithThailand_Parms parms;

	if ( !prfAckLoginWithThailand )
		prfAckLoginWithThailand = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo_TcpLogin.rfAckLoginWithThailand" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithThailand, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo_TcpLogin::rfAckLoginWithTencentAuth ( int Result, unsigned char tc_AccountType, unsigned char tc_IsBlock )
{
	static UFunction* prfAckLoginWithTencentAuth = 0;
	UBTPageLogo_TcpLogin_execrfAckLoginWithTencentAuth_Parms parms;

	if ( !prfAckLoginWithTencentAuth )
		prfAckLoginWithTencentAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo_TcpLogin.rfAckLoginWithTencentAuth" );

	parms.Result = Result;
	parms.tc_AccountType = tc_AccountType;
	parms.tc_IsBlock = tc_IsBlock;
	this->ProcessEvent ( prfAckLoginWithTencentAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo_TcpLogin::rfAckEventNotify ( int Type )
{
	static UFunction* prfAckEventNotify = 0;
	UBTPageLogo_TcpLogin_execrfAckEventNotify_Parms parms;

	if ( !prfAckEventNotify )
		prfAckEventNotify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo_TcpLogin.rfAckEventNotify" );

	parms.Type = Type;
	this->ProcessEvent ( prfAckEventNotify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo_TcpLogin::rfAckClientChecksum ( int Result )
{
	static UFunction* prfAckClientChecksum = 0;
	UBTPageLogo_TcpLogin_execrfAckClientChecksum_Parms parms;

	if ( !prfAckClientChecksum )
		prfAckClientChecksum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo_TcpLogin.rfAckClientChecksum" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckClientChecksum, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo_TcpLogin::rfAckClientChallenge ( struct FString Key1, struct FBtrDouble Key2 )
{
	static UFunction* prfAckClientChallenge = 0;
	UBTPageLogo_TcpLogin_execrfAckClientChallenge_Parms parms;

	if ( !prfAckClientChallenge )
		prfAckClientChallenge = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo_TcpLogin.rfAckClientChallenge" );

	parms.Key1 = Key1;
	parms.Key2 = Key2;
	this->ProcessEvent ( prfAckClientChallenge, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo_TcpLogin::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageLogo_TcpLogin_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo_TcpLogin.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo_TcpLogin::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageLogo_TcpLogin_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo_TcpLogin.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogo_TcpLogin::rfAckLoginWithWZAuth ( int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType )
{
	static UFunction* prfAckLoginWithWZAuth = 0;
	UBTPageLogo_TcpLogin_execrfAckLoginWithWZAuth_Parms parms;

	if ( !prfAckLoginWithWZAuth )
		prfAckLoginWithWZAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogo_TcpLogin.rfAckLoginWithWZAuth" );

	parms.Result = Result;
	parms.wzp_AccountType = wzp_AccountType;
	parms.wzp_IsBlock = wzp_IsBlock;
	parms.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	parms.ChannelType = ChannelType;
	this->ProcessEvent ( prfAckLoginWithWZAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin_TcpLogin::rfAckLoginWithGlobal ( int Result )
{
	static UFunction* prfAckLoginWithGlobal = 0;
	UBTPageLogin_TcpLogin_execrfAckLoginWithGlobal_Parms parms;

	if ( !prfAckLoginWithGlobal )
		prfAckLoginWithGlobal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin_TcpLogin.rfAckLoginWithGlobal" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithGlobal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin_TcpLogin::rfAckLoginWithThailand ( int Result )
{
	static UFunction* prfAckLoginWithThailand = 0;
	UBTPageLogin_TcpLogin_execrfAckLoginWithThailand_Parms parms;

	if ( !prfAckLoginWithThailand )
		prfAckLoginWithThailand = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin_TcpLogin.rfAckLoginWithThailand" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckLoginWithThailand, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin_TcpLogin::rfAckLoginWithTencentAuth ( int Result, unsigned char tc_AccountType, unsigned char tc_IsBlock )
{
	static UFunction* prfAckLoginWithTencentAuth = 0;
	UBTPageLogin_TcpLogin_execrfAckLoginWithTencentAuth_Parms parms;

	if ( !prfAckLoginWithTencentAuth )
		prfAckLoginWithTencentAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin_TcpLogin.rfAckLoginWithTencentAuth" );

	parms.Result = Result;
	parms.tc_AccountType = tc_AccountType;
	parms.tc_IsBlock = tc_IsBlock;
	this->ProcessEvent ( prfAckLoginWithTencentAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin_TcpLogin::rfAckLoginWithWZAuth ( int Result, unsigned char wzp_AccountType, unsigned char wzp_IsBlock, unsigned char wzp_AuthKeySuccess, unsigned char ChannelType )
{
	static UFunction* prfAckLoginWithWZAuth = 0;
	UBTPageLogin_TcpLogin_execrfAckLoginWithWZAuth_Parms parms;

	if ( !prfAckLoginWithWZAuth )
		prfAckLoginWithWZAuth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin_TcpLogin.rfAckLoginWithWZAuth" );

	parms.Result = Result;
	parms.wzp_AccountType = wzp_AccountType;
	parms.wzp_IsBlock = wzp_IsBlock;
	parms.wzp_AuthKeySuccess = wzp_AuthKeySuccess;
	parms.ChannelType = ChannelType;
	this->ProcessEvent ( prfAckLoginWithWZAuth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin_TcpLogin::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageLogin_TcpLogin_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin_TcpLogin.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin_TcpLogin::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageLogin_TcpLogin_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin_TcpLogin.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin_TcpLogin::rfAckCreateChar ( int Success, struct FString ErrMsg )
{
	static UFunction* prfAckCreateChar = 0;
	UBTPageLogin_TcpLogin_execrfAckCreateChar_Parms parms;

	if ( !prfAckCreateChar )
		prfAckCreateChar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin_TcpLogin.rfAckCreateChar" );

	parms.Success = Success;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCreateChar, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLogin_TcpLogin::rfAckLogin ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg )
{
	static UFunction* prfAckLogin = 0;
	UBTPageLogin_TcpLogin_execrfAckLogin_Parms parms;

	if ( !prfAckLogin )
		prfAckLogin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLogin_TcpLogin.rfAckLogin" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckLogin, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore_TCP::rfAckCouponUse ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckCouponUse = 0;
	UBTPageStore_TCP_execrfAckCouponUse_Parms parms;

	if ( !prfAckCouponUse )
		prfAckCouponUse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore_TCP.rfAckCouponUse" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCouponUse, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore_TCP::rfAckGiftItemByWebzenCash ( int Result, struct FString ErrMsg, int LeftProductCount )
{
	static UFunction* prfAckGiftItemByWebzenCash = 0;
	UBTPageStore_TCP_execrfAckGiftItemByWebzenCash_Parms parms;

	if ( !prfAckGiftItemByWebzenCash )
		prfAckGiftItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore_TCP.rfAckGiftItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.LeftProductCount = LeftProductCount;
	this->ProcessEvent ( prfAckGiftItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore_TCP::rfAckBuyItemByWebzenCash ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckBuyItemByWebzenCash = 0;
	UBTPageStore_TCP_execrfAckBuyItemByWebzenCash_Parms parms;

	if ( !prfAckBuyItemByWebzenCash )
		prfAckBuyItemByWebzenCash = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore_TCP.rfAckBuyItemByWebzenCash" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckBuyItemByWebzenCash, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore_TCP::rfAckSendGift ( int Result, struct FString ErrMsg, int PointRemain, int CashRemain )
{
	static UFunction* prfAckSendGift = 0;
	UBTPageStore_TCP_execrfAckSendGift_Parms parms;

	if ( !prfAckSendGift )
		prfAckSendGift = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore_TCP.rfAckSendGift" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.PointRemain = PointRemain;
	parms.CashRemain = CashRemain;
	this->ProcessEvent ( prfAckSendGift, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore_TCP::rfAckShopItemListEnd (  )
{
	static UFunction* prfAckShopItemListEnd = 0;
	UBTPageStore_TCP_execrfAckShopItemListEnd_Parms parms;

	if ( !prfAckShopItemListEnd )
		prfAckShopItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore_TCP.rfAckShopItemListEnd" );

	this->ProcessEvent ( prfAckShopItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore_TCP::rfAckShopItemList ( class TArray< int > ItemID )
{
	static UFunction* prfAckShopItemList = 0;
	UBTPageStore_TCP_execrfAckShopItemList_Parms parms;

	if ( !prfAckShopItemList )
		prfAckShopItemList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore_TCP.rfAckShopItemList" );

	parms.ItemID = ItemID;
	this->ProcessEvent ( prfAckShopItemList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageStore_TCP::rfAckShopItemListStart ( int Count )
{
	static UFunction* prfAckShopItemListStart = 0;
	UBTPageStore_TCP_execrfAckShopItemListStart_Parms parms;

	if ( !prfAckShopItemListStart )
		prfAckShopItemListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageStore_TCP.rfAckShopItemListStart" );

	parms.Count = Count;
	this->ProcessEvent ( prfAckShopItemListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo_TCP::rfAckGetRankingInfoListEnd (  )
{
	static UFunction* prfAckGetRankingInfoListEnd = 0;
	UBTPageMyInfo_TCP_execrfAckGetRankingInfoListEnd_Parms parms;

	if ( !prfAckGetRankingInfoListEnd )
		prfAckGetRankingInfoListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo_TCP.rfAckGetRankingInfoListEnd" );

	this->ProcessEvent ( prfAckGetRankingInfoListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo_TCP::rfAckGetRankingInfoList ( int Result, unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckGetRankingInfoList = 0;
	UBTPageMyInfo_TCP_execrfAckGetRankingInfoList_Parms parms;

	if ( !prfAckGetRankingInfoList )
		prfAckGetRankingInfoList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo_TCP.rfAckGetRankingInfoList" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.CharName = CharName;
	parms.CharLevel = CharLevel;
	parms.ClanName = ClanName;
	parms.ClanMarkPattern = ClanMarkPattern;
	parms.ClanMarkBG = ClanMarkBG;
	parms.ClanMarkBL = ClanMarkBL;
	parms.Ranking_Accum = Ranking_Accum;
	parms.Ranking_Accum_Prev = Ranking_Accum_Prev;
	parms.Ranking_Accum_Exp = Ranking_Accum_Exp;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckGetRankingInfoList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo_TCP::rfAckGetRankingInfoListStart ( int Result, unsigned char RankingType, unsigned char CommunityType, int TotalCount )
{
	static UFunction* prfAckGetRankingInfoListStart = 0;
	UBTPageMyInfo_TCP_execrfAckGetRankingInfoListStart_Parms parms;

	if ( !prfAckGetRankingInfoListStart )
		prfAckGetRankingInfoListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo_TCP.rfAckGetRankingInfoListStart" );

	parms.Result = Result;
	parms.RankingType = RankingType;
	parms.CommunityType = CommunityType;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckGetRankingInfoListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo_TCP::rfAckCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb )
{
	static UFunction* prfAckCharDetailInfo = 0;
	UBTPageMyInfo_TCP_execrfAckCharDetailInfo_Parms parms;

	if ( !prfAckCharDetailInfo )
		prfAckCharDetailInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo_TCP.rfAckCharDetailInfo" );

	parms.MaxSerial = MaxSerial;
	parms.MaxScore = MaxScore;
	parms.MaxKill = MaxKill;
	parms.MaxAssist = MaxAssist;
	parms.Serial3 = Serial3;
	parms.Serial5 = Serial5;
	parms.Serial7 = Serial7;
	parms.Serial10 = Serial10;
	parms.Serial15 = Serial15;
	parms.AR = AR;
	parms.SMG = SMG;
	parms.SR = SR;
	parms.SW = SW;
	parms.Melee = Melee;
	parms.Grenade = Grenade;
	parms.FlashBang = FlashBang;
	parms.Foot = Foot;
	parms.AT4 = AT4;
	parms.MG = MG;
	parms.Fire = Fire;
	parms.RPG7 = RPG7;
	parms.TimeBomb = TimeBomb;
	parms.IcendiaryBomb = IcendiaryBomb;
	parms.ClusterBomb = ClusterBomb;
	parms.ByChopper = ByChopper;
	parms.Artillery = Artillery;
	parms.KillChopper = KillChopper;
	parms.FirstKill = FirstKill;
	parms.LastKill = LastKill;
	parms.AllKill = AllKill;
	parms.Dominate = Dominate;
	parms.InstallBomb = InstallBomb;
	parms.DefuseBomb = DefuseBomb;
	this->ProcessEvent ( prfAckCharDetailInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageMyInfo_TCP::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageMyInfo_TCP_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageMyInfo_TCP.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageCharacterCreation_TcpLogin::rfAckProcessPreLoginUser ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckProcessPreLoginUser = 0;
	UBTPageCharacterCreation_TcpLogin_execrfAckProcessPreLoginUser_Parms parms;

	if ( !prfAckProcessPreLoginUser )
		prfAckProcessPreLoginUser = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation_TcpLogin.rfAckProcessPreLoginUser" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckProcessPreLoginUser, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageCharacterCreation_TcpLogin::rfAckLoginInHouseTest ( unsigned char Sucess, struct FString CharName, int TimeStamp, int LoginHash1, int LoginHash2, int LoginHash3, int LoginHash4, int LoginHash5, unsigned char NeedChar, struct FString ErrMsg, struct FString BDay, unsigned char Sex, struct FBtrDouble ServerTime )
{
	static UFunction* prfAckLoginInHouseTest = 0;
	UBTPageCharacterCreation_TcpLogin_execrfAckLoginInHouseTest_Parms parms;

	if ( !prfAckLoginInHouseTest )
		prfAckLoginInHouseTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation_TcpLogin.rfAckLoginInHouseTest" );

	parms.Sucess = Sucess;
	parms.CharName = CharName;
	parms.TimeStamp = TimeStamp;
	parms.LoginHash1 = LoginHash1;
	parms.LoginHash2 = LoginHash2;
	parms.LoginHash3 = LoginHash3;
	parms.LoginHash4 = LoginHash4;
	parms.LoginHash5 = LoginHash5;
	parms.NeedChar = NeedChar;
	parms.ErrMsg = ErrMsg;
	parms.BDay = BDay;
	parms.Sex = Sex;
	parms.ServerTime = ServerTime;
	this->ProcessEvent ( prfAckLoginInHouseTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageCharacterCreation_TcpLogin::rfAckCreateChar ( int Success, struct FString ErrMsg )
{
	static UFunction* prfAckCreateChar = 0;
	UBTPageCharacterCreation_TcpLogin_execrfAckCreateChar_Parms parms;

	if ( !prfAckCreateChar )
		prfAckCreateChar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageCharacterCreation_TcpLogin.rfAckCreateChar" );

	parms.Success = Success;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckCreateChar, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::AD_Large_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pAD_Large_OnClick = 0;
	UBTPageServerSelectionCN_execAD_Large_OnClick_Parms parms;

	if ( !pAD_Large_OnClick )
		pAD_Large_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.AD_Large_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pAD_Large_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::AD_Small_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pAD_Small_OnClick = 0;
	UBTPageServerSelectionCN_execAD_Small_OnClick_Parms parms;

	if ( !pAD_Small_OnClick )
		pAD_Small_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.AD_Small_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pAD_Small_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckTencent_StartTenProtect ( int CharDBID )
{
	static UFunction* prfAckTencent_StartTenProtect = 0;
	UBTPageServerSelectionCN_execrfAckTencent_StartTenProtect_Parms parms;

	if ( !prfAckTencent_StartTenProtect )
		prfAckTencent_StartTenProtect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckTencent_StartTenProtect" );

	parms.CharDBID = CharDBID;
	this->ProcessEvent ( prfAckTencent_StartTenProtect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckMoveToLobby ( unsigned char MessageType )
{
	static UFunction* prfAckMoveToLobby = 0;
	UBTPageServerSelectionCN_execrfAckMoveToLobby_Parms parms;

	if ( !prfAckMoveToLobby )
		prfAckMoveToLobby = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckMoveToLobby" );

	parms.MessageType = MessageType;
	this->ProcessEvent ( prfAckMoveToLobby, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckQSlotList ( int Result, struct FString ErrMsg, class TArray< int > QSlotID, class TArray< struct FString > QSlotName, class TArray< unsigned char > QSlotDispOrder, class TArray< struct FBtrDouble > MWItemID, class TArray< struct FBtrDouble > PistolItemID, class TArray< struct FBtrDouble > TWItemID1, class TArray< struct FBtrDouble > TWItemID2, class TArray< int > Skill1, class TArray< int > Skill2, class TArray< int > Skill3, class TArray< int > Skill4 )
{
	static UFunction* prfAckQSlotList = 0;
	UBTPageServerSelectionCN_execrfAckQSlotList_Parms parms;

	if ( !prfAckQSlotList )
		prfAckQSlotList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckQSlotList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.QSlotID = QSlotID;
	parms.QSlotName = QSlotName;
	parms.QSlotDispOrder = QSlotDispOrder;
	parms.MWItemID = MWItemID;
	parms.PistolItemID = PistolItemID;
	parms.TWItemID1 = TWItemID1;
	parms.TWItemID2 = TWItemID2;
	parms.Skill1 = Skill1;
	parms.Skill2 = Skill2;
	parms.Skill3 = Skill3;
	parms.Skill4 = Skill4;
	this->ProcessEvent ( prfAckQSlotList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckItemListEnd (  )
{
	static UFunction* prfAckItemListEnd = 0;
	UBTPageServerSelectionCN_execrfAckItemListEnd_Parms parms;

	if ( !prfAckItemListEnd )
		prfAckItemListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckItemListEnd" );

	this->ProcessEvent ( prfAckItemListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckServerType ( unsigned char Type )
{
	static UFunction* prfAckServerType = 0;
	UBTPageServerSelectionCN_execrfAckServerType_Parms parms;

	if ( !prfAckServerType )
		prfAckServerType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckServerType" );

	parms.Type = Type;
	this->ProcessEvent ( prfAckServerType, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelectionCN::Receive_EventGift ( int Index )
{
	static UFunction* pReceive_EventGift = 0;
	UBTPageServerSelectionCN_execReceive_EventGift_Parms parms;

	if ( !pReceive_EventGift )
		pReceive_EventGift = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.Receive_EventGift" );

	parms.Index = Index;
	this->ProcessEvent ( pReceive_EventGift, &parms, NULL );

}*/

/*bool UBTPageServerSelectionCN::rfAckRecvSystemMsg ( unsigned char CommunityType, struct FSystemMsgParam MsgInfo )
{
	static UFunction* prfAckRecvSystemMsg = 0;
	UBTPageServerSelectionCN_execrfAckRecvSystemMsg_Parms parms;

	if ( !prfAckRecvSystemMsg )
		prfAckRecvSystemMsg = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckRecvSystemMsg" );

	parms.CommunityType = CommunityType;
	parms.MsgInfo = MsgInfo;
	this->ProcessEvent ( prfAckRecvSystemMsg, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckPaidItem_RelayBroadcast ( struct FString CharName, struct FString Msg )
{
	static UFunction* prfAckPaidItem_RelayBroadcast = 0;
	UBTPageServerSelectionCN_execrfAckPaidItem_RelayBroadcast_Parms parms;

	if ( !prfAckPaidItem_RelayBroadcast )
		prfAckPaidItem_RelayBroadcast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckPaidItem_RelayBroadcast" );

	parms.CharName = CharName;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckPaidItem_RelayBroadcast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckChatClan ( struct FString CharName, struct FString Message, int Result )
{
	static UFunction* prfAckChatClan = 0;
	UBTPageServerSelectionCN_execrfAckChatClan_Parms parms;

	if ( !prfAckChatClan )
		prfAckChatClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckChatClan" );

	parms.CharName = CharName;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfReqRecvChatWispher ( struct FString CharnameFrom, struct FString Message )
{
	static UFunction* prfReqRecvChatWispher = 0;
	UBTPageServerSelectionCN_execrfReqRecvChatWispher_Parms parms;

	if ( !prfReqRecvChatWispher )
		prfReqRecvChatWispher = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfReqRecvChatWispher" );

	parms.CharnameFrom = CharnameFrom;
	parms.Message = Message;
	this->ProcessEvent ( prfReqRecvChatWispher, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckChatNormal ( int id, struct FString Sender, struct FString Message, int Result )
{
	static UFunction* prfAckChatNormal = 0;
	UBTPageServerSelectionCN_execrfAckChatNormal_Parms parms;

	if ( !prfAckChatNormal )
		prfAckChatNormal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckChatNormal" );

	parms.id = id;
	parms.Sender = Sender;
	parms.Message = Message;
	parms.Result = Result;
	this->ProcessEvent ( prfAckChatNormal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckSetLookForClan ( int Result, struct FString ErrMsg, unsigned char IsLookingFor )
{
	static UFunction* prfAckSetLookForClan = 0;
	UBTPageServerSelectionCN_execrfAckSetLookForClan_Parms parms;

	if ( !prfAckSetLookForClan )
		prfAckSetLookForClan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckSetLookForClan" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsLookingFor = IsLookingFor;
	this->ProcessEvent ( prfAckSetLookForClan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckGetMyMailBoxState ( int Result, unsigned char IsFull, int NewMailCount )
{
	static UFunction* prfAckGetMyMailBoxState = 0;
	UBTPageServerSelectionCN_execrfAckGetMyMailBoxState_Parms parms;

	if ( !prfAckGetMyMailBoxState )
		prfAckGetMyMailBoxState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckGetMyMailBoxState" );

	parms.Result = Result;
	parms.IsFull = IsFull;
	parms.NewMailCount = NewMailCount;
	this->ProcessEvent ( prfAckGetMyMailBoxState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::BTWindowDefineARHK_40_41_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineARHK_40_41_OnOK = 0;
	UBTPageServerSelectionCN_execBTWindowDefineARHK_40_41_OnOK_Parms parms;

	if ( !pBTWindowDefineARHK_40_41_OnOK )
		pBTWindowDefineARHK_40_41_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.BTWindowDefineARHK_40_41_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineARHK_40_41_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckClientChecksum ( int Result )
{
	static UFunction* prfAckClientChecksum = 0;
	UBTPageServerSelectionCN_execrfAckClientChecksum_Parms parms;

	if ( !prfAckClientChecksum )
		prfAckClientChecksum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckClientChecksum" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckClientChecksum, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckClientChallenge ( struct FString Key1, struct FBtrDouble Key2 )
{
	static UFunction* prfAckClientChallenge = 0;
	UBTPageServerSelectionCN_execrfAckClientChallenge_Parms parms;

	if ( !prfAckClientChallenge )
		prfAckClientChallenge = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckClientChallenge" );

	parms.Key1 = Key1;
	parms.Key2 = Key2;
	this->ProcessEvent ( prfAckClientChallenge, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelectionCN::ChatBlockEndTime_OnEventTimer ( int Index )
{
	static UFunction* pChatBlockEndTime_OnEventTimer = 0;
	UBTPageServerSelectionCN_execChatBlockEndTime_OnEventTimer_Parms parms;

	if ( !pChatBlockEndTime_OnEventTimer )
		pChatBlockEndTime_OnEventTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.ChatBlockEndTime_OnEventTimer" );

	parms.Index = Index;
	this->ProcessEvent ( pChatBlockEndTime_OnEventTimer, &parms, NULL );

}*/

/*void UBTPageServerSelectionCN::ChatBlockStartTime_OnEventTimer ( int Index )
{
	static UFunction* pChatBlockStartTime_OnEventTimer = 0;
	UBTPageServerSelectionCN_execChatBlockStartTime_OnEventTimer_Parms parms;

	if ( !pChatBlockStartTime_OnEventTimer )
		pChatBlockStartTime_OnEventTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.ChatBlockStartTime_OnEventTimer" );

	parms.Index = Index;
	this->ProcessEvent ( pChatBlockStartTime_OnEventTimer, &parms, NULL );

}*/

/*bool UBTPageServerSelectionCN::rfAckCharBlockInfo ( int Result, struct FBtrDouble ChatBlockStartTime, struct FBtrDouble ChatBlockEndTime, class TArray< struct FBtrDouble > BlockedItemIdx )
{
	static UFunction* prfAckCharBlockInfo = 0;
	UBTPageServerSelectionCN_execrfAckCharBlockInfo_Parms parms;

	if ( !prfAckCharBlockInfo )
		prfAckCharBlockInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckCharBlockInfo" );

	parms.Result = Result;
	parms.ChatBlockStartTime = ChatBlockStartTime;
	parms.ChatBlockEndTime = ChatBlockEndTime;
	parms.BlockedItemIdx = BlockedItemIdx;
	this->ProcessEvent ( prfAckCharBlockInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckGMLeaveRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMLeaveRoom = 0;
	UBTPageServerSelectionCN_execrfAckGMLeaveRoom_Parms parms;

	if ( !prfAckGMLeaveRoom )
		prfAckGMLeaveRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckGMLeaveRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMLeaveRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckGMEnterRoom ( int Result, int RoomNumber, int UserID )
{
	static UFunction* prfAckGMEnterRoom = 0;
	UBTPageServerSelectionCN_execrfAckGMEnterRoom_Parms parms;

	if ( !prfAckGMEnterRoom )
		prfAckGMEnterRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckGMEnterRoom" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.UserID = UserID;
	this->ProcessEvent ( prfAckGMEnterRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckForceDisconnectUser_GM ( int Result, struct FString ErrMsg, struct FString CharName )
{
	static UFunction* prfAckForceDisconnectUser_GM = 0;
	UBTPageServerSelectionCN_execrfAckForceDisconnectUser_GM_Parms parms;

	if ( !prfAckForceDisconnectUser_GM )
		prfAckForceDisconnectUser_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckForceDisconnectUser_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	this->ProcessEvent ( prfAckForceDisconnectUser_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckNotice_GM ( int Result, struct FString ErrMsg, unsigned char NoticeType, int ServerID, int ChannelNum, int GameRoomNum, struct FString Msg )
{
	static UFunction* prfAckNotice_GM = 0;
	UBTPageServerSelectionCN_execrfAckNotice_GM_Parms parms;

	if ( !prfAckNotice_GM )
		prfAckNotice_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckNotice_GM" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.NoticeType = NoticeType;
	parms.ServerID = ServerID;
	parms.ChannelNum = ChannelNum;
	parms.GameRoomNum = GameRoomNum;
	parms.Msg = Msg;
	this->ProcessEvent ( prfAckNotice_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckChangeRoomTitle_GM ( int Result, int RoomNumber, struct FString NewRoomTitle )
{
	static UFunction* prfAckChangeRoomTitle_GM = 0;
	UBTPageServerSelectionCN_execrfAckChangeRoomTitle_GM_Parms parms;

	if ( !prfAckChangeRoomTitle_GM )
		prfAckChangeRoomTitle_GM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckChangeRoomTitle_GM" );

	parms.Result = Result;
	parms.RoomNumber = RoomNumber;
	parms.NewRoomTitle = NewRoomTitle;
	this->ProcessEvent ( prfAckChangeRoomTitle_GM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckPaidItem_ChangeClanMark ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_ChangeClanMark = 0;
	UBTPageServerSelectionCN_execrfAckPaidItem_ChangeClanMark_Parms parms;

	if ( !prfAckPaidItem_ChangeClanMark )
		prfAckPaidItem_ChangeClanMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckPaidItem_ChangeClanMark" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_ChangeClanMark, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckPaidItem_ClanMarkDupCheck ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckPaidItem_ClanMarkDupCheck = 0;
	UBTPageServerSelectionCN_execrfAckPaidItem_ClanMarkDupCheck_Parms parms;

	if ( !prfAckPaidItem_ClanMarkDupCheck )
		prfAckPaidItem_ClanMarkDupCheck = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckPaidItem_ClanMarkDupCheck" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckPaidItem_ClanMarkDupCheck, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckPaidItem_NotifyChangeClanname ( struct FString NewClanname )
{
	static UFunction* prfAckPaidItem_NotifyChangeClanname = 0;
	UBTPageServerSelectionCN_execrfAckPaidItem_NotifyChangeClanname_Parms parms;

	if ( !prfAckPaidItem_NotifyChangeClanname )
		prfAckPaidItem_NotifyChangeClanname = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckPaidItem_NotifyChangeClanname" );

	parms.NewClanname = NewClanname;
	this->ProcessEvent ( prfAckPaidItem_NotifyChangeClanname, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckPaidItem_BroadCast ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int StackCount )
{
	static UFunction* prfAckPaidItem_BroadCast = 0;
	UBTPageServerSelectionCN_execrfAckPaidItem_BroadCast_Parms parms;

	if ( !prfAckPaidItem_BroadCast )
		prfAckPaidItem_BroadCast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckPaidItem_BroadCast" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckPaidItem_BroadCast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckPaidItem_EraseRecord ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int Command, int RemainCount )
{
	static UFunction* prfAckPaidItem_EraseRecord = 0;
	UBTPageServerSelectionCN_execrfAckPaidItem_EraseRecord_Parms parms;

	if ( !prfAckPaidItem_EraseRecord )
		prfAckPaidItem_EraseRecord = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckPaidItem_EraseRecord" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.Command = Command;
	parms.RemainCount = RemainCount;
	this->ProcessEvent ( prfAckPaidItem_EraseRecord, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckWebzenBillingUseStorageItem ( int Result, struct FString ErrMsg, struct FBtrDouble ItemIdx, int ItemID, struct FBtrDouble ItemExtra )
{
	static UFunction* prfAckWebzenBillingUseStorageItem = 0;
	UBTPageServerSelectionCN_execrfAckWebzenBillingUseStorageItem_Parms parms;

	if ( !prfAckWebzenBillingUseStorageItem )
		prfAckWebzenBillingUseStorageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckWebzenBillingUseStorageItem" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.ItemIdx = ItemIdx;
	parms.ItemID = ItemID;
	parms.ItemExtra = ItemExtra;
	this->ProcessEvent ( prfAckWebzenBillingUseStorageItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckWebzenBillingStorageListEnd (  )
{
	static UFunction* prfAckWebzenBillingStorageListEnd = 0;
	UBTPageServerSelectionCN_execrfAckWebzenBillingStorageListEnd_Parms parms;

	if ( !prfAckWebzenBillingStorageListEnd )
		prfAckWebzenBillingStorageListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckWebzenBillingStorageListEnd" );

	this->ProcessEvent ( prfAckWebzenBillingStorageListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckWebzenBillingStorageList ( class TArray< int > Seq, class TArray< int > ItemSeq, class TArray< int > GroupCode, class TArray< int > ShareFlag, class TArray< int > ProductSeq, class TArray< struct FString > CashName, class TArray< struct FBtrDouble > CashPoint, class TArray< struct FString > SendAccountID, class TArray< struct FString > SendMessage, class TArray< unsigned char > ItemType, class TArray< unsigned char > RelationType, class TArray< int > ProductType, class TArray< int > PriceSeq )
{
	static UFunction* prfAckWebzenBillingStorageList = 0;
	UBTPageServerSelectionCN_execrfAckWebzenBillingStorageList_Parms parms;

	if ( !prfAckWebzenBillingStorageList )
		prfAckWebzenBillingStorageList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckWebzenBillingStorageList" );

	parms.Seq = Seq;
	parms.ItemSeq = ItemSeq;
	parms.GroupCode = GroupCode;
	parms.ShareFlag = ShareFlag;
	parms.ProductSeq = ProductSeq;
	parms.CashName = CashName;
	parms.CashPoint = CashPoint;
	parms.SendAccountID = SendAccountID;
	parms.SendMessage = SendMessage;
	parms.ItemType = ItemType;
	parms.RelationType = RelationType;
	parms.ProductType = ProductType;
	parms.PriceSeq = PriceSeq;
	this->ProcessEvent ( prfAckWebzenBillingStorageList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckWebzenBillingStorageListStart ( int Result, struct FString ErrMsg, int TotalCount, int TotalPage, int CurPage )
{
	static UFunction* prfAckWebzenBillingStorageListStart = 0;
	UBTPageServerSelectionCN_execrfAckWebzenBillingStorageListStart_Parms parms;

	if ( !prfAckWebzenBillingStorageListStart )
		prfAckWebzenBillingStorageListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckWebzenBillingStorageListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.TotalCount = TotalCount;
	parms.TotalPage = TotalPage;
	parms.CurPage = CurPage;
	this->ProcessEvent ( prfAckWebzenBillingStorageListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckRemoveBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRemoveBlockUserList = 0;
	UBTPageServerSelectionCN_execrfAckRemoveBlockUserList_Parms parms;

	if ( !prfAckRemoveBlockUserList )
		prfAckRemoveBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckRemoveBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRemoveBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckAddBlockUserList ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckAddBlockUserList = 0;
	UBTPageServerSelectionCN_execrfAckAddBlockUserList_Parms parms;

	if ( !prfAckAddBlockUserList )
		prfAckAddBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckAddBlockUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckAddBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckEquipItem ( int ChangedNewItemID, struct FBtrDouble ChangedNewUniqueID, int ChangedNewSlotPosition, int ChangedOldItemID, struct FBtrDouble ChangedOldUniqueID, int ChangedOldSlotPosition, int Result, struct FString ErrMsg )
{
	static UFunction* prfAckEquipItem = 0;
	UBTPageServerSelectionCN_execrfAckEquipItem_Parms parms;

	if ( !prfAckEquipItem )
		prfAckEquipItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckEquipItem" );

	parms.ChangedNewItemID = ChangedNewItemID;
	parms.ChangedNewUniqueID = ChangedNewUniqueID;
	parms.ChangedNewSlotPosition = ChangedNewSlotPosition;
	parms.ChangedOldItemID = ChangedOldItemID;
	parms.ChangedOldUniqueID = ChangedOldUniqueID;
	parms.ChangedOldSlotPosition = ChangedOldSlotPosition;
	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckEquipItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckRandomBox_Use ( int Result, struct FString ErrMsg, struct FBtrDouble RandomBoxItemIdx, int RandomBxoItemCount, class TArray< int > ItemIDChoose, class TArray< int > PartIDChoose, class TArray< int > PeriodOnChoosenItem, class TArray< int > StackCountOnChoosenItem, class TArray< unsigned char > bHave, class TArray< struct FBtrDouble > ItemIdx, class TArray< struct FBtrDouble > UntilTime, class TArray< int > StackCount )
{
	static UFunction* prfAckRandomBox_Use = 0;
	UBTPageServerSelectionCN_execrfAckRandomBox_Use_Parms parms;

	if ( !prfAckRandomBox_Use )
		prfAckRandomBox_Use = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckRandomBox_Use" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.RandomBoxItemIdx = RandomBoxItemIdx;
	parms.RandomBxoItemCount = RandomBxoItemCount;
	parms.ItemIDChoose = ItemIDChoose;
	parms.PartIDChoose = PartIDChoose;
	parms.PeriodOnChoosenItem = PeriodOnChoosenItem;
	parms.StackCountOnChoosenItem = StackCountOnChoosenItem;
	parms.bHave = bHave;
	parms.ItemIdx = ItemIdx;
	parms.UntilTime = UntilTime;
	parms.StackCount = StackCount;
	this->ProcessEvent ( prfAckRandomBox_Use, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::BTWindowRandBoxHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowRandBoxHK_OnOK = 0;
	UBTPageServerSelectionCN_execBTWindowRandBoxHK_OnOK_Parms parms;

	if ( !pBTWindowRandBoxHK_OnOK )
		pBTWindowRandBoxHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.BTWindowRandBoxHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowRandBoxHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckBlockUserList ( class TArray< struct FString > CharName )
{
	static UFunction* prfAckBlockUserList = 0;
	UBTPageServerSelectionCN_execrfAckBlockUserList_Parms parms;

	if ( !prfAckBlockUserList )
		prfAckBlockUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckBlockUserList" );

	parms.CharName = CharName;
	this->ProcessEvent ( prfAckBlockUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckPCBangUserListEnd (  )
{
	static UFunction* prfAckPCBangUserListEnd = 0;
	UBTPageServerSelectionCN_execrfAckPCBangUserListEnd_Parms parms;

	if ( !prfAckPCBangUserListEnd )
		prfAckPCBangUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckPCBangUserListEnd" );

	this->ProcessEvent ( prfAckPCBangUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckPCBangUserList ( class TArray< struct FString > FriendName, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > Level, class TArray< int > ClanGrade, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< unsigned char > IsLookForClan, class TArray< unsigned char > IsCombat, class TArray< int > ClanLevel, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 )
{
	static UFunction* prfAckPCBangUserList = 0;
	UBTPageServerSelectionCN_execrfAckPCBangUserList_Parms parms;

	if ( !prfAckPCBangUserList )
		prfAckPCBangUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckPCBangUserList" );

	parms.FriendName = FriendName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.Level = Level;
	parms.ClanGrade = ClanGrade;
	parms.ClanWin = ClanWin;
	parms.ClanLose = ClanLose;
	parms.IsLookForClan = IsLookForClan;
	parms.IsCombat = IsCombat;
	parms.ClanLevel = ClanLevel;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.Reserved1 = Reserved1;
	parms.Reserved2 = Reserved2;
	parms.Reserved3 = Reserved3;
	this->ProcessEvent ( prfAckPCBangUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckPCBangUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckPCBangUserListStart = 0;
	UBTPageServerSelectionCN_execrfAckPCBangUserListStart_Parms parms;

	if ( !prfAckPCBangUserListStart )
		prfAckPCBangUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckPCBangUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckPCBangUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckFriendList ( class TArray< struct FString > FriendName, class TArray< unsigned char > IsLogOn, class TArray< struct FString > ClanName, class TArray< int > CM_Pattern, class TArray< int > CM_BG, class TArray< int > CM_BL, class TArray< int > LevelMarkID, class TArray< int > ClanLevel, class TArray< int > Level, class TArray< unsigned char > IsLookForClan )
{
	static UFunction* prfAckFriendList = 0;
	UBTPageServerSelectionCN_execrfAckFriendList_Parms parms;

	if ( !prfAckFriendList )
		prfAckFriendList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckFriendList" );

	parms.FriendName = FriendName;
	parms.IsLogOn = IsLogOn;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.LevelMarkID = LevelMarkID;
	parms.ClanLevel = ClanLevel;
	parms.Level = Level;
	parms.IsLookForClan = IsLookForClan;
	this->ProcessEvent ( prfAckFriendList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckFriendListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckFriendListStart = 0;
	UBTPageServerSelectionCN_execrfAckFriendListStart_Parms parms;

	if ( !prfAckFriendListStart )
		prfAckFriendListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckFriendListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckFriendListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckClanUserListEnd (  )
{
	static UFunction* prfAckClanUserListEnd = 0;
	UBTPageServerSelectionCN_execrfAckClanUserListEnd_Parms parms;

	if ( !prfAckClanUserListEnd )
		prfAckClanUserListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckClanUserListEnd" );

	this->ProcessEvent ( prfAckClanUserListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckClanUserList ( int Result, struct FString ErrMsg, class TArray< int > Level, class TArray< struct FString > CharName, class TArray< unsigned char > ClanGrade, class TArray< int > ClanWinCnt, class TArray< int > ClanLoseCnt, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > DudeId )
{
	static UFunction* prfAckClanUserList = 0;
	UBTPageServerSelectionCN_execrfAckClanUserList_Parms parms;

	if ( !prfAckClanUserList )
		prfAckClanUserList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckClanUserList" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Level = Level;
	parms.CharName = CharName;
	parms.ClanGrade = ClanGrade;
	parms.ClanWinCnt = ClanWinCnt;
	parms.ClanLoseCnt = ClanLoseCnt;
	parms.LevelMarkID = LevelMarkID;
	parms.TitleMarkID = TitleMarkID;
	parms.DudeId = DudeId;
	this->ProcessEvent ( prfAckClanUserList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckClanUserListStart ( int Result, int TotalCount )
{
	static UFunction* prfAckClanUserListStart = 0;
	UBTPageServerSelectionCN_execrfAckClanUserListStart_Parms parms;

	if ( !prfAckClanUserListStart )
		prfAckClanUserListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckClanUserListStart" );

	parms.Result = Result;
	parms.TotalCount = TotalCount;
	this->ProcessEvent ( prfAckClanUserListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckRegisterMainPCBang ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckRegisterMainPCBang = 0;
	UBTPageServerSelectionCN_execrfAckRegisterMainPCBang_Parms parms;

	if ( !prfAckRegisterMainPCBang )
		prfAckRegisterMainPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckRegisterMainPCBang" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckRegisterMainPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfReqIsPaidWebzenPCBang ( unsigned char IsPaid )
{
	static UFunction* prfReqIsPaidWebzenPCBang = 0;
	UBTPageServerSelectionCN_execrfReqIsPaidWebzenPCBang_Parms parms;

	if ( !prfReqIsPaidWebzenPCBang )
		prfReqIsPaidWebzenPCBang = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfReqIsPaidWebzenPCBang" );

	parms.IsPaid = IsPaid;
	this->ProcessEvent ( prfReqIsPaidWebzenPCBang, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckClanInfo ( struct FClanInfo stClanInfo )
{
	static UFunction* prfAckClanInfo = 0;
	UBTPageServerSelectionCN_execrfAckClanInfo_Parms parms;

	if ( !prfAckClanInfo )
		prfAckClanInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckClanInfo" );

	parms.stClanInfo = stClanInfo;
	this->ProcessEvent ( prfAckClanInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckCharInfo ( int Result, struct FString ErrMsg, int UserID, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FCharInfo stCharInfo, unsigned char InClanRank, int ClanLevel )
{
	static UFunction* prfAckCharInfo = 0;
	UBTPageServerSelectionCN_execrfAckCharInfo_Parms parms;

	if ( !prfAckCharInfo )
		prfAckCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.UserID = UserID;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.stCharInfo = stCharInfo;
	parms.InClanRank = InClanRank;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckRegisteredPCBangInfo ( int Result, struct FString ErrMsg, unsigned char IsRegisteredPCBang, unsigned char IsMainPCBang, struct FString PCBangName )
{
	static UFunction* prfAckRegisteredPCBangInfo = 0;
	UBTPageServerSelectionCN_execrfAckRegisteredPCBangInfo_Parms parms;

	if ( !prfAckRegisteredPCBangInfo )
		prfAckRegisteredPCBangInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckRegisteredPCBangInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.IsRegisteredPCBang = IsRegisteredPCBang;
	parms.IsMainPCBang = IsMainPCBang;
	parms.PCBangName = PCBangName;
	this->ProcessEvent ( prfAckRegisteredPCBangInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfUpdateWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfUpdateWebzenShopScriptVersion = 0;
	UBTPageServerSelectionCN_execrfUpdateWebzenShopScriptVersion_Parms parms;

	if ( !prfUpdateWebzenShopScriptVersion )
		prfUpdateWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfUpdateWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfUpdateWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckWebzenShopScriptVersion ( int Year, int YearId, int SalesZoneCode )
{
	static UFunction* prfAckWebzenShopScriptVersion = 0;
	UBTPageServerSelectionCN_execrfAckWebzenShopScriptVersion_Parms parms;

	if ( !prfAckWebzenShopScriptVersion )
		prfAckWebzenShopScriptVersion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckWebzenShopScriptVersion" );

	parms.Year = Year;
	parms.YearId = YearId;
	parms.SalesZoneCode = SalesZoneCode;
	this->ProcessEvent ( prfAckWebzenShopScriptVersion, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckMyMoney ( int Result, struct FString ErrMsg, int Point, int Cash )
{
	static UFunction* prfAckMyMoney = 0;
	UBTPageServerSelectionCN_execrfAckMyMoney_Parms parms;

	if ( !prfAckMyMoney )
		prfAckMyMoney = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckMyMoney" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.Point = Point;
	parms.Cash = Cash;
	this->ProcessEvent ( prfAckMyMoney, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfReqDailyQuestNewAvailable ( class TArray< int > ExpiredQuestID, class TArray< int > NewQuestID )
{
	static UFunction* prfReqDailyQuestNewAvailable = 0;
	UBTPageServerSelectionCN_execrfReqDailyQuestNewAvailable_Parms parms;

	if ( !prfReqDailyQuestNewAvailable )
		prfReqDailyQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfReqDailyQuestNewAvailable" );

	parms.ExpiredQuestID = ExpiredQuestID;
	parms.NewQuestID = NewQuestID;
	this->ProcessEvent ( prfReqDailyQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfReqQuestNewAvailable ( class TArray< int > AchivedQuestID, class TArray< int > NewQuestID, class TArray< unsigned char > IsDailyQuest, class TArray< int > ExpiredQuest )
{
	static UFunction* prfReqQuestNewAvailable = 0;
	UBTPageServerSelectionCN_execrfReqQuestNewAvailable_Parms parms;

	if ( !prfReqQuestNewAvailable )
		prfReqQuestNewAvailable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfReqQuestNewAvailable" );

	parms.AchivedQuestID = AchivedQuestID;
	parms.NewQuestID = NewQuestID;
	parms.IsDailyQuest = IsDailyQuest;
	parms.ExpiredQuest = ExpiredQuest;
	this->ProcessEvent ( prfReqQuestNewAvailable, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckQuestUpdate ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestUpdate = 0;
	UBTPageServerSelectionCN_execrfAckQuestUpdate_Parms parms;

	if ( !prfAckQuestUpdate )
		prfAckQuestUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckQuestUpdate" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestUpdate, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckQuestListEnd (  )
{
	static UFunction* prfAckQuestListEnd = 0;
	UBTPageServerSelectionCN_execrfAckQuestListEnd_Parms parms;

	if ( !prfAckQuestListEnd )
		prfAckQuestListEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckQuestListEnd" );

	this->ProcessEvent ( prfAckQuestListEnd, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckQuestList ( class TArray< int > QuestID, class TArray< int > CountPrograss, class TArray< unsigned char > IsDailyQuest )
{
	static UFunction* prfAckQuestList = 0;
	UBTPageServerSelectionCN_execrfAckQuestList_Parms parms;

	if ( !prfAckQuestList )
		prfAckQuestList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckQuestList" );

	parms.QuestID = QuestID;
	parms.CountPrograss = CountPrograss;
	parms.IsDailyQuest = IsDailyQuest;
	this->ProcessEvent ( prfAckQuestList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckQuestListStart ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckQuestListStart = 0;
	UBTPageServerSelectionCN_execrfAckQuestListStart_Parms parms;

	if ( !prfAckQuestListStart )
		prfAckQuestListStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckQuestListStart" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckQuestListStart, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckLimitedListInChannel ( int Result, class TArray< int > LimitedMapID, class TArray< int > LimitedModeID )
{
	static UFunction* prfAckLimitedListInChannel = 0;
	UBTPageServerSelectionCN_execrfAckLimitedListInChannel_Parms parms;

	if ( !prfAckLimitedListInChannel )
		prfAckLimitedListInChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckLimitedListInChannel" );

	parms.Result = Result;
	parms.LimitedMapID = LimitedMapID;
	parms.LimitedModeID = LimitedModeID;
	this->ProcessEvent ( prfAckLimitedListInChannel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfReqClanMatch_InviteCrewResult ( struct FString Invitee, int Result )
{
	static UFunction* prfReqClanMatch_InviteCrewResult = 0;
	UBTPageServerSelectionCN_execrfReqClanMatch_InviteCrewResult_Parms parms;

	if ( !prfReqClanMatch_InviteCrewResult )
		prfReqClanMatch_InviteCrewResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfReqClanMatch_InviteCrewResult" );

	parms.Invitee = Invitee;
	parms.Result = Result;
	this->ProcessEvent ( prfReqClanMatch_InviteCrewResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::BTWindowInviteClanWarGameHK_OnCancel ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowInviteClanWarGameHK_OnCancel = 0;
	UBTPageServerSelectionCN_execBTWindowInviteClanWarGameHK_OnCancel_Parms parms;

	if ( !pBTWindowInviteClanWarGameHK_OnCancel )
		pBTWindowInviteClanWarGameHK_OnCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.BTWindowInviteClanWarGameHK_OnCancel" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowInviteClanWarGameHK_OnCancel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::BTWindowInviteClanWarGameHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowInviteClanWarGameHK_OnOK = 0;
	UBTPageServerSelectionCN_execBTWindowInviteClanWarGameHK_OnOK_Parms parms;

	if ( !pBTWindowInviteClanWarGameHK_OnOK )
		pBTWindowInviteClanWarGameHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.BTWindowInviteClanWarGameHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowInviteClanWarGameHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfReqClanMatch_RecvInviteCrew ( struct FString Inviter, struct FString ServerIP, int Port, int WaittingID, struct FString Msg, int MapNum, int InviteUserChannelNum, struct FString LeaderName, struct FString RoomName )
{
	static UFunction* prfReqClanMatch_RecvInviteCrew = 0;
	UBTPageServerSelectionCN_execrfReqClanMatch_RecvInviteCrew_Parms parms;

	if ( !prfReqClanMatch_RecvInviteCrew )
		prfReqClanMatch_RecvInviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfReqClanMatch_RecvInviteCrew" );

	parms.Inviter = Inviter;
	parms.ServerIP = ServerIP;
	parms.Port = Port;
	parms.WaittingID = WaittingID;
	parms.Msg = Msg;
	parms.MapNum = MapNum;
	parms.InviteUserChannelNum = InviteUserChannelNum;
	parms.LeaderName = LeaderName;
	parms.RoomName = RoomName;
	this->ProcessEvent ( prfReqClanMatch_RecvInviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckClanMatch_InviteCrew ( int Result, struct FString ErrMsg )
{
	static UFunction* prfAckClanMatch_InviteCrew = 0;
	UBTPageServerSelectionCN_execrfAckClanMatch_InviteCrew_Parms parms;

	if ( !prfAckClanMatch_InviteCrew )
		prfAckClanMatch_InviteCrew = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckClanMatch_InviteCrew" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	this->ProcessEvent ( prfAckClanMatch_InviteCrew, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfReqAnswerInviteGameRoom ( unsigned char Answer, struct FString GuestCharName )
{
	static UFunction* prfReqAnswerInviteGameRoom = 0;
	UBTPageServerSelectionCN_execrfReqAnswerInviteGameRoom_Parms parms;

	if ( !prfReqAnswerInviteGameRoom )
		prfReqAnswerInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfReqAnswerInviteGameRoom" );

	parms.Answer = Answer;
	parms.GuestCharName = GuestCharName;
	this->ProcessEvent ( prfReqAnswerInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckRecvInviteGameRoomResult ( int Result )
{
	static UFunction* prfAckRecvInviteGameRoomResult = 0;
	UBTPageServerSelectionCN_execrfAckRecvInviteGameRoomResult_Parms parms;

	if ( !prfAckRecvInviteGameRoomResult )
		prfAckRecvInviteGameRoomResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckRecvInviteGameRoomResult" );

	parms.Result = Result;
	this->ProcessEvent ( prfAckRecvInviteGameRoomResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfReqRecvInviteGameRoom ( struct FString InviteUserServerName, int InviteUserServerID, int InviteUserChannelNumber, struct FString RoomUniqueID, int RoomNumber, struct FString RoomName, unsigned char RoomState, struct FString MapName, struct FString OwnerName, unsigned char GameMode, unsigned char WeaponLimit, unsigned char IsTeamBalance, struct FString Password, struct FString InviteCharName )
{
	static UFunction* prfReqRecvInviteGameRoom = 0;
	UBTPageServerSelectionCN_execrfReqRecvInviteGameRoom_Parms parms;

	if ( !prfReqRecvInviteGameRoom )
		prfReqRecvInviteGameRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfReqRecvInviteGameRoom" );

	parms.InviteUserServerName = InviteUserServerName;
	parms.InviteUserServerID = InviteUserServerID;
	parms.InviteUserChannelNumber = InviteUserChannelNumber;
	parms.RoomUniqueID = RoomUniqueID;
	parms.RoomNumber = RoomNumber;
	parms.RoomName = RoomName;
	parms.RoomState = RoomState;
	parms.MapName = MapName;
	parms.OwnerName = OwnerName;
	parms.GameMode = GameMode;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Password = Password;
	parms.InviteCharName = InviteCharName;
	this->ProcessEvent ( prfReqRecvInviteGameRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckGetServerTime ( struct FBtrDouble ServerTime, struct FString ClientIP )
{
	static UFunction* prfAckGetServerTime = 0;
	UBTPageServerSelectionCN_execrfAckGetServerTime_Parms parms;

	if ( !prfAckGetServerTime )
		prfAckGetServerTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckGetServerTime" );

	parms.ServerTime = ServerTime;
	parms.ClientIP = ClientIP;
	this->ProcessEvent ( prfAckGetServerTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::rfAckTencent_AASInfo ( int UserID, unsigned char IsAdult, unsigned char IsQQAuth, int AccumTimeSec )
{
	static UFunction* prfAckTencent_AASInfo = 0;
	UBTPageServerSelectionCN_execrfAckTencent_AASInfo_Parms parms;

	if ( !prfAckTencent_AASInfo )
		prfAckTencent_AASInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.rfAckTencent_AASInfo" );

	parms.UserID = UserID;
	parms.IsAdult = IsAdult;
	parms.IsQQAuth = IsQQAuth;
	parms.AccumTimeSec = AccumTimeSec;
	this->ProcessEvent ( prfAckTencent_AASInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelectionCN::TcpLogin_OnConnect ( int ErrCode )
{
	static UFunction* pTcpLogin_OnConnect = 0;
	UBTPageServerSelectionCN_execTcpLogin_OnConnect_Parms parms;

	if ( !pTcpLogin_OnConnect )
		pTcpLogin_OnConnect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.TcpLogin_OnConnect" );

	parms.ErrCode = ErrCode;
	this->ProcessEvent ( pTcpLogin_OnConnect, &parms, NULL );

}*/

/*void UBTPageServerSelectionCN::MoveToChannel ( class UBTACLServerSelectionHK* serverACL )
{
	static UFunction* pMoveToChannel = 0;
	UBTPageServerSelectionCN_execMoveToChannel_Parms parms;

	if ( !pMoveToChannel )
		pMoveToChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.MoveToChannel" );

	parms.serverACL = serverACL;
	this->ProcessEvent ( pMoveToChannel, &parms, NULL );

}*/

/*void UBTPageServerSelectionCN::NewMoveToChannelByClick ( class UBTACLServerSelectionHK* serverACL )
{
	static UFunction* pNewMoveToChannelByClick = 0;
	UBTPageServerSelectionCN_execNewMoveToChannelByClick_Parms parms;

	if ( !pNewMoveToChannelByClick )
		pNewMoveToChannelByClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.NewMoveToChannelByClick" );

	parms.serverACL = serverACL;
	this->ProcessEvent ( pNewMoveToChannelByClick, &parms, NULL );

}*/

/*void UBTPageServerSelectionCN::NewMoveToChannel ( class UBTACLServerSelectionHK* serverACL )
{
	static UFunction* pNewMoveToChannel = 0;
	UBTPageServerSelectionCN_execNewMoveToChannel_Parms parms;

	if ( !pNewMoveToChannel )
		pNewMoveToChannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.NewMoveToChannel" );

	parms.serverACL = serverACL;
	this->ProcessEvent ( pNewMoveToChannel, &parms, NULL );

}*/

/*bool UBTPageServerSelectionCN::NoClanEnter_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pNoClanEnter_OnOK = 0;
	UBTPageServerSelectionCN_execNoClanEnter_OnOK_Parms parms;

	if ( !pNoClanEnter_OnOK )
		pNoClanEnter_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.NoClanEnter_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pNoClanEnter_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelectionCN::AutoMoveTochannel ( int ServerID, int ChannelID )
{
	static UFunction* pAutoMoveTochannel = 0;
	UBTPageServerSelectionCN_execAutoMoveTochannel_Parms parms;

	if ( !pAutoMoveTochannel )
		pAutoMoveTochannel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.AutoMoveTochannel" );

	parms.ServerID = ServerID;
	parms.ChannelID = ChannelID;
	this->ProcessEvent ( pAutoMoveTochannel, &parms, NULL );

}*/

/*void UBTPageServerSelectionCN::OnCompleteOpened (  )
{
	static UFunction* pOnCompleteOpened = 0;
	UBTPageServerSelectionCN_execOnCompleteOpened_Parms parms;

	if ( !pOnCompleteOpened )
		pOnCompleteOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.OnCompleteOpened" );

	this->ProcessEvent ( pOnCompleteOpened, &parms, NULL );

}*/

/*bool UBTPageServerSelectionCN::ButtonEnterCh_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonEnterCh_OnClick = 0;
	UBTPageServerSelectionCN_execButtonEnterCh_OnClick_Parms parms;

	if ( !pButtonEnterCh_OnClick )
		pButtonEnterCh_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.ButtonEnterCh_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonEnterCh_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageServerSelectionCN::BTWIndowTodayResultHK_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWIndowTodayResultHK_OnOK = 0;
	UBTPageServerSelectionCN_execBTWIndowTodayResultHK_OnOK_Parms parms;

	if ( !pBTWIndowTodayResultHK_OnOK )
		pBTWIndowTodayResultHK_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.BTWIndowTodayResultHK_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWIndowTodayResultHK_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageServerSelectionCN::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageServerSelectionCN_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UBTPageServerSelectionCN::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageServerSelectionCN_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageServerSelectionCN.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobbyCN::OnCompleteOpened (  )
{
	static UFunction* pOnCompleteOpened = 0;
	UBTPageLobbyCN_execOnCompleteOpened_Parms parms;

	if ( !pOnCompleteOpened )
		pOnCompleteOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.OnCompleteOpened" );

	this->ProcessEvent ( pOnCompleteOpened, &parms, NULL );

}*/

/*bool UBTPageLobbyCN::Internal_OnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternal_OnPreDraw = 0;
	UBTPageLobbyCN_execInternal_OnPreDraw_Parms parms;

	if ( !pInternal_OnPreDraw )
		pInternal_OnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.Internal_OnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternal_OnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::rfReqExteriorRoomInfo ( int SP, int RoomNumber, unsigned char IsPW, struct FString RoomName, struct FString MapName, struct FString ModeName, int MapNum, int ModeNum, unsigned char IsTeamBalance, int MaxUserCount, int RoomUserCount, unsigned char RoomState, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum )
{
	static UFunction* prfReqExteriorRoomInfo = 0;
	UBTPageLobbyCN_execrfReqExteriorRoomInfo_Parms parms;

	if ( !prfReqExteriorRoomInfo )
		prfReqExteriorRoomInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.rfReqExteriorRoomInfo" );

	parms.SP = SP;
	parms.RoomNumber = RoomNumber;
	parms.IsPW = IsPW;
	parms.RoomName = RoomName;
	parms.MapName = MapName;
	parms.ModeName = ModeName;
	parms.MapNum = MapNum;
	parms.ModeNum = ModeNum;
	parms.IsTeamBalance = IsTeamBalance;
	parms.MaxUserCount = MaxUserCount;
	parms.RoomUserCount = RoomUserCount;
	parms.RoomState = RoomState;
	parms.BotDifficult = BotDifficult;
	parms.WeaponLimit = WeaponLimit;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfReqExteriorRoomInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::rfAckCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb )
{
	static UFunction* prfAckCharDetailInfo = 0;
	UBTPageLobbyCN_execrfAckCharDetailInfo_Parms parms;

	if ( !prfAckCharDetailInfo )
		prfAckCharDetailInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.rfAckCharDetailInfo" );

	parms.MaxSerial = MaxSerial;
	parms.MaxScore = MaxScore;
	parms.MaxKill = MaxKill;
	parms.MaxAssist = MaxAssist;
	parms.Serial3 = Serial3;
	parms.Serial5 = Serial5;
	parms.Serial7 = Serial7;
	parms.Serial10 = Serial10;
	parms.Serial15 = Serial15;
	parms.AR = AR;
	parms.SMG = SMG;
	parms.SR = SR;
	parms.SW = SW;
	parms.Melee = Melee;
	parms.Grenade = Grenade;
	parms.FlashBang = FlashBang;
	parms.Foot = Foot;
	parms.AT4 = AT4;
	parms.MG = MG;
	parms.Fire = Fire;
	parms.RPG7 = RPG7;
	parms.TimeBomb = TimeBomb;
	parms.IcendiaryBomb = IcendiaryBomb;
	parms.ClusterBomb = ClusterBomb;
	parms.ByChopper = ByChopper;
	parms.Artillery = Artillery;
	parms.KillChopper = KillChopper;
	parms.FirstKill = FirstKill;
	parms.LastKill = LastKill;
	parms.AllKill = AllKill;
	parms.Dominate = Dominate;
	parms.InstallBomb = InstallBomb;
	parms.DefuseBomb = DefuseBomb;
	this->ProcessEvent ( prfAckCharDetailInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::rfAckDBCharInfo ( int Result, struct FString ErrMsg, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel )
{
	static UFunction* prfAckDBCharInfo = 0;
	UBTPageLobbyCN_execrfAckDBCharInfo_Parms parms;

	if ( !prfAckDBCharInfo )
		prfAckDBCharInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.rfAckDBCharInfo" );

	parms.Result = Result;
	parms.ErrMsg = ErrMsg;
	parms.CharName = CharName;
	parms.ClanName = ClanName;
	parms.CM_Pattern = CM_Pattern;
	parms.CM_BG = CM_BG;
	parms.CM_BL = CM_BL;
	parms.ClanPersonIntro = ClanPersonIntro;
	parms.MainWeaponItemID = MainWeaponItemID;
	parms.MainWeaponPartID = MainWeaponPartID;
	parms.SubWeaponItemID = SubWeaponItemID;
	parms.SubWeaponPartID = SubWeaponPartID;
	parms.AFSpecialCostumeItemID = AFSpecialCostumeItemID;
	parms.RSASpecialCostumeItemID = RSASpecialCostumeItemID;
	parms.stCharInfo = stCharInfo;
	parms.ClanLevel = ClanLevel;
	this->ProcessEvent ( prfAckDBCharInfo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::BTWindowDefineSelectHK_24_OnOK ( class UGUIComponent* Sender )
{
	static UFunction* pBTWindowDefineSelectHK_24_OnOK = 0;
	UBTPageLobbyCN_execBTWindowDefineSelectHK_24_OnOK_Parms parms;

	if ( !pBTWindowDefineSelectHK_24_OnOK )
		pBTWindowDefineSelectHK_24_OnOK = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.BTWindowDefineSelectHK_24_OnOK" );

	parms.Sender = Sender;
	this->ProcessEvent ( pBTWindowDefineSelectHK_24_OnOK, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::StartTutorial_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pStartTutorial_OnClick = 0;
	UBTPageLobbyCN_execStartTutorial_OnClick_Parms parms;

	if ( !pStartTutorial_OnClick )
		pStartTutorial_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.StartTutorial_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pStartTutorial_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::MyInfo_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pMyInfo_OnClick = 0;
	UBTPageLobbyCN_execMyInfo_OnClick_Parms parms;

	if ( !pMyInfo_OnClick )
		pMyInfo_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.MyInfo_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pMyInfo_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::rfAckRoomList ( class TArray< int > GameNum, class TArray< struct FString > Title, class TArray< struct FString > MapName, class TArray< int > MapNum, class TArray< unsigned char > UserCount, class TArray< unsigned char > MaxCount, class TArray< struct FString > ModeName, class TArray< int > ModeNum, class TArray< unsigned char > WeaponLimit, class TArray< unsigned char > IsTeamBalance, class TArray< unsigned char > Status, class TArray< struct FString > RoomOwnerIP, class TArray< int > GameMinute, class TArray< struct FString > RoomOwnerName, class TArray< unsigned char > IsSpecial, class TArray< unsigned char > IsPassword, class TArray< unsigned char > BotDifficult, class TArray< unsigned char > BotModeUserTeamNum )
{
	static UFunction* prfAckRoomList = 0;
	UBTPageLobbyCN_execrfAckRoomList_Parms parms;

	if ( !prfAckRoomList )
		prfAckRoomList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.rfAckRoomList" );

	parms.GameNum = GameNum;
	parms.Title = Title;
	parms.MapName = MapName;
	parms.MapNum = MapNum;
	parms.UserCount = UserCount;
	parms.MaxCount = MaxCount;
	parms.ModeName = ModeName;
	parms.ModeNum = ModeNum;
	parms.WeaponLimit = WeaponLimit;
	parms.IsTeamBalance = IsTeamBalance;
	parms.Status = Status;
	parms.RoomOwnerIP = RoomOwnerIP;
	parms.GameMinute = GameMinute;
	parms.RoomOwnerName = RoomOwnerName;
	parms.IsSpecial = IsSpecial;
	parms.IsPassword = IsPassword;
	parms.BotDifficult = BotDifficult;
	parms.BotModeUserTeamNum = BotModeUserTeamNum;
	this->ProcessEvent ( prfAckRoomList, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::MoveToRoom ( int Index )
{
	static UFunction* pMoveToRoom = 0;
	UBTPageLobbyCN_execMoveToRoom_Parms parms;

	if ( !pMoveToRoom )
		pMoveToRoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.MoveToRoom" );

	parms.Index = Index;
	this->ProcessEvent ( pMoveToRoom, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UBTWindowQuickEnterRoomHK* UBTPageLobbyCN::GetWindowQuickEnter (  )
{
	static UFunction* pGetWindowQuickEnter = 0;
	UBTPageLobbyCN_execGetWindowQuickEnter_Parms parms;

	if ( !pGetWindowQuickEnter )
		pGetWindowQuickEnter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.GetWindowQuickEnter" );

	this->ProcessEvent ( pGetWindowQuickEnter, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::OnBottomButton_Click ( class UGUIComponent* Sender )
{
	static UFunction* pOnBottomButton_Click = 0;
	UBTPageLobbyCN_execOnBottomButton_Click_Parms parms;

	if ( !pOnBottomButton_Click )
		pOnBottomButton_Click = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.OnBottomButton_Click" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnBottomButton_Click, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::HeaderButton_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pHeaderButton_OnClick = 0;
	UBTPageLobbyCN_execHeaderButton_OnClick_Parms parms;

	if ( !pHeaderButton_OnClick )
		pHeaderButton_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.HeaderButton_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHeaderButton_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UBTPageLobbyCN::AD_OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pAD_OnClick = 0;
	UBTPageLobbyCN_execAD_OnClick_Parms parms;

	if ( !pAD_OnClick )
		pAD_OnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.AD_OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pAD_OnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UBTPageLobbyCN::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UBTPageLobbyCN_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"GUIWarfare.BTPageLobbyCN.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

