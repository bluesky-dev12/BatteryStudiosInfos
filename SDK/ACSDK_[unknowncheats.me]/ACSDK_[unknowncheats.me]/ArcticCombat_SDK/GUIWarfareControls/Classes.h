#pragma once
/*
# ======================================================================================== #
# > ArcticCombat SDK
# > Generated By HJSdkGen v1.06b
# ---------------------------------------------------------------------------------------- #
# > Package : GUIWarfareControls
# >    File : Classes.h
# ======================================================================================== #
*/

#ifdef _MSC_VER
#pragma pack ( push, 4 )
#endif


/*
# ======================================================================================== #
# > Constants
# ======================================================================================== #
*/

#define CONST_CSelect                                            5
#define CONST_CDisable                                           4
#define CONST_CClick                                             3
#define CONST_CFocused                                           2
#define CONST_CMouseOn                                           1
#define CONST_CNormal                                            0
#define CONST_BtnCount                                           8
#define CONST_C_DefaultfontSize                                  10
#define CONST_C_MaxRowCount                                      100
#define CONST_PAINTING_BTN_COUNT                                 5
#define CONST_BTN_COUNT_SUB                                      5
#define CONST_BTN_COUNT_MAIN                                     5
#define CONST_ColumnCount                                        4
#define CONST_WindowBtnHeight                                    33
#define CONST_LineOffsetY                                        13
#define CONST_LineOffsetX                                        10
#define CONST_GroupOffsetY                                       38
#define CONST_LabelHeight                                        32
#define CONST_LabelWidth                                         80
#define CONST_ButtonHeight                                       32
#define CONST_ButtonWidth                                        128
#define CONST_IcnSize                                            32

/*
# ======================================================================================== #
# > Enums
# ======================================================================================== #
*/

// Enum GUIWarfareControls.BTAutoColumnListHeaderHK.AutoColumnType
enum AutoColumnType
{
	E_ACT_STRING                                       = 0,
	E_ACT_INT                                          = 1,
	E_ACT_FLOAT                                        = 2,
	E_ACT_INT_TO_STRING                                = 3,
	E_ACT_FLOAT_TO_STRING                              = 4,
	E_ACT_INT_TO_IMAGE                                 = 5,
	E_ACT_FLOAT_TO_IMAGE                               = 6,
	E_ACT_CUSTOM                                       = 7
};

// Enum GUIWarfareControls.BTContextMenuHK.ContextMenuState
enum ContextMenuState
{
	E_CM_NORMAL                                        = 0,
	E_CM_DISABLE                                       = 1
};

// Enum GUIWarfareControls.BTTPMessengerHK.E_TAB_MENU_TYPE
enum E_TAB_MENU_TYPE
{
	TAB_MENU_CONNECTED                                 = 0,
	TAB_MENU_FRIEND                                    = 1,
	TAB_MENU_CLAN                                      = 2,
	TAB_MENU_PCBANG                                    = 3,
	TAB_MENU_MAX_COUNT                                 = 4
};

// Enum GUIWarfareControls.BTROItemBoxHK.EInvenState
enum EInvenState
{
	E_IB_INVEN                                         = 0,
	E_IB_INVEN_BIG                                     = 1,
	E_IB_REPAIR                                        = 2,
	E_IB_WAREHOUSE                                     = 3,
	E_IB_WAREHOUSE_CASH                                = 4,
	E_IB_WAREHOUSE_SKILL                               = 5,
	E_IB_SHOP                                          = 6,
	E_IB_SHOP_BIG                                      = 7,
	E_IB_AUCTION                                       = 8,
	E_IB_AUCTION_BIG                                   = 9,
	E_IB_MAIL                                          = 10,
	E_IB_POINTBOX                                      = 11,
	E_IB_ITEMBOX                                       = 12,
	E_IB_PROMOTION                                     = 13,
	E_IB_DURABILITY_WARNING                            = 14,
	E_IB_EXPIRED_WARNING                               = 15,
	E_IB_SHOP_CASH                                     = 16,
	E_IB_SHOP_BIG_CASH                                 = 17,
	E_IB_SHOP_BUY_TERM                                 = 18,
	E_IB_EQUIP_ITEM                                    = 19,
	E_IB_REMODEL_SHOP                                  = 20,
	E_IB_REMODEL_INVEN                                 = 21
};

// Enum GUIWarfareControls.BTCheckBoxHK.CheckBoxStyle
enum CheckBoxStyle
{
	E_CB_Left                                          = 0,
	E_CB_Right                                         = 1
};

// Enum GUIWarfareControls.BTItemListMenuBtn.MenuType
enum MenuType
{
	MT_REPAIR                                          = 0,
	MT_MODIFY                                          = 1,
	MT_SELL                                            = 2,
	MT_GIFT                                            = 3,
	MT_PURCHASE                                        = 4,
	MT_COAST                                           = 5,
	MT_EXTEND                                          = 6,
	MT_PCOIN                                           = 7,
	MT_CCOIN                                           = 8,
	MT_POINT                                           = 9,
	MT_NONE                                            = 10
};

// Enum GUIWarfareControls.BTIconButtonHK.IconHorzOrder
enum IconHorzOrder
{
	E_ICON_LEFT                                        = 0,
	E_ICON_RIGHT                                       = 1
};


/*
# ======================================================================================== #
# > Classes
# ======================================================================================== #
*/

// Class GUIWarfareControls.BTWindowHK
class DLL_IMPORT UBTWindowHK : public UFloatingWindow
{
public:
	float                                              TimeOut;                                          		// 0x03F4 ( 0x0004 ) 
	unsigned long                                      bSetTimeOut:1;                                    		// 0x03F8 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawImageHK*                         BackgroundImage;                                  		// 0x03FC ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         TopLine;                                          		// 0x0400 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         BottomLine;                                       		// 0x0404 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         BottomLine2;                                      		// 0x0408 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonOK;                                         		// 0x040C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonCancel;                                     		// 0x0410 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbBackgroundImage;                                		// 0x0414 ( 0x0010 ) 
	struct FFloatBox                                   fbTopLine;                                        		// 0x0424 ( 0x0010 ) 
	struct FFloatBox                                   fbBottomLine;                                     		// 0x0434 ( 0x0010 ) 
	struct FFloatBox                                   fbButtonOK;                                       		// 0x0444 ( 0x0010 ) 
	struct FFloatBox                                   fbButtonCancel;                                   		// 0x0454 ( 0x0010 ) 
	struct FString                                     strTitle;                                         		// 0x0464 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOK;                                            		// 0x0470 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCancel;                                        		// 0x047C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned long                                      bHandleEsc:1;                                     		// 0x0488 ( 0x0004 )  [0x00000001]
	struct FScriptDelegate                             __OnOK__Delegate;                                 		// 0x048C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnCancel__Delegate;                             		// 0x0494 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnTimeTick__Delegate;                           		// 0x049C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnTimeOut__Delegate;                            		// 0x04A4 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      CloseWindowAllByName ( class UGUIController* Controller, class UClass* WindowName );		//  GUIWarfareControls.BTWindowHK.CloseWindowAllByName
	 bool                      TimeOutPreDraw ( class UCanvas* C );              		//  GUIWarfareControls.BTWindowHK.TimeOutPreDraw
	 void                      StopTimeOut ( float SetTime );                    		//  GUIWarfareControls.BTWindowHK.StopTimeOut
	 void                      StartTimeOut ( float SetTime );                   		//  GUIWarfareControls.BTWindowHK.StartTimeOut
	 void                      DefaultCloseWindow_OnTimeOut ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowHK.DefaultCloseWindow_OnTimeOut
	 void                      OnTimeOut ( class UGUIComponent* Sender );        		//  GUIWarfareControls.BTWindowHK.OnTimeOut
	 void                      OnTimeTick ( float leftime );                     		//  GUIWarfareControls.BTWindowHK.OnTimeTick
	 bool                      InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State );		//  GUIWarfareControls.BTWindowHK.InternalOnKeyEvent
	 class UBTOwnerDrawCaptionButtonHK* NewButtonComponent ( struct FFloatBox fbNewCompo, float RenderWeight );		//  GUIWarfareControls.BTWindowHK.NewButtonComponent
	 class UBTOwnerDrawImageHK* NewLabelComponent ( struct FFloatBox fbNewCompo, struct FImage bgImg, float RenderWeight );		//  GUIWarfareControls.BTWindowHK.NewLabelComponent
	 bool                      ButtonCancel_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowHK.ButtonCancel_OnClick
	 bool                      ButtonOK_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowHK.ButtonOK_OnClick
	 void                      Closed ( class UGUIComponent* Sender, bool bCancelled );		//  GUIWarfareControls.BTWindowHK.Closed
	 void                      eventOpened ( class UGUIComponent* Sender );      		// [ FUNC_Event ] GUIWarfareControls.BTWindowHK.Opened
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowHK.InitComponent
	 void                      SetTitleCaption ( struct FString S );             		//  GUIWarfareControls.BTWindowHK.SetTitleCaption
	 void                      SetContentOffset ( int nOffsetX, int nOffsetY );  		//  GUIWarfareControls.BTWindowHK.SetContentOffset
	 void                      UpdateDefaultWindow (  );                         		//  GUIWarfareControls.BTWindowHK.UpdateDefaultWindow
	 bool                      DefaultCloseWindow_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowHK.DefaultCloseWindow_OnOK
	 bool                      OnCancel ( class UGUIComponent* Sender );         		//  GUIWarfareControls.BTWindowHK.OnCancel
	 bool                      OnOK ( class UGUIComponent* Sender );             		//  GUIWarfareControls.BTWindowHK.OnOK
}; // Size: 0x00B8

// Class GUIWarfareControls.BTWindowAutoResizeHK
class DLL_IMPORT UBTWindowAutoResizeHK : public UBTWindowHK
{
public:
	struct FBtrDouble                                  ExtraData_btrdouble;                              		// 0x04AC ( 0x0008 ) 
	struct FString                                     ExtraData_string;                                 		// 0x04B4 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                ExtraData_int;                                    		// 0x04C0 ( 0x0004 ) 
	int                                                ExtraData_int2;                                   		// 0x04C4 ( 0x0004 ) 
	int                                                ExtraData_int3;                                   		// 0x04C8 ( 0x0004 ) 
	unsigned long                                      bStableText:1;                                    		// 0x04CC ( 0x0004 )  [0x00000001]
	struct FString                                     Caption;                                          		// 0x04D0 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     Warning;                                          		// 0x04DC ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                FontSize;                                         		// 0x04E8 ( 0x0004 ) 
	int                                                LabelSpace;                                       		// 0x04EC ( 0x0004 ) 
	int                                                LabelSpaceWarning;                                		// 0x04F0 ( 0x0004 ) 
	int                                                LabelSpaceDivider;                                		// 0x04F4 ( 0x0004 ) 
	int                                                LabelSpaceEdit;                                   		// 0x04F8 ( 0x0004 ) 
	int                                                LabelSpaceMultiLineEditMsg;                       		// 0x04FC ( 0x0004 ) 
	int                                                VisibleLabelCount;                                		// 0x0500 ( 0x0004 ) 
	struct FFloatBox                                   fbLabelInfo;                                      		// 0x0504 ( 0x0010 ) 
	struct FFloatBox                                   fbLabelWarning;                                   		// 0x0514 ( 0x0010 ) 
	struct FFloatBox                                   fbLabelDivider;                                   		// 0x0524 ( 0x0010 ) 
	struct FFloatBox                                   fbEditName;                                       		// 0x0534 ( 0x0010 ) 
	struct FFloatBox                                   fbMultiLineEditMsg;                               		// 0x0544 ( 0x0010 ) 
	struct FFloatBox                                   fbMultiLineEditMsg2;                              		// 0x0554 ( 0x0010 ) 
	struct FFloatBox                                   fbButtonOK2;                                      		// 0x0564 ( 0x0010 ) 
	struct FFloatBox                                   fbButtonCancel2;                                  		// 0x0574 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelInfo[ 0x0A ];                                		// 0x0584 ( 0x0028 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                EditName;                                         		// 0x05AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       MultiLineEditMsg;                                 		// 0x05B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       MultiLineEditMsg2;                                		// 0x05B4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelWarning;                                     		// 0x05B8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelDivider;                                     		// 0x05BC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      ResizeWidth ( int W );                            		//  GUIWarfareControls.BTWindowAutoResizeHK.ResizeWidth
	 bool                      ShowWindow ( class UGUIController* con, struct FString Title, struct FString Msg, struct FString Warn, struct FString btnOk, struct FString btnCancel );		//  GUIWarfareControls.BTWindowAutoResizeHK.ShowWindow
	 void                      RemoveSizeY ( int halfsize, int halfy );          		//  GUIWarfareControls.BTWindowAutoResizeHK.RemoveSizeY
	 void                      InsertSizeY ( int halfsize, int halfy );          		//  GUIWarfareControls.BTWindowAutoResizeHK.InsertSizeY
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTWindowAutoResizeHK.Internal_OnPreDraw
	 void                      SetButtonCaption ( struct FString strOK, struct FString strCancel );		//  GUIWarfareControls.BTWindowAutoResizeHK.SetButtonCaption
	 void                      SetData ( struct FString Title, struct FString Caption, struct FString Warning );		//  GUIWarfareControls.BTWindowAutoResizeHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowAutoResizeHK.InitComponent
}; // Size: 0x0114

// Class GUIWarfareControls.BTWindowDefineARHK
class DLL_IMPORT UBTWindowDefineARHK : public UBTWindowAutoResizeHK
{
public:
	struct FString                                     strClientDefaultTitle;                            		// 0x05C0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClientTitle[ 0x50 ];                           		// 0x05CC ( 0x03C0 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClientDefine[ 0x50 ];                          		// 0x098C ( 0x03C0 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      CloseWindowAll ( class UGUIController* Controller );		//  GUIWarfareControls.BTWindowDefineARHK.CloseWindowAll
	 bool                      ShowInfo ( class UGUIController* con, int Code, struct FString arg0, struct FString arg1, struct FString arg2, struct FString arg3 );		//  GUIWarfareControls.BTWindowDefineARHK.ShowInfo
	 bool                      SetContentText ( class UGUIController* con, int Code, struct FString arg0, struct FString arg1, struct FString arg2, struct FString arg3 );		//  GUIWarfareControls.BTWindowDefineARHK.SetContentText
	 bool                      SetContentText_Instance ( int Code, struct FString arg0, struct FString arg1, struct FString arg2, struct FString arg3 );		//  GUIWarfareControls.BTWindowDefineARHK.SetContentText_Instance
}; // Size: 0x078C

// Class GUIWarfareControls.BTWindowInfoHK
class DLL_IMPORT UBTWindowInfoHK : public UBTWindowHK
{
public:
	unsigned long                                      bChangeText:1;                                    		// 0x04AC ( 0x0004 )  [0x00000001]
	struct FFloatBox                                   fbLabelInfo;                                      		// 0x04B0 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelInfo;                                        		// 0x04C0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 bool                      Internal_OnKeyEvent ( float Delta, unsigned char* key, unsigned char* Action );		//  GUIWarfareControls.BTWindowInfoHK.Internal_OnKeyEvent
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTWindowInfoHK.Internal_OnPreDraw
	 bool                      ShowWindow ( class UGUIController* con, struct FString Title, struct FString Msg, struct FString btnOk );		//  GUIWarfareControls.BTWindowInfoHK.ShowWindow
	 void                      SetData ( struct FString Title, int titlepadding, struct FString Msg, struct FString btnOk );		//  GUIWarfareControls.BTWindowInfoHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowInfoHK.InitComponent
}; // Size: 0x0018

// Class GUIWarfareControls.BTWindowDefineInfoHK
class DLL_IMPORT UBTWindowDefineInfoHK : public UBTWindowInfoHK
{
public:
	struct FString                                     strClientDefaultTitle;                            		// 0x04C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClientDefine[ 0x12C ];                         		// 0x04D0 ( 0x0E10 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClientTitle[ 0x12C ];                          		// 0x12E0 ( 0x0E10 ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                DefineCode;                                       		// 0x20F0 ( 0x0004 ) 

	// UScript Functions
	 bool                      ShowInfo ( class UGUIController* con, int Code, struct FString arg0, struct FString arg1, struct FString arg2 );		//  GUIWarfareControls.BTWindowDefineInfoHK.ShowInfo
	 struct FString            GetClientString ( int Code );                     		//  GUIWarfareControls.BTWindowDefineInfoHK.GetClientString
	 struct FString            GetFormatString ( int Code, struct FString arg0, struct FString arg1, struct FString arg2, struct FString arg3, struct FString arg4, struct FString arg5, struct FString arg6, struct FString arg7, struct FString arg8 );		//  GUIWarfareControls.BTWindowDefineInfoHK.GetFormatString
	 void                      SetContentText_Instance ( int Code, struct FString arg0, struct FString arg1, struct FString arg2, struct FString arg3 );		//  GUIWarfareControls.BTWindowDefineInfoHK.SetContentText_Instance
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowDefineInfoHK.InitComponent
}; // Size: 0x1C30

// Class GUIWarfareControls.BTEditBoxHK
class DLL_IMPORT UBTEditBoxHK : public UGUIEditBox
{
public:
	unsigned long                                      bHudMode:1;                                       		// 0x0368 ( 0x0004 )  [0x00000001]
	unsigned long                                      bLimitDrawSize:1;                                 		// 0x0368 ( 0x0004 )  [0x00000002]
	float                                              LimitDrawWidth;                                   		// 0x036C ( 0x0004 ) 
	int                                                LimitDrawTextSize;                                		// 0x0370 ( 0x0004 ) 
	int                                                FontSize[ 0x05 ];                                 		// 0x0374 ( 0x0014 ) 
	class FColor                                       FontColor[ 0x05 ];                                		// 0x0388 ( 0x0014 ) 
	class FColor                                       FontShadowColor[ 0x05 ];                          		// 0x039C ( 0x0014 ) 
	struct FImage                                      bgImg;                                            		// 0x03B0 ( 0x0020 ) 
	int                                                ButtonID;                                         		// 0x03D0 ( 0x0004 ) 
	unsigned long                                      bActiveCursor:1;                                  		// 0x03D4 ( 0x0004 )  [0x00000001]
	class UCanvas*                                     saveC;                                            		// 0x03D8 ( 0x0004 ) 
	class FColor                                       SelectionColor;                                   		// 0x03DC ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       CursorColor;                                      		// 0x03E0 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FImage                                      selectionImg;                                     		// 0x03E4 ( 0x0020 ) 
	struct FImage                                      cursorImg;                                        		// 0x0404 ( 0x0020 ) 
	class TArray< float >                              CacheTextWidth;                                   		// 0x0424 ( 0x000C ) [ CPF_NeedCtorLink ]
	float                                              CacheTextHeight;                                  		// 0x0430 ( 0x0004 ) 
	struct FString                                     textStrVis;                                       		// 0x0434 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     BackupTextStr;                                    		// 0x0440 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                EndVis;                                           		// 0x044C ( 0x0004 ) 
	unsigned long                                      bClickAllSelect:1;                                		// 0x0450 ( 0x0004 )  [0x00000001]
	unsigned long                                      bSelectionMode:1;                                 		// 0x0450 ( 0x0004 )  [0x00000002]
	unsigned long                                      bMouseFirstPress:1;                               		// 0x0450 ( 0x0004 )  [0x00000004]
	unsigned long                                      bMousePressed:1;                                  		// 0x0450 ( 0x0004 )  [0x00000008]
	unsigned long                                      bCursorBlink:1;                                   		// 0x0450 ( 0x0004 )  [0x00000010]
	float                                              BlinkTimer;                                       		// 0x0454 ( 0x0004 ) 
	float                                              OldBlinkTimer;                                    		// 0x0458 ( 0x0004 ) 
	unsigned long                                      useCaps:1;                                        		// 0x045C ( 0x0004 )  [0x00000001]
	struct FSelectionArea                              SelArea;                                          		// 0x0460 ( 0x0008 ) 
	struct FScriptDelegate                             __OnChat__Delegate;                               		// 0x0468 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnInputTab__Delegate;                           		// 0x0470 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnInputSpace__Delegate;                         		// 0x0478 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnFunctionKey__Delegate;                        		// 0x0480 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnMaxTextStrNum__Delegate;                      		// 0x0488 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InternalDeactivate (  );                          		//  GUIWarfareControls.BTEditBoxHK.InternalDeactivate
	 void                      InternalActivate (  );                            		//  GUIWarfareControls.BTEditBoxHK.InternalActivate
	 bool                      InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State );		//  GUIWarfareControls.BTEditBoxHK.InternalOnKeyEvent
	 bool                      InternalOnKeyType ( struct FString Unicode, unsigned char* key );		//  GUIWarfareControls.BTEditBoxHK.InternalOnKeyType
	 bool                      CheckPastedTextCondition ( struct FString Text ); 		//  GUIWarfareControls.BTEditBoxHK.CheckPastedTextCondition
	 bool                      CheckKeyInputCondition ( struct FString st );     		//  GUIWarfareControls.BTEditBoxHK.CheckKeyInputCondition
	 struct FString            ConvertIllegal ( struct FString inputstr );       		//  GUIWarfareControls.BTEditBoxHK.ConvertIllegal
	 int                       CaretBinarySearch ( int lCursor, int rCursor, float mx, int Parent );		//  GUIWarfareControls.BTEditBoxHK.CaretBinarySearch
	 int                       MousePosToCaretPos ( float mx, float my );        		//  GUIWarfareControls.BTEditBoxHK.MousePosToCaretPos
	 void                      OnMousePressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTEditBoxHK.OnMousePressed
	 void                      OnMouseRelease ( class UGUIComponent* Sender );   		//  GUIWarfareControls.BTEditBoxHK.OnMouseRelease
	 void                      Internal_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTEditBoxHK.Internal_OnChange
	 void                      ResetCache (  );                                  		//  GUIWarfareControls.BTEditBoxHK.ResetCache
	 void                      CaculateVisibleText ( bool bHoldFirst, int pos ); 		//  GUIWarfareControls.BTEditBoxHK.CaculateVisibleText
	 void                      SetFontColorAll ( class FColor Col );             		//  GUIWarfareControls.BTEditBoxHK.SetFontColorAll
	 void                      DrawIMEInfo ( class UCanvas* C, float CursorWidth );		//  GUIWarfareControls.BTEditBoxHK.DrawIMEInfo
	 bool                      OwnerDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTEditBoxHK.OwnerDraw
	 void                      Clear (  );                                       		//  GUIWarfareControls.BTEditBoxHK.Clear
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTEditBoxHK.InitComponent
	 void                      SetTextSelect ( struct FString Text, bool bAllSelect );		//  GUIWarfareControls.BTEditBoxHK.SetTextSelect
	 void                      SetText ( struct FString Text );                  		//  GUIWarfareControls.BTEditBoxHK.SetText
	 void                      InputSelectionPos ( int pos );                    		//  GUIWarfareControls.BTEditBoxHK.InputSelectionPos
	 void                      ResetSelectionPos ( int pos );                    		//  GUIWarfareControls.BTEditBoxHK.ResetSelectionPos
	 struct FString            GetSelectionText (  );                            		//  GUIWarfareControls.BTEditBoxHK.GetSelectionText
	 void                      RemoveSelectionText (  );                         		//  GUIWarfareControls.BTEditBoxHK.RemoveSelectionText
	 void                      SetFontSizeAll ( int Size );                      		//  GUIWarfareControls.BTEditBoxHK.SetFontSizeAll
	 void                      SetDefaultFontColor (  );                         		//  GUIWarfareControls.BTEditBoxHK.SetDefaultFontColor
	 void                      OnMaxTextStrNum ( class UGUIComponent* Sender );  		//  GUIWarfareControls.BTEditBoxHK.OnMaxTextStrNum
	 bool                      OnFunctionKey ( class UGUIComponent* Sender, unsigned char FunctionKey, struct FString Text );		//  GUIWarfareControls.BTEditBoxHK.OnFunctionKey
	 void                      OnInputSpace ( class UGUIComponent* Sender, struct FString Text );		//  GUIWarfareControls.BTEditBoxHK.OnInputSpace
	 void                      OnInputTab ( class UGUIComponent* Sender, struct FString Text );		//  GUIWarfareControls.BTEditBoxHK.OnInputTab
	 bool                      OnChat ( class UGUIComponent* Sender, struct FString Text );		//  GUIWarfareControls.BTEditBoxHK.OnChat
}; // Size: 0x0128

// Class GUIWarfareControls.BTUIColorPoolHK
class DLL_IMPORT UBTUIColorPoolHK : public UObject
{
public:

	// UScript Functions
	 class FColor              FriendlyUserNameDisable (  );                     		//  GUIWarfareControls.BTUIColorPoolHK.FriendlyUserNameDisable
	 class FColor              FriendlyUserNameSelected (  );                    		//  GUIWarfareControls.BTUIColorPoolHK.FriendlyUserNameSelected
	 class FColor              FriendlyUserNamePressed (  );                     		//  GUIWarfareControls.BTUIColorPoolHK.FriendlyUserNamePressed
	 class FColor              FriendlyUserNameOn (  );                          		//  GUIWarfareControls.BTUIColorPoolHK.FriendlyUserNameOn
	 class FColor              FriendlyUserNameN (  );                           		//  GUIWarfareControls.BTUIColorPoolHK.FriendlyUserNameN
	 class FColor              NewQuest_Reward (  );                             		//  GUIWarfareControls.BTUIColorPoolHK.NewQuest_Reward
	 class FColor              NewQuest_Content (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.NewQuest_Content
	 class FColor              NewQuest_Title (  );                              		//  GUIWarfareControls.BTUIColorPoolHK.NewQuest_Title
	 class FColor              CompletedQuest_Reward (  );                       		//  GUIWarfareControls.BTUIColorPoolHK.CompletedQuest_Reward
	 class FColor              CompletedQuest_Content (  );                      		//  GUIWarfareControls.BTUIColorPoolHK.CompletedQuest_Content
	 class FColor              CompletedQuest_Title (  );                        		//  GUIWarfareControls.BTUIColorPoolHK.CompletedQuest_Title
	 class FColor              ListItem_Disable (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.ListItem_Disable
	 class FColor              ListItem_Select (  );                             		//  GUIWarfareControls.BTUIColorPoolHK.ListItem_Select
	 class FColor              ListItem_On (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.ListItem_On
	 class FColor              ListItem_Normal (  );                             		//  GUIWarfareControls.BTUIColorPoolHK.ListItem_Normal
	 class FColor              ItemUIStatus_Minus (  );                          		//  GUIWarfareControls.BTUIColorPoolHK.ItemUIStatus_Minus
	 class FColor              ItemUIStatus_Plus (  );                           		//  GUIWarfareControls.BTUIColorPoolHK.ItemUIStatus_Plus
	 class FColor              ItemUIStatus_Normal (  );                         		//  GUIWarfareControls.BTUIColorPoolHK.ItemUIStatus_Normal
	 class FColor              DefaultRed (  );                                  		//  GUIWarfareControls.BTUIColorPoolHK.DefaultRed
	 class FColor              DefaultGray (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.DefaultGray
	 class FColor              DefaultShadow (  );                               		//  GUIWarfareControls.BTUIColorPoolHK.DefaultShadow
	 class FColor              DefaultWhite (  );                                		//  GUIWarfareControls.BTUIColorPoolHK.DefaultWhite
	 class FColor              InverseLabelWarning (  );                         		//  GUIWarfareControls.BTUIColorPoolHK.InverseLabelWarning
	 class FColor              LabelWarning (  );                                		//  GUIWarfareControls.BTUIColorPoolHK.LabelWarning
	 class FColor              Damage4 (  );                                     		//  GUIWarfareControls.BTUIColorPoolHK.Damage4
	 class FColor              Damage3 (  );                                     		//  GUIWarfareControls.BTUIColorPoolHK.Damage3
	 class FColor              Damage2 (  );                                     		//  GUIWarfareControls.BTUIColorPoolHK.Damage2
	 class FColor              Damage1 (  );                                     		//  GUIWarfareControls.BTUIColorPoolHK.Damage1
	 class FColor              Damage0 (  );                                     		//  GUIWarfareControls.BTUIColorPoolHK.Damage0
	 class FColor              SmallPerc (  );                                   		//  GUIWarfareControls.BTUIColorPoolHK.SmallPerc
	 class FColor              Point (  );                                       		//  GUIWarfareControls.BTUIColorPoolHK.Point
	 class FColor              Cash (  );                                        		//  GUIWarfareControls.BTUIColorPoolHK.Cash
	 class FColor              QuestReward (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.QuestReward
	 class FColor              ListTopButtonDisable (  );                        		//  GUIWarfareControls.BTUIColorPoolHK.ListTopButtonDisable
	 class FColor              ListTopButtonPressed (  );                        		//  GUIWarfareControls.BTUIColorPoolHK.ListTopButtonPressed
	 class FColor              ListTopButtonWatched (  );                        		//  GUIWarfareControls.BTUIColorPoolHK.ListTopButtonWatched
	 class FColor              ListTopButtonOn (  );                             		//  GUIWarfareControls.BTUIColorPoolHK.ListTopButtonOn
	 class FColor              ListTopButtonN (  );                              		//  GUIWarfareControls.BTUIColorPoolHK.ListTopButtonN
	 class FColor              SubTabButtonDisable (  );                         		//  GUIWarfareControls.BTUIColorPoolHK.SubTabButtonDisable
	 class FColor              SubTabButtonPressed (  );                         		//  GUIWarfareControls.BTUIColorPoolHK.SubTabButtonPressed
	 class FColor              SubTabButtonWatched (  );                         		//  GUIWarfareControls.BTUIColorPoolHK.SubTabButtonWatched
	 class FColor              SubTabButtonOn (  );                              		//  GUIWarfareControls.BTUIColorPoolHK.SubTabButtonOn
	 class FColor              SubTabButtonN (  );                               		//  GUIWarfareControls.BTUIColorPoolHK.SubTabButtonN
	 class FColor              TabButtonDisable_PaidItem (  );                   		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonDisable_PaidItem
	 class FColor              TabButtonPressed_PaidItem (  );                   		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonPressed_PaidItem
	 class FColor              TabButtonWatched_PaidItem (  );                   		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonWatched_PaidItem
	 class FColor              TabButtonOn_PaidItem (  );                        		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonOn_PaidItem
	 class FColor              TabButtonN_PaidItem (  );                         		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonN_PaidItem
	 class FColor              TabButtonDisable (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonDisable
	 class FColor              TabButtonPressed (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonPressed
	 class FColor              TabButtonWatched (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonWatched
	 class FColor              TabButtonOn (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonOn
	 class FColor              TabButtonN (  );                                  		//  GUIWarfareControls.BTUIColorPoolHK.TabButtonN
	 class FColor              ButtonPageListDisable (  );                       		//  GUIWarfareControls.BTUIColorPoolHK.ButtonPageListDisable
	 class FColor              ButtonPageListPressed (  );                       		//  GUIWarfareControls.BTUIColorPoolHK.ButtonPageListPressed
	 class FColor              ButtonPageListWatched (  );                       		//  GUIWarfareControls.BTUIColorPoolHK.ButtonPageListWatched
	 class FColor              ButtonPageListOn (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.ButtonPageListOn
	 class FColor              ButtonPageListN (  );                             		//  GUIWarfareControls.BTUIColorPoolHK.ButtonPageListN
	 class FColor              RadioButtonSelect (  );                           		//  GUIWarfareControls.BTUIColorPoolHK.RadioButtonSelect
	 class FColor              RadioButtonDisable (  );                          		//  GUIWarfareControls.BTUIColorPoolHK.RadioButtonDisable
	 class FColor              RadioButtonPressed (  );                          		//  GUIWarfareControls.BTUIColorPoolHK.RadioButtonPressed
	 class FColor              RadioButtonWatched (  );                          		//  GUIWarfareControls.BTUIColorPoolHK.RadioButtonWatched
	 class FColor              RadioButtonOn (  );                               		//  GUIWarfareControls.BTUIColorPoolHK.RadioButtonOn
	 class FColor              RadioButtonNBold (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.RadioButtonNBold
	 class FColor              RadioButtonN (  );                                		//  GUIWarfareControls.BTUIColorPoolHK.RadioButtonN
	 class FColor              BigButtonPressedShadow (  );                      		//  GUIWarfareControls.BTUIColorPoolHK.BigButtonPressedShadow
	 class FColor              BigButtonOnShadow (  );                           		//  GUIWarfareControls.BTUIColorPoolHK.BigButtonOnShadow
	 class FColor              BigButtonDisable (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.BigButtonDisable
	 class FColor              BigButtonPressed (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.BigButtonPressed
	 class FColor              BigButtonWatched (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.BigButtonWatched
	 class FColor              BigButtonOn (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.BigButtonOn
	 class FColor              BigButtonN (  );                                  		//  GUIWarfareControls.BTUIColorPoolHK.BigButtonN
	 class FColor              ButtonPressedShadow (  );                         		//  GUIWarfareControls.BTUIColorPoolHK.ButtonPressedShadow
	 class FColor              ButtonOnShadow (  );                              		//  GUIWarfareControls.BTUIColorPoolHK.ButtonOnShadow
	 class FColor              newButtonDisable (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.newButtonDisable
	 class FColor              newButtonPressed (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.newButtonPressed
	 class FColor              newButtonWatched (  );                            		//  GUIWarfareControls.BTUIColorPoolHK.newButtonWatched
	 class FColor              newButtonOn (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.newButtonOn
	 class FColor              newButtonN (  );                                  		//  GUIWarfareControls.BTUIColorPoolHK.newButtonN
	 class FColor              ButtonDisable (  );                               		//  GUIWarfareControls.BTUIColorPoolHK.ButtonDisable
	 class FColor              ButtonPressed (  );                               		//  GUIWarfareControls.BTUIColorPoolHK.ButtonPressed
	 class FColor              ButtonWatched (  );                               		//  GUIWarfareControls.BTUIColorPoolHK.ButtonWatched
	 class FColor              ButtonOn (  );                                    		//  GUIWarfareControls.BTUIColorPoolHK.ButtonOn
	 class FColor              ButtonN (  );                                     		//  GUIWarfareControls.BTUIColorPoolHK.ButtonN
	 class FColor              AASLevel7 (  );                                   		//  GUIWarfareControls.BTUIColorPoolHK.AASLevel7
	 class FColor              AASLevel3 (  );                                   		//  GUIWarfareControls.BTUIColorPoolHK.AASLevel3
	 class FColor              ChatTeam (  );                                    		//  GUIWarfareControls.BTUIColorPoolHK.ChatTeam
	 class FColor              ChatTeamGhost (  );                               		//  GUIWarfareControls.BTUIColorPoolHK.ChatTeamGhost
	 class FColor              ChatGhost (  );                                   		//  GUIWarfareControls.BTUIColorPoolHK.ChatGhost
	 class FColor              ChatBroadCastItem (  );                           		//  GUIWarfareControls.BTUIColorPoolHK.ChatBroadCastItem
	 class FColor              ChatSystem (  );                                  		//  GUIWarfareControls.BTUIColorPoolHK.ChatSystem
	 class FColor              ChatClan (  );                                    		//  GUIWarfareControls.BTUIColorPoolHK.ChatClan
	 class FColor              ChatWhisper (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.ChatWhisper
	 class FColor              ChatSelf (  );                                    		//  GUIWarfareControls.BTUIColorPoolHK.ChatSelf
	 class FColor              ChatNormal (  );                                  		//  GUIWarfareControls.BTUIColorPoolHK.ChatNormal
	 class FColor              GradePCBang (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.GradePCBang
	 class FColor              GradeLegend (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.GradeLegend
	 class FColor              GradeRare (  );                                   		//  GUIWarfareControls.BTUIColorPoolHK.GradeRare
	 class FColor              GradeHigh (  );                                   		//  GUIWarfareControls.BTUIColorPoolHK.GradeHigh
	 class FColor              GradeNormal (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.GradeNormal
	 class FColor              GradeCommon (  );                                 		//  GUIWarfareControls.BTUIColorPoolHK.GradeCommon
	 class FColor              GradeShop (  );                                   		//  GUIWarfareControls.BTUIColorPoolHK.GradeShop
	 class FColor              GradeShop_DurabilityX (  );                       		//  GUIWarfareControls.BTUIColorPoolHK.GradeShop_DurabilityX
	 class FColor              GradeBase (  );                                   		//  GUIWarfareControls.BTUIColorPoolHK.GradeBase
	 class FColor              myName (  );                                      		//  GUIWarfareControls.BTUIColorPoolHK.myName
	 class FColor              ClanName (  );                                    		//  GUIWarfareControls.BTUIColorPoolHK.ClanName
}; // Size: 0x0000

// Class GUIWarfareControls.BTUIResourcePoolHK
class DLL_IMPORT UBTUIResourcePoolHK : public UObject
{
public:
	class FColor                                       DefaultDrawColor;                                 		// 0x002C ( 0x0004 ) 
	class FColor                                       DefaultShadowColor;                               		// 0x0030 ( 0x0004 ) 
	struct FImage                                      ex_clanmark;                                      		// 0x0034 ( 0x0020 ) 
	struct FImage                                      cm_00;                                            		// 0x0054 ( 0x0020 ) 
	struct FImage                                      item_item_CF_blank_n;                             		// 0x0074 ( 0x0020 ) 
	struct FImage                                      img_panel_small;                                  		// 0x0094 ( 0x0020 ) 
	struct FImage                                      img_panel_small_stretch;                          		// 0x00B4 ( 0x0020 ) 
	struct FImage                                      icon_knife;                                       		// 0x00D4 ( 0x0020 ) 
	struct FImage                                      icon_pisgun;                                      		// 0x00F4 ( 0x0020 ) 
	struct FImage                                      icon_snipr;                                       		// 0x0114 ( 0x0020 ) 
	struct FImage                                      icon_roket;                                       		// 0x0134 ( 0x0020 ) 
	struct FImage                                      icon_password;                                    		// 0x0154 ( 0x0020 ) 
	struct FImage                                      icon_snipr_non;                                   		// 0x0174 ( 0x0020 ) 
	struct FImage                                      help_page;                                        		// 0x0194 ( 0x0020 ) 
	struct FImage                                      hud_back_3;                                       		// 0x01B4 ( 0x0020 ) 
	struct FImage                                      img_HUD_back_1;                                   		// 0x01D4 ( 0x0020 ) 
	struct FImage                                      img_slot_hlmt;                                    		// 0x01F4 ( 0x0020 ) 
	struct FImage                                      img_slot_grnd;                                    		// 0x0214 ( 0x0020 ) 
	struct FImage                                      img_slot_gogl;                                    		// 0x0234 ( 0x0020 ) 
	struct FImage                                      img_slot_face;                                    		// 0x0254 ( 0x0020 ) 
	struct FImage                                      img_slot_clth;                                    		// 0x0274 ( 0x0020 ) 
	struct FImage                                      img_slot_class;                                   		// 0x0294 ( 0x0020 ) 
	struct FImage                                      img_logo_CI;                                      		// 0x02B4 ( 0x0020 ) 
	struct FImage                                      img_logo_BTRtga;                                  		// 0x02D4 ( 0x0020 ) 
	struct FImage                                      img_15;                                           		// 0x02F4 ( 0x0020 ) 
	struct FImage                                      img_18;                                           		// 0x0314 ( 0x0020 ) 
	struct FImage                                      img_login_test;                                   		// 0x0334 ( 0x0020 ) 
	struct FImage                                      slider_back;                                      		// 0x0354 ( 0x0020 ) 
	struct FImage                                      slider_grip_n;                                    		// 0x0374 ( 0x0020 ) 
	struct FImage                                      slider_grip_on;                                   		// 0x0394 ( 0x0020 ) 
	struct FImage                                      img_result_indimat_ma;                            		// 0x03B4 ( 0x0020 ) 
	struct FImage                                      img_trophy;                                       		// 0x03D4 ( 0x0020 ) 
	struct FImage                                      img_trophy_scale;                                 		// 0x03F4 ( 0x0020 ) 
	struct FImage                                      img_promot;                                       		// 0x0414 ( 0x0020 ) 
	struct FImage                                      img_HUD_back_3;                                   		// 0x0434 ( 0x0020 ) 
	struct FImage                                      icon_LVup;                                        		// 0x0454 ( 0x0020 ) 
	struct FImage                                      icon_MVP;                                         		// 0x0474 ( 0x0020 ) 
	struct FImage                                      img_bonus;                                        		// 0x0494 ( 0x0020 ) 
	struct FImage                                      img_result_AF;                                    		// 0x04B4 ( 0x0020 ) 
	struct FImage                                      img_result_RSA;                                   		// 0x04D4 ( 0x0020 ) 
	struct FImage                                      img_win_1;                                        		// 0x04F4 ( 0x0020 ) 
	struct FImage                                      img_lose_1;                                       		// 0x0514 ( 0x0020 ) 
	struct FImage                                      img_win_2;                                        		// 0x0534 ( 0x0020 ) 
	struct FImage                                      img_lose_2;                                       		// 0x0554 ( 0x0020 ) 
	struct FImage                                      img_win_3;                                        		// 0x0574 ( 0x0020 ) 
	struct FImage                                      img_lose_3;                                       		// 0x0594 ( 0x0020 ) 
	struct FImage                                      img_result_AF_ma;                                 		// 0x05B4 ( 0x0020 ) 
	struct FImage                                      img_result_RSA_ma;                                		// 0x05D4 ( 0x0020 ) 
	struct FImage                                      sgau_weap_back;                                   		// 0x05F4 ( 0x0020 ) 
	struct FImage                                      sgau_weap_gauge;                                  		// 0x0614 ( 0x0020 ) 
	struct FImage                                      sgau_weap_incre;                                  		// 0x0634 ( 0x0020 ) 
	struct FImage                                      sgau_weap_decre;                                  		// 0x0654 ( 0x0020 ) 
	struct FImage                                      img_chat;                                         		// 0x0674 ( 0x0020 ) 
	struct FImage                                      gau_exp_back;                                     		// 0x0694 ( 0x0020 ) 
	struct FImage                                      gau_exp_gauge;                                    		// 0x06B4 ( 0x0020 ) 
	struct FImage                                      sgau_ping_1;                                      		// 0x06D4 ( 0x0020 ) 
	struct FImage                                      sgau_ping_2;                                      		// 0x06F4 ( 0x0020 ) 
	struct FImage                                      sgau_ping_3;                                      		// 0x0714 ( 0x0020 ) 
	struct FImage                                      sgau_ping_4;                                      		// 0x0734 ( 0x0020 ) 
	struct FImage                                      sgau_ping_back;                                   		// 0x0754 ( 0x0020 ) 
	struct FImage                                      img_pup_sau;                                      		// 0x0774 ( 0x0020 ) 
	struct FImage                                      img_ptitl_back;                                   		// 0x0794 ( 0x0020 ) 
	struct FImage                                      butt_left_n;                                      		// 0x07B4 ( 0x0020 ) 
	struct FImage                                      butt_left_on;                                     		// 0x07D4 ( 0x0020 ) 
	struct FImage                                      butt_left_cli;                                    		// 0x07F4 ( 0x0020 ) 
	struct FImage                                      butt_left_dis;                                    		// 0x0814 ( 0x0020 ) 
	struct FImage                                      butt_right_n;                                     		// 0x0834 ( 0x0020 ) 
	struct FImage                                      butt_right_on;                                    		// 0x0854 ( 0x0020 ) 
	struct FImage                                      butt_right_cli;                                   		// 0x0874 ( 0x0020 ) 
	struct FImage                                      butt_right_dis;                                   		// 0x0894 ( 0x0020 ) 
	struct FImage                                      empty;                                            		// 0x08B4 ( 0x0020 ) 
	struct FImage                                      img_ser_listop;                                   		// 0x08D4 ( 0x0020 ) 
	struct FImage                                      img_ser_listop_STRETCHED_ALL;                     		// 0x08F4 ( 0x0020 ) 
	struct FImage                                      radi_dis;                                         		// 0x0914 ( 0x0020 ) 
	struct FImage                                      radi_back;                                        		// 0x0934 ( 0x0020 ) 
	struct FImage                                      radi_ok;                                          		// 0x0954 ( 0x0020 ) 
	struct FImage                                      chek_dis;                                         		// 0x0974 ( 0x0020 ) 
	struct FImage                                      chek_back;                                        		// 0x0994 ( 0x0020 ) 
	struct FImage                                      chek_ok;                                          		// 0x09B4 ( 0x0020 ) 
	struct FImage                                      list_commu_n;                                     		// 0x09D4 ( 0x0020 ) 
	struct FImage                                      tap_n;                                            		// 0x09F4 ( 0x0020 ) 
	struct FImage                                      tap_on;                                           		// 0x0A14 ( 0x0020 ) 
	struct FImage                                      tap_foc;                                          		// 0x0A34 ( 0x0020 ) 
	struct FImage                                      tap_cli;                                          		// 0x0A54 ( 0x0020 ) 
	struct FImage                                      tap_dis;                                          		// 0x0A74 ( 0x0020 ) 
	struct FImage                                      tap_n_tro;                                        		// 0x0A94 ( 0x0020 ) 
	struct FImage                                      tap_on_tro;                                       		// 0x0AB4 ( 0x0020 ) 
	struct FImage                                      tap_foc_tro;                                      		// 0x0AD4 ( 0x0020 ) 
	struct FImage                                      tap_cli_tro;                                      		// 0x0AF4 ( 0x0020 ) 
	struct FImage                                      tap_dis_tro;                                      		// 0x0B14 ( 0x0020 ) 
	struct FImage                                      tap_n_default;                                    		// 0x0B34 ( 0x0020 ) 
	struct FImage                                      tap_on_default;                                   		// 0x0B54 ( 0x0020 ) 
	struct FImage                                      tap_cli_default;                                  		// 0x0B74 ( 0x0020 ) 
	struct FImage                                      tap_dis_default;                                  		// 0x0B94 ( 0x0020 ) 
	struct FImage                                      butt_big_n;                                       		// 0x0BB4 ( 0x0020 ) 
	struct FImage                                      butt_big_on;                                      		// 0x0BD4 ( 0x0020 ) 
	struct FImage                                      butt_big_cli;                                     		// 0x0BF4 ( 0x0020 ) 
	struct FImage                                      butt_big_dis;                                     		// 0x0C14 ( 0x0020 ) 
	struct FImage                                      list_item_n;                                      		// 0x0C34 ( 0x0020 ) 
	struct FImage                                      list_item_new;                                    		// 0x0C54 ( 0x0020 ) 
	struct FImage                                      list_item_on;                                     		// 0x0C74 ( 0x0020 ) 
	struct FImage                                      img_item_info;                                    		// 0x0C94 ( 0x0020 ) 
	struct FImage                                      list_item_non;                                    		// 0x0CB4 ( 0x0020 ) 
	struct FImage                                      icon_rem_cmor;                                    		// 0x0CD4 ( 0x0020 ) 
	struct FImage                                      icon_rem_cobr;                                    		// 0x0CF4 ( 0x0020 ) 
	struct FImage                                      icon_rem_dotd;                                    		// 0x0D14 ( 0x0020 ) 
	struct FImage                                      icon_rem_eotc;                                    		// 0x0D34 ( 0x0020 ) 
	struct FImage                                      icon_rem_mrds;                                    		// 0x0D54 ( 0x0020 ) 
	struct FImage                                      icon_rem_sco3;                                    		// 0x0D74 ( 0x0020 ) 
	struct FImage                                      icon_rem_sco5;                                    		// 0x0D94 ( 0x0020 ) 
	struct FImage                                      icon_rem_sco7;                                    		// 0x0DB4 ( 0x0020 ) 
	struct FImage                                      icon_rem_siln;                                    		// 0x0DD4 ( 0x0020 ) 
	struct FImage                                      icon_rem_skil;                                    		// 0x0DF4 ( 0x0020 ) 
	struct FImage                                      img_divid_line;                                   		// 0x0E14 ( 0x0020 ) 
	struct FImage                                      img_divid_line_c;                                 		// 0x0E34 ( 0x0020 ) 
	struct FImage                                      img_edge_line;                                    		// 0x0E54 ( 0x0020 ) 
	struct FImage                                      img_AF_cha;                                       		// 0x0E74 ( 0x0020 ) 
	struct FImage                                      img_RSA_cha;                                      		// 0x0E94 ( 0x0020 ) 
	struct FImage                                      butt_m_n;                                         		// 0x0EB4 ( 0x0020 ) 
	struct FImage                                      butt_m_on;                                        		// 0x0ED4 ( 0x0020 ) 
	struct FImage                                      butt_m_cli;                                       		// 0x0EF4 ( 0x0020 ) 
	struct FImage                                      butt_m_dis;                                       		// 0x0F14 ( 0x0020 ) 
	struct FImage                                      butt_n;                                           		// 0x0F34 ( 0x0020 ) 
	struct FImage                                      butt_on;                                          		// 0x0F54 ( 0x0020 ) 
	struct FImage                                      butt_cli;                                         		// 0x0F74 ( 0x0020 ) 
	struct FImage                                      butt_dis;                                         		// 0x0F94 ( 0x0020 ) 
	struct FImage                                      img_cash_non;                                     		// 0x0FB4 ( 0x0020 ) 
	struct FImage                                      img_point_b;                                      		// 0x0FD4 ( 0x0020 ) 
	struct FImage                                      img_point_non;                                    		// 0x0FF4 ( 0x0020 ) 
	struct FImage                                      img_cash;                                         		// 0x1014 ( 0x0020 ) 
	struct FImage                                      img_point;                                        		// 0x1034 ( 0x0020 ) 
	struct FImage                                      img_point_LC;                                     		// 0x1054 ( 0x0020 ) 
	struct FImage                                      img_repair_non;                                   		// 0x1074 ( 0x0020 ) 
	struct FImage                                      img_class_non;                                    		// 0x1094 ( 0x0020 ) 
	struct FImage                                      panel_1;                                          		// 0x10B4 ( 0x0020 ) 
	struct FImage                                      panel_1_half_alpha;                               		// 0x10D4 ( 0x0020 ) 
	struct FImage                                      panel_1_1;                                        		// 0x10F4 ( 0x0020 ) 
	struct FImage                                      panel_2;                                          		// 0x1114 ( 0x0020 ) 
	struct FImage                                      panel_3;                                          		// 0x1134 ( 0x0020 ) 
	struct FImage                                      panel_4;                                          		// 0x1154 ( 0x0020 ) 
	struct FImage                                      panel_5;                                          		// 0x1174 ( 0x0020 ) 
	struct FImage                                      panel_6;                                          		// 0x1194 ( 0x0020 ) 
	struct FImage                                      panel_7;                                          		// 0x11B4 ( 0x0020 ) 
	struct FImage                                      img_hold;                                         		// 0x11D4 ( 0x0020 ) 
	struct FImage                                      img_new;                                          		// 0x11F4 ( 0x0020 ) 
	struct FImage                                      img_popul;                                        		// 0x1214 ( 0x0020 ) 
	struct FImage                                      img_recom;                                        		// 0x1234 ( 0x0020 ) 
	struct FImage                                      list_lobby_on;                                    		// 0x1254 ( 0x0020 ) 
	struct FImage                                      list_lobby_cli;                                   		// 0x1274 ( 0x0020 ) 
	struct FImage                                      list_lobby_n;                                     		// 0x1294 ( 0x0020 ) 
	struct FImage                                      butt_list_n;                                      		// 0x12B4 ( 0x0020 ) 
	struct FImage                                      butt_list_on;                                     		// 0x12D4 ( 0x0020 ) 
	struct FImage                                      butt_list_cli;                                    		// 0x12F4 ( 0x0020 ) 
	struct FImage                                      butt_list_dis;                                    		// 0x1314 ( 0x0020 ) 
	struct FImage                                      img_list_divid;                                   		// 0x1334 ( 0x0020 ) 
	struct FImage                                      img_bak_aro;                                      		// 0x1354 ( 0x0020 ) 
	struct FImage                                      img_fir_aro;                                      		// 0x1374 ( 0x0020 ) 
	struct FImage                                      img_nex_aro;                                      		// 0x1394 ( 0x0020 ) 
	struct FImage                                      img_back1;                                        		// 0x13B4 ( 0x0020 ) 
	struct FImage                                      img_upper;                                        		// 0x13D4 ( 0x0020 ) 
	struct FImage                                      butt_af_n;                                        		// 0x13F4 ( 0x0020 ) 
	struct FImage                                      butt_af_on;                                       		// 0x1414 ( 0x0020 ) 
	struct FImage                                      butt_af_cli;                                      		// 0x1434 ( 0x0020 ) 
	struct FImage                                      butt_rsa_n;                                       		// 0x1454 ( 0x0020 ) 
	struct FImage                                      butt_rsa_on;                                      		// 0x1474 ( 0x0020 ) 
	struct FImage                                      butt_rsa_cli;                                     		// 0x1494 ( 0x0020 ) 
	struct FImage                                      img_input_x;                                      		// 0x14B4 ( 0x0020 ) 
	struct FImage                                      img_input_s;                                      		// 0x14D4 ( 0x0020 ) 
	struct FImage                                      icon_mstr;                                        		// 0x14F4 ( 0x0020 ) 
	struct FImage                                      img_top_default;                                  		// 0x1514 ( 0x0020 ) 
	struct FImage                                      img_page_thema;                                   		// 0x1534 ( 0x0020 ) 
	struct FImage                                      img_page_thema_trophy;                            		// 0x1554 ( 0x0020 ) 
	struct FImage                                      butt_quik_n;                                      		// 0x1574 ( 0x0020 ) 
	struct FImage                                      butt_quik_on;                                     		// 0x1594 ( 0x0020 ) 
	struct FImage                                      butt_quik_click;                                  		// 0x15B4 ( 0x0020 ) 
	struct FImage                                      butt_quik_empty;                                  		// 0x15D4 ( 0x0020 ) 
	struct FImage                                      butt_quik_input;                                  		// 0x15F4 ( 0x0020 ) 
	struct FImage                                      butt_quik_chang;                                  		// 0x1614 ( 0x0020 ) 
	struct FImage                                      gauge_loading;                                    		// 0x1634 ( 0x0020 ) 
	struct FImage                                      gauge_loading_back;                               		// 0x1654 ( 0x0020 ) 
	struct FImage                                      radi_on;                                          		// 0x1674 ( 0x0020 ) 
	struct FImage                                      img_promot_Scale;                                 		// 0x1694 ( 0x0020 ) 
	struct FImage                                      Item_Item_WP_ETC_RifleBox;                        		// 0x16B4 ( 0x0020 ) 
	struct FImage                                      img_up1;                                          		// 0x16D4 ( 0x0020 ) 
	struct FImage                                      img_up2;                                          		// 0x16F4 ( 0x0020 ) 
	struct FImage                                      img_up3;                                          		// 0x1714 ( 0x0020 ) 
	struct FImage                                      img_down1;                                        		// 0x1734 ( 0x0020 ) 
	struct FImage                                      img_down2;                                        		// 0x1754 ( 0x0020 ) 
	struct FImage                                      img_staff_back;                                   		// 0x1774 ( 0x0020 ) 
	struct FImage                                      img_staff_text;                                   		// 0x1794 ( 0x0020 ) 
	struct FImage                                      img_3ditem_back_0;                                		// 0x17B4 ( 0x0020 ) 
	struct FImage                                      img_3ditem_back_0_WeaponBack;                     		// 0x17D4 ( 0x0020 ) 
	struct FImage                                      img_3ditem_back_0_TrophyBack;                     		// 0x17F4 ( 0x0020 ) 
	struct FImage                                      img_3ditem_back_0_EditBack;                       		// 0x1814 ( 0x0020 ) 
	struct FImage                                      img_3ditem_back_1;                                		// 0x1834 ( 0x0020 ) 
	struct FImage                                      img_gauge_arow;                                   		// 0x1854 ( 0x0020 ) 
	struct FImage                                      img_edge_icon;                                    		// 0x1874 ( 0x0020 ) 
	struct FImage                                      Lv_Mark[ 0x4C ];                                  		// 0x1894 ( 0x0980 ) 
	struct FImage                                      ClanLevel[ 0x1F ];                                		// 0x2214 ( 0x03E0 ) 
	struct FImage                                      list_serv_n;                                      		// 0x25F4 ( 0x0020 ) 
	struct FImage                                      Item_Item_FT_point;                               		// 0x2614 ( 0x0020 ) 
	struct FImage                                      Item_Item_FT_epgain;                              		// 0x2634 ( 0x0020 ) 
	struct FImage                                      Item_Item_FT_ptgain;                              		// 0x2654 ( 0x0020 ) 
	struct FImage                                      Item_Item_FT_pt_bns;                              		// 0x2674 ( 0x0020 ) 
	struct FImage                                      img_panel_1;                                      		// 0x2694 ( 0x0020 ) 
	struct FImage                                      img_panel_2;                                      		// 0x26B4 ( 0x0020 ) 
	struct FImage                                      img_panel_3;                                      		// 0x26D4 ( 0x0020 ) 
	struct FImage                                      panel_inven_in;                                   		// 0x26F4 ( 0x0020 ) 
	struct FImage                                      panel_inven_out;                                  		// 0x2714 ( 0x0020 ) 
	struct FImage                                      panel_store_in;                                   		// 0x2734 ( 0x0020 ) 
	struct FImage                                      panel_store_out;                                  		// 0x2754 ( 0x0020 ) 
	struct FImage                                      img_inven;                                        		// 0x2774 ( 0x0020 ) 
	struct FImage                                      list_item_inven_n;                                		// 0x2794 ( 0x0020 ) 
	struct FImage                                      list_item_inven_on;                               		// 0x27B4 ( 0x0020 ) 
	struct FImage                                      list_item_inven_cli;                              		// 0x27D4 ( 0x0020 ) 
	struct FImage                                      list_item_inven_foc;                              		// 0x27F4 ( 0x0020 ) 
	struct FImage                                      list_item_store_n;                                		// 0x2814 ( 0x0020 ) 
	struct FImage                                      list_item_store_on;                               		// 0x2834 ( 0x0020 ) 
	struct FImage                                      list_item_store_cli;                              		// 0x2854 ( 0x0020 ) 
	struct FImage                                      list_item_store_foc;                              		// 0x2874 ( 0x0020 ) 
	struct FImage                                      butt_inven_n;                                     		// 0x2894 ( 0x0020 ) 
	struct FImage                                      butt_inven_on;                                    		// 0x28B4 ( 0x0020 ) 
	struct FImage                                      butt_inven_cli;                                   		// 0x28D4 ( 0x0020 ) 
	struct FImage                                      butt_inven_dis;                                   		// 0x28F4 ( 0x0020 ) 
	struct FImage                                      tap_n_inven;                                      		// 0x2914 ( 0x0020 ) 
	struct FImage                                      tap_on_inven;                                     		// 0x2934 ( 0x0020 ) 
	struct FImage                                      tap_cli_inven;                                    		// 0x2954 ( 0x0020 ) 
	struct FImage                                      tap_dis_inven;                                    		// 0x2974 ( 0x0020 ) 
	struct FImage                                      tap_n_store;                                      		// 0x2994 ( 0x0020 ) 
	struct FImage                                      tap_on_store;                                     		// 0x29B4 ( 0x0020 ) 
	struct FImage                                      tap_cli_store;                                    		// 0x29D4 ( 0x0020 ) 
	struct FImage                                      tap_dis_store;                                    		// 0x29F4 ( 0x0020 ) 
	struct FImage                                      icon_clan_free;                                   		// 0x2A14 ( 0x0020 ) 
	struct FImage                                      img_make_clan;                                    		// 0x2A34 ( 0x0020 ) 
	struct FImage                                      list_serv_cli;                                    		// 0x2A54 ( 0x0020 ) 
	struct FImage                                      list_commu_on;                                    		// 0x2A74 ( 0x0020 ) 
	struct FImage                                      list_commu_cli;                                   		// 0x2A94 ( 0x0020 ) 
	struct FImage                                      icon_leader;                                      		// 0x2AB4 ( 0x0020 ) 
	struct FImage                                      icon_cl_a1;                                       		// 0x2AD4 ( 0x0020 ) 
	struct FImage                                      icon_cl_a2;                                       		// 0x2AF4 ( 0x0020 ) 
	struct FImage                                      icon_cl_a3;                                       		// 0x2B14 ( 0x0020 ) 
	struct FImage                                      icon_cl_a4;                                       		// 0x2B34 ( 0x0020 ) 
	struct FImage                                      icon_cl_a5;                                       		// 0x2B54 ( 0x0020 ) 
	struct FImage                                      img_cm_128_ds_sku_03;                             		// 0x2B74 ( 0x0020 ) 
	struct FImage                                      img_cm_128_ds_sku_04;                             		// 0x2B94 ( 0x0020 ) 
	struct FImage                                      img_cm_128_ds_sku_06;                             		// 0x2BB4 ( 0x0020 ) 
	struct FImage                                      img_cm_128_ds_sku_07;                             		// 0x2BD4 ( 0x0020 ) 
	struct FImage                                      scrol_back;                                       		// 0x2BF4 ( 0x0020 ) 
	struct FImage                                      scrol_up_n;                                       		// 0x2C14 ( 0x0020 ) 
	struct FImage                                      scrol_up_on;                                      		// 0x2C34 ( 0x0020 ) 
	struct FImage                                      scrol_dn_n;                                       		// 0x2C54 ( 0x0020 ) 
	struct FImage                                      scrol_dn_on;                                      		// 0x2C74 ( 0x0020 ) 
	struct FImage                                      scrol_grip_n;                                     		// 0x2C94 ( 0x0020 ) 
	struct FImage                                      scrol_grip_on;                                    		// 0x2CB4 ( 0x0020 ) 
	struct FImage                                      gau_ser_back;                                     		// 0x2CD4 ( 0x0020 ) 
	struct FImage                                      gau_ser_gauge;                                    		// 0x2CF4 ( 0x0020 ) 
	struct FImage                                      icon_fixroom;                                     		// 0x2D14 ( 0x0020 ) 
	struct FImage                                      icon_quest_day;                                   		// 0x2D34 ( 0x0020 ) 
	struct FImage                                      icon_quest_tuto;                                  		// 0x2D54 ( 0x0020 ) 
	struct FImage                                      icon_quest_pcroom;                                		// 0x2D74 ( 0x0020 ) 
	struct FImage                                      icon_quest_pcroom2;                               		// 0x2D94 ( 0x0020 ) 
	struct FImage                                      icon_quest_event;                                 		// 0x2DB4 ( 0x0020 ) 
	struct FImage                                      img_point_help;                                   		// 0x2DD4 ( 0x0020 ) 
	struct FImage                                      img_exclamation;                                  		// 0x2DF4 ( 0x0020 ) 
	struct FImage                                      butt_rot_rt_n;                                    		// 0x2E14 ( 0x0020 ) 
	struct FImage                                      butt_rot_rt_on;                                   		// 0x2E34 ( 0x0020 ) 
	struct FImage                                      butt_rot_rt_cli;                                  		// 0x2E54 ( 0x0020 ) 
	struct FImage                                      butt_rot_lt_n;                                    		// 0x2E74 ( 0x0020 ) 
	struct FImage                                      butt_rot_lt_on;                                   		// 0x2E94 ( 0x0020 ) 
	struct FImage                                      butt_rot_lt_cli;                                  		// 0x2EB4 ( 0x0020 ) 
	struct FImage                                      butt_rot_af_n;                                    		// 0x2ED4 ( 0x0020 ) 
	struct FImage                                      butt_rot_af_on;                                   		// 0x2EF4 ( 0x0020 ) 
	struct FImage                                      butt_rot_af_cli;                                  		// 0x2F14 ( 0x0020 ) 
	struct FImage                                      butt_rot_rsa_n;                                   		// 0x2F34 ( 0x0020 ) 
	struct FImage                                      butt_rot_rsa_on;                                  		// 0x2F54 ( 0x0020 ) 
	struct FImage                                      butt_rot_rsa_cli;                                 		// 0x2F74 ( 0x0020 ) 
	struct FImage                                      img_help_all0;                                    		// 0x2F94 ( 0x0020 ) 
	struct FImage                                      img_help_all1;                                    		// 0x2FB4 ( 0x0020 ) 
	struct FImage                                      img_help_all2;                                    		// 0x2FD4 ( 0x0020 ) 
	struct FImage                                      img_help_all3;                                    		// 0x2FF4 ( 0x0020 ) 
	struct FImage                                      img_help_all4;                                    		// 0x3014 ( 0x0020 ) 
	struct FImage                                      img_help_all5;                                    		// 0x3034 ( 0x0020 ) 
	struct FImage                                      img_help_all6;                                    		// 0x3054 ( 0x0020 ) 
	struct FImage                                      img_help_all7;                                    		// 0x3074 ( 0x0020 ) 
	struct FImage                                      img_help_all8;                                    		// 0x3094 ( 0x0020 ) 
	struct FImage                                      img_help_all9;                                    		// 0x30B4 ( 0x0020 ) 
	struct FImage                                      img_help_all10;                                   		// 0x30D4 ( 0x0020 ) 
	struct FImage                                      icon_bns[ 0x07 ];                                 		// 0x30F4 ( 0x00E0 ) 
	struct FImage                                      icon_bns_chnl;                                    		// 0x31D4 ( 0x0020 ) 
	struct FImage                                      help_top;                                         		// 0x31F4 ( 0x0020 ) 
	struct FImage                                      help_btn_n;                                       		// 0x3214 ( 0x0020 ) 
	struct FImage                                      help_btn_on;                                      		// 0x3234 ( 0x0020 ) 
	struct FImage                                      help_btn_cli;                                     		// 0x3254 ( 0x0020 ) 
	struct FImage                                      help_back_web;                                    		// 0x3274 ( 0x0020 ) 
	struct FImage                                      help_back;                                        		// 0x3294 ( 0x0020 ) 
	struct FImage                                      help_Title_Notice;                                		// 0x32B4 ( 0x0020 ) 
	struct FImage                                      help_Notice;                                      		// 0x32D4 ( 0x0020 ) 
	struct FImage                                      cf_on;                                            		// 0x32F4 ( 0x0020 ) 
	struct FImage                                      cf_foc;                                           		// 0x3314 ( 0x0020 ) 
	struct FImage                                      cf_cli;                                           		// 0x3334 ( 0x0020 ) 
	struct FImage                                      icon_new;                                         		// 0x3354 ( 0x0020 ) 
	struct FImage                                      img_white;                                        		// 0x3374 ( 0x0020 ) 
	struct FImage                                      ex_clanmark_01;                                   		// 0x3394 ( 0x0020 ) 
	struct FImage                                      ex_clanmark_02;                                   		// 0x33B4 ( 0x0020 ) 
	struct FImage                                      img_quest_top;                                    		// 0x33D4 ( 0x0020 ) 
	struct FImage                                      img_quest_back;                                   		// 0x33F4 ( 0x0020 ) 
	struct FImage                                      img_quest_bottom;                                 		// 0x3414 ( 0x0020 ) 
	struct FImage                                      item_item_cash;                                   		// 0x3434 ( 0x0020 ) 
	struct FImage                                      img_top_win_af;                                   		// 0x3454 ( 0x0020 ) 
	struct FImage                                      img_top_win_rsa;                                  		// 0x3474 ( 0x0020 ) 
	struct FImage                                      img_top_lose_af;                                  		// 0x3494 ( 0x0020 ) 
	struct FImage                                      img_top_lose_rsa;                                 		// 0x34B4 ( 0x0020 ) 
	struct FImage                                      icon_notify_click;                                		// 0x34D4 ( 0x0020 ) 
	struct FImage                                      img_timeitempopup_info;                           		// 0x34F4 ( 0x0020 ) 
	struct FImage                                      img_timeitempopup_renew;                          		// 0x3514 ( 0x0020 ) 
	struct FImage                                      butt_big_Bling;                                   		// 0x3534 ( 0x0020 ) 
	struct FImage                                      img_serverchannel_bgdeco;                         		// 0x3554 ( 0x0020 ) 
	struct FImage                                      newlist_serv_n;                                   		// 0x3574 ( 0x0020 ) 
	struct FImage                                      newlist_serv_on;                                  		// 0x3594 ( 0x0020 ) 
	struct FImage                                      newlist_serv_cli;                                 		// 0x35B4 ( 0x0020 ) 
	struct FImage                                      newlist_serv_block;                               		// 0x35D4 ( 0x0020 ) 
	struct FImage                                      newlist_serv_Focus;                               		// 0x35F4 ( 0x0020 ) 
	struct FImage                                      newlist_Channel_n;                                		// 0x3614 ( 0x0020 ) 
	struct FImage                                      newlist_Channel_on;                               		// 0x3634 ( 0x0020 ) 
	struct FImage                                      newlist_Channel_cli;                              		// 0x3654 ( 0x0020 ) 
	struct FImage                                      newlist_Channel_block;                            		// 0x3674 ( 0x0020 ) 
	struct FImage                                      newlist_Channel_Focus;                            		// 0x3694 ( 0x0020 ) 
	struct FImage                                      ServerSelPageBtn_n;                               		// 0x36B4 ( 0x0020 ) 
	struct FImage                                      ServerSelPageBtn_on;                              		// 0x36D4 ( 0x0020 ) 
	struct FImage                                      ServerSelPageBtn_cli;                             		// 0x36F4 ( 0x0020 ) 
	struct FImage                                      ServerSelPageBtn_block;                           		// 0x3714 ( 0x0020 ) 
	struct FImage                                      ServerGroup[ 0x05 ];                              		// 0x3734 ( 0x00A0 ) 
	struct FImage                                      OptionBtn_n;                                      		// 0x37D4 ( 0x0020 ) 
	struct FImage                                      OptionBtn_on;                                     		// 0x37F4 ( 0x0020 ) 
	struct FImage                                      OptionBtn_cli;                                    		// 0x3814 ( 0x0020 ) 
	struct FImage                                      OptionBtn_block;                                  		// 0x3834 ( 0x0020 ) 
	struct FImage                                      OptionBtn_Focus;                                  		// 0x3854 ( 0x0020 ) 
	struct FImage                                      ExitBtn_n;                                        		// 0x3874 ( 0x0020 ) 
	struct FImage                                      ExitBtn_on;                                       		// 0x3894 ( 0x0020 ) 
	struct FImage                                      ExitBtn_cli;                                      		// 0x38B4 ( 0x0020 ) 
	struct FImage                                      ExitBtn_block;                                    		// 0x38D4 ( 0x0020 ) 
	struct FImage                                      ExitBtn_Focus;                                    		// 0x38F4 ( 0x0020 ) 
	struct FImage                                      ClanBtn_n;                                        		// 0x3914 ( 0x0020 ) 
	struct FImage                                      ClanBtn_on;                                       		// 0x3934 ( 0x0020 ) 
	struct FImage                                      ClanBtn_cli;                                      		// 0x3954 ( 0x0020 ) 
	struct FImage                                      ClanBtn_block;                                    		// 0x3974 ( 0x0020 ) 
	struct FImage                                      ClanBtn_Focus;                                    		// 0x3994 ( 0x0020 ) 
	struct FImage                                      Mailbox_n;                                        		// 0x39B4 ( 0x0020 ) 
	struct FImage                                      Mailbox_on;                                       		// 0x39D4 ( 0x0020 ) 
	struct FImage                                      Mailbox_cli;                                      		// 0x39F4 ( 0x0020 ) 
	struct FImage                                      Mailbox_block;                                    		// 0x3A14 ( 0x0020 ) 
	struct FImage                                      Mailbox_Focus;                                    		// 0x3A34 ( 0x0020 ) 
	struct FImage                                      Quest_n;                                          		// 0x3A54 ( 0x0020 ) 
	struct FImage                                      Quest_on;                                         		// 0x3A74 ( 0x0020 ) 
	struct FImage                                      Quest_cli;                                        		// 0x3A94 ( 0x0020 ) 
	struct FImage                                      Quest_block;                                      		// 0x3AB4 ( 0x0020 ) 
	struct FImage                                      Quest_Focus;                                      		// 0x3AD4 ( 0x0020 ) 
	struct FImage                                      Back_n;                                           		// 0x3AF4 ( 0x0020 ) 
	struct FImage                                      Back_on;                                          		// 0x3B14 ( 0x0020 ) 
	struct FImage                                      Back_cli;                                         		// 0x3B34 ( 0x0020 ) 
	struct FImage                                      Back_block;                                       		// 0x3B54 ( 0x0020 ) 
	struct FImage                                      Back_Focus;                                       		// 0x3B74 ( 0x0020 ) 
	struct FImage                                      ad_serverchannel;                                 		// 0x3B94 ( 0x0020 ) 
	struct FImage                                      Ad_ServerChannel2;                                		// 0x3BB4 ( 0x0020 ) 
	struct FImage                                      gau_servers_status_back;                          		// 0x3BD4 ( 0x0020 ) 
	struct FImage                                      gau_servers_status_gauge;                         		// 0x3BF4 ( 0x0020 ) 
	struct FImage                                      ChannelBg;                                        		// 0x3C14 ( 0x0020 ) 
	struct FImage                                      ChannelBgBeginner;                                		// 0x3C34 ( 0x0020 ) 
	struct FImage                                      ChannelBgTraining;                                		// 0x3C54 ( 0x0020 ) 
	struct FImage                                      ChannelBgNormal;                                  		// 0x3C74 ( 0x0020 ) 
	struct FImage                                      ChannelBgExpert;                                  		// 0x3C94 ( 0x0020 ) 
	struct FImage                                      ChannelBgClan;                                    		// 0x3CB4 ( 0x0020 ) 
	struct FImage                                      LobbyBG;                                          		// 0x3CD4 ( 0x0020 ) 
	struct FImage                                      newlist_Lobby_n;                                  		// 0x3CF4 ( 0x0020 ) 
	struct FImage                                      newlist_Lobby_on;                                 		// 0x3D14 ( 0x0020 ) 
	struct FImage                                      newlist_Lobby_cli;                                		// 0x3D34 ( 0x0020 ) 
	struct FImage                                      newlist_Lobby_block;                              		// 0x3D54 ( 0x0020 ) 
	struct FImage                                      newlist_Lobby_Focus;                              		// 0x3D74 ( 0x0020 ) 
	struct FImage                                      ad_lobby;                                         		// 0x3D94 ( 0x0020 ) 
	struct FImage                                      Msg_list_n;                                       		// 0x3DB4 ( 0x0020 ) 
	struct FImage                                      Msg_list_on;                                      		// 0x3DD4 ( 0x0020 ) 
	struct FImage                                      Msg_list_cli;                                     		// 0x3DF4 ( 0x0020 ) 
	struct FImage                                      Msg_list_block;                                   		// 0x3E14 ( 0x0020 ) 
	struct FImage                                      Msg_list_Focus;                                   		// 0x3E34 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_Big_n;                                  		// 0x3E54 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_Big_on;                                 		// 0x3E74 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_Big_cli;                                		// 0x3E94 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_Big_block;                              		// 0x3EB4 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_mid_n;                                  		// 0x3ED4 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_mid_on;                                 		// 0x3EF4 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_mid_cli;                                		// 0x3F14 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_mid_block;                              		// 0x3F34 ( 0x0020 ) 
	struct FImage                                      Lobby_Enter_Btn_n;                                		// 0x3F54 ( 0x0020 ) 
	struct FImage                                      Lobby_Enter_Btn_on;                               		// 0x3F74 ( 0x0020 ) 
	struct FImage                                      Lobby_Enter_Btn_cli;                              		// 0x3F94 ( 0x0020 ) 
	struct FImage                                      Lobby_Enter_Btn_block;                            		// 0x3FB4 ( 0x0020 ) 
	struct FImage                                      Lobby_Quick_Enter_Btn_n;                          		// 0x3FD4 ( 0x0020 ) 
	struct FImage                                      Lobby_Quick_Enter_Btn_on;                         		// 0x3FF4 ( 0x0020 ) 
	struct FImage                                      Lobby_Quick_Enter_Btn_cli;                        		// 0x4014 ( 0x0020 ) 
	struct FImage                                      Lobby_Quick_Enter_Btn_block;                      		// 0x4034 ( 0x0020 ) 
	struct FImage                                      Lobby_Quick_Enter_Setting_Btn_n;                  		// 0x4054 ( 0x0020 ) 
	struct FImage                                      Lobby_Quick_Enter_Setting_Btn_on;                 		// 0x4074 ( 0x0020 ) 
	struct FImage                                      Lobby_Quick_Enter_Setting_Btn_cli;                		// 0x4094 ( 0x0020 ) 
	struct FImage                                      Lobby_Quick_Enter_Setting_Btn_block;              		// 0x40B4 ( 0x0020 ) 
	struct FImage                                      Cash_Btn_mid_n;                                   		// 0x40D4 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_small_n;                                		// 0x40F4 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_small_on;                               		// 0x4114 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_small_cli;                              		// 0x4134 ( 0x0020 ) 
	struct FImage                                      Lobby_Btn_small_block;                            		// 0x4154 ( 0x0020 ) 
	struct FImage                                      Lobby_Chat_Input_Bg;                              		// 0x4174 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtn_small_n;                            		// 0x4194 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtn_small_on;                           		// 0x41B4 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtn_small_cli;                          		// 0x41D4 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtn_small_block;                        		// 0x41F4 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtnUp_small_n;                          		// 0x4214 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtnUp_small_on;                         		// 0x4234 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtnUp_small_cli;                        		// 0x4254 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtnUp_small_block;                      		// 0x4274 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtnDn_small_n;                          		// 0x4294 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtnDn_small_on;                         		// 0x42B4 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtnDn_small_cli;                        		// 0x42D4 ( 0x0020 ) 
	struct FImage                                      Lobby_ChatBtnDn_small_block;                      		// 0x42F4 ( 0x0020 ) 
	struct FImage                                      Lobby_MyInfo_Btn_n;                               		// 0x4314 ( 0x0020 ) 
	struct FImage                                      Lobby_MyInfo_Btn_on;                              		// 0x4334 ( 0x0020 ) 
	struct FImage                                      Lobby_MyInfo_Btn_cli;                             		// 0x4354 ( 0x0020 ) 
	struct FImage                                      Lobby_MyInfo_Btn_block;                           		// 0x4374 ( 0x0020 ) 
	struct FImage                                      Lobby_MyInfo_Btn_Focus;                           		// 0x4394 ( 0x0020 ) 
	struct FImage                                      TopMenuBtn_n;                                     		// 0x43B4 ( 0x0020 ) 
	struct FImage                                      TopMenuBtn_on;                                    		// 0x43D4 ( 0x0020 ) 
	struct FImage                                      TopMenuBtn_cli;                                   		// 0x43F4 ( 0x0020 ) 
	struct FImage                                      TopMenuBtn_block;                                 		// 0x4414 ( 0x0020 ) 
	struct FImage                                      TopMenuShop_Btn_n;                                		// 0x4434 ( 0x0020 ) 
	struct FImage                                      TopMenuShop_Btn_on;                               		// 0x4454 ( 0x0020 ) 
	struct FImage                                      TopMenuShop_Btn_cli;                              		// 0x4474 ( 0x0020 ) 
	struct FImage                                      TopMenuShop_Btn_block;                            		// 0x4494 ( 0x0020 ) 
	struct FImage                                      TopMenuInven_Btn_n;                               		// 0x44B4 ( 0x0020 ) 
	struct FImage                                      TopMenuInven_Btn_on;                              		// 0x44D4 ( 0x0020 ) 
	struct FImage                                      TopMenuInven_Btn_cli;                             		// 0x44F4 ( 0x0020 ) 
	struct FImage                                      TopMenuInven_Btn_block;                           		// 0x4514 ( 0x0020 ) 
	struct FImage                                      TopBgDeco;                                        		// 0x4534 ( 0x0020 ) 
	struct FImage                                      newimg_point_LC;                                  		// 0x4554 ( 0x0020 ) 
	struct FImage                                      newimg_cash_LC;                                   		// 0x4574 ( 0x0020 ) 
	struct FImage                                      newgau_exp_back;                                  		// 0x4594 ( 0x0020 ) 
	struct FImage                                      newgau_exp_gauge;                                 		// 0x45B4 ( 0x0020 ) 
	struct FImage                                      Inven_bg;                                         		// 0x45D4 ( 0x0020 ) 
	struct FImage                                      new_img_slot_MainGun;                             		// 0x45F4 ( 0x0020 ) 
	struct FImage                                      new_img_slot_Pistol;                              		// 0x4614 ( 0x0020 ) 
	struct FImage                                      new_img_slot_Knife;                               		// 0x4634 ( 0x0020 ) 
	struct FImage                                      new_img_slot_hlmt;                                		// 0x4654 ( 0x0020 ) 
	struct FImage                                      new_img_slot_grnd1;                               		// 0x4674 ( 0x0020 ) 
	struct FImage                                      new_img_slot_grnd2;                               		// 0x4694 ( 0x0020 ) 
	struct FImage                                      new_img_slot_gogl;                                		// 0x46B4 ( 0x0020 ) 
	struct FImage                                      new_img_slot_face;                                		// 0x46D4 ( 0x0020 ) 
	struct FImage                                      new_img_slot_clth_af;                             		// 0x46F4 ( 0x0020 ) 
	struct FImage                                      new_img_slot_clth_rsa;                            		// 0x4714 ( 0x0020 ) 
	struct FImage                                      new_img_slot_class;                               		// 0x4734 ( 0x0020 ) 
	struct FImage                                      Block_Weapon;                                     		// 0x4754 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot1_Btn_n;                             		// 0x4774 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot1_Btn_on;                            		// 0x4794 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot1_Btn_cli;                           		// 0x47B4 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot1_Btn_Disable;                       		// 0x47D4 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot1_Btn_Focus;                         		// 0x47F4 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot2_Btn_n;                             		// 0x4814 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot2_Btn_on;                            		// 0x4834 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot2_Btn_cli;                           		// 0x4854 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot2_Btn_Disable;                       		// 0x4874 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot2_Btn_Focus;                         		// 0x4894 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot3_Btn_n;                             		// 0x48B4 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot3_Btn_on;                            		// 0x48D4 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot3_Btn_cli;                           		// 0x48F4 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot3_Btn_Disable;                       		// 0x4914 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot3_Btn_Focus;                         		// 0x4934 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot4_Btn_n;                             		// 0x4954 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot4_Btn_on;                            		// 0x4974 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot4_Btn_cli;                           		// 0x4994 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot4_Btn_Disable;                       		// 0x49B4 ( 0x0020 ) 
	struct FImage                                      Inven_QuiSlot4_Btn_Focus;                         		// 0x49D4 ( 0x0020 ) 
	struct FImage                                      Inven_tab_small_n;                                		// 0x49F4 ( 0x0020 ) 
	struct FImage                                      Inven_tab_small_on;                               		// 0x4A14 ( 0x0020 ) 
	struct FImage                                      Inven_tab_small_cli;                              		// 0x4A34 ( 0x0020 ) 
	struct FImage                                      Inven_tab_small_Disable;                          		// 0x4A54 ( 0x0020 ) 
	struct FImage                                      Inven_tab_small_Focus;                            		// 0x4A74 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Mid_n;                                  		// 0x4A94 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Mid_on;                                 		// 0x4AB4 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Mid_cli;                                		// 0x4AD4 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Mid_Disable;                            		// 0x4AF4 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Mid_Focus;                              		// 0x4B14 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Big_n;                                  		// 0x4B34 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Big_on;                                 		// 0x4B54 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Big_cli;                                		// 0x4B74 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Big_Disable;                            		// 0x4B94 ( 0x0020 ) 
	struct FImage                                      Inven_tab_Big_Focus;                              		// 0x4BB4 ( 0x0020 ) 
	struct FImage                                      Inven_Chattab_Big_n;                              		// 0x4BD4 ( 0x0020 ) 
	struct FImage                                      Inven_Chattab_Big_on;                             		// 0x4BF4 ( 0x0020 ) 
	struct FImage                                      Inven_Chattab_Big_cli;                            		// 0x4C14 ( 0x0020 ) 
	struct FImage                                      Inven_Chattab_Big_Disable;                        		// 0x4C34 ( 0x0020 ) 
	struct FImage                                      Inven_Chattab_Big_Focus;                          		// 0x4C54 ( 0x0020 ) 
	struct FImage                                      Inven_Msntab_n;                                   		// 0x4C74 ( 0x0020 ) 
	struct FImage                                      Inven_Msntab_on;                                  		// 0x4C94 ( 0x0020 ) 
	struct FImage                                      Inven_Msntab_cli;                                 		// 0x4CB4 ( 0x0020 ) 
	struct FImage                                      Inven_Msntab_Disable;                             		// 0x4CD4 ( 0x0020 ) 
	struct FImage                                      Inven_Msntab_Focus;                               		// 0x4CF4 ( 0x0020 ) 
	struct FImage                                      Item_List_BG;                                     		// 0x4D14 ( 0x0020 ) 
	struct FImage                                      Item_List_n;                                      		// 0x4D34 ( 0x0020 ) 
	struct FImage                                      Item_List_on;                                     		// 0x4D54 ( 0x0020 ) 
	struct FImage                                      Item_List_cli;                                    		// 0x4D74 ( 0x0020 ) 
	struct FImage                                      Item_List_Sel;                                    		// 0x4D94 ( 0x0020 ) 
	struct FImage                                      Item_List_quick_sel;                              		// 0x4DB4 ( 0x0020 ) 
	struct FImage                                      Inven_gauge_bg;                                   		// 0x4DD4 ( 0x0020 ) 
	struct FImage                                      Inven_Total_fix_btn_n;                            		// 0x4DF4 ( 0x0020 ) 
	struct FImage                                      Inven_Total_fix_btn_on;                           		// 0x4E14 ( 0x0020 ) 
	struct FImage                                      Inven_Total_fix_btn_cli;                          		// 0x4E34 ( 0x0020 ) 
	struct FImage                                      Inven_Total_fix_btn_Disable;                      		// 0x4E54 ( 0x0020 ) 
	struct FImage                                      Inven_Total_fix_btn_Focus;                        		// 0x4E74 ( 0x0020 ) 
	struct FImage                                      Equip_QS_WP_BG;                                   		// 0x4E94 ( 0x0020 ) 
	struct FImage                                      Inven_sub_btn_n;                                  		// 0x4EB4 ( 0x0020 ) 
	struct FImage                                      Inven_sub_btn_on;                                 		// 0x4ED4 ( 0x0020 ) 
	struct FImage                                      Inven_sub_btn_cli;                                		// 0x4EF4 ( 0x0020 ) 
	struct FImage                                      Inven_sub_btn_Disable;                            		// 0x4F14 ( 0x0020 ) 
	struct FImage                                      Inven_sub_btn_Focus;                              		// 0x4F34 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_GreenBtn_n;                        		// 0x4F54 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_GreenBtn_on;                       		// 0x4F74 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_GreenBtn_cli;                      		// 0x4F94 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_GreenBtn_Disable;                  		// 0x4FB4 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_GreenBtn_Focus;                    		// 0x4FD4 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_YellowBtn_n;                       		// 0x4FF4 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_YellowBtn_on;                      		// 0x5014 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_YellowBtn_cli;                     		// 0x5034 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_YellowBtn_Disable;                 		// 0x5054 ( 0x0020 ) 
	struct FImage                                      Inven_ItemList_YellowBtn_Focus;                   		// 0x5074 ( 0x0020 ) 
	struct FImage                                      Inven_Skill_Lock;                                 		// 0x5094 ( 0x0020 ) 
	struct FImage                                      new_img_cash;                                     		// 0x50B4 ( 0x0020 ) 
	struct FImage                                      new_img_point;                                    		// 0x50D4 ( 0x0020 ) 
	struct FImage                                      char_rot_Left_n;                                  		// 0x50F4 ( 0x0020 ) 
	struct FImage                                      char_rot_Left_on;                                 		// 0x5114 ( 0x0020 ) 
	struct FImage                                      char_rot_Left_cli;                                		// 0x5134 ( 0x0020 ) 
	struct FImage                                      char_rot_Left_Dis;                                		// 0x5154 ( 0x0020 ) 
	struct FImage                                      char_rot_Left_focus;                              		// 0x5174 ( 0x0020 ) 
	struct FImage                                      char_rot_Right_n;                                 		// 0x5194 ( 0x0020 ) 
	struct FImage                                      char_rot_Right_on;                                		// 0x51B4 ( 0x0020 ) 
	struct FImage                                      char_rot_Right_cli;                               		// 0x51D4 ( 0x0020 ) 
	struct FImage                                      char_rot_Right_Dis;                               		// 0x51F4 ( 0x0020 ) 
	struct FImage                                      char_rot_Right_focus;                             		// 0x5214 ( 0x0020 ) 
	struct FImage                                      MainWeapon_List_Bg;                               		// 0x5234 ( 0x0020 ) 
	struct FImage                                      MainWeapon_List_n;                                		// 0x5254 ( 0x0020 ) 
	struct FImage                                      MainWeapon_List_on;                               		// 0x5274 ( 0x0020 ) 
	struct FImage                                      MainWeapon_List_cli;                              		// 0x5294 ( 0x0020 ) 
	struct FImage                                      MainWeapon_List_Dis;                              		// 0x52B4 ( 0x0020 ) 
	struct FImage                                      MainWeapon_List_focus;                            		// 0x52D4 ( 0x0020 ) 
	struct FImage                                      sgau_weap_gauge_y;                                		// 0x52F4 ( 0x0020 ) 
	struct FImage                                      sgau_weap_incre_g;                                		// 0x5314 ( 0x0020 ) 
	struct FImage                                      sgau_weap_decre_r;                                		// 0x5334 ( 0x0020 ) 
	struct FImage                                      new_Page_Thema;                                   		// 0x5354 ( 0x0020 ) 
	struct FImage                                      Store_bg;                                         		// 0x5374 ( 0x0020 ) 
	struct FImage                                      Charge_Cash_Btn_n;                                		// 0x5394 ( 0x0020 ) 
	struct FImage                                      Charge_Cash_Btn_on;                               		// 0x53B4 ( 0x0020 ) 
	struct FImage                                      Charge_Cash_Btn_cli;                              		// 0x53D4 ( 0x0020 ) 
	struct FImage                                      Charge_Cash_Btn_focus;                            		// 0x53F4 ( 0x0020 ) 
	struct FImage                                      Charge_Cash_Btn_Dis;                              		// 0x5414 ( 0x0020 ) 
	struct FImage                                      Billing_Btn_n;                                    		// 0x5434 ( 0x0020 ) 
	struct FImage                                      Quest_Info_BG;                                    		// 0x5454 ( 0x0020 ) 
	struct FImage                                      Quest_PC_B_Mark;                                  		// 0x5474 ( 0x0020 ) 
	struct FImage                                      Quest_Day_Mark;                                   		// 0x5494 ( 0x0020 ) 
	struct FImage                                      Quest_Event_Mark;                                 		// 0x54B4 ( 0x0020 ) 
	struct FImage                                      Quest_PC_Y_Mark;                                  		// 0x54D4 ( 0x0020 ) 
	struct FImage                                      Quest_Basic_Tr_Mark;                              		// 0x54F4 ( 0x0020 ) 
	struct FImage                                      Quest_List_n;                                     		// 0x5514 ( 0x0020 ) 
	struct FImage                                      Quest_List_On;                                    		// 0x5534 ( 0x0020 ) 
	struct FImage                                      Quest_List_ci;                                    		// 0x5554 ( 0x0020 ) 
	struct FImage                                      Quest_List_focus;                                 		// 0x5574 ( 0x0020 ) 
	struct FImage                                      Quest_List_Dis;                                   		// 0x5594 ( 0x0020 ) 
	struct FImage                                      RoomLoby_BG_Deco;                                 		// 0x55B4 ( 0x0020 ) 
	struct FImage                                      Store_Item_Prop_Mark_Own;                         		// 0x55D4 ( 0x0020 ) 
	struct FImage                                      Store_Item_Prop_Mark_Best;                        		// 0x55F4 ( 0x0020 ) 
	struct FImage                                      Store_Item_Prop_Mark_New;                         		// 0x5614 ( 0x0020 ) 
	struct FImage                                      Store_Item_Prop_Mark_Cool;                        		// 0x5634 ( 0x0020 ) 
	struct FImage                                      WaitRoom_List_n;                                  		// 0x5654 ( 0x0020 ) 
	struct FImage                                      WaitRoom_List_On;                                 		// 0x5674 ( 0x0020 ) 
	struct FImage                                      WaitRoom_List_cli;                                		// 0x5694 ( 0x0020 ) 
	struct FImage                                      WaitRoom_List_Me;                                 		// 0x56B4 ( 0x0020 ) 
	struct FImage                                      WaitRoom_List_Focus;                              		// 0x56D4 ( 0x0020 ) 
	struct FImage                                      WaitRoom_Team_AF_n;                               		// 0x56F4 ( 0x0020 ) 
	struct FImage                                      WaitRoom_Team_AF_On;                              		// 0x5714 ( 0x0020 ) 
	struct FImage                                      WaitRoom_Team_AF_Cli;                             		// 0x5734 ( 0x0020 ) 
	struct FImage                                      WaitRoom_Team_RSA_n;                              		// 0x5754 ( 0x0020 ) 
	struct FImage                                      WaitRoom_Team_RSA_On;                             		// 0x5774 ( 0x0020 ) 
	struct FImage                                      WaitRoom_Team_RSA_Cli;                            		// 0x5794 ( 0x0020 ) 
	struct FImage                                      WaitRoom_StartGame_n;                             		// 0x57B4 ( 0x0020 ) 
	struct FImage                                      WaitRoom_StartGame_on;                            		// 0x57D4 ( 0x0020 ) 
	struct FImage                                      WaitRoom_StartGame_cli;                           		// 0x57F4 ( 0x0020 ) 
	struct FImage                                      WaitRoom_RoomInfo_n;                              		// 0x5814 ( 0x0020 ) 
	struct FImage                                      WaitRoom_RoomInfo_on;                             		// 0x5834 ( 0x0020 ) 
	struct FImage                                      WaitRoom_RoomInfo_cli;                            		// 0x5854 ( 0x0020 ) 
	struct FImage                                      WaitRoom_RoomInof_SubBG;                          		// 0x5874 ( 0x0020 ) 
	struct FImage                                      ImageList_On;                                     		// 0x5894 ( 0x0020 ) 
	struct FImage                                      GameResult_Win_AF_BG;                             		// 0x58B4 ( 0x0020 ) 
	struct FImage                                      GameResult_Lose_AF_BG;                            		// 0x58D4 ( 0x0020 ) 
	struct FImage                                      GameResult_Win_RSA_BG;                            		// 0x58F4 ( 0x0020 ) 
	struct FImage                                      GameResult_Lose_RSA_BG;                           		// 0x5914 ( 0x0020 ) 
	struct FImage                                      GameResult_Win_AF_Mark;                           		// 0x5934 ( 0x0020 ) 
	struct FImage                                      GameResult_Win_RSA_Mark;                          		// 0x5954 ( 0x0020 ) 
	struct FImage                                      GameResult_MyInfo_BG;                             		// 0x5974 ( 0x0020 ) 
	struct FImage                                      GameResult_Deco_BG;                               		// 0x5994 ( 0x0020 ) 
	struct FImage                                      GameResult_Top_BG;                                		// 0x59B4 ( 0x0020 ) 
	struct FImage                                      GameResult_Private_BG;                            		// 0x59D4 ( 0x0020 ) 
	struct FImage                                      GameResult_Private_Mark;                          		// 0x59F4 ( 0x0020 ) 
	struct FImage                                      GameResult_Close_Btn_n;                           		// 0x5A14 ( 0x0020 ) 
	struct FImage                                      GameResult_Close_Btn_On;                          		// 0x5A34 ( 0x0020 ) 
	struct FImage                                      GameResult_Close_Btn_Cli;                         		// 0x5A54 ( 0x0020 ) 
	struct FImage                                      GameResult_Close_Btn_Dis;                         		// 0x5A74 ( 0x0020 ) 
	struct FImage                                      Option_Panel_BG;                                  		// 0x5A94 ( 0x0020 ) 
	struct FImage                                      Option_Init_Btn_n;                                		// 0x5AB4 ( 0x0020 ) 
	struct FImage                                      Option_Init_Btn_on;                               		// 0x5AD4 ( 0x0020 ) 
	struct FImage                                      Option_Init_Btn_cli;                              		// 0x5AF4 ( 0x0020 ) 
	struct FImage                                      Option_Init_Btn_block;                            		// 0x5B14 ( 0x0020 ) 
	struct FImage                                      MakeRoom_Win_BG;                                  		// 0x5B34 ( 0x0020 ) 
	struct FImage                                      MakeRoom_Input_Text_BG;                           		// 0x5B54 ( 0x0020 ) 
	struct FImage                                      scrol_new_up_n;                                   		// 0x5B74 ( 0x0020 ) 
	struct FImage                                      scrol_new_up_on;                                  		// 0x5B94 ( 0x0020 ) 
	struct FImage                                      scrol_new_up_cli;                                 		// 0x5BB4 ( 0x0020 ) 
	struct FImage                                      scrol_new_up_dis;                                 		// 0x5BD4 ( 0x0020 ) 
	struct FImage                                      scrol_new_dn_n;                                   		// 0x5BF4 ( 0x0020 ) 
	struct FImage                                      scrol_new_dn_on;                                  		// 0x5C14 ( 0x0020 ) 
	struct FImage                                      scrol_new_dn_cli;                                 		// 0x5C34 ( 0x0020 ) 
	struct FImage                                      scrol_new_dn_dis;                                 		// 0x5C54 ( 0x0020 ) 
	struct FImage                                      scrol_new_grip_n;                                 		// 0x5C74 ( 0x0020 ) 
	struct FImage                                      scrol_new_grip_on;                                		// 0x5C94 ( 0x0020 ) 
	struct FImage                                      scrol_new_grip_cli;                               		// 0x5CB4 ( 0x0020 ) 
	struct FImage                                      scrol_new_grip_dis;                               		// 0x5CD4 ( 0x0020 ) 
	struct FImage                                      Scrol_New_BG;                                     		// 0x5CF4 ( 0x0020 ) 
	struct FImage                                      slider_new_back;                                  		// 0x5D14 ( 0x0020 ) 
	struct FImage                                      slider_new_grip_n;                                		// 0x5D34 ( 0x0020 ) 
	struct FImage                                      slider_new_grip_on;                               		// 0x5D54 ( 0x0020 ) 
	struct FImage                                      slider_new_grip_cli;                              		// 0x5D74 ( 0x0020 ) 
	struct FImage                                      slider_new_grip_dis;                              		// 0x5D94 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_1_n;                       		// 0x5DB4 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_1_on;                      		// 0x5DD4 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_1_cli;                     		// 0x5DF4 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_1_dis;                     		// 0x5E14 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_2_n;                       		// 0x5E34 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_2_on;                      		// 0x5E54 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_2_cli;                     		// 0x5E74 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_2_dis;                     		// 0x5E94 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_3_n;                       		// 0x5EB4 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_3_on;                      		// 0x5ED4 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_3_cli;                     		// 0x5EF4 ( 0x0020 ) 
	struct FImage                                      Button_Graphic_Opt_all_3_dis;                     		// 0x5F14 ( 0x0020 ) 
	struct FImage                                      Button_Control_Opt_all_n;                         		// 0x5F34 ( 0x0020 ) 
	struct FImage                                      Button_Control_Opt_all_on;                        		// 0x5F54 ( 0x0020 ) 
	struct FImage                                      Button_Control_Opt_all_cli;                       		// 0x5F74 ( 0x0020 ) 
	struct FImage                                      Button_Control_Opt_all_dis;                       		// 0x5F94 ( 0x0020 ) 
	struct FImage                                      List_New_Opt_backnlist;                           		// 0x5FB4 ( 0x0020 ) 
	struct FImage                                      List_New_Opt_n;                                   		// 0x5FD4 ( 0x0020 ) 
	struct FImage                                      List_New_Opt_on;                                  		// 0x5FF4 ( 0x0020 ) 
	struct FImage                                      List_New_Opt_cli;                                 		// 0x6014 ( 0x0020 ) 
	struct FImage                                      List_New_Opt_dis;                                 		// 0x6034 ( 0x0020 ) 
	struct FImage                                      Combo_New_Butt_n;                                 		// 0x6054 ( 0x0020 ) 
	struct FImage                                      Combo_New_Butt_on;                                		// 0x6074 ( 0x0020 ) 
	struct FImage                                      Combo_New_Butt_cli;                               		// 0x6094 ( 0x0020 ) 
	struct FImage                                      Combo_New_Butt_dis;                               		// 0x60B4 ( 0x0020 ) 
	struct FImage                                      Combo_New_Expand;                                 		// 0x60D4 ( 0x0020 ) 
	struct FImage                                      Combo_New_Expand_on;                              		// 0x60F4 ( 0x0020 ) 
	struct FImage                                      Combo_New_Back;                                   		// 0x6114 ( 0x0020 ) 
	struct FImage                                      ItemPopup_Bgdeco;                                 		// 0x6134 ( 0x0020 ) 
	struct FImage                                      ItemPopup_ItemInfo_back;                          		// 0x6154 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_bgdeco;                               		// 0x6174 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_Btn_Rollback_n;                       		// 0x6194 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_Btn_Rollback_cli;                     		// 0x61B4 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_Btn_Rollback_on;                      		// 0x61D4 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_Btn_Rollback_dis;                     		// 0x61F4 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_List_BG_n;                            		// 0x6214 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_List_BG_on;                           		// 0x6234 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_List_BG_cli;                          		// 0x6254 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_List_BG_Focus;                        		// 0x6274 ( 0x0020 ) 
	struct FImage                                      ItemRemodel_Buy_bgdeco;                           		// 0x6294 ( 0x0020 ) 
	struct FImage                                      QuickEnterRoom_Win_BG;                            		// 0x62B4 ( 0x0020 ) 
	struct FImage                                      Icon_ServeMode[ 0x07 ];                           		// 0x62D4 ( 0x00E0 ) 
	struct FImage                                      img_Tilte;                                        		// 0x63B4 ( 0x0020 ) 
	struct FImage                                      All_Map_Img;                                      		// 0x63D4 ( 0x0020 ) 
	struct FImage                                      newMap_Icon;                                      		// 0x63F4 ( 0x0020 ) 
	struct FImage                                      BillingPopup_Deco_Img;                            		// 0x6414 ( 0x0020 ) 
	struct FImage                                      Expired_Deco_Img;                                 		// 0x6434 ( 0x0020 ) 
	struct FImage                                      Coupon_Bg_Img;                                    		// 0x6454 ( 0x0020 ) 
	struct FImage                                      Coupon_oversquare_Img;                            		// 0x6474 ( 0x0020 ) 

	// UScript Functions
	 int                       BounsIDToBounsIconIndex ( int i );                		//  GUIWarfareControls.BTUIResourcePoolHK.BounsIDToBounsIconIndex
}; // Size: 0x6468

// Class GUIWarfareControls.BTWindowSelectHK
class DLL_IMPORT UBTWindowSelectHK : public UBTWindowHK
{
public:
	unsigned long                                      bChangeText:1;                                    		// 0x04AC ( 0x0004 )  [0x00000001]
	struct FFloatBox                                   fbLabelInfo;                                      		// 0x04B0 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelInfo;                                        		// 0x04C0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 bool                      Internal_OnKeyEvent ( float Delta, unsigned char* key, unsigned char* Action );		//  GUIWarfareControls.BTWindowSelectHK.Internal_OnKeyEvent
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTWindowSelectHK.Internal_OnPreDraw
	 void                      ShowWindow ( class UGUIController* con, struct FString Title, struct FString Msg, struct FString btnOk, struct FString btnCancel );		//  GUIWarfareControls.BTWindowSelectHK.ShowWindow
	 void                      SetData ( struct FString Title, int titlepadding, struct FString Msg, struct FString btnOk, struct FString btnCancel );		//  GUIWarfareControls.BTWindowSelectHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowSelectHK.InitComponent
}; // Size: 0x0018

// Class GUIWarfareControls.BTWindowDefineSelectHK
class DLL_IMPORT UBTWindowDefineSelectHK : public UBTWindowSelectHK
{
public:
	struct FString                                     strClientDefaultTitle;                            		// 0x04C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClientTitle[ 0x32 ];                           		// 0x04D0 ( 0x0258 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClientDefine[ 0x32 ];                          		// 0x0728 ( 0x0258 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ShowInfo ( class UGUIController* con, int Code, struct FString arg0, struct FString arg1, struct FString arg2 );		//  GUIWarfareControls.BTWindowDefineSelectHK.ShowInfo
}; // Size: 0x04BC

// Class GUIWarfareControls.BTChatEditBoxHK
class DLL_IMPORT UBTChatEditBoxHK : public UBTEditBoxHK
{
public:

	// UScript Functions
	 bool                      CheckPastedTextCondition ( struct FString Text ); 		//  GUIWarfareControls.BTChatEditBoxHK.CheckPastedTextCondition
	 bool                      CheckKeyInputCondition ( struct FString st );     		//  GUIWarfareControls.BTChatEditBoxHK.CheckKeyInputCondition
}; // Size: 0x0000

// Class GUIWarfareControls.PageOnWindowManager
class DLL_IMPORT UPageOnWindowManager : public UObject
{
public:
	unsigned long                                      bProcess:1;                                       		// 0x002C ( 0x0004 )  [0x00000001]
	class UGUIController*                              Controller;                                       		// 0x0030 ( 0x0004 ) 
	class UPageOnWindow*                               Pow[ 0x1E ];                                      		// 0x0034 ( 0x0078 ) 

	// UScript Functions
	 class UBTWindowHK*        Pop ( unsigned char destpage );                   		//  GUIWarfareControls.PageOnWindowManager.Pop
	 class UBTWindowHK*        back ( unsigned char destpage );                  		//  GUIWarfareControls.PageOnWindowManager.back
	 class UBTWindowHK*        Last ( unsigned char destpage );                  		//  GUIWarfareControls.PageOnWindowManager.Last
	 bool                      RemoveWindowOnStack ( unsigned char destpage, struct FName WindowName, bool bAll );		//  GUIWarfareControls.PageOnWindowManager.RemoveWindowOnStack
	 class UBTWindowHK*        FindWindowOnStack ( unsigned char destpage, struct FName WindowName );		//  GUIWarfareControls.PageOnWindowManager.FindWindowOnStack
	 int                       ListLen ( unsigned char destpage );               		//  GUIWarfareControls.PageOnWindowManager.ListLen
	 void                      Push ( unsigned char destpage, class UBTWindowHK* N, bool bUseInsert, int insertPos, bool bUseInsertAtName, struct FName nobject );		//  GUIWarfareControls.PageOnWindowManager.Push
	 class UBTWindowHK*        CreateAndPush ( unsigned char destpage, struct FString WindowName, bool bUseInsert, int insertPos, bool bUseInsertAtName, struct FName nobject );		//  GUIWarfareControls.PageOnWindowManager.CreateAndPush
	 void                      CloseAndClear (  );                               		//  GUIWarfareControls.PageOnWindowManager.CloseAndClear
	 void                      Init ( class UGUIController* C );                 		//  GUIWarfareControls.PageOnWindowManager.Init
	 void                      StopProcess (  );                                 		//  GUIWarfareControls.PageOnWindowManager.StopProcess
	 void                      StartProcess (  );                                		//  GUIWarfareControls.PageOnWindowManager.StartProcess
	 bool                      IsAvailable (  );                                 		//  GUIWarfareControls.PageOnWindowManager.IsAvailable
}; // Size: 0x0080

// Class GUIWarfareControls.BTOwnerDrawCaptionButtonHK
class DLL_IMPORT UBTOwnerDrawCaptionButtonHK : public UGUIButton
{
public:
	float                                              TimeOut;                                          		// 0x02F4 ( 0x0004 ) 
	unsigned long                                      bSetTimeOut:1;                                    		// 0x02F8 ( 0x0004 )  [0x00000001]
	int                                                CanvasStyle;                                      		// 0x02FC ( 0x0004 ) 
	float                                              CurrentTimeSecond;                                		// 0x0300 ( 0x0004 ) 
	float                                              LastTimeSecond;                                   		// 0x0304 ( 0x0004 ) 
	int                                                CaptionTopPadding[ 0x06 ];                        		// 0x0308 ( 0x0018 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	unsigned long                                      bActiveCursor:1;                                  		// 0x0320 ( 0x0004 )  [0x00000001]
	unsigned long                                      bSelect:1;                                        		// 0x0320 ( 0x0004 )  [0x00000002]
	unsigned long                                      bSelectHighlight:1;                               		// 0x0320 ( 0x0004 )  [0x00000004]
	unsigned long                                      bDisable:1;                                       		// 0x0320 ( 0x0004 )  [0x00000008]
	int                                                ButtonID;                                         		// 0x0324 ( 0x0004 ) 
	int                                                Extra;                                            		// 0x0328 ( 0x0004 ) 
	int                                                FontSize[ 0x06 ];                                 		// 0x032C ( 0x0018 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontColor[ 0x06 ];                                		// 0x0344 ( 0x0018 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontShadowColor[ 0x06 ];                          		// 0x035C ( 0x0018 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                CaptionPadding[ 0x04 ];                           		// 0x0374 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	unsigned char                                      CaptionDrawType;                                  		// 0x0384 ( 0x0001 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     Caption;                                          		// 0x0388 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FImage                                      buttonImage[ 0x06 ];                              		// 0x0394 ( 0x00C0 ) 
	struct FImage                                      BackgroundImage;                                  		// 0x0454 ( 0x0020 ) 
	struct FImage                                      BlingImgBig;                                      		// 0x0474 ( 0x0020 ) 
	class UBTRODecorateStringHK*                       btToolTip;                                        		// 0x0494 ( 0x0004 ) 
	struct FString                                     strTooltip;                                       		// 0x0498 ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned long                                      isShowToolTip:1;                                  		// 0x04A4 ( 0x0004 )  [0x00000001]
	float                                              CursorUSize;                                      		// 0x04A8 ( 0x0004 ) 
	float                                              CursorVSize;                                      		// 0x04AC ( 0x0004 ) 
	unsigned long                                      isFlicker:1;                                      		// 0x04B0 ( 0x0004 )  [0x00000001]
	struct FBtrDouble                                  dbUniqID;                                         		// 0x04B4 ( 0x0008 ) 
	struct FScriptDelegate                             __OnTimeOut__Delegate;                            		// 0x04BC ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InternalDeactivate (  );                          		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.InternalDeactivate
	 void                      InternalActivate (  );                            		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.InternalActivate
	 void                      OnRendered ( class UCanvas* C );                  		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.OnRendered
	 void                      DrawToolTip ( class UCanvas* C );                 		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.DrawToolTip
	 struct FFloatBox          GetTooltipPos ( int tooltipWidth, int tooltipHeight, int nOffsetX, int nOffsetY );		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.GetTooltipPos
	 void                      SetFontDrawType ( unsigned char dt );             		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetFontDrawType
	 void                      SetFontSizeAll ( int Size );                      		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetFontSizeAll
	 void                      SetFontShadowColorAll ( class FColor Col );       		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetFontShadowColorAll
	 void                      SetAlphaValue ( float A );                        		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetAlphaValue
	 void                      SetFontColorAll ( class FColor Col );             		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetFontColorAll
	 void                      SetDefaultNonSelectFontColor (  );                		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultNonSelectFontColor
	 void                      SetDefaultListFontColor (  );                     		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultListFontColor
	 void                      SetDefaultListTopButtonFontColor (  );            		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultListTopButtonFontColor
	 void                      SetDefaultMTabButtonFontColor (  );               		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultMTabButtonFontColor
	 void                      SetPaidItemTabButtonFontColor (  );               		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetPaidItemTabButtonFontColor
	 void                      SetDefaultTabButtonFontColor (  );                		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultTabButtonFontColor
	 void                      SetDefaultRadioButtonFontColor (  );              		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultRadioButtonFontColor
	 void                      SetDefaultPageListButtonColor (  );               		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultPageListButtonColor
	 void                      SetDefaultBigButtonFontColor (  );                		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultBigButtonFontColor
	 void                      SetDefaultFontColor (  );                         		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultFontColor
	 void                      LeftPaddingPerc ( float perc );                   		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.LeftPaddingPerc
	 void                      SetDefaultPaintingButtonImage (  );               		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultPaintingButtonImage
	 void                      SetDefaultListButtonImage (  );                   		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultListButtonImage
	 void                      SetDefaultOptionInitButtonImage (  );             		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultOptionInitButtonImage
	 void                      SetDefaultRArrowButtonImage (  );                 		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultRArrowButtonImage
	 void                      SetDefaultLArrowButtonImage (  );                 		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultLArrowButtonImage
	 void                      SetDefaultRRotateRSAButtonImage (  );             		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultRRotateRSAButtonImage
	 void                      SetDefaultLRotateAFButtonImage (  );              		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultLRotateAFButtonImage
	 void                      SetDefaultRRotateButtonImage (  );                		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultRRotateButtonImage
	 void                      SetDefaultLRotateButtonImage (  );                		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultLRotateButtonImage
	 void                      SetDefaultBigTabButtonImage (  );                 		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultBigTabButtonImage
	 void                      SetPaidItemTabButtonImage (  );                   		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetPaidItemTabButtonImage
	 void                      SetDefaultTabButtonImageNotDis (  );              		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultTabButtonImageNotDis
	 void                      SetDefaultTabButtonImage (  );                    		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultTabButtonImage
	 void                      SetDefaultSliderGripButtonImage (  );             		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultSliderGripButtonImage
	 void                      SetNewSliderGripButtonImage (  );                 		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetNewSliderGripButtonImage
	 void                      SetDefaultMButtonImage (  );                      		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultMButtonImage
	 void                      SetDefaultBigButtonImage (  );                    		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultBigButtonImage
	 void                      SetTabButtonFontColor (  );                       		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetTabButtonFontColor
	 void                      SetSmallTabButtonImage (  );                      		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetSmallTabButtonImage
	 void                      SetMidTabButtonImage (  );                        		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetMidTabButtonImage
	 void                      SetMsgTabButtonImage (  );                        		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetMsgTabButtonImage
	 void                      SetChatTabButtonImage (  );                       		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetChatTabButtonImage
	 void                      SetBigTabButtonImage (  );                        		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetBigTabButtonImage
	 void                      SetGameStartBtnImage (  );                        		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetGameStartBtnImage
	 void                      SetDefaultQuickSlotButtonImage (  );              		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultQuickSlotButtonImage
	 void                      SetControlKeyBtnImage (  );                       		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetControlKeyBtnImage
	 void                      SetGraphicAdvanceBtnImage (  );                   		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetGraphicAdvanceBtnImage
	 void                      SetGraphicUpDownBtnImage (  );                    		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetGraphicUpDownBtnImage
	 void                      SetWaitRoomInfoBtnImage (  );                     		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetWaitRoomInfoBtnImage
	 void                      SetDefaultButtonImage (  );                       		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultButtonImage
	 void                      SetDefaultCheckBoxImage (  );                     		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultCheckBoxImage
	 void                      SetDefaultRadioImage (  );                        		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.SetDefaultRadioImage
	 void                      StopTimeOut ( float SetTime );                    		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.StopTimeOut
	 void                      StartTimeOut ( float SetTime );                   		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.StartTimeOut
	 void                      OnTimeOut ( class UGUIComponent* Sender );        		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.OnTimeOut
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTOwnerDrawCaptionButtonHK.InitComponent
}; // Size: 0x01D0

// Class GUIWarfareControls.BTOwnerDrawImageHK
class DLL_IMPORT UBTOwnerDrawImageHK : public UFloatingImage
{
public:
	int                                                CanvasStyle;                                      		// 0x02FC ( 0x0004 ) 
	int                                                LabelID;                                          		// 0x0300 ( 0x0004 ) 
	float                                              CurrentTimeSecond;                                		// 0x0304 ( 0x0004 ) 
	float                                              LastTimeSecond;                                   		// 0x0308 ( 0x0004 ) 
	unsigned long                                      bUseFontScaleValue:1;                             		// 0x030C ( 0x0004 )  [0x00000001]
	float                                              FontScaleValue;                                   		// 0x0310 ( 0x0004 ) 
	int                                                FontStyle[ 0x05 ];                                		// 0x0314 ( 0x0014 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                FontSize[ 0x05 ];                                 		// 0x0328 ( 0x0014 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontColor[ 0x05 ];                                		// 0x033C ( 0x0014 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontShadowColor[ 0x05 ];                          		// 0x0350 ( 0x0014 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                CaptionPadding[ 0x04 ];                           		// 0x0364 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	unsigned char                                      CaptionDrawType;                                  		// 0x0374 ( 0x0001 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     Caption;                                          		// 0x0378 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FImage                                      BackgroundImage;                                  		// 0x0384 ( 0x0020 ) 
	unsigned long                                      bDrawToolTips:1;                                  		// 0x03A4 ( 0x0004 )  [0x00000001][ CPF_Edit ]
	class UBTRODecorateStringHK*                       decoToolTips;                                     		// 0x03A8 ( 0x0004 ) [ CPF_Edit ]
	struct FBtrDouble                                  UniqueID;                                         		// 0x03AC ( 0x0008 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTOwnerDrawImageHK.Internal_OnRendered
	 void                      SetFontDrawType ( unsigned char dt );             		//  GUIWarfareControls.BTOwnerDrawImageHK.SetFontDrawType
	 void                      SetFontShadowColorAll ( class FColor Col );       		//  GUIWarfareControls.BTOwnerDrawImageHK.SetFontShadowColorAll
	 void                      SetFontAndImageColorAll ( class FColor Col );     		//  GUIWarfareControls.BTOwnerDrawImageHK.SetFontAndImageColorAll
	 void                      SetFontColorAll ( class FColor Col );             		//  GUIWarfareControls.BTOwnerDrawImageHK.SetFontColorAll
	 void                      SetFontSizeAll ( int Size );                      		//  GUIWarfareControls.BTOwnerDrawImageHK.SetFontSizeAll
	 void                      SetDefaultFontColor (  );                         		//  GUIWarfareControls.BTOwnerDrawImageHK.SetDefaultFontColor
	 void                      SetToolTipsText ( struct FString t );             		//  GUIWarfareControls.BTOwnerDrawImageHK.SetToolTipsText
}; // Size: 0x00B8

// Class GUIWarfareControls.BTMultiLineEditBoxHK
class DLL_IMPORT UBTMultiLineEditBoxHK : public UGUIEditBox
{
public:
	unsigned long                                      bActiveCursor:1;                                  		// 0x0368 ( 0x0004 )  [0x00000001]
	class UCanvas*                                     saveC;                                            		// 0x036C ( 0x0004 ) 
	class FColor                                       CursorColor;                                      		// 0x0370 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       SelectionColor;                                   		// 0x0374 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FImage                                      bgImg;                                            		// 0x0378 ( 0x0020 ) 
	struct FImage                                      cursorImg;                                        		// 0x0398 ( 0x0020 ) 
	struct FImage                                      selectionImg;                                     		// 0x03B8 ( 0x0020 ) 
	int                                                FontSize[ 0x05 ];                                 		// 0x03D8 ( 0x0014 ) 
	class FColor                                       FontColor[ 0x05 ];                                		// 0x03EC ( 0x0014 ) 
	class FColor                                       FontShadowColor[ 0x05 ];                          		// 0x0400 ( 0x0014 ) 
	int                                                CaretLinePos;                                     		// 0x0414 ( 0x0004 ) 
	class TArray< int >                                sumLineTextCount;                                 		// 0x0418 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< int >                                sumLineW;                                         		// 0x0424 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< int >                                sumLineHT;                                        		// 0x0430 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     textStrVis;                                       		// 0x043C ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< int >                                bEndofNewLineCharacter;                           		// 0x0448 ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned long                                      bUndo:1;                                          		// 0x0454 ( 0x0004 )  [0x00000001]
	int                                                UndoCaretPos;                                     		// 0x0458 ( 0x0004 ) 
	struct FString                                     UndoTextStr;                                      		// 0x045C ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                VisibleLineCount;                                 		// 0x0468 ( 0x0004 ) 
	unsigned long                                      bSelectionMode:1;                                 		// 0x046C ( 0x0004 )  [0x00000001]
	unsigned long                                      bMouseFirstPress:1;                               		// 0x046C ( 0x0004 )  [0x00000002]
	unsigned long                                      bMousePressed:1;                                  		// 0x046C ( 0x0004 )  [0x00000004]
	struct FSelectionArea                              SelArea;                                          		// 0x0470 ( 0x0008 ) 
	struct FScriptDelegate                             __OnChat__Delegate;                               		// 0x0478 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InternalDeactivate (  );                          		//  GUIWarfareControls.BTMultiLineEditBoxHK.InternalDeactivate
	 void                      InternalActivate (  );                            		//  GUIWarfareControls.BTMultiLineEditBoxHK.InternalActivate
	 bool                      InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State );		//  GUIWarfareControls.BTMultiLineEditBoxHK.InternalOnKeyEvent
	 bool                      CheckKeyInputCondition ( struct FString st );     		//  GUIWarfareControls.BTMultiLineEditBoxHK.CheckKeyInputCondition
	 bool                      InternalOnKeyType ( struct FString Unicode, unsigned char* key );		//  GUIWarfareControls.BTMultiLineEditBoxHK.InternalOnKeyType
	 struct FString            ConvertIllegal ( struct FString inputstr );       		//  GUIWarfareControls.BTMultiLineEditBoxHK.ConvertIllegal
	 int                       CaretBinarySearch ( int vlc, int lCursor, int rCursor, float mx );		//  GUIWarfareControls.BTMultiLineEditBoxHK.CaretBinarySearch
	 int                       MousePosToCaretPos ( float mx, float my );        		//  GUIWarfareControls.BTMultiLineEditBoxHK.MousePosToCaretPos
	 void                      UpdateLineInfo (  );                              		//  GUIWarfareControls.BTMultiLineEditBoxHK.UpdateLineInfo
	 void                      OnMousePressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTMultiLineEditBoxHK.OnMousePressed
	 void                      OnMouseRelease ( class UGUIComponent* Sender );   		//  GUIWarfareControls.BTMultiLineEditBoxHK.OnMouseRelease
	 void                      OnChange ( class UGUIComponent* Sender );         		//  GUIWarfareControls.BTMultiLineEditBoxHK.OnChange
	 void                      CaculateVisibleText (  );                         		//  GUIWarfareControls.BTMultiLineEditBoxHK.CaculateVisibleText
	 void                      DrawIMEInfo ( class UCanvas* C, float CursorWidth );		//  GUIWarfareControls.BTMultiLineEditBoxHK.DrawIMEInfo
	 bool                      OwnerDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTMultiLineEditBoxHK.OwnerDraw
	 int                       CaretPosToLinePos ( int pos );                    		//  GUIWarfareControls.BTMultiLineEditBoxHK.CaretPosToLinePos
	 void                      Clear (  );                                       		//  GUIWarfareControls.BTMultiLineEditBoxHK.Clear
	 void                      SetVisibleLineCount ( int lc );                   		//  GUIWarfareControls.BTMultiLineEditBoxHK.SetVisibleLineCount
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTMultiLineEditBoxHK.InitComponent
	 void                      SetText ( struct FString Text );                  		//  GUIWarfareControls.BTMultiLineEditBoxHK.SetText
	 void                      InputSelectionPos ( int pos );                    		//  GUIWarfareControls.BTMultiLineEditBoxHK.InputSelectionPos
	 void                      ResetSelectionPos ( int pos );                    		//  GUIWarfareControls.BTMultiLineEditBoxHK.ResetSelectionPos
	 struct FString            GetSelectionText (  );                            		//  GUIWarfareControls.BTMultiLineEditBoxHK.GetSelectionText
	 void                      RemoveSelectionText (  );                         		//  GUIWarfareControls.BTMultiLineEditBoxHK.RemoveSelectionText
	 void                      ProcessUndo ( bool bForceBack );                  		//  GUIWarfareControls.BTMultiLineEditBoxHK.ProcessUndo
	 void                      SaveUndo (  );                                    		//  GUIWarfareControls.BTMultiLineEditBoxHK.SaveUndo
	 void                      OnChat ( struct FString Text );                   		//  GUIWarfareControls.BTMultiLineEditBoxHK.OnChat
	 void                      SetFontSizeAll ( int Size );                      		//  GUIWarfareControls.BTMultiLineEditBoxHK.SetFontSizeAll
	 void                      SetSadowColor ( unsigned char _R, unsigned char _G, unsigned char _B, unsigned char _A );		//  GUIWarfareControls.BTMultiLineEditBoxHK.SetSadowColor
	 void                      SetFontColor ( unsigned char _R, unsigned char _G, unsigned char _B, unsigned char _A );		//  GUIWarfareControls.BTMultiLineEditBoxHK.SetFontColor
	 void                      SetDefaultFontColor (  );                         		//  GUIWarfareControls.BTMultiLineEditBoxHK.SetDefaultFontColor
}; // Size: 0x0118

// Class GUIWarfareControls.PageOnWindow
class DLL_IMPORT UPageOnWindow : public UObject
{
public:
	class UBTWindowHK*                                 Last;                                             		// 0x002C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class TArray< class UBTWindowHK* >                 WindowList;                                       		// 0x0030 ( 0x000C ) [ CPF_NeedCtorLink ]
}; // Size: 0x0010

// Class GUIWarfareControls.BTWindowErrorDefineHK
class DLL_IMPORT UBTWindowErrorDefineHK : public UBTWindowInfoHK
{
public:
	struct FString                                     strErrorTitle[ 0x02 ];                            		// 0x04C4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strErrorDefine[ 0x4B0 ];                          		// 0x04DC ( 0x3840 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      ShowErrorMsg ( class UGUIController* con, struct FString ErrorMsg, unsigned char titleID );		//  GUIWarfareControls.BTWindowErrorDefineHK.ShowErrorMsg
	 void                      ShowError ( class UGUIController* con, int errorCode, unsigned char titleID );		//  GUIWarfareControls.BTWindowErrorDefineHK.ShowError
	 struct FString            GetFormatString ( int Code, struct FString arg0, struct FString arg1, struct FString arg2 );		//  GUIWarfareControls.BTWindowErrorDefineHK.GetFormatString
	 bool                      ExceptionCondtion ( int errorCode );              		//  GUIWarfareControls.BTWindowErrorDefineHK.ExceptionCondtion
	 void                      SetContentText_Instance ( int Title, int Code, struct FString arg0, struct FString arg1, struct FString arg2, struct FString arg3 );		//  GUIWarfareControls.BTWindowErrorDefineHK.SetContentText_Instance
}; // Size: 0x3858

// Class GUIWarfareControls.BTWindowWebBrowser
class DLL_IMPORT UBTWindowWebBrowser : public UBTWindowHK
{
public:
	struct FString                                     strClose;                                         		// 0x04AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      AllowOpen ( struct FString MenuClass );           		//  GUIWarfareControls.BTWindowWebBrowser.AllowOpen
	 void                      OpenWeb ( struct FString openURL, int Left, int Top, int Right, int Bottom );		//  GUIWarfareControls.BTWindowWebBrowser.OpenWeb
	 void                      OpenWebWindow ( class UGUIController* Controller, struct FString openURL, int Left, int Top, int Right, int Bottom, struct FString Title );		//  GUIWarfareControls.BTWindowWebBrowser.OpenWebWindow
	 bool                      ButtonOK_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowWebBrowser.ButtonOK_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowWebBrowser.InitComponent
}; // Size: 0x000C

// Class GUIWarfareControls.BTTabPanelHK
class DLL_IMPORT UBTTabPanelHK : public UGUITabPanel
{
public:
	int                                                TabID;                                            		// 0x0330 ( 0x0004 ) 
	unsigned long                                      bSelect:1;                                        		// 0x0334 ( 0x0004 )  [0x00000001]

	// UScript Functions
	 class UBTOwnerDrawCaptionButtonHK* NewButtonComponent ( struct FFloatBox fbNewCompo, float RenderWeight );		//  GUIWarfareControls.BTTabPanelHK.NewButtonComponent
	 class UBTOwnerDrawImageHK* NewLabelComponent ( struct FFloatBox fbNewCompo, struct FImage bgImg, float RenderWeight );		//  GUIWarfareControls.BTTabPanelHK.NewLabelComponent
	 void                      TabGroups_OnSelect (  );                          		//  GUIWarfareControls.BTTabPanelHK.TabGroups_OnSelect
}; // Size: 0x0008

// Class GUIWarfareControls.BTTPChatHK
class DLL_IMPORT UBTTPChatHK : public UBTTabPanelHK
{
public:
	class UCanvas*                                     saveC;                                            		// 0x0338 ( 0x0004 ) 
	float                                              StartAniTime;                                     		// 0x033C ( 0x0004 ) 
	float                                              StartAniTimeOffset;                               		// 0x0340 ( 0x0004 ) 
	float                                              SlideAniTime;                                     		// 0x0344 ( 0x0004 ) 
	unsigned long                                      bShowChatState:1;                                 		// 0x0348 ( 0x0004 )  [0x00000001]
	unsigned long                                      bShowAni:1;                                       		// 0x0348 ( 0x0004 )  [0x00000002]
	class TArray< struct FFloatBox >                   fbButtonChatStateArray;                           		// 0x034C ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FFloatBox >                   fbSnapShotButtonChatStateArray;                   		// 0x0358 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UBTOwnerDrawCaptionButtonHK* > ButtonChatStateArray;                             		// 0x0364 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonChatState;                                  		// 0x0370 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         BackgroundImage[ 0x02 ];                          		// 0x0374 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UTabControlMocker*                           TabControl;                                       		// 0x037C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class TArray< class UBTOwnerDrawCaptionButtonHK* > ButtonChat;                                       		// 0x0380 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UBTAutoScrollListHK* >         ASLChat;                                          		// 0x038C ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTChatEditBoxHK*                            InputBox;                                         		// 0x0398 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strChatState[ 0x07 ];                             		// 0x039C ( 0x0054 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAll;                                           		// 0x03F0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strWhisper;                                       		// 0x03FC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClan;                                          		// 0x0408 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class TArray< struct FColoredChatText >            ccText;                                           		// 0x0414 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChangeTab_OnClick__Delegate;                    		// 0x0420 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnChageChatMode__Delegate;                      		// 0x0428 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_DeActivate (  );                         		//  GUIWarfareControls.BTTPChatHK.Internal_DeActivate
	 bool                      Internal_OnPostDraw ( class UCanvas* C );         		//  GUIWarfareControls.BTTPChatHK.Internal_OnPostDraw
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPChatHK.Internal_OnPreDraw
	 struct FFloatBox          FloatBoxMultiply ( float B, struct FFloatBox* A );		//  GUIWarfareControls.BTTPChatHK.FloatBoxMultiply
	 struct FFloatBox          FloatBoxSubstract ( struct FFloatBox* A, struct FFloatBox* B );		//  GUIWarfareControls.BTTPChatHK.FloatBoxSubstract
	 struct FFloatBox          FloatBoxAdd ( struct FFloatBox* A, struct FFloatBox* B );		//  GUIWarfareControls.BTTPChatHK.FloatBoxAdd
	 void                      ClearAll (  );                                    		//  GUIWarfareControls.BTTPChatHK.ClearAll
	 void                      SetChatState ( int ChatState );                   		//  GUIWarfareControls.BTTPChatHK.SetChatState
	 bool                      ButtonChatState_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPChatHK.ButtonChatState_OnClick
	 bool                      ButtonChatStateArray_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPChatHK.ButtonChatStateArray_OnClick
	 bool                      ButttonChat_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPChatHK.ButttonChat_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPChatHK.InitComponent
	 void                      SetEditText ( struct FString Chat );              		//  GUIWarfareControls.BTTPChatHK.SetEditText
	 void                      AddChatHistory ( int Panel, struct FString Chat, class FColor tcolor );		//  GUIWarfareControls.BTTPChatHK.AddChatHistory
	 void                      AddChatHistoryNoColor ( int Panel, struct FString Chat );		//  GUIWarfareControls.BTTPChatHK.AddChatHistoryNoColor
	 void                      OnChageChatMode ( int ChatMode );                 		//  GUIWarfareControls.BTTPChatHK.OnChageChatMode
	 void                      ChangeTab_OnClick ( int TabIndex );               		//  GUIWarfareControls.BTTPChatHK.ChangeTab_OnClick
}; // Size: 0x00F8

// Class GUIWarfareControls.BTWindowStateHK
class DLL_IMPORT UBTWindowStateHK : public UBTWindowHK
{
public:
	unsigned long                                      bChangeText:1;                                    		// 0x04AC ( 0x0004 )  [0x00000001]
	struct FFloatBox                                   fbBackgroundImage2;                               		// 0x04B0 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelInfo;                                        		// 0x04C0 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]

	// UScript Functions
	 bool                      Internal_OnKeyEvent ( float Delta, unsigned char* key, unsigned char* Action );		//  GUIWarfareControls.BTWindowStateHK.Internal_OnKeyEvent
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTWindowStateHK.Internal_OnPreDraw
	 void                      ShowWindow ( class UGUIController* con, struct FString Msg );		//  GUIWarfareControls.BTWindowStateHK.ShowWindow
	 void                      UpdateRoomLobbyWindow (  );                       		//  GUIWarfareControls.BTWindowStateHK.UpdateRoomLobbyWindow
	 void                      UpdateDefaultWindow (  );                         		//  GUIWarfareControls.BTWindowStateHK.UpdateDefaultWindow
	 void                      SetData ( struct FString Msg );                   		//  GUIWarfareControls.BTWindowStateHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowStateHK.InitComponent
}; // Size: 0x0018

// Class GUIWarfareControls.BTWindowAutoStateHK
class DLL_IMPORT UBTWindowAutoStateHK : public UBTWindowStateHK
{
public:
	struct FString                                     strClientDefine[ 0x0F ];                          		// 0x04C4 ( 0x00B4 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ShowState ( class UGUIController* con, int Code, struct FString arg0, struct FString arg1, struct FString arg2 );		//  GUIWarfareControls.BTWindowAutoStateHK.ShowState
	 struct FString            GetFormatString ( int Code, struct FString arg0, struct FString arg1, struct FString arg2 );		//  GUIWarfareControls.BTWindowAutoStateHK.GetFormatString
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowAutoStateHK.InitComponent
}; // Size: 0x00B4

// Class GUIWarfareControls.BTTPTopMenuHK
class DLL_IMPORT UBTTPTopMenuHK : public UGUITabPanel
{
public:
	class UBTOwnerDrawImageHK*                         LabelNewMail;                                     		// 0x0330 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 Quest;                                            		// 0x0334 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 PostBox;                                          		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 Shop;                                             		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 Inventory;                                        		// 0x0340 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 Clan;                                             		// 0x0344 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 Option;                                           		// 0x0348 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 GoBack;                                           		// 0x034C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 Exit;                                             		// 0x0350 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         TopBgDeco;                                        		// 0x0354 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strShop;                                          		// 0x0358 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strInven;                                         		// 0x0364 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonList[ 0x08 ];                               		// 0x0370 ( 0x0020 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strTooltip[ 0x08 ];                               		// 0x0390 ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTRODecorateStringHK*                       btToolTip;                                        		// 0x03F0 ( 0x0004 ) 
	struct FScriptDelegate                             __HeaderButton_OnClick__Delegate;                 		// 0x03F4 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPTopMenuHK.InitComponent
	 void                      Internal_OnRendered ( class UCanvas* Canvas );    		//  GUIWarfareControls.BTTPTopMenuHK.Internal_OnRendered
	 void                      SetNewMailArrived ( bool bNewMail );              		//  GUIWarfareControls.BTTPTopMenuHK.SetNewMailArrived
	 bool                      TopMenuButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPTopMenuHK.TopMenuButton_OnClick
	 bool                      HeaderButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPTopMenuHK.HeaderButton_OnClick
}; // Size: 0x00CC

// Class GUIWarfareControls.BTWindowDefineStateHK
class DLL_IMPORT UBTWindowDefineStateHK : public UBTWindowStateHK
{
public:
	struct FString                                     strClientDefine[ 0x0F ];                          		// 0x04C4 ( 0x00B4 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ShowState ( class UGUIController* con, int Code, struct FString arg0, struct FString arg1, struct FString arg2 );		//  GUIWarfareControls.BTWindowDefineStateHK.ShowState
	 struct FString            GetFormatString ( int Code, struct FString arg0, struct FString arg1, struct FString arg2 );		//  GUIWarfareControls.BTWindowDefineStateHK.GetFormatString
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowDefineStateHK.InitComponent
}; // Size: 0x00B4

// Class GUIWarfareControls.BTTPItemListHK
class DLL_IMPORT UBTTPItemListHK : public UGUITabPanel
{
public:
	class UBTItemImageListHK*                          ItemList;                                         		// 0x0330 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemCommonInfoHK*                         MyData;                                           		// 0x0334 ( 0x0004 ) 
	unsigned long                                      bAuctionList:1;                                   		// 0x0338 ( 0x0004 )  [0x00000001]
	struct FString                                     strRRMsg[ 0x08 ];                                 		// 0x033C ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                savedRRIndex;                                     		// 0x039C ( 0x0004 ) 
	class UBTRODecorateStringHK*                       decoAuctionToolTips;                              		// 0x03A0 ( 0x0004 ) 
	int                                                OutLineHorzBorder;                                		// 0x03A4 ( 0x0004 ) 
	int                                                OutLineVertBorder;                                		// 0x03A8 ( 0x0004 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTTPItemListHK.Internal_OnRendered
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPItemListHK.InitComponent
	 void                      SetOutlineBorder ( int horz, int vert );          		//  GUIWarfareControls.BTTPItemListHK.SetOutlineBorder
	 void                      UpdateServerTime ( struct FBtrDouble D );         		//  GUIWarfareControls.BTTPItemListHK.UpdateServerTime
}; // Size: 0x007C

// Class GUIWarfareControls.BTWindowTodayResultHK
class DLL_IMPORT UBTWindowTodayResultHK : public UBTWindowHK
{
public:
	class UBTRODecorateStringHK*                       decoString;                                       		// 0x04AC ( 0x0004 ) 
	struct FFloatBox                                   fbLabel[ 0x02 ];                                  		// 0x04B0 ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strLabel[ 0x02 ];                                 		// 0x04D0 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         Label[ 0x02 ];                                    		// 0x04E8 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelLevelBG[ 0x04 ];                           		// 0x04F0 ( 0x0040 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelLevelBG[ 0x04 ];                             		// 0x0530 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelLevelIConB[ 0x04 ];                        		// 0x0540 ( 0x0040 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelLevelIConB[ 0x04 ];                          		// 0x0580 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelLevelIConF[ 0x04 ];                        		// 0x0590 ( 0x0040 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelLevelIConF[ 0x04 ];                          		// 0x05D0 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelLevel[ 0x03 ];                             		// 0x05E0 ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelLevel[ 0x03 ];                               		// 0x0610 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTPItemList[ 0x03 ];                             		// 0x061C ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTTPItemListHK*                             TPItemList[ 0x03 ];                               		// 0x064C ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strExpBar;                                        		// 0x0658 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbExpBar;                                         		// 0x0664 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTExpBarHK*                                 expbar;                                           		// 0x0674 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                iMaxLevel;                                        		// 0x0678 ( 0x0004 ) [ CPF_Const ]

	// UScript Functions
	 void                      AddItem ( int pos, int ItemID, int PartID );      		//  GUIWarfareControls.BTWindowTodayResultHK.AddItem
	 void                      UpdateData (  );                                  		//  GUIWarfareControls.BTWindowTodayResultHK.UpdateData
	 void                      TPItemList_ImageListBox_OnRendered_2 ( class UCanvas* C );		//  GUIWarfareControls.BTWindowTodayResultHK.TPItemList_ImageListBox_OnRendered_2
	 void                      TPItemList_ImageListBox_OnRendered_1 ( class UCanvas* C );		//  GUIWarfareControls.BTWindowTodayResultHK.TPItemList_ImageListBox_OnRendered_1
	 void                      TPItemList_ImageListBox_OnRendered_0 ( class UCanvas* C );		//  GUIWarfareControls.BTWindowTodayResultHK.TPItemList_ImageListBox_OnRendered_0
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowTodayResultHK.InitComponent
	 bool                      Exit_OnClick ( class UGUIComponent* Sender );     		//  GUIWarfareControls.BTWindowTodayResultHK.Exit_OnClick
	 bool                      ImageListBox_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowTodayResultHK.ImageListBox_OnClick
}; // Size: 0x01D0

// Class GUIWarfareControls.BTOwnerDrawSourceClipImageHK
class DLL_IMPORT UBTOwnerDrawSourceClipImageHK : public UBTOwnerDrawImageHK
{
public:
	struct FFloatBox                                   ClipArea;                                         		// 0x03B4 ( 0x0010 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTOwnerDrawSourceClipImageHK.Internal_OnRendered
}; // Size: 0x0010

// Class GUIWarfareControls.BTTPQuestInfoHK
class DLL_IMPORT UBTTPQuestInfoHK : public UBTTabPanelHK
{
public:
	class UTabControlMocker*                           TabControl;                                       		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         BackgroundImage;                                  		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class TArray< class UBTOwnerDrawCaptionButtonHK* > ButtonCategory;                                   		// 0x0340 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTACLQuestHK*                               ACLQuest;                                         		// 0x034C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTLabelQuestDescHK*                         LabelQuestDesc;                                   		// 0x0350 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTab[ 0x06 ];                                		// 0x0354 ( 0x0018 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonClose;                                      		// 0x036C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonTab[ 0x06 ];                             		// 0x0370 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonClose;                                   		// 0x03B8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned long                                      bSelfTopMenuOwner:1;                              		// 0x03C4 ( 0x0004 )  [0x00000001]
	unsigned long                                      bSlidingTabPanel:1;                               		// 0x03C4 ( 0x0004 )  [0x00000002]
	unsigned long                                      bShowing:1;                                       		// 0x03C4 ( 0x0004 )  [0x00000004]
	float                                              SlideTime;                                        		// 0x03C8 ( 0x0004 ) 
	float                                              SlideMultiplier;                                  		// 0x03CC ( 0x0004 ) 
	struct FFloatBox                                   ShowAWinFrame;                                    		// 0x03D0 ( 0x0010 ) 
	struct FFloatBox                                   HideAWinFrame;                                    		// 0x03E0 ( 0x0010 ) 

	// UScript Functions
	 void                      SetLabelQuestDesc ( int RowIndex );               		//  GUIWarfareControls.BTTPQuestInfoHK.SetLabelQuestDesc
	 void                      Hide (  );                                        		//  GUIWarfareControls.BTTPQuestInfoHK.Hide
	 void                      Show (  );                                        		//  GUIWarfareControls.BTTPQuestInfoHK.Show
	 void                      SetMatchMaker ( class UwMatchMaker* MM );         		//  GUIWarfareControls.BTTPQuestInfoHK.SetMatchMaker
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPQuestInfoHK.Internal_OnPreDraw
	 bool                      ACLQuest_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPQuestInfoHK.ACLQuest_OnClick
	 bool                      ButtonClose_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPQuestInfoHK.ButtonClose_OnClick
	 class UGUIComponent*      GetTopMenuOwner (  );                             		//  GUIWarfareControls.BTTPQuestInfoHK.GetTopMenuOwner
	 void                      SetSlideTabPanel (  );                            		//  GUIWarfareControls.BTTPQuestInfoHK.SetSlideTabPanel
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPQuestInfoHK.InitComponent
	 bool                      ButtonTab_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPQuestInfoHK.ButtonTab_OnClick
}; // Size: 0x00B8

// Class GUIWarfareControls.BTTPTeamMemberList
class DLL_IMPORT UBTTPTeamMemberList : public UBTTabPanelHK
{
public:
	class UBTOwnerDrawImageHK*                         LabelTop[ 0x06 ];                                 		// 0x0338 ( 0x0018 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTop[ 0x06 ];                              		// 0x0350 ( 0x0060 ) 
	struct FString                                     strButtonTop[ 0x06 ];                             		// 0x03B0 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTop[ 0x06 ];                                		// 0x03F8 ( 0x0018 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTACLTeamMemberListHK*                      ACLList;                                          		// 0x0410 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTCMTeamMemberListHK*                       CMList;                                           		// 0x0414 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FScriptDelegate                             __OnPopup__Delegate;                              		// 0x0418 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnNonSelectPopup__Delegate;                     		// 0x0420 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupCheck__Delegate;                         		// 0x0428 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 int                       GetUserCount (  );                                		//  GUIWarfareControls.BTTPTeamMemberList.GetUserCount
	 void                      ContextMenu_OnSelected ( int ContextMenuIndex );  		//  GUIWarfareControls.BTTPTeamMemberList.ContextMenu_OnSelected
	 void                      OnPopupCheck ( class UBTACLTeamMemberListHK* acl, class UBTCMTeamMemberListHK* cm );		//  GUIWarfareControls.BTTPTeamMemberList.OnPopupCheck
	 void                      OnNonSelectPopup ( int ContextMenuIndex, class UBTACLTeamMemberListHK* acl );		//  GUIWarfareControls.BTTPTeamMemberList.OnNonSelectPopup
	 void                      OnPopup ( int ContextMenuIndex, class UBTACLTeamMemberListHK* acl );		//  GUIWarfareControls.BTTPTeamMemberList.OnPopup
	 bool                      ContextMenu_OnClose ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPTeamMemberList.ContextMenu_OnClose
	 bool                      ContextMenu_OnOpen ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPTeamMemberList.ContextMenu_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPTeamMemberList.InitComponent
	 bool                      ButtonTop_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPTeamMemberList.ButtonTop_OnClick
}; // Size: 0x00F8

// Class GUIWarfareControls.BTAutoColumnListDataHK
class DLL_IMPORT UBTAutoColumnListDataHK : public UObject
{
public:
	unsigned long                                      bCustomSpliter:1;                                 		// 0x002C ( 0x0004 )  [0x00000001][ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	unsigned long                                      bSpliter:1;                                       		// 0x002C ( 0x0004 )  [0x00000002][ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                SpliterIndex;                                     		// 0x0030 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class TArray< struct FACLData >                    DataPerColumn;                                    		// 0x0034 ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	struct FImage                                      BackgroundImage;                                  		// 0x0040 ( 0x0020 ) [ CPF_Edit ]

	// UScript Functions
	 void                      InitData ( int Index );                           		//  GUIWarfareControls.BTAutoColumnListDataHK.InitData
	 void                      Init ( int ColumnCount );                         		//  GUIWarfareControls.BTAutoColumnListDataHK.Init
}; // Size: 0x0034

// Class GUIWarfareControls.BTTPMessengerHK
class DLL_IMPORT UBTTPMessengerHK : public UGUITabPanel
{
public:
	class UBTOwnerDrawCaptionButtonHK*                 ButtonMainPCBang;                                 		// 0x0330 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0334 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTStretchedImageHK*                         ListBoundImage[ 0x03 ];                           		// 0x0338 ( 0x000C ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UTabControlMocker*                           TabControl;                                       		// 0x0344 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class TArray< class UBTOwnerDrawCaptionButtonHK* > ButtonMsg;                                        		// 0x0348 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UBTAutoColumnListHK* >         ACLMsg;                                           		// 0x0354 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UBTContextMenuHK* >            CMMsg;                                            		// 0x0360 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UwMatchMaker*                                MM;                                               		// 0x036C ( 0x0004 ) 
	struct FString                                     strConnected;                                     		// 0x0370 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strFriend;                                        		// 0x037C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClan;                                          		// 0x0388 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDeny;                                          		// 0x0394 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPCBang;                                        		// 0x03A0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOffLine;                                       		// 0x03AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLogout;                                        		// 0x03B8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strMainPCBang[ 0x04 ];                            		// 0x03C4 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupChannel__Delegate;                       		// 0x03F4 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupFriend__Delegate;                        		// 0x03FC ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupClan__Delegate;                          		// 0x0404 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupPCBang__Delegate;                        		// 0x040C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupChannelCheck__Delegate;                  		// 0x0414 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupFriendCheck__Delegate;                   		// 0x041C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupClanCheck__Delegate;                     		// 0x0424 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupPCBangCheck__Delegate;                   		// 0x042C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChannelUserList_OnHitBottom__Delegate;          		// 0x0434 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChannelUserList_OnHitTop__Delegate;             		// 0x043C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChannelUserList_OnAdjustWindow__Delegate;       		// 0x0444 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetUserServerInfo ( struct FString szServername, struct FString szServerShortName, struct FString szServerIP, int serverPort, unsigned char CurPos, unsigned char CurState, int ChannelNum, struct FString szChannelNickName, int GameRoomNum );		//  GUIWarfareControls.BTTPMessengerHK.SetUserServerInfo
	 void                      HideTabButton ( unsigned char eTabMenuType );     		//  GUIWarfareControls.BTTPMessengerHK.HideTabButton
	 void                      ShowTabButton ( unsigned char eTabMenuType );     		//  GUIWarfareControls.BTTPMessengerHK.ShowTabButton
	 void                      UpdateTabButtonPosition (  );                     		//  GUIWarfareControls.BTTPMessengerHK.UpdateTabButtonPosition
	 void                      Internal_OnVisiblePanelChanged ( int Index );     		//  GUIWarfareControls.BTTPMessengerHK.Internal_OnVisiblePanelChanged
	 void                      UpdatePCBangInfo (  );                            		//  GUIWarfareControls.BTTPMessengerHK.UpdatePCBangInfo
	 bool                      ButtonMainPCBang_Playing_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMessengerHK.ButtonMainPCBang_Playing_OnClick
	 bool                      ButtonMainPCBang_Change_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMessengerHK.ButtonMainPCBang_Change_OnClick
	 bool                      ButtonMainPCBang_Register_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMessengerHK.ButtonMainPCBang_Register_OnClick
	 bool                      BTWindowDefineARHK_18_19_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMessengerHK.BTWindowDefineARHK_18_19_OnOK
	 void                      AddAclMsgMenu ( int Index );                      		//  GUIWarfareControls.BTTPMessengerHK.AddAclMsgMenu
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMessengerHK.InitComponent
	 void                      BTACLMessengerChannelHK_OnHitTop ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHK.BTACLMessengerChannelHK_OnHitTop
	 void                      BTACLMessengerChannelHK_OnHitBottom ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHK.BTACLMessengerChannelHK_OnHitBottom
	 void                      BTACLMessengerChannelHK_OnAdjustWindow ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHK.BTACLMessengerChannelHK_OnAdjustWindow
	 void                      ChannelUserList_OnAdjustWindow ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHK.ChannelUserList_OnAdjustWindow
	 void                      ChannelUserList_OnHitTop ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHK.ChannelUserList_OnHitTop
	 void                      ChannelUserList_OnHitBottom ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHK.ChannelUserList_OnHitBottom
	 void                      ContextMenu_OnSelected ( int ContextMenuIndex );  		//  GUIWarfareControls.BTTPMessengerHK.ContextMenu_OnSelected
	 void                      OnPopupPCBangCheck ( class UBTACLMessengerPCBangHK* acl, class UBTCMMessengerPCBangHK* cm );		//  GUIWarfareControls.BTTPMessengerHK.OnPopupPCBangCheck
	 void                      OnPopupClanCheck ( class UBTACLMessengerClanHK* acl, class UBTCMMessengerClanHK* cm );		//  GUIWarfareControls.BTTPMessengerHK.OnPopupClanCheck
	 void                      OnPopupFriendCheck ( class UBTACLMessengerFriendHK* acl, class UBTCMMessengerFriendHK* cm );		//  GUIWarfareControls.BTTPMessengerHK.OnPopupFriendCheck
	 void                      OnPopupChannelCheck ( class UBTACLMessengerChannelHK* acl, class UBTCMMessengerChannelHK* cm );		//  GUIWarfareControls.BTTPMessengerHK.OnPopupChannelCheck
	 void                      OnPopupCheck ( int Panel, class UBTAutoColumnListHK* acl );		//  GUIWarfareControls.BTTPMessengerHK.OnPopupCheck
	 void                      OnPopupPCBang ( int ContextMenuIndex, class UBTACLMessengerPCBangHK* acl );		//  GUIWarfareControls.BTTPMessengerHK.OnPopupPCBang
	 void                      OnPopupClan ( int ContextMenuIndex, class UBTACLMessengerClanHK* acl );		//  GUIWarfareControls.BTTPMessengerHK.OnPopupClan
	 void                      OnPopupFriend ( int ContextMenuIndex, class UBTACLMessengerFriendHK* acl );		//  GUIWarfareControls.BTTPMessengerHK.OnPopupFriend
	 void                      OnPopupChannel ( int ContextMenuIndex, class UBTACLMessengerChannelHK* acl );		//  GUIWarfareControls.BTTPMessengerHK.OnPopupChannel
	 bool                      ContextMenu_OnClose ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPMessengerHK.ContextMenu_OnClose
	 bool                      ContextMenu_OnOpen ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPMessengerHK.ContextMenu_OnOpen
	 void                      LoadPos ( unsigned char eTabMenuType );           		//  GUIWarfareControls.BTTPMessengerHK.LoadPos
	 void                      SavePos ( unsigned char eTabMenuType );           		//  GUIWarfareControls.BTTPMessengerHK.SavePos
	 void                      RemoveAll ( unsigned char eTabMenuType );         		//  GUIWarfareControls.BTTPMessengerHK.RemoveAll
	 void                      RemoveChannelUser ( int UID );                    		//  GUIWarfareControls.BTTPMessengerHK.RemoveChannelUser
	 bool                      IsFriendlyUser ( struct FString UserName, struct FString ClanName, int ListIdx );		//  GUIWarfareControls.BTTPMessengerHK.IsFriendlyUser
	 void                      UpdateFriendlyUser ( int ListIdx );               		//  GUIWarfareControls.BTTPMessengerHK.UpdateFriendlyUser
	 int                       FindFriendFromUserName ( struct FString UserName );		//  GUIWarfareControls.BTTPMessengerHK.FindFriendFromUserName
	 void                      AddPCBangUser ( struct FString UserName, int ClanMark, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString ServerName, struct FString ServerIP, int serverPort, int CurPos, int ChannelNum, struct FString ChannelNickName, int RoomNum, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPMessengerHK.AddPCBangUser
	 void                      AddClanUser ( struct FString UserName, unsigned char IsLogOn, int Level, int ClanGrade, int ClanWinCnt, int ClanLoseCnt, int LevelMarkID, int TitleMarkID );		//  GUIWarfareControls.BTTPMessengerHK.AddClanUser
	 void                      AddFriendUser ( struct FString UserName, unsigned char IsLogOn, int ClanMark, int ClanBG, int ClanBL, struct FString ClanName, int Level, int ClanGrade, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID );		//  GUIWarfareControls.BTTPMessengerHK.AddFriendUser
	 void                      ReplaceChannelUser ( int Index, int ClanPattern, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString UserName, int UID, int ClanGrade, int ClanWinCnt, int ClanLoseCnt, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPMessengerHK.ReplaceChannelUser
	 class UBTAutoColumnListHK* GetMessengerType ( unsigned char CommunityType ); 		//  GUIWarfareControls.BTTPMessengerHK.GetMessengerType
	 void                      ReplaceClanName ( unsigned char CommunityType, struct FString OldClanName, struct FString NewClanname );		//  GUIWarfareControls.BTTPMessengerHK.ReplaceClanName
	 void                      ReplaceClanLevel ( unsigned char CommunityType, struct FString ClanName, int ClanLevel );		//  GUIWarfareControls.BTTPMessengerHK.ReplaceClanLevel
	 void                      ReplaceMyClanName ( unsigned char CommunityType, struct FString UserName, struct FString NewClanname );		//  GUIWarfareControls.BTTPMessengerHK.ReplaceMyClanName
	 void                      ReplaceUserNickName ( unsigned char CommunityType, struct FString OldUserName, struct FString NewUserName );		//  GUIWarfareControls.BTTPMessengerHK.ReplaceUserNickName
	 void                      AddChannelUser ( int ClanPattern, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString UserName, int UID, int ClanGrade, int ClanWinCnt, int ClanLoseCnt, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPMessengerHK.AddChannelUser
	 int                       FindChannelUser ( int UID );                      		//  GUIWarfareControls.BTTPMessengerHK.FindChannelUser
}; // Size: 0x011C

// Class GUIWarfareControls.TabControlMocker
class DLL_IMPORT UTabControlMocker : public UGUIComponent
{
public:
	class TArray< class UGUIButton* >                  Buttons;                                          		// 0x02BC ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UGUIPanel* >                   Panels;                                           		// 0x02C8 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UGUIButton*                                  VisiblePanelsButton;                              		// 0x02D4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UGUIPanel*                                   VisiblePanel;                                     		// 0x02D8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                CurrentTabIndex;                                  		// 0x02DC ( 0x0004 ) 
	struct FScriptDelegate                             __OnVisiblePanelChanged__Delegate;                		// 0x02E0 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnChangedTab__Delegate;                         		// 0x02E8 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      TabButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.TabControlMocker.TabButton_OnClick
	 void                      OnChangedTab ( int CurrentIndex, int PrevIndex ); 		//  GUIWarfareControls.TabControlMocker.OnChangedTab
	 int                       GetCurrentTabIndex (  );                          		//  GUIWarfareControls.TabControlMocker.GetCurrentTabIndex
	 int                       GetVisiblePanelIndex (  );                        		//  GUIWarfareControls.TabControlMocker.GetVisiblePanelIndex
	 class UGUIPanel*          GetVisiblePanel (  );                             		//  GUIWarfareControls.TabControlMocker.GetVisiblePanel
	 void                      SetVisiblePanel ( int Index, bool bChange );      		//  GUIWarfareControls.TabControlMocker.SetVisiblePanel
	 void                      Clear (  );                                       		//  GUIWarfareControls.TabControlMocker.Clear
	 void                      BindTabButtonAndPanel ( class UGUIButton* TabButton, class UGUITabPanel* Panel );		//  GUIWarfareControls.TabControlMocker.BindTabButtonAndPanel
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.TabControlMocker.InitComponent
	 void                      OnVisiblePanelChanged ( int Index );              		//  GUIWarfareControls.TabControlMocker.OnVisiblePanelChanged
}; // Size: 0x0034

// Class GUIWarfareControls.BTContextMenuHK
class DLL_IMPORT UBTContextMenuHK : public UGUIContextMenu
{
public:
	unsigned long                                      bCondition:1;                                     		// 0x0304 ( 0x0004 )  [0x00000001]
	int                                                OpenMouseX;                                       		// 0x0308 ( 0x0004 ) 
	int                                                OpenMouseY;                                       		// 0x030C ( 0x0004 ) 
	int                                                ItemWidth;                                        		// 0x0310 ( 0x0004 ) 
	int                                                SelectedIndex;                                    		// 0x0314 ( 0x0004 ) 
	int                                                FontSize[ 0x03 ];                                 		// 0x0318 ( 0x000C ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontColor[ 0x03 ];                                		// 0x0324 ( 0x000C ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontShadowColor[ 0x03 ];                          		// 0x0330 ( 0x000C ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                CaptionPadding[ 0x04 ];                           		// 0x033C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	unsigned char                                      CaptionDrawType;                                  		// 0x034C ( 0x0001 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class TArray< unsigned char >                      ContextItemsState;                                		// 0x0350 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FImage                                      buttonImage[ 0x03 ];                              		// 0x035C ( 0x0060 ) 
	struct FImage                                      BackgroundImage;                                  		// 0x03BC ( 0x0020 ) 
	struct FScriptDelegate                             __OnSelected__Delegate;                           		// 0x03DC ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      RemoveItemByIndex ( int Index );                  		//  GUIWarfareControls.BTContextMenuHK.RemoveItemByIndex
	 bool                      RemoveItemByName ( struct FString ItemName );     		//  GUIWarfareControls.BTContextMenuHK.RemoveItemByName
	 int                       InsertItem ( struct FString NewItem, int Index ); 		//  GUIWarfareControls.BTContextMenuHK.InsertItem
	 int                       AddItem ( struct FString NewItem );               		//  GUIWarfareControls.BTContextMenuHK.AddItem
	 bool                      ChangeStateByName ( struct FString ItemName, unsigned char st );		//  GUIWarfareControls.BTContextMenuHK.ChangeStateByName
	 bool                      ChangeStateByIndex ( int Index, unsigned char st );		//  GUIWarfareControls.BTContextMenuHK.ChangeStateByIndex
	 unsigned char             GetItemState ( int Index );                       		//  GUIWarfareControls.BTContextMenuHK.GetItemState
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTContextMenuHK.InitComponent
	 bool                      OnDraw ( class UCanvas* C );                      		//  GUIWarfareControls.BTContextMenuHK.OnDraw
	 void                      OpenContextMenu ( int MouseX, int MouseY );       		//  GUIWarfareControls.BTContextMenuHK.OpenContextMenu
	 bool                      OnPreDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTContextMenuHK.OnPreDraw
	 void                      OnSelect ( class UGUIContextMenu* Sender, int ClickIndex );		//  GUIWarfareControls.BTContextMenuHK.OnSelect
	 void                      OnSelected ( int SelectedIndex );                 		//  GUIWarfareControls.BTContextMenuHK.OnSelected
}; // Size: 0x00E0

// Class GUIWarfareControls.BTCMMessengerOnOffline
class DLL_IMPORT UBTCMMessengerOnOffline : public UBTContextMenuHK
{
public:
	int                                                nOnLine;                                          		// 0x03E4 ( 0x0004 ) 
	struct FString                                     strOnOff[ 0x03 ];                                 		// 0x03E8 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned char                                      nPopupSize[ 0x02 ];                               		// 0x040C ( 0x0002 ) 
	struct FString                                     strLineText[ 0x02 ];                              		// 0x0410 ( 0x0018 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      IsActiveMoveRoomState (  );                       		//  GUIWarfareControls.BTCMMessengerOnOffline.IsActiveMoveRoomState
	 bool                      IsActiveInviteState (  );                         		//  GUIWarfareControls.BTCMMessengerOnOffline.IsActiveInviteState
	 void                      ChangeMoveRoomState ( bool bActive );             		//  GUIWarfareControls.BTCMMessengerOnOffline.ChangeMoveRoomState
	 void                      ChangeInviteState ( bool bActive );               		//  GUIWarfareControls.BTCMMessengerOnOffline.ChangeInviteState
	 void                      ChangeWispherState ( bool bActive );              		//  GUIWarfareControls.BTCMMessengerOnOffline.ChangeWispherState
	 void                      SetLocation ( struct FString strChannelName, int GameRoomNum );		//  GUIWarfareControls.BTCMMessengerOnOffline.SetLocation
	 void                      SetLogOnState ( int nLogOnState );                		//  GUIWarfareControls.BTCMMessengerOnOffline.SetLogOnState
	 bool                      OnDraw ( class UCanvas* C );                      		//  GUIWarfareControls.BTCMMessengerOnOffline.OnDraw
}; // Size: 0x0044

// Class GUIWarfareControls.BTAutoColumnListHK
class DLL_IMPORT UBTAutoColumnListHK : public UGUITabPanel
{
public:
	struct FSaveListPos                                slp;                                              		// 0x0330 ( 0x0020 ) 
	unsigned long                                      bAlwaysActiveCursor:1;                            		// 0x0350 ( 0x0004 )  [0x00000001]
	unsigned long                                      bActiveCursor:1;                                  		// 0x0350 ( 0x0004 )  [0x00000002]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0354 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UGUIMultiColumnListBox*                      MultiColumnBox;                                   		// 0x0358 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UGUIMultiColumnList*                         MultiColumnList;                                  		// 0x035C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class TArray< class UBTAutoColumnListHeaderHK* >   ACLHeaderList;                                    		// 0x0360 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UBTAutoColumnListDataHK* >     ACLRowList;                                       		// 0x036C ( 0x000C ) [ CPF_NeedCtorLink ]
	float                                              saveTime;                                         		// 0x0378 ( 0x0004 ) 
	unsigned long                                      bSaveMode:1;                                      		// 0x037C ( 0x0004 )  [0x00000001]
	int                                                maxFontSize;                                      		// 0x0380 ( 0x0004 ) 
	class FColor                                       DefaultColor;                                     		// 0x0384 ( 0x0004 ) 
	int                                                selectIndex;                                      		// 0x0388 ( 0x0004 ) 
	int                                                SelectIndexX;                                     		// 0x038C ( 0x0004 ) 
	int                                                SelectIndexY;                                     		// 0x0390 ( 0x0004 ) 
	int                                                LastSelectedIndex;                                		// 0x0394 ( 0x0004 ) 
	int                                                LastSelectedIndexHistory;                         		// 0x0398 ( 0x0004 ) 
	struct FImage                                      SelectImage;                                      		// 0x039C ( 0x0020 ) 
	struct FImage                                      LastSelectedImage;                                		// 0x03BC ( 0x0020 ) 
	struct FImage                                      DefaultRowImage;                                  		// 0x03DC ( 0x0020 ) 
	struct FImage                                      ClickImage;                                       		// 0x03FC ( 0x0020 ) 
	struct FImage                                      MarkMe;                                           		// 0x041C ( 0x0020 ) 
	unsigned long                                      isFullRoom:1;                                     		// 0x043C ( 0x0004 )  [0x00000001]
	struct FScriptDelegate                             __SpliterDraw__Delegate;                          		// 0x0440 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnAdjustWindow__Delegate;                       		// 0x0448 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnHitBottom__Delegate;                          		// 0x0450 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnHitTop__Delegate;                             		// 0x0458 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      OnHitTop ( int Top, int Count, int itemperpage ); 		//  GUIWarfareControls.BTAutoColumnListHK.OnHitTop
	 void                      OnHitBottom ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTAutoColumnListHK.OnHitBottom
	 void                      OnAdjustWindow ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTAutoColumnListHK.OnAdjustWindow
	 void                      MultiColumnList_OnAdjustTop ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTAutoColumnListHK.MultiColumnList_OnAdjustTop
	 void                      MultiColumnList_InternalDeactivate (  );          		//  GUIWarfareControls.BTAutoColumnListHK.MultiColumnList_InternalDeactivate
	 void                      MultiColumnList_InternalActivate (  );            		//  GUIWarfareControls.BTAutoColumnListHK.MultiColumnList_InternalActivate
	 void                      MultiColumnList_OnDrawItem ( class UCanvas* C, int Item, float X, float Y, float W, float HT, bool bSelected, bool bPending );		//  GUIWarfareControls.BTAutoColumnListHK.MultiColumnList_OnDrawItem
	 void                      DrawDefaultRowImage ( class UCanvas* C );         		//  GUIWarfareControls.BTAutoColumnListHK.DrawDefaultRowImage
	 bool                      BackgroundImage_OnDraw ( class UCanvas* C );      		//  GUIWarfareControls.BTAutoColumnListHK.BackgroundImage_OnDraw
	 void                      SpliterDraw ( class UCanvas* C, float X, float Y, float W, float HT, int SpliterIndex );		//  GUIWarfareControls.BTAutoColumnListHK.SpliterDraw
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTAutoColumnListHK.GetItemHeight
	 bool                      MultiColumnList_OnPreDraw ( class UCanvas* C );   		//  GUIWarfareControls.BTAutoColumnListHK.MultiColumnList_OnPreDraw
	 int                       FindLastPressedColumn (  );                       		//  GUIWarfareControls.BTAutoColumnListHK.FindLastPressedColumn
	 bool                      MultiColumnList_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTAutoColumnListHK.MultiColumnList_OnDblClick
	 bool                      MultiColumnList_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTAutoColumnListHK.MultiColumnList_OnClick
	 void                      NormalizeColumnPerc (  );                         		//  GUIWarfareControls.BTAutoColumnListHK.NormalizeColumnPerc
	 void                      NormalizeMultiColumnPerc (  );                    		//  GUIWarfareControls.BTAutoColumnListHK.NormalizeMultiColumnPerc
	 int                       BinarySearchIndexBySelectLocation ( int ColumnIndex, int valueIndex, int dataIndex );		//  GUIWarfareControls.BTAutoColumnListHK.BinarySearchIndexBySelectLocation
	 int                       ReverseBinarySearchIndexBySelectLocation ( int ColumnIndex, int valueIndex, int dataIndex );		//  GUIWarfareControls.BTAutoColumnListHK.ReverseBinarySearchIndexBySelectLocation
	 void                      SortRoom (  );                                    		//  GUIWarfareControls.BTAutoColumnListHK.SortRoom
	 void                      SortBySelectLocation ( int ColumnIndex, int valueIndex, bool bReverseSort );		//  GUIWarfareControls.BTAutoColumnListHK.SortBySelectLocation
	 int                       BinarySearchIndex ( int ColumnIndex, int dataIndex );		//  GUIWarfareControls.BTAutoColumnListHK.BinarySearchIndex
	 int                       ReverseBinarySearchIndex ( int ColumnIndex, int dataIndex );		//  GUIWarfareControls.BTAutoColumnListHK.ReverseBinarySearchIndex
	 void                      SortColumn ( int ColumnIndex, bool bReverseSort );		//  GUIWarfareControls.BTAutoColumnListHK.SortColumn
	 int                       MultiCalculateIndex (  );                         		//  GUIWarfareControls.BTAutoColumnListHK.MultiCalculateIndex
	 int                       GetCurrentIndex (  );                             		//  GUIWarfareControls.BTAutoColumnListHK.GetCurrentIndex
	 class UBTAutoColumnListDataHK* GetRowByIndex ( int Index );                      		//  GUIWarfareControls.BTAutoColumnListHK.GetRowByIndex
	 void                      RemoveAll (  );                                   		//  GUIWarfareControls.BTAutoColumnListHK.RemoveAll
	 void                      RemoveRowArray ( int StartIndex, int endLength ); 		//  GUIWarfareControls.BTAutoColumnListHK.RemoveRowArray
	 void                      RemoveRow ( int Index );                          		//  GUIWarfareControls.BTAutoColumnListHK.RemoveRow
	 void                      AddRow ( class UBTAutoColumnListDataHK* Item, bool bSet, int Index );		//  GUIWarfareControls.BTAutoColumnListHK.AddRow
	 int                       AddColumn ( class UBTAutoColumnListHeaderHK* Item );		//  GUIWarfareControls.BTAutoColumnListHK.AddColumn
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTAutoColumnListHK.InitComponent
	 void                      LoadPos (  );                                     		//  GUIWarfareControls.BTAutoColumnListHK.LoadPos
	 void                      SavePos (  );                                     		//  GUIWarfareControls.BTAutoColumnListHK.SavePos
	 void                      InitScrollBar (  );                               		//  GUIWarfareControls.BTAutoColumnListHK.InitScrollBar
}; // Size: 0x0130

// Class GUIWarfareControls.BTACLMessengerCommon
class DLL_IMPORT UBTACLMessengerCommon : public UBTAutoColumnListHK
{
public:
	struct FScriptDelegate                             __deleClanName__Delegate;                         		// 0x0460 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      MultiColumnList_OnEndToolTip (  );                		//  GUIWarfareControls.BTACLMessengerCommon.MultiColumnList_OnEndToolTip
	 class UGUIToolTip*        MultiColumnList_OnBeginToolTip (  );              		//  GUIWarfareControls.BTACLMessengerCommon.MultiColumnList_OnBeginToolTip
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMessengerCommon.InitComponent
	 void                      DrawClanName ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, struct FString szClanName, int row );		//  GUIWarfareControls.BTACLMessengerCommon.DrawClanName
	 void                      deleClanName ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, struct FString szClanName, int row );		//  GUIWarfareControls.BTACLMessengerCommon.deleClanName
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLMessengerCommon.GetClanName
	 void                      SetCurState ( int row, int Value );               		//  GUIWarfareControls.BTACLMessengerCommon.SetCurState
	 void                      SetChannelNumber ( int row, int Value );          		//  GUIWarfareControls.BTACLMessengerCommon.SetChannelNumber
	 void                      SetGameRoomNumber ( int row, int Value );         		//  GUIWarfareControls.BTACLMessengerCommon.SetGameRoomNumber
	 void                      SetServerName ( int row, struct FString Value );  		//  GUIWarfareControls.BTACLMessengerCommon.SetServerName
	 void                      SetServerIP ( int row, struct FString Value );    		//  GUIWarfareControls.BTACLMessengerCommon.SetServerIP
	 void                      SetServerPort ( int row, int Value );             		//  GUIWarfareControls.BTACLMessengerCommon.SetServerPort
	 void                      SetChannelName ( int row, struct FString Value ); 		//  GUIWarfareControls.BTACLMessengerCommon.SetChannelName
	 void                      SetCurLocationName ( int row, struct FString Value );		//  GUIWarfareControls.BTACLMessengerCommon.SetCurLocationName
	 void                      SetCurpos ( int row, int Value );                 		//  GUIWarfareControls.BTACLMessengerCommon.SetCurpos
}; // Size: 0x0008

// Class GUIWarfareControls.BTWindowRequestApprovalClanHK
class DLL_IMPORT UBTWindowRequestApprovalClanHK : public UBTWindowHK
{
public:
	struct FString                                     strLabel[ 0x0C ];                                 		// 0x04AC ( 0x0090 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel[ 0x0C ];                                  		// 0x053C ( 0x00C0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x0C ];                                    		// 0x05FC ( 0x0030 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTLabelLevelHK*                             LabelLevel;                                       		// 0x062C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbEdit[ 0x08 ];                                   		// 0x0630 ( 0x0080 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strEdit[ 0x08 ];                                  		// 0x06B0 ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawTextArrayHK*                     Edit[ 0x08 ];                                     		// 0x0710 ( 0x0020 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonSuspend;                                 		// 0x0730 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonSuspend;                                  		// 0x073C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonSuspend;                                    		// 0x074C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       EditAddMsg;                                       		// 0x0750 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                ReqJoinUserIdx;                                   		// 0x0754 ( 0x0004 ) 
	struct FString                                     CharName;                                         		// 0x0758 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     InviteMsg;                                        		// 0x0764 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowRequestApprovalClanHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowRequestApprovalClanHK.InitComponent
	 void                      SetCharInfo ( struct FCharInfo stCharInfo );      		//  GUIWarfareControls.BTWindowRequestApprovalClanHK.SetCharInfo
	 void                      SetData ( int ReqJoinUserIdx, struct FString CharName, struct FString Message );		//  GUIWarfareControls.BTWindowRequestApprovalClanHK.SetData
}; // Size: 0x02C4

// Class GUIWarfareControls.BTWindowFindClanHK
class DLL_IMPORT UBTWindowFindClanHK : public UBTWindowHK
{
public:
	unsigned long                                      bReceiveLock:1;                                   		// 0x04AC ( 0x0004 )  [0x00000001]
	int                                                CurrentPage;                                      		// 0x04B0 ( 0x0004 ) 
	int                                                MinPage;                                          		// 0x04B4 ( 0x0004 ) 
	int                                                MaxPage;                                          		// 0x04B8 ( 0x0004 ) 
	struct FString                                     searchtext;                                       		// 0x04BC ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                SearchType;                                       		// 0x04C8 ( 0x0004 ) 
	int                                                Status;                                           		// 0x04CC ( 0x0004 ) 
	int                                                Region;                                           		// 0x04D0 ( 0x0004 ) 
	class UBTTcpLink_Channel*                          TcpChannel;                                       		// 0x04D4 ( 0x0004 ) 
	struct FString                                     strCreateDate[ 0x02 ];                            		// 0x04D8 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRound;                                         		// 0x04F0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRank;                                          		// 0x04FC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonCafe;                                    		// 0x0508 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonInfo;                                    		// 0x0514 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClanSearchType[ 0x04 ];                        		// 0x0520 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonCafe;                                     		// 0x0550 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonInfo;                                     		// 0x0560 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonCafe;                                       		// 0x0570 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonInfo;                                       		// 0x0574 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabel[ 0x03 ];                                 		// 0x0578 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel[ 0x03 ];                                  		// 0x059C ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x03 ];                                    		// 0x05CC ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbComboSearch;                                    		// 0x05D8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboSearch;                                      		// 0x05E8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbEdit;                                           		// 0x05EC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Edit;                                             		// 0x05FC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                EditSearch;                                       		// 0x0600 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonSearch;                                  		// 0x0604 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonSearch;                                   		// 0x0610 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonSearch;                                     		// 0x0620 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelTop[ 0x07 ];                                 		// 0x0624 ( 0x001C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTop[ 0x07 ];                              		// 0x0640 ( 0x0070 ) 
	struct FString                                     strButtonTop[ 0x07 ];                             		// 0x06B0 ( 0x0054 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTop[ 0x07 ];                                		// 0x0704 ( 0x001C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UButtonGroups*                               RadioGroup;                                       		// 0x0720 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strRadioOption[ 0x02 ];                           		// 0x0724 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbRadioOption[ 0x02 ];                            		// 0x073C ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTCheckBoxHK*                               RadioOption[ 0x02 ];                              		// 0x075C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ClanLocation;                                     		// 0x0764 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbClanLocation;                                   		// 0x0768 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTLabelLocationHK*                          sampleLocation;                                   		// 0x0778 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         lbClanLocation;                                   		// 0x077C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fblbClanLocation;                                 		// 0x0780 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strClanLocation;                                  		// 0x0790 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbACLClanList;                                    		// 0x079C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTACLClanHK*                                ACLClanList;                                      		// 0x07AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowFindClanHK.Internal_OnOpen
	 bool                      ButtonSearch_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowFindClanHK.ButtonSearch_OnClick
	 void                      ACLClanList_OnHitBottom ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTWindowFindClanHK.ACLClanList_OnHitBottom
	 void                      ACLClanList_OnHitTop ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTWindowFindClanHK.ACLClanList_OnHitTop
	 void                      SetPageLimit ( int minp, int maxp );              		//  GUIWarfareControls.BTWindowFindClanHK.SetPageLimit
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowFindClanHK.InitComponent
	 struct FString            GetSelectClanName (  );                           		//  GUIWarfareControls.BTWindowFindClanHK.GetSelectClanName
	 void                      SetData ( int TotalPage, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< unsigned char > ClanMarkBL, class TArray< struct FString > ClanName, class TArray< struct FString > ClanMaster, class TArray< int > ClanMember, class TArray< int > ClanMemberMax, class TArray< int > ClanCreateDate, class TArray< int > ClanWin, class TArray< int > ClanLose, class TArray< int > ClanDraw, class TArray< int > ClanRank, class TArray< unsigned char > ClanRecruit, class TArray< int > ClanLevel );		//  GUIWarfareControls.BTWindowFindClanHK.SetData
}; // Size: 0x0304

// Class GUIWarfareControls.BTWindowRequestClanHK
class DLL_IMPORT UBTWindowRequestClanHK : public UBTWindowHK
{
public:
	struct FString                                     strLabel[ 0x0E ];                                 		// 0x04AC ( 0x00A8 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel[ 0x0E ];                                  		// 0x0554 ( 0x00E0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x0E ];                                    		// 0x0634 ( 0x0038 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTLabelClanMarkHK*                          LabelClanMark;                                    		// 0x066C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbEdit[ 0x09 ];                                   		// 0x0670 ( 0x0090 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strEdit[ 0x09 ];                                  		// 0x0700 ( 0x006C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawTextArrayHK*                     Edit[ 0x09 ];                                     		// 0x076C ( 0x0024 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonSuspend;                                 		// 0x0790 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonSuspend;                                  		// 0x079C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonSuspend;                                    		// 0x07AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       EditAddMsg;                                       		// 0x07B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       EditClanIntroduction;                             		// 0x07B4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                InviterUserIdx;                                   		// 0x07B8 ( 0x0004 ) 
	struct FString                                     InviterCharname;                                  		// 0x07BC ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     ClanName;                                         		// 0x07C8 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     InviteMsg;                                        		// 0x07D4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strNoRankState;                                   		// 0x07E0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowRequestClanHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowRequestClanHK.InitComponent
	 void                      SetClanInfo ( struct FClanInfo stClanInfo );      		//  GUIWarfareControls.BTWindowRequestClanHK.SetClanInfo
	 void                      SetData ( int InviterUserIdx, struct FString InviterCharname, struct FString ClanName, struct FString InviteMsg );		//  GUIWarfareControls.BTWindowRequestClanHK.SetData
}; // Size: 0x0340

// Class GUIWarfareControls.BTWindowClanInfoHK
class DLL_IMPORT UBTWindowClanInfoHK : public UBTWindowHK
{
public:
	struct FString                                     strRadioLocation[ 0x0E ];                         		// 0x04AC ( 0x00A8 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x0F ];                                 		// 0x0554 ( 0x00B4 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel[ 0x0F ];                                  		// 0x0608 ( 0x00F0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x0F ];                                    		// 0x06F8 ( 0x003C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strEdit[ 0x0F ];                                  		// 0x0734 ( 0x00B4 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbEdit[ 0x0F ];                                   		// 0x07E8 ( 0x00F0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelClanMark;                                  		// 0x08D8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawTextArrayHK*                     Edit[ 0x0F ];                                     		// 0x08E8 ( 0x003C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTLabelClanMarkHK*                          LabelClanMark;                                    		// 0x0924 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       ClanIntroduction;                                 		// 0x0928 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTAutoScrollListHK*                         ClanIntroduction2;                                		// 0x092C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strNoRankState;                                   		// 0x0930 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowClanInfoHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowClanInfoHK.InitComponent
	 void                      SetData ( struct FClanInfo stClanInfo );          		//  GUIWarfareControls.BTWindowClanInfoHK.SetData
}; // Size: 0x0490

// Class GUIWarfareControls.BTWindowUserDetailInfoHK
class DLL_IMPORT UBTWindowUserDetailInfoHK : public UBTWindowHK
{
public:
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAF;                                         		// 0x04AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRSA;                                        		// 0x04B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bLRMousePressed:1;                                		// 0x04B4 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonLR;                                         		// 0x04B8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bRRMousePressed:1;                                		// 0x04BC ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRR;                                         		// 0x04C0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         EdgeLine;                                         		// 0x04C4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         AFTeamBG;                                         		// 0x04C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         RSATeamBG;                                        		// 0x04CC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bVisibleAFModel:1;                                		// 0x04D0 ( 0x0004 )  [0x00000001]
	struct FString                                     strAF;                                            		// 0x04D4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRSA;                                           		// 0x04E0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class ABTROModelNew*                               CharacterModel;                                   		// 0x04EC ( 0x0004 ) 
	class UBTModelHK*                                  UIModel;                                          		// 0x04F0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     CharName;                                         		// 0x04F4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     ClanName;                                         		// 0x0500 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x0E ];                                 		// 0x050C ( 0x00A8 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel[ 0x0E ];                                  		// 0x05B4 ( 0x00E0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x0E ];                                    		// 0x0694 ( 0x0038 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strEdit[ 0x0E ];                                  		// 0x06CC ( 0x00A8 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbEdit[ 0x0E ];                                   		// 0x0774 ( 0x00E0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawTextArrayHK*                     Edit[ 0x0E ];                                     		// 0x0854 ( 0x0038 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLevelImg;                                       		// 0x088C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelClanMark;                                  		// 0x089C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LevelImg;                                         		// 0x08AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTLabelClanMarkHK*                          LabelClanMark;                                    		// 0x08B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbSelfIntroduction;                               		// 0x08B4 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTAutoScrollListHK*                         SelfIntroduction;                                 		// 0x08C4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbEquipWeapon[ 0x02 ];                            		// 0x08C8 ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTItemBoxButtonHK*                          EquipWeapon[ 0x02 ];                              		// 0x08E8 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbExpBar;                                         		// 0x08F0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTExpBarHK*                                 expbar;                                           		// 0x0900 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strOnLine;                                        		// 0x0904 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOffLine;                                       		// 0x0910 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         strCharInfo;                                      		// 0x091C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbCharInfo;                                       		// 0x0920 ( 0x0010 ) 
	struct FString                                     strDefaultSelfIntro;                              		// 0x0930 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strNoRankState;                                   		// 0x093C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowUserDetailInfoHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.InitComponent
	 void                      InitializeRightPanel (  );                        		//  GUIWarfareControls.BTWindowUserDetailInfoHK.InitializeRightPanel
	 void                      InitializeLeftPanel (  );                         		//  GUIWarfareControls.BTWindowUserDetailInfoHK.InitializeLeftPanel
	 void                      SetData ( struct FString CharName, struct FString ClanName, int MainWeaponID, int MainWeaponPartID, int SubWeaponID, int SubWeaponPartID, int HelmetID, int FaceID, int AcceID, int AFBodyID, int RSABodyID, struct FCharInfo stCharInfo );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.SetData
	 void                      SetRankingInfo ( int Ranking, int Win, int Lose, int DisCon );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.SetRankingInfo
	 void                      SetEquipItemInfo ( int MainWeaponID, int MainWeaponPartID, int SubWeaponID, int SubWeaponPartID, int HelmetID, int FaceID, int AcceID, int AFBodyID, int RSABodyID );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.SetEquipItemInfo
	 void                      SetClanInfo ( struct FString ClanName, int ClanPattern, int ClanBG, int ClanBL, int ClanLevel );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.SetClanInfo
	 void                      SetMyInfo ( struct FString CharName, struct FString ClanName, int Level, int curExp, int startExp, int maxExp, int LevelMarkID );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.SetMyInfo
	 void                      SetSelfIntro ( struct FString Intro );            		//  GUIWarfareControls.BTWindowUserDetailInfoHK.SetSelfIntro
	 void                      ChangeVisibleModel ( bool bAF );                  		//  GUIWarfareControls.BTWindowUserDetailInfoHK.ChangeVisibleModel
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTWindowUserDetailInfoHK.Internal_OnPreDraw
	 bool                      ButtonRSA_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.ButtonRSA_OnClick
	 bool                      ButtonAF_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowUserDetailInfoHK.ButtonAF_OnClick
	 void                      ButtonRR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.ButtonRR_OnRelease
	 void                      ButtonRR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.ButtonRR_OnPressed
	 void                      ButtonLR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.ButtonLR_OnRelease
	 void                      ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTWindowUserDetailInfoHK.ButtonLR_OnPressed
}; // Size: 0x049C

// Class GUIWarfareControls.BTWindowUserPersonalInfo
class DLL_IMPORT UBTWindowUserPersonalInfo : public UBTWindowHK
{
public:
	struct FString                                     strButtonTab[ 0x02 ];                             		// 0x04AC ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UTabControlMocker*                           TabControl;                                       		// 0x04C4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTab[ 0x02 ];                              		// 0x04C8 ( 0x0020 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTab[ 0x02 ];                                		// 0x04E8 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTPPanel;                                        		// 0x04F0 ( 0x0010 ) 
	class UBTTPOptionBaseHK*                           TPPanel[ 0x02 ];                                  		// 0x0500 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                VisiblePanelIdx;                                  		// 0x0508 ( 0x0004 ) 
	class UBTTPMyInfoBasicHK*                          TPBasic;                                          		// 0x050C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPMyInfoStatHK*                           TPStat;                                           		// 0x0510 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         BackgroundPanel;                                  		// 0x0514 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbBackgroundPanel;                                		// 0x0518 ( 0x0010 ) 
	class UBTTcpLink_Channel*                          kTcpChannel;                                      		// 0x0528 ( 0x0004 ) 
	struct FClanInfo                                   kMyClanInfo;                                      		// 0x052C ( 0x00A8 ) [ CPF_NeedCtorLink ]
	struct FCharInfo                                   kMyCharInfo;                                      		// 0x05D4 ( 0x00C0 ) 

	// UScript Functions
	 void                      SetClanInfo ( struct FClanInfo ClanInfo );        		//  GUIWarfareControls.BTWindowUserPersonalInfo.SetClanInfo
	 void                      SetCharInfo ( struct FCharInfo CharInfo );        		//  GUIWarfareControls.BTWindowUserPersonalInfo.SetCharInfo
	 void                      SetTcpChannel ( class UBTTcpLink_Channel* TcpChannel );		//  GUIWarfareControls.BTWindowUserPersonalInfo.SetTcpChannel
	 void                      UpdateRankingInfoCompleted (  );                  		//  GUIWarfareControls.BTWindowUserPersonalInfo.UpdateRankingInfoCompleted
	 void                      UpdateRankingInfoList ( unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 );		//  GUIWarfareControls.BTWindowUserPersonalInfo.UpdateRankingInfoList
	 void                      UpdateRankingCount ( unsigned char RankingType, unsigned char CommunityType, int TotalCount );		//  GUIWarfareControls.BTWindowUserPersonalInfo.UpdateRankingCount
	 void                      UpdateCharDetailInfo ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb );		//  GUIWarfareControls.BTWindowUserPersonalInfo.UpdateCharDetailInfo
	 void                      UpdateFriendCharInfo ( struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FString ClanPersonIntro, int MainWeaponItemID, int MainWeaponPartID, int SubWeaponItemID, int SubWeaponPartID, int AFSpecialCostumeItemID, int RSASpecialCostumeItemID, struct FCharInfo stCharInfo, int ClanLevel );		//  GUIWarfareControls.BTWindowUserPersonalInfo.UpdateFriendCharInfo
	 void                      UpdateCharInfo (  );                              		//  GUIWarfareControls.BTWindowUserPersonalInfo.UpdateCharInfo
	 void                      UpdateRequestServer (  );                         		//  GUIWarfareControls.BTWindowUserPersonalInfo.UpdateRequestServer
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowUserPersonalInfo.Internal_OnOpen
	 bool                      ButtonTab_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowUserPersonalInfo.ButtonTab_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowUserPersonalInfo.InitComponent
}; // Size: 0x01E8

// Class GUIWarfareControls.BTWindowCreateClanHK
class DLL_IMPORT UBTWindowCreateClanHK : public UBTWindowHK
{
public:
	struct FString                                     strLabel[ 0x0B ];                                 		// 0x04AC ( 0x0084 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel[ 0x0B ];                                  		// 0x0530 ( 0x00B0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x0B ];                                    		// 0x05E0 ( 0x002C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbEdit[ 0x03 ];                                   		// 0x060C ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Edit[ 0x03 ];                                     		// 0x063C ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonOverlapCheck;                            		// 0x0648 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonOverlapCheck;                             		// 0x0654 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonOverlapCheck;                               		// 0x0664 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                ClanName;                                         		// 0x0668 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       ClanIntroduction;                                 		// 0x066C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                ClanKeyword;                                      		// 0x0670 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ClanLocation;                                     		// 0x0674 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbClanLocation;                                   		// 0x0678 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTLabelLocationHK*                          sampleLocation;                                   		// 0x0688 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bCheckDupName:1;                                  		// 0x068C ( 0x0004 )  [0x00000001]
	unsigned long                                      bCheckDupID:1;                                    		// 0x068C ( 0x0004 )  [0x00000002]
	class UBTTcpLink_Channel*                          TcpChannel;                                       		// 0x0690 ( 0x0004 ) 

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowCreateClanHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowCreateClanHK.InitComponent
	 bool                      ButtonOverlapCheck_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowCreateClanHK.ButtonOverlapCheck_OnClick
	 bool                      CheckDup (  );                                    		//  GUIWarfareControls.BTWindowCreateClanHK.CheckDup
	 void                      ClanName_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowCreateClanHK.ClanName_OnChange
}; // Size: 0x01E8

// Class GUIWarfareControls.BTACLTeamMemberListHK
class DLL_IMPORT UBTACLTeamMemberListHK : public UBTAutoColumnListHK
{
public:
	struct FString                                     strStatus[ 0x0A ];                                		// 0x0460 ( 0x0078 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FImage                                      LevelImg;                                         		// 0x04D8 ( 0x0020 ) 

	// UScript Functions
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLTeamMemberListHK.GetLevelMarkID
	 class FColor              GetUserNameColor ( int row );                     		//  GUIWarfareControls.BTACLTeamMemberListHK.GetUserNameColor
	 int                       GetClanPatternID ( int row );                     		//  GUIWarfareControls.BTACLTeamMemberListHK.GetClanPatternID
	 int                       GetUserID ( int Index );                          		//  GUIWarfareControls.BTACLTeamMemberListHK.GetUserID
	 struct FString            GetClanName ( int Index );                        		//  GUIWarfareControls.BTACLTeamMemberListHK.GetClanName
	 struct FString            GetUserName ( int Index );                        		//  GUIWarfareControls.BTACLTeamMemberListHK.GetUserName
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLTeamMemberListHK.InitComponent
	 void                      LC5_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLTeamMemberListHK.LC5_Draw
	 void                      LC4_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLTeamMemberListHK.LC4_Draw
	 void                      LC2_3_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLTeamMemberListHK.LC2_3_Draw
	 void                      LC1_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLTeamMemberListHK.LC1_Draw
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLTeamMemberListHK.LC0_Draw
	 class UBTAutoColumnListDataHK* FindTeamMember ( int UID );                       		//  GUIWarfareControls.BTACLTeamMemberListHK.FindTeamMember
	 int                       PingToIndex ( int msec );                         		//  GUIWarfareControls.BTACLTeamMemberListHK.PingToIndex
	 bool                      ChangePingInfo ( int UID, int PingValue );        		//  GUIWarfareControls.BTACLTeamMemberListHK.ChangePingInfo
	 bool                      ChangeLevelMarkID ( struct FString UserName, int LevelMarkID );		//  GUIWarfareControls.BTACLTeamMemberListHK.ChangeLevelMarkID
	 bool                      ChangeTeamMemberStatus ( int UID, int Status );   		//  GUIWarfareControls.BTACLTeamMemberListHK.ChangeTeamMemberStatus
	 bool                      IsAllReady (  );                                  		//  GUIWarfareControls.BTACLTeamMemberListHK.IsAllReady
	 int                       GetReadyUserCount (  );                           		//  GUIWarfareControls.BTACLTeamMemberListHK.GetReadyUserCount
	 struct FString            GetMaxSameClanName (  );                          		//  GUIWarfareControls.BTACLTeamMemberListHK.GetMaxSameClanName
	 int                       GetMaxSameClanUserCount (  );                     		//  GUIWarfareControls.BTACLTeamMemberListHK.GetMaxSameClanUserCount
	 struct FStrInt_Struct     GetMaxSameClanUserInfo (  );                      		//  GUIWarfareControls.BTACLTeamMemberListHK.GetMaxSameClanUserInfo
	 bool                      ChangeRoomOwnerInfo ( int UID );                  		//  GUIWarfareControls.BTACLTeamMemberListHK.ChangeRoomOwnerInfo
	 bool                      RemoveTeamMemberByUID ( int UID );                		//  GUIWarfareControls.BTACLTeamMemberListHK.RemoveTeamMemberByUID
	 bool                      ChangeTeamMember ( int UID, int ClanMark, int ClanBG, int ClanBL, int Level, struct FString NickName, struct FString ClanName, int Status, int Host, int Ping, struct FString UserIP, unsigned char LookingFor, int ClanLevel, bool bMe );		//  GUIWarfareControls.BTACLTeamMemberListHK.ChangeTeamMember
	 int                       FindTeamMemberIndex ( int UID );                  		//  GUIWarfareControls.BTACLTeamMemberListHK.FindTeamMemberIndex
	 void                      ReplaceClanLevel ( struct FString ClanName, int ClanLevel );		//  GUIWarfareControls.BTACLTeamMemberListHK.ReplaceClanLevel
	 void                      ReplaceClanName ( struct FString old_ClanName, struct FString new_ClanName );		//  GUIWarfareControls.BTACLTeamMemberListHK.ReplaceClanName
	 bool                      ReplaceUserNickName ( struct FString Old_NickName, struct FString New_NickName );		//  GUIWarfareControls.BTACLTeamMemberListHK.ReplaceUserNickName
	 void                      AddTeamMember ( int UID, int ClanMark, int ClanBG, int ClanBL, int Level, struct FString NickName, struct FString ClanName, int Status, int Host, int Ping, struct FString UserIP, unsigned char LookingFor, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3, bool bMe );		//  GUIWarfareControls.BTACLTeamMemberListHK.AddTeamMember
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLTeamMemberListHK.GetItemHeight
}; // Size: 0x0098

// Class GUIWarfareControls.BTCMTeamMemberListHK
class DLL_IMPORT UBTCMTeamMemberListHK : public UBTContextMenuHK
{
public:
	struct FString                                     strContextMenuName[ 0x09 ];                       		// 0x03E4 ( 0x006C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTCMTeamMemberListHK.InitComponent
}; // Size: 0x006C

// Class GUIWarfareControls.BTWindow
class DLL_IMPORT UBTWindow : public UFloatingWindow
{
public:
	unsigned long                                      bHandleEsc:1;                                     		// 0x03F4 ( 0x0004 )  [0x00000001]

	// UScript Functions
	 bool                      InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State );		//  GUIWarfareControls.BTWindow.InternalOnKeyEvent
	 void                      Closed ( class UGUIComponent* Sender, bool bCancelled );		//  GUIWarfareControls.BTWindow.Closed
	 void                      eventOpened ( class UGUIComponent* Sender );      		// [ FUNC_Event ] GUIWarfareControls.BTWindow.Opened
}; // Size: 0x0004

// Class GUIWarfareControls.BTWindowInviteFriendHK
class DLL_IMPORT UBTWindowInviteFriendHK : public UBTWindow
{
public:
	class UBTOwnerDrawImageHK*                         BackgroundImage;                                  		// 0x03F8 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         TopLine;                                          		// 0x03FC ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         BottomLine;                                       		// 0x0400 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonOK;                                         		// 0x0404 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonCancel;                                     		// 0x0408 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelDivider;                                     		// 0x040C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelInviteMsg;                                   		// 0x0410 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelSendMsg;                                     		// 0x0414 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelEditMsg;                                     		// 0x0418 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTMultiLineEditBoxHK*                       MultiLineEditMsg;                                 		// 0x041C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strTitle;                                         		// 0x0420 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSendMsg;                                       		// 0x042C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strInviteMsg;                                     		// 0x0438 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOK;                                            		// 0x0444 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCancel;                                        		// 0x0450 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     FriendName;                                       		// 0x045C ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                friendUID;                                        		// 0x0468 ( 0x0004 ) 
	struct FScriptDelegate                             __OnOK__Delegate;                                 		// 0x046C ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ButtonOK_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowInviteFriendHK.ButtonOK_OnClick
	 void                      InternalOnCreateComponent ( class UGUIComponent* NewComp, class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowInviteFriendHK.InternalOnCreateComponent
	 bool                      InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State );		//  GUIWarfareControls.BTWindowInviteFriendHK.InternalOnKeyEvent
	 void                      Closed ( class UGUIComponent* Sender, bool bCancelled );		//  GUIWarfareControls.BTWindowInviteFriendHK.Closed
	 void                      eventOpened ( class UGUIComponent* Sender );      		// [ FUNC_Event ] GUIWarfareControls.BTWindowInviteFriendHK.Opened
	 void                      ApplyLocalizedStrings (  );                       		//  GUIWarfareControls.BTWindowInviteFriendHK.ApplyLocalizedStrings
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowInviteFriendHK.InitComponent
	 bool                      OnOK ( class UGUIComponent* Sender );             		//  GUIWarfareControls.BTWindowInviteFriendHK.OnOK
	 void                      SetData ( struct FString UserName, int UID );     		//  GUIWarfareControls.BTWindowInviteFriendHK.SetData
}; // Size: 0x007C

// Class GUIWarfareControls.BTWindowInviteClanHK
class DLL_IMPORT UBTWindowInviteClanHK : public UBTWindowHK
{
public:
	struct FString                                     strLabel[ 0x04 ];                                 		// 0x04AC ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strModeTitle[ 0x02 ];                             		// 0x04DC ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strModeContent[ 0x02 ];                           		// 0x04F4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel[ 0x04 ];                                  		// 0x050C ( 0x0040 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x04 ];                                    		// 0x054C ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       ClanInviteMsg;                                    		// 0x055C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     SaveData;                                         		// 0x0560 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     SaveInviterName;                                  		// 0x056C ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowInviteClanHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowInviteClanHK.InitComponent
	 void                      SetClanJoin ( struct FString ClanName, struct FString Inviter );		//  GUIWarfareControls.BTWindowInviteClanHK.SetClanJoin
	 void                      SetClanInvite ( struct FString UserName );        		//  GUIWarfareControls.BTWindowInviteClanHK.SetClanInvite
}; // Size: 0x00CC

// Class GUIWarfareControls.BTACLMessengerBanHK
class DLL_IMPORT UBTACLMessengerBanHK : public UBTAutoColumnListHK
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0460 ( 0x0020 ) 

	// UScript Functions
	 void                      RemoveBlockUser ( struct FString UserName );      		//  GUIWarfareControls.BTACLMessengerBanHK.RemoveBlockUser
	 void                      AddBlockUser ( struct FString UserName );         		//  GUIWarfareControls.BTACLMessengerBanHK.AddBlockUser
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMessengerBanHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLMessengerBanHK.GetItemHeight
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMessengerBanHK.LC0_Draw
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLMessengerBanHK.GetUserName
	 void                      InitScrollBar (  );                               		//  GUIWarfareControls.BTACLMessengerBanHK.InitScrollBar
}; // Size: 0x0020

// Class GUIWarfareControls.BTCMMessengerBanHK
class DLL_IMPORT UBTCMMessengerBanHK : public UBTContextMenuHK
{
public:
	struct FString                                     strContextMenuName[ 0x02 ];                       		// 0x03E4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTCMMessengerBanHK.InitComponent
}; // Size: 0x0018

// Class GUIWarfareControls.BTACLMessengerPCBangHK
class DLL_IMPORT UBTACLMessengerPCBangHK : public UBTACLMessengerCommon
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0468 ( 0x0020 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMessengerPCBangHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetItemHeight
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetLevelMarkID
	 int                       GetClanNum ( int row );                           		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetClanNum
	 struct FImage             GetClanBL ( int row );                            		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetClanBL
	 struct FImage             GetClanBG ( int row );                            		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetClanBG
	 struct FImage             GetClanPattern ( int row );                       		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetClanPattern
	 int                       GetClanPatternID ( int row );                     		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetClanPatternID
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetClanName
	 int                       GetChannelNum ( int row );                        		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetChannelNum
	 struct FString            GetServerName ( int row );                        		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetServerName
	 int                       GetServerPort ( int row );                        		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetServerPort
	 int                       GetCurPosInt ( int row );                         		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetCurPosInt
	 int                       GetCurPos ( int row );                            		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetCurPos
	 struct FString            GetServerIP ( int row );                          		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetServerIP
	 int                       GetRoomNumber ( int row );                        		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetRoomNumber
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetUserName
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLMessengerPCBangHK.GetLevel
	 void                      LC1_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMessengerPCBangHK.LC1_Draw
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMessengerPCBangHK.LC0_Draw
}; // Size: 0x0020

// Class GUIWarfareControls.BTCMMessengerPCBangHK
class DLL_IMPORT UBTCMMessengerPCBangHK : public UBTCMMessengerOnOffline
{
public:
	struct FString                                     strContextMenuName[ 0x07 ];                       		// 0x0428 ( 0x0054 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTCMMessengerPCBangHK.InitComponent
}; // Size: 0x0054

// Class GUIWarfareControls.BTACLMessengerClanHK
class DLL_IMPORT UBTACLMessengerClanHK : public UBTACLMessengerCommon
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0468 ( 0x0020 ) 
	class UBTRODecorateStringHK*                       btToolTip;                                        		// 0x0488 ( 0x0004 ) 

	// UScript Functions
	 class UGUIToolTip*        MultiColumnList_OnBeginToolTip (  );              		//  GUIWarfareControls.BTACLMessengerClanHK.MultiColumnList_OnBeginToolTip
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMessengerClanHK.InitComponent
	 void                      SortByConnectionStatus (  );                      		//  GUIWarfareControls.BTACLMessengerClanHK.SortByConnectionStatus
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLMessengerClanHK.GetItemHeight
	 int                       GetLogOnState ( int row );                        		//  GUIWarfareControls.BTACLMessengerClanHK.GetLogOnState
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLMessengerClanHK.GetLevelMarkID
	 struct FString            GetSelfIntro ( int row );                         		//  GUIWarfareControls.BTACLMessengerClanHK.GetSelfIntro
	 int                       GetRoomNumber ( int row );                        		//  GUIWarfareControls.BTACLMessengerClanHK.GetRoomNumber
	 int                       GetChannelNum ( int row );                        		//  GUIWarfareControls.BTACLMessengerClanHK.GetChannelNum
	 int                       GetServerPort ( int row );                        		//  GUIWarfareControls.BTACLMessengerClanHK.GetServerPort
	 struct FString            GetServerIP ( int row );                          		//  GUIWarfareControls.BTACLMessengerClanHK.GetServerIP
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLMessengerClanHK.GetUserName
	 int                       GetCurPosInt ( int row );                         		//  GUIWarfareControls.BTACLMessengerClanHK.GetCurPosInt
	 struct FString            GetCurPos ( int row );                            		//  GUIWarfareControls.BTACLMessengerClanHK.GetCurPos
	 int                       GetCurState ( int row );                          		//  GUIWarfareControls.BTACLMessengerClanHK.GetCurState
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLMessengerClanHK.GetLevel
	 void                      SetCurState ( int row, int Value );               		//  GUIWarfareControls.BTACLMessengerClanHK.SetCurState
	 void                      SetChannelNumber ( int row, int Value );          		//  GUIWarfareControls.BTACLMessengerClanHK.SetChannelNumber
	 void                      SetGameRoomNumber ( int row, int Value );         		//  GUIWarfareControls.BTACLMessengerClanHK.SetGameRoomNumber
	 void                      SetServerName ( int row, struct FString Value );  		//  GUIWarfareControls.BTACLMessengerClanHK.SetServerName
	 void                      SetServerIP ( int row, struct FString Value );    		//  GUIWarfareControls.BTACLMessengerClanHK.SetServerIP
	 void                      SetServerPort ( int row, int Value );             		//  GUIWarfareControls.BTACLMessengerClanHK.SetServerPort
	 void                      SetChannelName ( int row, struct FString Value ); 		//  GUIWarfareControls.BTACLMessengerClanHK.SetChannelName
	 void                      SetCurLocationName ( int row, struct FString Value );		//  GUIWarfareControls.BTACLMessengerClanHK.SetCurLocationName
	 void                      SetCurpos ( int row, int Value );                 		//  GUIWarfareControls.BTACLMessengerClanHK.SetCurpos
	 void                      Internal_OnRendered ( class UCanvas* Canvas );    		//  GUIWarfareControls.BTACLMessengerClanHK.Internal_OnRendered
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMessengerClanHK.LC0_Draw
}; // Size: 0x0024

// Class GUIWarfareControls.BTCMMessengerClanHK
class DLL_IMPORT UBTCMMessengerClanHK : public UBTCMMessengerOnOffline
{
public:
	struct FString                                     strContextMenuName[ 0x05 ];                       		// 0x0428 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTCMMessengerClanHK.InitComponent
}; // Size: 0x003C

// Class GUIWarfareControls.BTACLMessengerFriendHK
class DLL_IMPORT UBTACLMessengerFriendHK : public UBTACLMessengerCommon
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0468 ( 0x0020 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMessengerFriendHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLMessengerFriendHK.GetItemHeight
	 void                      SortByConnectionStatus (  );                      		//  GUIWarfareControls.BTACLMessengerFriendHK.SortByConnectionStatus
	 int                       GetLogOnState ( int row );                        		//  GUIWarfareControls.BTACLMessengerFriendHK.GetLogOnState
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLMessengerFriendHK.GetLevelMarkID
	 int                       GetClanNum ( int row );                           		//  GUIWarfareControls.BTACLMessengerFriendHK.GetClanNum
	 struct FImage             GetClanBL ( int row );                            		//  GUIWarfareControls.BTACLMessengerFriendHK.GetClanBL
	 struct FImage             GetClanBG ( int row );                            		//  GUIWarfareControls.BTACLMessengerFriendHK.GetClanBG
	 struct FImage             GetClanPattern ( int row );                       		//  GUIWarfareControls.BTACLMessengerFriendHK.GetClanPattern
	 int                       GetClanPatternID ( int row );                     		//  GUIWarfareControls.BTACLMessengerFriendHK.GetClanPatternID
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLMessengerFriendHK.GetClanName
	 int                       GetChannelNum ( int row );                        		//  GUIWarfareControls.BTACLMessengerFriendHK.GetChannelNum
	 struct FString            GetServerName ( int row );                        		//  GUIWarfareControls.BTACLMessengerFriendHK.GetServerName
	 int                       GetServerPort ( int row );                        		//  GUIWarfareControls.BTACLMessengerFriendHK.GetServerPort
	 int                       GetCurPosInt ( int row );                         		//  GUIWarfareControls.BTACLMessengerFriendHK.GetCurPosInt
	 int                       GetCurState ( int row );                          		//  GUIWarfareControls.BTACLMessengerFriendHK.GetCurState
	 int                       GetCurPos ( int row );                            		//  GUIWarfareControls.BTACLMessengerFriendHK.GetCurPos
	 struct FString            GetServerIP ( int row );                          		//  GUIWarfareControls.BTACLMessengerFriendHK.GetServerIP
	 int                       GetRoomNumber ( int row );                        		//  GUIWarfareControls.BTACLMessengerFriendHK.GetRoomNumber
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLMessengerFriendHK.GetUserName
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLMessengerFriendHK.GetLevel
	 void                      SetCurState ( int row, int Value );               		//  GUIWarfareControls.BTACLMessengerFriendHK.SetCurState
	 void                      SetChannelNumber ( int row, int Value );          		//  GUIWarfareControls.BTACLMessengerFriendHK.SetChannelNumber
	 void                      SetGameRoomNumber ( int row, int Value );         		//  GUIWarfareControls.BTACLMessengerFriendHK.SetGameRoomNumber
	 void                      SetServerName ( int row, struct FString Value );  		//  GUIWarfareControls.BTACLMessengerFriendHK.SetServerName
	 void                      SetServerIP ( int row, struct FString Value );    		//  GUIWarfareControls.BTACLMessengerFriendHK.SetServerIP
	 void                      SetServerPort ( int row, int Value );             		//  GUIWarfareControls.BTACLMessengerFriendHK.SetServerPort
	 void                      SetChannelName ( int row, struct FString Value ); 		//  GUIWarfareControls.BTACLMessengerFriendHK.SetChannelName
	 void                      SetCurLocationName ( int row, struct FString Value );		//  GUIWarfareControls.BTACLMessengerFriendHK.SetCurLocationName
	 void                      SetCurpos ( int row, int Value );                 		//  GUIWarfareControls.BTACLMessengerFriendHK.SetCurpos
	 void                      LC1_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMessengerFriendHK.LC1_Draw
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMessengerFriendHK.LC0_Draw
}; // Size: 0x0020

// Class GUIWarfareControls.BTCMMessengerFriendHK
class DLL_IMPORT UBTCMMessengerFriendHK : public UBTCMMessengerOnOffline
{
public:
	struct FString                                     strContextMenuName[ 0x08 ];                       		// 0x0428 ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTCMMessengerFriendHK.InitComponent
}; // Size: 0x0060

// Class GUIWarfareControls.BTACLMessengerChannelHK
class DLL_IMPORT UBTACLMessengerChannelHK : public UBTACLMessengerCommon
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0468 ( 0x0020 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMessengerChannelHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLMessengerChannelHK.GetItemHeight
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLMessengerChannelHK.GetLevelMarkID
	 class FColor              GetUserNameColor ( int row, int idx );            		//  GUIWarfareControls.BTACLMessengerChannelHK.GetUserNameColor
	 bool                      IsFriendlyUser ( int row );                       		//  GUIWarfareControls.BTACLMessengerChannelHK.IsFriendlyUser
	 int                       GetClanPatternID ( int row );                     		//  GUIWarfareControls.BTACLMessengerChannelHK.GetClanPatternID
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLMessengerChannelHK.GetUserName
	 int                       GetUserID ( int row );                            		//  GUIWarfareControls.BTACLMessengerChannelHK.GetUserID
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLMessengerChannelHK.GetLevel
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLMessengerChannelHK.GetClanName
	 int                       GetClanID ( int row );                            		//  GUIWarfareControls.BTACLMessengerChannelHK.GetClanID
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMessengerChannelHK.LC0_Draw
}; // Size: 0x0020

// Class GUIWarfareControls.BTCMMessengerChannelHK
class DLL_IMPORT UBTCMMessengerChannelHK : public UBTContextMenuHK
{
public:
	struct FString                                     strContextMenuName[ 0x08 ];                       		// 0x03E4 ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTCMMessengerChannelHK.InitComponent
}; // Size: 0x0060

// Class GUIWarfareControls.BTWindowRequestFriendHK
class DLL_IMPORT UBTWindowRequestFriendHK : public UBTWindowHK
{
public:
	class UBTOwnerDrawImageHK*                         LabelDivider;                                     		// 0x04AC ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelInviteMsg;                                   		// 0x04B0 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelEditMsg;                                     		// 0x04B4 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTMultiLineEditBoxHK*                       MultiLineEditMsg;                                 		// 0x04B8 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strInviteMsg;                                     		// 0x04BC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class TArray< struct FString >                     friendNames;                                      		// 0x04C8 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< int >                                friendUIDs;                                       		// 0x04D4 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     friendRequestMsg;                                 		// 0x04E0 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      eventOpened ( class UGUIComponent* Sender );      		// [ FUNC_Event ] GUIWarfareControls.BTWindowRequestFriendHK.Opened
	 void                      ApplyLocalizedStrings (  );                       		//  GUIWarfareControls.BTWindowRequestFriendHK.ApplyLocalizedStrings
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowRequestFriendHK.InitComponent
	 bool                      IsExistFrinedList (  );                           		//  GUIWarfareControls.BTWindowRequestFriendHK.IsExistFrinedList
	 bool                      CheckExistFriendList ( int UID );                 		//  GUIWarfareControls.BTWindowRequestFriendHK.CheckExistFriendList
	 void                      GetTopFriendInfo ( struct FString* friName, int* friID );		//  GUIWarfareControls.BTWindowRequestFriendHK.GetTopFriendInfo
	 void                      DelData (  );                                     		//  GUIWarfareControls.BTWindowRequestFriendHK.DelData
	 void                      UpdateData (  );                                  		//  GUIWarfareControls.BTWindowRequestFriendHK.UpdateData
	 void                      AddData ( struct FString UserName, int UID, struct FString Msg );		//  GUIWarfareControls.BTWindowRequestFriendHK.AddData
	 void                      SetData ( struct FString UserName, int UID, struct FString Msg );		//  GUIWarfareControls.BTWindowRequestFriendHK.SetData
}; // Size: 0x0040

// Class GUIWarfareControls.BTTPOptionBaseHK
class DLL_IMPORT UBTTPOptionBaseHK : public UBTTabPanelHK
{
public:
	struct FString                                     strRound;                                         		// 0x0338 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRank;                                          		// 0x0344 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strWin;                                           		// 0x0350 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLose;                                          		// 0x035C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strKill;                                          		// 0x0368 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAssist;                                        		// 0x0374 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDeath;                                         		// 0x0380 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strHeadShot;                                      		// 0x038C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strNewRank;                                       		// 0x0398 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strNew;                                           		// 0x03A4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strHour;                                          		// 0x03B0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strMin;                                           		// 0x03BC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x03C8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCash;                                          		// 0x03D4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDay;                                           		// 0x03E0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDiscon;                                        		// 0x03EC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strTooltip[ 0x22 ];                               		// 0x03F8 ( 0x0198 ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned long                                      bPositionChanged:1;                               		// 0x0590 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawImageHK*                         BackPanel;                                        		// 0x0594 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                ItemWidth;                                        		// 0x0598 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                ItemHeight;                                       		// 0x059C ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                LabelWidth;                                       		// 0x05A0 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbACLList;                                        		// 0x05A4 ( 0x0010 ) 
	class UBTAutoImageListNew*                         ACLList;                                          		// 0x05B4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbVisibleComponent[ 0x11 ];                       		// 0x05B8 ( 0x0110 ) 
	class TArray< struct FFloatBox >                   InternalPadding;                                  		// 0x06C8 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UBTOwnerDrawImageHK* >         Label;                                            		// 0x06D4 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UGUIComponent* >               Content;                                          		// 0x06E0 ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned long                                      bToolTipVisible:1;                                		// 0x06EC ( 0x0004 )  [0x00000001]
	class UBTRODecorateStringHK*                       btToolTip;                                        		// 0x06F0 ( 0x0004 ) 
	int                                                WatchedIndex;                                     		// 0x06F4 ( 0x0004 ) 
	struct FScriptDelegate                             __Content_AWinPos_Changed__Delegate;              		// 0x06F8 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      ACLList_PositionChanged ( int NewPos );           		//  GUIWarfareControls.BTTPOptionBaseHK.ACLList_PositionChanged
	 struct FFloatBox          Content_AWinPos_Changed ( int contentindex, int visiblecomponentindex, struct FFloatBox fb );		//  GUIWarfareControls.BTTPOptionBaseHK.Content_AWinPos_Changed
	 void                      Internal_OnRendered ( class UCanvas* Canvas );    		//  GUIWarfareControls.BTTPOptionBaseHK.Internal_OnRendered
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPOptionBaseHK.Internal_OnPreDraw
	 bool                      Internal_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPOptionBaseHK.Internal_OnClick
	 bool                      OptionBase_OnKeyEvent ( float Delta, unsigned char* key, unsigned char* Action );		//  GUIWarfareControls.BTTPOptionBaseHK.OptionBase_OnKeyEvent
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionBaseHK.InitComponent
	 void                      PostChangeScrollBarPos (  );                      		//  GUIWarfareControls.BTTPOptionBaseHK.PostChangeScrollBarPos
}; // Size: 0x03C8

// Class GUIWarfareControls.BTTPOptionGraphicAdvanceHK
class DLL_IMPORT UBTTPOptionGraphicAdvanceHK : public UBTTPOptionBaseHK
{
public:
	unsigned long                                      bSupportPS30:1;                                   		// 0x0700 ( 0x0004 )  [0x00000001]
	unsigned long                                      bSupportR32:1;                                    		// 0x0700 ( 0x0004 )  [0x00000002]
	unsigned long                                      bSupportMRT:1;                                    		// 0x0700 ( 0x0004 )  [0x00000004]
	unsigned long                                      bSupportHWShadowMap:1;                            		// 0x0700 ( 0x0004 )  [0x00000008]
	unsigned long                                      bShowAAWarning:1;                                 		// 0x0700 ( 0x0004 )  [0x00000010]
	struct FString                                     strAntiAliasing[ 0x04 ];                          		// 0x0704 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLow;                                           		// 0x0734 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strHigh;                                          		// 0x0740 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x10 ];                                 		// 0x074C ( 0x00C0 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAnisortropy;                                   		// 0x080C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FOptionGraphicAdvanceInfo                   InitInfo;                                         		// 0x0818 ( 0x0028 ) 
	struct FOptionGraphicAdvanceInfo                   CurrentInfo;                                      		// 0x0840 ( 0x0028 ) 
	struct FOptionGraphicAdvanceInfo                   PredefineAdvanceSettings[ 0x05 ];                 		// 0x0868 ( 0x00C8 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]

	// UScript Functions
	 void                      InitializeContent (  );                           		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.InitializeContent
	 void                      OnHide_ComboBoxList (  );                         		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.OnHide_ComboBoxList
	 void                      OnShow_ComboBoxList (  );                         		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.OnShow_ComboBoxList
	 void                      Content17_OnSelect ( bool bOn );                  		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content17_OnSelect
	 void                      Content16_OnChangeValue ( int ChangeValue );      		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content16_OnChangeValue
	 void                      Content15_OnChangeValue ( int ChangeValue );      		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content15_OnChangeValue
	 void                      Content14_OnSelect ( bool bOn );                  		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content14_OnSelect
	 void                      Content12_OnSelect ( bool bOn );                  		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content12_OnSelect
	 void                      Content11_OnSelect ( bool bOn );                  		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content11_OnSelect
	 void                      Content10_OnSelect ( bool bOn );                  		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content10_OnSelect
	 void                      Content9_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content9_OnSelect
	 void                      Content7_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content7_OnSelect
	 void                      Content6_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content6_OnSelect
	 void                      Content8_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content8_OnSelect
	 void                      Content5_OnChangeValue ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content5_OnChangeValue
	 void                      Content4_OnChangeValue ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content4_OnChangeValue
	 bool                      Content3_OnChangeValue ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content3_OnChangeValue
	 bool                      Content2_OnChangeValue ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content2_OnChangeValue
	 bool                      Content1_OnChangeValue ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content1_OnChangeValue
	 bool                      Content0_OnChangeValue ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.Content0_OnChangeValue
	 void                      InitializeLabel (  );                             		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.InitializeLabel
	 void                      LoadData (  );                                    		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.LoadData
	 struct FOptionGraphicAdvanceInfo GetDefaultTestAdvanceSettings ( class APlayerController* PC );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.GetDefaultTestAdvanceSettings
	 struct FOptionGraphicAdvanceInfo GetPredefineAdvanceSettings ( class APlayerController* PC, int Index );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.GetPredefineAdvanceSettings
	 bool                      SetAdvanceSettings ( class APlayerController* PC, struct FOptionGraphicAdvanceInfo CurrentInfo, struct FOptionGraphicAdvanceInfo InitInfo, bool bIsOwner, bool bForceSettings );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.SetAdvanceSettings
	 struct FOptionGraphicAdvanceInfo GetAdvanceSettings ( class APlayerController* PC );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.GetAdvanceSettings
	 void                      SaveData (  );                                    		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.SaveData
	 void                      ResetData (  );                                   		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.ResetData
	 void                      InitData (  );                                    		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.InitData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionGraphicAdvanceHK.InitComponent
}; // Size: 0x0230

// Class GUIWarfareControls.BTTPMyInfoHK
class DLL_IMPORT UBTTPMyInfoHK : public UGUITabPanel
{
public:
	int                                                titleFontSize;                                    		// 0x0330 ( 0x0004 ) 
	int                                                defaultFontSize;                                  		// 0x0334 ( 0x0004 ) 
	class UBTROClanMarkHK*                             roClanMark;                                       		// 0x0338 ( 0x0004 ) 
	struct FImage                                      LevelImg;                                         		// 0x033C ( 0x0020 ) 
	struct FString                                     myName;                                           		// 0x035C ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     ClanName;                                         		// 0x0368 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                Ranking;                                          		// 0x0374 ( 0x0004 ) 
	int                                                curExp;                                           		// 0x0378 ( 0x0004 ) 
	int                                                maxExp;                                           		// 0x037C ( 0x0004 ) 
	struct FString                                     expPerc;                                          		// 0x0380 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                Point;                                            		// 0x038C ( 0x0004 ) 
	int                                                Cash;                                             		// 0x0390 ( 0x0004 ) 
	int                                                recordWin;                                        		// 0x0394 ( 0x0004 ) 
	int                                                recordLose;                                       		// 0x0398 ( 0x0004 ) 
	class FColor                                       MenuColor;                                        		// 0x039C ( 0x0004 ) 
	class FColor                                       DescColor;                                        		// 0x03A0 ( 0x0004 ) 
	struct FString                                     strClan;                                          		// 0x03A4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRanking[ 0x02 ];                               		// 0x03B0 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strExp;                                           		// 0x03C8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x03D4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRecord;                                        		// 0x03E0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strWin;                                           		// 0x03EC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLose;                                          		// 0x03F8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strWinLose;                                       		// 0x0404 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FText                                       tPoint;                                           		// 0x0410 ( 0x001C ) [ CPF_NeedCtorLink ]
	class TArray< struct FText >                       taRanking;                                        		// 0x042C ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FText >                       taExpbar;                                         		// 0x0438 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTROExpBarHK*                               roExpBar;                                         		// 0x0444 ( 0x0004 ) 

	// UScript Functions
	 void                      OnRendered ( class UCanvas* C );                  		//  GUIWarfareControls.BTTPMyInfoHK.OnRendered
	 void                      SetMyInfoA ( struct FString CharName, int Level, int curExp, int startExp, int maxExp, int LevelMarkID );		//  GUIWarfareControls.BTTPMyInfoHK.SetMyInfoA
	 void                      SetClanInfo ( struct FString ClanName, int ClanPattern, int ClanBG, int ClanBL, int ClanLevel );		//  GUIWarfareControls.BTTPMyInfoHK.SetClanInfo
	 void                      SetRankingInfo ( int Ranking, int Win, int Lose );		//  GUIWarfareControls.BTTPMyInfoHK.SetRankingInfo
	 void                      SetMoneyInfo ( int P, int C );                    		//  GUIWarfareControls.BTTPMyInfoHK.SetMoneyInfo
	 void                      SetMyInfo ( struct FString CharName, struct FString ClanName, struct FCharInfo cInfo );		//  GUIWarfareControls.BTTPMyInfoHK.SetMyInfo
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMyInfoHK.InitComponent
}; // Size: 0x0118

// Class GUIWarfareControls.BTTPMessengerHKCN
class DLL_IMPORT UBTTPMessengerHKCN : public UBTTPMessengerHK
{
public:
	struct FScriptDelegate                             __OnPopupChannel__Delegate;                       		// 0x044C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupFriend__Delegate;                        		// 0x0454 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupClan__Delegate;                          		// 0x045C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupPCBang__Delegate;                        		// 0x0464 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupChannelCheck__Delegate;                  		// 0x046C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupFriendCheck__Delegate;                   		// 0x0474 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupClanCheck__Delegate;                     		// 0x047C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupPCBangCheck__Delegate;                   		// 0x0484 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChannelUserList_OnHitBottom__Delegate;          		// 0x048C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChannelUserList_OnHitTop__Delegate;             		// 0x0494 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChannelUserList_OnAdjustWindow__Delegate;       		// 0x049C ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      UpdateTabButtonPosition (  );                     		//  GUIWarfareControls.BTTPMessengerHKCN.UpdateTabButtonPosition
	 bool                      BTWindowDefineARHK_18_19_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMessengerHKCN.BTWindowDefineARHK_18_19_OnOK
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMessengerHKCN.InitComponent
	 void                      BTACLMessengerChannelHK_OnHitTop ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHKCN.BTACLMessengerChannelHK_OnHitTop
	 void                      BTACLMessengerChannelHK_OnHitBottom ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHKCN.BTACLMessengerChannelHK_OnHitBottom
	 void                      BTACLMessengerChannelHK_OnAdjustWindow ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHKCN.BTACLMessengerChannelHK_OnAdjustWindow
	 void                      ChannelUserList_OnAdjustWindow ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHKCN.ChannelUserList_OnAdjustWindow
	 void                      ChannelUserList_OnHitTop ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHKCN.ChannelUserList_OnHitTop
	 void                      ChannelUserList_OnHitBottom ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPMessengerHKCN.ChannelUserList_OnHitBottom
	 void                      ContextMenu_OnSelected ( int ContextMenuIndex );  		//  GUIWarfareControls.BTTPMessengerHKCN.ContextMenu_OnSelected
	 void                      OnPopupPCBangCheck ( class UBTACLMessengerPCBangHK* acl, class UBTCMMessengerPCBangHK* cm );		//  GUIWarfareControls.BTTPMessengerHKCN.OnPopupPCBangCheck
	 void                      OnPopupClanCheck ( class UBTACLMessengerClanHK* acl, class UBTCMMessengerClanHK* cm );		//  GUIWarfareControls.BTTPMessengerHKCN.OnPopupClanCheck
	 void                      OnPopupFriendCheck ( class UBTACLMessengerFriendHK* acl, class UBTCMMessengerFriendHK* cm );		//  GUIWarfareControls.BTTPMessengerHKCN.OnPopupFriendCheck
	 void                      OnPopupChannelCheck ( class UBTACLMessengerChannelHK* acl, class UBTCMMessengerChannelHK* cm );		//  GUIWarfareControls.BTTPMessengerHKCN.OnPopupChannelCheck
	 void                      OnPopupCheck ( int Panel, class UBTAutoColumnListHK* acl );		//  GUIWarfareControls.BTTPMessengerHKCN.OnPopupCheck
	 void                      OnPopupPCBang ( int ContextMenuIndex, class UBTACLMessengerPCBangHK* acl );		//  GUIWarfareControls.BTTPMessengerHKCN.OnPopupPCBang
	 void                      OnPopupClan ( int ContextMenuIndex, class UBTACLMessengerClanHK* acl );		//  GUIWarfareControls.BTTPMessengerHKCN.OnPopupClan
	 void                      OnPopupFriend ( int ContextMenuIndex, class UBTACLMessengerFriendHK* acl );		//  GUIWarfareControls.BTTPMessengerHKCN.OnPopupFriend
	 void                      OnPopupChannel ( int ContextMenuIndex, class UBTACLMessengerChannelHK* acl );		//  GUIWarfareControls.BTTPMessengerHKCN.OnPopupChannel
	 bool                      ContextMenu_OnClose ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPMessengerHKCN.ContextMenu_OnClose
	 bool                      ContextMenu_OnOpen ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPMessengerHKCN.ContextMenu_OnOpen
	 void                      RemoveChannelUser ( int UID );                    		//  GUIWarfareControls.BTTPMessengerHKCN.RemoveChannelUser
	 bool                      IsFriendlyUser ( struct FString UserName, struct FString ClanName, int ListIdx );		//  GUIWarfareControls.BTTPMessengerHKCN.IsFriendlyUser
	 void                      UpdateFriendlyUser ( int ListIdx );               		//  GUIWarfareControls.BTTPMessengerHKCN.UpdateFriendlyUser
	 int                       FindFriendFromUserName ( struct FString UserName );		//  GUIWarfareControls.BTTPMessengerHKCN.FindFriendFromUserName
	 void                      AddPCBangUser ( struct FString UserName, int ClanMark, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString ServerName, struct FString ServerIP, int serverPort, int CurPos, int ChannelNum, struct FString ChannelNickName, int RoomNum, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPMessengerHKCN.AddPCBangUser
	 void                      ReplaceChannelUser ( int Index, int ClanPattern, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString UserName, int UID, int ClanGrade, int ClanWinCnt, int ClanLoseCnt, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPMessengerHKCN.ReplaceChannelUser
	 void                      AddChannelUser ( int ClanPattern, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString UserName, int UID, int ClanGrade, int ClanWinCnt, int ClanLoseCnt, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPMessengerHKCN.AddChannelUser
	 int                       FindChannelUser ( int UID );                      		//  GUIWarfareControls.BTTPMessengerHKCN.FindChannelUser
}; // Size: 0x0058

// Class GUIWarfareControls.BTTPMyInfoHKCN
class DLL_IMPORT UBTTPMyInfoHKCN : public UBTTPMyInfoHK
{
public:
	class UBTROExpBarHKCN*                             expbar;                                           		// 0x0448 ( 0x0004 ) 

	// UScript Functions
	 void                      OnRendered ( class UCanvas* C );                  		//  GUIWarfareControls.BTTPMyInfoHKCN.OnRendered
	 void                      SetMyInfoA ( struct FString CharName, int Level, int curExp, int startExp, int maxExp, int LevelMarkID );		//  GUIWarfareControls.BTTPMyInfoHKCN.SetMyInfoA
	 void                      SetClanInfo ( struct FString ClanName, int ClanPattern, int ClanBG, int ClanBL, int ClanLevel );		//  GUIWarfareControls.BTTPMyInfoHKCN.SetClanInfo
	 void                      SetRankingInfo ( int Ranking, int Win, int Lose );		//  GUIWarfareControls.BTTPMyInfoHKCN.SetRankingInfo
	 void                      SetMoneyInfo ( int P, int C );                    		//  GUIWarfareControls.BTTPMyInfoHKCN.SetMoneyInfo
	 void                      SetMyInfo ( struct FString CharName, struct FString ClanName, struct FCharInfo cInfo );		//  GUIWarfareControls.BTTPMyInfoHKCN.SetMyInfo
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMyInfoHKCN.InitComponent
}; // Size: 0x0004

// Class GUIWarfareControls.BTTPRoomInfoHK
class DLL_IMPORT UBTTPRoomInfoHK : public UBTTabPanelHK
{
public:
	struct FString                                     MapName;                                          		// 0x0338 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                Diffcult;                                         		// 0x0344 ( 0x0004 ) 
	int                                                ModeNum;                                          		// 0x0348 ( 0x0004 ) 
	int                                                WeaponLimit;                                      		// 0x034C ( 0x0004 ) 
	struct FString                                     ModeName;                                         		// 0x0350 ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned long                                      bHardCore:1;                                      		// 0x035C ( 0x0004 )  [0x00000001]
	struct FString                                     HardCore;                                         		// 0x0360 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     GameTime;                                         		// 0x036C ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     TargetScore;                                      		// 0x0378 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     UserCount;                                        		// 0x0384 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FImage                                      MapImage;                                         		// 0x0390 ( 0x0020 ) 
	struct FImage                                      ImageSupply[ 0x03 ];                              		// 0x03B0 ( 0x0060 ) 
	struct FString                                     strButtonRoomInfo[ 0x02 ];                        		// 0x0410 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strHardCore;                                      		// 0x0428 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGameTime;                                      		// 0x0434 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strTargetScore;                                   		// 0x0440 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strUserCount;                                     		// 0x044C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDifficult[ 0x06 ];                             		// 0x0458 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strWeaponLimit;                                   		// 0x04A0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strBotModeUserTeam[ 0x02 ];                       		// 0x04AC ( 0x0018 ) [ CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRoomInfo;                                   		// 0x04C4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      Internal_OnRender ( class UCanvas* C );           		//  GUIWarfareControls.BTTPRoomInfoHK.Internal_OnRender
	 void                      ChageRoomInfoButton ( bool bOwner );              		//  GUIWarfareControls.BTTPRoomInfoHK.ChageRoomInfoButton
	 void                      SetData ( struct FString sMapName, struct FString sMapImageName, struct FString sModeName, bool sbHardCore, struct FString sGameTime, struct FString sTargetScore, struct FString sUserCount, int iModeNum, int iDiffcult, int WeaponLimit, int BotUserTeam );		//  GUIWarfareControls.BTTPRoomInfoHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPRoomInfoHK.InitComponent
}; // Size: 0x0190

// Class GUIWarfareControls.BTTPChatHKCN
class DLL_IMPORT UBTTPChatHKCN : public UBTTPChatHK
{
public:
	struct FFloatBox                                   fChatTab[ 0x03 ];                                 		// 0x0430 ( 0x0030 ) 

	// UScript Functions
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPChatHKCN.Internal_OnPreDraw
	 bool                      ButtonChatState_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPChatHKCN.ButtonChatState_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPChatHKCN.InitComponent
}; // Size: 0x0030

// Class GUIWarfareControls.BTLabelTutorialQuestInfoHK
class DLL_IMPORT UBTLabelTutorialQuestInfoHK : public UBTOwnerDrawImageHK
{
public:
	float                                              StayTime;                                         		// 0x03B4 ( 0x0004 ) 
	int                                                Phase;                                            		// 0x03B8 ( 0x0004 ) 
	float                                              Alpha;                                            		// 0x03BC ( 0x0004 ) 
	class UBTACLQuestHK*                               ACLQuest;                                         		// 0x03C0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FText                                       txtQuestDesc;                                     		// 0x03C4 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       txtQuestExtDesc;                                  		// 0x03E0 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       txtReward;                                        		// 0x03FC ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       txtLastReward;                                    		// 0x0418 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FImage                                      Exclamation;                                      		// 0x0434 ( 0x0020 ) 
	struct FImage                                      HelpResource;                                     		// 0x0454 ( 0x0020 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelTutorialQuestInfoHK.Internal_OnRendered
	 bool                      Internal_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTLabelTutorialQuestInfoHK.Internal_OnClick
	 void                      StartShow (  );                                   		//  GUIWarfareControls.BTLabelTutorialQuestInfoHK.StartShow
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTLabelTutorialQuestInfoHK.InitComponent
}; // Size: 0x00C0

// Class GUIWarfareControls.BTComboBoxHK
class DLL_IMPORT UBTComboBoxHK : public UGUIPanel
{
public:
	unsigned char                                      FontDrawType;                                     		// 0x0310 ( 0x0001 ) 
	unsigned char                                      ExtraDataFontDrawType;                            		// 0x0311 ( 0x0001 ) 
	int                                                FontSize[ 0x05 ];                                 		// 0x0314 ( 0x0014 ) 
	class FColor                                       FontColor[ 0x03 ];                                		// 0x0328 ( 0x000C ) 
	class FColor                                       FontShadowColor;                                  		// 0x0334 ( 0x0004 ) 
	class FColor                                       FontColorOfTitle;                                 		// 0x0338 ( 0x0004 ) 
	int                                                FontPadding[ 0x04 ];                              		// 0x033C ( 0x0010 ) 
	unsigned long                                      bShowExtraData:1;                                 		// 0x034C ( 0x0004 )  [0x00000001]
	struct FImage                                      combSelectImg;                                    		// 0x0350 ( 0x0020 ) 
	struct FImage                                      combBackImg;                                      		// 0x0370 ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         Border;                                           		// 0x0390 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UGUIComboBox*                                ComboBox;                                         		// 0x0394 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	unsigned long                                      bHideBtn:1;                                       		// 0x0398 ( 0x0004 )  [0x00000001]

	// UScript Functions
	 void                      InternalOnChange ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTComboBoxHK.InternalOnChange
	 bool                      InternalDraw ( class UCanvas* C );                		//  GUIWarfareControls.BTComboBoxHK.InternalDraw
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTComboBoxHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTComboBoxHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTComboBoxHK.GetItemHeight
	 void                      EnableMe (  );                                    		//  GUIWarfareControls.BTComboBoxHK.EnableMe
	 void                      DisableMe (  );                                   		//  GUIWarfareControls.BTComboBoxHK.DisableMe
	 void                      OnComboListDrawItem ( class UCanvas* C, int Item, float X, float Y, float W, float HT, bool bSelected, bool bPending );		//  GUIWarfareControls.BTComboBoxHK.OnComboListDrawItem
	 bool                      OnComboEditDraw ( class UCanvas* C );             		//  GUIWarfareControls.BTComboBoxHK.OnComboEditDraw
	 void                      InitComboBox (  );                                		//  GUIWarfareControls.BTComboBoxHK.InitComboBox
	 void                      InitScrollBar (  );                               		//  GUIWarfareControls.BTComboBoxHK.InitScrollBar
	 void                      SetFontSizeAll ( int Size );                      		//  GUIWarfareControls.BTComboBoxHK.SetFontSizeAll
	 void                      SetDefaultFontColor (  );                         		//  GUIWarfareControls.BTComboBoxHK.SetDefaultFontColor
	 struct FString            GetSelectExtra (  );                              		//  GUIWarfareControls.BTComboBoxHK.GetSelectExtra
}; // Size: 0x008C

// Class GUIWarfareControls.BTWindowCreateClanNeedPointHK
class DLL_IMPORT UBTWindowCreateClanNeedPointHK : public UBTWindowHK
{
public:
	struct FString                                     strLabel;                                         		// 0x04AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel;                                          		// 0x04B8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label;                                            		// 0x04C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowCreateClanNeedPointHK.InitComponent
}; // Size: 0x0020

// Class GUIWarfareControls.BTWindowClanMenuHK
class DLL_IMPORT UBTWindowClanMenuHK : public UBTWindowHK
{
public:
	struct FString                                     strOK2;                                           		// 0x04AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabel;                                         		// 0x04B8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelHelp[ 0x03 ];                             		// 0x04C4 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel;                                          		// 0x04E8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelHelp[ 0x03 ];                              		// 0x04F8 ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label;                                            		// 0x0528 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelHelp[ 0x03 ];                                		// 0x052C ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonCreateClan;                               		// 0x0538 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonFindClan;                                 		// 0x0548 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strButtonCreateClan;                              		// 0x0558 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonFindClan;                                		// 0x0564 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonCreateClan;                                 		// 0x0570 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonFindClan;                                   		// 0x0574 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 bool                      OnOK ( class UGUIComponent* Sender );             		//  GUIWarfareControls.BTWindowClanMenuHK.OnOK
	 void                      SetClanLookingFor ( bool bLookFor );              		//  GUIWarfareControls.BTWindowClanMenuHK.SetClanLookingFor
	 bool                      ButtonFindClan_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowClanMenuHK.ButtonFindClan_OnClick
	 bool                      ButtonCreateClan_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowClanMenuHK.ButtonCreateClan_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowClanMenuHK.InitComponent
}; // Size: 0x00CC

// Class GUIWarfareControls.BTWindowRoomInfoHK
class DLL_IMPORT UBTWindowRoomInfoHK : public UBTWindowHK
{
public:
	struct FUIRoomInfoStruct                           UIRoomInfo;                                       		// 0x04AC ( 0x0050 ) [ CPF_NeedCtorLink ]
	struct FUIRoomInfoStruct                           UIRoomInfo_Default;                               		// 0x04FC ( 0x0050 ) [ CPF_NeedCtorLink ]
	class UwMatchMaker*                                MatchMaker;                                       		// 0x054C ( 0x0004 ) [ CPF_Transient ]
	class TArray< struct FGameModeInfo >               GameModeInfos;                                    		// 0x0550 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FFloatBox                                   fbSeparator;                                      		// 0x055C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Separator;                                        		// 0x056C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelCommonTop[ 0x09 ];                         		// 0x0570 ( 0x0090 ) 
	struct FString                                     strLabelCommonTop[ 0x09 ];                        		// 0x0600 ( 0x006C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         LabelCommonTop[ 0x09 ];                           		// 0x066C ( 0x0024 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelCommonBottom[ 0x07 ];                      		// 0x0690 ( 0x0070 ) 
	struct FString                                     strLabelCommonBottom[ 0x07 ];                     		// 0x0700 ( 0x0054 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         LabelCommonBottom[ 0x07 ];                        		// 0x0754 ( 0x001C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelAdd[ 0x04 ];                               		// 0x0770 ( 0x0040 ) 
	class UBTOwnerDrawImageHK*                         LabelAdd[ 0x04 ];                                 		// 0x07B0 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabelSwitchSide;                               		// 0x07C0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelBombPossesion;                            		// 0x07CC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strBombForEveryone;                               		// 0x07D8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strBombForOne;                                    		// 0x07E4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelChangeAD;                                 		// 0x07F0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelChangeRound;                              		// 0x07FC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strUserCount;                                     		// 0x0808 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelBot_UserTeam[ 0x04 ];                     		// 0x0814 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelBot_Difficult[ 0x06 ];                    		// 0x0844 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelBot_AF[ 0x02 ];                           		// 0x088C ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelBot_RSA[ 0x02 ];                          		// 0x08A4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbEdit[ 0x02 ];                                   		// 0x08BC ( 0x0020 ) 
	struct FFloatBox                                   fbLabelEdit[ 0x02 ];                              		// 0x08DC ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         LabelEdit[ 0x02 ];                                		// 0x08FC ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                Edit[ 0x02 ];                                     		// 0x0904 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                EditRoomName;                                     		// 0x090C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                EditPassword;                                     		// 0x0910 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbCombo[ 0x07 ];                                  		// 0x0914 ( 0x0070 ) 
	struct FFloatBox                                   fbComboAdd[ 0x04 ];                               		// 0x0984 ( 0x0040 ) 
	class UBTComboBoxHK*                               Combo[ 0x07 ];                                    		// 0x09C4 ( 0x001C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboAdd[ 0x04 ];                                 		// 0x09E0 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxMapHK*                            ComboMap;                                         		// 0x09F0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboGameMode;                                    		// 0x09F4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboGameTime;                                    		// 0x09F8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboWeaponRestriction;                           		// 0x09FC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboUserCount;                                   		// 0x0A00 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboTargetScore;                                 		// 0x0A04 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboIsHardCore;                                  		// 0x0A08 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboSwitchSide;                                  		// 0x0A0C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboBombPossesion;                               		// 0x0A10 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboChangeAD;                                    		// 0x0A14 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboChangeRound;                                 		// 0x0A18 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboBot_UserTeam;                                		// 0x0A1C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboBot_Diffcult;                                		// 0x0A20 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboBot_AF;                                      		// 0x0A24 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboBot_RSA;                                     		// 0x0A28 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbRadio[ 0x07 ];                                  		// 0x0A2C ( 0x0070 ) 
	class UBTRadioOnOffButtonHK*                       Radio[ 0x07 ];                                    		// 0x0A9C ( 0x001C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTRadioOnOffButtonHK*                       RadioTeamDamage;                                  		// 0x0AB8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTRadioOnOffButtonHK*                       RadioFreeCamera;                                  		// 0x0ABC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTRadioOnOffButtonHK*                       RadioTeamBalance;                                 		// 0x0AC0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTRadioOnOffButtonHK*                       RadioKillCam;                                     		// 0x0AC4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTRadioOnOffButtonHK*                       RadioJoinInPlaying;                               		// 0x0AC8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTRadioOnOffButtonHK*                       RadioVoiceChatting;                               		// 0x0ACC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTRadioOnOffButtonHK*                       RadioVote;                                        		// 0x0AD0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         ImageMap;                                         		// 0x0AD4 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         ImageSupply[ 0x03 ];                              		// 0x0AD8 ( 0x000C ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         NewMapIcon;                                       		// 0x0AE4 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTRadioOnOffButtonHK*                       ReSpawnRadioBtn;                                  		// 0x0AE8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbReSpawnRadio;                                   		// 0x0AEC ( 0x0010 ) 
	struct FString                                     CaptionReSpawn;                                   		// 0x0AFC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionRandom;                                    		// 0x0B08 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionFixed;                                     		// 0x0B14 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         LabelReSpawn;                                     		// 0x0B20 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fLabelReSpawn;                                    		// 0x0B24 ( 0x0010 ) 
	unsigned long                                      bEnableFillModeList:1;                            		// 0x0B34 ( 0x0004 )  [0x00000001]

	// UScript Functions
	 void                      FloatingRendered ( class UCanvas* C );            		//  GUIWarfareControls.BTWindowRoomInfoHK.FloatingRendered
	 int                       GetBotModeUserTeam (  );                          		//  GUIWarfareControls.BTWindowRoomInfoHK.GetBotModeUserTeam
	 int                       GetBotModeDifficulty (  );                        		//  GUIWarfareControls.BTWindowRoomInfoHK.GetBotModeDifficulty
	 int                       GetRSABotCount (  );                              		//  GUIWarfareControls.BTWindowRoomInfoHK.GetRSABotCount
	 int                       GetAFBotCount (  );                               		//  GUIWarfareControls.BTWindowRoomInfoHK.GetAFBotCount
	 int                       IsPlayWithBots (  );                              		//  GUIWarfareControls.BTWindowRoomInfoHK.IsPlayWithBots
	 int                       GetIsHardCore (  );                               		//  GUIWarfareControls.BTWindowRoomInfoHK.GetIsHardCore
	 struct FString            GetTargetScore (  );                              		//  GUIWarfareControls.BTWindowRoomInfoHK.GetTargetScore
	 int                       GetWeaponRestrictionIndex (  );                   		//  GUIWarfareControls.BTWindowRoomInfoHK.GetWeaponRestrictionIndex
	 struct FString            GetGameTime (  );                                 		//  GUIWarfareControls.BTWindowRoomInfoHK.GetGameTime
	 struct FString            GetUserCount (  );                                		//  GUIWarfareControls.BTWindowRoomInfoHK.GetUserCount
	 int                       GetMapIndex (  );                                 		//  GUIWarfareControls.BTWindowRoomInfoHK.GetMapIndex
	 struct FString            GetMap (  );                                      		//  GUIWarfareControls.BTWindowRoomInfoHK.GetMap
	 int                       GetGameModeIndex (  );                            		//  GUIWarfareControls.BTWindowRoomInfoHK.GetGameModeIndex
	 struct FString            GetGameModeClass (  );                            		//  GUIWarfareControls.BTWindowRoomInfoHK.GetGameModeClass
	 bool                      GetMultiBomb (  );                                		//  GUIWarfareControls.BTWindowRoomInfoHK.GetMultiBomb
	 void                      ComboBot_RSA_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboBot_RSA_OnChange
	 void                      ComboBot_AF_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboBot_AF_OnChange
	 void                      ComboWeaponRest_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboWeaponRest_OnChange
	 void                      ComboBot_Diffcult_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboBot_Diffcult_OnChange
	 void                      ComboBot_UserTeam_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboBot_UserTeam_OnChange
	 void                      ComboBombPossesion_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboBombPossesion_OnChange
	 void                      ComboUserCount_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboUserCount_OnChange
	 void                      ChangeComboAdd (  );                              		//  GUIWarfareControls.BTWindowRoomInfoHK.ChangeComboAdd
	 void                      ComboGameMode_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboGameMode_OnChange
	 void                      SetGameMode_DefaultSettings ( int cur );          		//  GUIWarfareControls.BTWindowRoomInfoHK.SetGameMode_DefaultSettings
	 void                      ComboMap_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboMap_OnChange
	 void                      ComboTargetScore_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboTargetScore_OnChange
	 void                      ComboGameTime_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRoomInfoHK.ComboGameTime_OnChange
	 void                      FillData (  );                                    		//  GUIWarfareControls.BTWindowRoomInfoHK.FillData
	 void                      EndFillData (  );                                 		//  GUIWarfareControls.BTWindowRoomInfoHK.EndFillData
	 void                      BeginFillData (  );                               		//  GUIWarfareControls.BTWindowRoomInfoHK.BeginFillData
	 void                      FillIsHardCore (  );                              		//  GUIWarfareControls.BTWindowRoomInfoHK.FillIsHardCore
	 void                      SetWeaponRestriction ( int Value );               		//  GUIWarfareControls.BTWindowRoomInfoHK.SetWeaponRestriction
	 void                      FillWeaponRestriction (  );                       		//  GUIWarfareControls.BTWindowRoomInfoHK.FillWeaponRestriction
	 void                      FillUserCountRalRalRa ( bool bInvisibleodd );     		//  GUIWarfareControls.BTWindowRoomInfoHK.FillUserCountRalRalRa
	 void                      SetUserCount ( int usercnt );                     		//  GUIWarfareControls.BTWindowRoomInfoHK.SetUserCount
	 void                      FillTargetScore (  );                             		//  GUIWarfareControls.BTWindowRoomInfoHK.FillTargetScore
	 void                      FillGameTime (  );                                		//  GUIWarfareControls.BTWindowRoomInfoHK.FillGameTime
	 void                      FillDefaultGameTimeAndScore (  );                 		//  GUIWarfareControls.BTWindowRoomInfoHK.FillDefaultGameTimeAndScore
	 void                      FillGameMode (  );                                		//  GUIWarfareControls.BTWindowRoomInfoHK.FillGameMode
	 void                      InitGameModeSetting (  );                         		//  GUIWarfareControls.BTWindowRoomInfoHK.InitGameModeSetting
	 void                      FillMap (  );                                     		//  GUIWarfareControls.BTWindowRoomInfoHK.FillMap
	 int                       GetMapIDFromComboIndex ( int idx );               		//  GUIWarfareControls.BTWindowRoomInfoHK.GetMapIDFromComboIndex
	 int                       GetSelectedMapID (  );                            		//  GUIWarfareControls.BTWindowRoomInfoHK.GetSelectedMapID
	 void                      InitializeRadioButton (  );                       		//  GUIWarfareControls.BTWindowRoomInfoHK.InitializeRadioButton
	 void                      InitializeComboBox (  );                          		//  GUIWarfareControls.BTWindowRoomInfoHK.InitializeComboBox
	 void                      InitializeEditBox (  );                           		//  GUIWarfareControls.BTWindowRoomInfoHK.InitializeEditBox
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowRoomInfoHK.InitComponent
	 void                      InitializeRoomInfoStruct ( class UwMatchMaker* MM );		//  GUIWarfareControls.BTWindowRoomInfoHK.InitializeRoomInfoStruct
}; // Size: 0x068C

// Class GUIWarfareControls.BTRadioOnOffButtonHK
class DLL_IMPORT UBTRadioOnOffButtonHK : public UBTTabPanelHK
{
public:
	class UButtonGroups*                               Group;                                            		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTCheckBoxHK*                               ButtonOff;                                        		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTCheckBoxHK*                               ButtonOn;                                         		// 0x0340 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                OnOffSpaceRange;                                  		// 0x0344 ( 0x0004 ) 
	struct FScriptDelegate                             __OnSelect__Delegate;                             		// 0x0348 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ButtonGroups_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTRadioOnOffButtonHK.ButtonGroups_OnClick
	 void                      OnSelect ( bool bOn );                            		//  GUIWarfareControls.BTRadioOnOffButtonHK.OnSelect
	 bool                      getData (  );                                     		//  GUIWarfareControls.BTRadioOnOffButtonHK.getData
	 void                      SetData ( bool bOn );                             		//  GUIWarfareControls.BTRadioOnOffButtonHK.SetData
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTRadioOnOffButtonHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTRadioOnOffButtonHK.InitComponent
}; // Size: 0x0018

// Class GUIWarfareControls.RenderObject
class DLL_IMPORT URenderObject : public UObject
{
public:
	struct FFloatBox                                   AWinPos;                                          		// 0x002C ( 0x0010 ) 
	unsigned long                                      bVisible:1;                                       		// 0x003C ( 0x0004 )  [0x00000001]
	unsigned long                                      bMouseOn:1;                                       		// 0x003C ( 0x0004 )  [0x00000002]
	unsigned long                                      bFocused:1;                                       		// 0x003C ( 0x0004 )  [0x00000004]
	unsigned long                                      bvisibleBtn:1;                                    		// 0x003C ( 0x0004 )  [0x00000008]
	unsigned long                                      bMouseClick:1;                                    		// 0x003C ( 0x0004 )  [0x00000010]
	unsigned long                                      bMouseRelease:1;                                  		// 0x003C ( 0x0004 )  [0x00000020]
	unsigned long                                      bQuickSlot:1;                                     		// 0x003C ( 0x0004 )  [0x00000040]
	unsigned long                                      bNeedUpdate:1;                                    		// 0x003C ( 0x0004 )  [0x00000080]

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.RenderObject.Render
	 void                      Update ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.RenderObject.Update
	 bool                      CheckIn ( float X, float Y );                     		//  GUIWarfareControls.RenderObject.CheckIn
	 void                      Init (  );                                        		//  GUIWarfareControls.RenderObject.Init
}; // Size: 0x0014

// Class GUIWarfareControls.BTRODecorateStringHK
class DLL_IMPORT UBTRODecorateStringHK : public URenderObject
{
public:
	struct FText                                       OriginalString;                                   		// 0x0040 ( 0x001C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     TargetString;                                     		// 0x005C ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FImage                                      BackgroundImg;                                    		// 0x0068 ( 0x0020 ) 
	int                                                InternalPadding[ 0x04 ];                          		// 0x0088 ( 0x0010 ) 
	float                                              TextHeight;                                       		// 0x0098 ( 0x0004 ) 
	unsigned long                                      bAutoWidth:1;                                     		// 0x009C ( 0x0004 )  [0x00000001]
	int                                                nAutoWidth;                                       		// 0x00A0 ( 0x0004 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTRODecorateStringHK.Render
	 void                      Update ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTRODecorateStringHK.Update
	 void                      SetData ( struct FString str );                   		//  GUIWarfareControls.BTRODecorateStringHK.SetData
	 void                      Init (  );                                        		//  GUIWarfareControls.BTRODecorateStringHK.Init
}; // Size: 0x0064

// Class GUIWarfareControls.BTComboBoxButtonHK
class DLL_IMPORT UBTComboBoxButtonHK : public UGUIScrollButtonBase
{
public:
	struct FImage                                      buttonImage[ 0x05 ];                              		// 0x0308 ( 0x00A0 ) [ CPF_Edit ]

	// UScript Functions
	 bool                      OwnerDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTComboBoxButtonHK.OwnerDraw
}; // Size: 0x00A0

// Class GUIWarfareControls.BTScrollZoneHK
class DLL_IMPORT UBTScrollZoneHK : public UGUIScrollZoneBase
{
public:
	struct FImage                                      zoneImage;                                        		// 0x02C4 ( 0x0020 ) [ CPF_Edit ]

	// UScript Functions
	 bool                      OwnerDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTScrollZoneHK.OwnerDraw
}; // Size: 0x0020

// Class GUIWarfareControls.BTScrollButtonHK
class DLL_IMPORT UBTScrollButtonHK : public UGUIScrollButtonBase
{
public:
	struct FImage                                      buttonImage[ 0x06 ];                              		// 0x0308 ( 0x00C0 ) [ CPF_Edit ]

	// UScript Functions
	 bool                      OwnerDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTScrollButtonHK.OwnerDraw
}; // Size: 0x00C0

// Class GUIWarfareControls.BTGripButtonHK
class DLL_IMPORT UBTGripButtonHK : public UGUIGripButtonBase
{
public:
	struct FImage                                      buttonImage[ 0x05 ];                              		// 0x0304 ( 0x00A0 ) [ CPF_Edit ]

	// UScript Functions
	 bool                      OwnerDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTGripButtonHK.OwnerDraw
}; // Size: 0x00A0

// Class GUIWarfareControls.BTROItemBoxHK
class DLL_IMPORT UBTROItemBoxHK : public URenderObject
{
public:
	class UwMatchMaker*                                MM;                                               		// 0x0040 ( 0x0004 ) 
	class UwGameManager*                               GameMgr;                                          		// 0x0044 ( 0x0004 ) 
	unsigned long                                      bUseCache:1;                                      		// 0x0048 ( 0x0004 )  [0x00000001]
	int                                                RibbonState;                                      		// 0x004C ( 0x0004 ) 
	unsigned long                                      bSelect:1;                                        		// 0x0050 ( 0x0004 )  [0x00000001]
	unsigned long                                      bStartAni:1;                                      		// 0x0050 ( 0x0004 )  [0x00000002]
	float                                              RollAniStep;                                      		// 0x0054 ( 0x0004 ) 
	int                                                RollCount;                                        		// 0x0058 ( 0x0004 ) 
	int                                                RollMaxCount;                                     		// 0x005C ( 0x0004 ) 
	float                                              RollStartX;                                       		// 0x0060 ( 0x0004 ) 
	unsigned long                                      bScaleAni:1;                                      		// 0x0064 ( 0x0004 )  [0x00000001]
	float                                              ScaleAniStep;                                     		// 0x0068 ( 0x0004 ) 
	float                                              ScaleStartX;                                      		// 0x006C ( 0x0004 ) 
	unsigned long                                      bDragMode:1;                                      		// 0x0070 ( 0x0004 )  [0x00000001]
	unsigned long                                      bRedAuction:1;                                    		// 0x0070 ( 0x0004 )  [0x00000002]
	unsigned long                                      bRedState:1;                                      		// 0x0070 ( 0x0004 )  [0x00000004]
	unsigned long                                      bNoReasonRedState:1;                              		// 0x0070 ( 0x0004 )  [0x00000008]
	unsigned long                                      bDisplayPart:1;                                   		// 0x0070 ( 0x0004 )  [0x00000010]
	struct FText                                       PartName;                                         		// 0x0074 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FString                                     PartSkillName;                                    		// 0x0090 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FImage                                      PartImage;                                        		// 0x009C ( 0x0020 ) 
	struct FImage                                      PaintImage;                                       		// 0x00BC ( 0x0020 ) 
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x00DC ( 0x0004 ) 
	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x00E0 ( 0x0004 ) 
	struct FText                                       ItemName;                                         		// 0x00E4 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       GradeName;                                        		// 0x0100 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       UnderTextForm;                                    		// 0x011C ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FImage                                      ItemImage;                                        		// 0x0138 ( 0x0020 ) 
	struct FImage                                      EquipLevelImage;                                  		// 0x0158 ( 0x0020 ) 
	class UBTROExpBarHK*                               ItemDurability;                                   		// 0x0178 ( 0x0004 ) 
	struct FImage                                      RepairIconImage;                                  		// 0x017C ( 0x0020 ) 
	struct FImage                                      CashIconImage;                                    		// 0x019C ( 0x0020 ) 
	struct FImage                                      PointIconImage;                                   		// 0x01BC ( 0x0020 ) 
	unsigned long                                      bDotSight:1;                                      		// 0x01DC ( 0x0004 )  [0x00000001]
	unsigned long                                      bScope:1;                                         		// 0x01DC ( 0x0004 )  [0x00000002]
	unsigned long                                      bSilencer:1;                                      		// 0x01DC ( 0x0004 )  [0x00000004]
	unsigned long                                      bSkill:1;                                         		// 0x01DC ( 0x0004 )  [0x00000008]
	struct FImage                                      dotImg;                                           		// 0x01E0 ( 0x0020 ) 
	struct FImage                                      scoImg;                                           		// 0x0200 ( 0x0020 ) 
	struct FImage                                      silImg;                                           		// 0x0220 ( 0x0020 ) 
	struct FImage                                      skiImg;                                           		// 0x0240 ( 0x0020 ) 
	unsigned long                                      bBackgroundInfo:1;                                		// 0x0260 ( 0x0004 )  [0x00000001]
	unsigned long                                      bShowDurability:1;                                		// 0x0260 ( 0x0004 )  [0x00000002]
	unsigned long                                      bShowPrice:1;                                     		// 0x0260 ( 0x0004 )  [0x00000004]
	unsigned long                                      bShowDamage:1;                                    		// 0x0260 ( 0x0004 )  [0x00000008]
	unsigned long                                      bShowEquipLevel:1;                                		// 0x0260 ( 0x0004 )  [0x00000010]
	unsigned long                                      bShowRestrictionLevel:1;                          		// 0x0260 ( 0x0004 )  [0x00000020]
	unsigned long                                      bShowRestrictionPrice:1;                          		// 0x0260 ( 0x0004 )  [0x00000040]
	unsigned long                                      bShowRestrictionDurability:1;                     		// 0x0260 ( 0x0004 )  [0x00000080]
	unsigned long                                      bShowNotShopItem:1;                               		// 0x0260 ( 0x0004 )  [0x00000100]
	unsigned long                                      bShowPCBangLevel:1;                               		// 0x0260 ( 0x0004 )  [0x00000200]
	unsigned long                                      bShowLeftCount:1;                                 		// 0x0260 ( 0x0004 )  [0x00000400]
	unsigned long                                      bShowLeftSellDate:1;                              		// 0x0260 ( 0x0004 )  [0x00000800]
	unsigned long                                      bShowCanRepair:1;                                 		// 0x0260 ( 0x0004 )  [0x00001000]
	unsigned long                                      bShowCanBuy:1;                                    		// 0x0260 ( 0x0004 )  [0x00002000]
	class UBTItemCommonInfoHK*                         MyData;                                           		// 0x0264 ( 0x0004 ) 
	class FColor                                       colCurrentUntilTime;                              		// 0x0268 ( 0x0004 ) 
	struct FString                                     strCurrentUntilTime;                              		// 0x026C ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strLeftCount;                                     		// 0x0278 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCannotRepair;                                  		// 0x0284 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeBase;                                     		// 0x0290 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeShop;                                     		// 0x029C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeCommon;                                   		// 0x02A8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeNormal;                                   		// 0x02B4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeHigh;                                     		// 0x02C0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeRare;                                     		// 0x02CC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeLegend;                                   		// 0x02D8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradePCBang;                                   		// 0x02E4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeBaseS;                                    		// 0x02F0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeShopS;                                    		// 0x02FC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeCommonS;                                  		// 0x0308 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeNormalS;                                  		// 0x0314 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeHighS;                                    		// 0x0320 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeRareS;                                    		// 0x032C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeLegendS;                                  		// 0x0338 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradePCBangS;                                  		// 0x0344 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDurability;                                    		// 0x0350 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDamage;                                        		// 0x035C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLeftTime[ 0x06 ];                              		// 0x0368 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x03B0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCash;                                          		// 0x03BC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOneDay;                                        		// 0x03C8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCannotBuy;                                     		// 0x03D4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDurabilityX;                                   		// 0x03E0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCannotExpired;                                 		// 0x03EC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOnlyPCoin;                                     		// 0x03F8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                RRIndex;                                          		// 0x0404 ( 0x0004 ) 
	unsigned long                                      bRegisterQuickSlot:1;                             		// 0x0408 ( 0x0004 )  [0x00000001]
	struct FString                                     strRestrictionReason[ 0x08 ];                     		// 0x040C ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned char                                      InvenState;                                       		// 0x046C ( 0x0001 ) 

	// UScript Functions
	 struct FString            GetCoinAppendString ( bool onlyPCoin );           		//  GUIWarfareControls.BTROItemBoxHK.GetCoinAppendString
	 void                      SetGameManager ( class UwGameManager* gm );       		//  GUIWarfareControls.BTROItemBoxHK.SetGameManager
	 void                      SetMatchMaker ( class UwMatchMaker* wMM );        		//  GUIWarfareControls.BTROItemBoxHK.SetMatchMaker
	 void                      CheckRedAuction (  );                             		//  GUIWarfareControls.BTROItemBoxHK.CheckRedAuction
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROItemBoxHK.Render
	 void                      Update ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROItemBoxHK.Update
	 bool                      IsEmpty (  );                                     		//  GUIWarfareControls.BTROItemBoxHK.IsEmpty
	 void                      UpdateTime ( struct FBtrDouble D );               		//  GUIWarfareControls.BTROItemBoxHK.UpdateTime
	 struct FString            GradeToShortText ( int Grade );                   		//  GUIWarfareControls.BTROItemBoxHK.GradeToShortText
	 struct FString            GradeToText ( int Grade );                        		//  GUIWarfareControls.BTROItemBoxHK.GradeToText
	 class FColor              GradeToColor ( int Grade, bool bDurabilityX );    		//  GUIWarfareControls.BTROItemBoxHK.GradeToColor
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROItemBoxHK.Init
	 void                      ChangeState ( unsigned char estate );             		//  GUIWarfareControls.BTROItemBoxHK.ChangeState
}; // Size: 0x0430

// Class GUIWarfareControls.BTAutoImageListHK
class DLL_IMPORT UBTAutoImageListHK : public UGUITabPanel
{
public:
	unsigned long                                      bIgnoreMouseOnState:1;                            		// 0x0330 ( 0x0004 )  [0x00000001]
	unsigned long                                      bIgnoreFocusedState:1;                            		// 0x0330 ( 0x0004 )  [0x00000002]
	class UBTOwnerDrawImageHK*                         BackgroundImage;                                  		// 0x0334 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         BackgroundPattern;                                		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                FixedItemWidth;                                   		// 0x033C ( 0x0004 ) 
	int                                                FixedItemHeight;                                  		// 0x0340 ( 0x0004 ) 
	int                                                FixedSubBtnStartX;                                		// 0x0344 ( 0x0004 ) 
	int                                                FixedSubBtnStartY;                                		// 0x0348 ( 0x0004 ) 
	int                                                SelectItemIndex;                                  		// 0x034C ( 0x0004 ) 
	int                                                LastSelectedItemIndex;                            		// 0x0350 ( 0x0004 ) 
	int                                                VolatileSelectItemIndex;                          		// 0x0354 ( 0x0004 ) 
	class UGUIVertImageListBox*                        ImageListBox;                                     		// 0x0358 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UGUIVertImageList*                           ImageList;                                        		// 0x035C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class TArray< class URenderObject* >               DataList;                                         		// 0x0360 ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned long                                      isHaveSubMenuBtn:1;                               		// 0x036C ( 0x0004 )  [0x00000001]
	class TArray< class UBTItemListMenuBtn* >          SubMenuBtn;                                       		// 0x0370 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTRODecorateStringHK*                       ToolTip;                                          		// 0x037C ( 0x0004 ) 
	unsigned long                                      bShowSkillToolTip:1;                              		// 0x0380 ( 0x0004 )  [0x00000001]

	// UScript Functions
	 void                      AddSubMenuBtn ( int ItemID, int enableType, bool disableBtn, struct FBtrDouble UniqueID, int UniqueSkillID );		//  GUIWarfareControls.BTAutoImageListHK.AddSubMenuBtn
	 bool                      ImageListBox_OnItemDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTAutoImageListHK.ImageListBox_OnItemDblClick
	 void                      ImageListBox_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTAutoImageListHK.ImageListBox_OnChange
	 void                      CheckSubMenuBtn ( int ItemIndex, int extraIndex, int ClickIndex, bool disableBtn, bool bActive );		//  GUIWarfareControls.BTAutoImageListHK.CheckSubMenuBtn
	 void                      ImageListBox_OnDrawItem ( class UCanvas* C, int Item, float X, float Y, float W, float HT, bool bSelected, bool bPending );		//  GUIWarfareControls.BTAutoImageListHK.ImageListBox_OnDrawItem
	 void                      ImageListBox_OnRendered ( class UCanvas* C );     		//  GUIWarfareControls.BTAutoImageListHK.ImageListBox_OnRendered
	 bool                      ImageListBox_OnDraw ( class UCanvas* C );         		//  GUIWarfareControls.BTAutoImageListHK.ImageListBox_OnDraw
	 bool                      ImageListBox_OnPreDraw ( class UCanvas* C );      		//  GUIWarfareControls.BTAutoImageListHK.ImageListBox_OnPreDraw
	 void                      TraversalApplyAWinPos (  );                       		//  GUIWarfareControls.BTAutoImageListHK.TraversalApplyAWinPos
	 void                      SetItemSize ( int width, int Height );            		//  GUIWarfareControls.BTAutoImageListHK.SetItemSize
	 void                      SetItemCountPerPage ( int row, int Col );         		//  GUIWarfareControls.BTAutoImageListHK.SetItemCountPerPage
	 void                      SetBorder ( int horz, int vert );                 		//  GUIWarfareControls.BTAutoImageListHK.SetBorder
	 class URenderObject*      GetLastSelectedItem (  );                         		//  GUIWarfareControls.BTAutoImageListHK.GetLastSelectedItem
	 class URenderObject*      GetSelectItem (  );                               		//  GUIWarfareControls.BTAutoImageListHK.GetSelectItem
	 void                      RemoveAll (  );                                   		//  GUIWarfareControls.BTAutoImageListHK.RemoveAll
	 void                      RemoveRenderObject ( class URenderObject* ro );   		//  GUIWarfareControls.BTAutoImageListHK.RemoveRenderObject
	 void                      ReplaceRenderObject ( class URenderObject* ro, int AT );		//  GUIWarfareControls.BTAutoImageListHK.ReplaceRenderObject
	 void                      AddRenderObject ( class URenderObject* ro );      		//  GUIWarfareControls.BTAutoImageListHK.AddRenderObject
	 float                     ImageListBox_GetItemHeight ( class UCanvas* C );  		//  GUIWarfareControls.BTAutoImageListHK.ImageListBox_GetItemHeight
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTAutoImageListHK.InitComponent
	 void                      InitScrollBar (  );                               		//  GUIWarfareControls.BTAutoImageListHK.InitScrollBar
}; // Size: 0x0054

// Class GUIWarfareControls.BTItemImageListHK
class DLL_IMPORT UBTItemImageListHK : public UBTAutoImageListHK
{
public:
	unsigned long                                      bShopItem:1;                                      		// 0x0384 ( 0x0004 )  [0x00000001]
	unsigned long                                      bShowOnlyInventory:1;                             		// 0x0384 ( 0x0004 )  [0x00000002]
	class TArray< class UBTROItemBoxHK* >              DataPool;                                         		// 0x0388 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FBtrDouble                                  Repair_UniqueItemID;                              		// 0x0394 ( 0x0008 ) 

	// UScript Functions
	 void                      ShowPassive (  );                                 		//  GUIWarfareControls.BTItemImageListHK.ShowPassive
	 void                      ShowLVMark (  );                                  		//  GUIWarfareControls.BTItemImageListHK.ShowLVMark
	 void                      ShowEtc (  );                                     		//  GUIWarfareControls.BTItemImageListHK.ShowEtc
	 void                      ShowCashItem (  );                                		//  GUIWarfareControls.BTItemImageListHK.ShowCashItem
	 void                      ShowETCnPassive (  );                             		//  GUIWarfareControls.BTItemImageListHK.ShowETCnPassive
	 void                      ShowShopItemAdHot (  );                           		//  GUIWarfareControls.BTItemImageListHK.ShowShopItemAdHot
	 void                      ShowShopItemAdNew (  );                           		//  GUIWarfareControls.BTItemImageListHK.ShowShopItemAdNew
	 void                      ShowShopItemAdBest (  );                          		//  GUIWarfareControls.BTItemImageListHK.ShowShopItemAdBest
	 void                      ShowShopItemAll (  );                             		//  GUIWarfareControls.BTItemImageListHK.ShowShopItemAll
	 void                      ShowWeaponNoBootyWithSkill (  );                  		//  GUIWarfareControls.BTItemImageListHK.ShowWeaponNoBootyWithSkill
	 void                      ShowWeaponBootyWithSkill (  );                    		//  GUIWarfareControls.BTItemImageListHK.ShowWeaponBootyWithSkill
	 void                      ShowWeaponWithSkill (  );                         		//  GUIWarfareControls.BTItemImageListHK.ShowWeaponWithSkill
	 void                      ShowPassiveSkill (  );                            		//  GUIWarfareControls.BTItemImageListHK.ShowPassiveSkill
	 void                      ShowActiveSkill (  );                             		//  GUIWarfareControls.BTItemImageListHK.ShowActiveSkill
	 void                      ShowSkillAll (  );                                		//  GUIWarfareControls.BTItemImageListHK.ShowSkillAll
	 void                      ShowEquipSpCharItem (  );                         		//  GUIWarfareControls.BTItemImageListHK.ShowEquipSpCharItem
	 void                      ShowEquipAccessoryItem (  );                      		//  GUIWarfareControls.BTItemImageListHK.ShowEquipAccessoryItem
	 void                      ShowEquipFaceItem (  );                           		//  GUIWarfareControls.BTItemImageListHK.ShowEquipFaceItem
	 void                      ShowEquipHeadItem (  );                           		//  GUIWarfareControls.BTItemImageListHK.ShowEquipHeadItem
	 void                      ShowEquipItem (  );                               		//  GUIWarfareControls.BTItemImageListHK.ShowEquipItem
	 void                      ShowHandThrowWeapon (  );                         		//  GUIWarfareControls.BTItemImageListHK.ShowHandThrowWeapon
	 void                      ShowSubWeapon (  );                               		//  GUIWarfareControls.BTItemImageListHK.ShowSubWeapon
	 void                      ShowMainWeapon (  );                              		//  GUIWarfareControls.BTItemImageListHK.ShowMainWeapon
	 void                      ShowWeaponAll (  );                               		//  GUIWarfareControls.BTItemImageListHK.ShowWeaponAll
	 void                      ShowItemAll (  );                                 		//  GUIWarfareControls.BTItemImageListHK.ShowItemAll
	 void                      ShowAR (  );                                      		//  GUIWarfareControls.BTItemImageListHK.ShowAR
	 void                      ShowMG (  );                                      		//  GUIWarfareControls.BTItemImageListHK.ShowMG
	 void                      ShowShotgun (  );                                 		//  GUIWarfareControls.BTItemImageListHK.ShowShotgun
	 void                      ShowSR (  );                                      		//  GUIWarfareControls.BTItemImageListHK.ShowSR
	 void                      ShowSMG (  );                                     		//  GUIWarfareControls.BTItemImageListHK.ShowSMG
	 void                      ShowWeaponNoBootyWithEquip (  );                  		//  GUIWarfareControls.BTItemImageListHK.ShowWeaponNoBootyWithEquip
	 void                      ShowWeaponBootyWithEquip (  );                    		//  GUIWarfareControls.BTItemImageListHK.ShowWeaponBootyWithEquip
	 void                      ShowWeaponWithEquip (  );                         		//  GUIWarfareControls.BTItemImageListHK.ShowWeaponWithEquip
	 void                      ShowOnlyOne ( unsigned char one );                		//  GUIWarfareControls.BTItemImageListHK.ShowOnlyOne
	 void                      ShowAll ( unsigned char Max, unsigned char Min ); 		//  GUIWarfareControls.BTItemImageListHK.ShowAll
	 void                      ResetItem (  );                                   		//  GUIWarfareControls.BTItemImageListHK.ResetItem
	 void                      ClearItem (  );                                   		//  GUIWarfareControls.BTItemImageListHK.ClearItem
	 void                      ChangeShowItem ( struct FBtrDouble prevUniqueID, struct FBtrDouble UniqueID );		//  GUIWarfareControls.BTItemImageListHK.ChangeShowItem
	 void                      RemoveShowItem ( struct FBtrDouble UniqueID );    		//  GUIWarfareControls.BTItemImageListHK.RemoveShowItem
	 void                      AddShowItem ( struct FBtrDouble UniqueID );       		//  GUIWarfareControls.BTItemImageListHK.AddShowItem
	 class UBTROItemBoxHK*     FindPoolSkillItem ( int UniqueSkillID );          		//  GUIWarfareControls.BTItemImageListHK.FindPoolSkillItem
	 class UBTROItemBoxHK*     FindPoolItem ( struct FBtrDouble UniqueID );      		//  GUIWarfareControls.BTItemImageListHK.FindPoolItem
	 void                      RemoveItem ( struct FBtrDouble UniqueID );        		//  GUIWarfareControls.BTItemImageListHK.RemoveItem
	 void                      GetItemFromItemID ( int ItemID, class TArray< class UBTROItemBoxHK* >* Arr );		//  GUIWarfareControls.BTItemImageListHK.GetItemFromItemID
	 void                      SortByDisplayOrder (  );                          		//  GUIWarfareControls.BTItemImageListHK.SortByDisplayOrder
	 void                      AddItem ( class UBTROItemBoxHK* ro );             		//  GUIWarfareControls.BTItemImageListHK.AddItem
}; // Size: 0x0018

// Class GUIWarfareControls.BTItemCommonInfoHK
class DLL_IMPORT UBTItemCommonInfoHK : public UObject
{
public:
	int                                                myLevel;                                          		// 0x002C ( 0x0004 ) 
	int                                                MyPoint;                                          		// 0x0030 ( 0x0004 ) 
	int                                                MyCash;                                           		// 0x0034 ( 0x0004 ) 
	int                                                MyCCoinCash;                                      		// 0x0038 ( 0x0004 ) 
}; // Size: 0x0010

// Class GUIWarfareControls.ButtonGroups
class DLL_IMPORT UButtonGroups : public UGUIComponent
{
public:
	unsigned long                                      bTabControlMode:1;                                		// 0x02BC ( 0x0004 )  [0x00000001]
	unsigned long                                      bMultiSelect:1;                                   		// 0x02BC ( 0x0004 )  [0x00000002]
	int                                                selectIndex;                                      		// 0x02C0 ( 0x0004 ) 
	class TArray< class UBTOwnerDrawCaptionButtonHK* > ButtonList;                                       		// 0x02C4 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SelectButton ( int Index );                       		//  GUIWarfareControls.ButtonGroups.SelectButton
	 int                       GetSelectButtonExtra (  );                        		//  GUIWarfareControls.ButtonGroups.GetSelectButtonExtra
	 int                       GetSelectIndex (  );                              		//  GUIWarfareControls.ButtonGroups.GetSelectIndex
	 void                      RemoveButton ( class UBTOwnerDrawCaptionButtonHK* btn );		//  GUIWarfareControls.ButtonGroups.RemoveButton
	 void                      SetFontSizeAll ( int Size );                      		//  GUIWarfareControls.ButtonGroups.SetFontSizeAll
	 void                      AddButton ( class UBTOwnerDrawCaptionButtonHK* btn, int Extra );		//  GUIWarfareControls.ButtonGroups.AddButton
	 bool                      ButtonGroups_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.ButtonGroups.ButtonGroups_OnClick
}; // Size: 0x0014

// Class GUIWarfareControls.BTCheckBoxHK
class DLL_IMPORT UBTCheckBoxHK : public UBTOwnerDrawCaptionButtonHK
{
public:
	unsigned char                                      cbStyle;                                          		// 0x04C4 ( 0x0001 ) 
	int                                                PaddingSize;                                      		// 0x04C8 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]

	// UScript Functions
	 bool                      Internal_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTCheckBoxHK.Internal_OnClick
	 void                      OnRendered ( class UCanvas* C );                  		//  GUIWarfareControls.BTCheckBoxHK.OnRendered
}; // Size: 0x0008

// Class GUIWarfareControls.BTAutoColumnListHeaderHK
class DLL_IMPORT UBTAutoColumnListHeaderHK : public UObject
{
public:
	int                                                ColumnIndex;                                      		// 0x002C ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     ColumnName;                                       		// 0x0030 ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	float                                              ColumnPerc;                                       		// 0x003C ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	unsigned char                                      ColumnType;                                       		// 0x0040 ( 0x0001 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class TArray< struct FImage >                      ColumnImageList;                                  		// 0x0044 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FImage                                      ColumnBackgroundImage;                            		// 0x0050 ( 0x0020 ) 
	struct FScriptDelegate                             __IntToImageIndex__Delegate;                      		// 0x0070 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __FloatToImageIndex__Delegate;                    		// 0x0078 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __IntToString__Delegate;                          		// 0x0080 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __FloatToString__Delegate;                        		// 0x0088 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __CustomDraw__Delegate;                           		// 0x0090 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      CustomDraw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTAutoColumnListHeaderHK.CustomDraw
	 struct FString            FloatToString ( float Input );                    		//  GUIWarfareControls.BTAutoColumnListHeaderHK.FloatToString
	 struct FString            IntToString ( int Input );                        		//  GUIWarfareControls.BTAutoColumnListHeaderHK.IntToString
	 int                       FloatToImageIndex ( float Input );                		//  GUIWarfareControls.BTAutoColumnListHeaderHK.FloatToImageIndex
	 int                       IntToImageIndex ( int Input );                    		//  GUIWarfareControls.BTAutoColumnListHeaderHK.IntToImageIndex
	 class UBTAutoColumnListHeaderHK* MakeHeader ( struct FString CName, float cPerc, unsigned char ct );		//  GUIWarfareControls.BTAutoColumnListHeaderHK.MakeHeader
}; // Size: 0x006C

// Class GUIWarfareControls.BTStretchedImageHK
class DLL_IMPORT UBTStretchedImageHK : public UFloatingImage
{
public:
}; // Size: 0x0000

// Class GUIWarfareControls.BTAutoImageListNew
class DLL_IMPORT UBTAutoImageListNew : public UBTAutoImageListHK
{
public:

	// UScript Functions
	 void                      InitScrollBar (  );                               		//  GUIWarfareControls.BTAutoImageListNew.InitScrollBar
}; // Size: 0x0000

// Class GUIWarfareControls.BTTPOptionTextureQuality
class DLL_IMPORT UBTTPOptionTextureQuality : public UBTTabPanelHK
{
public:
	class UButtonGroups*                               TextureQualityGroup;                              		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 TextureQualityButton[ 0x04 ];                     		// 0x033C ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strTexQuality[ 0x04 ];                            		// 0x034C ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      EnableAllButton (  );                             		//  GUIWarfareControls.BTTPOptionTextureQuality.EnableAllButton
	 bool                      DisableAllButton (  );                            		//  GUIWarfareControls.BTTPOptionTextureQuality.DisableAllButton
	 void                      ChangeButtonImage (  );                           		//  GUIWarfareControls.BTTPOptionTextureQuality.ChangeButtonImage
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPOptionTextureQuality.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionTextureQuality.InitComponent
}; // Size: 0x0044

// Class GUIWarfareControls.BTTPOptionBGQuality
class DLL_IMPORT UBTTPOptionBGQuality : public UBTTabPanelHK
{
public:
	class UButtonGroups*                               BGQualityGroup;                                   		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 BGQualityButton[ 0x03 ];                          		// 0x033C ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strBGQuality[ 0x03 ];                             		// 0x0348 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      EnableAllButton (  );                             		//  GUIWarfareControls.BTTPOptionBGQuality.EnableAllButton
	 bool                      DisableAllButton (  );                            		//  GUIWarfareControls.BTTPOptionBGQuality.DisableAllButton
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPOptionBGQuality.ApplyAWinPos
	 void                      ChangeButtonImage (  );                           		//  GUIWarfareControls.BTTPOptionBGQuality.ChangeButtonImage
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionBGQuality.InitComponent
}; // Size: 0x0034

// Class GUIWarfareControls.BTTPOptionLOD
class DLL_IMPORT UBTTPOptionLOD : public UBTTabPanelHK
{
public:
	class UButtonGroups*                               LODGroup;                                         		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 LODButton[ 0x04 ];                                		// 0x033C ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLOD[ 0x04 ];                                   		// 0x034C ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      EnableAllButton (  );                             		//  GUIWarfareControls.BTTPOptionLOD.EnableAllButton
	 bool                      DisableAllButton (  );                            		//  GUIWarfareControls.BTTPOptionLOD.DisableAllButton
	 void                      ChangeButtonImage (  );                           		//  GUIWarfareControls.BTTPOptionLOD.ChangeButtonImage
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPOptionLOD.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionLOD.InitComponent
}; // Size: 0x0044

// Class GUIWarfareControls.BTTPOptionOnOffButton
class DLL_IMPORT UBTTPOptionOnOffButton : public UBTTabPanelHK
{
public:
	class UButtonGroups*                               BTGroup;                                          		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 CaptionButton[ 0x02 ];                            		// 0x033C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strOnOff[ 0x02 ];                                 		// 0x0344 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      EnableAllButton (  );                             		//  GUIWarfareControls.BTTPOptionOnOffButton.EnableAllButton
	 bool                      DisableAllButton (  );                            		//  GUIWarfareControls.BTTPOptionOnOffButton.DisableAllButton
	 void                      ChangeButtonImage (  );                           		//  GUIWarfareControls.BTTPOptionOnOffButton.ChangeButtonImage
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPOptionOnOffButton.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionOnOffButton.InitComponent
}; // Size: 0x0024

// Class GUIWarfareControls.BTTPOptionRadioButtonHK
class DLL_IMPORT UBTTPOptionRadioButtonHK : public UBTTabPanelHK
{
public:
	float                                              perc;                                             		// 0x0338 ( 0x0004 ) 
	class UBTRadioOnOffButtonHK*                       ButtonRadio;                                      		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPOptionRadioButtonHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionRadioButtonHK.InitComponent
}; // Size: 0x0008

// Class GUIWarfareControls.BTSliderHK
class DLL_IMPORT UBTSliderHK : public UBTTabPanelHK
{
public:
	class UBTOwnerDrawCaptionButtonHK*                 ButtonLeft;                                       		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRight;                                      		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelSliderBack;                                  		// 0x0340 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTSliderGripButtonHK*                       ButtonSliderGrip;                                 		// 0x0344 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	float                                              MinValue;                                         		// 0x0348 ( 0x0004 ) 
	float                                              MaxValue;                                         		// 0x034C ( 0x0004 ) 
	float                                              ValuePerPixel;                                    		// 0x0350 ( 0x0004 ) 
	int                                                StartX;                                           		// 0x0354 ( 0x0004 ) 
	int                                                EndX;                                             		// 0x0358 ( 0x0004 ) 
	int                                                CMouseX;                                          		// 0x035C ( 0x0004 ) 
	int                                                CMouseY;                                          		// 0x0360 ( 0x0004 ) 
	unsigned long                                      bSmoothSlider:1;                                  		// 0x0364 ( 0x0004 )  [0x00000001]
	unsigned long                                      bActiveCursor:1;                                  		// 0x0364 ( 0x0004 )  [0x00000002]
	unsigned long                                      bGrip:1;                                          		// 0x0364 ( 0x0004 )  [0x00000004]
	unsigned long                                      bCanGrip:1;                                       		// 0x0364 ( 0x0004 )  [0x00000008]
	int                                                StartMouseX;                                      		// 0x0368 ( 0x0004 ) 
	int                                                StartMouseY;                                      		// 0x036C ( 0x0004 ) 
	int                                                ArrowButtonWidth;                                 		// 0x0370 ( 0x0004 ) 
	int                                                GripButtonWidth;                                  		// 0x0374 ( 0x0004 ) 
	int                                                CurrentX;                                         		// 0x0378 ( 0x0004 ) 
	int                                                SaveX;                                            		// 0x037C ( 0x0004 ) 
	float                                              CurrentValue;                                     		// 0x0380 ( 0x0004 ) 
	struct FScriptDelegate                             __SliderValueToString__Delegate;                  		// 0x0384 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnChangeValue__Delegate;                        		// 0x038C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __CanChangeValue__Delegate;                       		// 0x0394 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnDeactivate (  );                       		//  GUIWarfareControls.BTSliderHK.Internal_OnDeactivate
	 void                      Internal_OnActivate (  );                         		//  GUIWarfareControls.BTSliderHK.Internal_OnActivate
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTSliderHK.Internal_OnRendered
	 bool                      CanChangeValue ( int PrevValue, int ChangeValue );		//  GUIWarfareControls.BTSliderHK.CanChangeValue
	 void                      OnChangeValue ( int ChangeValue );                		//  GUIWarfareControls.BTSliderHK.OnChangeValue
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTSliderHK.ApplyAWinPos
	 void                      SetCurrentValue ( float Value );                  		//  GUIWarfareControls.BTSliderHK.SetCurrentValue
	 void                      SetData ( int AButtonWidth, int GButtonWidth );   		//  GUIWarfareControls.BTSliderHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTSliderHK.InitComponent
	 bool                      ButtonRight_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTSliderHK.ButtonRight_OnClick
	 bool                      ButtonLeft_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTSliderHK.ButtonLeft_OnClick
	 void                      ButtonSliderGrip_OnMouseRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTSliderHK.ButtonSliderGrip_OnMouseRelease
	 void                      ButtonSliderGrip_OnMousePressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTSliderHK.ButtonSliderGrip_OnMousePressed
	 void                      DecrementValue (  );                              		//  GUIWarfareControls.BTSliderHK.DecrementValue
	 void                      IncrementValue (  );                              		//  GUIWarfareControls.BTSliderHK.IncrementValue
	 struct FString            SliderValueToString ( int Value );                		//  GUIWarfareControls.BTSliderHK.SliderValueToString
}; // Size: 0x0064

// Class GUIWarfareControls.BTACLQuestHK
class DLL_IMPORT UBTACLQuestHK : public UBTAutoColumnListHK
{
public:
	int                                                LastTabIndex;                                     		// 0x0460 ( 0x0004 ) 
	class UwGameManager*                               GameMgr;                                          		// 0x0464 ( 0x0004 ) 
	class UBTROExpBarHK*                               expbar;                                           		// 0x0468 ( 0x0004 ) 
	class TArray< class UBTAutoColumnListDataHK* >     ACLRowListPool;                                   		// 0x046C ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strCannotRepair;                                  		// 0x0478 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 int                       GetHelpResourceIndex ( int row );                 		//  GUIWarfareControls.BTACLQuestHK.GetHelpResourceIndex
	 struct FString            GetLastReward ( int row );                        		//  GUIWarfareControls.BTACLQuestHK.GetLastReward
	 struct FString            GetReward ( int row );                            		//  GUIWarfareControls.BTACLQuestHK.GetReward
	 struct FString            GetQuestExtDesc ( int row );                      		//  GUIWarfareControls.BTACLQuestHK.GetQuestExtDesc
	 struct FString            GetQuestDesc ( int row );                         		//  GUIWarfareControls.BTACLQuestHK.GetQuestDesc
	 struct FString            GetQuestName ( int row );                         		//  GUIWarfareControls.BTACLQuestHK.GetQuestName
	 struct FString            GetPrevQuestDesc ( int row );                     		//  GUIWarfareControls.BTACLQuestHK.GetPrevQuestDesc
	 struct FString            GetPrevQuestName ( int row );                     		//  GUIWarfareControls.BTACLQuestHK.GetPrevQuestName
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLQuestHK.InitComponent
	 struct FString            GetFormatRewardString ( class UwQuestParam* tempq );		//  GUIWarfareControls.BTACLQuestHK.GetFormatRewardString
	 void                      SetVisibleQuestType ( int TabIndex );             		//  GUIWarfareControls.BTACLQuestHK.SetVisibleQuestType
	 void                      RemovePool (  );                                  		//  GUIWarfareControls.BTACLQuestHK.RemovePool
	 bool                      AddQuestInfo ( int QuestID, int currentstatus );  		//  GUIWarfareControls.BTACLQuestHK.AddQuestInfo
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLQuestHK.LC0_Draw
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLQuestHK.GetItemHeight
}; // Size: 0x0024

// Class GUIWarfareControls.BTLabelQuestDescHK
class DLL_IMPORT UBTLabelQuestDescHK : public UBTOwnerDrawImageHK
{
public:
	unsigned long                                      bSummaryMode:1;                                   		// 0x03B4 ( 0x0004 )  [0x00000001]
	class UwGameManager*                               GameMgr;                                          		// 0x03B8 ( 0x0004 ) 
	class UwQuestParam*                                q;                                                		// 0x03BC ( 0x0004 ) 
	class UwQuestParam*                                pq;                                               		// 0x03C0 ( 0x0004 ) 
	class TArray< struct FText >                       arrPrevQuest;                                     		// 0x03C4 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FText >                       arrCurQuest;                                      		// 0x03D0 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FText                                       txtQuestExtDesc;                                  		// 0x03DC ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       txtReward;                                        		// 0x03F8 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       txtLastReward;                                    		// 0x0414 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       QuestReward;                                      		// 0x0430 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       AllQuestReward;                                   		// 0x044C ( 0x001C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelQuestDescHK.Internal_OnRendered
	 void                      SetData ( struct FString PrevQuestName, struct FString PrevQuestDesc, struct FString QuestName, struct FString QuestDesc, struct FString QuestExtDesc, struct FString Reward, struct FString LastReward );		//  GUIWarfareControls.BTLabelQuestDescHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTLabelQuestDescHK.InitComponent
}; // Size: 0x00B4

// Class GUIWarfareControls.BTAutoScrollListHK
class DLL_IMPORT UBTAutoScrollListHK : public UGUITabPanel
{
public:
	class TArray< struct FString >                     arrLeftStr;                                       		// 0x0330 ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned long                                      bAutoShowScrollBar:1;                             		// 0x033C ( 0x0004 )  [0x00000001]
	unsigned long                                      bActiveCursor:1;                                  		// 0x033C ( 0x0004 )  [0x00000002]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0340 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UGUIMultiColumnListBox*                      MultiColumnBox;                                   		// 0x0344 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UGUIMultiColumnList*                         MultiColumnList;                                  		// 0x0348 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bMaxRowItem:1;                                    		// 0x034C ( 0x0004 )  [0x00000001]
	int                                                topIdx;                                           		// 0x0350 ( 0x0004 ) 
	int                                                curIdx;                                           		// 0x0354 ( 0x0004 ) 
	class TArray< struct FText >                       ASLRowList;                                       		// 0x0358 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                maxFontSize;                                      		// 0x0364 ( 0x0004 ) 
	struct FImage                                      SelectImage;                                      		// 0x0368 ( 0x0020 ) 
	struct FImage                                      LastSelectedImage;                                		// 0x0388 ( 0x0020 ) 
	struct FScriptDelegate                             __CustomDraw__Delegate;                           		// 0x03A8 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      Internal_OnPostDraw ( class UCanvas* C );         		//  GUIWarfareControls.BTAutoScrollListHK.Internal_OnPostDraw
	 void                      InternalDeactivate (  );                          		//  GUIWarfareControls.BTAutoScrollListHK.InternalDeactivate
	 void                      InternalActivate (  );                            		//  GUIWarfareControls.BTAutoScrollListHK.InternalActivate
	 void                      MultiColumnList_OnDrawItem ( class UCanvas* C, int Item, float X, float Y, float W, float HT, bool bSelected, bool bPending );		//  GUIWarfareControls.BTAutoScrollListHK.MultiColumnList_OnDrawItem
	 void                      CustomDraw ( class UCanvas* C, float X1, float Y1, float X2, float Y2, int ItemIndex );		//  GUIWarfareControls.BTAutoScrollListHK.CustomDraw
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTAutoScrollListHK.GetItemHeight
	 bool                      MultiColumnList_OnPreDraw ( class UCanvas* C );   		//  GUIWarfareControls.BTAutoScrollListHK.MultiColumnList_OnPreDraw
	 bool                      MultiColumnList_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTAutoScrollListHK.MultiColumnList_OnDblClick
	 bool                      MultiColumnList_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTAutoScrollListHK.MultiColumnList_OnClick
	 int                       GetCurrentIndex (  );                             		//  GUIWarfareControls.BTAutoScrollListHK.GetCurrentIndex
	 int                       ConvertRowToDataIndex ( int Index );              		//  GUIWarfareControls.BTAutoScrollListHK.ConvertRowToDataIndex
	 struct FText              GetRowByIndex ( int Index );                      		//  GUIWarfareControls.BTAutoScrollListHK.GetRowByIndex
	 bool                      PopRow (  );                                      		//  GUIWarfareControls.BTAutoScrollListHK.PopRow
	 void                      Clear (  );                                       		//  GUIWarfareControls.BTAutoScrollListHK.Clear
	 void                      AddRowFinal ( class UCanvas* saveC, struct FString Text, class FColor fntColor, class FColor fntShadowColor );		//  GUIWarfareControls.BTAutoScrollListHK.AddRowFinal
	 void                      AddRowColor ( class UCanvas* C, struct FString Text, class FColor Front );		//  GUIWarfareControls.BTAutoScrollListHK.AddRowColor
	 void                      AddRow ( class UCanvas* C, struct FString Text ); 		//  GUIWarfareControls.BTAutoScrollListHK.AddRow
	 void                      AddLineRow ( class UCanvas* C, struct FString Text );		//  GUIWarfareControls.BTAutoScrollListHK.AddLineRow
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTAutoScrollListHK.InitComponent
	 void                      InitScrollBar (  );                               		//  GUIWarfareControls.BTAutoScrollListHK.InitScrollBar
}; // Size: 0x0080

// Class GUIWarfareControls.BTComboBoxMapHK
class DLL_IMPORT UBTComboBoxMapHK : public UBTComboBoxHK
{
public:
	class UBTROMapInfoHK*                              mapInfo;                                          		// 0x039C ( 0x0004 ) 
	class UMaterial*                                   ImgSupply[ 0x03 ];                                		// 0x03A0 ( 0x000C ) 
	int                                                LastSelectedItem;                                 		// 0x03AC ( 0x0004 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTComboBoxMapHK.InitComponent
}; // Size: 0x0014

// Class GUIWarfareControls.BTROClanMarkHK
class DLL_IMPORT UBTROClanMarkHK : public URenderObject
{
public:
	unsigned long                                      bClanMarkSize128:1;                               		// 0x0040 ( 0x0004 )  [0x00000001]
	int                                                clanmarkid[ 0x03 ];                               		// 0x0044 ( 0x000C ) 
	int                                                ClanLevel;                                        		// 0x0050 ( 0x0004 ) 
	struct FImage                                      Background;                                       		// 0x0054 ( 0x0020 ) 
	struct FImage                                      ClanMark[ 0x03 ];                                 		// 0x0074 ( 0x0060 ) 
	struct FImage                                      ClanLevel_Img;                                    		// 0x00D4 ( 0x0020 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROClanMarkHK.Render
	 void                      Update ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROClanMarkHK.Update
	 void                      SetData ( class UwGameManager* GameMgr, int ClanPattern, int ClanBG, int ClanBL, bool bSize128, int ClanLevel );		//  GUIWarfareControls.BTROClanMarkHK.SetData
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROClanMarkHK.Init
}; // Size: 0x00B4

// Class GUIWarfareControls.BTROExpBarHK
class DLL_IMPORT UBTROExpBarHK : public URenderObject
{
public:
	unsigned long                                      bDrawArrow:1;                                     		// 0x0040 ( 0x0004 )  [0x00000001]
	unsigned long                                      bRenderText:1;                                    		// 0x0040 ( 0x0004 )  [0x00000002]
	struct FImage                                      back;                                             		// 0x0044 ( 0x0020 ) 
	struct FImage                                      Gauge;                                            		// 0x0064 ( 0x0020 ) 
	struct FImage                                      Arrow;                                            		// 0x0084 ( 0x0020 ) 
	class TArray< int >                                DataArray;                                        		// 0x00A4 ( 0x000C ) [ CPF_NeedCtorLink ]
	float                                              DataPerc;                                         		// 0x00B0 ( 0x0004 ) 
	struct FText                                       PercText;                                         		// 0x00B4 ( 0x001C ) [ CPF_NeedCtorLink ]
	float                                              PercTextPadding[ 0x04 ];                          		// 0x00D0 ( 0x0010 ) 
	int                                                LineWidth;                                        		// 0x00E0 ( 0x0004 ) 

	// UScript Functions
	 bool                      RenderUsingCache ( class UCanvas* C, float Delta, int Level );		//  GUIWarfareControls.BTROExpBarHK.RenderUsingCache
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROExpBarHK.Render
	 void                      SetData ( int A, int B, bool bUsePercColor, bool bUseSlashText );		//  GUIWarfareControls.BTROExpBarHK.SetData
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROExpBarHK.Init
}; // Size: 0x00A4

// Class GUIWarfareControls.BTOwnerDrawTextArrayHK
class DLL_IMPORT UBTOwnerDrawTextArrayHK : public UBTOwnerDrawImageHK
{
public:
	struct FString                                     strUpArrow;                                       		// 0x03B4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDownArrow;                                     		// 0x03C0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class TArray< struct FText >                       tarray;                                           		// 0x03CC ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned char                                      tArrayDrawType;                                   		// 0x03D8 ( 0x0001 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTOwnerDrawTextArrayHK.Internal_OnRendered
	 void                      SetRankData ( struct FString t0, int t1 );        		//  GUIWarfareControls.BTOwnerDrawTextArrayHK.SetRankData
	 void                      SetData ( struct FString t0, struct FString t1 ); 		//  GUIWarfareControls.BTOwnerDrawTextArrayHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTOwnerDrawTextArrayHK.InitComponent
}; // Size: 0x0028

// Class GUIWarfareControls.BTItemBoxButtonHK
class DLL_IMPORT UBTItemBoxButtonHK : public UBTOwnerDrawCaptionButtonHK
{
public:
	class UBTROItemBoxHK*                              itemBox;                                          		// 0x04C4 ( 0x0004 ) 
	int                                                DefaultSlotItemID;                                		// 0x04C8 ( 0x0004 ) 
	struct FBtrDouble                                  DefaultSlotUniqueID;                              		// 0x04CC ( 0x0008 ) 
	struct FString                                     DefaultSlotName[ 0x02 ];                          		// 0x04D4 ( 0x0018 ) [ CPF_NeedCtorLink ]
	struct FPlane                                      DefaultSlotModulate;                              		// 0x04EC ( 0x0010 ) 
	struct FImage                                      DefaultSlotImage;                                 		// 0x04FC ( 0x0020 ) 

	// UScript Functions
	 bool                      Internal_OnDraw ( class UCanvas* C );             		//  GUIWarfareControls.BTItemBoxButtonHK.Internal_OnDraw
	 void                      SetData ( class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo );		//  GUIWarfareControls.BTItemBoxButtonHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTItemBoxButtonHK.InitComponent
}; // Size: 0x0058

// Class GUIWarfareControls.BTExpBarHK
class DLL_IMPORT UBTExpBarHK : public UFloatingImage
{
public:
	class UBTROExpBarHK*                               ro;                                               		// 0x02FC ( 0x0004 ) 
	class TArray< struct FText >                       taExpbar;                                         		// 0x0300 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      OnRendered ( class UCanvas* C );                  		//  GUIWarfareControls.BTExpBarHK.OnRendered
	 void                      SetData ( int A, int B, struct FString aText, struct FString bText );		//  GUIWarfareControls.BTExpBarHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTExpBarHK.InitComponent
}; // Size: 0x0010

// Class GUIWarfareControls.BTLabelClanMarkHK
class DLL_IMPORT UBTLabelClanMarkHK : public UBTOwnerDrawImageHK
{
public:
	class UBTROClanMarkHK*                             ro;                                               		// 0x03B4 ( 0x0004 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelClanMarkHK.Internal_OnRendered
	 void                      SetData ( int ClanPattern, int ClanBG, int ClanBL, bool bSize128, int ClanLevel );		//  GUIWarfareControls.BTLabelClanMarkHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTLabelClanMarkHK.InitComponent
}; // Size: 0x0004

// Class GUIWarfareControls.BTROModelNew
class DLL_IMPORT ABTROModelNew : public AActor
{
public:
	struct FVector                                     cameraDir;                                        		// 0x03C8 ( 0x000C ) 
	int                                                CurrentModifyLight;                               		// 0x03D4 ( 0x0004 ) 
	unsigned long                                      bModifyLight:1;                                   		// 0x03D8 ( 0x0004 )  [0x00000001]
	class AwSkinShell*                                 wLightModel;                                      		// 0x03DC ( 0x0004 ) 
	class TArray< struct FName >                       AnimNames;                                        		// 0x03E0 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                BodyID[ 0x02 ];                                   		// 0x03EC ( 0x0008 ) 
	int                                                FaceID[ 0x02 ];                                   		// 0x03F4 ( 0x0008 ) 
	int                                                HelmetID[ 0x02 ];                                 		// 0x03FC ( 0x0008 ) 
	int                                                AccessoryID[ 0x02 ];                              		// 0x0404 ( 0x0008 ) 
	int                                                CurBodyID;                                        		// 0x040C ( 0x0004 ) 
	int                                                CurFaceID;                                        		// 0x0410 ( 0x0004 ) 
	int                                                CurHelmetID;                                      		// 0x0414 ( 0x0004 ) 
	int                                                CurAccessoryID;                                   		// 0x0418 ( 0x0004 ) 
	int                                                TeamIndex;                                        		// 0x041C ( 0x0004 ) 
	int                                                weaponID;                                         		// 0x0420 ( 0x0004 ) 
	int                                                WeaponPartsID;                                    		// 0x0424 ( 0x0004 ) 
	int                                                WeaponPaintID;                                    		// 0x0428 ( 0x0004 ) 
	int                                                WeaponType;                                       		// 0x042C ( 0x0004 ) 
	class AwSkinShell*                                 wParts[ 0x03 ];                                   		// 0x0430 ( 0x000C ) 
	class AwSkinShell*                                 wWeapon;                                          		// 0x043C ( 0x0004 ) 
	class AwSkinShell*                                 wWeaponParts[ 0x03 ];                             		// 0x0440 ( 0x000C ) 
	struct FFloatBox                                   AWinPos;                                          		// 0x044C ( 0x0010 ) 
	struct FVector                                     dir_light0;                                       		// 0x045C ( 0x000C ) 
	struct FVector                                     dir_light1;                                       		// 0x0468 ( 0x000C ) 
	float                                              PosX;                                             		// 0x0474 ( 0x0004 ) 
	float                                              PosY;                                             		// 0x0478 ( 0x0004 ) 
	float                                              posZ;                                             		// 0x047C ( 0x0004 ) 
	float                                              RotY;                                             		// 0x0480 ( 0x0004 ) 
	float                                              LightDistance0;                                   		// 0x0484 ( 0x0004 ) 
	float                                              LightDistance1;                                   		// 0x0488 ( 0x0004 ) 
	float                                              LightDistance2;                                   		// 0x048C ( 0x0004 ) 
	float                                              LightAngle0;                                      		// 0x0490 ( 0x0004 ) 
	float                                              LightAngle1;                                      		// 0x0494 ( 0x0004 ) 
	float                                              LightAngle2;                                      		// 0x0498 ( 0x0004 ) 
	float                                              LightHeight0;                                     		// 0x049C ( 0x0004 ) 
	float                                              LightHeight1;                                     		// 0x04A0 ( 0x0004 ) 
	float                                              LightHeight2;                                     		// 0x04A4 ( 0x0004 ) 
	int                                                LightColor0_R;                                    		// 0x04A8 ( 0x0004 ) 
	int                                                LightColor0_G;                                    		// 0x04AC ( 0x0004 ) 
	int                                                LightColor0_B;                                    		// 0x04B0 ( 0x0004 ) 
	int                                                LightColor1_R;                                    		// 0x04B4 ( 0x0004 ) 
	int                                                LightColor1_G;                                    		// 0x04B8 ( 0x0004 ) 
	int                                                LightColor1_B;                                    		// 0x04BC ( 0x0004 ) 
	int                                                LightColor2_R;                                    		// 0x04C0 ( 0x0004 ) 
	int                                                LightColor2_G;                                    		// 0x04C4 ( 0x0004 ) 
	int                                                LightColor2_B;                                    		// 0x04C8 ( 0x0004 ) 
	float                                              AspectRatio;                                      		// 0x04CC ( 0x0004 ) 
	struct FRotator                                    PawnRot;                                          		// 0x04D0 ( 0x000C ) 
	struct FVector                                     pawnPos;                                          		// 0x04DC ( 0x000C ) 
	struct FRotator                                    cameraRot;                                        		// 0x04E8 ( 0x000C ) 
	struct FVector                                     cameraPos;                                        		// 0x04F4 ( 0x000C ) 
	struct FVector                                     lightAngle;                                       		// 0x0500 ( 0x000C ) 
	class FColor                                       LightColor[ 0x03 ];                               		// 0x050C ( 0x000C ) 
	unsigned char                                      LightOnOff[ 0x05 ];                               		// 0x0518 ( 0x0005 ) 
	float                                              LightPosToCenter[ 0x05 ];                         		// 0x0520 ( 0x0014 ) 
	float                                              Roll[ 0x05 ];                                     		// 0x0534 ( 0x0014 ) 
	float                                              lightDist[ 0x05 ];                                		// 0x0548 ( 0x0014 ) 
	float                                              lightHeight[ 0x05 ];                              		// 0x055C ( 0x0014 ) 
	class FColor                                       LightColor_AF[ 0x05 ];                            		// 0x0570 ( 0x0014 ) 
	class FColor                                       LightColor_RSA[ 0x05 ];                           		// 0x0584 ( 0x0014 ) 
	struct FName                                       NoHaveWeaponIdle;                                 		// 0x0598 ( 0x0004 ) 

	// UScript Functions
	 void                      eventAnimEnd ( int Channel );                     		// [ FUNC_Event ] GUIWarfareControls.BTROModelNew.AnimEnd
	 void                      SetRotationRight (  );                            		//  GUIWarfareControls.BTROModelNew.SetRotationRight
	 void                      SetRotationLeft (  );                             		//  GUIWarfareControls.BTROModelNew.SetRotationLeft
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROModelNew.Render
	 void                      SetScaleModel ( struct FVector scaleVector );     		//  GUIWarfareControls.BTROModelNew.SetScaleModel
	 void                      EndModel (  );                                    		//  GUIWarfareControls.BTROModelNew.EndModel
	 void                      SetWeaponParts ( int iPartsID, int iPaintingID ); 		//  GUIWarfareControls.BTROModelNew.SetWeaponParts
	 void                      DeleteWeapone (  );                               		//  GUIWarfareControls.BTROModelNew.DeleteWeapone
	 void                      SetWeapon ( int iWeaponID, int iPartsID );        		//  GUIWarfareControls.BTROModelNew.SetWeapon
	 void                      ChangeWeaponsPaints ( int iPaintID );             		//  GUIWarfareControls.BTROModelNew.ChangeWeaponsPaints
	 void                      ChangeWeaponsParts ( int iPartsID );              		//  GUIWarfareControls.BTROModelNew.ChangeWeaponsParts
	 void                      PlayAnimByParams ( int wID );                     		//  GUIWarfareControls.BTROModelNew.PlayAnimByParams
	 void                      ChangeWeapon ( int iWeaponID, int iPartsID, int iPaintingID );		//  GUIWarfareControls.BTROModelNew.ChangeWeapon
	 void                      SetParts ( int iType );                           		//  GUIWarfareControls.BTROModelNew.SetParts
	 void                      ForceChangeEquipItems (  );                       		//  GUIWarfareControls.BTROModelNew.ForceChangeEquipItems
	 void                      ChangeEquipItemByID ( int iBodyID_0, int iBodyID_1, int iFaceID_0, int iFaceID_1, int iHelmetID_0, int iHelmetID_1, int iAccessoryID_0, int iAccessoryID_1 );		//  GUIWarfareControls.BTROModelNew.ChangeEquipItemByID
	 void                      ForceChangeWeapon (  );                           		//  GUIWarfareControls.BTROModelNew.ForceChangeWeapon
	 void                      ChangeEquipItemByItemID ( int HelmetItemID, int FaceItemID, int AcceItemID, int AF_ItemID, int RSA_ItemID );		//  GUIWarfareControls.BTROModelNew.ChangeEquipItemByItemID
	 void                      ChangeEquipItem ( class UwGameManager* GameMgr ); 		//  GUIWarfareControls.BTROModelNew.ChangeEquipItem
	 void                      ChangeTeam ( int iIndex );                        		//  GUIWarfareControls.BTROModelNew.ChangeTeam
	 void                      BeginModel (  );                                  		//  GUIWarfareControls.BTROModelNew.BeginModel
	 void                      SaveModelData (  );                               		//  GUIWarfareControls.BTROModelNew.SaveModelData
	 void                      LoadSetModelData (  );                            		//  GUIWarfareControls.BTROModelNew.LoadSetModelData
	 void                      Destroyed (  );                                   		// [ FUNC_Simulated ] GUIWarfareControls.BTROModelNew.Destroyed
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROModelNew.Init
}; // Size: 0x01D4

// Class GUIWarfareControls.BTModelHK
class DLL_IMPORT UBTModelHK : public UGUITabPanel
{
public:
	class ABTROModelNew*                               cModel;                                           		// 0x0330 ( 0x0004 ) 
	unsigned long                                      bLMouseDn:1;                                      		// 0x0334 ( 0x0004 )  [0x00000001]

	// UScript Functions
	 void                      InteranlMouseRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTModelHK.InteranlMouseRelease
	 void                      InternalMousePress ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTModelHK.InternalMousePress
	 bool                      Internal_OnKeyEvent ( float Delta, unsigned char* key, unsigned char* Action );		//  GUIWarfareControls.BTModelHK.Internal_OnKeyEvent
	 bool                      Internal_OnDraw ( class UCanvas* C );             		//  GUIWarfareControls.BTModelHK.Internal_OnDraw
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTModelHK.InitComponent
}; // Size: 0x0008

// Class GUIWarfareControls.BTLabelLocationHK
class DLL_IMPORT UBTLabelLocationHK : public UBTOwnerDrawTextArrayHK
{
public:
	struct FString                                     strRadioLocation[ 0x64 ];                         		// 0x03DC ( 0x04B0 ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned char                                      LocationCount;                                    		// 0x088C ( 0x0001 ) 

	// UScript Functions
	 unsigned char             GetLocationCount (  );                            		//  GUIWarfareControls.BTLabelLocationHK.GetLocationCount
	 void                      CalcLocationCount (  );                           		//  GUIWarfareControls.BTLabelLocationHK.CalcLocationCount
	 void                      SetLocationID ( int id );                         		//  GUIWarfareControls.BTLabelLocationHK.SetLocationID
}; // Size: 0x04B4

// Class GUIWarfareControls.BTLabelLevelHK
class DLL_IMPORT UBTLabelLevelHK : public UBTOwnerDrawImageHK
{
public:
	class UBTROLevelHK*                                ro;                                               		// 0x03B4 ( 0x0004 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelLevelHK.Internal_OnRendered
	 void                      SetData ( int Level, int LevelMarkID );           		//  GUIWarfareControls.BTLabelLevelHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTLabelLevelHK.InitComponent
}; // Size: 0x0004

// Class GUIWarfareControls.BTROExpBarHKCN
class DLL_IMPORT UBTROExpBarHKCN : public URenderObject
{
public:
	unsigned long                                      bDrawArrow:1;                                     		// 0x0040 ( 0x0004 )  [0x00000001]
	unsigned long                                      bRenderText:1;                                    		// 0x0040 ( 0x0004 )  [0x00000002]
	struct FImage                                      back;                                             		// 0x0044 ( 0x0020 ) 
	struct FImage                                      Gauge;                                            		// 0x0064 ( 0x0020 ) 
	struct FImage                                      Arrow;                                            		// 0x0084 ( 0x0020 ) 
	class TArray< int >                                DataArray;                                        		// 0x00A4 ( 0x000C ) [ CPF_NeedCtorLink ]
	float                                              DataPerc;                                         		// 0x00B0 ( 0x0004 ) 
	struct FText                                       PercText;                                         		// 0x00B4 ( 0x001C ) [ CPF_NeedCtorLink ]
	float                                              PercTextPadding[ 0x04 ];                          		// 0x00D0 ( 0x0010 ) 
	int                                                LineWidth;                                        		// 0x00E0 ( 0x0004 ) 

	// UScript Functions
	 bool                      RenderUsingCache ( class UCanvas* C, float Delta, int Level );		//  GUIWarfareControls.BTROExpBarHKCN.RenderUsingCache
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROExpBarHKCN.Render
	 void                      SetData ( int A, int B, bool bUsePercColor, bool bUseSlashText );		//  GUIWarfareControls.BTROExpBarHKCN.SetData
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROExpBarHKCN.Init
}; // Size: 0x00A4

// Class GUIWarfareControls.BTACLMessengerChannelHKCN
class DLL_IMPORT UBTACLMessengerChannelHKCN : public UBTACLMessengerChannelHK
{
public:

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMessengerChannelHKCN.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLMessengerChannelHKCN.GetItemHeight
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLMessengerChannelHKCN.GetLevelMarkID
	 class FColor              GetUserNameColor ( int row, int idx );            		//  GUIWarfareControls.BTACLMessengerChannelHKCN.GetUserNameColor
	 bool                      IsFriendlyUser ( int row );                       		//  GUIWarfareControls.BTACLMessengerChannelHKCN.IsFriendlyUser
	 int                       GetClanPatternID ( int row );                     		//  GUIWarfareControls.BTACLMessengerChannelHKCN.GetClanPatternID
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLMessengerChannelHKCN.GetUserName
	 int                       GetUserID ( int row );                            		//  GUIWarfareControls.BTACLMessengerChannelHKCN.GetUserID
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLMessengerChannelHKCN.GetLevel
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLMessengerChannelHKCN.GetClanName
	 int                       GetClanID ( int row );                            		//  GUIWarfareControls.BTACLMessengerChannelHKCN.GetClanID
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMessengerChannelHKCN.LC0_Draw
}; // Size: 0x0000

// Class GUIWarfareControls.BTACLMessengerFriendHKCN
class DLL_IMPORT UBTACLMessengerFriendHKCN : public UBTACLMessengerFriendHK
{
public:

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMessengerFriendHKCN.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetItemHeight
	 void                      SortByConnectionStatus (  );                      		//  GUIWarfareControls.BTACLMessengerFriendHKCN.SortByConnectionStatus
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetLevelMarkID
	 int                       GetClanNum ( int row );                           		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetClanNum
	 struct FImage             GetClanBL ( int row );                            		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetClanBL
	 struct FImage             GetClanBG ( int row );                            		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetClanBG
	 struct FImage             GetClanPattern ( int row );                       		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetClanPattern
	 int                       GetClanPatternID ( int row );                     		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetClanPatternID
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetClanName
	 int                       GetChannelNum ( int row );                        		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetChannelNum
	 struct FString            GetServerName ( int row );                        		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetServerName
	 int                       GetServerPort ( int row );                        		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetServerPort
	 int                       GetCurPosInt ( int row );                         		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetCurPosInt
	 int                       GetCurPos ( int row );                            		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetCurPos
	 struct FString            GetServerIP ( int row );                          		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetServerIP
	 int                       GetRoomNumber ( int row );                        		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetRoomNumber
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetUserName
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLMessengerFriendHKCN.GetLevel
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMessengerFriendHKCN.LC0_Draw
}; // Size: 0x0000

// Class GUIWarfareControls.BTTPMyInfoBasicHK
class DLL_IMPORT UBTTPMyInfoBasicHK : public UBTTPOptionBaseHK
{
public:
	struct FString                                     strLabel[ 0x15 ];                                 		// 0x0700 ( 0x00FC ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPlayNetCash;                                   		// 0x07FC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitializeContent (  );                           		//  GUIWarfareControls.BTTPMyInfoBasicHK.InitializeContent
	 void                      SetData ( int UserID, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FCharInfo stCharInfo, struct FClanInfo stClanInfo, int ClanLevel );		//  GUIWarfareControls.BTTPMyInfoBasicHK.SetData
	 void                      InitializeLabel (  );                             		//  GUIWarfareControls.BTTPMyInfoBasicHK.InitializeLabel
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMyInfoBasicHK.InitComponent
}; // Size: 0x0108

// Class GUIWarfareControls.BTTPMyInfoStatHK
class DLL_IMPORT UBTTPMyInfoStatHK : public UBTTPOptionBaseHK
{
public:
	struct FString                                     strLabel[ 0x1E ];                                 		// 0x0700 ( 0x0168 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetData ( int MaxSerial, int MaxScore, int MaxKill, int MaxAssist, int Serial3, int Serial5, int Serial7, int Serial10, int Serial15, int AR, int SMG, int SR, int SW, int Melee, int Grenade, int FlashBang, int Foot, int AT4, int MG, int Fire, int RPG7, int TimeBomb, int IcendiaryBomb, int ClusterBomb, int ByChopper, int Artillery, int KillChopper, int FirstKill, int LastKill, int AllKill, int Dominate, int InstallBomb, int DefuseBomb );		//  GUIWarfareControls.BTTPMyInfoStatHK.SetData
	 void                      InitializeContent (  );                           		//  GUIWarfareControls.BTTPMyInfoStatHK.InitializeContent
	 void                      InitializeLabel (  );                             		//  GUIWarfareControls.BTTPMyInfoStatHK.InitializeLabel
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMyInfoStatHK.InitComponent
}; // Size: 0x0168

// Class GUIWarfareControls.BTLabelRecruitHK
class DLL_IMPORT UBTLabelRecruitHK : public UBTOwnerDrawTextArrayHK
{
public:
	struct FString                                     strRecruitState[ 0x02 ];                          		// 0x03DC ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetRecruitState ( unsigned char B );              		//  GUIWarfareControls.BTLabelRecruitHK.SetRecruitState
}; // Size: 0x0018

// Class GUIWarfareControls.BTACLClanHK
class DLL_IMPORT UBTACLClanHK : public UBTAutoColumnListHK
{
public:
	struct FString                                     strNoRankState;                                   		// 0x0460 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLClanHK.InitComponent
	 void                      LC_2_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLClanHK.LC_2_Draw
	 void                      LC_1_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLClanHK.LC_1_Draw
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLClanHK.LC0_Draw
	 void                      AddClan ( int ClanMarkPattern, int ClanMarkBG, int ClanMarkBL, struct FString ClanName, struct FString ClanMaster, struct FString ClanMemberCount, struct FString ClanCreateDate, struct FString ClanHistory, struct FString ClanRanking, unsigned char ClanRecruit, int ClanRank, int ClanLevel );		//  GUIWarfareControls.BTACLClanHK.AddClan
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLClanHK.GetItemHeight
}; // Size: 0x000C

// Class GUIWarfareControls.BTWindowSystemMsgInfoHK
class DLL_IMPORT UBTWindowSystemMsgInfoHK : public UBTWindowInfoHK
{
public:
	struct FString                                     strClientDefaultTitle;                            		// 0x04C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClientDefine[ 0xB4 ];                          		// 0x04D0 ( 0x0870 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClientTitle[ 0xB4 ];                           		// 0x0D40 ( 0x0870 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ShowInfo ( class UGUIController* con, int Code, struct FString arg0, struct FString arg1, struct FString arg2 );		//  GUIWarfareControls.BTWindowSystemMsgInfoHK.ShowInfo
	 struct FString            GetFormatString ( int Code, struct FString arg0, struct FString arg1, struct FString arg2, struct FString arg3, struct FString arg4, struct FString arg5, struct FString arg6, struct FString arg7, struct FString arg8 );		//  GUIWarfareControls.BTWindowSystemMsgInfoHK.GetFormatString
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowSystemMsgInfoHK.InitComponent
}; // Size: 0x10EC

// Class GUIWarfareControls.BTWindowCreateClanMarkHK
class DLL_IMPORT UBTWindowCreateClanMarkHK : public UBTWindowHK
{
public:
	struct FBtrDouble                                  UniqueID;                                         		// 0x04AC ( 0x0008 ) 
	unsigned long                                      bFreeItem:1;                                      		// 0x04B4 ( 0x0004 )  [0x00000001]
	unsigned long                                      bCheckDupSuccess:1;                               		// 0x04B4 ( 0x0004 )  [0x00000002]
	int                                                SelectClanMark[ 0x03 ];                           		// 0x04B8 ( 0x000C ) 
	int                                                ChooseClanMark[ 0x03 ];                           		// 0x04C4 ( 0x000C ) 
	int                                                PaidType;                                         		// 0x04D0 ( 0x0004 ) 
	struct FFloatBox                                   fbLabel[ 0x0C ];                                  		// 0x04D4 ( 0x00C0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbPrevClanMarkBig;                                		// 0x0594 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbNewClanMarkBig;                                 		// 0x05A4 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strLabel[ 0x0C ];                                 		// 0x05B4 ( 0x0090 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         Label[ 0x0C ];                                    		// 0x0644 ( 0x0030 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTLabelClanMarkHK*                          PrevClanMark[ 0x02 ];                             		// 0x0674 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTClanMarkHK*                               NewClanMark[ 0x02 ];                              		// 0x067C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonIsExist;                                  		// 0x0684 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strButtonIsExist;                                 		// 0x0694 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonIsExist;                                    		// 0x06A0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbFT_Button[ 0x06 ];                              		// 0x06A4 ( 0x0060 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbFT_ClanMarkList;                                		// 0x0704 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UButtonGroups*                               FT_Group;                                         		// 0x0714 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strFT_Button[ 0x06 ];                             		// 0x0718 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 FT_Button[ 0x06 ];                                		// 0x0760 ( 0x0018 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPClanMarkListHK*                         FT_ClanMarkList;                                  		// 0x0778 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbST_Button[ 0x06 ];                              		// 0x077C ( 0x0060 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbST_ClanMarkList;                                		// 0x07DC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UButtonGroups*                               ST_Group;                                         		// 0x07EC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strST_Button[ 0x06 ];                             		// 0x07F0 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ST_Button[ 0x06 ];                                		// 0x0838 ( 0x0018 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPClanMarkListHK*                         ST_ClanMarkList;                                  		// 0x0850 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 bool                      ST_Group_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowCreateClanMarkHK.ST_Group_OnClick
	 bool                      FT_Group_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowCreateClanMarkHK.FT_Group_OnClick
	 bool                      ST_ClanMarkList_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowCreateClanMarkHK.ST_ClanMarkList_OnClick
	 bool                      FT_ClanMarkList_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowCreateClanMarkHK.FT_ClanMarkList_OnClick
	 bool                      SetCurrentClanMark ( int Pattern, int BG, int BL );		//  GUIWarfareControls.BTWindowCreateClanMarkHK.SetCurrentClanMark
	 bool                      SetDupCheck ( bool bSuccess );                    		//  GUIWarfareControls.BTWindowCreateClanMarkHK.SetDupCheck
	 void                      SetPaidType ( int t );                            		//  GUIWarfareControls.BTWindowCreateClanMarkHK.SetPaidType
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowCreateClanMarkHK.InitComponent
}; // Size: 0x03A8

// Class GUIWarfareControls.BTWindowRandBoxHK
class DLL_IMPORT UBTWindowRandBoxHK : public UBTWindowHK
{
public:
	class TArray< int >                                ItemIDChoose;                                     		// 0x04AC ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< int >                                PartIDChoose;                                     		// 0x04B8 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  ItemIdx;                                          		// 0x04C4 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  UntilTime;                                        		// 0x04D0 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< int >                                StackCount;                                       		// 0x04DC ( 0x000C ) [ CPF_NeedCtorLink ]
	class UwItemBoxHK*                                 SaveItemInfo[ 0x03 ];                             		// 0x04E8 ( 0x000C ) 
	class UwItemBoxInstanceHK*                         SaveInstanceInfo[ 0x03 ];                         		// 0x04F4 ( 0x000C ) 
	class TArray< class UwItemBoxHK* >                 RandItemInfo_0;                                   		// 0x0500 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UwItemBoxHK* >                 RandItemInfo_1;                                   		// 0x050C ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UwItemBoxHK* >                 RandItemInfo_2;                                   		// 0x0518 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UwItemBoxInstanceHK* >         RandInstanceInfo_0;                               		// 0x0524 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UwItemBoxInstanceHK* >         RandInstanceInfo_1;                               		// 0x0530 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UwItemBoxInstanceHK* >         RandInstanceInfo_2;                               		// 0x053C ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                AniEndCount;                                      		// 0x0548 ( 0x0004 ) 
	int                                                ItemCount;                                        		// 0x054C ( 0x0004 ) 
	struct FString                                     strPoint;                                         		// 0x0550 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelTopLine;                                  		// 0x055C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbEven[ 0x02 ];                                   		// 0x0568 ( 0x0020 ) 
	struct FFloatBox                                   fbOdd[ 0x03 ];                                    		// 0x0588 ( 0x0030 ) 
	class UBTAniItemBoxButtonHK*                       itemBox[ 0x03 ];                                  		// 0x05B8 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelPromotion2;                                		// 0x05C4 ( 0x0010 ) 
	struct FFloatBox                                   fbLabelContent2;                                  		// 0x05D4 ( 0x0010 ) 
	struct FFloatBox                                   fbLabelLevel2;                                    		// 0x05E4 ( 0x0010 ) 
	struct FFloatBox                                   fbBackgroundImage2;                               		// 0x05F4 ( 0x0010 ) 
	struct FFloatBox                                   fbTopLine2;                                       		// 0x0604 ( 0x0010 ) 
	struct FFloatBox                                   fbBottomLine2;                                    		// 0x0614 ( 0x0010 ) 
	struct FFloatBox                                   fbButtonOK2;                                      		// 0x0624 ( 0x0010 ) 

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowRandBoxHK.Internal_OnOpen
	 void                      ButtonItemBox_OnChangeItemInfoEnd_2 (  );         		//  GUIWarfareControls.BTWindowRandBoxHK.ButtonItemBox_OnChangeItemInfoEnd_2
	 void                      ButtonItemBox_OnChangeItemInfo_2 ( int Index );   		//  GUIWarfareControls.BTWindowRandBoxHK.ButtonItemBox_OnChangeItemInfo_2
	 void                      ButtonItemBox_OnChangeItemInfoEnd_1 (  );         		//  GUIWarfareControls.BTWindowRandBoxHK.ButtonItemBox_OnChangeItemInfoEnd_1
	 void                      ButtonItemBox_OnChangeItemInfo_1 ( int Index );   		//  GUIWarfareControls.BTWindowRandBoxHK.ButtonItemBox_OnChangeItemInfo_1
	 void                      ButtonItemBox_OnChangeItemInfoEnd_0 (  );         		//  GUIWarfareControls.BTWindowRandBoxHK.ButtonItemBox_OnChangeItemInfoEnd_0
	 void                      ButtonItemBox_OnChangeItemInfo_0 ( int Index );   		//  GUIWarfareControls.BTWindowRandBoxHK.ButtonItemBox_OnChangeItemInfo_0
	 void                      SetCandidateItems ( int RandNum, class TArray< int > ItemID, class TArray< int > PartID );		//  GUIWarfareControls.BTWindowRandBoxHK.SetCandidateItems
	 void                      SetAcquireItem ( int RandNum, int ItemID, int PartID, struct FBtrDouble UniqueID );		//  GUIWarfareControls.BTWindowRandBoxHK.SetAcquireItem
	 void                      SetItemCount ( int Count );                       		//  GUIWarfareControls.BTWindowRandBoxHK.SetItemCount
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowRandBoxHK.InitComponent
}; // Size: 0x0188

// Class GUIWarfareControls.BTWindowOptionHK
class DLL_IMPORT UBTWindowOptionHK : public UBTWindowHK
{
public:
	struct FString                                     strUIChangeOption;                                		// 0x04AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strReset;                                         		// 0x04B8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strVoiceLangChangeMsg;                            		// 0x04C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAnd;                                           		// 0x04D0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonReset;                                    		// 0x04DC ( 0x0010 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ButtonReset;                                      		// 0x04EC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTPOption;                                       		// 0x04F0 ( 0x0010 ) 
	class UBTTPOptionHK*                               TPOption;                                         		// 0x0500 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      Default_FadedOut (  );                            		//  GUIWarfareControls.BTWindowOptionHK.Default_FadedOut
	 bool                      ButtonReset_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowOptionHK.ButtonReset_OnClick
	 bool                      ButtonCancel_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowOptionHK.ButtonCancel_OnClick
	 bool                      ButtonInUI_OnOK ( class UGUIComponent* Sender );  		//  GUIWarfareControls.BTWindowOptionHK.ButtonInUI_OnOK
	 bool                      ButtonOK_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowOptionHK.ButtonOK_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowOptionHK.InitComponent
}; // Size: 0x0058

// Class GUIWarfareControls.BTTPOptionHK
class DLL_IMPORT UBTTPOptionHK : public UBTTabPanelHK
{
public:
	struct FString                                     strButtonTab[ 0x05 ];                             		// 0x0338 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UTabControlMocker*                           TabControl;                                       		// 0x0374 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTab[ 0x05 ];                              		// 0x0378 ( 0x0050 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTab[ 0x05 ];                                		// 0x03C8 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTPPanel;                                        		// 0x03DC ( 0x0010 ) 
	class UBTTPOptionBaseHK*                           TPPanel[ 0x05 ];                                  		// 0x03EC ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPOptionGraphicHK*                        TPGraphic;                                        		// 0x0400 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPOptionSoundHK*                          TPSound;                                          		// 0x0404 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPOptionInputHK*                          TPInput;                                          		// 0x0408 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPOptionCommunityHK*                      TPCommunity;                                      		// 0x040C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPOptionETCHK*                            TPETC;                                            		// 0x0410 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      DefaultResetData (  );                            		//  GUIWarfareControls.BTTPOptionHK.DefaultResetData
	 void                      ResetData (  );                                   		//  GUIWarfareControls.BTTPOptionHK.ResetData
	 void                      SaveData (  );                                    		//  GUIWarfareControls.BTTPOptionHK.SaveData
	 bool                      ButtonAdvance_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionHK.ButtonAdvance_OnClick
	 bool                      ButtonTab_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionHK.ButtonTab_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionHK.InitComponent
}; // Size: 0x00DC

// Class GUIWarfareControls.BTWindowInviteClanWarGameHK
class DLL_IMPORT UBTWindowInviteClanWarGameHK : public UBTWindowHK
{
public:
	int                                                ServerID;                                         		// 0x04AC ( 0x0004 ) 
	int                                                ChannelID;                                        		// 0x04B0 ( 0x0004 ) 
	struct FString                                     RoomUniqueID;                                     		// 0x04B4 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                RoomNumber;                                       		// 0x04C0 ( 0x0004 ) 
	struct FString                                     InviterName;                                      		// 0x04C4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     Password;                                         		// 0x04D0 ( 0x000C ) [ CPF_NeedCtorLink ]
	float                                              ElipsedTime;                                      		// 0x04DC ( 0x0004 ) 
	class UBTTcpLink_Channel*                          TcpChannel;                                       		// 0x04E0 ( 0x0004 ) 
	struct FString                                     strGameState[ 0x02 ];                             		// 0x04E4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbRoomInfo;                                       		// 0x04FC ( 0x0010 ) 
	class UBTLabelRoomInfoHK*                          RoomInfo;                                         		// 0x050C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x03 ];                                  		// 0x0510 ( 0x0030 ) 
	class TArray< struct FText >                       arrLabel;                                         		// 0x0540 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x03 ];                                 		// 0x054C ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strTemp;                                          		// 0x0570 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawTextArrayHK*                     LabelTextArray;                                   		// 0x057C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         Label[ 0x03 ];                                    		// 0x0580 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTWindowInviteClanWarGameHK.Internal_OnPreDraw
	 void                      SetData ( struct FString where, struct FString Who );		//  GUIWarfareControls.BTWindowInviteClanWarGameHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowInviteClanWarGameHK.InitComponent
}; // Size: 0x00E0

// Class GUIWarfareControls.BTWindowInviteGameHK
class DLL_IMPORT UBTWindowInviteGameHK : public UBTWindowHK
{
public:
	int                                                ServerID;                                         		// 0x04AC ( 0x0004 ) 
	int                                                ChannelID;                                        		// 0x04B0 ( 0x0004 ) 
	struct FString                                     RoomUniqueID;                                     		// 0x04B4 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                RoomNumber;                                       		// 0x04C0 ( 0x0004 ) 
	struct FString                                     InviterName;                                      		// 0x04C4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     Password;                                         		// 0x04D0 ( 0x000C ) [ CPF_NeedCtorLink ]
	float                                              ElipsedTime;                                      		// 0x04DC ( 0x0004 ) 
	class UBTTcpLink_Channel*                          TcpChannel;                                       		// 0x04E0 ( 0x0004 ) 
	struct FString                                     strGameState[ 0x02 ];                             		// 0x04E4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbRoomInfo;                                       		// 0x04FC ( 0x0010 ) 
	class UBTLabelRoomInfoHK*                          RoomInfo;                                         		// 0x050C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x03 ];                                  		// 0x0510 ( 0x0030 ) 
	class TArray< struct FText >                       arrLabel;                                         		// 0x0540 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x03 ];                                 		// 0x054C ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strTemp;                                          		// 0x0570 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawTextArrayHK*                     LabelTextArray;                                   		// 0x057C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         Label[ 0x03 ];                                    		// 0x0580 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTWindowInviteGameHK.Internal_OnPreDraw
	 void                      SetData ( struct FString where, struct FString Who );		//  GUIWarfareControls.BTWindowInviteGameHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowInviteGameHK.InitComponent
}; // Size: 0x00E0

// Class GUIWarfareControls.BTWindowItemBoxHK
class DLL_IMPORT UBTWindowItemBoxHK : public UBTWindowHK
{
public:
	int                                                BoxItemID;                                        		// 0x04AC ( 0x0004 ) 
	struct FBtrDouble                                  BoxUniqueID;                                      		// 0x04B0 ( 0x0008 ) 
	struct FFloatBox                                   fbTPItemList;                                     		// 0x04B8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTTPItemListHK*                             TPItemList;                                       		// 0x04C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelDivider;                                   		// 0x04CC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelDivider;                                     		// 0x04DC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbInfoBox;                                        		// 0x04E0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTItemInfoHorzBoxHK*                        InfoBox;                                          		// 0x04F0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      AddItem ( int ItemID, int PartID );               		//  GUIWarfareControls.BTWindowItemBoxHK.AddItem
	 int                       GetLastSelectPartID (  );                         		//  GUIWarfareControls.BTWindowItemBoxHK.GetLastSelectPartID
	 int                       GetLastSelectItemID (  );                         		//  GUIWarfareControls.BTWindowItemBoxHK.GetLastSelectItemID
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowItemBoxHK.InitComponent
	 bool                      SelectItem ( int Index );                         		//  GUIWarfareControls.BTWindowItemBoxHK.SelectItem
	 bool                      ImageListBox_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowItemBoxHK.ImageListBox_OnClick
}; // Size: 0x0048

// Class GUIWarfareControls.BTTPTopMenuSCHK
class DLL_IMPORT UBTTPTopMenuSCHK : public UGUITabPanel
{
public:
	class UBTStretchedImageHK*                         BGImage;                                          		// 0x0330 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 QuickJoin;                                        		// 0x0334 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 QuickSetup;                                       		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRefresh;                                    		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 Grade;                                            		// 0x0340 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 Option;                                           		// 0x0344 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 Exit;                                             		// 0x0348 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strQuickJoin;                                     		// 0x034C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strQuickSetup;                                    		// 0x0358 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRefresh;                                       		// 0x0364 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FScriptDelegate                             __HeaderButton_OnClick__Delegate;                 		// 0x0370 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPTopMenuSCHK.InitComponent
	 bool                      TopMenuButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPTopMenuSCHK.TopMenuButton_OnClick
	 bool                      HeaderButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPTopMenuSCHK.HeaderButton_OnClick
}; // Size: 0x0048

// Class GUIWarfareControls.BTACLServerSelectionHK
class DLL_IMPORT UBTACLServerSelectionHK : public UBTAutoColumnListHK
{
public:
	int                                                ConnectedUser;                                    		// 0x0460 ( 0x0004 ) 
	int                                                MaxUser;                                          		// 0x0464 ( 0x0004 ) 
	unsigned long                                      bShowCount:1;                                     		// 0x0468 ( 0x0004 )  [0x00000001]
	struct FString                                     CurrentServerGroup;                               		// 0x046C ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTRODecorateStringHK*                       ChannelToolTip;                                   		// 0x0478 ( 0x0004 ) 
	unsigned long                                      bShowToolTip:1;                                   		// 0x047C ( 0x0004 )  [0x00000001]
	struct FString                                     strChannelToolTip;                                		// 0x0480 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTACLServerSelectionHK*                     SelChannel;                                       		// 0x048C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     textChobo;                                        		// 0x0490 ( 0x000C ) [ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     textServerSlash;                                  		// 0x049C ( 0x000C ) [ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     textChannel;                                      		// 0x04A8 ( 0x000C ) [ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     textLC2[ 0x04 ];                                  		// 0x04B4 ( 0x0030 ) [ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnEnterChannel__Delegate;                       		// 0x04E4 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLServerSelectionHK.InitComponent
	 bool                      MultiColumnList_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTACLServerSelectionHK.MultiColumnList_OnDblClick
	 bool                      Sel_ChannelClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTACLServerSelectionHK.Sel_ChannelClick
	 void                      OnEnterChannel ( class UBTACLServerSelectionHK* acl );		//  GUIWarfareControls.BTACLServerSelectionHK.OnEnterChannel
	 void                      LC3_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLServerSelectionHK.LC3_Draw
	 void                      LC2_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLServerSelectionHK.LC2_Draw
	 void                      LC1_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLServerSelectionHK.LC1_Draw
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLServerSelectionHK.GetItemHeight
}; // Size: 0x008C

// Class GUIWarfareControls.BTACLGroutSelection
class DLL_IMPORT UBTACLGroutSelection : public UBTAutoColumnListHK
{
public:
	int                                                ConnectedUser;                                    		// 0x0460 ( 0x0004 ) 
	int                                                MaxUser;                                          		// 0x0464 ( 0x0004 ) 
	unsigned long                                      bShowCount:1;                                     		// 0x0468 ( 0x0004 )  [0x00000001]
	struct FString                                     CurrentServerGroup;                               		// 0x046C ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     textChobo;                                        		// 0x0478 ( 0x000C ) [ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     textServerSlash;                                  		// 0x0484 ( 0x000C ) [ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     textChannel;                                      		// 0x0490 ( 0x000C ) [ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     textLC2[ 0x04 ];                                  		// 0x049C ( 0x0030 ) [ CPF_Edit | CPF_Localized | CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnEnterChannel__Delegate;                       		// 0x04CC ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnSelectSvr__Delegate;                          		// 0x04D4 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLGroutSelection.InitComponent
	 bool                      MultiColumnList_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTACLGroutSelection.MultiColumnList_OnClick
	 void                      OnSelectSvr ( class UBTACLGroutSelection* acl );  		//  GUIWarfareControls.BTACLGroutSelection.OnSelectSvr
	 bool                      MultiColumnList_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTACLGroutSelection.MultiColumnList_OnDblClick
	 void                      OnEnterChannel ( class UBTACLGroutSelection* acl );		//  GUIWarfareControls.BTACLGroutSelection.OnEnterChannel
	 void                      LC3_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLGroutSelection.LC3_Draw
	 void                      LC2_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLGroutSelection.LC2_Draw
	 void                      LC1_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLGroutSelection.LC1_Draw
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLGroutSelection.GetItemHeight
}; // Size: 0x007C

// Class GUIWarfareControls.BTWindowModifyHK
class DLL_IMPORT UBTWindowModifyHK : public UBTWindowHK
{
public:
	unsigned long                                      bSniperRifle:1;                                   		// 0x04AC ( 0x0004 )  [0x00000001]
	struct FFloatBox                                   fbLabelBackgroundWeapon[ 0x02 ];                  		// 0x04B0 ( 0x0020 ) 
	struct FString                                     strLabelWeapon[ 0x02 ];                           		// 0x04D0 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         LabelWeapon[ 0x02 ];                              		// 0x04E8 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class TArray< struct FPaintInfo >                  PaintingInfos;                                    		// 0x04F0 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                SelectPaintingIdx;                                		// 0x04FC ( 0x0004 ) 
	int                                                PaintingPageNum;                                  		// 0x0500 ( 0x0004 ) 
	int                                                PaintingPageCount;                                		// 0x0504 ( 0x0004 ) 
	struct FFloatBox                                   fbLabel[ 0x03 ];                                  		// 0x0508 ( 0x0030 ) 
	struct FString                                     strLabelAll[ 0x03 ];                              		// 0x0538 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelSniper[ 0x03 ];                           		// 0x055C ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         Label[ 0x03 ];                                    		// 0x0580 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         InvenBoxLabel[ 0x05 ];                            		// 0x058C ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         WeaponNameLabel;                                  		// 0x05A0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       WeaponDescript;                                   		// 0x05A4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelStat[ 0x03 ];                              		// 0x05A8 ( 0x0030 ) 
	struct FFloatBox                                   fbLabelStatSniper[ 0x03 ];                        		// 0x05D8 ( 0x0030 ) 
	class UBTLabelArrowStateHK*                        LabelStat[ 0x03 ];                                		// 0x0608 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLList_Sight;                                  		// 0x0614 ( 0x0010 ) 
	class UBTAutoImageListHK*                          ACLList_Sight;                                    		// 0x0624 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLList_Silencer;                               		// 0x0628 ( 0x0010 ) 
	class UBTAutoImageListHK*                          ACLList_Silencer;                                 		// 0x0638 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLList_Barrel;                                 		// 0x063C ( 0x0010 ) 
	class UBTAutoImageListHK*                          ACLList_Barrel;                                   		// 0x064C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLList_Gunstock;                               		// 0x0650 ( 0x0010 ) 
	class UBTAutoImageListHK*                          ACLList_Gunstock;                                 		// 0x0660 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                SelectedItemID;                                   		// 0x0664 ( 0x0004 ) 
	int                                                SelectedPaintingID;                               		// 0x0668 ( 0x0004 ) 
	struct FBtrDouble                                  SelectedItemUniqueID;                             		// 0x066C ( 0x0008 ) 
	int                                                SelectedUnionedPartID;                            		// 0x0674 ( 0x0004 ) 
	int                                                OriginalPaintingItemID;                           		// 0x0678 ( 0x0004 ) 
	int                                                OriginalPaintingID;                               		// 0x067C ( 0x0004 ) 
	int                                                OriginalUnionedPartID;                            		// 0x0680 ( 0x0004 ) 
	struct FVector                                     vDisplay_3d;                                      		// 0x0684 ( 0x000C ) 
	float                                              fDisplay_rot_y;                                   		// 0x0690 ( 0x0004 ) 
	class UBTItemCommonInfoHK*                         MyData;                                           		// 0x0694 ( 0x0004 ) 
	class UBTModelWeaponHK*                            btWeapon[ 0x02 ];                                 		// 0x0698 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class ABTROModelWeapon*                            roWeapon[ 0x02 ];                                 		// 0x06A0 ( 0x0008 ) 
	class UButtonGroups*                               CustomItemButtonGroup;                            		// 0x06A8 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTItemBoxButtonHK*                          btnSelectedCustomItems[ 0x05 ];                   		// 0x06AC ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 btnRemoveOrRollback[ 0x05 ];                      		// 0x06C0 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strRemove;                                        		// 0x06D4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRollback;                                      		// 0x06E0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 btnInit;                                          		// 0x06EC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonInit;                                     		// 0x06F0 ( 0x0010 ) 
	struct FString                                     strInit;                                          		// 0x0700 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strFilter[ 0x06 ];                                		// 0x070C ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 FilterButton[ 0x06 ];                             		// 0x0754 ( 0x0018 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UTabControlMocker*                           TabControl;                                       		// 0x076C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	unsigned char                                      FilterTabBtnIdx;                                  		// 0x0770 ( 0x0001 ) 
	struct FFloatBox                                   fbACLList_All;                                    		// 0x0774 ( 0x0010 ) 
	class UBTAutoImageListHK*                          ACLList_All;                                      		// 0x0784 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class TArray< class UBTROItemBoxHK* >              DataPool;                                         		// 0x0788 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTItemStateBoxButtonHK*                     ItemStateView;                                    		// 0x0794 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UwItemBoxHK*                                 CurrentItemInfo;                                  		// 0x0798 ( 0x0004 ) 
	class UwItemBoxInstanceHK*                         CurrentInstanceInfo;                              		// 0x079C ( 0x0004 ) 
	class UwItemBoxHK*                                 WantedItemInfo;                                   		// 0x07A0 ( 0x0004 ) 
	class UwItemBoxInstanceHK*                         WantedInstanceInfo;                               		// 0x07A4 ( 0x0004 ) 
	int                                                IsEnableRemove[ 0x05 ];                           		// 0x07A8 ( 0x0014 ) 
	class UBTOwnerDrawImageHK*                         LockImage[ 0x03 ];                                		// 0x07BC ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 bool                      ButtonCancel_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.ButtonCancel_OnClick
	 bool                      ButtonOK_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowModifyHK.ButtonOK_OnClick
	 int                       IsEnoughMoney (  );                               		//  GUIWarfareControls.BTWindowModifyHK.IsEnoughMoney
	 bool                      GetPartPrice ( int iPartID, int* iOutPoint, int* iOutCash );		//  GUIWarfareControls.BTWindowModifyHK.GetPartPrice
	 bool                      GetPaintPrice ( int iPaintID, int* iOutPoint, int* iOutCash );		//  GUIWarfareControls.BTWindowModifyHK.GetPaintPrice
	 bool                      Confirm_OnClick ( class UGUIComponent* Sender );  		//  GUIWarfareControls.BTWindowModifyHK.Confirm_OnClick
	 void                      ChangeItemList ( int FilterIndex );               		//  GUIWarfareControls.BTWindowModifyHK.ChangeItemList
	 bool                      FilterButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.FilterButton_OnClick
	 int                       GetPaintingItemID (  );                           		//  GUIWarfareControls.BTWindowModifyHK.GetPaintingItemID
	 int                       GetPaintingID (  );                               		//  GUIWarfareControls.BTWindowModifyHK.GetPaintingID
	 int                       GetSelectedPaintingID (  );                       		//  GUIWarfareControls.BTWindowModifyHK.GetSelectedPaintingID
	 int                       GetSelectedPaintingItemID (  );                   		//  GUIWarfareControls.BTWindowModifyHK.GetSelectedPaintingItemID
	 int                       GetSelectedUnionedPartID (  );                    		//  GUIWarfareControls.BTWindowModifyHK.GetSelectedUnionedPartID
	 struct FBtrDouble         GetSelectedItemUniqueID (  );                     		//  GUIWarfareControls.BTWindowModifyHK.GetSelectedItemUniqueID
	 bool                      ButtonGroups_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.ButtonGroups_OnClick
	 void                      SetPaintingSempleButton ( int SelectedIdx );      		//  GUIWarfareControls.BTWindowModifyHK.SetPaintingSempleButton
	 void                      Internal_OnClose ( bool bCancelled );             		//  GUIWarfareControls.BTWindowModifyHK.Internal_OnClose
	 void                      SetData ( class UwItemBoxHK* ib, class UwItemBoxInstanceHK* ibi );		//  GUIWarfareControls.BTWindowModifyHK.SetData
	 bool                      ButtonInit_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.ButtonInit_OnClick
	 void                      ACLList_OnChange ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowModifyHK.ACLList_OnChange
	 bool                      GunstockRemoveButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.GunstockRemoveButton_OnClick
	 bool                      BarrelRemoveButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.BarrelRemoveButton_OnClick
	 bool                      SilencerRemoveButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.SilencerRemoveButton_OnClick
	 bool                      SightRemoveButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.SightRemoveButton_OnClick
	 bool                      PaintRemoveButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.PaintRemoveButton_OnClick
	 bool                      CustomGunstockPartsButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.CustomGunstockPartsButton_OnClick
	 bool                      CustomBarrelPartsButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.CustomBarrelPartsButton_OnClick
	 bool                      CustomSilencerPartsButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.CustomSilencerPartsButton_OnClick
	 bool                      CustomSightPartsButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.CustomSightPartsButton_OnClick
	 bool                      CustomPaintPartsButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowModifyHK.CustomPaintPartsButton_OnClick
	 void                      Refresh (  );                                     		//  GUIWarfareControls.BTWindowModifyHK.Refresh
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowModifyHK.InitComponent
}; // Size: 0x031C

// Class GUIWarfareControls.BTWindowTrophyHK2
class DLL_IMPORT UBTWindowTrophyHK2 : public UBTWindowHK
{
public:
	unsigned long                                      bPlayScaleAniSound:1;                             		// 0x04AC ( 0x0004 )  [0x00000001]
	struct FString                                     strRequiredUser[ 0x02 ];                          		// 0x04B0 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     MyNickName;                                       		// 0x04C8 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     TrophyReceiver[ 0x02 ];                           		// 0x04D4 ( 0x0018 ) [ CPF_NeedCtorLink ]
	class UwItemBoxHK*                                 SaveItemInfo[ 0x02 ];                             		// 0x04EC ( 0x0008 ) 
	class UwItemBoxInstanceHK*                         SaveInstanceInfo[ 0x02 ];                         		// 0x04F4 ( 0x0008 ) 
	struct FFloatBox                                   fbButtonItemBox[ 0x02 ];                          		// 0x04FC ( 0x0020 ) 
	class UBTAniItemBoxButtonHK*                       ButtonItemBox[ 0x02 ];                            		// 0x051C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonItemState[ 0x02 ];                        		// 0x0524 ( 0x0020 ) 
	class UBTTPItemUIStatusHK*                         ButtonItemState[ 0x02 ];                          		// 0x0544 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbEditItemDescription[ 0x02 ];                    		// 0x054C ( 0x0020 ) 
	class UBTMultiLineEditBoxHK*                       EditItemDescription[ 0x02 ];                      		// 0x056C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelItemDescription[ 0x02 ];                   		// 0x0574 ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         LabelItemDescription[ 0x02 ];                     		// 0x0594 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelSeparator[ 0x02 ];                         		// 0x059C ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         LabelSeparator[ 0x02 ];                           		// 0x05BC ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelPreview[ 0x02 ];                           		// 0x05C4 ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         LabelPreview[ 0x02 ];                             		// 0x05E4 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTModelWeaponHK*                            btWeapon[ 0x02 ];                                 		// 0x05EC ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class ABTROModelWeapon*                            roWeapon[ 0x02 ];                                 		// 0x05F4 ( 0x0008 ) 
	class UBTLabelSlideAnimationHK*                    LabelPreviewSlide[ 0x02 ];                        		// 0x05FC ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelCenterLineText;                            		// 0x0604 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelCenterLineText;                              		// 0x0614 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelCenterLine;                                		// 0x0618 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelCenterLine;                                  		// 0x0628 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabelTopLine;                                  		// 0x062C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelPromotion;                                 		// 0x0638 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelPromotion;                                   		// 0x0648 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabelContent;                                  		// 0x064C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelContent[ 0x02 ];                           		// 0x0658 ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         LabelContent[ 0x02 ];                             		// 0x0678 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowTrophyHK2.Internal_OnOpen
	 void                      SetData ( struct FString MyNickName, struct FString TrophyReceiver1, struct FString TrophyReceiver2, class UwItemBoxHK* ItemInfo1, class UwItemBoxInstanceHK* InstanceInfo1, class UwItemBoxHK* ItemInfo2, class UwItemBoxInstanceHK* InstanceInfo2, class ABTROModelWeapon* ro1, class ABTROModelWeapon* ro2 );		//  GUIWarfareControls.BTWindowTrophyHK2.SetData
	 void                      ButtonItemBox_OnChangeItemInfoEnd2 (  );          		//  GUIWarfareControls.BTWindowTrophyHK2.ButtonItemBox_OnChangeItemInfoEnd2
	 void                      ButtonItemBox_OnChangeItemInfo2 ( int Index );    		//  GUIWarfareControls.BTWindowTrophyHK2.ButtonItemBox_OnChangeItemInfo2
	 void                      ButtonItemBox_OnChangeItemInfoEnd1 (  );          		//  GUIWarfareControls.BTWindowTrophyHK2.ButtonItemBox_OnChangeItemInfoEnd1
	 void                      ButtonItemBox_OnChangeItemInfo1 ( int Index );    		//  GUIWarfareControls.BTWindowTrophyHK2.ButtonItemBox_OnChangeItemInfo1
	 void                      ItemBox_OnDramaEnded2 (  );                       		//  GUIWarfareControls.BTWindowTrophyHK2.ItemBox_OnDramaEnded2
	 void                      ItemBox_OnScaleAniChanged2 ( float scaleValue, float ScaleMax );		//  GUIWarfareControls.BTWindowTrophyHK2.ItemBox_OnScaleAniChanged2
	 void                      ItemBox_OnStartScaleAni2 ( float scaleValue, float ScaleMax );		//  GUIWarfareControls.BTWindowTrophyHK2.ItemBox_OnStartScaleAni2
	 void                      ItemBox_OnDramaEnded (  );                        		//  GUIWarfareControls.BTWindowTrophyHK2.ItemBox_OnDramaEnded
	 void                      ItemBox_OnScaleAniChanged ( float scaleValue, float ScaleMax );		//  GUIWarfareControls.BTWindowTrophyHK2.ItemBox_OnScaleAniChanged
	 void                      ItemBox_OnStartScaleAni ( float scaleValue, float ScaleMax );		//  GUIWarfareControls.BTWindowTrophyHK2.ItemBox_OnStartScaleAni
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowTrophyHK2.InitComponent
}; // Size: 0x01D4

// Class GUIWarfareControls.BTTPOptionCommunityHK
class DLL_IMPORT UBTTPOptionCommunityHK : public UBTTPOptionBaseHK
{
public:
	class UBTACLMessengerBanHK*                        aclban;                                           		// 0x0700 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabel[ 0x02 ];                                 		// 0x0704 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAllowMode[ 0x03 ];                             		// 0x071C ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ContextMenu_OnClose ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPOptionCommunityHK.ContextMenu_OnClose
	 bool                      ContextMenu_OnOpen ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPOptionCommunityHK.ContextMenu_OnOpen
	 void                      UpdateBlockUserList ( class TArray< struct FString > blockuserlist );		//  GUIWarfareControls.BTTPOptionCommunityHK.UpdateBlockUserList
	 void                      ContextMenu_OnSelected ( int ContextMenuIndex );  		//  GUIWarfareControls.BTTPOptionCommunityHK.ContextMenu_OnSelected
	 void                      InitializeContent (  );                           		//  GUIWarfareControls.BTTPOptionCommunityHK.InitializeContent
	 struct FFloatBox          TPOptionCommunity_Content_AWinPos_Changed ( int i, int vi, struct FFloatBox fbList );		//  GUIWarfareControls.BTTPOptionCommunityHK.TPOptionCommunity_Content_AWinPos_Changed
	 void                      InitializeLabel (  );                             		//  GUIWarfareControls.BTTPOptionCommunityHK.InitializeLabel
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionCommunityHK.InitComponent
}; // Size: 0x0040

// Class GUIWarfareControls.BTLabelRoomInfoHK
class DLL_IMPORT UBTLabelRoomInfoHK : public UBTOwnerDrawImageHK
{
public:
	class UBTTTRoomInfoHK*                             tT;                                               		// 0x03B4 ( 0x0004 ) 
	struct FString                                     MapName;                                          		// 0x03B8 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UMaterial*                                   MapImg;                                           		// 0x03C4 ( 0x0004 ) 
	class TArray< class UMaterial* >                   supplyImg;                                        		// 0x03C8 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelRoomInfoHK.Internal_OnRendered
	 void                      SetRoomInfo ( struct FString RoomName, int GameState, struct FString roommaster, struct FString GameMode, struct FString Weapon, struct FString HardCore, struct FString gamerunning );		//  GUIWarfareControls.BTLabelRoomInfoHK.SetRoomInfo
	 void                      SetMapName ( struct FString MN );                 		//  GUIWarfareControls.BTLabelRoomInfoHK.SetMapName
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTLabelRoomInfoHK.InitComponent
}; // Size: 0x0020

// Class GUIWarfareControls.BTWindowPasswordHK
class DLL_IMPORT UBTWindowPasswordHK : public UBTWindowHK
{
public:
	struct FString                                     strLabel;                                         		// 0x04AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel;                                          		// 0x04B8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelPass;                                      		// 0x04C8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbEditPass;                                       		// 0x04D8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label;                                            		// 0x04E8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelPass;                                        		// 0x04EC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                EditPass;                                         		// 0x04F0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      SetData (  );                                     		//  GUIWarfareControls.BTWindowPasswordHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowPasswordHK.InitComponent
}; // Size: 0x0048

// Class GUIWarfareControls.BTACLLobbyHK
class DLL_IMPORT UBTACLLobbyHK : public UBTAutoColumnListHK
{
public:
	class UBTTTRoomInfoHK*                             tT;                                               		// 0x0460 ( 0x0004 ) [ CPF_Edit | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strGameState[ 0x02 ];                             		// 0x0464 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCW_GameMode[ 0x03 ];                           		// 0x047C ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     onoff[ 0x02 ];                                    		// 0x04A0 ( 0x0018 ) [ CPF_Edit | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class TArray< struct FString >                     strWeaponRestrict;                                		// 0x04B8 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     strBotDifficult;                                  		// 0x04C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      OnRendered ( class UCanvas* C );                  		//  GUIWarfareControls.BTACLLobbyHK.OnRendered
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLLobbyHK.InitComponent
	 int                       IntToPingImgIndex ( int Index );                  		//  GUIWarfareControls.BTACLLobbyHK.IntToPingImgIndex
	 struct FString            IntToGameState ( int Index );                     		//  GUIWarfareControls.BTACLLobbyHK.IntToGameState
	 bool                      ChangeRoomOwenrName ( struct FString old_name, struct FString new_name );		//  GUIWarfareControls.BTACLLobbyHK.ChangeRoomOwenrName
	 void                      ChangeRoomOwnerInfo ( int idx, struct FString OwnerName, struct FString OwnerIP );		//  GUIWarfareControls.BTACLLobbyHK.ChangeRoomOwnerInfo
	 void                      ChangeRoomUserCount ( int i, int CurUser );       		//  GUIWarfareControls.BTACLLobbyHK.ChangeRoomUserCount
	 void                      ChangeRoomState ( int i, int game_state );        		//  GUIWarfareControls.BTACLLobbyHK.ChangeRoomState
	 void                      ChangeRoomInfo ( int i, struct FString room_name, struct FString map_name, int map_num, int game_mode, unsigned char IsTeamBalance, int CurUser, int MaxUser, int game_state, unsigned char IsPW, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum );		//  GUIWarfareControls.BTACLLobbyHK.ChangeRoomInfo
	 void                      ChangeRoomName ( int i, struct FString room_name );		//  GUIWarfareControls.BTACLLobbyHK.ChangeRoomName
	 void                      RemoveAll (  );                                   		//  GUIWarfareControls.BTACLLobbyHK.RemoveAll
	 void                      RemoveRow ( int Index );                          		//  GUIWarfareControls.BTACLLobbyHK.RemoveRow
	 bool                      RemoveByGameNumber ( int GameNumber );            		//  GUIWarfareControls.BTACLLobbyHK.RemoveByGameNumber
	 struct FString            SetPingStatus ( int Index, int Status );          		//  GUIWarfareControls.BTACLLobbyHK.SetPingStatus
	 struct FString            GetMasterIP ( int Index );                        		//  GUIWarfareControls.BTACLLobbyHK.GetMasterIP
	 void                      AddRowNoAlign ( class UBTAutoColumnListDataHK* Item, int Index );		//  GUIWarfareControls.BTACLLobbyHK.AddRowNoAlign
	 void                      AddRow ( class UBTAutoColumnListDataHK* Item, bool bSet, int Index );		//  GUIWarfareControls.BTACLLobbyHK.AddRow
	 void                      RemoveRowArray ( int StartIndex, int endLength ); 		//  GUIWarfareControls.BTACLLobbyHK.RemoveRowArray
	 int                       PingToIndex ( int msec );                         		//  GUIWarfareControls.BTACLLobbyHK.PingToIndex
	 void                      SetRoomPingStatus ( struct FString IP, int msec );		//  GUIWarfareControls.BTACLLobbyHK.SetRoomPingStatus
	 struct FString            GetRoomOwnerIP ( int Index );                     		//  GUIWarfareControls.BTACLLobbyHK.GetRoomOwnerIP
	 void                      ReplaceRoomCW ( int Index, int WaitRoomIdx, struct FString LeaderName, struct FString RoomName, struct FString MapName, int MapNum, int CurUserCount, int MaxUserCount, int Status );		//  GUIWarfareControls.BTACLLobbyHK.ReplaceRoomCW
	 void                      AddRoomCW ( int WaitRoomIdx, struct FString LeaderName, struct FString RoomName, struct FString MapName, int MapNum, int CurUserCount, int MaxUserCount, int Status );		//  GUIWarfareControls.BTACLLobbyHK.AddRoomCW
	 bool                      RemoveByGameNumberCW ( int cw_no );               		//  GUIWarfareControls.BTACLLobbyHK.RemoveByGameNumberCW
	 void                      AddRoomInteligenceCW ( int WaitRoomIdx, struct FString LeaderName, struct FString RoomName, struct FString MapName, int MapNum, int CurUserCount, int MaxUserCount, int Status );		//  GUIWarfareControls.BTACLLobbyHK.AddRoomInteligenceCW
	 void                      ReplaceRoom ( int Index, int SP, int no, int PASS, struct FString room_name, struct FString map_name, int map_num, int game_mode, int restrict, int CurUser, int MaxUser, int game_state, int Ping, struct FString masterIP, int game_minute, int teambalance, struct FString room_owner, int BotDifficult, int BotUserTeam, int cw_no );		//  GUIWarfareControls.BTACLLobbyHK.ReplaceRoom
	 int                       FindRoomNo ( int no, int cw_no );                 		//  GUIWarfareControls.BTACLLobbyHK.FindRoomNo
	 void                      AddRoom ( int SP, int no, int PASS, struct FString room_name, struct FString map_name, int map_num, int game_mode, int restrict, int CurUser, int MaxUser, int game_state, int Ping, struct FString masterIP, int game_minute, int teambalance, struct FString room_owner, int BotDifficult, int BotUserTeam, int cw_no );		//  GUIWarfareControls.BTACLLobbyHK.AddRoom
	 void                      AddRoomInteligence ( int SP, int no, int PASS, struct FString room_name, struct FString map_name, int map_num, int game_mode, int restrict, int CurUser, int MaxUser, int game_state, int Ping, struct FString masterIP, int game_minute, int teambalance, struct FString room_owner, int BotDifficult, int BotUserTeam, int cw_no );		//  GUIWarfareControls.BTACLLobbyHK.AddRoomInteligence
	 void                      LC9_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHK.LC9_Draw
	 void                      LC7_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHK.LC7_Draw
	 void                      LC6_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHK.LC6_Draw
	 void                      LC3_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHK.LC3_Draw
	 void                      LC2_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHK.LC2_Draw
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHK.LC0_Draw
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLLobbyHK.GetItemHeight
}; // Size: 0x0070

// Class GUIWarfareControls.BTTTRoomInfoHK
class DLL_IMPORT UBTTTRoomInfoHK : public URenderObject
{
public:
	unsigned long                                      bBotMode:1;                                       		// 0x0040 ( 0x0004 )  [0x00000001]
	unsigned long                                      bOverlapControl:1;                                		// 0x0040 ( 0x0004 )  [0x00000002]
	struct FString                                     strGameState[ 0x02 ];                             		// 0x0044 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                FontTitleSize;                                    		// 0x005C ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                FontSize;                                         		// 0x0060 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                FontMapNameSize;                                  		// 0x0064 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontTitleColor;                                   		// 0x0068 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontColor;                                        		// 0x006C ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontShadowColor;                                  		// 0x0070 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FImage                                      BackgroundImage;                                  		// 0x0074 ( 0x0020 ) 
	struct FImage                                      MapImage;                                         		// 0x0094 ( 0x0020 ) 
	class TArray< struct FImage >                      SupplyImage;                                      		// 0x00B4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FFloatBox                                   fbTitle;                                          		// 0x00C0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbGameState;                                      		// 0x00D0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbMapName;                                        		// 0x00E0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbMapImage;                                       		// 0x00F0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbHeader[ 0x05 ];                                 		// 0x0100 ( 0x0050 ) 
	struct FFloatBox                                   fbData[ 0x05 ];                                   		// 0x0150 ( 0x0050 ) 
	struct FString                                     strHeader[ 0x06 ];                                		// 0x01A0 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strTitle;                                         		// 0x01E8 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strCurGameState;                                  		// 0x01F4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strMapName;                                       		// 0x0200 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strData[ 0x05 ];                                  		// 0x020C ( 0x003C ) [ CPF_NeedCtorLink ]
	int                                                SelectedIndex;                                    		// 0x0248 ( 0x0004 ) 

	// UScript Functions
	 bool                      RenderFixed ( class UCanvas* C, float Delta );    		//  GUIWarfareControls.BTTTRoomInfoHK.RenderFixed
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTTTRoomInfoHK.Render
	 void                      SetData ( struct FString RoomName, int GameState, struct FString MapName, class UMaterial* MapImg, class TArray< class UMaterial* > supplyImg, struct FString roommaster, struct FString GameMode, struct FString Weapon, struct FString HardCore, struct FString gamerunning, bool bBotMode );		//  GUIWarfareControls.BTTTRoomInfoHK.SetData
	 void                      ChangeSelectedIndex ( int i );                    		//  GUIWarfareControls.BTTTRoomInfoHK.ChangeSelectedIndex
	 void                      Init (  );                                        		//  GUIWarfareControls.BTTTRoomInfoHK.Init
}; // Size: 0x020C

// Class GUIWarfareControls.BTWindowQuickEnterRoomHK
class DLL_IMPORT UBTWindowQuickEnterRoomHK : public UBTWindowHK
{
public:
	int                                                GameMode;                                         		// 0x04AC ( 0x0004 ) [ CPF_Config ]
	int                                                Map;                                              		// 0x04B0 ( 0x0004 ) [ CPF_Config ]
	int                                                MapID;                                            		// 0x04B4 ( 0x0004 ) [ CPF_Config ]
	int                                                WeaponRestriction;                                		// 0x04B8 ( 0x0004 ) [ CPF_Config ]
	int                                                SubModeIdx;                                       		// 0x04BC ( 0x0004 ) [ CPF_Config ]
	struct FString                                     strLabel[ 0x03 ];                                 		// 0x04C0 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAllMaps;                                       		// 0x04E4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAllModes;                                      		// 0x04F0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAllSubMode;                                    		// 0x04FC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         Label[ 0x03 ];                                    		// 0x0508 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UButtonGroups*                               GroupGameMode;                                    		// 0x0514 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class TArray< class UBTCheckBoxHK* >               ButtonGameMode;                                   		// 0x0518 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UButtonGroups*                               GroupMap;                                         		// 0x0524 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class TArray< class UBTCheckBoxHK* >               ButtonMap;                                        		// 0x0528 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UButtonGroups*                               GroupSubMode;                                     		// 0x0534 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class TArray< class UBTCheckBoxHK* >               ButtonSubMode;                                    		// 0x0538 ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned long                                      bCancelled:1;                                     		// 0x0544 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawImageHK*                         LabelMap;                                         		// 0x0548 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboMap;                                         		// 0x054C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelGameMode;                                    		// 0x0550 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboGameMode;                                    		// 0x0554 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelSubMode;                                     		// 0x0558 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboSubMode;                                     		// 0x055C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class TArray< class UBTOwnerDrawCaptionButtonHK* > GameModeBtnList;                                  		// 0x0560 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UwMatchMaker*                                MatchMaker;                                       		// 0x056C ( 0x0004 ) [ CPF_Transient ]
	class UBTOwnerDrawImageHK*                         ImageMap;                                         		// 0x0570 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         ImageSupply[ 0x03 ];                              		// 0x0574 ( 0x000C ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         NewMapIcon;                                       		// 0x0580 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	unsigned char                                      nSelGameMode;                                     		// 0x0584 ( 0x0001 ) 
	class UBTRODecorateStringHK*                       btToolTip;                                        		// 0x0588 ( 0x0004 ) 
	class TArray< struct FGameModeInfo >               GameModeInfos;                                    		// 0x058C ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 int                       GetGameModeIndex (  );                            		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.GetGameModeIndex
	 void                      SetGameModeIndex ( int idx );                     		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.SetGameModeIndex
	 void                      SetGameModeByExtraDataIndex ( int idx );          		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.SetGameModeByExtraDataIndex
	 struct FString            GetGameModeClass (  );                            		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.GetGameModeClass
	 void                      FillSubMode (  );                                 		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.FillSubMode
	 bool                      SelGameMode ( class UGUIComponent* Sender );      		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.SelGameMode
	 struct FString            GetMapName (  );                                  		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.GetMapName
	 void                      InitGameModeList ( bool bSet, int Index );        		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.InitGameModeList
	 int                       GetSubModeIDFromComboIndex ( int idx );           		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.GetSubModeIDFromComboIndex
	 int                       GetMapIDFromComboIndex ( int idx );               		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.GetMapIDFromComboIndex
	 int                       GetSelectedMapID (  );                            		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.GetSelectedMapID
	 void                      ApplyLocalizedStrings (  );                       		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.ApplyLocalizedStrings
	 void                      FillSubModeList (  );                             		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.FillSubModeList
	 void                      FloatingRendered ( class UCanvas* C );            		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.FloatingRendered
	 void                      FillMapList ( int nIndex );                       		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.FillMapList
	 void                      ComboMap_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.ComboMap_OnChange
	 bool                      OnCancel ( class UGUIComponent* Sender );         		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.OnCancel
	 struct FString            InternalOnSaveINI ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.InternalOnSaveINI
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowQuickEnterRoomHK.InitComponent
}; // Size: 0x00EC

// Class GUIWarfareControls.BTWindowCreateRoom
class DLL_IMPORT UBTWindowCreateRoom : public UBTWindowHK
{
public:
	struct FString                                     DefaultRandomRoomName;                            		// 0x04AC ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         LabelRoomName;                                    		// 0x04B8 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         BorderRoomName;                                   		// 0x04BC ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTEditBoxHK*                                EditRoomName;                                     		// 0x04C0 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelPassword;                                    		// 0x04C4 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         BorderPassword;                                   		// 0x04C8 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTEditBoxHK*                                EditPassword;                                     		// 0x04CC ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelMap;                                         		// 0x04D0 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboMap;                                         		// 0x04D4 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelGameMode;                                    		// 0x04D8 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboGameMode;                                    		// 0x04DC ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelCapacity;                                    		// 0x04E0 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboCapacity;                                    		// 0x04E4 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelWeaponRestriction;                           		// 0x04E8 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboWeaponRestriction;                           		// 0x04EC ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelScore;                                       		// 0x04F0 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboScore;                                       		// 0x04F4 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelDefenceModeLevel;                            		// 0x04F8 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboDefenceModeLevel;                            		// 0x04FC ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelTime;                                        		// 0x0500 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               comboTime;                                        		// 0x0504 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelBlance;                                      		// 0x0508 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         ImageMap;                                         		// 0x050C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         ImageSupply[ 0x03 ];                              		// 0x0510 ( 0x000C ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         NewMapIcon;                                       		// 0x051C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelReSpawn;                                     		// 0x0520 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UwMatchMaker*                                MatchMaker;                                       		// 0x0524 ( 0x0004 ) [ CPF_Transient ]
	class TArray< struct FGameModeInfo >               GameModeInfos;                                    		// 0x0528 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                DefaultRoomNamesCount;                            		// 0x0534 ( 0x0004 ) [ CPF_Localized ]
	struct FString                                     DefaultRoomNames[ 0x64 ];                         		// 0x0538 ( 0x04B0 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionMakeRoom;                                  		// 0x09E8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionRoomName;                                  		// 0x09F4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionPassword;                                  		// 0x0A00 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionMap;                                       		// 0x0A0C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionGameMode;                                  		// 0x0A18 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionCapacity;                                  		// 0x0A24 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionWeaponRestriction;                         		// 0x0A30 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionScore;                                     		// 0x0A3C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionTime;                                      		// 0x0A48 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionBlance;                                    		// 0x0A54 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionReSpawn;                                   		// 0x0A60 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionRandom;                                    		// 0x0A6C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionFixed;                                     		// 0x0A78 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     CaptionDefenceModeLevel;                          		// 0x0A84 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabeDF_Difficult[ 0x04 ];                      		// 0x0A90 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTRadioOnOffButtonHK*                       TeamBlanceRadioBtn;                               		// 0x0AC0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbRadio;                                          		// 0x0AC4 ( 0x0010 ) 
	class UBTRadioOnOffButtonHK*                       ReSpawnRadioBtn;                                  		// 0x0AD4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbReSpawnRadio;                                   		// 0x0AD8 ( 0x0010 ) 
	class UBTRODecorateStringHK*                       btToolTip;                                        		// 0x0AE8 ( 0x0004 ) 
	class TArray< class UBTOwnerDrawCaptionButtonHK* > GameModeBtnList;                                  		// 0x0AEC ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned char                                      nSelGameMode;                                     		// 0x0AF8 ( 0x0001 ) 

	// UScript Functions
	 void                      FloatingRendered ( class UCanvas* C );            		//  GUIWarfareControls.BTWindowCreateRoom.FloatingRendered
	 void                      ComboMap_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowCreateRoom.ComboMap_OnChange
	 void                      SetRandomRoomName (  );                           		//  GUIWarfareControls.BTWindowCreateRoom.SetRandomRoomName
	 void                      ComboGameMode_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowCreateRoom.ComboGameMode_OnChange
	 void                      FillWindow (  );                                  		//  GUIWarfareControls.BTWindowCreateRoom.FillWindow
	 void                      SetWeaponRestriction ( int Value );               		//  GUIWarfareControls.BTWindowCreateRoom.SetWeaponRestriction
	 void                      FillDefenceModeLevel (  );                        		//  GUIWarfareControls.BTWindowCreateRoom.FillDefenceModeLevel
	 void                      FillWeaponRestrictions (  );                      		//  GUIWarfareControls.BTWindowCreateRoom.FillWeaponRestrictions
	 void                      FillCapacity (  );                                		//  GUIWarfareControls.BTWindowCreateRoom.FillCapacity
	 void                      FillGameTimeList (  );                            		//  GUIWarfareControls.BTWindowCreateRoom.FillGameTimeList
	 void                      FillScoreList (  );                               		//  GUIWarfareControls.BTWindowCreateRoom.FillScoreList
	 bool                      SelGameMode ( class UGUIComponent* Sender );      		//  GUIWarfareControls.BTWindowCreateRoom.SelGameMode
	 void                      FillGameModeList ( bool bSet, int Index );        		//  GUIWarfareControls.BTWindowCreateRoom.FillGameModeList
	 void                      FillMapList (  );                                 		//  GUIWarfareControls.BTWindowCreateRoom.FillMapList
	 int                       GetMapIDFromComboIndex ( int idx );               		//  GUIWarfareControls.BTWindowCreateRoom.GetMapIDFromComboIndex
	 int                       GetSelectedMapID (  );                            		//  GUIWarfareControls.BTWindowCreateRoom.GetSelectedMapID
	 int                       GetBotDifficultLevel (  );                        		//  GUIWarfareControls.BTWindowCreateRoom.GetBotDifficultLevel
	 int                       GetBotModeUserTeam (  );                          		//  GUIWarfareControls.BTWindowCreateRoom.GetBotModeUserTeam
	 int                       GetWeaponLimit (  );                              		//  GUIWarfareControls.BTWindowCreateRoom.GetWeaponLimit
	 int                       GetMapIndex (  );                                 		//  GUIWarfareControls.BTWindowCreateRoom.GetMapIndex
	 struct FString            GetMapName (  );                                  		//  GUIWarfareControls.BTWindowCreateRoom.GetMapName
	 struct FString            GetMapFriendlyName (  );                          		//  GUIWarfareControls.BTWindowCreateRoom.GetMapFriendlyName
	 int                       GetGameModeIndex (  );                            		//  GUIWarfareControls.BTWindowCreateRoom.GetGameModeIndex
	 void                      SetGameModeIndex ( int idx );                     		//  GUIWarfareControls.BTWindowCreateRoom.SetGameModeIndex
	 void                      SetGameModeByExtraDataIndex ( int idx );          		//  GUIWarfareControls.BTWindowCreateRoom.SetGameModeByExtraDataIndex
	 struct FString            GetGameModeClass (  );                            		//  GUIWarfareControls.BTWindowCreateRoom.GetGameModeClass
	 void                      eventOpened ( class UGUIComponent* Sender );      		// [ FUNC_Event ] GUIWarfareControls.BTWindowCreateRoom.Opened
	 void                      ApplyLocalizedStrings (  );                       		//  GUIWarfareControls.BTWindowCreateRoom.ApplyLocalizedStrings
	 void                      InitializeCombos (  );                            		//  GUIWarfareControls.BTWindowCreateRoom.InitializeCombos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowCreateRoom.InitComponent
}; // Size: 0x0650

// Class GUIWarfareControls.BTACLLobbyHKCN
class DLL_IMPORT UBTACLLobbyHKCN : public UBTACLLobbyHK
{
public:
	class UBTTTRoomInfoHKCN*                           tT;                                               		// 0x04D0 ( 0x0004 ) [ CPF_Edit | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strGameState[ 0x02 ];                             		// 0x04D4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCW_GameMode[ 0x03 ];                           		// 0x04EC ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     onoff[ 0x02 ];                                    		// 0x0510 ( 0x0018 ) [ CPF_Edit | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class TArray< struct FString >                     strWeaponRestrict;                                		// 0x0528 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FImage                                      ImgWeaponRestrict[ 0x07 ];                        		// 0x0534 ( 0x00E0 ) 
	class UBTRODecorateStringHK*                       SubModeToolTip;                                   		// 0x0614 ( 0x0004 ) 
	class TArray< struct FString >                     strBotDifficult;                                  		// 0x0618 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned long                                      isChangeTTInfo:1;                                 		// 0x0624 ( 0x0004 )  [0x00000001]
	unsigned long                                      bShowSubModeToolTip:1;                            		// 0x0624 ( 0x0004 )  [0x00000002]

	// UScript Functions
	 void                      OnRendered ( class UCanvas* C );                  		//  GUIWarfareControls.BTACLLobbyHKCN.OnRendered
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLLobbyHKCN.InitComponent
	 int                       IntToPingImgIndex ( int Index );                  		//  GUIWarfareControls.BTACLLobbyHKCN.IntToPingImgIndex
	 struct FString            IntToGameState ( int Index );                     		//  GUIWarfareControls.BTACLLobbyHKCN.IntToGameState
	 void                      ChangeRoomOwnerInfo ( int idx, struct FString OwnerName, struct FString OwnerIP );		//  GUIWarfareControls.BTACLLobbyHKCN.ChangeRoomOwnerInfo
	 void                      ChangeRoomUserCount ( int i, int CurUser );       		//  GUIWarfareControls.BTACLLobbyHKCN.ChangeRoomUserCount
	 void                      ChangeRoomState ( int i, int game_state );        		//  GUIWarfareControls.BTACLLobbyHKCN.ChangeRoomState
	 void                      ChangeRoomInfo ( int i, struct FString room_name, struct FString map_name, int map_num, int game_mode, unsigned char IsTeamBalance, int CurUser, int MaxUser, int game_state, unsigned char IsPW, unsigned char BotDifficult, unsigned char WeaponLimit, unsigned char BotModeUserTeamNum );		//  GUIWarfareControls.BTACLLobbyHKCN.ChangeRoomInfo
	 void                      ChangeRoomName ( int i, struct FString room_name );		//  GUIWarfareControls.BTACLLobbyHKCN.ChangeRoomName
	 void                      RemoveAll (  );                                   		//  GUIWarfareControls.BTACLLobbyHKCN.RemoveAll
	 void                      RemoveRow ( int Index );                          		//  GUIWarfareControls.BTACLLobbyHKCN.RemoveRow
	 bool                      RemoveByGameNumber ( int GameNumber );            		//  GUIWarfareControls.BTACLLobbyHKCN.RemoveByGameNumber
	 struct FString            SetPingStatus ( int Index, int Status );          		//  GUIWarfareControls.BTACLLobbyHKCN.SetPingStatus
	 struct FString            GetMasterIP ( int Index );                        		//  GUIWarfareControls.BTACLLobbyHKCN.GetMasterIP
	 void                      AddRowNoAlign ( class UBTAutoColumnListDataHK* Item, int Index );		//  GUIWarfareControls.BTACLLobbyHKCN.AddRowNoAlign
	 void                      AddRow ( class UBTAutoColumnListDataHK* Item, bool bSet, int Index );		//  GUIWarfareControls.BTACLLobbyHKCN.AddRow
	 void                      RemoveRowArray ( int StartIndex, int endLength ); 		//  GUIWarfareControls.BTACLLobbyHKCN.RemoveRowArray
	 int                       PingToIndex ( int msec );                         		//  GUIWarfareControls.BTACLLobbyHKCN.PingToIndex
	 void                      SetRoomPingStatus ( struct FString IP, int msec );		//  GUIWarfareControls.BTACLLobbyHKCN.SetRoomPingStatus
	 struct FString            GetRoomOwnerIP ( int Index );                     		//  GUIWarfareControls.BTACLLobbyHKCN.GetRoomOwnerIP
	 void                      ReplaceRoomCW ( int Index, int WaitRoomIdx, struct FString LeaderName, struct FString RoomName, struct FString MapName, int MapNum, int CurUserCount, int MaxUserCount, int Status );		//  GUIWarfareControls.BTACLLobbyHKCN.ReplaceRoomCW
	 void                      AddRoomCW ( int WaitRoomIdx, struct FString LeaderName, struct FString RoomName, struct FString MapName, int MapNum, int CurUserCount, int MaxUserCount, int Status );		//  GUIWarfareControls.BTACLLobbyHKCN.AddRoomCW
	 bool                      RemoveByGameNumberCW ( int cw_no );               		//  GUIWarfareControls.BTACLLobbyHKCN.RemoveByGameNumberCW
	 void                      AddRoomInteligenceCW ( int WaitRoomIdx, struct FString LeaderName, struct FString RoomName, struct FString MapName, int MapNum, int CurUserCount, int MaxUserCount, int Status );		//  GUIWarfareControls.BTACLLobbyHKCN.AddRoomInteligenceCW
	 void                      ReplaceRoom ( int Index, int SP, int no, int PASS, struct FString room_name, struct FString map_name, int map_num, int game_mode, int restrict, int CurUser, int MaxUser, int game_state, int Ping, struct FString masterIP, int game_minute, int teambalance, struct FString room_owner, int BotDifficult, int BotUserTeam, int cw_no );		//  GUIWarfareControls.BTACLLobbyHKCN.ReplaceRoom
	 int                       FindRoomNo ( int no, int cw_no );                 		//  GUIWarfareControls.BTACLLobbyHKCN.FindRoomNo
	 void                      AddRoom ( int SP, int no, int PASS, struct FString room_name, struct FString map_name, int map_num, int game_mode, int restrict, int CurUser, int MaxUser, int game_state, int Ping, struct FString masterIP, int game_minute, int teambalance, struct FString room_owner, int BotDifficult, int BotUserTeam, int cw_no );		//  GUIWarfareControls.BTACLLobbyHKCN.AddRoom
	 void                      AddRoomInteligence ( int SP, int no, int PASS, struct FString room_name, struct FString map_name, int map_num, int game_mode, int restrict, int CurUser, int MaxUser, int game_state, int Ping, struct FString masterIP, int game_minute, int teambalance, struct FString room_owner, int BotDifficult, int BotUserTeam, int cw_no );		//  GUIWarfareControls.BTACLLobbyHKCN.AddRoomInteligence
	 void                      LC9_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.LC9_Draw
	 void                      LC7_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.LC7_Draw
	 void                      LC6_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.LC6_Draw
	 void                      LC11_Draw_GameState ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.LC11_Draw_GameState
	 void                      LC10_Draw_No ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.LC10_Draw_No
	 void                      DrawSubMode ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.DrawSubMode
	 void                      DrawGameMode ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.DrawGameMode
	 void                      DrawMapName ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.DrawMapName
	 void                      LC3_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.LC3_Draw
	 void                      LC2_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.LC2_Draw
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLLobbyHKCN.LC0_Draw
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLLobbyHKCN.GetItemHeight
}; // Size: 0x0158

// Class GUIWarfareControls.BTTTRoomInfoHKCN
class DLL_IMPORT UBTTTRoomInfoHKCN : public URenderObject
{
public:
	unsigned long                                      bBotMode:1;                                       		// 0x0040 ( 0x0004 )  [0x00000001]
	unsigned long                                      bOverlapControl:1;                                		// 0x0040 ( 0x0004 )  [0x00000002]
	struct FString                                     strGameState[ 0x02 ];                             		// 0x0044 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                FontTitleSize;                                    		// 0x005C ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                FontSize;                                         		// 0x0060 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	int                                                FontMapNameSize;                                  		// 0x0064 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontTitleColor;                                   		// 0x0068 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontColor;                                        		// 0x006C ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontShadowColor;                                  		// 0x0070 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FImage                                      BackgroundImage;                                  		// 0x0074 ( 0x0020 ) 
	struct FImage                                      MapImage;                                         		// 0x0094 ( 0x0020 ) 
	class TArray< struct FImage >                      SupplyImage;                                      		// 0x00B4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FFloatBox                                   fbTitle;                                          		// 0x00C0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbGameState;                                      		// 0x00D0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbMapName;                                        		// 0x00E0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbMapImage;                                       		// 0x00F0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbHeader[ 0x06 ];                                 		// 0x0100 ( 0x0060 ) 
	struct FFloatBox                                   fbData[ 0x06 ];                                   		// 0x0160 ( 0x0060 ) 
	struct FString                                     strHeader[ 0x06 ];                                		// 0x01C0 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strTitle;                                         		// 0x0208 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strCurGameState;                                  		// 0x0214 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strMapName;                                       		// 0x0220 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strData[ 0x06 ];                                  		// 0x022C ( 0x0048 ) [ CPF_NeedCtorLink ]
	int                                                SelectedIndex;                                    		// 0x0274 ( 0x0004 ) 

	// UScript Functions
	 bool                      RenderFixed ( class UCanvas* C, float Delta );    		//  GUIWarfareControls.BTTTRoomInfoHKCN.RenderFixed
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTTTRoomInfoHKCN.Render
	 void                      SetData ( struct FString RoomName, int GameState, struct FString MapName, class UMaterial* MapImg, class TArray< class UMaterial* > supplyImg, struct FString roommaster, struct FString GameMode, struct FString Weapon, struct FString HardCore, struct FString gamerunning, bool bBotMode, struct FString CurMaxUser );		//  GUIWarfareControls.BTTTRoomInfoHKCN.SetData
	 void                      ChangeSelectedIndex ( int i );                    		//  GUIWarfareControls.BTTTRoomInfoHKCN.ChangeSelectedIndex
	 void                      Init (  );                                        		//  GUIWarfareControls.BTTTRoomInfoHKCN.Init
}; // Size: 0x0238

// Class GUIWarfareControls.BTTPInventoryHK
class DLL_IMPORT UBTTPInventoryHK : public UGUITabPanel
{
public:
	struct FString                                     strWeapon;                                        		// 0x0330 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSkill;                                         		// 0x033C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strQuickSlot;                                     		// 0x0348 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class ABTROModelNew*                               CharacterModel;                                   		// 0x0354 ( 0x0004 ) 
	class UTabControlMocker*                           TabControl;                                       		// 0x0358 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonInven[ 0x03 ];                              		// 0x035C ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UGUITabPanel*                                TPInven[ 0x03 ];                                  		// 0x0368 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPInventoryWeaponHK*                      TPWeapon;                                         		// 0x0374 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPInventorySkillHK*                       TPSkill;                                          		// 0x0378 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPInventoryQuickSlotHK*                   TPQuickSlot;                                      		// 0x037C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 bool                      SaveButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryHK.SaveButton_OnClick
	 bool                      TabControl_ButtonInven_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryHK.TabControl_ButtonInven_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPInventoryHK.InitComponent
}; // Size: 0x0050

// Class GUIWarfareControls.BTTPInventoryWeaponHK
class DLL_IMPORT UBTTPInventoryWeaponHK : public UBTTabPanelHK
{
public:
	class UBTTcpLink_Channel*                          TcpChannel;                                       		// 0x0338 ( 0x0004 ) 
	class UBTROItemBoxHK*                              DragItemBox;                                      		// 0x033C ( 0x0004 ) 
	class UDragObject*                                 DragBox;                                          		// 0x0340 ( 0x0004 ) 
	class UButtonGroups*                               InvenGroup;                                       		// 0x0344 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0348 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonWeapon[ 0x0B ];                           		// 0x034C ( 0x00B0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strButtonWeapon[ 0x0B ];                          		// 0x03FC ( 0x0084 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTItemBoxButtonHK*                          ButtonWeapon[ 0x0B ];                             		// 0x0480 ( 0x002C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAF;                                         		// 0x04AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRSA;                                        		// 0x04B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bLRMousePressed:1;                                		// 0x04B4 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonLR;                                         		// 0x04B8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bRRMousePressed:1;                                		// 0x04BC ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRR;                                         		// 0x04C0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         EdgeLine;                                         		// 0x04C4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         AFTeamBG;                                         		// 0x04C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         RSATeamBG;                                        		// 0x04CC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bVisibleAFModel:1;                                		// 0x04D0 ( 0x0004 )  [0x00000001]
	struct FString                                     strAF;                                            		// 0x04D4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRSA;                                           		// 0x04E0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTModelHK*                                  UIModel;                                          		// 0x04EC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class ABTROModelNew*                               CharacterModel;                                   		// 0x04F0 ( 0x0004 ) 
	class UBTAutoScrollListHK*                         ChatBox;                                          		// 0x04F4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                SaveMainTab;                                      		// 0x04F8 ( 0x0004 ) 
	int                                                SaveSubTab;                                       		// 0x04FC ( 0x0004 ) 
	struct FString                                     strMainMenu[ 0x05 ];                              		// 0x0500 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuAll[ 0x03 ];                            		// 0x053C ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuWeapon[ 0x04 ];                         		// 0x0560 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuEquip[ 0x05 ];                          		// 0x0590 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuSpecial[ 0x04 ];                        		// 0x05CC ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuCash[ 0x02 ];                           		// 0x05FC ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuAll;                                   		// 0x0614 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuWeapon;                                		// 0x0620 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuEquip;                                 		// 0x062C ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuSpecial;                               		// 0x0638 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuCash;                                  		// 0x0644 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UTabControlMocker*                           TabControl[ 0x02 ];                               		// 0x0650 ( 0x0008 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MainButton[ 0x05 ];                               		// 0x0658 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 SubButton[ 0x05 ];                                		// 0x066C ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelItemList;                                  		// 0x0680 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelItemList;                                    		// 0x0690 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTPItemList;                                     		// 0x0694 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTTPItemListHK*                             TPItemList;                                       		// 0x06A4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strMenuButton[ 0x07 ];                            		// 0x06A8 ( 0x0054 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbMenuButton;                                     		// 0x06FC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MenuButton;                                       		// 0x070C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemInfoHorzBoxHK*                        InfoBox;                                          		// 0x0710 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                CurrentRepairMode;                                		// 0x0714 ( 0x0004 ) 
	int                                                EquipItemCount;                                   		// 0x0718 ( 0x0004 ) 
	class TArray< struct FBtrDouble >                  EquipItemList;                                    		// 0x071C ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  InvenItemList;                                    		// 0x0728 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     Equip_DamegeItemNames;                            		// 0x0734 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     Inven_DamegeItemNames;                            		// 0x0740 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strCash;                                          		// 0x074C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class TArray< class UBTOwnerDrawImageHK* >         SlotNum;                                          		// 0x0758 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         SlotTemp;                                         		// 0x0764 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FScriptDelegate                             __deleShowCashChargeWindow__Delegate;             		// 0x0768 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __dele_StopWebzenWebzenInvenList__Delegate;       		// 0x0770 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __dele_sfReqWebzenInvenList__Delegate;            		// 0x0778 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      AddEquipWeaponeSlot ( int nSlotNum, struct FBtrDouble UniqueID );		//  GUIWarfareControls.BTTPInventoryWeaponHK.AddEquipWeaponeSlot
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPInventoryWeaponHK.InitComponent
	 void                      InitializeDragAndDrop (  );                       		//  GUIWarfareControls.BTTPInventoryWeaponHK.InitializeDragAndDrop
	 void                      InitializeRightPanel (  );                        		//  GUIWarfareControls.BTTPInventoryWeaponHK.InitializeRightPanel
	 void                      InitializeLeftPanel (  );                         		//  GUIWarfareControls.BTTPInventoryWeaponHK.InitializeLeftPanel
	 void                      Refresh (  );                                     		//  GUIWarfareControls.BTTPInventoryWeaponHK.Refresh
	 void                      fill (  );                                        		//  GUIWarfareControls.BTTPInventoryWeaponHK.fill
	 void                      UnequipItem ( int ButtonID );                     		//  GUIWarfareControls.BTTPInventoryWeaponHK.UnequipItem
	 int                       GetButtonWeaponID ( struct FBtrDouble UniqueID ); 		//  GUIWarfareControls.BTTPInventoryWeaponHK.GetButtonWeaponID
	 bool                      BTWindowDefineARHK_ItemUse_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowDefineARHK_ItemUse_OnOK
	 bool                      BTWindowDefineARHK_ReceiveCashItem_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowDefineARHK_ReceiveCashItem_OnOK
	 bool                      BTWindowCreateClanMarkHK_IsExist_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowCreateClanMarkHK_IsExist_OnOK
	 bool                      BTWindowCreateClanMarkHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowCreateClanMarkHK_OnOK
	 bool                      ChangeSubButton ( class TArray< struct FString > strTemp );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ChangeSubButton
	 void                      SetInfoBox ( int ItemIndex );                     		//  GUIWarfareControls.BTTPInventoryWeaponHK.SetInfoBox
	 bool                      dele_sfReqWebzenInvenList ( struct FString Type );		//  GUIWarfareControls.BTTPInventoryWeaponHK.dele_sfReqWebzenInvenList
	 void                      dele_StopWebzenWebzenInvenList (  );              		//  GUIWarfareControls.BTTPInventoryWeaponHK.dele_StopWebzenWebzenInvenList
	 void                      BTWindowDefineStateHK_sfReqWebzenInvenListS_OnTimeOut ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowDefineStateHK_sfReqWebzenInvenListS_OnTimeOut
	 void                      ChangeItemList ( int mainTab, int subTab, bool bForce );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ChangeItemList
	 void                      RefreshItemList (  );                             		//  GUIWarfareControls.BTTPInventoryWeaponHK.RefreshItemList
	 void                      MainTabSelect ( int tabi, int subtabi, bool bForce );		//  GUIWarfareControls.BTTPInventoryWeaponHK.MainTabSelect
	 bool                      FindAndRemoveItem ( struct FBtrDouble UniqueID ); 		//  GUIWarfareControls.BTTPInventoryWeaponHK.FindAndRemoveItem
	 void                      ChangeVisibleModel ( bool bAF );                  		//  GUIWarfareControls.BTTPInventoryWeaponHK.ChangeVisibleModel
	 bool                      MenuButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.MenuButton_OnClick
	 bool                      BTWindowDefineSelectHK_IsQuickSlotItem ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowDefineSelectHK_IsQuickSlotItem
	 bool                      BTWindowItemRenew_ButtonRechargeCash_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowItemRenew_ButtonRechargeCash_OnOK
	 void                      GetCashItemInfo ( class UwItemBoxHK* ib, class UwItemBoxCashHK* cii, class TArray< int >* temp );		//  GUIWarfareControls.BTTPInventoryWeaponHK.GetCashItemInfo
	 void                      BTWindowItemRenew_OnTimeOut ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowItemRenew_OnTimeOut
	 bool                      BTWindowItemRenew_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowItemRenew_OnOK
	 bool                      BTWindowModifyHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.BTWindowModifyHK_OnOK
	 bool                      ButtonWeapon_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonWeapon_OnDblClick
	 bool                      ButtonWeapon_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonWeapon_OnClick
	 void                      ButtonWeapon_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonWeapon_OnEndDrag
	 bool                      ButtonWeapon_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonWeapon_OnBeginDrag
	 void                      ItemList_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ItemList_OnEndDrag
	 bool                      ItemList_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ItemList_OnBeginDrag
	 bool                      ImageListBox_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ImageListBox_OnClick
	 void                      SelectItem ( class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo, bool bHoldcItemInfo );		//  GUIWarfareControls.BTTPInventoryWeaponHK.SelectItem
	 void                      UpdateServerTime ( struct FBtrDouble D );         		//  GUIWarfareControls.BTTPInventoryWeaponHK.UpdateServerTime
	 bool                      ImageListBox_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ImageListBox_OnDblClick
	 bool                      SubButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.SubButton_OnClick
	 bool                      MainButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.MainButton_OnClick
	 bool                      ButtonRSA_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonRSA_OnClick
	 bool                      ButtonAF_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonAF_OnClick
	 void                      ButtonRR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonRR_OnRelease
	 void                      ButtonRR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonRR_OnPressed
	 void                      ButtonLR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonLR_OnRelease
	 void                      ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPInventoryWeaponHK.ButtonLR_OnPressed
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTTPInventoryWeaponHK.Internal_OnRendered
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPInventoryWeaponHK.Internal_OnPreDraw
	 void                      deleShowCashChargeWindow (  );                    		//  GUIWarfareControls.BTTPInventoryWeaponHK.deleShowCashChargeWindow
}; // Size: 0x0448

// Class GUIWarfareControls.BTTPInventoryQuickSlotHK
class DLL_IMPORT UBTTPInventoryQuickSlotHK : public UGUITabPanel
{
public:
	float                                              DeActiveMouseX;                                   		// 0x0330 ( 0x0004 ) 
	float                                              DeActiveMouseY;                                   		// 0x0334 ( 0x0004 ) 
	class UButtonGroups*                               InvenGroup;                                       		// 0x0338 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UButtonGroups*                               QSButtonGroup;                                    		// 0x033C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UButtonGroups*                               QSNameGroup;                                      		// 0x0340 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0344 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strButtonChangeName;                              		// 0x0348 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strQuickSlot;                                     		// 0x0354 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strUnRegister;                                    		// 0x0360 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOK;                                            		// 0x036C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class TArray< struct FSaveQuickSlot >              SaveQS;                                           		// 0x0378 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelTagTop[ 0x05 ];                            		// 0x0384 ( 0x0050 ) 
	struct FFloatBox                                   fbLabelTagBottom[ 0x05 ];                         		// 0x03D4 ( 0x0050 ) 
	class UBTOwnerDrawImageHK*                         LabelTagTop[ 0x05 ];                              		// 0x0424 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelTagBottom[ 0x05 ];                           		// 0x0438 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTag[ 0x05 ];                              		// 0x044C ( 0x0050 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTag[ 0x05 ];                                		// 0x049C ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonChangeName[ 0x05 ];                       		// 0x04B0 ( 0x0050 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ButtonChangeName[ 0x05 ];                         		// 0x0500 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbEditChangeName[ 0x05 ];                         		// 0x0514 ( 0x0050 ) 
	class UBTEditBoxHK*                                EditChangeName[ 0x05 ];                           		// 0x0564 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonQuickSlot[ 0x09 ];                        		// 0x0578 ( 0x0090 ) 
	struct FString                                     strButtonQuickSlot[ 0x09 ];                       		// 0x0608 ( 0x006C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTItemBoxButtonHK*                          ButtonQuickSlot[ 0x09 ];                          		// 0x0674 ( 0x0024 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPChatHK*                                 TPTemp;                                           		// 0x0698 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabelWarning;                                  		// 0x069C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelWarning;                                   		// 0x06A8 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelWarning;                                     		// 0x06B8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FScriptDelegate                             __delegateUpdateQuickSlot__Delegate;              		// 0x06BC ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      FindAndRemoveSkillItem ( int UniqueID );          		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.FindAndRemoveSkillItem
	 bool                      FindAndRemoveItem ( struct FBtrDouble UniqueID ); 		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.FindAndRemoveItem
	 bool                      OnPreDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.OnPreDraw
	 void                      EditChangeName_OnDeActive (  );                   		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.EditChangeName_OnDeActive
	 bool                      ButtonChangeName_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.ButtonChangeName_OnClick
	 bool                      ButtonTag_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.ButtonTag_OnClick
	 void                      SetDefaultButtonImage (  );                       		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.SetDefaultButtonImage
	 bool                      IsEmptyQuickSlot ( int Index );                   		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.IsEmptyQuickSlot
	 bool                      EditChangeName_OnEnter ( class UGUIComponent* Sender, struct FString qname );		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.EditChangeName_OnEnter
	 void                      ShowSkillTransparent ( class UBTROItemBoxHK* Skill_1, class UBTROItemBoxHK* Skill_2, class UBTROItemBoxHK* Skill_3, class UBTROItemBoxHK* Skill_4 );		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.ShowSkillTransparent
	 void                      ShowWeaponTransparent ( class UBTROItemBoxHK* MainWeapon, class UBTROItemBoxHK* SubWeapon, class UBTROItemBoxHK* ThrowWeapon1, class UBTROItemBoxHK* ThrowWeapon2, class UBTROItemBoxHK* Knife );		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.ShowWeaponTransparent
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.InitComponent
	 void                      delegateUpdateQuickSlot ( int i );                		//  GUIWarfareControls.BTTPInventoryQuickSlotHK.delegateUpdateQuickSlot
}; // Size: 0x0394

// Class GUIWarfareControls.BTTPInventoryQuickSlotHKCN
class DLL_IMPORT UBTTPInventoryQuickSlotHKCN : public UBTTPInventoryQuickSlotHK
{
public:

	// UScript Functions
	 void                      ShowWeaponTransparent ( class UBTROItemBoxHK* MainWeapon, class UBTROItemBoxHK* SubWeapon, class UBTROItemBoxHK* ThrowWeapon1, class UBTROItemBoxHK* ThrowWeapon2, class UBTROItemBoxHK* Knife );		//  GUIWarfareControls.BTTPInventoryQuickSlotHKCN.ShowWeaponTransparent
	 void                      ShowSkillTransparent ( class UBTROItemBoxHK* Skill_1, class UBTROItemBoxHK* Skill_2, class UBTROItemBoxHK* Skill_3, class UBTROItemBoxHK* Skill_4 );		//  GUIWarfareControls.BTTPInventoryQuickSlotHKCN.ShowSkillTransparent
	 bool                      OnPreDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTTPInventoryQuickSlotHKCN.OnPreDraw
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPInventoryQuickSlotHKCN.InitComponent
}; // Size: 0x0000

// Class GUIWarfareControls.BTWindowItemSellHK
class DLL_IMPORT UBTWindowItemSellHK : public UBTWindowHK
{
public:
	int                                                MyPoint;                                          		// 0x04AC ( 0x0004 ) 
	int                                                SellingCost;                                      		// 0x04B0 ( 0x0004 ) 
	struct FBtrDouble                                  UniqueID;                                         		// 0x04B4 ( 0x0008 ) 
	struct FFloatBox                                   fbItemBox;                                        		// 0x04BC ( 0x0010 ) 
	class UBTItemBoxButtonHK*                          itemBox;                                          		// 0x04CC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbSeparator[ 0x02 ];                              		// 0x04D0 ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         Separator[ 0x02 ];                                		// 0x04F0 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x04 ];                                  		// 0x04F8 ( 0x0040 ) 
	struct FFloatBox                                   fbEdit[ 0x03 ];                                   		// 0x0538 ( 0x0030 ) 
	class UBTOwnerDrawImageHK*                         Label[ 0x04 ];                                    		// 0x0568 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         Edit[ 0x03 ];                                     		// 0x0578 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                SelectCount;                                      		// 0x0584 ( 0x0004 ) 
	struct FFloatBox                                   fbComboItemCount;                                 		// 0x0588 ( 0x0010 ) 
	class UBTComboBoxHK*                               ComboItemCount;                                   		// 0x0598 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabel[ 0x04 ];                                 		// 0x059C ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x05CC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCount;                                         		// 0x05D8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetData ( struct FBtrDouble UniqueItemID, int SellingCost, int MyPoint, class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo );		//  GUIWarfareControls.BTWindowItemSellHK.SetData
	 void                      UpdatePrice ( int Count );                        		//  GUIWarfareControls.BTWindowItemSellHK.UpdatePrice
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowItemSellHK.InitComponent
	 void                      ComboItemCount_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowItemSellHK.ComboItemCount_OnChange
}; // Size: 0x0138

// Class GUIWarfareControls.BTWindowItemRepairHK
class DLL_IMPORT UBTWindowItemRepairHK : public UBTWindowHK
{
public:
	struct FBtrDouble                                  UniqueID;                                         		// 0x04AC ( 0x0008 ) 
	struct FFloatBox                                   fbItemBox;                                        		// 0x04B4 ( 0x0010 ) 
	class UBTItemBoxButtonHK*                          itemBox;                                          		// 0x04C4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbSeparator[ 0x02 ];                              		// 0x04C8 ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         Separator[ 0x02 ];                                		// 0x04E8 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x05 ];                                  		// 0x04F0 ( 0x0050 ) 
	struct FFloatBox                                   fbEdit[ 0x03 ];                                   		// 0x0540 ( 0x0030 ) 
	class UBTOwnerDrawImageHK*                         Label[ 0x05 ];                                    		// 0x0570 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         Edit[ 0x03 ];                                     		// 0x0584 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabel[ 0x05 ];                                 		// 0x0590 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x05CC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetData ( struct FBtrDouble UniqueItemID, int RepairCost, int MyPoint, class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo );		//  GUIWarfareControls.BTWindowItemRepairHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowItemRepairHK.InitComponent
}; // Size: 0x012C

// Class GUIWarfareControls.BTWindowItemRepairAllHK
class DLL_IMPORT UBTWindowItemRepairAllHK : public UBTWindowHK
{
public:
	int                                                RepairCost[ 0x02 ];                               		// 0x04AC ( 0x0008 ) 
	int                                                MyPoint;                                          		// 0x04B4 ( 0x0004 ) 
	int                                                CurrentButtonID;                                  		// 0x04B8 ( 0x0004 ) 
	struct FFloatBox                                   fbButtonRepair[ 0x02 ];                           		// 0x04BC ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRepair[ 0x02 ];                             		// 0x04DC ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbSeparator[ 0x02 ];                              		// 0x04E4 ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Separator[ 0x02 ];                                		// 0x0504 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelDescription;                               		// 0x050C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTMultiLineEditBoxHK*                       LabelDescription;                                 		// 0x051C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelWarning[ 0x02 ];                           		// 0x0520 ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelWarning[ 0x02 ];                             		// 0x0540 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x03 ];                                  		// 0x0548 ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbEdit[ 0x03 ];                                   		// 0x0578 ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x03 ];                                    		// 0x05A8 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         Edit[ 0x03 ];                                     		// 0x05B4 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonRepair[ 0x02 ];                          		// 0x05C0 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strEquipItemDescription;                          		// 0x05D8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strEquipItemWarning[ 0x02 ];                      		// 0x05E4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strInvenItemDescription;                          		// 0x05FC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strInvenItemWarning[ 0x02 ];                      		// 0x0608 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x03 ];                                 		// 0x0620 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x0644 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      ChangeRepairCost ( int Index );                   		//  GUIWarfareControls.BTWindowItemRepairAllHK.ChangeRepairCost
	 void                      SetData ( int erCost, int irCost, int Point );    		//  GUIWarfareControls.BTWindowItemRepairAllHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowItemRepairAllHK.InitComponent
	 bool                      ButtonRepair_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowItemRepairAllHK.ButtonRepair_OnClick
	 void                      ChangeDescription ( int ButtonID );               		//  GUIWarfareControls.BTWindowItemRepairAllHK.ChangeDescription
}; // Size: 0x01A4

// Class GUIWarfareControls.BTTPInventoryWeaponHKCN
class DLL_IMPORT UBTTPInventoryWeaponHKCN : public UBTTPInventoryWeaponHK
{
public:
	unsigned char                                      MainTabBtnIdx;                                    		// 0x0780 ( 0x0001 ) 
	unsigned char                                      SubTabBtnIdx;                                     		// 0x0781 ( 0x0001 ) 
	class TArray< class UBTOwnerDrawCaptionButtonHK* > ItemSubMenuBtn;                                   		// 0x0784 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonLocal;                                      		// 0x0790 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTWeaponLIst*                               WList;                                            		// 0x0794 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      SendProtocall:1;                                  		// 0x0798 ( 0x0004 )  [0x00000001]
	struct FString                                     strSlot;                                          		// 0x079C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                nOldMouseX;                                       		// 0x07A8 ( 0x0004 ) 
	int                                                nOffsetMouseDis;                                  		// 0x07AC ( 0x0004 ) 
	class UBTOwnerDrawImageHK*                         LockImage;                                        		// 0x07B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FScriptDelegate                             __dele_StopWebzenWebzenInvenList__Delegate;       		// 0x07B4 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __dele_sfReqWebzenInvenList__Delegate;            		// 0x07BC ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ShowItemRenewWindow ( class UBTROItemBoxHK* ro, unsigned char cashType );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ShowItemRenewWindow
	 bool                      BTWindowSelectCoin ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.BTWindowSelectCoin
	 bool                      BTWindowDefineARHK_ItemUse_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.BTWindowDefineARHK_ItemUse_OnOK
	 bool                      BTWindowDefineARHK_ReceiveCashItem_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.BTWindowDefineARHK_ReceiveCashItem_OnOK
	 bool                      BTWindowCreateClanMarkHK_IsExist_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.BTWindowCreateClanMarkHK_IsExist_OnOK
	 bool                      BTWindowCreateClanMarkHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.BTWindowCreateClanMarkHK_OnOK
	 bool                      ChangeSubButton ( class TArray< struct FString > strTemp );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ChangeSubButton
	 void                      SetInfoBox ( int ItemIndex );                     		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.SetInfoBox
	 bool                      dele_sfReqWebzenInvenList ( struct FString Type );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.dele_sfReqWebzenInvenList
	 void                      dele_StopWebzenWebzenInvenList (  );              		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.dele_StopWebzenWebzenInvenList
	 void                      BTWindowDefineStateHK_sfReqWebzenInvenListS_OnTimeOut ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.BTWindowDefineStateHK_sfReqWebzenInvenListS_OnTimeOut
	 void                      RefreshItemList (  );                             		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.RefreshItemList
	 void                      ChangeVisibleModel ( bool bAF );                  		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ChangeVisibleModel
	 bool                      BTWindowDefineSelectHK_IsQuickSlotItem ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.BTWindowDefineSelectHK_IsQuickSlotItem
	 bool                      BTWindowModifyHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.BTWindowModifyHK_OnOK
	 bool                      ButtonWeapon_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ButtonWeapon_OnDblClick
	 bool                      ButtonWeapon_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ButtonWeapon_OnClick
	 void                      ButtonWeapon_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ButtonWeapon_OnEndDrag
	 bool                      ButtonWeapon_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ButtonWeapon_OnBeginDrag
	 void                      ItemList_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ItemList_OnEndDrag
	 bool                      ItemList_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ItemList_OnBeginDrag
	 bool                      MainButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.MainButton_OnClick
	 bool                      ButtonRSA_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ButtonRSA_OnClick
	 bool                      ButtonAF_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ButtonAF_OnClick
	 void                      ButtonRR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ButtonRR_OnRelease
	 void                      ButtonLR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ButtonLR_OnRelease
	 void                      ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ButtonLR_OnPressed
	 void                      UnequipItem ( int ButtonID );                     		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.UnequipItem
	 int                       GetButtonWeaponID ( struct FBtrDouble UniqueID ); 		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.GetButtonWeaponID
	 bool                      FindAndRemoveItem ( struct FBtrDouble UniqueID ); 		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.FindAndRemoveItem
	 void                      UpdateServerTime ( struct FBtrDouble D );         		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.UpdateServerTime
	 bool                      SubButton_OnHover ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.SubButton_OnHover
	 bool                      SubButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.SubButton_OnClick
	 void                      fill (  );                                        		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.fill
	 bool                      ImageListBox_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ImageListBox_OnDblClick
	 void                      EquipSkill (  );                                  		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.EquipSkill
	 bool                      ImageListBox_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ImageListBox_OnClick
	 void                      ChangeItemList ( int mainTab, int subTab, bool bForce );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ChangeItemList
	 void                      ItemList_EndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ItemList_EndDrag
	 bool                      ItemList_BeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.ItemList_BeginDrag
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.Internal_OnRendered
	 void                      CharRotByDrag (  );                               		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.CharRotByDrag
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.Internal_OnPreDraw
	 bool                      Sell_OnClick ( class UGUIComponent* Sender );     		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.Sell_OnClick
	 bool                      Modify_OnClick ( class UGUIComponent* Sender );   		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.Modify_OnClick
	 bool                      Repair_OnClick ( class UGUIComponent* Sender );   		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.Repair_OnClick
	 void                      AddEquipWeaponeSlot ( int nSlotNum, struct FBtrDouble UniqueID );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.AddEquipWeaponeSlot
	 void                      AddSubMenuBtns (  );                              		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.AddSubMenuBtns
	 void                      RemoveAllRepairButton (  );                       		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.RemoveAllRepairButton
	 void                      MainTabSelect ( int tabi, int subtabi, bool bForce );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.MainTabSelect
	 void                      Refresh (  );                                     		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.Refresh
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.InitComponent
	 void                      InitializeDragAndDrop (  );                       		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.InitializeDragAndDrop
	 void                      InitializeRightPanel (  );                        		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.InitializeRightPanel
	 void                      InitializeLeftPanel (  );                         		//  GUIWarfareControls.BTTPInventoryWeaponHKCN.InitializeLeftPanel
}; // Size: 0x0044

// Class GUIWarfareControls.BTTPInventorySkillHK
class DLL_IMPORT UBTTPInventorySkillHK : public UBTTabPanelHK
{
public:
	class UBTModelHK*                                  UIModel;                                          		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class ABTROModelNew*                               CharacterModel;                                   		// 0x033C ( 0x0004 ) 
	class UButtonGroups*                               InvenGroup;                                       		// 0x0340 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0344 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strButtonSkill[ 0x04 ];                           		// 0x0348 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTItemBoxButtonHK*                          ButtonSkill[ 0x04 ];                              		// 0x0378 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAF;                                         		// 0x0388 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRSA;                                        		// 0x038C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bLRMousePressed:1;                                		// 0x0390 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonLR;                                         		// 0x0394 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bRRMousePressed:1;                                		// 0x0398 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRR;                                         		// 0x039C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         EdgeLine;                                         		// 0x03A0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         AFTeamBG;                                         		// 0x03A4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         RSATeamBG;                                        		// 0x03A8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strAF;                                            		// 0x03AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRSA;                                           		// 0x03B8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned long                                      bVisibleAFModel:1;                                		// 0x03C4 ( 0x0004 )  [0x00000001]
	class UBTAutoScrollListHK*                         ChatBox;                                          		// 0x03C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 bool                      FindAndRemoveItem ( int ItemID );                 		//  GUIWarfareControls.BTTPInventorySkillHK.FindAndRemoveItem
	 bool                      OnPreDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTTPInventorySkillHK.OnPreDraw
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPInventorySkillHK.InitComponent
	 void                      ChangeVisibleModel ( bool bAF );                  		//  GUIWarfareControls.BTTPInventorySkillHK.ChangeVisibleModel
	 bool                      ButtonRSA_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventorySkillHK.ButtonRSA_OnClick
	 bool                      ButtonAF_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPInventorySkillHK.ButtonAF_OnClick
	 void                      ButtonRR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventorySkillHK.ButtonRR_OnRelease
	 void                      ButtonRR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPInventorySkillHK.ButtonRR_OnPressed
	 void                      ButtonLR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventorySkillHK.ButtonLR_OnRelease
	 void                      ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPInventorySkillHK.ButtonLR_OnPressed
}; // Size: 0x0094

// Class GUIWarfareControls.BTWindowRedeemCodes
class DLL_IMPORT UBTWindowRedeemCodes : public UBTWindowHK
{
public:
	struct FFloatBox                                   fbEditRedeemCodes[ 0x08 ];                        		// 0x04AC ( 0x0080 ) 
	struct FFloatBox                                   fbLabelInfo[ 0x02 ];                              		// 0x052C ( 0x0020 ) 
	class UBTEditBoxHK*                                EditRedeemCodes[ 0x08 ];                          		// 0x054C ( 0x0020 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelInfo[ 0x02 ];                                		// 0x056C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonPaste;                                      		// 0x0574 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonPaste;                                    		// 0x0578 ( 0x0010 ) 
	struct FString                                     strRedeemCodeTitle;                               		// 0x0588 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRedeemCodeInfo[ 0x02 ];                        		// 0x0594 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPaste;                                         		// 0x05AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FScriptDelegate                             __deleSendCodes__Delegate;                        		// 0x05B8 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ButtonPaste_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRedeemCodes.ButtonPaste_OnClick
	 void                      Internal_OnMaxTextStrNum ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowRedeemCodes.Internal_OnMaxTextStrNum
	 void                      SendCodes (  );                                   		//  GUIWarfareControls.BTWindowRedeemCodes.SendCodes
	 bool                      InternalOnOK ( class UGUIComponent* Sender );     		//  GUIWarfareControls.BTWindowRedeemCodes.InternalOnOK
	 bool                      deleOnChat ( class UGUIComponent* Sender, struct FString Text );		//  GUIWarfareControls.BTWindowRedeemCodes.deleOnChat
	 bool                      ShowWindowRedeemCodes ( class UGUIController* con );		//  GUIWarfareControls.BTWindowRedeemCodes.ShowWindowRedeemCodes
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowRedeemCodes.InitComponent
	 void                      deleSendCodes ( struct FString codes );           		//  GUIWarfareControls.BTWindowRedeemCodes.deleSendCodes
}; // Size: 0x0114

// Class GUIWarfareControls.BTItemInfoHorzBoxHK
class DLL_IMPORT UBTItemInfoHorzBoxHK : public UGUITabPanel
{
public:
	class UBTOwnerDrawImageHK*                         Panel;                                            		// 0x0330 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemBoxButtonHK*                          ItemBoxView;                                      		// 0x0334 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemStateBoxButtonHK*                     ItemStateView;                                    		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelItemDescription;                             		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       EditItemDescription;                              		// 0x0340 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      SetWindowItemBox (  );                            		//  GUIWarfareControls.BTItemInfoHorzBoxHK.SetWindowItemBox
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTItemInfoHorzBoxHK.InitComponent
	 void                      SetData ( class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo, class UwItemBoxHK* cItemInfo, class UwItemBoxInstanceHK* cInstanceInfo );		//  GUIWarfareControls.BTItemInfoHorzBoxHK.SetData
}; // Size: 0x0014

// Class GUIWarfareControls.BTTPInventoryHKCN
class DLL_IMPORT UBTTPInventoryHKCN : public UBTTPInventoryHK
{
public:
	struct FString                                     strRSA;                                           		// 0x0380 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAF;                                            		// 0x038C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      SaveButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPInventoryHKCN.SaveButton_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPInventoryHKCN.InitComponent
}; // Size: 0x0018

// Class GUIWarfareControls.BTTPCWMessengerHK
class DLL_IMPORT UBTTPCWMessengerHK : public UGUITabPanel
{
public:
	class UBTOwnerDrawCaptionButtonHK*                 ButtonMainPCBang;                                 		// 0x0330 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0334 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTStretchedImageHK*                         ListBoundImage[ 0x03 ];                           		// 0x0338 ( 0x000C ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UTabControlMocker*                           TabControl;                                       		// 0x0344 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class TArray< class UBTOwnerDrawCaptionButtonHK* > ButtonMsg;                                        		// 0x0348 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UBTAutoColumnListHK* >         ACLMsg;                                           		// 0x0354 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UBTContextMenuHK* >            CMMsg;                                            		// 0x0360 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strCombatState[ 0x03 ];                           		// 0x036C ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strConnected;                                     		// 0x0390 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strFriend;                                        		// 0x039C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strClan;                                          		// 0x03A8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDeny;                                          		// 0x03B4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPCBang;                                        		// 0x03C0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOffLine;                                       		// 0x03CC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLogout;                                        		// 0x03D8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strMainPCBang[ 0x04 ];                            		// 0x03E4 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strWinLose;                                       		// 0x0414 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupChannel__Delegate;                       		// 0x0420 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupFriend__Delegate;                        		// 0x0428 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupClan__Delegate;                          		// 0x0430 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupPCBang__Delegate;                        		// 0x0438 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupChannelCheck__Delegate;                  		// 0x0440 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupFriendCheck__Delegate;                   		// 0x0448 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupClanCheck__Delegate;                     		// 0x0450 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnPopupPCBangCheck__Delegate;                   		// 0x0458 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChannelUserList_OnHitBottom__Delegate;          		// 0x0460 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChannelUserList_OnHitTop__Delegate;             		// 0x0468 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __ChannelUserList_OnAdjustWindow__Delegate;       		// 0x0470 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 class UBTAutoColumnListHK* GetMessengerType ( unsigned char CommunityType ); 		//  GUIWarfareControls.BTTPCWMessengerHK.GetMessengerType
	 void                      Internal_OnVisiblePanelChanged ( int Index );     		//  GUIWarfareControls.BTTPCWMessengerHK.Internal_OnVisiblePanelChanged
	 void                      UpdatePCBangInfo (  );                            		//  GUIWarfareControls.BTTPCWMessengerHK.UpdatePCBangInfo
	 bool                      ButtonMainPCBang_Playing_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPCWMessengerHK.ButtonMainPCBang_Playing_OnClick
	 bool                      ButtonMainPCBang_Change_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPCWMessengerHK.ButtonMainPCBang_Change_OnClick
	 bool                      ButtonMainPCBang_Register_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPCWMessengerHK.ButtonMainPCBang_Register_OnClick
	 bool                      BTWindowDefineARHK_18_19_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPCWMessengerHK.BTWindowDefineARHK_18_19_OnOK
	 void                      HideTabButton ( int Index );                      		//  GUIWarfareControls.BTTPCWMessengerHK.HideTabButton
	 void                      ShowTabButton ( int Index );                      		//  GUIWarfareControls.BTTPCWMessengerHK.ShowTabButton
	 void                      ReplaceClanLevel ( unsigned char CommunityType, struct FString ClanName, int ClanLevel );		//  GUIWarfareControls.BTTPCWMessengerHK.ReplaceClanLevel
	 void                      UpdateTabButtonPosition (  );                     		//  GUIWarfareControls.BTTPCWMessengerHK.UpdateTabButtonPosition
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPCWMessengerHK.InitComponent
	 void                      BTACLCWMessengerChannelHK_OnHitTop ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPCWMessengerHK.BTACLCWMessengerChannelHK_OnHitTop
	 void                      BTACLCWMessengerChannelHK_OnHitBottom ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPCWMessengerHK.BTACLCWMessengerChannelHK_OnHitBottom
	 void                      BTACLCWMessengerChannelHK_OnAdjustWindow ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPCWMessengerHK.BTACLCWMessengerChannelHK_OnAdjustWindow
	 void                      ChannelUserList_OnAdjustWindow ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPCWMessengerHK.ChannelUserList_OnAdjustWindow
	 void                      ChannelUserList_OnHitTop ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPCWMessengerHK.ChannelUserList_OnHitTop
	 void                      ChannelUserList_OnHitBottom ( int Top, int Count, int itemperpage );		//  GUIWarfareControls.BTTPCWMessengerHK.ChannelUserList_OnHitBottom
	 void                      ContextMenu_OnSelected ( int ContextMenuIndex );  		//  GUIWarfareControls.BTTPCWMessengerHK.ContextMenu_OnSelected
	 void                      OnPopupPCBangCheck ( class UBTACLMessengerPCBangHK* acl, class UBTCMMessengerPCBangHK* cm );		//  GUIWarfareControls.BTTPCWMessengerHK.OnPopupPCBangCheck
	 void                      OnPopupClanCheck ( class UBTACLCWMessengerClanHK* acl, class UBTCMMessengerClanHK* cm );		//  GUIWarfareControls.BTTPCWMessengerHK.OnPopupClanCheck
	 void                      OnPopupFriendCheck ( class UBTACLCWMessengerFriendHK* acl, class UBTCMMessengerFriendHK* cm );		//  GUIWarfareControls.BTTPCWMessengerHK.OnPopupFriendCheck
	 void                      OnPopupChannelCheck ( class UBTACLCWMessengerChannelHK* acl, class UBTCMMessengerChannelHK* cm );		//  GUIWarfareControls.BTTPCWMessengerHK.OnPopupChannelCheck
	 void                      OnPopupCheck ( int Panel, class UBTAutoColumnListHK* acl );		//  GUIWarfareControls.BTTPCWMessengerHK.OnPopupCheck
	 void                      OnPopupPCBang ( int ContextMenuIndex, class UBTACLMessengerPCBangHK* acl );		//  GUIWarfareControls.BTTPCWMessengerHK.OnPopupPCBang
	 void                      OnPopupClan ( int ContextMenuIndex, class UBTACLCWMessengerClanHK* acl );		//  GUIWarfareControls.BTTPCWMessengerHK.OnPopupClan
	 void                      OnPopupFriend ( int ContextMenuIndex, class UBTACLCWMessengerFriendHK* acl );		//  GUIWarfareControls.BTTPCWMessengerHK.OnPopupFriend
	 void                      OnPopupChannel ( int ContextMenuIndex, class UBTACLCWMessengerChannelHK* acl );		//  GUIWarfareControls.BTTPCWMessengerHK.OnPopupChannel
	 bool                      ContextMenu_OnClose ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPCWMessengerHK.ContextMenu_OnClose
	 bool                      ContextMenu_OnOpen ( class UGUIContextMenu* Sender );		//  GUIWarfareControls.BTTPCWMessengerHK.ContextMenu_OnOpen
	 void                      LoadPos ( int Panel );                            		//  GUIWarfareControls.BTTPCWMessengerHK.LoadPos
	 void                      SavePos ( int Panel );                            		//  GUIWarfareControls.BTTPCWMessengerHK.SavePos
	 void                      RemoveAll ( int Panel );                          		//  GUIWarfareControls.BTTPCWMessengerHK.RemoveAll
	 void                      RemoveChannelUser ( int UID );                    		//  GUIWarfareControls.BTTPCWMessengerHK.RemoveChannelUser
	 int                       FindFriendFromUserName ( struct FString UserName );		//  GUIWarfareControls.BTTPCWMessengerHK.FindFriendFromUserName
	 void                      AddPCBangUser ( struct FString UserName, int ClanMark, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString ServerName, struct FString ServerIP, int serverPort, int CurPos, int ChannelNum, struct FString ChannelNickName, int RoomNum, int ClanGrade, int ClanWin, int ClanLose, unsigned char IsLookForClan, int IsCombat, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPCWMessengerHK.AddPCBangUser
	 void                      AddClanUser ( struct FString UserName, int Level, struct FString ServerName, struct FString ServerIP, int serverPort, int CurPos, int ChannelNum, struct FString ChannelNickName, int RoomNum, int ClanGrade, int IsCombat, int ClanWinCnt, int ClanLoseCnt, struct FString ClanSelfIntro, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPCWMessengerHK.AddClanUser
	 void                      AddFriendUser ( struct FString UserName, int ClanMark, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString ServerName, struct FString ServerIP, int serverPort, int CurPos, int ChannelNum, struct FString ChannelNickName, int RoomNum, int ClanGrade, int IsCombat, int ClanWinCnt, int ClanLoseCnt, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPCWMessengerHK.AddFriendUser
	 void                      ReplaceChannelUser ( int Index, int ClanPattern, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString UserName, int UID, int ClanGrade, int ClanWinCnt, int ClanLoseCnt, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPCWMessengerHK.ReplaceChannelUser
	 void                      AddChannelUser ( int ClanPattern, int ClanBG, int ClanBL, struct FString ClanName, int Level, struct FString UserName, int UID, int ClanGrade, int ClanWinCnt, int ClanLoseCnt, unsigned char IsLookForClan, int ClanLevel, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTTPCWMessengerHK.AddChannelUser
}; // Size: 0x0148

// Class GUIWarfareControls.BTACLCWMessengerClanHK
class DLL_IMPORT UBTACLCWMessengerClanHK : public UBTAutoColumnListHK
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0460 ( 0x0020 ) 
	class UBTRODecorateStringHK*                       btToolTip;                                        		// 0x0480 ( 0x0004 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLCWMessengerClanHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLCWMessengerClanHK.GetItemHeight
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLCWMessengerClanHK.GetLevelMarkID
	 struct FString            GetSelfIntro ( int row );                         		//  GUIWarfareControls.BTACLCWMessengerClanHK.GetSelfIntro
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLCWMessengerClanHK.GetUserName
	 struct FString            GetCurPos ( int row );                            		//  GUIWarfareControls.BTACLCWMessengerClanHK.GetCurPos
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLCWMessengerClanHK.GetLevel
	 struct FString            GetWinLose ( int row );                           		//  GUIWarfareControls.BTACLCWMessengerClanHK.GetWinLose
	 struct FString            GetCombatState ( int row );                       		//  GUIWarfareControls.BTACLCWMessengerClanHK.GetCombatState
	 void                      Internal_OnRendered ( class UCanvas* Canvas );    		//  GUIWarfareControls.BTACLCWMessengerClanHK.Internal_OnRendered
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLCWMessengerClanHK.LC0_Draw
	 void                      SortByConnectionStatus (  );                      		//  GUIWarfareControls.BTACLCWMessengerClanHK.SortByConnectionStatus
}; // Size: 0x0024

// Class GUIWarfareControls.BTACLCWMessengerFriendHK
class DLL_IMPORT UBTACLCWMessengerFriendHK : public UBTAutoColumnListHK
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0460 ( 0x0020 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLCWMessengerFriendHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetItemHeight
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetLevelMarkID
	 int                       GetClanNum ( int row );                           		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetClanNum
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetClanName
	 int                       GetChannelNum ( int row );                        		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetChannelNum
	 struct FString            GetServerName ( int row );                        		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetServerName
	 struct FString            GetDataPerColumn0_strValue ( int row );           		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetDataPerColumn0_strValue
	 int                       GetServerPort ( int row );                        		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetServerPort
	 int                       GetCurPos ( int row );                            		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetCurPos
	 struct FString            GetServerIP ( int row );                          		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetServerIP
	 int                       GetRoomNumber ( int row );                        		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetRoomNumber
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetUserName
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetLevel
	 struct FString            GetWinLose ( int row );                           		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetWinLose
	 struct FString            GetCombatState ( int row );                       		//  GUIWarfareControls.BTACLCWMessengerFriendHK.GetCombatState
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLCWMessengerFriendHK.LC0_Draw
}; // Size: 0x0020

// Class GUIWarfareControls.BTACLCWMessengerChannelHK
class DLL_IMPORT UBTACLCWMessengerChannelHK : public UBTAutoColumnListHK
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0460 ( 0x0020 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLCWMessengerChannelHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetItemHeight
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetLevelMarkID
	 struct FString            GetWinLose ( int row );                           		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetWinLose
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetUserName
	 int                       GetUserID ( int row );                            		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetUserID
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetLevel
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetClanName
	 int                       GetClanBL ( int row );                            		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetClanBL
	 int                       GetClanBG ( int row );                            		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetClanBG
	 int                       GetClanPattern ( int row );                       		//  GUIWarfareControls.BTACLCWMessengerChannelHK.GetClanPattern
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLCWMessengerChannelHK.LC0_Draw
}; // Size: 0x0020

// Class GUIWarfareControls.BTACLWaitingClanHK
class DLL_IMPORT UBTACLWaitingClanHK : public UBTAutoColumnListHK
{
public:

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLWaitingClanHK.InitComponent
	 void                      AddClan ( int Level, int Map, int supply );       		//  GUIWarfareControls.BTACLWaitingClanHK.AddClan
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLWaitingClanHK.GetItemHeight
}; // Size: 0x0000

// Class GUIWarfareControls.BTSlideShowImageHK
class DLL_IMPORT UBTSlideShowImageHK : public UBTOwnerDrawImageHK
{
public:
	float                                              AccumTime;                                        		// 0x03B4 ( 0x0004 ) 
	int                                                Phase;                                            		// 0x03B8 ( 0x0004 ) 
	float                                              SlideTime;                                        		// 0x03BC ( 0x0004 ) 
	float                                              BlendingTime;                                     		// 0x03C0 ( 0x0004 ) 
	unsigned long                                      bSlideShow:1;                                     		// 0x03C4 ( 0x0004 )  [0x00000001]
	int                                                SlideShowIndex;                                   		// 0x03C8 ( 0x0004 ) 
	int                                                NextShowIndex;                                    		// 0x03CC ( 0x0004 ) 
	class TArray< struct FImage >                      SlideImage;                                       		// 0x03D0 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTSlideShowImageHK.Internal_OnRendered
	 void                      ClearImage (  );                                  		//  GUIWarfareControls.BTSlideShowImageHK.ClearImage
	 void                      RemoveImage ( int Index );                        		//  GUIWarfareControls.BTSlideShowImageHK.RemoveImage
	 void                      ReplaceImage ( int Index, struct FImage img );    		//  GUIWarfareControls.BTSlideShowImageHK.ReplaceImage
	 void                      AddImage ( struct FImage img );                   		//  GUIWarfareControls.BTSlideShowImageHK.AddImage
	 void                      StopSlideShow (  );                               		//  GUIWarfareControls.BTSlideShowImageHK.StopSlideShow
	 void                      StartSlideShow (  );                              		//  GUIWarfareControls.BTSlideShowImageHK.StartSlideShow
}; // Size: 0x0028

// Class GUIWarfareControls.BTACLCWTeamMemberListHK
class DLL_IMPORT UBTACLCWTeamMemberListHK : public UBTAutoColumnListHK
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0460 ( 0x0020 ) 
	struct FString                                     strWinLose;                                       		// 0x0480 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLCWTeamMemberListHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLCWTeamMemberListHK.GetItemHeight
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLCWTeamMemberListHK.LC0_Draw
	 void                      ChangeLeader ( int UID );                         		//  GUIWarfareControls.BTACLCWTeamMemberListHK.ChangeLeader
	 struct FString            GetWinLose ( int row );                           		//  GUIWarfareControls.BTACLCWTeamMemberListHK.GetWinLose
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLCWTeamMemberListHK.GetUserName
	 int                       GetUserID ( int row );                            		//  GUIWarfareControls.BTACLCWTeamMemberListHK.GetUserID
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLCWTeamMemberListHK.GetClanName
	 bool                      RemoveTeamMember ( struct FString UserName );     		//  GUIWarfareControls.BTACLCWTeamMemberListHK.RemoveTeamMember
	 void                      AddTeamMember ( int UID, struct FString UserName, int Level, int ClanGrade, int ClanWinCnt, int ClanLoseCnt, int ClanPattern, int ClanBG, int ClanBL, int Leader, struct FString ClanName, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTACLCWTeamMemberListHK.AddTeamMember
}; // Size: 0x002C

// Class GUIWarfareControls.BTCMCWMessengerTeamHK
class DLL_IMPORT UBTCMCWMessengerTeamHK : public UBTContextMenuHK
{
public:
	struct FString                                     strContextMenuName[ 0x02 ];                       		// 0x03E4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTCMCWMessengerTeamHK.InitComponent
}; // Size: 0x0018

// Class GUIWarfareControls.BTWindowSelfIntroductionChangeHK
class DLL_IMPORT UBTWindowSelfIntroductionChangeHK : public UBTWindowHK
{
public:
	struct FString                                     strLabel[ 0x02 ];                                 		// 0x04AC ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel[ 0x02 ];                                  		// 0x04C4 ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x02 ];                                    		// 0x04E4 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       SelfIntroduction;                                 		// 0x04EC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowSelfIntroductionChangeHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowSelfIntroductionChangeHK.InitComponent
	 void                      SetData ( struct FString SelfIntro );             		//  GUIWarfareControls.BTWindowSelfIntroductionChangeHK.SetData
}; // Size: 0x0044

// Class GUIWarfareControls.BTACLClanMemberHK
class DLL_IMPORT UBTACLClanMemberHK : public UBTACLMessengerCommon
{
public:
	struct FImage                                      LevelImg;                                         		// 0x0468 ( 0x0020 ) 
	struct FString                                     strClanGrade[ 0x05 ];                             		// 0x0488 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOffLine;                                       		// 0x04C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOnLine;                                        		// 0x04D0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTRODecorateStringHK*                       btToolTip;                                        		// 0x04DC ( 0x0004 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLClanMemberHK.InitComponent
	 void                      Internal_OnRendered ( class UCanvas* Canvas );    		//  GUIWarfareControls.BTACLClanMemberHK.Internal_OnRendered
	 void                      LC1_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLClanMemberHK.LC1_Draw
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLClanMemberHK.LC0_Draw
	 void                      SetCurState ( int row, int Value );               		//  GUIWarfareControls.BTACLClanMemberHK.SetCurState
	 void                      SetChannelNumber ( int row, int Value );          		//  GUIWarfareControls.BTACLClanMemberHK.SetChannelNumber
	 void                      SetGameRoomNumber ( int row, int Value );         		//  GUIWarfareControls.BTACLClanMemberHK.SetGameRoomNumber
	 void                      SetServerName ( int row, struct FString Value );  		//  GUIWarfareControls.BTACLClanMemberHK.SetServerName
	 void                      SetServerIP ( int row, struct FString Value );    		//  GUIWarfareControls.BTACLClanMemberHK.SetServerIP
	 void                      SetServerPort ( int row, int Value );             		//  GUIWarfareControls.BTACLClanMemberHK.SetServerPort
	 void                      SetChannelName ( int row, struct FString Value ); 		//  GUIWarfareControls.BTACLClanMemberHK.SetChannelName
	 void                      SetCurLocationName ( int row, struct FString Value );		//  GUIWarfareControls.BTACLClanMemberHK.SetCurLocationName
	 void                      SetCurpos ( int row, int Value );                 		//  GUIWarfareControls.BTACLClanMemberHK.SetCurpos
	 int                       GetLogOnState ( int row );                        		//  GUIWarfareControls.BTACLClanMemberHK.GetLogOnState
	 int                       GetCurState ( int row );                          		//  GUIWarfareControls.BTACLClanMemberHK.GetCurState
	 int                       GetChannelNumber ( int row );                     		//  GUIWarfareControls.BTACLClanMemberHK.GetChannelNumber
	 int                       GetGameRoomNumber ( int row );                    		//  GUIWarfareControls.BTACLClanMemberHK.GetGameRoomNumber
	 int                       GetServerPort ( int row );                        		//  GUIWarfareControls.BTACLClanMemberHK.GetServerPort
	 struct FString            GetServerIP ( int row );                          		//  GUIWarfareControls.BTACLClanMemberHK.GetServerIP
	 int                       GetCurPos ( int row );                            		//  GUIWarfareControls.BTACLClanMemberHK.GetCurPos
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLClanMemberHK.GetLevelMarkID
	 struct FString            IntToClanGrade ( int cg );                        		//  GUIWarfareControls.BTACLClanMemberHK.IntToClanGrade
	 struct FString            GetSelfIntro ( int row );                         		//  GUIWarfareControls.BTACLClanMemberHK.GetSelfIntro
	 int                       GetUserGrade ( int row );                         		//  GUIWarfareControls.BTACLClanMemberHK.GetUserGrade
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLClanMemberHK.GetUserName
	 void                      ChangeLevelMarkID ( struct FString UserName, int LevelMarkID );		//  GUIWarfareControls.BTACLClanMemberHK.ChangeLevelMarkID
	 void                      AddClanMember ( unsigned char IsLogOn, int Level, struct FString CharName, unsigned char ClanGrade, int LevelMarkID, int TitleMarkID );		//  GUIWarfareControls.BTACLClanMemberHK.AddClanMember
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLClanMemberHK.GetItemHeight
}; // Size: 0x0078

// Class GUIWarfareControls.BTCMClanUserListHK
class DLL_IMPORT UBTCMClanUserListHK : public UBTCMMessengerOnOffline
{
public:
	struct FString                                     strContextMenuName[ 0x09 ];                       		// 0x0428 ( 0x006C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTCMClanUserListHK.InitComponent
}; // Size: 0x006C

// Class GUIWarfareControls.BTACLClanNewsHK
class DLL_IMPORT UBTACLClanNewsHK : public UBTAutoColumnListHK
{
public:
	struct FString                                     strIssueType[ 0x0C ];                             		// 0x0460 ( 0x0090 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLClanNewsHK.InitComponent
	 void                      LC0_NewsDate ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLClanNewsHK.LC0_NewsDate
	 void                      AddNews ( struct FString IssueDate, unsigned char IssueType, struct FString IssuedClanMember );		//  GUIWarfareControls.BTACLClanNewsHK.AddNews
	 struct FString            IssueTypeToString ( unsigned char IssueType );    		//  GUIWarfareControls.BTACLClanNewsHK.IssueTypeToString
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLClanNewsHK.GetItemHeight
}; // Size: 0x0090

// Class GUIWarfareControls.BTACLClanWarResultHK
class DLL_IMPORT UBTACLClanWarResultHK : public UBTAutoColumnListHK
{
public:
	struct FString                                     strWinLose[ 0x02 ];                               		// 0x0460 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strVS;                                            		// 0x0478 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLClanWarResultHK.InitComponent
	 void                      LC0_Date ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLClanWarResultHK.LC0_Date
	 void                      addResult ( struct FBtrDouble Date, unsigned char IsWin, struct FString EnemyClanname );		//  GUIWarfareControls.BTACLClanWarResultHK.addResult
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLClanWarResultHK.GetItemHeight
}; // Size: 0x0024

// Class GUIWarfareControls.BTWindowClanInfoChangeHK
class DLL_IMPORT UBTWindowClanInfoChangeHK : public UBTWindowHK
{
public:
	struct FString                                     strLabel[ 0x05 ];                                 		// 0x04AC ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabel[ 0x05 ];                                  		// 0x04E8 ( 0x0050 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Label[ 0x05 ];                                    		// 0x0538 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbEdit[ 0x05 ];                                   		// 0x054C ( 0x0050 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         Edit[ 0x05 ];                                     		// 0x059C ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ClanRecruit;                                      		// 0x05B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ClanLocation;                                     		// 0x05B4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                ClanKeyword;                                      		// 0x05B8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       ClanIntroduction;                                 		// 0x05BC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       ClanNotice;                                       		// 0x05C0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTLabelLocationHK*                          sampleLocation;                                   		// 0x05C4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTLabelRecruitHK*                           sampleRecruit;                                    		// 0x05C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowClanInfoChangeHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowClanInfoChangeHK.InitComponent
	 void                      SetData ( int loc, int Rec, struct FString Keyword, struct FString Introduction, struct FString Notice, int MyClanGrade );		//  GUIWarfareControls.BTWindowClanInfoChangeHK.SetData
}; // Size: 0x0120

// Class GUIWarfareControls.BTItemListMenuBtn
class DLL_IMPORT UBTItemListMenuBtn : public URenderObject
{
public:
	int                                                ClickBtnIndex;                                    		// 0x0040 ( 0x0004 ) 
	int                                                enableType;                                       		// 0x0044 ( 0x0004 ) 
	unsigned long                                      disableBtn:1;                                     		// 0x0048 ( 0x0004 )  [0x00000001]
	int                                                ButtonColor[ 0x0A ];                              		// 0x004C ( 0x0028 ) 
	struct FString                                     MenuName[ 0x0A ];                                 		// 0x0074 ( 0x0078 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UGUIController*                              PController;                                      		// 0x00EC ( 0x0004 ) 
	class TArray< struct FText >                       MenuText;                                         		// 0x00F0 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FBtrDouble                                  dbUniqID;                                         		// 0x00FC ( 0x0008 ) 
	int                                                nSkillID;                                         		// 0x0104 ( 0x0004 ) 
	int                                                ItemID;                                           		// 0x0108 ( 0x0004 ) 
	class UBTROItemBoxHK*                              ro;                                               		// 0x010C ( 0x0004 ) 

	// UScript Functions
	 void                      RenderButton ( class UCanvas* C, float Delta );   		//  GUIWarfareControls.BTItemListMenuBtn.RenderButton
	 void                      SetButtonType ( int enableT, bool bDisable );     		//  GUIWarfareControls.BTItemListMenuBtn.SetButtonType
	 void                      Init (  );                                        		//  GUIWarfareControls.BTItemListMenuBtn.Init
}; // Size: 0x00D0

// Class GUIWarfareControls.BTNumericEditBoxHK
class DLL_IMPORT UBTNumericEditBoxHK : public UBTOwnerDrawCaptionButtonHK
{
public:
	int                                                MinValue;                                         		// 0x04C4 ( 0x0004 ) 
	int                                                MaxValue;                                         		// 0x04C8 ( 0x0004 ) 
	unsigned long                                      bReadOnly:1;                                      		// 0x04CC ( 0x0004 )  [0x00000001]
	struct FString                                     FormatStr;                                        		// 0x04D0 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     OriginalStr;                                      		// 0x04DC ( 0x000C ) [ CPF_NeedCtorLink ]
	class FColor                                       CursorColor;                                      		// 0x04E8 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FImage                                      cursorImg;                                        		// 0x04EC ( 0x0020 ) 

	// UScript Functions
	 bool                      Internal_OnKeyEvent ( float Delta, unsigned char* key, unsigned char* State );		//  GUIWarfareControls.BTNumericEditBoxHK.Internal_OnKeyEvent
	 void                      SetDataExtra ( int Number, struct FString Extra );		//  GUIWarfareControls.BTNumericEditBoxHK.SetDataExtra
	 void                      SetData ( int Number );                           		//  GUIWarfareControls.BTNumericEditBoxHK.SetData
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTNumericEditBoxHK.Internal_OnRendered
	 void                      Clear (  );                                       		//  GUIWarfareControls.BTNumericEditBoxHK.Clear
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTNumericEditBoxHK.InitComponent
}; // Size: 0x0048

// Class GUIWarfareControls.BTTPAuctionHK
class DLL_IMPORT UBTTPAuctionHK : public UGUITabPanel
{
public:
	struct FString                                     strBuying;                                        		// 0x0330 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strMyAuction;                                     		// 0x033C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSelling;                                       		// 0x0348 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class ABTROModelNew*                               CharacterModel;                                   		// 0x0354 ( 0x0004 ) 
	class UTabControlMocker*                           TabControl;                                       		// 0x0358 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAuction[ 0x03 ];                            		// 0x035C ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UGUITabPanel*                                TPAuction[ 0x03 ];                                		// 0x0368 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPAuctionBuyingHK*                        TPBuying;                                         		// 0x0374 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPAuctionMyAuctionHK*                     TPMyAuction;                                      		// 0x0378 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPAuctionSellingHK*                       TPSelling;                                        		// 0x037C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPAuctionHK.InitComponent
}; // Size: 0x0050

// Class GUIWarfareControls.BTTPAuctionSellingHK
class DLL_IMPORT UBTTPAuctionSellingHK : public UGUITabPanel
{
public:
	class UBTTcpLink_Channel*                          TcpChannel;                                       		// 0x0330 ( 0x0004 ) 
	class UDragObject*                                 DragBox;                                          		// 0x0334 ( 0x0004 ) 
	struct FString                                     strAuctionCancel;                                 		// 0x0338 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0344 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UTabControlMocker*                           TabControlAuction;                                		// 0x0348 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAuction[ 0x04 ];                            		// 0x034C ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strListTopButton[ 0x08 ];                         		// 0x035C ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbListTopButton[ 0x08 ];                          		// 0x03BC ( 0x0080 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ListTopButton[ 0x08 ];                            		// 0x043C ( 0x0020 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         ListTopImage[ 0x08 ];                             		// 0x045C ( 0x0020 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLList;                                        		// 0x047C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbACLListScrollBar;                               		// 0x048C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTACLAuctionHK*                             ACLList;                                          		// 0x049C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonAuctionCancel;                           		// 0x04A0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonAuctionCancel;                            		// 0x04AC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAuctionCancel;                              		// 0x04BC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbPageButton;                                     		// 0x04C0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTPageListButtonHK*                         PageButton;                                       		// 0x04D0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemCommonInfoHK*                         MyData;                                           		// 0x04D4 ( 0x0004 ) 
	struct FString                                     strMainMenu[ 0x04 ];                              		// 0x04D8 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuAll[ 0x03 ];                            		// 0x0508 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuWeapon[ 0x04 ];                         		// 0x052C ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuEquip[ 0x05 ];                          		// 0x055C ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuSpecial[ 0x04 ];                        		// 0x0598 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuAll;                                   		// 0x05C8 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuWeapon;                                		// 0x05D4 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuEquip;                                 		// 0x05E0 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuSpecial;                               		// 0x05EC ( 0x000C ) [ CPF_NeedCtorLink ]
	class UTabControlMocker*                           TabControl[ 0x02 ];                               		// 0x05F8 ( 0x0008 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MainButton[ 0x04 ];                               		// 0x0600 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 SubButton[ 0x05 ];                                		// 0x0610 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelItemList;                                  		// 0x0624 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelItemList;                                    		// 0x0634 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTPItemList;                                     		// 0x0638 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTTPItemListHK*                             TPItemList;                                       		// 0x0648 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strMenuButton[ 0x03 ];                            		// 0x064C ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbMenuButton[ 0x03 ];                             		// 0x0670 ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MenuButton[ 0x03 ];                               		// 0x06A0 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemInfoHorzBoxHK*                        InfoBox;                                          		// 0x06AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                CurrentRepairMode;                                		// 0x06B0 ( 0x0004 ) 
	int                                                EquipItemCount;                                   		// 0x06B4 ( 0x0004 ) 
	class TArray< struct FBtrDouble >                  EquipItemList;                                    		// 0x06B8 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FBtrDouble >                  InvenItemList;                                    		// 0x06C4 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     Equip_DamegeItemNames;                            		// 0x06D0 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     Inven_DamegeItemNames;                            		// 0x06DC ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __sfReqAuctioItemListInSelling__Delegate;         		// 0x06E8 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __SortAuctionItemList__Delegate;                  		// 0x06F0 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnShow (  );                             		//  GUIWarfareControls.BTTPAuctionSellingHK.Internal_OnShow
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPAuctionSellingHK.InitComponent
	 void                      InitializeDragAndDrop (  );                       		//  GUIWarfareControls.BTTPAuctionSellingHK.InitializeDragAndDrop
	 void                      InitializeRightPanel (  );                        		//  GUIWarfareControls.BTTPAuctionSellingHK.InitializeRightPanel
	 void                      InitializeLeftPanel (  );                         		//  GUIWarfareControls.BTTPAuctionSellingHK.InitializeLeftPanel
	 void                      Refresh (  );                                     		//  GUIWarfareControls.BTTPAuctionSellingHK.Refresh
	 void                      fill (  );                                        		//  GUIWarfareControls.BTTPAuctionSellingHK.fill
	 void                      UnequipItem ( int ButtonID );                     		//  GUIWarfareControls.BTTPAuctionSellingHK.UnequipItem
	 void                      EquipItem (  );                                   		//  GUIWarfareControls.BTTPAuctionSellingHK.EquipItem
	 bool                      ChangeSubButton ( class TArray< struct FString > strTemp );		//  GUIWarfareControls.BTTPAuctionSellingHK.ChangeSubButton
	 void                      SetInfoBox (  );                                  		//  GUIWarfareControls.BTTPAuctionSellingHK.SetInfoBox
	 void                      ChangeItemList ( int mainTab, int subTab );       		//  GUIWarfareControls.BTTPAuctionSellingHK.ChangeItemList
	 void                      MainTabSelect ( int tabi, int subtabi, bool bStopLoop );		//  GUIWarfareControls.BTTPAuctionSellingHK.MainTabSelect
	 bool                      MenuButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.MenuButton_OnClick
	 bool                      BTWindowAuctionSelling_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.BTWindowAuctionSelling_OnOK
	 bool                      BTWindowAuctionCancel_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.BTWindowAuctionCancel_OnOK
	 bool                      ButtonAuctionCancel_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.ButtonAuctionCancel_OnClick
	 bool                      ACLList_OnClick ( class UGUIComponent* Sender );  		//  GUIWarfareControls.BTTPAuctionSellingHK.ACLList_OnClick
	 void                      ItemList_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPAuctionSellingHK.ItemList_OnEndDrag
	 bool                      ItemList_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.ItemList_OnBeginDrag
	 bool                      ListTopButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.ListTopButton_OnClick
	 void                      SortAuctionItemList ( int SortType );             		//  GUIWarfareControls.BTTPAuctionSellingHK.SortAuctionItemList
	 bool                      ImageListBox_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.ImageListBox_OnClick
	 bool                      ImageListBox_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.ImageListBox_OnDblClick
	 bool                      SubButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.SubButton_OnClick
	 bool                      MainButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.MainButton_OnClick
	 bool                      LeftPanel_MainButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionSellingHK.LeftPanel_MainButton_OnClick
	 bool                      sfReqAuctioItemListInSelling ( int Section, struct FString Keyword, int ItemRank, unsigned char ItemClassify, unsigned char IsAvailable, int PageNum, int Count, int SortType );		//  GUIWarfareControls.BTTPAuctionSellingHK.sfReqAuctioItemListInSelling
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTTPAuctionSellingHK.Internal_OnRendered
}; // Size: 0x03C8

// Class GUIWarfareControls.BTTPAuctionBuyingHK
class DLL_IMPORT UBTTPAuctionBuyingHK : public UBTTabPanelHK
{
public:
	class UBTTcpLink_Channel*                          TcpChannel;                                       		// 0x0338 ( 0x0004 ) 
	class UDragObject*                                 DragBox;                                          		// 0x033C ( 0x0004 ) 
	struct FReqAuctionList                             LockAuctionList;                                  		// 0x0340 ( 0x000C ) 
	class UButtonGroups*                               InvenGroup;                                       		// 0x034C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0350 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonWeapon[ 0x0A ];                           		// 0x0354 ( 0x00A0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strButtonWeapon[ 0x0A ];                          		// 0x03F4 ( 0x0078 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTItemBoxButtonHK*                          ButtonWeapon[ 0x0A ];                             		// 0x046C ( 0x0028 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAF;                                         		// 0x0494 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRSA;                                        		// 0x0498 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bLRMousePressed:1;                                		// 0x049C ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonLR;                                         		// 0x04A0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bRRMousePressed:1;                                		// 0x04A4 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRR;                                         		// 0x04A8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         EdgeLine;                                         		// 0x04AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         AFTeamBG;                                         		// 0x04B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         RSATeamBG;                                        		// 0x04B4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bVisibleAFModel:1;                                		// 0x04B8 ( 0x0004 )  [0x00000001]
	struct FString                                     strAF;                                            		// 0x04BC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRSA;                                           		// 0x04C8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTModelHK*                                  UIModel;                                          		// 0x04D4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class ABTROModelNew*                               CharacterModel;                                   		// 0x04D8 ( 0x0004 ) 
	class UBTAutoScrollListHK*                         ChatBox;                                          		// 0x04DC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemCommonInfoHK*                         MyData;                                           		// 0x04E0 ( 0x0004 ) 
	struct FString                                     LastBiddingItemName;                              		// 0x04E4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strMainMenu[ 0x05 ];                              		// 0x04F0 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenu[ 0x05 ];                               		// 0x052C ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UTabControlMocker*                           TabControl[ 0x02 ];                               		// 0x0568 ( 0x0008 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MainButton[ 0x05 ];                               		// 0x0570 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 SubButton[ 0x05 ];                                		// 0x0584 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strListTopButton[ 0x08 ];                         		// 0x0598 ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbListTopButton[ 0x08 ];                          		// 0x05F8 ( 0x0080 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ListTopButton[ 0x08 ];                            		// 0x0678 ( 0x0020 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         ListTopImage[ 0x08 ];                             		// 0x0698 ( 0x0020 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelItemList;                                  		// 0x06B8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelItemList;                                    		// 0x06C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLList;                                        		// 0x06CC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbACLListScrollBar;                               		// 0x06DC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTACLAuctionHK*                             ACLList;                                          		// 0x06EC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strMenuButton[ 0x04 ];                            		// 0x06F0 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbMenuButton[ 0x04 ];                             		// 0x0720 ( 0x0040 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MenuButton[ 0x04 ];                               		// 0x0760 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbPageButton;                                     		// 0x0770 ( 0x0010 ) 
	class UBTPageListButtonHK*                         PageButton;                                       		// 0x0780 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemInfoHorzBoxHK*                        InfoBox;                                          		// 0x0784 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                RankIdx[ 0x06 ];                                  		// 0x0788 ( 0x0018 ) 
	int                                                SortIdx[ 0x05 ];                                  		// 0x07A0 ( 0x0014 ) 
	struct FScriptDelegate                             __SortAuctionItemList__Delegate;                  		// 0x07B4 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __sfReqAuctioItemListInBuying__Delegate;          		// 0x07BC ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPAuctionBuyingHK.InitComponent
	 void                      InitializeDragAndDrop (  );                       		//  GUIWarfareControls.BTTPAuctionBuyingHK.InitializeDragAndDrop
	 void                      InitializeRightPanel (  );                        		//  GUIWarfareControls.BTTPAuctionBuyingHK.InitializeRightPanel
	 void                      SelectItem ( class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo, bool bHoldcItemInfo );		//  GUIWarfareControls.BTTPAuctionBuyingHK.SelectItem
	 bool                      ACLList_OnClick ( class UGUIComponent* Sender );  		//  GUIWarfareControls.BTTPAuctionBuyingHK.ACLList_OnClick
	 bool                      ACLList_DefaultSelect (  );                       		//  GUIWarfareControls.BTTPAuctionBuyingHK.ACLList_DefaultSelect
	 void                      InitializeLeftPanel (  );                         		//  GUIWarfareControls.BTTPAuctionBuyingHK.InitializeLeftPanel
	 void                      Refresh (  );                                     		//  GUIWarfareControls.BTTPAuctionBuyingHK.Refresh
	 void                      fill (  );                                        		//  GUIWarfareControls.BTTPAuctionBuyingHK.fill
	 void                      UnequipItem ( int ButtonID );                     		//  GUIWarfareControls.BTTPAuctionBuyingHK.UnequipItem
	 void                      EquipItem (  );                                   		//  GUIWarfareControls.BTTPAuctionBuyingHK.EquipItem
	 void                      ChangeItemList ( int mainTab, int subTab );       		//  GUIWarfareControls.BTTPAuctionBuyingHK.ChangeItemList
	 bool                      sfReqAuctioItemListInBuying ( int Section, struct FString Keyword, int ItemRank, unsigned char ItemClassify, unsigned char IsAvailable, int PageNum, int Count, int SortType );		//  GUIWarfareControls.BTTPAuctionBuyingHK.sfReqAuctioItemListInBuying
	 int                       GetSortIdx (  );                                  		//  GUIWarfareControls.BTTPAuctionBuyingHK.GetSortIdx
	 int                       GetRankIdx (  );                                  		//  GUIWarfareControls.BTTPAuctionBuyingHK.GetRankIdx
	 void                      MainTabSelect ( int tabi, int subtabi, bool bStopLoop );		//  GUIWarfareControls.BTTPAuctionBuyingHK.MainTabSelect
	 bool                      FindAndRemoveItem ( int UniqueID );               		//  GUIWarfareControls.BTTPAuctionBuyingHK.FindAndRemoveItem
	 void                      ChangeVisibleModel ( bool bAF );                  		//  GUIWarfareControls.BTTPAuctionBuyingHK.ChangeVisibleModel
	 bool                      MenuButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.MenuButton_OnClick
	 bool                      BTWindowInstantlyBuyHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.BTWindowInstantlyBuyHK_OnOK
	 bool                      BTWindowTenderHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.BTWindowTenderHK_OnOK
	 bool                      ButtonWeapon_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonWeapon_OnDblClick
	 bool                      ButtonWeapon_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonWeapon_OnClick
	 void                      ButtonWeapon_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonWeapon_OnEndDrag
	 bool                      ButtonWeapon_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonWeapon_OnBeginDrag
	 bool                      SubButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.SubButton_OnClick
	 bool                      MainButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.MainButton_OnClick
	 bool                      ListTopButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ListTopButton_OnClick
	 void                      SortAuctionItemList ( int SortType );             		//  GUIWarfareControls.BTTPAuctionBuyingHK.SortAuctionItemList
	 bool                      ButtonRSA_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonRSA_OnClick
	 bool                      ButtonAF_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonAF_OnClick
	 void                      ButtonRR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonRR_OnRelease
	 void                      ButtonRR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonRR_OnPressed
	 void                      ButtonLR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonLR_OnRelease
	 void                      ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPAuctionBuyingHK.ButtonLR_OnPressed
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTTPAuctionBuyingHK.Internal_OnRendered
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPAuctionBuyingHK.Internal_OnPreDraw
}; // Size: 0x048C

// Class GUIWarfareControls.BTWindowTradeHistoryHK
class DLL_IMPORT UBTWindowTradeHistoryHK : public UBTWindowHK
{
public:
	int                                                ItemID;                                           		// 0x04AC ( 0x0004 ) 
	struct FFloatBox                                   fbItemBox;                                        		// 0x04B0 ( 0x0010 ) 
	class UBTItemBoxButtonHK*                          itemBox;                                          		// 0x04C0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelTradeBG;                                     		// 0x04C4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelTradeDivider[ 0x02 ];                        		// 0x04C8 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTrade[ 0x03 ];                            		// 0x04D0 ( 0x0030 ) 
	struct FString                                     strButtonTrade[ 0x03 ];                           		// 0x0500 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTrade[ 0x03 ];                              		// 0x0524 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLTradeHistory;                                		// 0x0530 ( 0x0010 ) 
	class UBTACLTradeHistoryHK*                        ACLTradeHistory;                                  		// 0x0540 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      SetData ( int ItemID, int PartID, class TArray< struct FString > SellerCharNm, class TArray< int > DamageDegree, class TArray< int > Price );		//  GUIWarfareControls.BTWindowTradeHistoryHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowTradeHistoryHK.InitComponent
}; // Size: 0x0098

// Class GUIWarfareControls.BTWindowAuctionSellingHK
class DLL_IMPORT UBTWindowAuctionSellingHK : public UBTWindowHK
{
public:
	int                                                SelectItemCount;                                  		// 0x04AC ( 0x0004 ) 
	int                                                MaxItemCount;                                     		// 0x04B0 ( 0x0004 ) 
	struct FString                                     strHour;                                          		// 0x04B4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	float                                              MarginArray[ 0x05 ];                              		// 0x04C0 ( 0x0014 ) 
	struct FBtrDouble                                  UniqueID;                                         		// 0x04D4 ( 0x0008 ) 
	int                                                PeriodHour;                                       		// 0x04DC ( 0x0004 ) 
	struct FFloatBox                                   fbItemInfoBox;                                    		// 0x04E0 ( 0x0010 ) 
	class UBTItemInfoVertBoxHK*                        ItemInfoBox;                                      		// 0x04F0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbSeparator[ 0x02 ];                              		// 0x04F4 ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         Separator[ 0x02 ];                                		// 0x0514 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x05 ];                                  		// 0x051C ( 0x0050 ) 
	struct FFloatBox                                   fbEdit[ 0x04 ];                                   		// 0x056C ( 0x0040 ) 
	class UBTOwnerDrawImageHK*                         Label[ 0x05 ];                                    		// 0x05AC ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         Edit[ 0x03 ];                                     		// 0x05C0 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbNEditBox[ 0x03 ];                               		// 0x05CC ( 0x0030 ) 
	class UBTNumericEditBoxHK*                         NEditBox[ 0x03 ];                                 		// 0x05FC ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbCombo;                                          		// 0x0608 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               Combo;                                            		// 0x0618 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelWarning[ 0x02 ];                           		// 0x061C ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelWarning[ 0x02 ];                             		// 0x063C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabel[ 0x05 ];                                 		// 0x0644 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelWarning[ 0x05 ];                          		// 0x0680 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelWarning0_0;                               		// 0x06BC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelWarning0_1;                               		// 0x06C8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCount;                                         		// 0x06D4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowAuctionSellingHK.Internal_OnOpen
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTWindowAuctionSellingHK.Internal_OnRendered
	 void                      SetData ( int MyPoint, class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo );		//  GUIWarfareControls.BTWindowAuctionSellingHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowAuctionSellingHK.InitComponent
	 void                      Combo_OnChange ( class UGUIComponent* Sender );   		//  GUIWarfareControls.BTWindowAuctionSellingHK.Combo_OnChange
}; // Size: 0x0234

// Class GUIWarfareControls.BTTPAuctionMyAuctionHK
class DLL_IMPORT UBTTPAuctionMyAuctionHK : public UBTTabPanelHK
{
public:
	class UBTTcpLink_Channel*                          TcpChannel;                                       		// 0x0338 ( 0x0004 ) 
	class UDragObject*                                 DragBox;                                          		// 0x033C ( 0x0004 ) 
	struct FReqAuctionList                             LockAuctionList;                                  		// 0x0340 ( 0x000C ) 
	class UButtonGroups*                               InvenGroup;                                       		// 0x034C ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0350 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonWeapon[ 0x0A ];                           		// 0x0354 ( 0x00A0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strButtonWeapon[ 0x0A ];                          		// 0x03F4 ( 0x0078 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTItemBoxButtonHK*                          ButtonWeapon[ 0x0A ];                             		// 0x046C ( 0x0028 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAF;                                         		// 0x0494 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRSA;                                        		// 0x0498 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bLRMousePressed:1;                                		// 0x049C ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonLR;                                         		// 0x04A0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bRRMousePressed:1;                                		// 0x04A4 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRR;                                         		// 0x04A8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         EdgeLine;                                         		// 0x04AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         AFTeamBG;                                         		// 0x04B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         RSATeamBG;                                        		// 0x04B4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bVisibleAFModel:1;                                		// 0x04B8 ( 0x0004 )  [0x00000001]
	struct FString                                     strAF;                                            		// 0x04BC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRSA;                                           		// 0x04C8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTModelHK*                                  UIModel;                                          		// 0x04D4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class ABTROModelNew*                               CharacterModel;                                   		// 0x04D8 ( 0x0004 ) 
	class UBTAutoScrollListHK*                         ChatBox;                                          		// 0x04DC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemCommonInfoHK*                         MyData;                                           		// 0x04E0 ( 0x0004 ) 
	struct FString                                     LastBiddingItemName;                              		// 0x04E4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strMainMenu[ 0x04 ];                              		// 0x04F0 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuAll[ 0x03 ];                            		// 0x0520 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuWeapon[ 0x04 ];                         		// 0x0544 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuEquip[ 0x05 ];                          		// 0x0574 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuSpecial[ 0x03 ];                        		// 0x05B0 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuAll;                                   		// 0x05D4 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuWeapon;                                		// 0x05E0 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuEquip;                                 		// 0x05EC ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuSpecial;                               		// 0x05F8 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UTabControlMocker*                           TabControl[ 0x02 ];                               		// 0x0604 ( 0x0008 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MainButton[ 0x04 ];                               		// 0x060C ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 SubButton[ 0x05 ];                                		// 0x061C ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strListTopButton[ 0x08 ];                         		// 0x0630 ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbListTopButton[ 0x08 ];                          		// 0x0690 ( 0x0080 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ListTopButton[ 0x08 ];                            		// 0x0710 ( 0x0020 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         ListTopImage[ 0x08 ];                             		// 0x0730 ( 0x0020 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelItemList;                                  		// 0x0750 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelItemList;                                    		// 0x0760 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLList;                                        		// 0x0764 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbACLListScrollBar;                               		// 0x0774 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTACLAuctionHK*                             ACLList;                                          		// 0x0784 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strMenuButton[ 0x04 ];                            		// 0x0788 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbMenuButton[ 0x04 ];                             		// 0x07B8 ( 0x0040 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MenuButton[ 0x04 ];                               		// 0x07F8 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbPageButton;                                     		// 0x0808 ( 0x0010 ) 
	class UBTPageListButtonHK*                         PageButton;                                       		// 0x0818 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemInfoHorzBoxHK*                        InfoBox;                                          		// 0x081C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FScriptDelegate                             __SortAuctionItemList__Delegate;                  		// 0x0820 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __sfReqAuctioItemListInMyAuction__Delegate;       		// 0x0828 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.InitComponent
	 void                      InitializeDragAndDrop (  );                       		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.InitializeDragAndDrop
	 void                      InitializeRightPanel (  );                        		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.InitializeRightPanel
	 void                      SelectItem ( class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo, bool bHoldcItemInfo );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.SelectItem
	 bool                      ACLList_OnClick ( class UGUIComponent* Sender );  		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ACLList_OnClick
	 bool                      ACLList_DefaultSelect (  );                       		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ACLList_DefaultSelect
	 void                      InitializeLeftPanel (  );                         		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.InitializeLeftPanel
	 void                      Refresh (  );                                     		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.Refresh
	 void                      fill (  );                                        		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.fill
	 void                      UnequipItem ( int ButtonID );                     		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.UnequipItem
	 void                      EquipItem (  );                                   		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.EquipItem
	 bool                      ChangeSubButton ( class TArray< struct FString > strTemp );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ChangeSubButton
	 void                      ChangeItemList ( int mainTab, int subTab );       		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ChangeItemList
	 bool                      sfReqAuctioItemListInMyAuction ( int Section, struct FString Keyword, int ItemRank, unsigned char ItemClassify, unsigned char IsAvailable, int PageNum, int Count, int SortType );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.sfReqAuctioItemListInMyAuction
	 void                      MainTabSelect ( int tabi, int subtabi, bool bStopLoop );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.MainTabSelect
	 bool                      FindAndRemoveItem ( struct FBtrDouble UniqueID ); 		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.FindAndRemoveItem
	 void                      ChangeVisibleModel ( bool bAF );                  		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ChangeVisibleModel
	 bool                      MenuButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.MenuButton_OnClick
	 bool                      BTWindowInstantlyBuyHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.BTWindowInstantlyBuyHK_OnOK
	 bool                      BTWindowTenderHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.BTWindowTenderHK_OnOK
	 bool                      ButtonWeapon_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonWeapon_OnDblClick
	 bool                      ButtonWeapon_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonWeapon_OnClick
	 void                      ButtonWeapon_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonWeapon_OnEndDrag
	 bool                      ButtonWeapon_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonWeapon_OnBeginDrag
	 bool                      SubButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.SubButton_OnClick
	 bool                      MainButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.MainButton_OnClick
	 bool                      ListTopButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ListTopButton_OnClick
	 void                      SortAuctionItemList ( int SortType );             		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.SortAuctionItemList
	 bool                      ButtonRSA_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonRSA_OnClick
	 bool                      ButtonAF_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonAF_OnClick
	 void                      ButtonRR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonRR_OnRelease
	 void                      ButtonRR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonRR_OnPressed
	 void                      ButtonLR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonLR_OnRelease
	 void                      ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.ButtonLR_OnPressed
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.Internal_OnRendered
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPAuctionMyAuctionHK.Internal_OnPreDraw
}; // Size: 0x04F8

// Class GUIWarfareControls.BTACLAuctionHK
class DLL_IMPORT UBTACLAuctionHK : public UBTAutoColumnListHK
{
public:
	class UBTRODecorateStringHK*                       decoTimeLine;                                     		// 0x0460 ( 0x0004 ) 
	class UBTRODecorateStringHK*                       decoHTU;                                          		// 0x0464 ( 0x0004 ) 
	struct FString                                     strHTU[ 0x02 ];                                   		// 0x0468 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDHMS[ 0x04 ];                                  		// 0x0480 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTROItemBoxHK*                              tT;                                               		// 0x04B0 ( 0x0004 ) [ CPF_Edit | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strUntilTime[ 0x05 ];                             		// 0x04B4 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strUntilTimeLine[ 0x05 ];                         		// 0x04F0 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FImage                                      LevelImg;                                         		// 0x052C ( 0x0020 ) 
	class UBTItemCommonInfoHK*                         MyData;                                           		// 0x054C ( 0x0004 ) 
	class FColor                                       RedColor;                                         		// 0x0550 ( 0x0004 ) 
	class FColor                                       BlueColor;                                        		// 0x0554 ( 0x0004 ) 
	class TArray< class UBTAutoColumnListDataHK* >     ACLPoolList;                                      		// 0x0558 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTACLAuctionHK.Internal_OnRendered
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLAuctionHK.InitComponent
	 void                      LC7_Draw_HTU ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLAuctionHK.LC7_Draw_HTU
	 void                      LC6_Draw_IPP ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLAuctionHK.LC6_Draw_IPP
	 void                      LC5_Draw_HTP ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLAuctionHK.LC5_Draw_HTP
	 void                      LC4_Draw_Limit ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLAuctionHK.LC4_Draw_Limit
	 void                      LC3_Draw_Damage ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLAuctionHK.LC3_Draw_Damage
	 void                      LC2_Draw_Level ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLAuctionHK.LC2_Draw_Level
	 void                      LC1_Draw_Grade ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLAuctionHK.LC1_Draw_Grade
	 void                      LC0_Draw_ItemName ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLAuctionHK.LC0_Draw_ItemName
	 void                      CheckMyBiddingItemByUniqueID ( struct FBtrDouble UniqueID );		//  GUIWarfareControls.BTACLAuctionHK.CheckMyBiddingItemByUniqueID
	 void                      CheckMyRegisterItemByUniqueID ( int UniqueID );   		//  GUIWarfareControls.BTACLAuctionHK.CheckMyRegisterItemByUniqueID
	 int                       GetInstanctlyBuyingPrice ( int row );             		//  GUIWarfareControls.BTACLAuctionHK.GetInstanctlyBuyingPrice
	 void                      Clear (  );                                       		//  GUIWarfareControls.BTACLAuctionHK.Clear
	 void                      AddAuctionItem ( int UniqueID, int ItemID, int PartsID, struct FBtrTime UntilTime, int CurrentBiddingPrice, int InstantlyBuyingPrice, int ItemDamage, struct FString CurrentBiddingUser, struct FString SellerName, int ItemCount, bool bShowTime );		//  GUIWarfareControls.BTACLAuctionHK.AddAuctionItem
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLAuctionHK.GetItemHeight
	 struct FString            UntilTimeLineToText ( int UntilTime );            		//  GUIWarfareControls.BTACLAuctionHK.UntilTimeLineToText
	 struct FString            UntilTimeToText ( int UntilTime );                		//  GUIWarfareControls.BTACLAuctionHK.UntilTimeToText
	 class FColor              DamageToColor ( int Damage );                     		//  GUIWarfareControls.BTACLAuctionHK.DamageToColor
}; // Size: 0x0104

// Class GUIWarfareControls.BTPageListButtonHK
class DLL_IMPORT UBTPageListButtonHK : public UGUITabPanel
{
public:
	class FColor                                       RedColor;                                         		// 0x0330 ( 0x0004 ) 
	int                                                ButtonCount;                                      		// 0x0334 ( 0x0004 ) 
	class UBTOwnerDrawImageHK*                         BackgroundImage;                                  		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonIndex[ 0x0A ];                              		// 0x033C ( 0x0028 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         SeparatorIndex[ 0x0A ];                           		// 0x0364 ( 0x0028 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTIconButtonHK*                             ButtonFirst;                                      		// 0x038C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTIconButtonHK*                             ButtonPrev;                                       		// 0x0390 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTIconButtonHK*                             ButtonNext;                                       		// 0x0394 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonFirst;                                   		// 0x0398 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonPrev;                                    		// 0x03A4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonNext;                                    		// 0x03B0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FPageBox                                    PageInfo;                                         		// 0x03BC ( 0x0014 ) 
	struct FScriptDelegate                             __ButtonIndex_OnClick__Delegate;                  		// 0x03D0 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTPageListButtonHK.InitComponent
	 bool                      ButtonPrev_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTPageListButtonHK.ButtonPrev_OnClick
	 bool                      ButtonNext_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTPageListButtonHK.ButtonNext_OnClick
	 bool                      ButtonFirst_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTPageListButtonHK.ButtonFirst_OnClick
	 bool                      Internal_ButtonIndex_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTPageListButtonHK.Internal_ButtonIndex_OnClick
	 void                      ButtonIndex_OnClick ( int pageIndex );            		//  GUIWarfareControls.BTPageListButtonHK.ButtonIndex_OnClick
	 void                      ChangeButtonPosition ( int StartX );              		//  GUIWarfareControls.BTPageListButtonHK.ChangeButtonPosition
	 void                      SetCurrentIndex ( int CurrentPage );              		//  GUIWarfareControls.BTPageListButtonHK.SetCurrentIndex
	 void                      SetData ( int MaxPage, int ListPerPageCount, int CurrentPage );		//  GUIWarfareControls.BTPageListButtonHK.SetData
}; // Size: 0x00A8

// Class GUIWarfareControls.BTTPMailHK
class DLL_IMPORT UBTTPMailHK : public UGUITabPanel
{
public:
	class TArray< class UBTOwnerDrawCaptionButtonHK* > Buttons;                                          		// 0x0330 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< class UBTAutoColumnListHK* >         ACLMail;                                          		// 0x033C ( 0x000C ) [ CPF_NeedCtorLink ]
	class UTabControlMocker*                           TabControl;                                       		// 0x0348 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 TopButton[ 0x05 ];                                		// 0x034C ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         TopImage[ 0x05 ];                                 		// 0x0360 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTopButton[ 0x05 ];                              		// 0x0374 ( 0x0050 ) 
	struct FFloatBox                                   fbTopButton2[ 0x05 ];                             		// 0x03C4 ( 0x0050 ) 
	struct FString                                     strPoint;                                         		// 0x0414 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCash;                                          		// 0x0420 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strTopButton[ 0x06 ];                             		// 0x042C ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSendMail;                                      		// 0x0474 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRecvMail;                                      		// 0x0480 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCashItemMail;                                  		// 0x048C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strUndefine;                                      		// 0x0498 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDay;                                           		// 0x04A4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strHour;                                          		// 0x04B0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strEmpty;                                         		// 0x04BC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      OnSendedMailClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMailHK.OnSendedMailClick
	 bool                      OnReceivedMailClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMailHK.OnReceivedMailClick
	 bool                      OnCashItemMailClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMailHK.OnCashItemMailClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMailHK.InitComponent
	 void                      InitTopButtons (  );                              		//  GUIWarfareControls.BTTPMailHK.InitTopButtons
	 void                      UpdateTopButtons2 (  );                           		//  GUIWarfareControls.BTTPMailHK.UpdateTopButtons2
	 void                      UpdateTopButtons (  );                            		//  GUIWarfareControls.BTTPMailHK.UpdateTopButtons
	 void                      RemoveAll ( int Panel );                          		//  GUIWarfareControls.BTTPMailHK.RemoveAll
	 void                      ChangeReadStatus ( int Index );                   		//  GUIWarfareControls.BTTPMailHK.ChangeReadStatus
	 void                      ReverseList ( int Panel );                        		//  GUIWarfareControls.BTTPMailHK.ReverseList
	 void                      AddMail ( int Panel, int MemoType, int idx, struct FString senddate, struct FString Sender, struct FString Content, int leftdate, int Status, struct FBtrDouble ItemUID, int ItemID, int StackCount, int WZStoreSeq, int WZStoreItemSeq, int WZStoreItemType, int Value );		//  GUIWarfareControls.BTTPMailHK.AddMail
	 void                      TabControl_OnChangedTab ( int CurrentIndex, int PrevIndex );		//  GUIWarfareControls.BTTPMailHK.TabControl_OnChangedTab
}; // Size: 0x0198

// Class GUIWarfareControls.BTTPMailWriteHK
class DLL_IMPORT UBTTPMailWriteHK : public UGUITabPanel
{
public:
	class UBTOwnerDrawImageHK*                         LabelTitle;                                       		// 0x0330 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelReceiver;                                    		// 0x0334 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelEditReceiver;                                		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                EditReceiver;                                     		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonFriendList;                                 		// 0x0340 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelWarning[ 0x02 ];                             		// 0x0344 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelContent;                                     		// 0x034C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       Content;                                          		// 0x0350 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonSendMail;                                   		// 0x0354 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonCancel;                                     		// 0x0358 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelTitle;                                     		// 0x035C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelReceiver;                                  		// 0x036C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelEditReceiver;                              		// 0x037C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbEditReceiver;                                   		// 0x038C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonFriendList;                               		// 0x039C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelWarning[ 0x02 ];                           		// 0x03AC ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelContent;                                   		// 0x03CC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbContent;                                        		// 0x03DC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonSendMail;                                 		// 0x03EC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonCancel;                                   		// 0x03FC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strLabelTitle;                                    		// 0x040C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelReceiver;                                 		// 0x0418 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonFriendList;                              		// 0x0424 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelWarning[ 0x02 ];                          		// 0x0430 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonSendMail;                                		// 0x0448 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonCancel;                                  		// 0x0454 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetData ( struct FString receiveUser, struct FString ContentText );		//  GUIWarfareControls.BTTPMailWriteHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMailWriteHK.InitComponent
}; // Size: 0x0130

// Class GUIWarfareControls.BTTPMailReadHK
class DLL_IMPORT UBTTPMailReadHK : public UGUITabPanel
{
public:
	struct FBtrDouble                                  ItemUID;                                          		// 0x0330 ( 0x0008 ) 
	int                                                CurrentMailType;                                  		// 0x0338 ( 0x0004 ) 
	int                                                CurrentItemID;                                    		// 0x033C ( 0x0004 ) 
	struct FBtrDouble                                  CurrentItemUID;                                   		// 0x0340 ( 0x0008 ) 
	class UBTOwnerDrawImageHK*                         LabelTitle;                                       		// 0x0348 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelSender;                                      		// 0x034C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         EditSender;                                       		// 0x0350 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelRecvDate;                                    		// 0x0354 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         EditRecvDate;                                     		// 0x0358 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelContent;                                     		// 0x035C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTAutoScrollListHK*                         Content;                                          		// 0x0360 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTPointBoxHK*                               PointInfo;                                        		// 0x0364 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemInfoHorzBoxHK*                        WeaponInfo;                                       		// 0x0368 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonReply;                                      		// 0x036C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonDelete;                                     		// 0x0370 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonReceiveItem;                                		// 0x0374 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelTitle;                                     		// 0x0378 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelSender;                                    		// 0x0388 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelRecvDate;                                  		// 0x0398 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbEditSender;                                     		// 0x03A8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbEditRecvDate;                                   		// 0x03B8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelContent[ 0x03 ];                           		// 0x03C8 ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbContent[ 0x03 ];                                		// 0x03F8 ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonReply;                                    		// 0x0428 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonDelete;                                   		// 0x0438 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonReceiveItem;                              		// 0x0448 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbWeaponInfo;                                     		// 0x0458 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbPointInfo;                                      		// 0x0468 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strLabelTitle[ 0x02 ];                            		// 0x0478 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelSender[ 0x02 ];                           		// 0x0490 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelRecvDate[ 0x02 ];                         		// 0x04A8 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCash;                                          		// 0x04C0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonReply;                                   		// 0x04CC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonDelete;                                  		// 0x04D8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonReceivePoint;                            		// 0x04E4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonReceiveItem;                             		// 0x04F0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetData ( class UCanvas* C, int TabIndex, int ItemType, struct FString Sender, struct FString recv_date, struct FString Text, int ItemID, struct FBtrDouble iItemUID, struct FString ExtraText, int StackCount );		//  GUIWarfareControls.BTTPMailReadHK.SetData
	 void                      Clear (  );                                       		//  GUIWarfareControls.BTTPMailReadHK.Clear
	 void                      ChangeMailType ( int MailType, int ItemID, struct FBtrDouble ItemUID, int StackCount );		//  GUIWarfareControls.BTTPMailReadHK.ChangeMailType
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMailReadHK.InitComponent
}; // Size: 0x01CC

// Class GUIWarfareControls.BTACLMailHK
class DLL_IMPORT UBTACLMailHK : public UBTAutoColumnListHK
{
public:

	// UScript Functions
	 void                      ChangeMailColumnMode (  );                        		//  GUIWarfareControls.BTACLMailHK.ChangeMailColumnMode
	 void                      ChangeNonFreeGiftColumnMode (  );                 		//  GUIWarfareControls.BTACLMailHK.ChangeNonFreeGiftColumnMode
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMailHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLMailHK.GetItemHeight
	 void                      LC2_Content ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMailHK.LC2_Content
}; // Size: 0x0000

// Class GUIWarfareControls.BTPointBoxHK
class DLL_IMPORT UBTPointBoxHK : public UFloatingImage
{
public:
	int                                                imgW;                                             		// 0x02FC ( 0x0004 ) 
	struct FText                                       SavePoint;                                        		// 0x0300 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x031C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTPointBoxHK.Internal_OnRendered
	 void                      SetData ( struct FBtrDouble Point );              		//  GUIWarfareControls.BTPointBoxHK.SetData
}; // Size: 0x002C

// Class GUIWarfareControls.BTItemStateBoxButtonHK
class DLL_IMPORT UBTItemStateBoxButtonHK : public UGUIButton
{
public:
	class UBTROItemStateBoxHKCN*                       StateBox;                                         		// 0x02F4 ( 0x0004 ) 
	int                                                BGOffsetX;                                        		// 0x02F8 ( 0x0004 ) 
	struct FImage                                      GaugeBGImage;                                     		// 0x02FC ( 0x0020 ) 

	// UScript Functions
	 bool                      OnDraw ( class UCanvas* C );                      		//  GUIWarfareControls.BTItemStateBoxButtonHK.OnDraw
	 void                      SetData ( class UwItemBoxHK* ib, class UwItemBoxInstanceHK* ibi, class UwItemBoxHK* cib, class UwItemBoxInstanceHK* cibi );		//  GUIWarfareControls.BTItemStateBoxButtonHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTItemStateBoxButtonHK.InitComponent
}; // Size: 0x0028

// Class GUIWarfareControls.BTEditPWHK
class DLL_IMPORT UBTEditPWHK : public UBTEditBoxHK
{
public:
	float                                              StarCharWidth;                                    		// 0x0490 ( 0x0004 ) 
	int                                                LenSS;                                            		// 0x0494 ( 0x0004 ) 
	struct FString                                     StarString;                                       		// 0x0498 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      CaculateVisibleText ( bool bHoldFirst, int pos ); 		//  GUIWarfareControls.BTEditPWHK.CaculateVisibleText
	 bool                      OwnerDraw ( class UCanvas* C );                   		//  GUIWarfareControls.BTEditPWHK.OwnerDraw
}; // Size: 0x0014

// Class GUIWarfareControls.BTLabelTestHK2
class DLL_IMPORT UBTLabelTestHK2 : public UBTOwnerDrawImageHK
{
public:

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelTestHK2.Internal_OnRendered
}; // Size: 0x0000

// Class GUIWarfareControls.BTWindowSendPresentHK
class DLL_IMPORT UBTWindowSendPresentHK : public UBTWindowHK
{
public:
	int                                                ItemID;                                           		// 0x04AC ( 0x0004 ) 
	int                                                BuyOpt[ 0x02 ];                                   		// 0x04B0 ( 0x0008 ) 
	struct FFloatBox                                   fbItemBox;                                        		// 0x04B8 ( 0x0010 ) 
	class UBTItemBoxButtonHK*                          itemBox;                                          		// 0x04C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbSeparator;                                      		// 0x04CC ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         Separator;                                        		// 0x04DC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonAddress;                                  		// 0x04E0 ( 0x0010 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAddress;                                    		// 0x04F0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x04 ];                                  		// 0x04F4 ( 0x0040 ) 
	struct FFloatBox                                   fbEditReceiveUser;                                		// 0x0534 ( 0x0010 ) 
	struct FFloatBox                                   fbEditContent;                                    		// 0x0544 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         Label[ 0x04 ];                                    		// 0x0554 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                EditReceiveUser;                                  		// 0x0564 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       EditContent;                                      		// 0x0568 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabel[ 0x02 ];                                 		// 0x056C ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonAddress;                                 		// 0x0584 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTROItemBoxHK*                              ro;                                               		// 0x0590 ( 0x0004 ) 
	unsigned char                                      cashType;                                         		// 0x0594 ( 0x0001 ) 

	// UScript Functions
	 void                      SetCashType ( unsigned char buyCashType );        		//  GUIWarfareControls.BTWindowSendPresentHK.SetCashType
	 void                      SetData ( int iItemID, int Opt1, int opt2 );      		//  GUIWarfareControls.BTWindowSendPresentHK.SetData
	 void                      SetRenderObject ( class UBTROItemBoxHK* ro );     		//  GUIWarfareControls.BTWindowSendPresentHK.SetRenderObject
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowSendPresentHK.InitComponent
}; // Size: 0x00EC

// Class GUIWarfareControls.BTWindowItemBuyHK
class DLL_IMPORT UBTWindowItemBuyHK : public UBTWindowHK
{
public:
	int                                                ItemID;                                           		// 0x04AC ( 0x0004 ) 
	int                                                MyPoint;                                          		// 0x04B0 ( 0x0004 ) 
	int                                                MyCash;                                           		// 0x04B4 ( 0x0004 ) 
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x04B8 ( 0x0004 ) 
	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x04BC ( 0x0004 ) 
	class UwItemBoxCashHK*                             cii;                                              		// 0x04C0 ( 0x0004 ) 
	int                                                OptionDay;                                        		// 0x04C4 ( 0x0004 ) 
	class FColor                                       RedColor;                                         		// 0x04C8 ( 0x0004 ) 
	struct FFloatBox                                   fbItemInfoBox;                                    		// 0x04CC ( 0x0010 ) 
	class UBTItemInfoVertBoxHK*                        ItemInfoBox;                                      		// 0x04DC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonRechargeCash;                             		// 0x04E0 ( 0x0010 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRechargeCash;                               		// 0x04F0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbCombo;                                          		// 0x04F4 ( 0x0010 ) 
	class UBTComboBoxHK*                               Combo;                                            		// 0x0504 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTermLabel;                                      		// 0x0508 ( 0x0010 ) 
	struct FFloatBox                                   fbLabel[ 0x03 ];                                  		// 0x0518 ( 0x0030 ) 
	class UBTOwnerDrawImageHK*                         Label[ 0x03 ];                                    		// 0x0548 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         TermLabel;                                        		// 0x0554 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbNEditPoint[ 0x03 ];                             		// 0x0558 ( 0x0030 ) 
	struct FFloatBox                                   fbNEditCash[ 0x03 ];                              		// 0x0588 ( 0x0030 ) 
	class UBTNumericEditBoxHK*                         NEditPoint[ 0x03 ];                               		// 0x05B8 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTNumericEditBoxHK*                         NEditCash[ 0x03 ];                                		// 0x05C4 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTEditBoxHK*                                EditReceiveUser;                                  		// 0x05D0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       EditContent;                                      		// 0x05D4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                MyCCoin;                                          		// 0x05D8 ( 0x0004 ) 
	unsigned char                                      cashType;                                         		// 0x05DC ( 0x0001 ) 
	struct FString                                     strLabel[ 0x03 ];                                 		// 0x05E0 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x0604 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCash;                                          		// 0x0610 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDay;                                           		// 0x061C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCount;                                         		// 0x0628 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCCoinCash;                                     		// 0x0634 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButtonRechargeCash;                            		// 0x0640 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strTerm;                                          		// 0x064C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTROItemBoxHK*                              ro;                                               		// 0x0658 ( 0x0004 ) 

	// UScript Functions
	 int                       GetCalcCash (  );                                 		//  GUIWarfareControls.BTWindowItemBuyHK.GetCalcCash
	 struct FString            GetCoinString (  );                               		//  GUIWarfareControls.BTWindowItemBuyHK.GetCoinString
	 void                      SetData ( int iItemID, int myp, int MyC, int myCC, class UwItemBoxHK* itemInfoBase, unsigned char useCashType );		//  GUIWarfareControls.BTWindowItemBuyHK.SetData
	 void                      SetMoneyInfo ( int myp, int MyC, int myCC );      		//  GUIWarfareControls.BTWindowItemBuyHK.SetMoneyInfo
	 void                      SetRenderObject ( class UBTROItemBoxHK* ro );     		//  GUIWarfareControls.BTWindowItemBuyHK.SetRenderObject
	 void                      Combo_OnChange ( class UGUIComponent* Sender );   		//  GUIWarfareControls.BTWindowItemBuyHK.Combo_OnChange
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowItemBuyHK.InitComponent
}; // Size: 0x01B0

// Class GUIWarfareControls.BTTPStoreHK
class DLL_IMPORT UBTTPStoreHK : public UGUITabPanel
{
public:
	struct FString                                     strWeapon;                                        		// 0x0330 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class ABTROModelNew*                               CharacterModel;                                   		// 0x033C ( 0x0004 ) 
	class UTabControlMocker*                           TabControl;                                       		// 0x0340 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonInven[ 0x02 ];                              		// 0x0344 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UGUITabPanel*                                TPInven[ 0x02 ];                                  		// 0x034C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPStoreWeaponHK*                          TPWeapon;                                         		// 0x0354 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPStoreHK.InitComponent
}; // Size: 0x0028

// Class GUIWarfareControls.BTTPStoreWeaponHK
class DLL_IMPORT UBTTPStoreWeaponHK : public UBTTabPanelHK
{
public:
	class UBTTcpLink_Channel*                          TcpChannel;                                       		// 0x0338 ( 0x0004 ) 
	class UDragObject*                                 DragBox;                                          		// 0x033C ( 0x0004 ) 
	class UButtonGroups*                               InvenGroup;                                       		// 0x0340 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0344 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonWeapon[ 0x07 ];                           		// 0x0348 ( 0x0070 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTItemBoxButtonHK*                          ButtonWeapon[ 0x07 ];                             		// 0x03B8 ( 0x001C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonWeapon[ 0x0B ];                          		// 0x03D4 ( 0x0084 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAF;                                         		// 0x0458 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRSA;                                        		// 0x045C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bLRMousePressed:1;                                		// 0x0460 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonLR;                                         		// 0x0464 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bRRMousePressed:1;                                		// 0x0468 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRR;                                         		// 0x046C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         EdgeLine;                                         		// 0x0470 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         AFTeamBG;                                         		// 0x0474 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         RSATeamBG;                                        		// 0x0478 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bVisibleAFModel:1;                                		// 0x047C ( 0x0004 )  [0x00000001]
	struct FString                                     strAF;                                            		// 0x0480 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRSA;                                           		// 0x048C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strForGift[ 0x02 ];                               		// 0x0498 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strForMe[ 0x02 ];                                 		// 0x04B0 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTModelHK*                                  UIModel;                                          		// 0x04C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class ABTROModelNew*                               CharacterModel;                                   		// 0x04CC ( 0x0004 ) 
	class UBTAutoScrollListHK*                         ChatBox;                                          		// 0x04D0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strMainMenu[ 0x05 ];                              		// 0x04D4 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuNewAndHot[ 0x04 ];                      		// 0x0510 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuWeapon[ 0x04 ];                         		// 0x0540 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuEquip[ 0x05 ];                          		// 0x0570 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuSpecial[ 0x04 ];                        		// 0x05AC ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubMenuCashItem[ 0x02 ];                       		// 0x05DC ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuNewAndHot;                             		// 0x05F4 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuWeapon;                                		// 0x0600 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuEquip;                                 		// 0x060C ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuSpecial;                               		// 0x0618 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FString >                     astrSubMenuCashItem;                              		// 0x0624 ( 0x000C ) [ CPF_NeedCtorLink ]
	class UTabControlMocker*                           TabControl[ 0x02 ];                               		// 0x0630 ( 0x0008 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MainButton[ 0x05 ];                               		// 0x0638 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 SubButton[ 0x05 ];                                		// 0x064C ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelItemList;                                  		// 0x0660 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelItemList;                                    		// 0x0670 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTPItemList;                                     		// 0x0674 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTTPItemListHK*                             TPItemList;                                       		// 0x0684 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strMenuButton[ 0x03 ];                            		// 0x0688 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbMenuButton[ 0x03 ];                             		// 0x06AC ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 MenuButton[ 0x03 ];                               		// 0x06DC ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemInfoHorzBoxHK*                        InfoBox;                                          		// 0x06E8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                CurrentRepairMode;                                		// 0x06EC ( 0x0004 ) 
	int                                                EquipItemCount;                                   		// 0x06F0 ( 0x0004 ) 
	class TArray< int >                                EquipItemList;                                    		// 0x06F4 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< int >                                InvenItemList;                                    		// 0x0700 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     SaveWebzenBuyItemName;                            		// 0x070C ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __deleShowCashChargeWindow__Delegate;             		// 0x0718 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ShowItemBuyWindow ( class UBTROItemBoxHK* ro, int buyType, int cashType );		//  GUIWarfareControls.BTTPStoreWeaponHK.ShowItemBuyWindow
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPStoreWeaponHK.InitComponent
	 void                      InitializeDragAndDrop (  );                       		//  GUIWarfareControls.BTTPStoreWeaponHK.InitializeDragAndDrop
	 void                      InitializeRightPanel (  );                        		//  GUIWarfareControls.BTTPStoreWeaponHK.InitializeRightPanel
	 void                      InitializeLeftPanel (  );                         		//  GUIWarfareControls.BTTPStoreWeaponHK.InitializeLeftPanel
	 void                      Refresh (  );                                     		//  GUIWarfareControls.BTTPStoreWeaponHK.Refresh
	 void                      SetInfoBox ( int Index );                         		//  GUIWarfareControls.BTTPStoreWeaponHK.SetInfoBox
	 void                      AddSubMenuBtns (  );                              		//  GUIWarfareControls.BTTPStoreWeaponHK.AddSubMenuBtns
	 void                      fill ( class TArray< int > ShopItemList );        		//  GUIWarfareControls.BTTPStoreWeaponHK.fill
	 void                      UnequipItem ( int ButtonID );                     		//  GUIWarfareControls.BTTPStoreWeaponHK.UnequipItem
	 void                      EquipItem (  );                                   		//  GUIWarfareControls.BTTPStoreWeaponHK.EquipItem
	 bool                      ChangeSubButton ( class TArray< struct FString > strTemp );		//  GUIWarfareControls.BTTPStoreWeaponHK.ChangeSubButton
	 void                      ChangeItemList ( int mainTab, int subTab );       		//  GUIWarfareControls.BTTPStoreWeaponHK.ChangeItemList
	 void                      MainTabSelect ( int tabi, int subtabi );          		//  GUIWarfareControls.BTTPStoreWeaponHK.MainTabSelect
	 bool                      FindAndRemoveItem ( struct FBtrDouble UniqueID ); 		//  GUIWarfareControls.BTTPStoreWeaponHK.FindAndRemoveItem
	 void                      ChangeVisibleModel ( bool bAF );                  		//  GUIWarfareControls.BTTPStoreWeaponHK.ChangeVisibleModel
	 bool                      CheckValidItem ( class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instnaceinfo );		//  GUIWarfareControls.BTTPStoreWeaponHK.CheckValidItem
	 void                      GetCashItemInfo ( class UwItemBoxHK* ib, class UwItemBoxCashHK* cii, class TArray< int >* temp );		//  GUIWarfareControls.BTTPStoreWeaponHK.GetCashItemInfo
	 bool                      BTWindowItemBuyTerm_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.BTWindowItemBuyTerm_OnOK
	 bool                      MenuButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.MenuButton_OnClick
	 void                      deleShowCashChargeWindow (  );                    		//  GUIWarfareControls.BTTPStoreWeaponHK.deleShowCashChargeWindow
	 void                      BTWindowSendPresentHK_OnTimeOut ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.BTWindowSendPresentHK_OnTimeOut
	 void                      BTWindowItemBuyHK_OnTimeOut ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.BTWindowItemBuyHK_OnTimeOut
	 bool                      BTWindowItemBuyHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.BTWindowItemBuyHK_OnOK
	 bool                      BTWindowItemBuyHK_BeforePresent_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.BTWindowItemBuyHK_BeforePresent_OnOK
	 bool                      BTWindowItemBuyHK_ButtonRechargeCash_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.BTWindowItemBuyHK_ButtonRechargeCash_OnOK
	 bool                      BTWindowSendPresentHK_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.BTWindowSendPresentHK_OnOK
	 bool                      ButtonWeapon_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonWeapon_OnDblClick
	 bool                      ButtonWeapon_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonWeapon_OnClick
	 void                      ButtonWeapon_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonWeapon_OnEndDrag
	 bool                      ButtonWeapon_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonWeapon_OnBeginDrag
	 void                      ItemList_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPStoreWeaponHK.ItemList_OnEndDrag
	 bool                      ItemList_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ItemList_OnBeginDrag
	 bool                      ImageListBox_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ImageListBox_OnClick
	 bool                      ImageListBox_OnHover ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ImageListBox_OnHover
	 bool                      ImageListBox_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ImageListBox_OnDblClick
	 bool                      SubButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.SubButton_OnClick
	 bool                      MainButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.MainButton_OnClick
	 bool                      ButtonRSA_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonRSA_OnClick
	 bool                      ButtonAF_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonAF_OnClick
	 void                      ButtonRR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonRR_OnRelease
	 void                      ButtonRR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonRR_OnPressed
	 void                      ButtonLR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonLR_OnRelease
	 void                      ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPStoreWeaponHK.ButtonLR_OnPressed
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTTPStoreWeaponHK.Internal_OnRendered
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPStoreWeaponHK.Internal_OnPreDraw
}; // Size: 0x03E8

// Class GUIWarfareControls.BTTPMyInfoAllHK
class DLL_IMPORT UBTTPMyInfoAllHK : public UBTTabPanelHK
{
public:
	class ABTROModelNew*                               CharacterModel;                                   		// 0x0338 ( 0x0004 ) 
	struct FFloatBox                                   fbBackgroundPanel[ 0x02 ];                        		// 0x033C ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         BackgroundPanel[ 0x02 ];                          		// 0x035C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UButtonGroups*                               InvenGroup;                                       		// 0x0364 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTStretchedImageHK*                         BackgroundImage;                                  		// 0x0368 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonWeapon[ 0x0A ];                           		// 0x036C ( 0x00A0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strButtonWeapon[ 0x0A ];                          		// 0x040C ( 0x0078 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTItemBoxButtonHK*                          ButtonWeapon[ 0x0A ];                             		// 0x0484 ( 0x0028 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAF;                                         		// 0x04AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRSA;                                        		// 0x04B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bLRMousePressed:1;                                		// 0x04B4 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonLR;                                         		// 0x04B8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bRRMousePressed:1;                                		// 0x04BC ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonRR;                                         		// 0x04C0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         EdgeLine;                                         		// 0x04C4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         AFTeamBG;                                         		// 0x04C8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         RSATeamBG;                                        		// 0x04CC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bVisibleAFModel:1;                                		// 0x04D0 ( 0x0004 )  [0x00000001]
	struct FString                                     strAF;                                            		// 0x04D4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRSA;                                           		// 0x04E0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTModelHK*                                  UIModel;                                          		// 0x04EC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTAutoScrollListHK*                         ChatBox;                                          		// 0x04F0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonTab[ 0x04 ];                             		// 0x04F4 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UTabControlMocker*                           TabControl;                                       		// 0x0524 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTab[ 0x04 ];                              		// 0x0528 ( 0x0040 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTab[ 0x04 ];                                		// 0x0568 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbTPPanel;                                        		// 0x0578 ( 0x0010 ) 
	class UBTTPOptionBaseHK*                           TPPanel[ 0x04 ];                                  		// 0x0588 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                VisiblePanelIdx;                                  		// 0x0598 ( 0x0004 ) 
	class UBTTPMyInfoBasicHK*                          TPBasic;                                          		// 0x059C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPMyInfoStatHK*                           TPStat;                                           		// 0x05A0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPMyInfoRankHK*                           TPRank;                                           		// 0x05A4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTTPMyInfoFriendlyUserHK*                   TPFriendly;                                       		// 0x05A8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMyInfoAllHK.InitComponent
	 bool                      ButtonTab_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMyInfoAllHK.ButtonTab_OnClick
	 void                      InitializeRightPanel (  );                        		//  GUIWarfareControls.BTTPMyInfoAllHK.InitializeRightPanel
	 void                      InitializeLeftPanel (  );                         		//  GUIWarfareControls.BTTPMyInfoAllHK.InitializeLeftPanel
	 void                      Refresh (  );                                     		//  GUIWarfareControls.BTTPMyInfoAllHK.Refresh
	 void                      ChangeVisibleModel ( bool bAF );                  		//  GUIWarfareControls.BTTPMyInfoAllHK.ChangeVisibleModel
	 void                      UpdateServerTime ( struct FBtrDouble D );         		//  GUIWarfareControls.BTTPMyInfoAllHK.UpdateServerTime
	 bool                      ButtonRSA_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMyInfoAllHK.ButtonRSA_OnClick
	 bool                      ButtonAF_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPMyInfoAllHK.ButtonAF_OnClick
	 void                      ButtonRR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMyInfoAllHK.ButtonRR_OnRelease
	 void                      ButtonRR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPMyInfoAllHK.ButtonRR_OnPressed
	 void                      ButtonLR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMyInfoAllHK.ButtonLR_OnRelease
	 void                      ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPMyInfoAllHK.ButtonLR_OnPressed
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPMyInfoAllHK.Internal_OnPreDraw
}; // Size: 0x0274

// Class GUIWarfareControls.BTTPMyInfoFriendlyUserHK
class DLL_IMPORT UBTTPMyInfoFriendlyUserHK : public UBTTPOptionBaseHK
{
public:
	struct FFloatBox                                   fbComboBox;                                       		// 0x0700 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelMyName;                                      		// 0x0710 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTComboBoxHK*                               ComboFriendlyUser;                                		// 0x0714 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strLabel[ 0x14 ];                                 		// 0x0718 ( 0x00F0 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnChangeFriendlyUser__Delegate;                 		// 0x0808 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnHideFriendlyUserList__Delegate;               		// 0x0810 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitializeLabel (  );                             		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.InitializeLabel
	 void                      FillComoboFriendlyUser (  );                      		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.FillComoboFriendlyUser
	 void                      OnHide_ComboFriendlyUserList (  );                		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.OnHide_ComboFriendlyUserList
	 void                      OnChange_ComboFriendlyUser ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.OnChange_ComboFriendlyUser
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.InitComponent
	 void                      InitializeContent (  );                           		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.InitializeContent
	 struct FString            GetSelectedFriendlyUserName (  );                 		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.GetSelectedFriendlyUserName
	 void                      SetData ( bool bMyInfo, int UserID, struct FString CharName, struct FString ClanName, int CM_Pattern, int CM_BG, int CM_BL, struct FCharInfo stCharInfo, struct FClanInfo stClanInfo, int ClanLevel );		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.SetData
	 void                      OnHideFriendlyUserList (  );                      		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.OnHideFriendlyUserList
	 void                      OnChangeFriendlyUser (  );                        		//  GUIWarfareControls.BTTPMyInfoFriendlyUserHK.OnChangeFriendlyUser
}; // Size: 0x0118

// Class GUIWarfareControls.BTTPMyInfoRankHK
class DLL_IMPORT UBTTPMyInfoRankHK : public UBTTPOptionBaseHK
{
public:
	struct FString                                     strMainRank[ 0x0C ];                              		// 0x0700 ( 0x0090 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSubRank[ 0x04 ];                               		// 0x0790 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTComboBoxHK*                               RankComboBox[ 0x02 ];                             		// 0x07C0 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                nContentSettingLength;                            		// 0x07C8 ( 0x0004 ) 
	struct FScriptDelegate                             __OnChangeMainComboBox__Delegate;                 		// 0x07CC ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnChangeSubComboBox__Delegate;                  		// 0x07D4 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnHideComboBoxList__Delegate;                   		// 0x07DC ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      CompleteSetRankingInfo (  );                      		//  GUIWarfareControls.BTTPMyInfoRankHK.CompleteSetRankingInfo
	 void                      SetRankingInfo ( unsigned char RankingType, unsigned char CommunityType, class TArray< struct FString > CharName, class TArray< int > CharLevel, class TArray< struct FString > ClanName, class TArray< int > ClanMarkPattern, class TArray< int > ClanMarkBG, class TArray< int > ClanMarkBL, class TArray< int > Ranking_Accum, class TArray< int > Ranking_Accum_Prev, class TArray< int > Ranking_Accum_Exp, class TArray< int > LevelMarkID, class TArray< int > TitleMarkID, class TArray< int > Reserved1, class TArray< int > Reserved2, class TArray< int > Reserved3 );		//  GUIWarfareControls.BTTPMyInfoRankHK.SetRankingInfo
	 void                      SetRankComboboxSelectIndex ( int idx, int SelectIdx );		//  GUIWarfareControls.BTTPMyInfoRankHK.SetRankComboboxSelectIndex
	 int                       GetRankComboboxSelectedIndex ( int idx );         		//  GUIWarfareControls.BTTPMyInfoRankHK.GetRankComboboxSelectedIndex
	 void                      OnHide_ComboBoxList (  );                         		//  GUIWarfareControls.BTTPMyInfoRankHK.OnHide_ComboBoxList
	 void                      OnChange_SubComboBox ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMyInfoRankHK.OnChange_SubComboBox
	 void                      OnChange_MainComboBox ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPMyInfoRankHK.OnChange_MainComboBox
	 void                      SetSubComboBox ( int MainIdx );                   		//  GUIWarfareControls.BTTPMyInfoRankHK.SetSubComboBox
	 void                      SetMainComboBox (  );                             		//  GUIWarfareControls.BTTPMyInfoRankHK.SetMainComboBox
	 void                      InitializeContent ( unsigned char RankType, int nRankingCount );		//  GUIWarfareControls.BTTPMyInfoRankHK.InitializeContent
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMyInfoRankHK.InitComponent
	 void                      OnHideComboBoxList (  );                          		//  GUIWarfareControls.BTTPMyInfoRankHK.OnHideComboBoxList
	 void                      OnChangeSubComboBox (  );                         		//  GUIWarfareControls.BTTPMyInfoRankHK.OnChangeSubComboBox
	 void                      OnChangeMainComboBox (  );                        		//  GUIWarfareControls.BTTPMyInfoRankHK.OnChangeMainComboBox
}; // Size: 0x00E4

// Class GUIWarfareControls.BTTPMatchResultCommonHK
class DLL_IMPORT UBTTPMatchResultCommonHK : public UBTTabPanelHK
{
public:
	struct FString                                     strButtonTopLine[ 0x0B ];                         		// 0x0338 ( 0x0084 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelTeamScore;                                		// 0x03BC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelRoomName;                                  		// 0x03C8 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelRoomName;                                    		// 0x03D8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLResult[ 0x02 ];                              		// 0x03DC ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTACLMatchResultHK*                         ACLResult[ 0x02 ];                                		// 0x03FC ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelACL[ 0x02 ];                               		// 0x0404 ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelACL[ 0x02 ];                                 		// 0x0424 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelSelectACL[ 0x02 ];                           		// 0x042C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelTeamLogo[ 0x02 ];                          		// 0x0434 ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelTeamLogo[ 0x02 ];                            		// 0x0454 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelTeamResult[ 0x02 ];                        		// 0x045C ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelTeamResult[ 0x02 ];                          		// 0x047C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelTeamResultMark[ 0x02 ];                    		// 0x0484 ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelTeamResultMark[ 0x02 ];                      		// 0x04A4 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelTopLine;                                   		// 0x04AC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelTopLine;                                     		// 0x04BC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTopLine[ 0x0B ];                          		// 0x04C0 ( 0x00B0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTopLine[ 0x0B ];                            		// 0x0570 ( 0x002C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelSeparator[ 0x0A ];                           		// 0x059C ( 0x0028 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelTeamScore[ 0x02 ];                         		// 0x05C4 ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelTeamScore[ 0x02 ];                           		// 0x05E4 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelTeamScoreResult[ 0x02 ];                   		// 0x05EC ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelTeamScoreResult[ 0x02 ];                     		// 0x060C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	unsigned long                                      bDefenceGame:1;                                   		// 0x0614 ( 0x0004 )  [0x00000001]
	class UBTOwnerDrawImageHK*                         ResultMyInfo;                                     		// 0x0618 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbResultMyInfo[ 0x02 ];                           		// 0x061C ( 0x0020 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelMyInfo[ 0x0D ];                            		// 0x063C ( 0x00D0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelMyInfo[ 0x0D ];                              		// 0x070C ( 0x0034 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strMyInfo[ 0x07 ];                                		// 0x0740 ( 0x0054 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetVisibility ( bool bIsVisible );                		//  GUIWarfareControls.BTTPMatchResultCommonHK.SetVisibility
	 void                      SetData ( class UwMatchMaker* MM );               		//  GUIWarfareControls.BTTPMatchResultCommonHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMatchResultCommonHK.InitComponent
}; // Size: 0x045C

// Class GUIWarfareControls.BTTPMatchResultPrivateHK
class DLL_IMPORT UBTTPMatchResultPrivateHK : public UBTTabPanelHK
{
public:
	struct FString                                     strButtonTopLine[ 0x0B ];                         		// 0x0338 ( 0x0084 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelRoomName;                                  		// 0x03BC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelRoomName;                                    		// 0x03CC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbACLResult;                                      		// 0x03D0 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTACLMatchResultHK*                         ACLResult;                                        		// 0x03E0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelACL;                                       		// 0x03E4 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelACL;                                         		// 0x03F4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelSelectACL;                                   		// 0x03F8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelLogo;                                      		// 0x03FC ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelLogo;                                        		// 0x040C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelTopLine;                                   		// 0x0410 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelTopLine;                                     		// 0x0420 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTopLine[ 0x0B ];                          		// 0x0424 ( 0x00B0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawCaptionButtonHK*                 ButtonTopLine[ 0x0B ];                            		// 0x04D4 ( 0x002C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelSeparator[ 0x0A ];                           		// 0x0500 ( 0x0028 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         ResultMyInfo;                                     		// 0x0528 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbResultMyInfo;                                   		// 0x052C ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbLabelMyInfo[ 0x0D ];                            		// 0x053C ( 0x00D0 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelMyInfo[ 0x0D ];                              		// 0x060C ( 0x0034 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strMyInfo[ 0x07 ];                                		// 0x0640 ( 0x0054 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetData ( class UwMatchMaker* MM );               		//  GUIWarfareControls.BTTPMatchResultPrivateHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPMatchResultPrivateHK.InitComponent
}; // Size: 0x035C

// Class GUIWarfareControls.BTROModelWeapon
class DLL_IMPORT ABTROModelWeapon : public AInventory
{
public:
	float                                              FOV;                                              		// 0x043C ( 0x0004 ) 
	unsigned long                                      b1st:1;                                           		// 0x0440 ( 0x0004 )  [0x00000001]
	int                                                CurrentAni;                                       		// 0x0444 ( 0x0004 ) 
	class TArray< struct FName >                       AnimNames;                                        		// 0x0448 ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                weaponID;                                         		// 0x0454 ( 0x0004 ) 
	int                                                WeaponPartsID;                                    		// 0x0458 ( 0x0004 ) 
	int                                                PaintingID;                                       		// 0x045C ( 0x0004 ) 
	int                                                WeaponType;                                       		// 0x0460 ( 0x0004 ) 
	class AwSkinShell*                                 wWeaponParts[ 0x03 ];                             		// 0x0464 ( 0x000C ) 
	class AwSkinShell*                                 wHands;                                           		// 0x0470 ( 0x0004 ) 
	struct FFloatBox                                   AWinPos;                                          		// 0x0474 ( 0x0010 ) 
	float                                              PosX;                                             		// 0x0484 ( 0x0004 ) 
	float                                              PosY;                                             		// 0x0488 ( 0x0004 ) 
	float                                              posZ;                                             		// 0x048C ( 0x0004 ) 
	float                                              RotY;                                             		// 0x0490 ( 0x0004 ) 
	float                                              LightDistance0;                                   		// 0x0494 ( 0x0004 ) 
	float                                              LightDistance1;                                   		// 0x0498 ( 0x0004 ) 
	float                                              LightDistance2;                                   		// 0x049C ( 0x0004 ) 
	float                                              LightAngle0;                                      		// 0x04A0 ( 0x0004 ) 
	float                                              LightAngle1;                                      		// 0x04A4 ( 0x0004 ) 
	float                                              LightAngle2;                                      		// 0x04A8 ( 0x0004 ) 
	float                                              LightHeight0;                                     		// 0x04AC ( 0x0004 ) 
	float                                              LightHeight1;                                     		// 0x04B0 ( 0x0004 ) 
	float                                              LightHeight2;                                     		// 0x04B4 ( 0x0004 ) 
	int                                                LightColor0_R;                                    		// 0x04B8 ( 0x0004 ) 
	int                                                LightColor0_G;                                    		// 0x04BC ( 0x0004 ) 
	int                                                LightColor0_B;                                    		// 0x04C0 ( 0x0004 ) 
	int                                                LightColor1_R;                                    		// 0x04C4 ( 0x0004 ) 
	int                                                LightColor1_G;                                    		// 0x04C8 ( 0x0004 ) 
	int                                                LightColor1_B;                                    		// 0x04CC ( 0x0004 ) 
	int                                                LightColor2_R;                                    		// 0x04D0 ( 0x0004 ) 
	int                                                LightColor2_G;                                    		// 0x04D4 ( 0x0004 ) 
	int                                                LightColor2_B;                                    		// 0x04D8 ( 0x0004 ) 
	float                                              AspectRatio;                                      		// 0x04DC ( 0x0004 ) 
	struct FVector                                     cameraPosAdd;                                     		// 0x04E0 ( 0x000C ) 
	struct FRotator                                    pawnRotAdd;                                       		// 0x04EC ( 0x000C ) 
	struct FRotator                                    PawnRot;                                          		// 0x04F8 ( 0x000C ) 
	struct FVector                                     pawnPos;                                          		// 0x0504 ( 0x000C ) 
	struct FRotator                                    cameraRot;                                        		// 0x0510 ( 0x000C ) 
	struct FVector                                     cameraPos;                                        		// 0x051C ( 0x000C ) 
	struct FVector                                     lightDist;                                        		// 0x0528 ( 0x000C ) 
	struct FVector                                     lightHeight;                                      		// 0x0534 ( 0x000C ) 
	struct FVector                                     lightAngle;                                       		// 0x0540 ( 0x000C ) 
	class FColor                                       LightColor[ 0x03 ];                               		// 0x054C ( 0x000C ) 
	class FColor                                       LightColor_AF[ 0x02 ];                            		// 0x0558 ( 0x0008 ) 
	class FColor                                       LightColor_RSA[ 0x02 ];                           		// 0x0560 ( 0x0008 ) 
	class UwWeaponBaseParams*                          BaseParams;                                       		// 0x0568 ( 0x0004 ) 
	float                                              fStancePivot;                                     		// 0x056C ( 0x0004 ) 
	unsigned long                                      bLanding:1;                                       		// 0x0570 ( 0x0004 )  [0x00000001]
	struct FVector                                     vStanceOffset;                                    		// 0x0574 ( 0x000C ) [ CPF_Transient ]
	struct FVector                                     vPartsOffset;                                     		// 0x0580 ( 0x000C ) [ CPF_Transient ]
	struct FVector                                     vBreathOffset;                                    		// 0x058C ( 0x000C ) [ CPF_Transient ]
	unsigned long                                      bBreathOffsetXLeft:1;                             		// 0x0598 ( 0x0004 )  [0x00000001][ CPF_Transient ]
	unsigned long                                      bBreathOffsetYUp:1;                               		// 0x0598 ( 0x0004 )  [0x00000002][ CPF_Transient ]
	float                                              fBreathOffsetReflecTime_X;                        		// 0x059C ( 0x0004 ) [ CPF_Transient ]
	float                                              fBreathOffsetReflecTime_Y;                        		// 0x05A0 ( 0x0004 ) [ CPF_Transient ]
	float                                              fBreathSeconds;                                   		// 0x05A4 ( 0x0004 ) [ CPF_Transient ]
	float                                              fBreathRatio;                                     		// 0x05A8 ( 0x0004 ) 
	struct FVector                                     vAttackedOffset;                                  		// 0x05AC ( 0x000C ) [ CPF_Transient ]
	struct FRotator                                    rAttackedRot;                                     		// 0x05B8 ( 0x000C ) [ CPF_Transient ]
	struct FRotator                                    rSwayDestRot;                                     		// 0x05C4 ( 0x000C ) [ CPF_Transient ]
	struct FRotator                                    rSwayRot;                                         		// 0x05D0 ( 0x000C ) [ CPF_Transient ]
	struct FRotator                                    rSway_LastCameraRot;                              		// 0x05DC ( 0x000C ) [ CPF_Transient ]
	float                                              fSwayAccumTime_Pitch;                             		// 0x05E8 ( 0x0004 ) [ CPF_Transient ]
	float                                              fSwayAccumTime_Yaw;                               		// 0x05EC ( 0x0004 ) [ CPF_Transient ]

	// UScript Functions
	 void                      SetRotationUI ( float rY );                       		//  GUIWarfareControls.BTROModelWeapon.SetRotationUI
	 void                      SetPositionUI ( float X, float Y, float Z );      		//  GUIWarfareControls.BTROModelWeapon.SetPositionUI
	 void                      CalcPartsOffset (  );                             		// [ FUNC_Simulated ] GUIWarfareControls.BTROModelWeapon.CalcPartsOffset
	 void                      eventAnimEnd ( int Channel );                     		// [ FUNC_Event ] GUIWarfareControls.BTROModelWeapon.AnimEnd
	 void                      SetRotationRight (  );                            		//  GUIWarfareControls.BTROModelWeapon.SetRotationRight
	 void                      SetRotationLeft (  );                             		//  GUIWarfareControls.BTROModelWeapon.SetRotationLeft
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROModelWeapon.Render
	 void                      EndModel (  );                                    		//  GUIWarfareControls.BTROModelWeapon.EndModel
	 void                      SetWeaponPainting ( int iPaintingID );            		//  GUIWarfareControls.BTROModelWeapon.SetWeaponPainting
	 void                      SetWeaponParts ( int iPartsID, int iPaintingID ); 		//  GUIWarfareControls.BTROModelWeapon.SetWeaponParts
	 void                      SetWeapon ( int iWeaponID, int iPartsID );        		//  GUIWarfareControls.BTROModelWeapon.SetWeapon
	 void                      ChangeWeaponsParts ( int iPartsID );              		//  GUIWarfareControls.BTROModelWeapon.ChangeWeaponsParts
	 void                      ChangeWeapon ( int iWeaponID, int iPartsID, int iPaintingID );		//  GUIWarfareControls.BTROModelWeapon.ChangeWeapon
	 void                      ForceChangeWeapon (  );                           		//  GUIWarfareControls.BTROModelWeapon.ForceChangeWeapon
	 void                      BeginModel (  );                                  		//  GUIWarfareControls.BTROModelWeapon.BeginModel
	 void                      SaveModelData (  );                               		//  GUIWarfareControls.BTROModelWeapon.SaveModelData
	 void                      LoadSetModelData (  );                            		//  GUIWarfareControls.BTROModelWeapon.LoadSetModelData
	 void                      Set1st ( bool b1st );                             		//  GUIWarfareControls.BTROModelWeapon.Set1st
	 void                      Destroyed (  );                                   		// [ FUNC_Simulated ] GUIWarfareControls.BTROModelWeapon.Destroyed
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROModelWeapon.Init
}; // Size: 0x01B4

// Class GUIWarfareControls.BTWindowAlreadyGotTrophyHK
class DLL_IMPORT UBTWindowAlreadyGotTrophyHK : public UBTWindowSelectHK
{
public:
	struct FString                                     strLabelInfo;                                     		// 0x04C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelInfo2;                                    		// 0x04D0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelInfo2;                                     		// 0x04DC ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelInfo2;                                       		// 0x04EC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowAlreadyGotTrophyHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowAlreadyGotTrophyHK.InitComponent
}; // Size: 0x002C

// Class GUIWarfareControls.BTWindowQuestInfoHK
class DLL_IMPORT UBTWindowQuestInfoHK : public UBTWindowHK
{
public:
	class UBTACLQuestHK*                               ACLCompleteQuest;                                 		// 0x04AC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTACLQuestHK*                               ACLNewQuest;                                      		// 0x04B0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x04 ];                                  		// 0x04B4 ( 0x0040 ) 
	struct FString                                     strLabel[ 0x02 ];                                 		// 0x04F4 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         Label[ 0x04 ];                                    		// 0x050C ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelCompletedQuest[ 0x05 ];                    		// 0x051C ( 0x0050 ) 
	class UBTLabelQuestDescHK*                         LabelCompletedQuest[ 0x05 ];                      		// 0x056C ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelNewQuest[ 0x05 ];                          		// 0x0580 ( 0x0050 ) 
	class UBTLabelQuestDescHK*                         LabelNewQuest[ 0x05 ];                            		// 0x05D0 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      ResizeLabelNewQuest ( int pos, int Size );        		//  GUIWarfareControls.BTWindowQuestInfoHK.ResizeLabelNewQuest
	 void                      ResizeLabelCompletedQuest ( int pos, int Size );  		//  GUIWarfareControls.BTWindowQuestInfoHK.ResizeLabelCompletedQuest
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowQuestInfoHK.Internal_OnOpen
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowQuestInfoHK.InitComponent
}; // Size: 0x0138

// Class GUIWarfareControls.BTWindowPromotionHK2
class DLL_IMPORT UBTWindowPromotionHK2 : public UBTWindowHK
{
public:
	struct FString                                     strLevelUpItemEmpty;                              		// 0x04AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x04B8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelTopLine;                                  		// 0x04C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelPromotion;                                 		// 0x04D0 ( 0x0010 ) 
	class UBTLabelPromotionHK*                         LabelPromotion;                                   		// 0x04E0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabelContent;                                  		// 0x04E4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelContent;                                   		// 0x04F0 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelContent;                                     		// 0x0500 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelLevel;                                     		// 0x0504 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelLevel;                                       		// 0x0514 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelPoint;                                       		// 0x0518 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      SetPromotionItem ( int Exp );                     		//  GUIWarfareControls.BTWindowPromotionHK2.SetPromotionItem
	 void                      LabelPromotion_OnEndPhase ( int Phase );          		//  GUIWarfareControls.BTWindowPromotionHK2.LabelPromotion_OnEndPhase
	 void                      LabelPromotion_OnStartPhase ( int Phase );        		//  GUIWarfareControls.BTWindowPromotionHK2.LabelPromotion_OnStartPhase
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowPromotionHK2.Internal_OnOpen
	 void                      SetData ( int Level );                            		//  GUIWarfareControls.BTWindowPromotionHK2.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowPromotionHK2.InitComponent
}; // Size: 0x0070

// Class GUIWarfareControls.BTWindowPromotionHK
class DLL_IMPORT UBTWindowPromotionHK : public UBTWindowHK
{
public:
	struct FString                                     strLevelUpItemEmpty;                              		// 0x04AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x04B8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelTopLine;                                  		// 0x04C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelPromotion;                                 		// 0x04D0 ( 0x0010 ) 
	class UBTLabelPromotionHK*                         LabelPromotion;                                   		// 0x04E0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabelContent;                                  		// 0x04E4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbLabelContent;                                   		// 0x04F0 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelContent;                                     		// 0x0500 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelLevel;                                     		// 0x0504 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         LabelLevel;                                       		// 0x0514 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbEven[ 0x02 ];                                   		// 0x0518 ( 0x0020 ) 
	struct FFloatBox                                   fbOdd[ 0x03 ];                                    		// 0x0538 ( 0x0030 ) 
	class UBTItemBoxButtonHK*                          itemBox[ 0x03 ];                                  		// 0x0568 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelPromotion2;                                		// 0x0574 ( 0x0010 ) 
	struct FFloatBox                                   fbLabelContent2;                                  		// 0x0584 ( 0x0010 ) 
	struct FFloatBox                                   fbLabelLevel2;                                    		// 0x0594 ( 0x0010 ) 
	struct FFloatBox                                   fbBackgroundImage2;                               		// 0x05A4 ( 0x0010 ) 
	struct FFloatBox                                   fbTopLine2;                                       		// 0x05B4 ( 0x0010 ) 
	struct FFloatBox                                   fbBottomLine2;                                    		// 0x05C4 ( 0x0010 ) 
	struct FFloatBox                                   fbButtonOK2;                                      		// 0x05D4 ( 0x0010 ) 

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowPromotionHK.Internal_OnOpen
	 void                      SetPromotionItem ( int Exp, class TArray< int > ItemID, class TArray< int > PartID );		//  GUIWarfareControls.BTWindowPromotionHK.SetPromotionItem
	 void                      SetData ( int Level );                            		//  GUIWarfareControls.BTWindowPromotionHK.SetData
	 void                      LabelPromotion_OnEndPhase ( int Phase );          		//  GUIWarfareControls.BTWindowPromotionHK.LabelPromotion_OnEndPhase
	 void                      LabelPromotion_OnStartPhase ( int Phase );        		//  GUIWarfareControls.BTWindowPromotionHK.LabelPromotion_OnStartPhase
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowPromotionHK.InitComponent
}; // Size: 0x0138

// Class GUIWarfareControls.BTACLMatchResultHK
class DLL_IMPORT UBTACLMatchResultHK : public UBTAutoColumnListHK
{
public:
	struct FString                                     strStatus[ 0x04 ];                                		// 0x0460 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FImage                                      LevelImg;                                         		// 0x0490 ( 0x0020 ) 
	class TArray< struct FText >                       tarray;                                           		// 0x04B0 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLMatchResultHK.GetLevelMarkID
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLMatchResultHK.InitComponent
	 void                      LC9_10_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC9_10_Draw
	 void                      LC8_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC8_Draw
	 void                      LC3_Draw_Death ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC3_Draw_Death
	 void                      LC3_Draw_assist ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC3_Draw_assist
	 void                      LC3_Draw_kill ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC3_Draw_kill
	 void                      LC3_Draw_Score ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC3_Draw_Score
	 void                      LC3_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC3_Draw
	 void                      LC2_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC2_Draw
	 void                      LC1_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC1_Draw
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLMatchResultHK.LC0_Draw
	 class UBTAutoColumnListDataHK* FindTeamMember ( int UID );                       		//  GUIWarfareControls.BTACLMatchResultHK.FindTeamMember
	 bool                      RemoveTeamMemberByUID ( int UID );                		//  GUIWarfareControls.BTACLMatchResultHK.RemoveTeamMemberByUID
	 void                      AddTeamMemeber ( bool bMe, int UID, int ClanMark, int ClanBG, int ClanBL, int Level, struct FString NickName, struct FString ClanName, int Score, int Kill, int Assist, int Death, int Exp, int expup, int Point, int pointup, class TArray< int > BonusIDs, int LookingFor, bool bFriendly, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTACLMatchResultHK.AddTeamMemeber
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLMatchResultHK.GetItemHeight
}; // Size: 0x005C

// Class GUIWarfareControls.BTLabelCreditAnimationHK
class DLL_IMPORT UBTLabelCreditAnimationHK : public UBTOwnerDrawImageHK
{
public:
	float                                              LastTimeSeconds;                                  		// 0x03B4 ( 0x0004 ) 
	float                                              CurrentTop;                                       		// 0x03B8 ( 0x0004 ) 
	float                                              DeltaMultiplier;                                  		// 0x03BC ( 0x0004 ) 
	struct FScriptDelegate                             __OnEndCredit__Delegate;                          		// 0x03C0 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelCreditAnimationHK.Internal_OnRendered
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTLabelCreditAnimationHK.InitComponent
	 void                      IncreaseDelta (  );                               		//  GUIWarfareControls.BTLabelCreditAnimationHK.IncreaseDelta
	 void                      DecreaseDelta (  );                               		//  GUIWarfareControls.BTLabelCreditAnimationHK.DecreaseDelta
	 void                      OnEndCredit (  );                                 		//  GUIWarfareControls.BTLabelCreditAnimationHK.OnEndCredit
}; // Size: 0x0014

// Class GUIWarfareControls.BTSliderGripButtonHK
class DLL_IMPORT UBTSliderGripButtonHK : public UBTOwnerDrawCaptionButtonHK
{
public:
	struct FString                                     HightLight;                                       		// 0x04C4 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      OnRendered ( class UCanvas* C );                  		//  GUIWarfareControls.BTSliderGripButtonHK.OnRendered
	 bool                      CheckIn ( float X, float Y );                     		//  GUIWarfareControls.BTSliderGripButtonHK.CheckIn
	 void                      SetHighLight ( struct FString Value );            		//  GUIWarfareControls.BTSliderGripButtonHK.SetHighLight
}; // Size: 0x000C

// Class GUIWarfareControls.BTTPClanMarkListHK
class DLL_IMPORT UBTTPClanMarkListHK : public UGUITabPanel
{
public:
	int                                                OutLineHorzBorder;                                		// 0x0330 ( 0x0004 ) 
	int                                                OutLineVertBorder;                                		// 0x0334 ( 0x0004 ) 
	class UBTClanMarkImageListHK*                      ClanMarkList;                                     		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPClanMarkListHK.InitComponent
	 void                      AddItem ( int clanmarkid, int clanmarktype1, int clanmarktype2, int selltype, int DisplayOrder, struct FString clanmarkresource32, struct FString clanmarkresource128 );		//  GUIWarfareControls.BTTPClanMarkListHK.AddItem
	 void                      SetOutlineBorder ( int horz, int vert );          		//  GUIWarfareControls.BTTPClanMarkListHK.SetOutlineBorder
}; // Size: 0x000C

// Class GUIWarfareControls.BTROCreateClanMarkHK
class DLL_IMPORT UBTROCreateClanMarkHK : public URenderObject
{
public:
	unsigned long                                      bClanMarkSize128:1;                               		// 0x0040 ( 0x0004 )  [0x00000001]
	int                                                roClanMarkID;                                     		// 0x0044 ( 0x0004 ) 
	int                                                roType1;                                          		// 0x0048 ( 0x0004 ) 
	int                                                roType2;                                          		// 0x004C ( 0x0004 ) 
	int                                                LayerCount;                                       		// 0x0050 ( 0x0004 ) 
	int                                                clanmarkid[ 0x03 ];                               		// 0x0054 ( 0x000C ) 
	int                                                clanmarktype1[ 0x03 ];                            		// 0x0060 ( 0x000C ) 
	int                                                clanmarktype2[ 0x03 ];                            		// 0x006C ( 0x000C ) 
	unsigned long                                      bUseSellMark:1;                                   		// 0x0078 ( 0x0004 )  [0x00000001]
	int                                                selltype[ 0x03 ];                                 		// 0x007C ( 0x000C ) 
	int                                                DisplayOrder[ 0x03 ];                             		// 0x0088 ( 0x000C ) 
	struct FString                                     clanmarkresource32[ 0x03 ];                       		// 0x0094 ( 0x0024 ) [ CPF_NeedCtorLink ]
	struct FString                                     clanmarkresource128[ 0x03 ];                      		// 0x00B8 ( 0x0024 ) [ CPF_NeedCtorLink ]
	struct FImage                                      Background;                                       		// 0x00DC ( 0x0020 ) 
	struct FImage                                      Layer[ 0x03 ];                                    		// 0x00FC ( 0x0060 ) 
	struct FImage                                      Status;                                           		// 0x015C ( 0x0020 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROCreateClanMarkHK.Render
	 void                      Update ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROCreateClanMarkHK.Update
	 void                      SetData ( int LayerIndex, int clanmarkid, int clanmarktype1, int clanmarktype2, int selltype, int DisplayOrder, struct FString clanmarkresource32, struct FString clanmarkresource128 );		//  GUIWarfareControls.BTROCreateClanMarkHK.SetData
	 void                      SetClanMarkSize32 (  );                           		//  GUIWarfareControls.BTROCreateClanMarkHK.SetClanMarkSize32
	 void                      SetClanMarkSize128 (  );                          		//  GUIWarfareControls.BTROCreateClanMarkHK.SetClanMarkSize128
	 void                      SetClanMarkType ( int clanmarktype1, int clanmarktype2 );		//  GUIWarfareControls.BTROCreateClanMarkHK.SetClanMarkType
	 void                      SetClanMarkID ( int clanmarkid );                 		//  GUIWarfareControls.BTROCreateClanMarkHK.SetClanMarkID
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROCreateClanMarkHK.Init
}; // Size: 0x013C

// Class GUIWarfareControls.BTClanMarkHK
class DLL_IMPORT UBTClanMarkHK : public UBTOwnerDrawImageHK
{
public:
	class UBTROCreateClanMarkHK*                       ro;                                               		// 0x03B4 ( 0x0004 ) 

	// UScript Functions
	 bool                      Internal_OnDraw ( class UCanvas* C );             		//  GUIWarfareControls.BTClanMarkHK.Internal_OnDraw
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTClanMarkHK.InitComponent
}; // Size: 0x0004

// Class GUIWarfareControls.BTClanMarkImageListHK
class DLL_IMPORT UBTClanMarkImageListHK : public UBTAutoImageListHK
{
public:
	class TArray< class UBTROCreateClanMarkHK* >       DataPool;                                         		// 0x0384 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      ShowBGEtc (  );                                   		//  GUIWarfareControls.BTClanMarkImageListHK.ShowBGEtc
	 void                      ShowBGCircle (  );                                		//  GUIWarfareControls.BTClanMarkImageListHK.ShowBGCircle
	 void                      ShowBGShield (  );                                		//  GUIWarfareControls.BTClanMarkImageListHK.ShowBGShield
	 void                      ShowEtc (  );                                     		//  GUIWarfareControls.BTClanMarkImageListHK.ShowEtc
	 void                      ShowWeapon (  );                                  		//  GUIWarfareControls.BTClanMarkImageListHK.ShowWeapon
	 void                      ShowAnimal (  );                                  		//  GUIWarfareControls.BTClanMarkImageListHK.ShowAnimal
	 void                      ShowAll ( int clanmarktype1, int clanmarktype2 ); 		//  GUIWarfareControls.BTClanMarkImageListHK.ShowAll
	 void                      ResetItem (  );                                   		//  GUIWarfareControls.BTClanMarkImageListHK.ResetItem
	 void                      ClearItem (  );                                   		//  GUIWarfareControls.BTClanMarkImageListHK.ClearItem
	 void                      RemoveItem ( int clanmarkid );                    		//  GUIWarfareControls.BTClanMarkImageListHK.RemoveItem
	 void                      AddItem ( class UBTROCreateClanMarkHK* ro );      		//  GUIWarfareControls.BTClanMarkImageListHK.AddItem
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTClanMarkImageListHK.InitComponent
}; // Size: 0x000C

// Class GUIWarfareControls.BTItemInfoVertBoxHK
class DLL_IMPORT UBTItemInfoVertBoxHK : public UGUITabPanel
{
public:
	class UBTOwnerDrawImageHK*                         Panel;                                            		// 0x0330 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemBoxButtonHK*                          ItemBoxView;                                      		// 0x0334 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemStateBoxButtonHK*                     ItemStateView;                                    		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         LabelItemDescription;                             		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTMultiLineEditBoxHK*                       EditItemDescription;                              		// 0x0340 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTItemInfoVertBoxHK.InitComponent
	 void                      SetData ( class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo, class UwItemBoxHK* cItemInfo, class UwItemBoxInstanceHK* cInstanceInfo );		//  GUIWarfareControls.BTItemInfoVertBoxHK.SetData
}; // Size: 0x0014

// Class GUIWarfareControls.BTROItemStateBoxHK
class DLL_IMPORT UBTROItemStateBoxHK : public URenderObject
{
public:
	class UBTROWeaponStatusBarHK*                      WeaponState[ 0x06 ];                              		// 0x0040 ( 0x0018 ) 
	struct FText                                       textForm;                                         		// 0x0058 ( 0x001C ) [ CPF_NeedCtorLink ]
	class TArray< struct FText >                       textAmmosize;                                     		// 0x0074 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FText >                       textSkill;                                        		// 0x0080 ( 0x000C ) [ CPF_NeedCtorLink ]
	class FColor                                       plus_c;                                           		// 0x008C ( 0x0004 ) 
	class FColor                                       minus_c;                                          		// 0x0090 ( 0x0004 ) 
	struct FString                                     strDamage;                                        		// 0x0094 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSpread;                                        		// 0x00A0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strViewKick;                                      		// 0x00AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRateofFire;                                    		// 0x00B8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strMove;                                          		// 0x00C4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRange;                                         		// 0x00D0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strAmmoSize;                                      		// 0x00DC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strSkill;                                         		// 0x00E8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                X[ 0x04 ];                                        		// 0x00F4 ( 0x0010 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROItemStateBoxHK.Render
	 void                      SetTextWidthNSpace ( int width, int Space );      		//  GUIWarfareControls.BTROItemStateBoxHK.SetTextWidthNSpace
	 void                      SetTextDrawType ( unsigned char dt );             		//  GUIWarfareControls.BTROItemStateBoxHK.SetTextDrawType
	 void                      SetSkill ( struct FString Skill, struct FString mskill );		//  GUIWarfareControls.BTROItemStateBoxHK.SetSkill
	 void                      SetAmmoSize ( int clipsize, int MaxAmmo, int addopt1, int addopt2 );		//  GUIWarfareControls.BTROItemStateBoxHK.SetAmmoSize
	 void                      SetRange ( int Value, int Add );                  		//  GUIWarfareControls.BTROItemStateBoxHK.SetRange
	 void                      SetMove ( int Value, int Add );                   		//  GUIWarfareControls.BTROItemStateBoxHK.SetMove
	 void                      SetRateofFire ( int Value, int Add );             		//  GUIWarfareControls.BTROItemStateBoxHK.SetRateofFire
	 void                      SetViewKick ( int Value, int Add );               		//  GUIWarfareControls.BTROItemStateBoxHK.SetViewKick
	 void                      SetSpread ( int Value, int Add );                 		//  GUIWarfareControls.BTROItemStateBoxHK.SetSpread
	 void                      SetDamage ( int Value, int Add );                 		//  GUIWarfareControls.BTROItemStateBoxHK.SetDamage
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROItemStateBoxHK.Init
}; // Size: 0x00C4

// Class GUIWarfareControls.BTROItemStateBoxHKCN
class DLL_IMPORT UBTROItemStateBoxHKCN : public UBTROItemStateBoxHK
{
public:
	float                                              locYOffset;                                       		// 0x0104 ( 0x0004 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROItemStateBoxHKCN.Render
	 void                      SetTextWidthNSpace ( int width, int Space );      		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetTextWidthNSpace
	 void                      SetTextDrawType ( unsigned char dt );             		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetTextDrawType
	 void                      SetSkill ( struct FString Skill, struct FString mskill );		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetSkill
	 void                      SetAmmoSize ( int clipsize, int MaxAmmo, int addopt1, int addopt2 );		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetAmmoSize
	 void                      SetRange ( int Value, int Add );                  		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetRange
	 void                      SetMove ( int Value, int Add );                   		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetMove
	 void                      SetRateofFire ( int Value, int Add );             		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetRateofFire
	 void                      SetViewKick ( int Value, int Add );               		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetViewKick
	 void                      SetSpread ( int Value, int Add );                 		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetSpread
	 void                      SetDamage ( int Value, int Add );                 		//  GUIWarfareControls.BTROItemStateBoxHKCN.SetDamage
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROItemStateBoxHKCN.Init
}; // Size: 0x0004

// Class GUIWarfareControls.BTWindowCustomConfirm
class DLL_IMPORT UBTWindowCustomConfirm : public UBTWindowHK
{
public:
	struct FFloatBox                                   fbLabel[ 0x03 ];                                  		// 0x04AC ( 0x0030 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FString                                     strLabel[ 0x03 ];                                 		// 0x04DC ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         Label[ 0x03 ];                                    		// 0x0500 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strPoint;                                         		// 0x050C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCash;                                          		// 0x0518 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPartLabel[ 0x05 ];                             		// 0x0524 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         PartLabel[ 0x05 ];                                		// 0x0560 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         PartPointLabel[ 0x05 ];                           		// 0x0574 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         PartCashLabel[ 0x05 ];                            		// 0x0588 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         PartPointTextLabel[ 0x05 ];                       		// 0x059C ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         PartCashTextLabel[ 0x05 ];                        		// 0x05B0 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strCalcPrice[ 0x03 ];                             		// 0x05C4 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         CalcTextLabel[ 0x03 ];                            		// 0x05E8 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         CalcPointTextLabel[ 0x03 ];                       		// 0x05F4 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         CalcCashTextLabel[ 0x03 ];                        		// 0x0600 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         CalcPointLabel[ 0x03 ];                           		// 0x060C ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         CalcCashLabel[ 0x03 ];                            		// 0x0618 ( 0x000C ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strNotify;                                        		// 0x0624 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTMultiLineEditBoxHK*                       NotifyLabel;                                      		// 0x0630 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemBoxButtonHK*                          btnOrigCustomItems[ 0x05 ];                       		// 0x0634 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTItemBoxButtonHK*                          btnDestCustomItems[ 0x05 ];                       		// 0x0648 ( 0x0014 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                iSumItemPointPrice;                               		// 0x065C ( 0x0004 ) 
	int                                                iSumItemCashPrice;                                		// 0x0660 ( 0x0004 ) 

	// UScript Functions
	 void                      SetData ( int OrigUnionedPartID, int WantedUnionedPartID, int OrigPaintingID, int WantedPaintingID );		//  GUIWarfareControls.BTWindowCustomConfirm.SetData
	 void                      SetPrice ( int iIndex, int OrigPartID, int iWantedPartID, int OrigPaintID, int WantedPaintID );		//  GUIWarfareControls.BTWindowCustomConfirm.SetPrice
	 void                      SetItem ( int iOrigOrWanted, int iButtonIndex, int PartID, int PaintingID );		//  GUIWarfareControls.BTWindowCustomConfirm.SetItem
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowCustomConfirm.InitComponent
}; // Size: 0x01B8

// Class GUIWarfareControls.BTRORadioItemBoxHK
class DLL_IMPORT UBTRORadioItemBoxHK : public URenderObject
{
public:
	class UGUIController*                              PController;                                      		// 0x0040 ( 0x0004 ) 
	unsigned long                                      bSelect:1;                                        		// 0x0044 ( 0x0004 )  [0x00000001]
	struct FImage                                      RadioButton[ 0x03 ];                              		// 0x0048 ( 0x0060 ) 
	class UBTROItemBoxHK*                              itemBox;                                          		// 0x00A8 ( 0x0004 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTRORadioItemBoxHK.Render
	 void                      Init (  );                                        		//  GUIWarfareControls.BTRORadioItemBoxHK.Init
}; // Size: 0x006C

// Class GUIWarfareControls.BTModelWeaponHK
class DLL_IMPORT UBTModelWeaponHK : public UGUITabPanel
{
public:
	struct FString                                     LogStr;                                           		// 0x0330 ( 0x000C ) [ CPF_NeedCtorLink ]
	float                                              CurrentTime;                                      		// 0x033C ( 0x0004 ) 
	float                                              LastTime;                                         		// 0x0340 ( 0x0004 ) 
	class ABTROModelWeapon*                            cModel;                                           		// 0x0344 ( 0x0004 ) 

	// UScript Functions
	 bool                      Internal_OnKeyEvent ( float Delta, unsigned char* key, unsigned char* Action );		//  GUIWarfareControls.BTModelWeaponHK.Internal_OnKeyEvent
	 bool                      Internal_OnDraw ( class UCanvas* C );             		//  GUIWarfareControls.BTModelWeaponHK.Internal_OnDraw
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTModelWeaponHK.InitComponent
}; // Size: 0x0018

// Class GUIWarfareControls.BTLabelArrowStateHK
class DLL_IMPORT UBTLabelArrowStateHK : public UBTOwnerDrawImageHK
{
public:
	struct FImage                                      ArrowImage;                                       		// 0x03B4 ( 0x0020 ) 
	int                                                ArrowState;                                       		// 0x03D4 ( 0x0004 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelArrowStateHK.Internal_OnRendered
	 void                      SetData ( int Value );                            		//  GUIWarfareControls.BTLabelArrowStateHK.SetData
}; // Size: 0x0024

// Class GUIWarfareControls.BTROMapInfoHK
class DLL_IMPORT UBTROMapInfoHK : public URenderObject
{
public:
	int                                                FontMapNameSize;                                  		// 0x0040 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontColor;                                        		// 0x0044 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class FColor                                       FontShadowColor;                                  		// 0x0048 ( 0x0004 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	struct FImage                                      BackgroundImage;                                  		// 0x004C ( 0x0020 ) 
	struct FImage                                      MapImage;                                         		// 0x006C ( 0x0020 ) 
	struct FImage                                      ImageSupply[ 0x03 ];                              		// 0x008C ( 0x0060 ) 
	struct FString                                     strMapName;                                       		// 0x00EC ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROMapInfoHK.Render
	 void                      SetData ( struct FString MapName, class UMaterial* MapImg, class UMaterial* imgSupply0, class UMaterial* imgSupply1, class UMaterial* imgSupply2 );		//  GUIWarfareControls.BTROMapInfoHK.SetData
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROMapInfoHK.Init
}; // Size: 0x00B8

// Class GUIWarfareControls.BTTPOptionGraphicHK
class DLL_IMPORT UBTTPOptionGraphicHK : public UBTTPOptionBaseHK
{
public:
	unsigned long                                      bInGameResolutionChanged:1;                       		// 0x0700 ( 0x0004 )  [0x00000001]
	unsigned long                                      bChangeResolution:1;                              		// 0x0700 ( 0x0004 )  [0x00000002]
	unsigned long                                      bChangeGraphicOption:1;                           		// 0x0700 ( 0x0004 )  [0x00000004]
	struct FString                                     strDark;                                          		// 0x0704 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strBright;                                        		// 0x0710 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLow;                                           		// 0x071C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strHigh;                                          		// 0x0728 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x0A ];                                 		// 0x0734 ( 0x0078 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strBrightness;                                    		// 0x07AC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UButtonGroups*                               OptionGroup;                                      		// 0x07B8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	int                                                LastSimpleButtonPos;                              		// 0x07BC ( 0x0004 ) 
	struct FString                                     strResRatio[ 0x05 ];                              		// 0x07C0 ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FDisplayModeInfo                            CurrentInfo;                                      		// 0x07FC ( 0x0018 ) 
	struct FDisplayModeInfo                            InitInfo;                                         		// 0x0814 ( 0x0018 ) 
	struct FString                                     strGraphicQuality[ 0x06 ];                        		// 0x082C ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnChangeScreen__Delegate;                       		// 0x0874 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      OnHide_ComboBoxList (  );                         		//  GUIWarfareControls.BTTPOptionGraphicHK.OnHide_ComboBoxList
	 void                      OnShow_ComboBoxList (  );                         		//  GUIWarfareControls.BTTPOptionGraphicHK.OnShow_ComboBoxList
	 bool                      Content6_CanChangeValue ( int CurrentValue, int ChangeValue );		//  GUIWarfareControls.BTTPOptionGraphicHK.Content6_CanChangeValue
	 struct FString            Content6_ValueToString ( int Value );             		//  GUIWarfareControls.BTTPOptionGraphicHK.Content6_ValueToString
	 void                      Content2_OnChangeValue ( int ChangeValue );       		//  GUIWarfareControls.BTTPOptionGraphicHK.Content2_OnChangeValue
	 struct FString            Content2_ValueToString ( int Value );             		//  GUIWarfareControls.BTTPOptionGraphicHK.Content2_ValueToString
	 bool                      QualityRadio_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionGraphicHK.QualityRadio_OnClick
	 void                      BottonGore_OnSelect ( bool bOn );                 		//  GUIWarfareControls.BTTPOptionGraphicHK.BottonGore_OnSelect
	 bool                      SimpleButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionGraphicHK.SimpleButton_OnClick
	 void                      InitializeContent (  );                           		//  GUIWarfareControls.BTTPOptionGraphicHK.InitializeContent
	 void                      Content0_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionGraphicHK.Content0_OnChange
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionGraphicHK.InitComponent
	 float                     Clock (  );                                       		//  GUIWarfareControls.BTTPOptionGraphicHK.Clock
	 void                      LoadData (  );                                    		//  GUIWarfareControls.BTTPOptionGraphicHK.LoadData
	 void                      SaveData (  );                                    		//  GUIWarfareControls.BTTPOptionGraphicHK.SaveData
	 void                      DefaultResetData (  );                            		//  GUIWarfareControls.BTTPOptionGraphicHK.DefaultResetData
	 void                      ResetData (  );                                   		//  GUIWarfareControls.BTTPOptionGraphicHK.ResetData
	 void                      InitData (  );                                    		//  GUIWarfareControls.BTTPOptionGraphicHK.InitData
	 void                      OnChangeScreen ( int iScreenWidth, int iScreenHeight );		//  GUIWarfareControls.BTTPOptionGraphicHK.OnChangeScreen
}; // Size: 0x017C

// Class GUIWarfareControls.BTTPOptionSoundHK
class DLL_IMPORT UBTTPOptionSoundHK : public UBTTPOptionBaseHK
{
public:
	struct FString                                     strLow;                                           		// 0x0700 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strHigh;                                          		// 0x070C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x0A ];                                 		// 0x0718 ( 0x0078 ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned long                                      bUseSound:1;                                      		// 0x0790 ( 0x0004 )  [0x00000001]
	struct FOptionSoundInfo                            InitInfo;                                         		// 0x0794 ( 0x0010 ) 
	struct FOptionSoundInfo                            CurrentInfo;                                      		// 0x07A4 ( 0x0010 ) 

	// UScript Functions
	 void                      InitializeContent (  );                           		//  GUIWarfareControls.BTTPOptionSoundHK.InitializeContent
	 void                      Content4_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionSoundHK.Content4_OnSelect
	 void                      Content3_OnChangeValue ( int ChangeValue );       		//  GUIWarfareControls.BTTPOptionSoundHK.Content3_OnChangeValue
	 void                      Content2_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionSoundHK.Content2_OnSelect
	 void                      Content1_OnChangeValue ( int ChangeValue );       		//  GUIWarfareControls.BTTPOptionSoundHK.Content1_OnChangeValue
	 void                      Content0_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionSoundHK.Content0_OnSelect
	 void                      InitializeLabel (  );                             		//  GUIWarfareControls.BTTPOptionSoundHK.InitializeLabel
	 void                      LoadData (  );                                    		//  GUIWarfareControls.BTTPOptionSoundHK.LoadData
	 void                      SaveData (  );                                    		//  GUIWarfareControls.BTTPOptionSoundHK.SaveData
	 void                      ResetData (  );                                   		//  GUIWarfareControls.BTTPOptionSoundHK.ResetData
	 void                      DefaultResetData (  );                            		//  GUIWarfareControls.BTTPOptionSoundHK.DefaultResetData
	 void                      InitData (  );                                    		//  GUIWarfareControls.BTTPOptionSoundHK.InitData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionSoundHK.InitComponent
}; // Size: 0x00B4

// Class GUIWarfareControls.BTTPOptionInputHK
class DLL_IMPORT UBTTPOptionInputHK : public UBTTPOptionBaseHK
{
public:
	struct FString                                     strLow;                                           		// 0x0700 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strHigh;                                          		// 0x070C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x27 ];                                 		// 0x0718 ( 0x01D4 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strFunc[ 0x27 ];                                  		// 0x08EC ( 0x01D4 ) [ CPF_NeedCtorLink ]
	struct FString                                     strOn;                                            		// 0x0AC0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strOff;                                           		// 0x0ACC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strToggle;                                        		// 0x0AD8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strButton;                                        		// 0x0AE4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strWeak;                                          		// 0x0AF0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strStrong;                                        		// 0x0AFC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDefaultSensAim;                                		// 0x0B08 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strUseLeftHand;                                   		// 0x0B14 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strUseRightHand;                                  		// 0x0B20 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FOptionInputInfo                            InitInfo;                                         		// 0x0B2C ( 0x01A4 ) [ CPF_NeedCtorLink ]
	struct FOptionInputInfo                            CurrentInfo;                                      		// 0x0CD0 ( 0x01A4 ) [ CPF_NeedCtorLink ]
	struct FInputKeyInfo                               AllKeys[ 0xFF ];                                  		// 0x0E74 ( 0x27D8 ) [ CPF_Edit | CPF_EditConst | CPF_NeedCtorLink | CPF_NoExport ]

	// UScript Functions
	 void                      InitializeContent (  );                           		//  GUIWarfareControls.BTTPOptionInputHK.InitializeContent
	 void                      InitializeLabel (  );                             		//  GUIWarfareControls.BTTPOptionInputHK.InitializeLabel
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionInputHK.InitComponent
	 void                      BTOptionKeyButtonHK_OnChangeKey ( class UGUIComponent* Sender, struct FString NewKey );		//  GUIWarfareControls.BTTPOptionInputHK.BTOptionKeyButtonHK_OnChangeKey
	 void                      Content4_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionInputHK.Content4_OnSelect
	 void                      Content3_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionInputHK.Content3_OnSelect
	 void                      Content1_OnSelect ( bool bOn );                   		//  GUIWarfareControls.BTTPOptionInputHK.Content1_OnSelect
	 struct FString            Content0_ValueToStringAim ( int Value );          		//  GUIWarfareControls.BTTPOptionInputHK.Content0_ValueToStringAim
	 void                      Content0_OnChangeValueAim ( int ChangeValue );    		//  GUIWarfareControls.BTTPOptionInputHK.Content0_OnChangeValueAim
	 void                      Content0_OnChangeValue ( int ChangeValue );       		//  GUIWarfareControls.BTTPOptionInputHK.Content0_OnChangeValue
	 bool                      SaveUserKeySet (  );                              		//  GUIWarfareControls.BTTPOptionInputHK.SaveUserKeySet
	 void                      LoadData (  );                                    		//  GUIWarfareControls.BTTPOptionInputHK.LoadData
	 void                      SaveData (  );                                    		//  GUIWarfareControls.BTTPOptionInputHK.SaveData
	 void                      ResetData (  );                                   		//  GUIWarfareControls.BTTPOptionInputHK.ResetData
	 void                      SetStoreKey_THAILAND (  );                        		//  GUIWarfareControls.BTTPOptionInputHK.SetStoreKey_THAILAND
	 void                      SetStoreKey_CHINA (  );                           		//  GUIWarfareControls.BTTPOptionInputHK.SetStoreKey_CHINA
	 void                      SetStoreKey_KR (  );                              		//  GUIWarfareControls.BTTPOptionInputHK.SetStoreKey_KR
	 void                      DefaultResetData (  );                            		//  GUIWarfareControls.BTTPOptionInputHK.DefaultResetData
	 void                      InitData (  );                                    		//  GUIWarfareControls.BTTPOptionInputHK.InitData
	 void                      InitializeBindingsArray (  );                     		//  GUIWarfareControls.BTTPOptionInputHK.InitializeBindingsArray
}; // Size: 0x2F4C

// Class GUIWarfareControls.BTTPOptionETCHK
class DLL_IMPORT UBTTPOptionETCHK : public UBTTPOptionBaseHK
{
public:
	struct FETCModeInfo                                CurrentInfo;                                      		// 0x0700 ( 0x0020 ) [ CPF_NeedCtorLink ]
	struct FETCModeInfo                                InitInfo;                                         		// 0x0720 ( 0x0020 ) [ CPF_NeedCtorLink ]
	struct FString                                     strUsageRecord;                                   		// 0x0740 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabel[ 0x04 ];                                 		// 0x074C ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLanguage[ 0x02 ];                              		// 0x077C ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strMinimapType[ 0x03 ];                           		// 0x0794 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRecordResolution[ 0x0C ];                      		// 0x07B8 ( 0x0090 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRecordQuality[ 0x03 ];                         		// 0x0848 ( 0x0024 ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned char                                      iRecordStartOffset;                               		// 0x086C ( 0x0001 ) 
	unsigned long                                      bVoiceLangChanged:1;                              		// 0x0870 ( 0x0004 )  [0x00000001]

	// UScript Functions
	 int                       GetWidthOfScreen ( int iVideoMode );              		//  GUIWarfareControls.BTTPOptionETCHK.GetWidthOfScreen
	 void                      OnChangeScreen ( int iScreenWidth, int iScreenHeight );		//  GUIWarfareControls.BTTPOptionETCHK.OnChangeScreen
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPOptionETCHK.Internal_OnPreDraw
	 void                      ShowRecordMenu ( bool bVisible );                 		//  GUIWarfareControls.BTTPOptionETCHK.ShowRecordMenu
	 void                      OnSelect_RecordOption ( bool bOn );               		//  GUIWarfareControls.BTTPOptionETCHK.OnSelect_RecordOption
	 void                      OnChange_RecordResoultion ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionETCHK.OnChange_RecordResoultion
	 void                      Content0_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPOptionETCHK.Content0_OnChange
	 void                      DefaultResetData (  );                            		//  GUIWarfareControls.BTTPOptionETCHK.DefaultResetData
	 void                      ResetData (  );                                   		//  GUIWarfareControls.BTTPOptionETCHK.ResetData
	 void                      SaveData (  );                                    		//  GUIWarfareControls.BTTPOptionETCHK.SaveData
	 void                      LoadData (  );                                    		//  GUIWarfareControls.BTTPOptionETCHK.LoadData
	 void                      InitData (  );                                    		//  GUIWarfareControls.BTTPOptionETCHK.InitData
	 void                      InitializeContent (  );                           		//  GUIWarfareControls.BTTPOptionETCHK.InitializeContent
	 void                      InitializeLabel (  );                             		//  GUIWarfareControls.BTTPOptionETCHK.InitializeLabel
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionETCHK.InitComponent
}; // Size: 0x0174

// Class GUIWarfareControls.BTTPOptionGQAdvanceHK
class DLL_IMPORT UBTTPOptionGQAdvanceHK : public UBTTabPanelHK
{
public:
	struct FString                                     strButtonRadio;                                   		// 0x0338 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonRadio;                                    		// 0x0344 ( 0x0010 ) 
	class UBTCheckBoxHK*                               ButtonRadio;                                      		// 0x0354 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strButtonAdvance;                                 		// 0x0358 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonAdvance;                                  		// 0x0364 ( 0x0010 ) 
	class UBTOwnerDrawCaptionButtonHK*                 ButtonAdvance;                                    		// 0x0374 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPOptionGQAdvanceHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionGQAdvanceHK.InitComponent
}; // Size: 0x0040

// Class GUIWarfareControls.BTIconButtonHK
class DLL_IMPORT UBTIconButtonHK : public UBTOwnerDrawCaptionButtonHK
{
public:
	int                                                SpaceINT;                                         		// 0x04C4 ( 0x0004 ) 
	unsigned char                                      IconSide;                                         		// 0x04C8 ( 0x0001 ) 
	struct FImage                                      IconImage;                                        		// 0x04CC ( 0x0020 ) 

	// UScript Functions
	 void                      OnRendered ( class UCanvas* C );                  		//  GUIWarfareControls.BTIconButtonHK.OnRendered
	 void                      SetData ( struct FImage img, unsigned char side, struct FString Text, int Space );		//  GUIWarfareControls.BTIconButtonHK.SetData
}; // Size: 0x0028

// Class GUIWarfareControls.DragObject
class DLL_IMPORT UDragObject : public URenderObject
{
public:
	class URenderObject*                               RegRO;                                            		// 0x0040 ( 0x0004 ) 
	int                                                StartX;                                           		// 0x0044 ( 0x0004 ) 
	int                                                StartY;                                           		// 0x0048 ( 0x0004 ) 
	struct FFloatBox                                   fbRegRO;                                          		// 0x004C ( 0x0010 ) 
	int                                                RegROIndex;                                       		// 0x005C ( 0x0004 ) 

	// UScript Functions
	 int                       GetOptionalIndex (  );                            		//  GUIWarfareControls.DragObject.GetOptionalIndex
	 bool                      IsDragging (  );                                  		//  GUIWarfareControls.DragObject.IsDragging
	 void                      EndDrag (  );                                     		//  GUIWarfareControls.DragObject.EndDrag
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.DragObject.Render
	 void                      UpdateMousePos ( int MouseX, int MouseY );        		//  GUIWarfareControls.DragObject.UpdateMousePos
	 class URenderObject*      GetRenderObject (  );                             		//  GUIWarfareControls.DragObject.GetRenderObject
	 void                      BeginDrag ( int MouseX, int MouseY, class URenderObject* ro, int roIndex );		//  GUIWarfareControls.DragObject.BeginDrag
}; // Size: 0x0020

// Class GUIWarfareControls.BTWindowItemRenew
class DLL_IMPORT UBTWindowItemRenew : public UBTWindowHK
{
public:
	int                                                ItemID;                                           		// 0x04AC ( 0x0004 ) 
	struct FBtrDouble                                  UniqueID;                                         		// 0x04B0 ( 0x0008 ) 
	unsigned char                                      OptionDay;                                        		// 0x04B8 ( 0x0001 ) 
	int                                                iMoney;                                           		// 0x04BC ( 0x0004 ) 
	int                                                iAfterMoney;                                      		// 0x04C0 ( 0x0004 ) 
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x04C4 ( 0x0004 ) 
	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x04C8 ( 0x0004 ) 
	class UwItemBoxCashHK*                             cii;                                              		// 0x04CC ( 0x0004 ) 
	class UBTOwnerDrawImageHK*                         lbItemName;                                       		// 0x04D0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         lbItemRemaingTime;                                		// 0x04D4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbItemName;                                       		// 0x04D8 ( 0x0010 ) 
	struct FFloatBox                                   fbItemRemaingTime;                                		// 0x04E8 ( 0x0010 ) 
	struct FString                                     strItemRemaingTime;                               		// 0x04F8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbItemBoxView;                                    		// 0x0504 ( 0x0010 ) 
	class UBTItemBoxButtonHK*                          ItemBoxView;                                      		// 0x0514 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         lbRenewTerm;                                      		// 0x0518 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbRenewTerm;                                      		// 0x051C ( 0x0010 ) 
	struct FString                                     strRenewTerm;                                     		// 0x052C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTComboBoxHK*                               cbRenewTermList;                                  		// 0x0538 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbRenewTermList;                                  		// 0x053C ( 0x0010 ) 
	class UBTOwnerDrawCaptionButtonHK*                 btButtonCash;                                     		// 0x054C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonCash;                                     		// 0x0550 ( 0x0010 ) 
	struct FString                                     strButtnCash;                                     		// 0x0560 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         imgItemRenewBack;                                 		// 0x056C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbItemRenewBack;                                  		// 0x0570 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         lbMyMoney[ 0x04 ];                                		// 0x0580 ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbMyMoney[ 0x04 ];                                		// 0x0590 ( 0x0040 ) 
	struct FString                                     strMyMoney[ 0x02 ];                               		// 0x05D0 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCount;                                         		// 0x05E8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDay;                                           		// 0x05F4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCash;                                          		// 0x0600 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x060C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned char                                      cashType;                                         		// 0x0618 ( 0x0001 ) 
	struct FString                                     strCCoinCash;                                     		// 0x061C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTROItemBoxHK*                              ro;                                               		// 0x0628 ( 0x0004 ) 

	// UScript Functions
	 void                      SetCashType ( unsigned char buyCashType );        		//  GUIWarfareControls.BTWindowItemRenew.SetCashType
	 struct FString            GetCoinString (  );                               		//  GUIWarfareControls.BTWindowItemRenew.GetCoinString
	 bool                      InternalOnPreDraw ( class UCanvas* C );           		//  GUIWarfareControls.BTWindowItemRenew.InternalOnPreDraw
	 void                      UpdateAfterMoney (  );                            		//  GUIWarfareControls.BTWindowItemRenew.UpdateAfterMoney
	 struct FString            GetFormatMoney ( int iCurMoney, int iPayMoney, struct FString strMoney );		//  GUIWarfareControls.BTWindowItemRenew.GetFormatMoney
	 void                      SetMoney ( int iPoint, int iCash, int iCCoin );   		//  GUIWarfareControls.BTWindowItemRenew.SetMoney
	 void                      SetRenderObject ( class UBTROItemBoxHK* ro, class UwItemBoxHK* itemInfoBase, class UwItemBoxInstanceHK* itemInst, class UwItemBoxCashHK* Cash );		//  GUIWarfareControls.BTWindowItemRenew.SetRenderObject
	 void                      cbRenewTermList_OnChange ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowItemRenew.cbRenewTermList_OnChange
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowItemRenew.InitComponent
}; // Size: 0x0180

// Class GUIWarfareControls.BTWindowItemBuyTerm
class DLL_IMPORT UBTWindowItemBuyTerm : public UBTWindowHK
{
public:
	int                                                ItemID;                                           		// 0x04AC ( 0x0004 ) 
	struct FBtrDouble                                  UniqueID;                                         		// 0x04B0 ( 0x0008 ) 
	unsigned char                                      OptionDay;                                        		// 0x04B8 ( 0x0001 ) 
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x04BC ( 0x0004 ) 
	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x04C0 ( 0x0004 ) 
	class UwItemBoxCashHK*                             cii;                                              		// 0x04C4 ( 0x0004 ) 
	struct FFloatBox                                   fbItemBoxView;                                    		// 0x04C8 ( 0x0010 ) 
	class UBTItemBoxButtonHK*                          ItemBoxView;                                      		// 0x04D8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         lbBriefingInfo[ 0x04 ];                           		// 0x04DC ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbBriefingInfo[ 0x04 ];                           		// 0x04EC ( 0x0040 ) 
	struct FString                                     strBriefingInfo[ 0x04 ];                          		// 0x052C ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         lbItemName;                                       		// 0x055C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbItemName;                                       		// 0x0560 ( 0x0010 ) 
	struct FString                                     strItemRemaingTime;                               		// 0x0570 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strRemaingTerm[ 0x02 ];                           		// 0x057C ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strItemRenewal;                                   		// 0x0594 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawImageHK*                         imgItemSelectBack;                                		// 0x05A0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbItemSelectBack;                                 		// 0x05A4 ( 0x0010 ) 
	class UBTROItemBoxHK*                              ro;                                               		// 0x05B4 ( 0x0004 ) 
	int                                                cashType;                                         		// 0x05B8 ( 0x0004 ) 

	// UScript Functions
	 void                      SetCashType ( int buyCashType );                  		//  GUIWarfareControls.BTWindowItemBuyTerm.SetCashType
	 void                      SetOptionDay ( unsigned char iDay );              		//  GUIWarfareControls.BTWindowItemBuyTerm.SetOptionDay
	 void                      SetData ( int iItemID, struct FBtrDouble iUniqueID, class UwItemBoxHK* itemInfoBase );		//  GUIWarfareControls.BTWindowItemBuyTerm.SetData
	 void                      SetRenderObject ( class UBTROItemBoxHK* ro );     		//  GUIWarfareControls.BTWindowItemBuyTerm.SetRenderObject
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowItemBuyTerm.InitComponent
}; // Size: 0x0110

// Class GUIWarfareControls.BTWindowTenderHK
class DLL_IMPORT UBTWindowTenderHK : public UBTWindowHK
{
public:
	struct FString                                     ItemName;                                         		// 0x04AC ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                ItemID;                                           		// 0x04B8 ( 0x0004 ) 
	int                                                PartID;                                           		// 0x04BC ( 0x0004 ) 
	int                                                Damage;                                           		// 0x04C0 ( 0x0004 ) 
	int                                                OverlapCount;                                     		// 0x04C4 ( 0x0004 ) 
	int                                                UniqueID;                                         		// 0x04C8 ( 0x0004 ) 
	int                                                MyTender;                                         		// 0x04CC ( 0x0004 ) 
	int                                                MaxPrice;                                         		// 0x04D0 ( 0x0004 ) 
	struct FFloatBox                                   fbItemInfoBox;                                    		// 0x04D4 ( 0x0010 ) 
	class UBTItemInfoVertBoxHK*                        ItemInfoBox;                                      		// 0x04E4 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbSeparator;                                      		// 0x04E8 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         Separator;                                        		// 0x04F8 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x02 ];                                  		// 0x04FC ( 0x0020 ) 
	struct FFloatBox                                   fbEdit[ 0x02 ];                                   		// 0x051C ( 0x0020 ) 
	class UBTOwnerDrawImageHK*                         Label[ 0x02 ];                                    		// 0x053C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         Edit[ 0x02 ];                                     		// 0x0544 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbNEditBox[ 0x02 ];                               		// 0x054C ( 0x0020 ) 
	class UBTNumericEditBoxHK*                         NEditBox[ 0x02 ];                                 		// 0x056C ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelWarning;                                   		// 0x0574 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelWarning;                                     		// 0x0584 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabel[ 0x02 ];                                 		// 0x0588 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelWarning[ 0x04 ];                          		// 0x05A0 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnOpen (  );                             		//  GUIWarfareControls.BTWindowTenderHK.Internal_OnOpen
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTWindowTenderHK.Internal_OnRendered
	 void                      SetData ( int MyPoint, int InstantlyPrice, int iUniqueID, int iItemID, int iPartID, int iDamage, float CurrentTender, struct FString HightestBidUser, int iOverlapCount );		//  GUIWarfareControls.BTWindowTenderHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowTenderHK.InitComponent
}; // Size: 0x0124

// Class GUIWarfareControls.BTWindowInstantlyBuyHK
class DLL_IMPORT UBTWindowInstantlyBuyHK : public UBTWindowHK
{
public:
	struct FString                                     ItemName;                                         		// 0x04AC ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                ItemID;                                           		// 0x04B8 ( 0x0004 ) 
	int                                                PartID;                                           		// 0x04BC ( 0x0004 ) 
	int                                                Damage;                                           		// 0x04C0 ( 0x0004 ) 
	int                                                OverlapCount;                                     		// 0x04C4 ( 0x0004 ) 
	int                                                UniqueID;                                         		// 0x04C8 ( 0x0004 ) 
	struct FFloatBox                                   fbItemInfoBox;                                    		// 0x04CC ( 0x0010 ) 
	class UBTItemInfoVertBoxHK*                        ItemInfoBox;                                      		// 0x04DC ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbSeparator;                                      		// 0x04E0 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         Separator;                                        		// 0x04F0 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabel[ 0x02 ];                                  		// 0x04F4 ( 0x0020 ) 
	struct FFloatBox                                   fbEdit;                                           		// 0x0514 ( 0x0010 ) 
	class UBTOwnerDrawImageHK*                         Label[ 0x02 ];                                    		// 0x0524 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTOwnerDrawImageHK*                         Edit;                                             		// 0x052C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbNEditBox;                                       		// 0x0530 ( 0x0010 ) 
	class UBTNumericEditBoxHK*                         NEditBox;                                         		// 0x0540 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbLabelWarning;                                   		// 0x0544 ( 0x0010 ) [ CPF_Edit | CPF_EditInline | CPF_EditInlineNotify ]
	class UBTOwnerDrawImageHK*                         LabelWarning;                                     		// 0x0554 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLabel[ 0x02 ];                                 		// 0x0558 ( 0x0018 ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLabelWarning[ 0x04 ];                          		// 0x0570 ( 0x0030 ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetData ( int MyPoint, int InstantlyPrice, int iUniqueID, int iItemID, int iPartID, int iDamage, int iOverlapCount );		//  GUIWarfareControls.BTWindowInstantlyBuyHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowInstantlyBuyHK.InitComponent
}; // Size: 0x00F4

// Class GUIWarfareControls.BTOwnerDrawMyNameMyClanHK
class DLL_IMPORT UBTOwnerDrawMyNameMyClanHK : public UBTOwnerDrawImageHK
{
public:
	int                                                Level;                                            		// 0x03B4 ( 0x0004 ) 
	int                                                ClanBG;                                           		// 0x03B8 ( 0x0004 ) 
	struct FImage                                      LevelImg;                                         		// 0x03BC ( 0x0020 ) 
	struct FImage                                      ClanImg;                                          		// 0x03DC ( 0x0020 ) 
	struct FText                                       myName;                                           		// 0x03FC ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       MyClan;                                           		// 0x0418 ( 0x001C ) [ CPF_NeedCtorLink ]
	class UBTROClanMarkHK*                             roClanMark;                                       		// 0x0434 ( 0x0004 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTOwnerDrawMyNameMyClanHK.Internal_OnRendered
	 void                      SetData ( int Lv, struct FString myName, struct FString MyClan, int Pattern, int BG, int BL, int ClanLevel, int LevelMarkID );		//  GUIWarfareControls.BTOwnerDrawMyNameMyClanHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTOwnerDrawMyNameMyClanHK.InitComponent
}; // Size: 0x0084

// Class GUIWarfareControls.BTROLevelHK
class DLL_IMPORT UBTROLevelHK : public URenderObject
{
public:
	int                                                Level;                                            		// 0x0040 ( 0x0004 ) 
	struct FImage                                      Background;                                       		// 0x0044 ( 0x0020 ) 
	struct FImage                                      LevelImg;                                         		// 0x0064 ( 0x0020 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROLevelHK.Render
	 void                      Update ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROLevelHK.Update
	 void                      SetData ( class UwGameManager* GameMgr, int Level, int LevelMarkID );		//  GUIWarfareControls.BTROLevelHK.SetData
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROLevelHK.Init
}; // Size: 0x0044

// Class GUIWarfareControls.BTAniItemBoxButtonHK
class DLL_IMPORT UBTAniItemBoxButtonHK : public UBTOwnerDrawCaptionButtonHK
{
public:
	class UBTROAniItemBoxHK*                           itemBox;                                          		// 0x04C4 ( 0x0004 ) 
	struct FString                                     DefaultSlotName[ 0x02 ];                          		// 0x04C8 ( 0x0018 ) [ CPF_NeedCtorLink ]
	struct FPlane                                      DefaultSlotModulate;                              		// 0x04E0 ( 0x0010 ) 
	struct FImage                                      DefaultSlotImage;                                 		// 0x04F0 ( 0x0020 ) 

	// UScript Functions
	 bool                      Internal_OnDraw ( class UCanvas* C );             		//  GUIWarfareControls.BTAniItemBoxButtonHK.Internal_OnDraw
	 void                      SetData ( class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo );		//  GUIWarfareControls.BTAniItemBoxButtonHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTAniItemBoxButtonHK.InitComponent
}; // Size: 0x004C

// Class GUIWarfareControls.BTROAniItemBoxHK
class DLL_IMPORT UBTROAniItemBoxHK : public URenderObject
{
public:
	class UwGameManager*                               GameMgr;                                          		// 0x0040 ( 0x0004 ) 
	unsigned long                                      bStartAni:1;                                      		// 0x0044 ( 0x0004 )  [0x00000001]
	float                                              RollAniStep;                                      		// 0x0048 ( 0x0004 ) 
	float                                              RollAniNextMulStep;                               		// 0x004C ( 0x0004 ) 
	int                                                RollCount;                                        		// 0x0050 ( 0x0004 ) 
	int                                                RollMaxCount;                                     		// 0x0054 ( 0x0004 ) 
	unsigned long                                      bLastReverseRoll:1;                               		// 0x0058 ( 0x0004 )  [0x00000001]
	float                                              RollStartX;                                       		// 0x005C ( 0x0004 ) 
	unsigned long                                      bScaleAni:1;                                      		// 0x0060 ( 0x0004 )  [0x00000001]
	float                                              ScaleAniStep;                                     		// 0x0064 ( 0x0004 ) 
	float                                              ScaleStartX;                                      		// 0x0068 ( 0x0004 ) 
	float                                              ScaleAniMax;                                      		// 0x006C ( 0x0004 ) 
	float                                              ScaleAniNextMulStep;                              		// 0x0070 ( 0x0004 ) 
	unsigned long                                      bScaleAni2:1;                                     		// 0x0074 ( 0x0004 )  [0x00000001]
	float                                              ScaleAniStep2;                                    		// 0x0078 ( 0x0004 ) 
	float                                              ScaleStartX2;                                     		// 0x007C ( 0x0004 ) 
	float                                              ScaleAniMax2;                                     		// 0x0080 ( 0x0004 ) 
	float                                              ScaleAniNextMulStep2;                             		// 0x0084 ( 0x0004 ) 
	int                                                CandidateSize;                                    		// 0x0088 ( 0x0004 ) 
	unsigned long                                      bDragMode:1;                                      		// 0x008C ( 0x0004 )  [0x00000001]
	unsigned long                                      bRedAuction:1;                                    		// 0x008C ( 0x0004 )  [0x00000002]
	unsigned long                                      bRedState:1;                                      		// 0x008C ( 0x0004 )  [0x00000004]
	unsigned long                                      bDisplayPart:1;                                   		// 0x008C ( 0x0004 )  [0x00000008]
	struct FText                                       PartName;                                         		// 0x0090 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FString                                     PartSkillName;                                    		// 0x00AC ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FImage                                      PartImage;                                        		// 0x00B8 ( 0x0020 ) 
	class UwItemBoxHK*                                 ItemInfo;                                         		// 0x00D8 ( 0x0004 ) 
	class TArray< class UwItemBoxHK* >                 ItemInfoPool;                                     		// 0x00DC ( 0x000C ) [ CPF_NeedCtorLink ]
	class UwItemBoxInstanceHK*                         instanceInfo;                                     		// 0x00E8 ( 0x0004 ) 
	struct FText                                       ItemName;                                         		// 0x00EC ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       GradeName;                                        		// 0x0108 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FText                                       UnderTextForm;                                    		// 0x0124 ( 0x001C ) [ CPF_NeedCtorLink ]
	struct FImage                                      ItemImage;                                        		// 0x0140 ( 0x0020 ) 
	struct FImage                                      EquipLevelImage;                                  		// 0x0160 ( 0x0020 ) 
	class UBTROExpBarHK*                               ItemDurability;                                   		// 0x0180 ( 0x0004 ) 
	struct FImage                                      RepairIconImage;                                  		// 0x0184 ( 0x0020 ) 
	struct FImage                                      CashIconImage;                                    		// 0x01A4 ( 0x0020 ) 
	struct FImage                                      PointIconImage;                                   		// 0x01C4 ( 0x0020 ) 
	unsigned long                                      bDotSight:1;                                      		// 0x01E4 ( 0x0004 )  [0x00000001]
	unsigned long                                      bScope:1;                                         		// 0x01E4 ( 0x0004 )  [0x00000002]
	unsigned long                                      bSilencer:1;                                      		// 0x01E4 ( 0x0004 )  [0x00000004]
	unsigned long                                      bSkill:1;                                         		// 0x01E4 ( 0x0004 )  [0x00000008]
	struct FImage                                      dotImg;                                           		// 0x01E8 ( 0x0020 ) 
	struct FImage                                      scoImg;                                           		// 0x0208 ( 0x0020 ) 
	struct FImage                                      silImg;                                           		// 0x0228 ( 0x0020 ) 
	struct FImage                                      skiImg;                                           		// 0x0248 ( 0x0020 ) 
	unsigned long                                      bBackgroundInfo:1;                                		// 0x0268 ( 0x0004 )  [0x00000001]
	unsigned long                                      bShowDurability:1;                                		// 0x0268 ( 0x0004 )  [0x00000002]
	unsigned long                                      bShowPrice:1;                                     		// 0x0268 ( 0x0004 )  [0x00000004]
	unsigned long                                      bShowDamage:1;                                    		// 0x0268 ( 0x0004 )  [0x00000008]
	unsigned long                                      bShowEquipLevel:1;                                		// 0x0268 ( 0x0004 )  [0x00000010]
	unsigned long                                      bShowRestrictionLevel:1;                          		// 0x0268 ( 0x0004 )  [0x00000020]
	unsigned long                                      bShowRestrictionPrice:1;                          		// 0x0268 ( 0x0004 )  [0x00000040]
	unsigned long                                      bShowRestrictionDurability:1;                     		// 0x0268 ( 0x0004 )  [0x00000080]
	class UBTItemCommonInfoHK*                         MyData;                                           		// 0x026C ( 0x0004 ) 
	class FColor                                       colCurrentUntilTime;                              		// 0x0270 ( 0x0004 ) 
	struct FString                                     strCurrentUntilTime;                              		// 0x0274 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strGradeBase;                                     		// 0x0280 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeShop;                                     		// 0x028C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeCommon;                                   		// 0x0298 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeNormal;                                   		// 0x02A4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeHigh;                                     		// 0x02B0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeRare;                                     		// 0x02BC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strGradeLegend;                                   		// 0x02C8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDurability;                                    		// 0x02D4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDamage;                                        		// 0x02E0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strLeftTime[ 0x05 ];                              		// 0x02EC ( 0x003C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPoint;                                         		// 0x0328 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCash;                                          		// 0x0334 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                RRIndex;                                          		// 0x0340 ( 0x0004 ) 
	unsigned long                                      bRegisterQuickSlot:1;                             		// 0x0344 ( 0x0004 )  [0x00000001]
	struct FString                                     strRestrictionReason[ 0x06 ];                     		// 0x0348 ( 0x0048 ) [ CPF_Localized | CPF_NeedCtorLink ]
	unsigned char                                      InvenState;                                       		// 0x0390 ( 0x0001 ) 
	struct FScriptDelegate                             __OnStartScaleAni__Delegate;                      		// 0x0394 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnScaleAniChanged__Delegate;                    		// 0x039C ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnDramaEnded__Delegate;                         		// 0x03A4 ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnChangeItemInfo__Delegate;                     		// 0x03AC ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnChangeItemInfoEnd__Delegate;                  		// 0x03B4 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetGameManager ( class UwGameManager* gm );       		//  GUIWarfareControls.BTROAniItemBoxHK.SetGameManager
	 void                      CheckRedAuction (  );                             		//  GUIWarfareControls.BTROAniItemBoxHK.CheckRedAuction
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROAniItemBoxHK.Render
	 void                      OnChangeItemInfoEnd (  );                         		//  GUIWarfareControls.BTROAniItemBoxHK.OnChangeItemInfoEnd
	 void                      OnChangeItemInfo ( int Index );                   		//  GUIWarfareControls.BTROAniItemBoxHK.OnChangeItemInfo
	 void                      SetCandidateListSize ( int CandidateSize );       		//  GUIWarfareControls.BTROAniItemBoxHK.SetCandidateListSize
	 void                      Update ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROAniItemBoxHK.Update
	 bool                      IsEmpty (  );                                     		//  GUIWarfareControls.BTROAniItemBoxHK.IsEmpty
	 void                      UpdateTime ( struct FBtrDouble D );               		//  GUIWarfareControls.BTROAniItemBoxHK.UpdateTime
	 struct FString            GradeToText ( int Grade );                        		//  GUIWarfareControls.BTROAniItemBoxHK.GradeToText
	 class FColor              GradeToColor ( int Grade );                       		//  GUIWarfareControls.BTROAniItemBoxHK.GradeToColor
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROAniItemBoxHK.Init
	 void                      ChangeState ( unsigned char estate );             		//  GUIWarfareControls.BTROAniItemBoxHK.ChangeState
	 void                      OnDramaEnded (  );                                		//  GUIWarfareControls.BTROAniItemBoxHK.OnDramaEnded
	 void                      OnScaleAniChanged ( float scaleValue, float ScaleMax );		//  GUIWarfareControls.BTROAniItemBoxHK.OnScaleAniChanged
	 void                      OnStartScaleAni ( float scaleValue, float ScaleMax );		//  GUIWarfareControls.BTROAniItemBoxHK.OnStartScaleAni
}; // Size: 0x037C

// Class GUIWarfareControls.BTTPItemUIStatusHK
class DLL_IMPORT UBTTPItemUIStatusHK : public UBTOwnerDrawImageHK
{
public:
	class UBTROItemUIStatusHK*                         ro;                                               		// 0x03B4 ( 0x0004 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTTPItemUIStatusHK.Internal_OnRendered
	 void                      SetData ( class UwItemBoxHK* ib, class UwItemBoxInstanceHK* ibi, class UwItemBoxHK* cib, class UwItemBoxInstanceHK* cibi );		//  GUIWarfareControls.BTTPItemUIStatusHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPItemUIStatusHK.InitComponent
}; // Size: 0x0004

// Class GUIWarfareControls.BTLabelSlideAnimationHK
class DLL_IMPORT UBTLabelSlideAnimationHK : public UBTOwnerDrawImageHK
{
public:
	unsigned long                                      bStartSlide:1;                                    		// 0x03B4 ( 0x0004 )  [0x00000001]
	float                                              StartTimeSecond;                                  		// 0x03B8 ( 0x0004 ) 
	float                                              SlideTime;                                        		// 0x03BC ( 0x0004 ) 

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelSlideAnimationHK.Internal_OnRendered
	 void                      SetStartTime (  );                                		//  GUIWarfareControls.BTLabelSlideAnimationHK.SetStartTime
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTLabelSlideAnimationHK.InitComponent
}; // Size: 0x000C

// Class GUIWarfareControls.BTROItemUIStatusHK
class DLL_IMPORT UBTROItemUIStatusHK : public URenderObject
{
public:
	class TArray< struct FText >                       textAmmosize;                                     		// 0x0040 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FText >                       textSkill;                                        		// 0x004C ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strStatus[ 0x08 ];                                		// 0x0058 ( 0x0060 ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                HalfX;                                            		// 0x00B8 ( 0x0004 ) 
	int                                                StatusSX;                                         		// 0x00BC ( 0x0004 ) 
	int                                                StatusEX;                                         		// 0x00C0 ( 0x0004 ) 
	int                                                GaugeSX;                                          		// 0x00C4 ( 0x0004 ) 
	int                                                GaugeEX;                                          		// 0x00C8 ( 0x0004 ) 
	int                                                ValueX;                                           		// 0x00CC ( 0x0004 ) 
	class UBTROWeaponUIGaugeHK*                        WeaponStatus[ 0x08 ];                             		// 0x00D0 ( 0x0020 ) 
	int                                                TopPad;                                           		// 0x00F0 ( 0x0004 ) 
	int                                                ItemHeight;                                       		// 0x00F4 ( 0x0004 ) 
	int                                                BottomPad;                                        		// 0x00F8 ( 0x0004 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROItemUIStatusHK.Render
	 void                      SetPos ( int StatusSX, int GaugeSX, int GaugeEX, int ValueX, int StatusEX );		//  GUIWarfareControls.BTROItemUIStatusHK.SetPos
	 void                      Update ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROItemUIStatusHK.Update
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROItemUIStatusHK.Init
	 void                      SetHeight ( int TopPad, int ItemHeight, int BottomPad );		//  GUIWarfareControls.BTROItemUIStatusHK.SetHeight
	 void                      SetSkill ( struct FString Skill, struct FString mskill );		//  GUIWarfareControls.BTROItemUIStatusHK.SetSkill
	 void                      SetAmmoSize ( int clipsize, int MaxAmmo, int addopt1, int addopt2 );		//  GUIWarfareControls.BTROItemUIStatusHK.SetAmmoSize
	 void                      SetRange ( int Value, int Add );                  		//  GUIWarfareControls.BTROItemUIStatusHK.SetRange
	 void                      SetMove ( int Value, int Add );                   		//  GUIWarfareControls.BTROItemUIStatusHK.SetMove
	 void                      SetRateofFire ( int Value, int Add );             		//  GUIWarfareControls.BTROItemUIStatusHK.SetRateofFire
	 void                      SetViewKick ( int Value, int Add );               		//  GUIWarfareControls.BTROItemUIStatusHK.SetViewKick
	 void                      SetSpread ( int Value, int Add );                 		//  GUIWarfareControls.BTROItemUIStatusHK.SetSpread
	 void                      SetDamage ( int Value, int Add );                 		//  GUIWarfareControls.BTROItemUIStatusHK.SetDamage
}; // Size: 0x00BC

// Class GUIWarfareControls.BTWindowSelectCashTypeHK
class DLL_IMPORT UBTWindowSelectCashTypeHK : public UBTWindowSelectHK
{
public:
	class UBTOwnerDrawCaptionButtonHK*                 ButtonPCash;                                      		// 0x04C4 ( 0x0004 ) [ CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineNotify ]
	struct FFloatBox                                   fbButtonPCash;                                    		// 0x04C8 ( 0x0010 ) 
	struct FString                                     strCaption;                                       		// 0x04D8 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strCCoin;                                         		// 0x04E4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strPCoin;                                         		// 0x04F0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTROItemBoxHK*                              ROItemBox;                                        		// 0x04FC ( 0x0004 ) 
	int                                                selectBuyType;                                    		// 0x0500 ( 0x0004 ) 
	unsigned char                                      selectCashType;                                   		// 0x0504 ( 0x0001 ) 
	struct FScriptDelegate                             __OnPCoin__Delegate;                              		// 0x0508 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      ButtonOK_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTWindowSelectCashTypeHK.ButtonOK_OnClick
	 bool                      ButtonPCoin_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTWindowSelectCashTypeHK.ButtonPCoin_OnClick
	 void                      UpdateDefaultWindow (  );                         		//  GUIWarfareControls.BTWindowSelectCashTypeHK.UpdateDefaultWindow
	 void                      ShowWindowSelectCashType ( class UGUIController* con, class UBTROItemBoxHK* ro, bool EnablePCoin, bool EnableCCoin );		//  GUIWarfareControls.BTWindowSelectCashTypeHK.ShowWindowSelectCashType
	 void                      SetDataCash ( class UBTROItemBoxHK* ro, bool EnablePCoin, bool EnableCCoin );		//  GUIWarfareControls.BTWindowSelectCashTypeHK.SetDataCash
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWindowSelectCashTypeHK.InitComponent
	 bool                      OnPCoin ( class UGUIComponent* Sender );          		//  GUIWarfareControls.BTWindowSelectCashTypeHK.OnPCoin
}; // Size: 0x004C

// Class GUIWarfareControls.BTItemInfoHorzBoxHKCN
class DLL_IMPORT UBTItemInfoHorzBoxHKCN : public UBTItemInfoHorzBoxHK
{
public:

	// UScript Functions
	 void                      SetWindowItemBox (  );                            		//  GUIWarfareControls.BTItemInfoHorzBoxHKCN.SetWindowItemBox
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTItemInfoHorzBoxHKCN.InitComponent
	 void                      SetData ( class UwItemBoxHK* ItemInfo, class UwItemBoxInstanceHK* instanceInfo, class UwItemBoxHK* cItemInfo, class UwItemBoxInstanceHK* cInstanceInfo );		//  GUIWarfareControls.BTItemInfoHorzBoxHKCN.SetData
}; // Size: 0x0000

// Class GUIWarfareControls.BTWeaponLIst
class DLL_IMPORT UBTWeaponLIst : public UBTContextMenuHK
{
public:
	struct FString                                     strContextMenuName[ 0x09 ];                       		// 0x03E4 ( 0x006C ) [ CPF_Localized | CPF_NeedCtorLink ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTWeaponLIst.InitComponent
}; // Size: 0x006C

// Class GUIWarfareControls.BTTPLabelNComboBoxHK
class DLL_IMPORT UBTTPLabelNComboBoxHK : public UBTTabPanelHK
{
public:
	class UBTOwnerDrawImageHK*                         Label;                                            		// 0x0338 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UBTComboBoxHK*                               ComboBox;                                         		// 0x033C ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPLabelNComboBoxHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPLabelNComboBoxHK.InitComponent
}; // Size: 0x0008

// Class GUIWarfareControls.BTOwnerDrawTwoLevelImgNClanMarkHK
class DLL_IMPORT UBTOwnerDrawTwoLevelImgNClanMarkHK : public UBTOwnerDrawImageHK
{
public:
	struct FImage                                      LevelImg[ 0x02 ];                                 		// 0x03B4 ( 0x0040 ) 
	class UBTROClanMarkHK*                             ClanMark[ 0x02 ];                                 		// 0x03F4 ( 0x0008 ) 

	// UScript Functions
	 void                      SetData ( bool bFirst, int CharLevel, int LevelMarkID, int Pattern, int BG, int BL, int ClanLevel );		//  GUIWarfareControls.BTOwnerDrawTwoLevelImgNClanMarkHK.SetData
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTOwnerDrawTwoLevelImgNClanMarkHK.Internal_OnRendered
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTOwnerDrawTwoLevelImgNClanMarkHK.InitComponent
}; // Size: 0x0048

// Class GUIWarfareControls.BTTPTwoExpBarHK
class DLL_IMPORT UBTTPTwoExpBarHK : public UBTTabPanelHK
{
public:
	class UBTExpBarHK*                                 expbar[ 0x02 ];                                   		// 0x0338 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPTwoExpBarHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPTwoExpBarHK.InitComponent
}; // Size: 0x0008

// Class GUIWarfareControls.BTTPTwoColumnLabelHK
class DLL_IMPORT UBTTPTwoColumnLabelHK : public UBTTabPanelHK
{
public:
	class UBTOwnerDrawTextArrayHK*                     Label[ 0x02 ];                                    		// 0x0338 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPTwoColumnLabelHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPTwoColumnLabelHK.InitComponent
}; // Size: 0x0008

// Class GUIWarfareControls.BTOwnerDrawRankInfoHK
class DLL_IMPORT UBTOwnerDrawRankInfoHK : public UBTOwnerDrawImageHK
{
public:
	struct FString                                     strRank;                                          		// 0x03B4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strUpArrow;                                       		// 0x03C0 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strDownArrow;                                     		// 0x03CC ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	int                                                ClanBG;                                           		// 0x03D8 ( 0x0004 ) 
	unsigned long                                      bClan:1;                                          		// 0x03DC ( 0x0004 )  [0x00000001]
	struct FImage                                      LevelImg;                                         		// 0x03E0 ( 0x0020 ) 
	class UBTROClanMarkHK*                             ClanMark;                                         		// 0x0400 ( 0x0004 ) 
	struct FText                                       TextName;                                         		// 0x0404 ( 0x001C ) [ CPF_NeedCtorLink ]
	class TArray< struct FText >                       Ranking;                                          		// 0x0420 ( 0x000C ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      SetRankData ( struct FString t0, int t1 );        		//  GUIWarfareControls.BTOwnerDrawRankInfoHK.SetRankData
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTOwnerDrawRankInfoHK.Internal_OnRendered
	 void                      SetData ( int CharLevel, int Pattern, int BG, int BL, int ClanLevel, struct FString strUserName, struct FString strClanName, int iRanking, int iPrevRanking, int iRankingExp, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTOwnerDrawRankInfoHK.SetData
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTOwnerDrawRankInfoHK.InitComponent
}; // Size: 0x0078

// Class GUIWarfareControls.BTTPTwoComboBoxHK
class DLL_IMPORT UBTTPTwoComboBoxHK : public UBTTabPanelHK
{
public:
	class UBTComboBoxHK*                               ComboBox[ 0x02 ];                                 		// 0x0338 ( 0x0008 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPTwoComboBoxHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPTwoComboBoxHK.InitComponent
}; // Size: 0x0008

// Class GUIWarfareControls.BTOwnerDrawClanRankInfoHK
class DLL_IMPORT UBTOwnerDrawClanRankInfoHK : public UBTOwnerDrawRankInfoHK
{
public:

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTOwnerDrawClanRankInfoHK.Internal_OnRendered
	 void                      SetData ( int CharLevel, int Pattern, int BG, int BL, int ClanLevel, struct FString strUserName, struct FString strClanName, int iRanking, int iPrevRanking, int iRankingExp, int LevelMarkID, int TitleMarkID, int Reserved1, int Reserved2, int Reserved3 );		//  GUIWarfareControls.BTOwnerDrawClanRankInfoHK.SetData
}; // Size: 0x0000

// Class GUIWarfareControls.BTACLCWMessengerPCBangHK
class DLL_IMPORT UBTACLCWMessengerPCBangHK : public UBTAutoColumnListHK
{
public:
	struct FImage                                      CommonSizeImg;                                    		// 0x0460 ( 0x0020 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.InitComponent
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetItemHeight
	 int                       GetLevelMarkID ( int row );                       		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetLevelMarkID
	 int                       GetClanNum ( int row );                           		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetClanNum
	 struct FString            GetClanName ( int row );                          		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetClanName
	 int                       GetChannelNum ( int row );                        		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetChannelNum
	 struct FString            GetServerName ( int row );                        		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetServerName
	 struct FString            GetDataPerColumn0_strValue ( int row );           		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetDataPerColumn0_strValue
	 int                       GetServerPort ( int row );                        		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetServerPort
	 int                       GetCurPos ( int row );                            		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetCurPos
	 struct FString            GetServerIP ( int row );                          		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetServerIP
	 int                       GetRoomNumber ( int row );                        		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetRoomNumber
	 struct FString            GetUserName ( int row );                          		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetUserName
	 int                       GetLevel ( int row );                             		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetLevel
	 struct FString            GetWinLose ( int row );                           		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetWinLose
	 struct FString            GetCombatState ( int row );                       		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.GetCombatState
	 void                      LC0_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLCWMessengerPCBangHK.LC0_Draw
}; // Size: 0x0020

// Class GUIWarfareControls.BTTPStoreWeaponHKCN
class DLL_IMPORT UBTTPStoreWeaponHKCN : public UBTTPStoreWeaponHK
{
public:
	int                                                nOldMouseX;                                       		// 0x0720 ( 0x0004 ) 
	int                                                nOffsetMouseDis;                                  		// 0x0724 ( 0x0004 ) 
	class UBTOwnerDrawImageHK*                         LockImage;                                        		// 0x0728 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.InitComponent
	 bool                      InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* KeyState );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.InternalOnKeyEvent
	 void                      InitializeDragAndDrop (  );                       		//  GUIWarfareControls.BTTPStoreWeaponHKCN.InitializeDragAndDrop
	 void                      InitializeRightPanel (  );                        		//  GUIWarfareControls.BTTPStoreWeaponHKCN.InitializeRightPanel
	 void                      InitializeLeftPanel (  );                         		//  GUIWarfareControls.BTTPStoreWeaponHKCN.InitializeLeftPanel
	 void                      Refresh (  );                                     		//  GUIWarfareControls.BTTPStoreWeaponHKCN.Refresh
	 void                      SetInfoBox ( int Index );                         		//  GUIWarfareControls.BTTPStoreWeaponHKCN.SetInfoBox
	 void                      UnequipItem ( int ButtonID );                     		//  GUIWarfareControls.BTTPStoreWeaponHKCN.UnequipItem
	 bool                      ChangeSubButton ( class TArray< struct FString > strTemp );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ChangeSubButton
	 void                      ChangeItemList ( int mainTab, int subTab );       		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ChangeItemList
	 void                      MainTabSelect ( int tabi, int subtabi );          		//  GUIWarfareControls.BTTPStoreWeaponHKCN.MainTabSelect
	 bool                      FindAndRemoveItem ( struct FBtrDouble UniqueID ); 		//  GUIWarfareControls.BTTPStoreWeaponHKCN.FindAndRemoveItem
	 void                      ChangeVisibleModel ( bool bAF );                  		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ChangeVisibleModel
	 bool                      MenuButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.MenuButton_OnClick
	 bool                      ShowSaveWindow ( class UBTROItemBoxHK* ro, int buyType, unsigned char cashType );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ShowSaveWindow
	 bool                      BTWindowSelectCoin ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.BTWindowSelectCoin
	 void                      BTWindowSendPresentHK_OnTimeOut ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.BTWindowSendPresentHK_OnTimeOut
	 void                      BTWindowItemBuyHK_OnTimeOut ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.BTWindowItemBuyHK_OnTimeOut
	 bool                      BTWindowItemBuyHK_ButtonRechargeCash_OnOK ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.BTWindowItemBuyHK_ButtonRechargeCash_OnOK
	 bool                      ButtonWeapon_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonWeapon_OnDblClick
	 bool                      ButtonWeapon_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonWeapon_OnClick
	 void                      ButtonWeapon_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonWeapon_OnEndDrag
	 bool                      ButtonWeapon_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonWeapon_OnBeginDrag
	 void                      ItemList_OnEndDrag ( class UGUIComponent* Sender, bool bAccepted );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ItemList_OnEndDrag
	 bool                      ItemList_OnBeginDrag ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ItemList_OnBeginDrag
	 bool                      ImageListBox_OnDblClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ImageListBox_OnDblClick
	 bool                      MainButton_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.MainButton_OnClick
	 bool                      ButtonRSA_OnClick ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonRSA_OnClick
	 bool                      ButtonAF_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonAF_OnClick
	 void                      ButtonRR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonRR_OnRelease
	 void                      ButtonRR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonRR_OnPressed
	 void                      ButtonLR_OnRelease ( class UGUIComponent* Sender );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonLR_OnRelease
	 void                      ButtonLR_OnPressed ( class UGUIComponent* Sender, bool bRepeat );		//  GUIWarfareControls.BTTPStoreWeaponHKCN.ButtonLR_OnPressed
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTTPStoreWeaponHKCN.Internal_OnRendered
	 void                      CharRotByDrag (  );                               		//  GUIWarfareControls.BTTPStoreWeaponHKCN.CharRotByDrag
	 bool                      Internal_OnPreDraw ( class UCanvas* C );          		//  GUIWarfareControls.BTTPStoreWeaponHKCN.Internal_OnPreDraw
}; // Size: 0x000C

// Class GUIWarfareControls.BTLabelPromotionHK
class DLL_IMPORT UBTLabelPromotionHK : public UBTOwnerDrawImageHK
{
public:
	float                                              Delta;                                            		// 0x03B4 ( 0x0004 ) 
	unsigned long                                      bStartShow:1;                                     		// 0x03B8 ( 0x0004 )  [0x00000001]
	int                                                ShowPhase;                                        		// 0x03BC ( 0x0004 ) 
	class FColor                                       DrawColor;                                        		// 0x03C0 ( 0x0004 ) 
	struct FPlane                                      ColorMultiplier;                                  		// 0x03C4 ( 0x0010 ) 
	float                                              StartScale;                                       		// 0x03D4 ( 0x0004 ) 
	float                                              EndScale;                                         		// 0x03D8 ( 0x0004 ) 
	float                                              CurrentScale;                                     		// 0x03DC ( 0x0004 ) 
	float                                              ScaleStep;                                        		// 0x03E0 ( 0x0004 ) 
	float                                              ScaleStepMultiplier;                              		// 0x03E4 ( 0x0004 ) 
	float                                              MaxScale;                                         		// 0x03E8 ( 0x0004 ) 
	struct FScriptDelegate                             __OnStartPhase__Delegate;                         		// 0x03EC ( 0x0008 ) [ CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnEndPhase__Delegate;                           		// 0x03F4 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 void                      Internal_OnRendered ( class UCanvas* C );         		//  GUIWarfareControls.BTLabelPromotionHK.Internal_OnRendered
	 void                      Reset (  );                                       		//  GUIWarfareControls.BTLabelPromotionHK.Reset
	 void                      StartShow (  );                                   		//  GUIWarfareControls.BTLabelPromotionHK.StartShow
	 void                      OnEndPhase ( int Phase );                         		//  GUIWarfareControls.BTLabelPromotionHK.OnEndPhase
	 void                      OnStartPhase ( int Phase );                       		//  GUIWarfareControls.BTLabelPromotionHK.OnStartPhase
}; // Size: 0x0048

// Class GUIWarfareControls.BTACLTradeHistoryHK
class DLL_IMPORT UBTACLTradeHistoryHK : public UBTAutoColumnListHK
{
public:
	class FColor                                       damageColor[ 0x05 ];                              		// 0x0460 ( 0x0014 ) 

	// UScript Functions
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTACLTradeHistoryHK.InitComponent
	 void                      LC1_Draw ( class UCanvas* C, float L, float t, float R, float B, struct FACLData Data, int Column, int row );		//  GUIWarfareControls.BTACLTradeHistoryHK.LC1_Draw
	 class FColor              DamageToColor ( int Damage );                     		//  GUIWarfareControls.BTACLTradeHistoryHK.DamageToColor
	 void                      AddItem ( struct FString s1, int Damage, struct FString s2 );		//  GUIWarfareControls.BTACLTradeHistoryHK.AddItem
	 float                     GetItemHeight ( class UCanvas* C );               		//  GUIWarfareControls.BTACLTradeHistoryHK.GetItemHeight
}; // Size: 0x0014

// Class GUIWarfareControls.BTROWeaponUIGaugeHK
class DLL_IMPORT UBTROWeaponUIGaugeHK : public URenderObject
{
public:
	unsigned long                                      bHideAllExceptName:1;                             		// 0x0040 ( 0x0004 )  [0x00000001]
	unsigned long                                      bHideGaugeBack:1;                                 		// 0x0040 ( 0x0004 )  [0x00000002]
	unsigned long                                      bHideValue:1;                                     		// 0x0040 ( 0x0004 )  [0x00000004]
	int                                                TextX;                                            		// 0x0044 ( 0x0004 ) 
	int                                                GaugeStartX;                                      		// 0x0048 ( 0x0004 ) 
	int                                                GaugeEndX;                                        		// 0x004C ( 0x0004 ) 
	int                                                ValueX;                                           		// 0x0050 ( 0x0004 ) 
	struct FString                                     GaugeName;                                        		// 0x0054 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< int >                                DataArray;                                        		// 0x0060 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FText >                       textArray;                                        		// 0x006C ( 0x000C ) [ CPF_NeedCtorLink ]
	int                                                gwidth;                                           		// 0x0078 ( 0x0004 ) 
	int                                                gmove;                                            		// 0x007C ( 0x0004 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROWeaponUIGaugeHK.Render
	 void                      Update ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROWeaponUIGaugeHK.Update
	 void                      SetPos ( int TextX, int GaugeStartX, int GaugeEndX, int ValueX );		//  GUIWarfareControls.BTROWeaponUIGaugeHK.SetPos
	 void                      SetData ( struct FString GaugeName, int A, int B );		//  GUIWarfareControls.BTROWeaponUIGaugeHK.SetData
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROWeaponUIGaugeHK.Init
}; // Size: 0x0040

// Class GUIWarfareControls.BTROWeaponStatusBarHK
class DLL_IMPORT UBTROWeaponStatusBarHK : public URenderObject
{
public:
	struct FImage                                      back;                                             		// 0x0040 ( 0x0020 ) 
	struct FImage                                      Gauge;                                            		// 0x0060 ( 0x0020 ) 
	struct FImage                                      Plus;                                             		// 0x0080 ( 0x0020 ) 
	struct FImage                                      Minus;                                            		// 0x00A0 ( 0x0020 ) 
	class TArray< int >                                DataArray;                                        		// 0x00C0 ( 0x000C ) [ CPF_NeedCtorLink ]
	class TArray< struct FText >                       textArray;                                        		// 0x00CC ( 0x000C ) [ CPF_NeedCtorLink ]
	unsigned char                                      DrawType;                                         		// 0x00D8 ( 0x0001 ) 
	unsigned char                                      TADrawType;                                       		// 0x00D9 ( 0x0001 ) 
	class FColor                                       plus_c;                                           		// 0x00DC ( 0x0004 ) 
	class FColor                                       minus_c;                                          		// 0x00E0 ( 0x0004 ) 
	int                                                AllTextWidth;                                     		// 0x00E4 ( 0x0004 ) 
	int                                                BnTSpace;                                         		// 0x00E8 ( 0x0004 ) 

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROWeaponStatusBarHK.Render
	 void                      SetData ( int A, int B );                         		//  GUIWarfareControls.BTROWeaponStatusBarHK.SetData
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROWeaponStatusBarHK.Init
}; // Size: 0x00AC

// Class GUIWarfareControls.BTROWeaponStatusBarHKCN
class DLL_IMPORT UBTROWeaponStatusBarHKCN : public UBTROWeaponStatusBarHK
{
public:

	// UScript Functions
	 bool                      Render ( class UCanvas* C, float Delta );         		//  GUIWarfareControls.BTROWeaponStatusBarHKCN.Render
	 void                      SetData ( int A, int B );                         		//  GUIWarfareControls.BTROWeaponStatusBarHKCN.SetData
	 void                      Init (  );                                        		//  GUIWarfareControls.BTROWeaponStatusBarHKCN.Init
}; // Size: 0x0000

// Class GUIWarfareControls.BTTPOptionGQSimpleHK
class DLL_IMPORT UBTTPOptionGQSimpleHK : public UBTTabPanelHK
{
public:
	struct FString                                     strButtonRadio;                                   		// 0x0338 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonRadio;                                    		// 0x0344 ( 0x0010 ) 
	class UBTCheckBoxHK*                               ButtonRadio;                                      		// 0x0354 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	class UButtonGroups*                               GraphicSimpleGroup;                               		// 0x0358 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FString                                     strLow;                                           		// 0x035C ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strNormal;                                        		// 0x0368 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strHigh;                                          		// 0x0374 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FString                                     strExHigh;                                        		// 0x0380 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	class UBTOwnerDrawCaptionButtonHK*                 SimpleButton[ 0x04 ];                             		// 0x038C ( 0x0010 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]
	struct FFloatBox                                   fbButtonTab[ 0x04 ];                              		// 0x039C ( 0x0040 ) 

	// UScript Functions
	 bool                      EnableAllButton (  );                             		//  GUIWarfareControls.BTTPOptionGQSimpleHK.EnableAllButton
	 bool                      DisableAllButton (  );                            		//  GUIWarfareControls.BTTPOptionGQSimpleHK.DisableAllButton
	 void                      ChangeButtonImage (  );                           		//  GUIWarfareControls.BTTPOptionGQSimpleHK.ChangeButtonImage
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPOptionGQSimpleHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionGQSimpleHK.InitComponent
}; // Size: 0x00A4

// Class GUIWarfareControls.BTTPOptionGQAutoHK
class DLL_IMPORT UBTTPOptionGQAutoHK : public UBTTabPanelHK
{
public:
	struct FString                                     strButtonRadio;                                   		// 0x0338 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FFloatBox                                   fbButtonRadio;                                    		// 0x0344 ( 0x0010 ) 
	class UBTCheckBoxHK*                               ButtonRadio;                                      		// 0x0354 ( 0x0004 ) [ CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline ]

	// UScript Functions
	 void                      ApplyAWinPos (  );                                		//  GUIWarfareControls.BTTPOptionGQAutoHK.ApplyAWinPos
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTTPOptionGQAutoHK.InitComponent
}; // Size: 0x0020

// Class GUIWarfareControls.BTOptionKeyButtonHK
class DLL_IMPORT UBTOptionKeyButtonHK : public UBTOwnerDrawCaptionButtonHK
{
public:
	struct FString                                     SaveKey;                                          		// 0x04C4 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     SaveCaption;                                      		// 0x04D0 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     BindName;                                         		// 0x04DC ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strBindFuncName;                                  		// 0x04E8 ( 0x000C ) [ CPF_NeedCtorLink ]
	struct FString                                     strNewKey;                                        		// 0x04F4 ( 0x000C ) [ CPF_Localized | CPF_NeedCtorLink ]
	struct FScriptDelegate                             __OnChangeKey__Delegate;                          		// 0x0500 ( 0x0008 ) [ CPF_NeedCtorLink ]

	// UScript Functions
	 bool                      RawKey ( unsigned char NewKey );                  		//  GUIWarfareControls.BTOptionKeyButtonHK.RawKey
	 void                      SetKey ( struct FString KeyName );                		//  GUIWarfareControls.BTOptionKeyButtonHK.SetKey
	 void                      OnChangeKey ( class UGUIComponent* Sender, struct FString NewKey );		//  GUIWarfareControls.BTOptionKeyButtonHK.OnChangeKey
	 bool                      IsAllowedKey ( unsigned char NewKey );            		//  GUIWarfareControls.BTOptionKeyButtonHK.IsAllowedKey
	 bool                      Internal_OnClick ( class UGUIComponent* Sender ); 		//  GUIWarfareControls.BTOptionKeyButtonHK.Internal_OnClick
	 void                      InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner );		//  GUIWarfareControls.BTOptionKeyButtonHK.InitComponent
	 void                      SetBindFuncName ( struct FString str );           		//  GUIWarfareControls.BTOptionKeyButtonHK.SetBindFuncName
}; // Size: 0x0044

#ifdef _MSC_VER
#pragma pack ( pop )
#endif

