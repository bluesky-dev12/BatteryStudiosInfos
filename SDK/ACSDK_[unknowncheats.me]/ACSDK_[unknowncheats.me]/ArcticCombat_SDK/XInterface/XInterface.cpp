#include "stdafx.h"
/*
# ======================================================================================== #
# > ArcticCombat SDK
# > Generated By HJSdkGen v1.06b
# ---------------------------------------------------------------------------------------- #
# > Package : XInterface
# >    File : Code.cpp
# ======================================================================================== #
*/

/*class UMaterial* UGUI::GetModLogo ( struct FString ModDir )
{
	static UFunction* pGetModLogo = 0;
	UGUI_execGetModLogo_Parms parms;

	if ( !pGetModLogo )
		pGetModLogo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUI.GetModLogo" );

	parms.ModDir = ModDir;
	this->ProcessEvent ( pGetModLogo, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUI::GetModValue ( struct FString ModDir, struct FString ModKey )
{
	static UFunction* pGetModValue = 0;
	UGUI_execGetModValue_Parms parms;

	if ( !pGetModValue )
		pGetModValue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUI.GetModValue" );

	parms.ModDir = ModDir;
	parms.ModKey = ModKey;
	this->ProcessEvent ( pGetModValue, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUI::GetModList ( class TArray< struct FString >* ModDirs, class TArray< struct FString >* ModTitles )
{
	static UFunction* pGetModList = 0;
	UGUI_execGetModList_Parms parms;

	if ( !pGetModList )
		pGetModList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUI.GetModList" );

	parms.ModDirs = *ModDirs;
	parms.ModTitles = *ModTitles;
	this->ProcessEvent ( pGetModList, &parms, NULL );

	*ModDirs = parms.ModDirs;
	*ModTitles = parms.ModTitles;
}*/

/*void UGUI::Profile ( struct FString ProfileName )
{
	static UFunction* pProfile = 0;
	UGUI_execProfile_Parms parms;

	if ( !pProfile )
		pProfile = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUI.Profile" );

	parms.ProfileName = ProfileName;
	this->ProcessEvent ( pProfile, &parms, NULL );

}*/

/*struct FString UGUI::JoinArray ( class TArray< struct FString > StringArray, struct FString Delim, bool bIgnoreBlanks )
{
	static UFunction* pJoinArray = 0;
	UGUI_execJoinArray_Parms parms;

	if ( !pJoinArray )
		pJoinArray = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUI.JoinArray" );

	parms.StringArray = StringArray;
	parms.Delim = Delim;
	parms.bIgnoreBlanks = bIgnoreBlanks;
	this->ProcessEvent ( pJoinArray, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUI::IsDigit ( struct FString Test, bool bAllowDecimal )
{
	static UFunction* pIsDigit = 0;
	UGUI_execIsDigit_Parms parms;

	if ( !pIsDigit )
		pIsDigit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUI.IsDigit" );

	parms.Test = Test;
	parms.bAllowDecimal = bAllowDecimal;
	this->ProcessEvent ( pIsDigit, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UCanvas* UGUIComponent::GetCurrentCanvas (  )
{
	static UFunction* pGetCurrentCanvas = 0;
	UGUIComponent_execGetCurrentCanvas_Parms parms;

	if ( !pGetCurrentCanvas )
		pGetCurrentCanvas = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.GetCurrentCanvas" );

	this->ProcessEvent ( pGetCurrentCanvas, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::DebugTabOrder (  )
{
	static UFunction* pDebugTabOrder = 0;
	UGUIComponent_execDebugTabOrder_Parms parms;

	if ( !pDebugTabOrder )
		pDebugTabOrder = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.DebugTabOrder" );

	this->ProcessEvent ( pDebugTabOrder, &parms, NULL );

}*/

/*void UGUIComponent::LevelChanged (  )
{
	static UFunction* pLevelChanged = 0;
	UGUIComponent_execLevelChanged_Parms parms;

	if ( !pLevelChanged )
		pLevelChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.LevelChanged" );

	this->ProcessEvent ( pLevelChanged, &parms, NULL );

}*/

/*void UGUIComponent::SetEnabled ( bool Value )
{
	static UFunction* pSetEnabled = 0;
	UGUIComponent_execSetEnabled_Parms parms;

	if ( !pSetEnabled )
		pSetEnabled = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetEnabled" );

	parms.Value = Value;
	this->ProcessEvent ( pSetEnabled, &parms, NULL );

}*/

/*void UGUIComponent::DisableMe (  )
{
	static UFunction* pDisableMe = 0;
	UGUIComponent_execDisableMe_Parms parms;

	if ( !pDisableMe )
		pDisableMe = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.DisableMe" );

	this->ProcessEvent ( pDisableMe, &parms, NULL );

}*/

/*void UGUIComponent::EnableMe (  )
{
	static UFunction* pEnableMe = 0;
	UGUIComponent_execEnableMe_Parms parms;

	if ( !pEnableMe )
		pEnableMe = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.EnableMe" );

	this->ProcessEvent ( pEnableMe, &parms, NULL );

}*/

/*void UGUIComponent::SetFlicker ( bool Value )
{
	static UFunction* pSetFlicker = 0;
	UGUIComponent_execSetFlicker_Parms parms;

	if ( !pSetFlicker )
		pSetFlicker = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetFlicker" );

	parms.Value = Value;
	this->ProcessEvent ( pSetFlicker, &parms, NULL );

}*/

/*void UGUIComponent::DisableComponent ( class UGUIComponent* Comp )
{
	static UFunction* pDisableComponent = 0;
	UGUIComponent_execDisableComponent_Parms parms;

	if ( !pDisableComponent )
		pDisableComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.DisableComponent" );

	parms.Comp = Comp;
	this->ProcessEvent ( pDisableComponent, &parms, NULL );

}*/

/*void UGUIComponent::EnableComponent ( class UGUIComponent* Comp )
{
	static UFunction* pEnableComponent = 0;
	UGUIComponent_execEnableComponent_Parms parms;

	if ( !pEnableComponent )
		pEnableComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.EnableComponent" );

	parms.Comp = Comp;
	this->ProcessEvent ( pEnableComponent, &parms, NULL );

}*/

/*void UGUIComponent::KillAnimation (  )
{
	static UFunction* pKillAnimation = 0;
	UGUIComponent_execKillAnimation_Parms parms;

	if ( !pKillAnimation )
		pKillAnimation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.KillAnimation" );

	this->ProcessEvent ( pKillAnimation, &parms, NULL );

}*/

/*void UGUIComponent::DAnimate ( float NewLeft, float NewTop, float NewWidth, float NewHeight, float PositionTime, float DimensionTime )
{
	static UFunction* pDAnimate = 0;
	UGUIComponent_execDAnimate_Parms parms;

	if ( !pDAnimate )
		pDAnimate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.DAnimate" );

	parms.NewLeft = NewLeft;
	parms.NewTop = NewTop;
	parms.NewWidth = NewWidth;
	parms.NewHeight = NewHeight;
	parms.PositionTime = PositionTime;
	parms.DimensionTime = DimensionTime;
	this->ProcessEvent ( pDAnimate, &parms, NULL );

}*/

/*void UGUIComponent::Resize ( float NewWidth, float NewHeight, float Time )
{
	static UFunction* pResize = 0;
	UGUIComponent_execResize_Parms parms;

	if ( !pResize )
		pResize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.Resize" );

	parms.NewWidth = NewWidth;
	parms.NewHeight = NewHeight;
	parms.Time = Time;
	this->ProcessEvent ( pResize, &parms, NULL );

}*/

/*void UGUIComponent::Animate ( float NewLeft, float NewTop, float Time )
{
	static UFunction* pAnimate = 0;
	UGUIComponent_execAnimate_Parms parms;

	if ( !pAnimate )
		pAnimate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.Animate" );

	parms.NewLeft = NewLeft;
	parms.NewTop = NewTop;
	parms.Time = Time;
	this->ProcessEvent ( pAnimate, &parms, NULL );

}*/

/*void UGUIComponent::eventEndAnimation ( class UGUIComponent* Animating, unsigned char Type )
{
	static UFunction* pEndAnimation = 0;
	UGUIComponent_eventEndAnimation_Parms parms;

	if ( !pEndAnimation )
		pEndAnimation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.EndAnimation" );

	parms.Animating = Animating;
	parms.Type = Type;
	this->ProcessEvent ( pEndAnimation, &parms, NULL );

}*/

/*void UGUIComponent::eventBeginAnimation ( class UGUIComponent* Animating )
{
	static UFunction* pBeginAnimation = 0;
	UGUIComponent_eventBeginAnimation_Parms parms;

	if ( !pBeginAnimation )
		pBeginAnimation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.BeginAnimation" );

	parms.Animating = Animating;
	this->ProcessEvent ( pBeginAnimation, &parms, NULL );

}*/

/*class UGUIPage* UGUIComponent::eventOwnerPage (  )
{
	static UFunction* pOwnerPage = 0;
	UGUIComponent_eventOwnerPage_Parms parms;

	if ( !pOwnerPage )
		pOwnerPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OwnerPage" );

	this->ProcessEvent ( pOwnerPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::DebugFocusPosition ( class UGUIComponent* Who, bool Last )
{
	static UFunction* pDebugFocusPosition = 0;
	UGUIComponent_execDebugFocusPosition_Parms parms;

	if ( !pDebugFocusPosition )
		pDebugFocusPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.DebugFocusPosition" );

	parms.Who = Who;
	parms.Last = Last;
	this->ProcessEvent ( pDebugFocusPosition, &parms, NULL );

}*/

/*void UGUIComponent::DebugFocus ( class UGUIComponent* Who, bool bLose )
{
	static UFunction* pDebugFocus = 0;
	UGUIComponent_execDebugFocus_Parms parms;

	if ( !pDebugFocus )
		pDebugFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.DebugFocus" );

	parms.Who = Who;
	parms.bLose = bLose;
	this->ProcessEvent ( pDebugFocus, &parms, NULL );

}*/

/*void UGUIComponent::SetTooltip ( class UGUIToolTip* InTooltip )
{
	static UFunction* pSetTooltip = 0;
	UGUIComponent_execSetTooltip_Parms parms;

	if ( !pSetTooltip )
		pSetTooltip = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetTooltip" );

	parms.InTooltip = InTooltip;
	this->ProcessEvent ( pSetTooltip, &parms, NULL );

}*/

/*void UGUIComponent::SetToolTipText ( struct FString NewToolTipText )
{
	static UFunction* pSetToolTipText = 0;
	UGUIComponent_execSetToolTipText_Parms parms;

	if ( !pSetToolTipText )
		pSetToolTipText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetToolTipText" );

	parms.NewToolTipText = NewToolTipText;
	this->ProcessEvent ( pSetToolTipText, &parms, NULL );

}*/

/*void UGUIComponent::SetHint ( struct FString NewHint )
{
	static UFunction* pSetHint = 0;
	UGUIComponent_execSetHint_Parms parms;

	if ( !pSetHint )
		pSetHint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetHint" );

	parms.NewHint = NewHint;
	this->ProcessEvent ( pSetHint, &parms, NULL );

}*/

/*void UGUIComponent::SetFriendlyLabel ( class UGUILabel* NewLabel )
{
	static UFunction* pSetFriendlyLabel = 0;
	UGUIComponent_execSetFriendlyLabel_Parms parms;

	if ( !pSetFriendlyLabel )
		pSetFriendlyLabel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetFriendlyLabel" );

	parms.NewLabel = NewLabel;
	this->ProcessEvent ( pSetFriendlyLabel, &parms, NULL );

}*/

/*void UGUIComponent::SetFocusInstead ( class UGUIComponent* InFocusComp )
{
	static UFunction* pSetFocusInstead = 0;
	UGUIComponent_execSetFocusInstead_Parms parms;

	if ( !pSetFocusInstead )
		pSetFocusInstead = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetFocusInstead" );

	parms.InFocusComp = InFocusComp;
	this->ProcessEvent ( pSetFocusInstead, &parms, NULL );

}*/

/*void UGUIComponent::eventShow (  )
{
	static UFunction* pShow = 0;
	UGUIComponent_eventShow_Parms parms;

	if ( !pShow )
		pShow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.Show" );

	this->ProcessEvent ( pShow, &parms, NULL );

}*/

/*void UGUIComponent::eventHide (  )
{
	static UFunction* pHide = 0;
	UGUIComponent_eventHide_Parms parms;

	if ( !pHide )
		pHide = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.Hide" );

	this->ProcessEvent ( pHide, &parms, NULL );

}*/

/*void UGUIComponent::CenterMouse (  )
{
	static UFunction* pCenterMouse = 0;
	UGUIComponent_execCenterMouse_Parms parms;

	if ( !pCenterMouse )
		pCenterMouse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.CenterMouse" );

	this->ProcessEvent ( pCenterMouse, &parms, NULL );

}*/

/*void UGUIComponent::eventSetVisibility ( bool bIsVisible )
{
	static UFunction* pSetVisibility = 0;
	UGUIComponent_eventSetVisibility_Parms parms;

	if ( !pSetVisibility )
		pSetVisibility = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetVisibility" );

	parms.bIsVisible = bIsVisible;
	this->ProcessEvent ( pSetVisibility, &parms, NULL );

}*/

/*void UGUIComponent::FillOwner (  )
{
	static UFunction* pFillOwner = 0;
	UGUIComponent_execFillOwner_Parms parms;

	if ( !pFillOwner )
		pFillOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.FillOwner" );

	this->ProcessEvent ( pFillOwner, &parms, NULL );

}*/

/*bool UGUIComponent::eventPrevPage (  )
{
	static UFunction* pPrevPage = 0;
	UGUIComponent_eventPrevPage_Parms parms;

	if ( !pPrevPage )
		pPrevPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.PrevPage" );

	this->ProcessEvent ( pPrevPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::eventNextPage (  )
{
	static UFunction* pNextPage = 0;
	UGUIComponent_eventNextPage_Parms parms;

	if ( !pNextPage )
		pNextPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.NextPage" );

	this->ProcessEvent ( pNextPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::eventPrevControl ( class UGUIComponent* Sender )
{
	static UFunction* pPrevControl = 0;
	UGUIComponent_eventPrevControl_Parms parms;

	if ( !pPrevControl )
		pPrevControl = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.PrevControl" );

	parms.Sender = Sender;
	this->ProcessEvent ( pPrevControl, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::eventNextControl ( class UGUIComponent* Sender )
{
	static UFunction* pNextControl = 0;
	UGUIComponent_eventNextControl_Parms parms;

	if ( !pNextControl )
		pNextControl = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.NextControl" );

	parms.Sender = Sender;
	this->ProcessEvent ( pNextControl, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::eventFocusLast ( class UGUIComponent* Sender )
{
	static UFunction* pFocusLast = 0;
	UGUIComponent_eventFocusLast_Parms parms;

	if ( !pFocusLast )
		pFocusLast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.FocusLast" );

	parms.Sender = Sender;
	this->ProcessEvent ( pFocusLast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::eventFocusFirst ( class UGUIComponent* Sender )
{
	static UFunction* pFocusFirst = 0;
	UGUIComponent_eventFocusFirst_Parms parms;

	if ( !pFocusFirst )
		pFocusFirst = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.FocusFirst" );

	parms.Sender = Sender;
	this->ProcessEvent ( pFocusFirst, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::eventLoseFocus ( class UGUIComponent* Sender )
{
	static UFunction* pLoseFocus = 0;
	UGUIComponent_eventLoseFocus_Parms parms;

	if ( !pLoseFocus )
		pLoseFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.LoseFocus" );

	parms.Sender = Sender;
	this->ProcessEvent ( pLoseFocus, &parms, NULL );

}*/

/*void UGUIComponent::eventSetFocus ( class UGUIComponent* Who )
{
	static UFunction* pSetFocus = 0;
	UGUIComponent_eventSetFocus_Parms parms;

	if ( !pSetFocus )
		pSetFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetFocus" );

	parms.Who = Who;
	this->ProcessEvent ( pSetFocus, &parms, NULL );

}*/

/*bool UGUIComponent::eventCanAcceptFocus (  )
{
	static UFunction* pCanAcceptFocus = 0;
	UGUIComponent_eventCanAcceptFocus_Parms parms;

	if ( !pCanAcceptFocus )
		pCanAcceptFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.CanAcceptFocus" );

	this->ProcessEvent ( pCanAcceptFocus, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::IsInClientBounds (  )
{
	static UFunction* pIsInClientBounds = 0;
	UGUIComponent_execIsInClientBounds_Parms parms;

	if ( !pIsInClientBounds )
		pIsInClientBounds = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.IsInClientBounds" );

	this->ProcessEvent ( pIsInClientBounds, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::IsInBounds (  )
{
	static UFunction* pIsInBounds = 0;
	UGUIComponent_execIsInBounds_Parms parms;

	if ( !pIsInBounds )
		pIsInBounds = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.IsInBounds" );

	this->ProcessEvent ( pIsInBounds, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::TraversalApplyAWinPos (  )
{
	static UFunction* pTraversalApplyAWinPos = 0;
	UGUIComponent_execTraversalApplyAWinPos_Parms parms;

	if ( !pTraversalApplyAWinPos )
		pTraversalApplyAWinPos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.TraversalApplyAWinPos" );

	this->ProcessEvent ( pTraversalApplyAWinPos, &parms, NULL );

}*/

/*void UGUIComponent::ApplyAWinPos (  )
{
	static UFunction* pApplyAWinPos = 0;
	UGUIComponent_execApplyAWinPos_Parms parms;

	if ( !pApplyAWinPos )
		pApplyAWinPos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.ApplyAWinPos" );

	this->ProcessEvent ( pApplyAWinPos, &parms, NULL );

}*/

/*class UGUIComponent* UGUIComponent::GetTopMenuOwner (  )
{
	static UFunction* pGetTopMenuOwner = 0;
	UGUIComponent_execGetTopMenuOwner_Parms parms;

	if ( !pGetTopMenuOwner )
		pGetTopMenuOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.GetTopMenuOwner" );

	this->ProcessEvent ( pGetTopMenuOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::eventInitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIComponent_eventInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIComponent::eventDropStateChange ( unsigned char NewState )
{
	static UFunction* pDropStateChange = 0;
	UGUIComponent_eventDropStateChange_Parms parms;

	if ( !pDropStateChange )
		pDropStateChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.DropStateChange" );

	parms.NewState = NewState;
	this->ProcessEvent ( pDropStateChange, &parms, NULL );

}*/

/*bool UGUIComponent::eventIsMultiSelect (  )
{
	static UFunction* pIsMultiSelect = 0;
	UGUIComponent_eventIsMultiSelect_Parms parms;

	if ( !pIsMultiSelect )
		pIsMultiSelect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.IsMultiSelect" );

	this->ProcessEvent ( pIsMultiSelect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::eventMenuStateChange ( unsigned char NewState )
{
	static UFunction* pMenuStateChange = 0;
	UGUIComponent_eventMenuStateChange_Parms parms;

	if ( !pMenuStateChange )
		pMenuStateChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.MenuStateChange" );

	parms.NewState = NewState;
	this->ProcessEvent ( pMenuStateChange, &parms, NULL );

}*/

/*struct FString UGUIComponent::MakeColorCode ( class FColor NewColor )
{
	static UFunction* pMakeColorCode = 0;
	UGUIComponent_execMakeColorCode_Parms parms;

	if ( !pMakeColorCode )
		pMakeColorCode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.MakeColorCode" );

	parms.NewColor = NewColor;
	this->ProcessEvent ( pMakeColorCode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIComponent::StripColorCodes ( struct FString InString )
{
	static UFunction* pStripColorCodes = 0;
	UGUIComponent_execStripColorCodes_Parms parms;

	if ( !pStripColorCodes )
		pStripColorCodes = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.StripColorCodes" );

	parms.InString = InString;
	this->ProcessEvent ( pStripColorCodes, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::SaveINI ( struct FString Value )
{
	static UFunction* pSaveINI = 0;
	UGUIComponent_execSaveINI_Parms parms;

	if ( !pSaveINI )
		pSaveINI = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SaveINI" );

	parms.Value = Value;
	this->ProcessEvent ( pSaveINI, &parms, NULL );

}*/

/*struct FString UGUIComponent::LoadINI (  )
{
	static UFunction* pLoadINI = 0;
	UGUIComponent_execLoadINI_Parms parms;

	if ( !pLoadINI )
		pLoadINI = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.LoadINI" );

	this->ProcessEvent ( pLoadINI, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::eventfree (  )
{
	static UFunction* pfree = 0;
	UGUIComponent_eventfree_Parms parms;

	if ( !pfree )
		pfree = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.free" );

	this->ProcessEvent ( pfree, &parms, NULL );

}*/

/*void UGUIComponent::eventClosed ( class UGUIComponent* Sender, bool bCancelled )
{
	static UFunction* pClosed = 0;
	UGUIComponent_eventClosed_Parms parms;

	if ( !pClosed )
		pClosed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.Closed" );

	parms.Sender = Sender;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pClosed, &parms, NULL );

}*/

/*void UGUIComponent::eventOpened ( class UGUIComponent* Sender )
{
	static UFunction* pOpened = 0;
	UGUIComponent_eventOpened_Parms parms;

	if ( !pOpened )
		pOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.Opened" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOpened, &parms, NULL );

}*/

/*void UGUIComponent::eventTimer (  )
{
	static UFunction* pTimer = 0;
	UGUIComponent_eventTimer_Parms parms;

	if ( !pTimer )
		pTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.Timer" );

	this->ProcessEvent ( pTimer, &parms, NULL );

}*/

/*struct FString UGUIComponent::eventAdditionalDebugString (  )
{
	static UFunction* pAdditionalDebugString = 0;
	UGUIComponent_eventAdditionalDebugString_Parms parms;

	if ( !pAdditionalDebugString )
		pAdditionalDebugString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.AdditionalDebugString" );

	this->ProcessEvent ( pAdditionalDebugString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::SpecialHit ( bool bForce )
{
	static UFunction* pSpecialHit = 0;
	UGUIComponent_execSpecialHit_Parms parms;

	if ( !pSpecialHit )
		pSpecialHit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SpecialHit" );

	WORD iNative = pSpecialHit->iNative;
	pSpecialHit->FunctionFlags &= ~FUNC_Native;
	pSpecialHit->iNative = 0;

	parms.bForce = bForce;
	this->ProcessEvent ( pSpecialHit, &parms, NULL );

	pSpecialHit->iNative = iNative;
	pSpecialHit->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*struct FString UGUIComponent::GetMenuPath (  )
{
	static UFunction* pGetMenuPath = 0;
	UGUIComponent_execGetMenuPath_Parms parms;

	if ( !pGetMenuPath )
		pGetMenuPath = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.GetMenuPath" );

	WORD iNative = pGetMenuPath->iNative;
	pGetMenuPath->FunctionFlags &= ~FUNC_Native;
	pGetMenuPath->iNative = 0;

	this->ProcessEvent ( pGetMenuPath, &parms, NULL );

	pGetMenuPath->iNative = iNative;
	pGetMenuPath->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*bool UGUIComponent::IsInIncompleteLetter ( struct FString strUserName )
{
	static UFunction* pIsInIncompleteLetter = 0;
	UGUIComponent_execIsInIncompleteLetter_Parms parms;

	if ( !pIsInIncompleteLetter )
		pIsInIncompleteLetter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.IsInIncompleteLetter" );

	parms.strUserName = strUserName;
	this->ProcessEvent ( pIsInIncompleteLetter, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIComponent::IsCorrectUserName_THAILAND ( struct FString strUserName )
{
	static UFunction* pIsCorrectUserName_THAILAND = 0;
	UGUIComponent_execIsCorrectUserName_THAILAND_Parms parms;

	if ( !pIsCorrectUserName_THAILAND )
		pIsCorrectUserName_THAILAND = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.IsCorrectUserName_THAILAND" );

	parms.strUserName = strUserName;
	this->ProcessEvent ( pIsCorrectUserName_THAILAND, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIComponent::IsCorrectUserName_China ( struct FString strUserName )
{
	static UFunction* pIsCorrectUserName_China = 0;
	UGUIComponent_execIsCorrectUserName_China_Parms parms;

	if ( !pIsCorrectUserName_China )
		pIsCorrectUserName_China = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.IsCorrectUserName_China" );

	parms.strUserName = strUserName;
	this->ProcessEvent ( pIsCorrectUserName_China, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIComponent::IsCorrectUserName ( struct FString strUserName )
{
	static UFunction* pIsCorrectUserName = 0;
	UGUIComponent_execIsCorrectUserName_Parms parms;

	if ( !pIsCorrectUserName )
		pIsCorrectUserName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.IsCorrectUserName" );

	parms.strUserName = strUserName;
	this->ProcessEvent ( pIsCorrectUserName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::SetPosition ( float NewLeft, float NewTop, float NewWidth, float NewHeight, bool bForceRelative )
{
	static UFunction* pSetPosition = 0;
	UGUIComponent_execSetPosition_Parms parms;

	if ( !pSetPosition )
		pSetPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetPosition" );

	parms.NewLeft = NewLeft;
	parms.NewTop = NewTop;
	parms.NewWidth = NewWidth;
	parms.NewHeight = NewHeight;
	parms.bForceRelative = bForceRelative;
	this->ProcessEvent ( pSetPosition, &parms, NULL );

}*/

/*void UGUIComponent::eventResolutionChanged ( int ResX, int ResY )
{
	static UFunction* pResolutionChanged = 0;
	UGUIComponent_eventResolutionChanged_Parms parms;

	if ( !pResolutionChanged )
		pResolutionChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.ResolutionChanged" );

	parms.ResX = ResX;
	parms.ResY = ResY;
	this->ProcessEvent ( pResolutionChanged, &parms, NULL );

}*/

/*float UGUIComponent::RelativeHeight ( float RealHeight, bool bForce )
{
	static UFunction* pRelativeHeight = 0;
	UGUIComponent_execRelativeHeight_Parms parms;

	if ( !pRelativeHeight )
		pRelativeHeight = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.RelativeHeight" );

	WORD iNative = pRelativeHeight->iNative;
	pRelativeHeight->FunctionFlags &= ~FUNC_Native;
	pRelativeHeight->iNative = 0;

	parms.RealHeight = RealHeight;
	parms.bForce = bForce;
	this->ProcessEvent ( pRelativeHeight, &parms, NULL );

	pRelativeHeight->iNative = iNative;
	pRelativeHeight->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*float UGUIComponent::RelativeWidth ( float RealWidth, bool bForce )
{
	static UFunction* pRelativeWidth = 0;
	UGUIComponent_execRelativeWidth_Parms parms;

	if ( !pRelativeWidth )
		pRelativeWidth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.RelativeWidth" );

	WORD iNative = pRelativeWidth->iNative;
	pRelativeWidth->FunctionFlags &= ~FUNC_Native;
	pRelativeWidth->iNative = 0;

	parms.RealWidth = RealWidth;
	parms.bForce = bForce;
	this->ProcessEvent ( pRelativeWidth, &parms, NULL );

	pRelativeWidth->iNative = iNative;
	pRelativeWidth->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*float UGUIComponent::RelativeTop ( float RealTop, bool bForce )
{
	static UFunction* pRelativeTop = 0;
	UGUIComponent_execRelativeTop_Parms parms;

	if ( !pRelativeTop )
		pRelativeTop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.RelativeTop" );

	WORD iNative = pRelativeTop->iNative;
	pRelativeTop->FunctionFlags &= ~FUNC_Native;
	pRelativeTop->iNative = 0;

	parms.RealTop = RealTop;
	parms.bForce = bForce;
	this->ProcessEvent ( pRelativeTop, &parms, NULL );

	pRelativeTop->iNative = iNative;
	pRelativeTop->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*float UGUIComponent::RelativeLeft ( float RealLeft, bool bForce )
{
	static UFunction* pRelativeLeft = 0;
	UGUIComponent_execRelativeLeft_Parms parms;

	if ( !pRelativeLeft )
		pRelativeLeft = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.RelativeLeft" );

	WORD iNative = pRelativeLeft->iNative;
	pRelativeLeft->FunctionFlags &= ~FUNC_Native;
	pRelativeLeft->iNative = 0;

	parms.RealLeft = RealLeft;
	parms.bForce = bForce;
	this->ProcessEvent ( pRelativeLeft, &parms, NULL );

	pRelativeLeft->iNative = iNative;
	pRelativeLeft->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*float UGUIComponent::ActualTop ( float val, bool bForce )
{
	static UFunction* pActualTop = 0;
	UGUIComponent_execActualTop_Parms parms;

	if ( !pActualTop )
		pActualTop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.ActualTop" );

	WORD iNative = pActualTop->iNative;
	pActualTop->FunctionFlags &= ~FUNC_Native;
	pActualTop->iNative = 0;

	parms.val = val;
	parms.bForce = bForce;
	this->ProcessEvent ( pActualTop, &parms, NULL );

	pActualTop->iNative = iNative;
	pActualTop->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*float UGUIComponent::ActualLeft ( float val, bool bForce )
{
	static UFunction* pActualLeft = 0;
	UGUIComponent_execActualLeft_Parms parms;

	if ( !pActualLeft )
		pActualLeft = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.ActualLeft" );

	WORD iNative = pActualLeft->iNative;
	pActualLeft->FunctionFlags &= ~FUNC_Native;
	pActualLeft->iNative = 0;

	parms.val = val;
	parms.bForce = bForce;
	this->ProcessEvent ( pActualLeft, &parms, NULL );

	pActualLeft->iNative = iNative;
	pActualLeft->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*float UGUIComponent::ActualHeight ( float val, bool bForce )
{
	static UFunction* pActualHeight = 0;
	UGUIComponent_execActualHeight_Parms parms;

	if ( !pActualHeight )
		pActualHeight = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.ActualHeight" );

	WORD iNative = pActualHeight->iNative;
	pActualHeight->FunctionFlags &= ~FUNC_Native;
	pActualHeight->iNative = 0;

	parms.val = val;
	parms.bForce = bForce;
	this->ProcessEvent ( pActualHeight, &parms, NULL );

	pActualHeight->iNative = iNative;
	pActualHeight->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*float UGUIComponent::ActualWidth ( float val, bool bForce )
{
	static UFunction* pActualWidth = 0;
	UGUIComponent_execActualWidth_Parms parms;

	if ( !pActualWidth )
		pActualWidth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.ActualWidth" );

	WORD iNative = pActualWidth->iNative;
	pActualWidth->FunctionFlags &= ~FUNC_Native;
	pActualWidth->iNative = 0;

	parms.val = val;
	parms.bForce = bForce;
	this->ProcessEvent ( pActualWidth, &parms, NULL );

	pActualWidth->iNative = iNative;
	pActualWidth->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*void UGUIComponent::UpdateBounds (  )
{
	static UFunction* pUpdateBounds = 0;
	UGUIComponent_execUpdateBounds_Parms parms;

	if ( !pUpdateBounds )
		pUpdateBounds = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.UpdateBounds" );

	this->ProcessEvent ( pUpdateBounds, &parms, NULL );

}*/

/*void UGUIComponent::UpdateOffset ( float PosX, float PosY, float PosW, float PosH )
{
	static UFunction* pUpdateOffset = 0;
	UGUIComponent_execUpdateOffset_Parms parms;

	if ( !pUpdateOffset )
		pUpdateOffset = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.UpdateOffset" );

	WORD iNative = pUpdateOffset->iNative;
	pUpdateOffset->FunctionFlags &= ~FUNC_Native;
	pUpdateOffset->iNative = 0;

	parms.PosX = PosX;
	parms.PosY = PosY;
	parms.PosW = PosW;
	parms.PosH = PosH;
	this->ProcessEvent ( pUpdateOffset, &parms, NULL );

	pUpdateOffset->iNative = iNative;
	pUpdateOffset->FunctionFlags |= FUNC_Native;
}*/

/*void UGUIComponent::AutoPositionOn ( class TArray< class UGUIComponent* > Components, class UGUIComponent* frame, float LeftPadPerc, float UpperPadPerc, float RightPadPerc, float LowerPadPerc, int NumberOfColumns, float ColumnPadding )
{
	static UFunction* pAutoPositionOn = 0;
	UGUIComponent_execAutoPositionOn_Parms parms;

	if ( !pAutoPositionOn )
		pAutoPositionOn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.AutoPositionOn" );

	WORD iNative = pAutoPositionOn->iNative;
	pAutoPositionOn->FunctionFlags &= ~FUNC_Native;
	pAutoPositionOn->iNative = 0;

	parms.Components = Components;
	parms.frame = frame;
	parms.LeftPadPerc = LeftPadPerc;
	parms.UpperPadPerc = UpperPadPerc;
	parms.RightPadPerc = RightPadPerc;
	parms.LowerPadPerc = LowerPadPerc;
	parms.NumberOfColumns = NumberOfColumns;
	parms.ColumnPadding = ColumnPadding;
	this->ProcessEvent ( pAutoPositionOn, &parms, NULL );

	pAutoPositionOn->iNative = iNative;
	pAutoPositionOn->FunctionFlags |= FUNC_Native;
}*/

/*void UGUIComponent::AutoPosition ( class TArray< class UGUIComponent* > Components, float LeftBound, float UpperBound, float RightBound, float LowerBound, float LeftPad, float UpperPad, float RightPad, float LowerPad, int NumberOfColumns, float ColumnPadding )
{
	static UFunction* pAutoPosition = 0;
	UGUIComponent_execAutoPosition_Parms parms;

	if ( !pAutoPosition )
		pAutoPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.AutoPosition" );

	WORD iNative = pAutoPosition->iNative;
	pAutoPosition->FunctionFlags &= ~FUNC_Native;
	pAutoPosition->iNative = 0;

	parms.Components = Components;
	parms.LeftBound = LeftBound;
	parms.UpperBound = UpperBound;
	parms.RightBound = RightBound;
	parms.LowerBound = LowerBound;
	parms.LeftPad = LeftPad;
	parms.UpperPad = UpperPad;
	parms.RightPad = RightPad;
	parms.LowerPad = LowerPad;
	parms.NumberOfColumns = NumberOfColumns;
	parms.ColumnPadding = ColumnPadding;
	this->ProcessEvent ( pAutoPosition, &parms, NULL );

	pAutoPosition->iNative = iNative;
	pAutoPosition->FunctionFlags |= FUNC_Native;
}*/

/*void UGUIComponent::KillTimer ( struct FName TimerFunc )
{
	static UFunction* pKillTimer = 0;
	UGUIComponent_execKillTimer_Parms parms;

	if ( !pKillTimer )
		pKillTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.KillTimer" );

	WORD iNative = pKillTimer->iNative;
	pKillTimer->FunctionFlags &= ~FUNC_Native;
	pKillTimer->iNative = 0;

	parms.TimerFunc = TimerFunc;
	this->ProcessEvent ( pKillTimer, &parms, NULL );

	pKillTimer->iNative = iNative;
	pKillTimer->FunctionFlags |= FUNC_Native;
}*/

/*void UGUIComponent::SetTimer ( float Interval, bool bRepeat, struct FName TimerFunc )
{
	static UFunction* pSetTimer = 0;
	UGUIComponent_execSetTimer_Parms parms;

	if ( !pSetTimer )
		pSetTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.SetTimer" );

	WORD iNative = pSetTimer->iNative;
	pSetTimer->FunctionFlags &= ~FUNC_Native;
	pSetTimer->iNative = 0;

	parms.Interval = Interval;
	parms.bRepeat = bRepeat;
	parms.TimerFunc = TimerFunc;
	this->ProcessEvent ( pSetTimer, &parms, NULL );

	pSetTimer->iNative = iNative;
	pSetTimer->FunctionFlags |= FUNC_Native;
}*/

/*class APlayerController* UGUIComponent::PlayerOwner (  )
{
	static UFunction* pPlayerOwner = 0;
	UGUIComponent_execPlayerOwner_Parms parms;

	if ( !pPlayerOwner )
		pPlayerOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.PlayerOwner" );

	WORD iNative = pPlayerOwner->iNative;
	pPlayerOwner->FunctionFlags &= ~FUNC_Native;
	pPlayerOwner->iNative = 0;

	this->ProcessEvent ( pPlayerOwner, &parms, NULL );

	pPlayerOwner->iNative = iNative;
	pPlayerOwner->FunctionFlags |= FUNC_Native;
	return parms.ReturnValue;
}*/

/*void UGUIComponent::OnDragOver ( class UGUIComponent* Sender )
{
	static UFunction* pOnDragOver = 0;
	UGUIComponent_execOnDragOver_Parms parms;

	if ( !pOnDragOver )
		pOnDragOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnDragOver" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnDragOver, &parms, NULL );

}*/

/*void UGUIComponent::OnDragLeave ( class UGUIComponent* Sender )
{
	static UFunction* pOnDragLeave = 0;
	UGUIComponent_execOnDragLeave_Parms parms;

	if ( !pOnDragLeave )
		pOnDragLeave = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnDragLeave" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnDragLeave, &parms, NULL );

}*/

/*void UGUIComponent::OnDragEnter ( class UGUIComponent* Sender )
{
	static UFunction* pOnDragEnter = 0;
	UGUIComponent_execOnDragEnter_Parms parms;

	if ( !pOnDragEnter )
		pOnDragEnter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnDragEnter" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnDragEnter, &parms, NULL );

}*/

/*bool UGUIComponent::OnDragDrop ( class UGUIComponent* Sender )
{
	static UFunction* pOnDragDrop = 0;
	UGUIComponent_execOnDragDrop_Parms parms;

	if ( !pOnDragDrop )
		pOnDragDrop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnDragDrop" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnDragDrop, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::OnEndDrag ( class UGUIComponent* Sender, bool bAccepted )
{
	static UFunction* pOnEndDrag = 0;
	UGUIComponent_execOnEndDrag_Parms parms;

	if ( !pOnEndDrag )
		pOnEndDrag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnEndDrag" );

	parms.Sender = Sender;
	parms.bAccepted = bAccepted;
	this->ProcessEvent ( pOnEndDrag, &parms, NULL );

}*/

/*bool UGUIComponent::OnBeginDrag ( class UGUIComponent* Sender )
{
	static UFunction* pOnBeginDrag = 0;
	UGUIComponent_execOnBeginDrag_Parms parms;

	if ( !pOnBeginDrag )
		pOnBeginDrag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnBeginDrag" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnBeginDrag, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::OnMultiSelect ( class UGUIComponent* Sender )
{
	static UFunction* pOnMultiSelect = 0;
	UGUIComponent_execOnMultiSelect_Parms parms;

	if ( !pOnMultiSelect )
		pOnMultiSelect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnMultiSelect" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnMultiSelect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIComponent::OnSaveINI ( class UGUIComponent* Sender )
{
	static UFunction* pOnSaveINI = 0;
	UGUIComponent_execOnSaveINI_Parms parms;

	if ( !pOnSaveINI )
		pOnSaveINI = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnSaveINI" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnSaveINI, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::OnLoadINI ( class UGUIComponent* Sender, struct FString S )
{
	static UFunction* pOnLoadINI = 0;
	UGUIComponent_execOnLoadINI_Parms parms;

	if ( !pOnLoadINI )
		pOnLoadINI = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnLoadINI" );

	parms.Sender = Sender;
	parms.S = S;
	this->ProcessEvent ( pOnLoadINI, &parms, NULL );

}*/

/*bool UGUIComponent::OnCapturedMouseMove ( float deltaX, float deltaY )
{
	static UFunction* pOnCapturedMouseMove = 0;
	UGUIComponent_execOnCapturedMouseMove_Parms parms;

	if ( !pOnCapturedMouseMove )
		pOnCapturedMouseMove = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnCapturedMouseMove" );

	parms.deltaX = deltaX;
	parms.deltaY = deltaY;
	this->ProcessEvent ( pOnCapturedMouseMove, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::OnDesignModeKeyEvent ( unsigned char key, unsigned char State )
{
	static UFunction* pOnDesignModeKeyEvent = 0;
	UGUIComponent_execOnDesignModeKeyEvent_Parms parms;

	if ( !pOnDesignModeKeyEvent )
		pOnDesignModeKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnDesignModeKeyEvent" );

	parms.key = key;
	parms.State = State;
	this->ProcessEvent ( pOnDesignModeKeyEvent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::OnKeyEvent ( float Delta, unsigned char* key, unsigned char* State )
{
	static UFunction* pOnKeyEvent = 0;
	UGUIComponent_execOnKeyEvent_Parms parms;

	if ( !pOnKeyEvent )
		pOnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pOnKeyEvent, &parms, NULL );

	*key = parms.key;
	*State = parms.State;
	return parms.ReturnValue;
}*/

/*bool UGUIComponent::OnKeyType ( struct FString Unicode, unsigned char* key )
{
	static UFunction* pOnKeyType = 0;
	UGUIComponent_execOnKeyType_Parms parms;

	if ( !pOnKeyType )
		pOnKeyType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnKeyType" );

	parms.Unicode = Unicode;
	this->ProcessEvent ( pOnKeyType, &parms, NULL );

	*key = parms.key;
	return parms.ReturnValue;
}*/

/*void UGUIComponent::OnChange ( class UGUIComponent* Sender )
{
	static UFunction* pOnChange = 0;
	UGUIComponent_execOnChange_Parms parms;

	if ( !pOnChange )
		pOnChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnChange" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnChange, &parms, NULL );

}*/

/*void UGUIComponent::OnTimer ( class UGUIComponent* Sender )
{
	static UFunction* pOnTimer = 0;
	UGUIComponent_execOnTimer_Parms parms;

	if ( !pOnTimer )
		pOnTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnTimer" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnTimer, &parms, NULL );

}*/

/*void UGUIComponent::OnMouseRelease ( class UGUIComponent* Sender )
{
	static UFunction* pOnMouseRelease = 0;
	UGUIComponent_execOnMouseRelease_Parms parms;

	if ( !pOnMouseRelease )
		pOnMouseRelease = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnMouseRelease" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnMouseRelease, &parms, NULL );

}*/

/*void UGUIComponent::OnMousePressed ( class UGUIComponent* Sender, bool bRepeat )
{
	static UFunction* pOnMousePressed = 0;
	UGUIComponent_execOnMousePressed_Parms parms;

	if ( !pOnMousePressed )
		pOnMousePressed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnMousePressed" );

	parms.Sender = Sender;
	parms.bRepeat = bRepeat;
	this->ProcessEvent ( pOnMousePressed, &parms, NULL );

}*/

/*bool UGUIComponent::OnRightClick ( class UGUIComponent* Sender )
{
	static UFunction* pOnRightClick = 0;
	UGUIComponent_execOnRightClick_Parms parms;

	if ( !pOnRightClick )
		pOnRightClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnRightClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnRightClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::OnDblClick ( class UGUIComponent* Sender )
{
	static UFunction* pOnDblClick = 0;
	UGUIComponent_execOnDblClick_Parms parms;

	if ( !pOnDblClick )
		pOnDblClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnDblClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnDblClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::OnClick ( class UGUIComponent* Sender )
{
	static UFunction* pOnClick = 0;
	UGUIComponent_execOnClick_Parms parms;

	if ( !pOnClick )
		pOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::OnHover ( class UGUIComponent* Sender )
{
	static UFunction* pOnHover = 0;
	UGUIComponent_execOnHover_Parms parms;

	if ( !pOnHover )
		pOnHover = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnHover" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnHover, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::OnInvalidate ( class UGUIComponent* Who )
{
	static UFunction* pOnInvalidate = 0;
	UGUIComponent_execOnInvalidate_Parms parms;

	if ( !pOnInvalidate )
		pOnInvalidate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnInvalidate" );

	parms.Who = Who;
	this->ProcessEvent ( pOnInvalidate, &parms, NULL );

}*/

/*bool UGUIComponent::OnEndTooltip (  )
{
	static UFunction* pOnEndTooltip = 0;
	UGUIComponent_execOnEndTooltip_Parms parms;

	if ( !pOnEndTooltip )
		pOnEndTooltip = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnEndTooltip" );

	this->ProcessEvent ( pOnEndTooltip, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIToolTip* UGUIComponent::OnBeginTooltip (  )
{
	static UFunction* pOnBeginTooltip = 0;
	UGUIComponent_execOnBeginTooltip_Parms parms;

	if ( !pOnBeginTooltip )
		pOnBeginTooltip = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnBeginTooltip" );

	this->ProcessEvent ( pOnBeginTooltip, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::OnShow (  )
{
	static UFunction* pOnShow = 0;
	UGUIComponent_execOnShow_Parms parms;

	if ( !pOnShow )
		pOnShow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnShow" );

	this->ProcessEvent ( pOnShow, &parms, NULL );

}*/

/*void UGUIComponent::OnHide (  )
{
	static UFunction* pOnHide = 0;
	UGUIComponent_execOnHide_Parms parms;

	if ( !pOnHide )
		pOnHide = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnHide" );

	this->ProcessEvent ( pOnHide, &parms, NULL );

}*/

/*void UGUIComponent::OnMessage ( struct FString Msg, float MsgLife )
{
	static UFunction* pOnMessage = 0;
	UGUIComponent_execOnMessage_Parms parms;

	if ( !pOnMessage )
		pOnMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnMessage" );

	parms.Msg = Msg;
	parms.MsgLife = MsgLife;
	this->ProcessEvent ( pOnMessage, &parms, NULL );

}*/

/*void UGUIComponent::OnHitTest ( float MouseX, float MouseY )
{
	static UFunction* pOnHitTest = 0;
	UGUIComponent_execOnHitTest_Parms parms;

	if ( !pOnHitTest )
		pOnHitTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnHitTest" );

	parms.MouseX = MouseX;
	parms.MouseY = MouseY;
	this->ProcessEvent ( pOnHitTest, &parms, NULL );

}*/

/*void UGUIComponent::OnWatch (  )
{
	static UFunction* pOnWatch = 0;
	UGUIComponent_execOnWatch_Parms parms;

	if ( !pOnWatch )
		pOnWatch = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnWatch" );

	this->ProcessEvent ( pOnWatch, &parms, NULL );

}*/

/*void UGUIComponent::OnDeActivate (  )
{
	static UFunction* pOnDeActivate = 0;
	UGUIComponent_execOnDeActivate_Parms parms;

	if ( !pOnDeActivate )
		pOnDeActivate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnDeActivate" );

	this->ProcessEvent ( pOnDeActivate, &parms, NULL );

}*/

/*void UGUIComponent::OnActivate (  )
{
	static UFunction* pOnActivate = 0;
	UGUIComponent_execOnActivate_Parms parms;

	if ( !pOnActivate )
		pOnActivate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnActivate" );

	this->ProcessEvent ( pOnActivate, &parms, NULL );

}*/

/*void UGUIComponent::OnRendered ( class UCanvas* Canvas )
{
	static UFunction* pOnRendered = 0;
	UGUIComponent_execOnRendered_Parms parms;

	if ( !pOnRendered )
		pOnRendered = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnRendered" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pOnRendered, &parms, NULL );

}*/

/*void UGUIComponent::OnRender ( class UCanvas* Canvas )
{
	static UFunction* pOnRender = 0;
	UGUIComponent_execOnRender_Parms parms;

	if ( !pOnRender )
		pOnRender = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnRender" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pOnRender, &parms, NULL );

}*/

/*bool UGUIComponent::OnDraw ( class UCanvas* Canvas )
{
	static UFunction* pOnDraw = 0;
	UGUIComponent_execOnDraw_Parms parms;

	if ( !pOnDraw )
		pOnDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnDraw" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pOnDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComponent::OnPreDraw ( class UCanvas* Canvas )
{
	static UFunction* pOnPreDraw = 0;
	UGUIComponent_execOnPreDraw_Parms parms;

	if ( !pOnPreDraw )
		pOnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnPreDraw" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pOnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComponent::OnEndAnimation ( class UGUIComponent* Sender, unsigned char Type )
{
	static UFunction* pOnEndAnimation = 0;
	UGUIComponent_execOnEndAnimation_Parms parms;

	if ( !pOnEndAnimation )
		pOnEndAnimation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnEndAnimation" );

	parms.Sender = Sender;
	parms.Type = Type;
	this->ProcessEvent ( pOnEndAnimation, &parms, NULL );

}*/

/*void UGUIComponent::OnArrival ( class UGUIComponent* Sender, unsigned char Type )
{
	static UFunction* pOnArrival = 0;
	UGUIComponent_execOnArrival_Parms parms;

	if ( !pOnArrival )
		pOnArrival = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComponent.OnArrival" );

	parms.Sender = Sender;
	parms.Type = Type;
	this->ProcessEvent ( pOnArrival, &parms, NULL );

}*/

/*bool UGUIMultiComponent::RecursiveActiveOwner ( class UGUIComponent* checkComponent )
{
	static UFunction* pRecursiveActiveOwner = 0;
	UGUIMultiComponent_execRecursiveActiveOwner_Parms parms;

	if ( !pRecursiveActiveOwner )
		pRecursiveActiveOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.RecursiveActiveOwner" );

	parms.checkComponent = checkComponent;
	this->ProcessEvent ( pRecursiveActiveOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiComponent::TraversalApplyAWinPos (  )
{
	static UFunction* pTraversalApplyAWinPos = 0;
	UGUIMultiComponent_execTraversalApplyAWinPos_Parms parms;

	if ( !pTraversalApplyAWinPos )
		pTraversalApplyAWinPos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.TraversalApplyAWinPos" );

	this->ProcessEvent ( pTraversalApplyAWinPos, &parms, NULL );

}*/

/*class UGUIComponent* UGUIMultiComponent::NewComponent ( class UGUIComponent* newcompo, struct FFloatBox fbNewCompo, float RenderWeight, class UGUIMultiComponent* ParentComponent )
{
	static UFunction* pNewComponent = 0;
	UGUIMultiComponent_execNewComponent_Parms parms;

	if ( !pNewComponent )
		pNewComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.NewComponent" );

	parms.newcompo = newcompo;
	parms.fbNewCompo = fbNewCompo;
	parms.RenderWeight = RenderWeight;
	parms.ParentComponent = ParentComponent;
	this->ProcessEvent ( pNewComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiComponent::CheckDuplicateTabOrder (  )
{
	static UFunction* pCheckDuplicateTabOrder = 0;
	UGUIMultiComponent_execCheckDuplicateTabOrder_Parms parms;

	if ( !pCheckDuplicateTabOrder )
		pCheckDuplicateTabOrder = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.CheckDuplicateTabOrder" );

	this->ProcessEvent ( pCheckDuplicateTabOrder, &parms, NULL );

}*/

/*void UGUIMultiComponent::CheckInvalidTabOrder (  )
{
	static UFunction* pCheckInvalidTabOrder = 0;
	UGUIMultiComponent_execCheckInvalidTabOrder_Parms parms;

	if ( !pCheckInvalidTabOrder )
		pCheckInvalidTabOrder = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.CheckInvalidTabOrder" );

	this->ProcessEvent ( pCheckInvalidTabOrder, &parms, NULL );

}*/

/*void UGUIMultiComponent::DebugTabOrder (  )
{
	static UFunction* pDebugTabOrder = 0;
	UGUIMultiComponent_execDebugTabOrder_Parms parms;

	if ( !pDebugTabOrder )
		pDebugTabOrder = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.DebugTabOrder" );

	this->ProcessEvent ( pDebugTabOrder, &parms, NULL );

}*/

/*void UGUIMultiComponent::CenterMouse (  )
{
	static UFunction* pCenterMouse = 0;
	UGUIMultiComponent_execCenterMouse_Parms parms;

	if ( !pCenterMouse )
		pCenterMouse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.CenterMouse" );

	this->ProcessEvent ( pCenterMouse, &parms, NULL );

}*/

/*void UGUIMultiComponent::LevelChanged (  )
{
	static UFunction* pLevelChanged = 0;
	UGUIMultiComponent_execLevelChanged_Parms parms;

	if ( !pLevelChanged )
		pLevelChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.LevelChanged" );

	this->ProcessEvent ( pLevelChanged, &parms, NULL );

}*/

/*void UGUIMultiComponent::eventEndAnimation ( class UGUIComponent* Animating, unsigned char Type )
{
	static UFunction* pEndAnimation = 0;
	UGUIMultiComponent_eventEndAnimation_Parms parms;

	if ( !pEndAnimation )
		pEndAnimation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.EndAnimation" );

	parms.Animating = Animating;
	parms.Type = Type;
	this->ProcessEvent ( pEndAnimation, &parms, NULL );

}*/

/*void UGUIMultiComponent::eventBeginAnimation ( class UGUIComponent* Animating )
{
	static UFunction* pBeginAnimation = 0;
	UGUIMultiComponent_eventBeginAnimation_Parms parms;

	if ( !pBeginAnimation )
		pBeginAnimation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.BeginAnimation" );

	parms.Animating = Animating;
	this->ProcessEvent ( pBeginAnimation, &parms, NULL );

}*/

/*void UGUIMultiComponent::eventfree (  )
{
	static UFunction* pfree = 0;
	UGUIMultiComponent_eventfree_Parms parms;

	if ( !pfree )
		pfree = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.free" );

	this->ProcessEvent ( pfree, &parms, NULL );

}*/

/*void UGUIMultiComponent::eventClosed ( class UGUIComponent* Sender, bool bCancelled )
{
	static UFunction* pClosed = 0;
	UGUIMultiComponent_eventClosed_Parms parms;

	if ( !pClosed )
		pClosed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.Closed" );

	parms.Sender = Sender;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pClosed, &parms, NULL );

}*/

/*void UGUIMultiComponent::eventOpened ( class UGUIComponent* Sender )
{
	static UFunction* pOpened = 0;
	UGUIMultiComponent_eventOpened_Parms parms;

	if ( !pOpened )
		pOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.Opened" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOpened, &parms, NULL );

}*/

/*void UGUIMultiComponent::eventSetVisibility ( bool bIsVisible )
{
	static UFunction* pSetVisibility = 0;
	UGUIMultiComponent_eventSetVisibility_Parms parms;

	if ( !pSetVisibility )
		pSetVisibility = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.SetVisibility" );

	parms.bIsVisible = bIsVisible;
	this->ProcessEvent ( pSetVisibility, &parms, NULL );

}*/

/*void UGUIMultiComponent::DisableMe (  )
{
	static UFunction* pDisableMe = 0;
	UGUIMultiComponent_execDisableMe_Parms parms;

	if ( !pDisableMe )
		pDisableMe = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.DisableMe" );

	this->ProcessEvent ( pDisableMe, &parms, NULL );

}*/

/*void UGUIMultiComponent::EnableMe (  )
{
	static UFunction* pEnableMe = 0;
	UGUIMultiComponent_execEnableMe_Parms parms;

	if ( !pEnableMe )
		pEnableMe = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.EnableMe" );

	this->ProcessEvent ( pEnableMe, &parms, NULL );

}*/

/*bool UGUIMultiComponent::eventPrevControl ( class UGUIComponent* Sender )
{
	static UFunction* pPrevControl = 0;
	UGUIMultiComponent_eventPrevControl_Parms parms;

	if ( !pPrevControl )
		pPrevControl = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.PrevControl" );

	parms.Sender = Sender;
	this->ProcessEvent ( pPrevControl, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIMultiComponent::eventNextControl ( class UGUIComponent* Sender )
{
	static UFunction* pNextControl = 0;
	UGUIMultiComponent_eventNextControl_Parms parms;

	if ( !pNextControl )
		pNextControl = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.NextControl" );

	parms.Sender = Sender;
	this->ProcessEvent ( pNextControl, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIMultiComponent::eventFocusLast ( class UGUIComponent* Sender )
{
	static UFunction* pFocusLast = 0;
	UGUIMultiComponent_eventFocusLast_Parms parms;

	if ( !pFocusLast )
		pFocusLast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.FocusLast" );

	parms.Sender = Sender;
	this->ProcessEvent ( pFocusLast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIMultiComponent::eventFocusFirst ( class UGUIComponent* Sender )
{
	static UFunction* pFocusFirst = 0;
	UGUIMultiComponent_eventFocusFirst_Parms parms;

	if ( !pFocusFirst )
		pFocusFirst = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.FocusFirst" );

	parms.Sender = Sender;
	this->ProcessEvent ( pFocusFirst, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIMultiComponent::CanAcceptFocus (  )
{
	static UFunction* pCanAcceptFocus = 0;
	UGUIMultiComponent_execCanAcceptFocus_Parms parms;

	if ( !pCanAcceptFocus )
		pCanAcceptFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.CanAcceptFocus" );

	this->ProcessEvent ( pCanAcceptFocus, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiComponent::eventLoseFocus ( class UGUIComponent* Sender )
{
	static UFunction* pLoseFocus = 0;
	UGUIMultiComponent_eventLoseFocus_Parms parms;

	if ( !pLoseFocus )
		pLoseFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.LoseFocus" );

	parms.Sender = Sender;
	this->ProcessEvent ( pLoseFocus, &parms, NULL );

}*/

/*void UGUIMultiComponent::eventSetFocus ( class UGUIComponent* Who )
{
	static UFunction* pSetFocus = 0;
	UGUIMultiComponent_eventSetFocus_Parms parms;

	if ( !pSetFocus )
		pSetFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.SetFocus" );

	parms.Who = Who;
	this->ProcessEvent ( pSetFocus, &parms, NULL );

}*/

/*void UGUIMultiComponent::SetFocusInstead ( class UGUIComponent* InFocusComp )
{
	static UFunction* pSetFocusInstead = 0;
	UGUIMultiComponent_execSetFocusInstead_Parms parms;

	if ( !pSetFocusInstead )
		pSetFocusInstead = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.SetFocusInstead" );

	parms.InFocusComp = InFocusComp;
	this->ProcessEvent ( pSetFocusInstead, &parms, NULL );

}*/

/*bool UGUIMultiComponent::eventRemoveComponent ( class UGUIComponent* Comp, bool SkipRemap )
{
	static UFunction* pRemoveComponent = 0;
	UGUIMultiComponent_eventRemoveComponent_Parms parms;

	if ( !pRemoveComponent )
		pRemoveComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.RemoveComponent" );

	parms.Comp = Comp;
	parms.SkipRemap = SkipRemap;
	this->ProcessEvent ( pRemoveComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIComponent* UGUIMultiComponent::eventAppendComponent ( class UGUIComponent* NewComp, bool SkipRemap )
{
	static UFunction* pAppendComponent = 0;
	UGUIMultiComponent_eventAppendComponent_Parms parms;

	if ( !pAppendComponent )
		pAppendComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.AppendComponent" );

	parms.NewComp = NewComp;
	parms.SkipRemap = SkipRemap;
	this->ProcessEvent ( pAppendComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIComponent* UGUIMultiComponent::eventInsertComponent ( class UGUIComponent* NewComp, int Index, bool SkipRemap )
{
	static UFunction* pInsertComponent = 0;
	UGUIMultiComponent_eventInsertComponent_Parms parms;

	if ( !pInsertComponent )
		pInsertComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.InsertComponent" );

	parms.NewComp = NewComp;
	parms.Index = Index;
	parms.SkipRemap = SkipRemap;
	this->ProcessEvent ( pInsertComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIComponent* UGUIMultiComponent::eventAddComponent ( struct FString ComponentClass, bool SkipRemap )
{
	static UFunction* pAddComponent = 0;
	UGUIMultiComponent_eventAddComponent_Parms parms;

	if ( !pAddComponent )
		pAddComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.AddComponent" );

	parms.ComponentClass = ComponentClass;
	parms.SkipRemap = SkipRemap;
	this->ProcessEvent ( pAddComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiComponent::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIMultiComponent_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIMultiComponent::InternalOnShow (  )
{
	static UFunction* pInternalOnShow = 0;
	UGUIMultiComponent_execInternalOnShow_Parms parms;

	if ( !pInternalOnShow )
		pInternalOnShow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.InternalOnShow" );

	this->ProcessEvent ( pInternalOnShow, &parms, NULL );

}*/

/*int UGUIMultiComponent::FindComponentIndex ( class UGUIComponent* Who )
{
	static UFunction* pFindComponentIndex = 0;
	UGUIMultiComponent_execFindComponentIndex_Parms parms;

	if ( !pFindComponentIndex )
		pFindComponentIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.FindComponentIndex" );

	parms.Who = Who;
	this->ProcessEvent ( pFindComponentIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiComponent::RemapComponents (  )
{
	static UFunction* pRemapComponents = 0;
	UGUIMultiComponent_execRemapComponents_Parms parms;

	if ( !pRemapComponents )
		pRemapComponents = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.RemapComponents" );

	this->ProcessEvent ( pRemapComponents, &parms, NULL );

}*/

/*void UGUIMultiComponent::InitializeControls (  )
{
	static UFunction* pInitializeControls = 0;
	UGUIMultiComponent_execInitializeControls_Parms parms;

	if ( !pInitializeControls )
		pInitializeControls = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.InitializeControls" );

	this->ProcessEvent ( pInitializeControls, &parms, NULL );

}*/

/*void UGUIMultiComponent::OnCreateComponent ( class UGUIComponent* NewComponent, class UGUIComponent* Sender )
{
	static UFunction* pOnCreateComponent = 0;
	UGUIMultiComponent_execOnCreateComponent_Parms parms;

	if ( !pOnCreateComponent )
		pOnCreateComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.OnCreateComponent" );

	parms.NewComponent = NewComponent;
	parms.Sender = Sender;
	this->ProcessEvent ( pOnCreateComponent, &parms, NULL );

}*/

/*bool UGUIMultiComponent::NotifyContextSelect ( class UGUIContextMenu* Sender, int ClickIndex )
{
	static UFunction* pNotifyContextSelect = 0;
	UGUIMultiComponent_execNotifyContextSelect_Parms parms;

	if ( !pNotifyContextSelect )
		pNotifyContextSelect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.NotifyContextSelect" );

	parms.Sender = Sender;
	parms.ClickIndex = ClickIndex;
	this->ProcessEvent ( pNotifyContextSelect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIMultiComponent::HandleContextMenuClose ( class UGUIContextMenu* Sender )
{
	static UFunction* pHandleContextMenuClose = 0;
	UGUIMultiComponent_execHandleContextMenuClose_Parms parms;

	if ( !pHandleContextMenuClose )
		pHandleContextMenuClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.HandleContextMenuClose" );

	parms.Sender = Sender;
	this->ProcessEvent ( pHandleContextMenuClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIMultiComponent::HandleContextMenuOpen ( class UGUIComponent* Sender, class UGUIContextMenu* Menu, class UGUIComponent* ContextMenuOwner )
{
	static UFunction* pHandleContextMenuOpen = 0;
	UGUIMultiComponent_execHandleContextMenuOpen_Parms parms;

	if ( !pHandleContextMenuOpen )
		pHandleContextMenuOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiComponent.HandleContextMenuOpen" );

	parms.Sender = Sender;
	parms.Menu = Menu;
	parms.ContextMenuOwner = ContextMenuOwner;
	this->ProcessEvent ( pHandleContextMenuOpen, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIPage::FadedOut (  )
{
	static UFunction* pFadedOut = 0;
	UGUIPage_execFadedOut_Parms parms;

	if ( !pFadedOut )
		pFadedOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.FadedOut" );

	this->ProcessEvent ( pFadedOut, &parms, NULL );

}*/

/*void UGUIPage::FadedIn (  )
{
	static UFunction* pFadedIn = 0;
	UGUIPage_execFadedIn_Parms parms;

	if ( !pFadedIn )
		pFadedIn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.FadedIn" );

	this->ProcessEvent ( pFadedIn, &parms, NULL );

}*/

/*void UGUIPage::FadeOut ( bool bTranslate, bool bChangeAlpha )
{
	static UFunction* pFadeOut = 0;
	UGUIPage_execFadeOut_Parms parms;

	if ( !pFadeOut )
		pFadeOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.FadeOut" );

	parms.bTranslate = bTranslate;
	parms.bChangeAlpha = bChangeAlpha;
	this->ProcessEvent ( pFadeOut, &parms, NULL );

}*/

/*void UGUIPage::FadeIn ( bool bTranslate, bool bChangeAlpha )
{
	static UFunction* pFadeIn = 0;
	UGUIPage_execFadeIn_Parms parms;

	if ( !pFadeIn )
		pFadeIn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.FadeIn" );

	parms.bTranslate = bTranslate;
	parms.bChangeAlpha = bChangeAlpha;
	this->ProcessEvent ( pFadeIn, &parms, NULL );

}*/

/*bool UGUIPage::AllowOpen ( struct FString MenuClass )
{
	static UFunction* pAllowOpen = 0;
	UGUIPage_execAllowOpen_Parms parms;

	if ( !pAllowOpen )
		pAllowOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.AllowOpen" );

	parms.MenuClass = MenuClass;
	this->ProcessEvent ( pAllowOpen, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIPage::IsOpen (  )
{
	static UFunction* pIsOpen = 0;
	UGUIPage_execIsOpen_Parms parms;

	if ( !pIsOpen )
		pIsOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.IsOpen" );

	this->ProcessEvent ( pIsOpen, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIPage::eventfree (  )
{
	static UFunction* pfree = 0;
	UGUIPage_eventfree_Parms parms;

	if ( !pfree )
		pfree = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.free" );

	this->ProcessEvent ( pfree, &parms, NULL );

}*/

/*bool UGUIPage::NotifyLevelChange (  )
{
	static UFunction* pNotifyLevelChange = 0;
	UGUIPage_execNotifyLevelChange_Parms parms;

	if ( !pNotifyLevelChange )
		pNotifyLevelChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.NotifyLevelChange" );

	this->ProcessEvent ( pNotifyLevelChange, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIPage::SetDataString ( struct FString str )
{
	static UFunction* pSetDataString = 0;
	UGUIPage_execSetDataString_Parms parms;

	if ( !pSetDataString )
		pSetDataString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.SetDataString" );

	parms.str = str;
	this->ProcessEvent ( pSetDataString, &parms, NULL );

}*/

/*struct FString UGUIPage::GetDataString (  )
{
	static UFunction* pGetDataString = 0;
	UGUIPage_execGetDataString_Parms parms;

	if ( !pGetDataString )
		pGetDataString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.GetDataString" );

	this->ProcessEvent ( pGetDataString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIPage::HandleObject ( class UObject* obj, class UObject* OptionalObj_1, class UObject* OptionalObj_2 )
{
	static UFunction* pHandleObject = 0;
	UGUIPage_execHandleObject_Parms parms;

	if ( !pHandleObject )
		pHandleObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.HandleObject" );

	parms.obj = obj;
	parms.OptionalObj_1 = OptionalObj_1;
	parms.OptionalObj_2 = OptionalObj_2;
	this->ProcessEvent ( pHandleObject, &parms, NULL );

}*/

/*bool UGUIPage::GetRestoreParams ( struct FString* Param1, struct FString* Param2 )
{
	static UFunction* pGetRestoreParams = 0;
	UGUIPage_execGetRestoreParams_Parms parms;

	if ( !pGetRestoreParams )
		pGetRestoreParams = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.GetRestoreParams" );

	parms.Param1 = *Param1;
	parms.Param2 = *Param2;
	this->ProcessEvent ( pGetRestoreParams, &parms, NULL );

	*Param1 = parms.Param1;
	*Param2 = parms.Param2;
	return parms.ReturnValue;
}*/

/*void UGUIPage::eventHandleParameters ( struct FString Param1, struct FString Param2 )
{
	static UFunction* pHandleParameters = 0;
	UGUIPage_eventHandleParameters_Parms parms;

	if ( !pHandleParameters )
		pHandleParameters = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.HandleParameters" );

	parms.Param1 = Param1;
	parms.Param2 = Param2;
	this->ProcessEvent ( pHandleParameters, &parms, NULL );

}*/

/*void UGUIPage::eventSetFocus ( class UGUIComponent* Who )
{
	static UFunction* pSetFocus = 0;
	UGUIPage_eventSetFocus_Parms parms;

	if ( !pSetFocus )
		pSetFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.SetFocus" );

	parms.Who = Who;
	this->ProcessEvent ( pSetFocus, &parms, NULL );

}*/

/*void UGUIPage::eventChangeHint ( struct FString NewHint )
{
	static UFunction* pChangeHint = 0;
	UGUIPage_eventChangeHint_Parms parms;

	if ( !pChangeHint )
		pChangeHint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.ChangeHint" );

	parms.NewHint = NewHint;
	this->ProcessEvent ( pChangeHint, &parms, NULL );

}*/

/*void UGUIPage::CheckResolution ( bool Closing, class UGUIController* InController )
{
	static UFunction* pCheckResolution = 0;
	UGUIPage_execCheckResolution_Parms parms;

	if ( !pCheckResolution )
		pCheckResolution = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.CheckResolution" );

	parms.Closing = Closing;
	parms.InController = InController;
	this->ProcessEvent ( pCheckResolution, &parms, NULL );

}*/

/*void UGUIPage::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIPage_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIPage::PlayCloseSound (  )
{
	static UFunction* pPlayCloseSound = 0;
	UGUIPage_execPlayCloseSound_Parms parms;

	if ( !pPlayCloseSound )
		pPlayCloseSound = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.PlayCloseSound" );

	this->ProcessEvent ( pPlayCloseSound, &parms, NULL );

}*/

/*void UGUIPage::PlayOpenSound (  )
{
	static UFunction* pPlayOpenSound = 0;
	UGUIPage_execPlayOpenSound_Parms parms;

	if ( !pPlayOpenSound )
		pPlayOpenSound = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.PlayOpenSound" );

	this->ProcessEvent ( pPlayOpenSound, &parms, NULL );

}*/

/*void UGUIPage::eventClosed ( class UGUIComponent* Sender, bool bCancelled )
{
	static UFunction* pClosed = 0;
	UGUIPage_eventClosed_Parms parms;

	if ( !pClosed )
		pClosed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.Closed" );

	parms.Sender = Sender;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pClosed, &parms, NULL );

}*/

/*bool UGUIPage::OnCanClose ( bool bCancelled )
{
	static UFunction* pOnCanClose = 0;
	UGUIPage_execOnCanClose_Parms parms;

	if ( !pOnCanClose )
		pOnCanClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.OnCanClose" );

	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pOnCanClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIPage::OnClose ( bool bCancelled )
{
	static UFunction* pOnClose = 0;
	UGUIPage_execOnClose_Parms parms;

	if ( !pOnClose )
		pOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.OnClose" );

	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pOnClose, &parms, NULL );

}*/

/*void UGUIPage::OnReOpen (  )
{
	static UFunction* pOnReOpen = 0;
	UGUIPage_execOnReOpen_Parms parms;

	if ( !pOnReOpen )
		pOnReOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.OnReOpen" );

	this->ProcessEvent ( pOnReOpen, &parms, NULL );

}*/

/*void UGUIPage::OnOpen (  )
{
	static UFunction* pOnOpen = 0;
	UGUIPage_execOnOpen_Parms parms;

	if ( !pOnOpen )
		pOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPage.OnOpen" );

	this->ProcessEvent ( pOnOpen, &parms, NULL );

}*/

/*void UGUIQuestionPage::RemoveButtons (  )
{
	static UFunction* pRemoveButtons = 0;
	UGUIQuestionPage_execRemoveButtons_Parms parms;

	if ( !pRemoveButtons )
		pRemoveButtons = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.RemoveButtons" );

	this->ProcessEvent ( pRemoveButtons, &parms, NULL );

}*/

/*struct FString UGUIQuestionPage::Replace ( struct FString Src, struct FString Tag, struct FString Value )
{
	static UFunction* pReplace = 0;
	UGUIQuestionPage_execReplace_Parms parms;

	if ( !pReplace )
		pReplace = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.Replace" );

	parms.Src = Src;
	parms.Tag = Tag;
	parms.Value = Value;
	this->ProcessEvent ( pReplace, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIQuestionPage::ButtonClick ( class UGUIComponent* Sender )
{
	static UFunction* pButtonClick = 0;
	UGUIQuestionPage_execButtonClick_Parms parms;

	if ( !pButtonClick )
		pButtonClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.ButtonClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pButtonClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIQuestionPage::LayoutButtons ( unsigned char ActiveButton )
{
	static UFunction* pLayoutButtons = 0;
	UGUIQuestionPage_execLayoutButtons_Parms parms;

	if ( !pLayoutButtons )
		pLayoutButtons = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.LayoutButtons" );

	parms.ActiveButton = ActiveButton;
	this->ProcessEvent ( pLayoutButtons, &parms, NULL );

}*/

/*class UGUIButton* UGUIQuestionPage::AddButton ( unsigned char idesc )
{
	static UFunction* pAddButton = 0;
	UGUIQuestionPage_execAddButton_Parms parms;

	if ( !pAddButton )
		pAddButton = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.AddButton" );

	parms.idesc = idesc;
	this->ProcessEvent ( pAddButton, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIQuestionPage::SetupQuestion ( struct FString Question, unsigned char bButtons, unsigned char ActiveButton, bool bClearFirst )
{
	static UFunction* pSetupQuestion = 0;
	UGUIQuestionPage_execSetupQuestion_Parms parms;

	if ( !pSetupQuestion )
		pSetupQuestion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.SetupQuestion" );

	parms.Question = Question;
	parms.bButtons = bButtons;
	parms.ActiveButton = ActiveButton;
	parms.bClearFirst = bClearFirst;
	this->ProcessEvent ( pSetupQuestion, &parms, NULL );

}*/

/*bool UGUIQuestionPage::InternalOnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternalOnPreDraw = 0;
	UGUIQuestionPage_execInternalOnPreDraw_Parms parms;

	if ( !pInternalOnPreDraw )
		pInternalOnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.InternalOnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternalOnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIQuestionPage::InitComponent ( class UGUIController* pMyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIQuestionPage_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.InitComponent" );

	parms.pMyController = pMyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UGUIQuestionPage::NewOnButtonClick ( unsigned char bButton )
{
	static UFunction* pNewOnButtonClick = 0;
	UGUIQuestionPage_execNewOnButtonClick_Parms parms;

	if ( !pNewOnButtonClick )
		pNewOnButtonClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.NewOnButtonClick" );

	parms.bButton = bButton;
	this->ProcessEvent ( pNewOnButtonClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIQuestionPage::OnButtonClick ( unsigned char bButton )
{
	static UFunction* pOnButtonClick = 0;
	UGUIQuestionPage_execOnButtonClick_Parms parms;

	if ( !pOnButtonClick )
		pOnButtonClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIQuestionPage.OnButtonClick" );

	parms.bButton = bButton;
	this->ProcessEvent ( pOnButtonClick, &parms, NULL );

}*/

/*int AHudBase::GetCurGameTime (  )
{
	static UFunction* pGetCurGameTime = 0;
	AHudBase_execGetCurGameTime_Parms parms;

	if ( !pGetCurGameTime )
		pGetCurGameTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.GetCurGameTime" );

	this->ProcessEvent ( pGetCurGameTime, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudBase::execclearkilllog (  )
{
	static UFunction* pclearkilllog = 0;
	AHudBase_execclearkilllog_Parms parms;

	if ( !pclearkilllog )
		pclearkilllog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.clearkilllog" );

	this->ProcessEvent ( pclearkilllog, &parms, NULL );

}*/

/*void AHudBase::execuserzone ( struct FString szPath, struct FString szCommand )
{
	static UFunction* puserzone = 0;
	AHudBase_execuserzone_Parms parms;

	if ( !puserzone )
		puserzone = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.userzone" );

	parms.szPath = szPath;
	parms.szCommand = szCommand;
	this->ProcessEvent ( puserzone, &parms, NULL );

}*/

/*void AHudBase::execusermove ( struct FString szPath, struct FString szCommand, int nCombatNum )
{
	static UFunction* pusermove = 0;
	AHudBase_execusermove_Parms parms;

	if ( !pusermove )
		pusermove = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.usermove" );

	parms.szPath = szPath;
	parms.szCommand = szCommand;
	parms.nCombatNum = nCombatNum;
	this->ProcessEvent ( pusermove, &parms, NULL );

}*/

/*void AHudBase::execkilllog ( struct FString szPath, struct FString szCommand )
{
	static UFunction* pkilllog = 0;
	AHudBase_execkilllog_Parms parms;

	if ( !pkilllog )
		pkilllog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.killlog" );

	parms.szPath = szPath;
	parms.szCommand = szCommand;
	this->ProcessEvent ( pkilllog, &parms, NULL );

}*/

/*void AHudBase::eventWorldSpaceOverlays (  )
{
	static UFunction* pWorldSpaceOverlays = 0;
	AHudBase_eventWorldSpaceOverlays_Parms parms;

	if ( !pWorldSpaceOverlays )
		pWorldSpaceOverlays = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.WorldSpaceOverlays" );

	this->ProcessEvent ( pWorldSpaceOverlays, &parms, NULL );

}*/

/*void AHudBase::PlayHUDSound ( class APlayerController* PC, unsigned char soundType )
{
	static UFunction* pPlayHUDSound = 0;
	AHudBase_execPlayHUDSound_Parms parms;

	if ( !pPlayHUDSound )
		pPlayHUDSound = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.PlayHUDSound" );

	parms.PC = PC;
	parms.soundType = soundType;
	this->ProcessEvent ( pPlayHUDSound, &parms, NULL );

}*/

/*struct FVector AHudBase::CalcNametagPos ( class APawn* curPawn )
{
	static UFunction* pCalcNametagPos = 0;
	AHudBase_execCalcNametagPos_Parms parms;

	if ( !pCalcNametagPos )
		pCalcNametagPos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.CalcNametagPos" );

	parms.curPawn = curPawn;
	this->ProcessEvent ( pCalcNametagPos, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FVector AHudBase::CalcNametagPosNative ( class APawn* curPawn )
{
	static UFunction* pCalcNametagPosNative = 0;
	AHudBase_execCalcNametagPosNative_Parms parms;

	if ( !pCalcNametagPosNative )
		pCalcNametagPosNative = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.CalcNametagPosNative" );

	parms.curPawn = curPawn;
	this->ProcessEvent ( pCalcNametagPosNative, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class FColor AHudBase::GetNametagColor ( class APlayerReplicationInfo* Info )
{
	static UFunction* pGetNametagColor = 0;
	AHudBase_execGetNametagColor_Parms parms;

	if ( !pGetNametagColor )
		pGetNametagColor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.GetNametagColor" );

	parms.Info = Info;
	this->ProcessEvent ( pGetNametagColor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudBase::RefreshKillerName ( struct FString mKillerName )
{
	static UFunction* pRefreshKillerName = 0;
	AHudBase_execRefreshKillerName_Parms parms;

	if ( !pRefreshKillerName )
		pRefreshKillerName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.RefreshKillerName" );

	parms.mKillerName = mKillerName;
	this->ProcessEvent ( pRefreshKillerName, &parms, NULL );

}*/

/*void AHudBase::DrawNameTag ( class UCanvas* C, class AwPawn* curPawn )
{
	static UFunction* pDrawNameTag = 0;
	AHudBase_execDrawNameTag_Parms parms;

	if ( !pDrawNameTag )
		pDrawNameTag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawNameTag" );

	parms.C = C;
	parms.curPawn = curPawn;
	this->ProcessEvent ( pDrawNameTag, &parms, NULL );

}*/

/*void AHudBase::DrawMissionIcon ( class UCanvas* C, class AwPawn* curPawn )
{
	static UFunction* pDrawMissionIcon = 0;
	AHudBase_execDrawMissionIcon_Parms parms;

	if ( !pDrawMissionIcon )
		pDrawMissionIcon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawMissionIcon" );

	parms.C = C;
	parms.curPawn = curPawn;
	this->ProcessEvent ( pDrawMissionIcon, &parms, NULL );

}*/

/*void AHudBase::DrawNametagsScript ( class UCanvas* C, bool bSpectateMode, bool drawAlways )
{
	static UFunction* pDrawNametagsScript = 0;
	AHudBase_execDrawNametagsScript_Parms parms;

	if ( !pDrawNametagsScript )
		pDrawNametagsScript = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawNametagsScript" );

	parms.C = C;
	parms.bSpectateMode = bSpectateMode;
	parms.drawAlways = drawAlways;
	this->ProcessEvent ( pDrawNametagsScript, &parms, NULL );

}*/

/*void AHudBase::DrawNametags ( class UCanvas* C, bool bSpectateMode, bool drawAlways )
{
	static UFunction* pDrawNametags = 0;
	AHudBase_execDrawNametags_Parms parms;

	if ( !pDrawNametags )
		pDrawNametags = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawNametags" );

	parms.C = C;
	parms.bSpectateMode = bSpectateMode;
	parms.drawAlways = drawAlways;
	this->ProcessEvent ( pDrawNametags, &parms, NULL );

}*/

/*void AHudBase::DrawNametagsNative ( class UCanvas* C, bool bSpectateMode, bool drawAlways )
{
	static UFunction* pDrawNametagsNative = 0;
	AHudBase_execDrawNametagsNative_Parms parms;

	if ( !pDrawNametagsNative )
		pDrawNametagsNative = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawNametagsNative" );

	parms.C = C;
	parms.bSpectateMode = bSpectateMode;
	parms.drawAlways = drawAlways;
	this->ProcessEvent ( pDrawNametagsNative, &parms, NULL );

}*/

/*void AHudBase::DrawHudSpectating ( class UCanvas* C )
{
	static UFunction* pDrawHudSpectating = 0;
	AHudBase_execDrawHudSpectating_Parms parms;

	if ( !pDrawHudSpectating )
		pDrawHudSpectating = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawHudSpectating" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudSpectating, &parms, NULL );

}*/

/*void AHudBase::DrawGMHudSpectating ( class UCanvas* C )
{
	static UFunction* pDrawGMHudSpectating = 0;
	AHudBase_execDrawGMHudSpectating_Parms parms;

	if ( !pDrawGMHudSpectating )
		pDrawGMHudSpectating = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawGMHudSpectating" );

	parms.C = C;
	this->ProcessEvent ( pDrawGMHudSpectating, &parms, NULL );

}*/

/*class APlayerReplicationInfo* AHudBase::FindPRI ( class APawn* P )
{
	static UFunction* pFindPRI = 0;
	AHudBase_execFindPRI_Parms parms;

	if ( !pFindPRI )
		pFindPRI = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.FindPRI" );

	parms.P = P;
	this->ProcessEvent ( pFindPRI, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class FColor AHudBase::GetBaseTeamColor ( int viewerTeamIndex, int targetTeamIndex )
{
	static UFunction* pGetBaseTeamColor = 0;
	AHudBase_execGetBaseTeamColor_Parms parms;

	if ( !pGetBaseTeamColor )
		pGetBaseTeamColor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.GetBaseTeamColor" );

	parms.viewerTeamIndex = viewerTeamIndex;
	parms.targetTeamIndex = targetTeamIndex;
	this->ProcessEvent ( pGetBaseTeamColor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AHudBase::GetBaseTeamName ( int TeamIndex )
{
	static UFunction* pGetBaseTeamName = 0;
	AHudBase_execGetBaseTeamName_Parms parms;

	if ( !pGetBaseTeamName )
		pGetBaseTeamName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.GetBaseTeamName" );

	parms.TeamIndex = TeamIndex;
	this->ProcessEvent ( pGetBaseTeamName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudBase::DrawWarfareCrosshairExtNative ( class UCanvas* C, int Spread )
{
	static UFunction* pDrawWarfareCrosshairExtNative = 0;
	AHudBase_execDrawWarfareCrosshairExtNative_Parms parms;

	if ( !pDrawWarfareCrosshairExtNative )
		pDrawWarfareCrosshairExtNative = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawWarfareCrosshairExtNative" );

	parms.C = C;
	parms.Spread = Spread;
	this->ProcessEvent ( pDrawWarfareCrosshairExtNative, &parms, NULL );

}*/

/*void AHudBase::CalculateCoordinateDigitEx ( class UCanvas* C, struct FDigitSet W, struct FNumericWidget N, float fWidth, float fHeight, int Index, struct FCalCoordsW* coordsW )
{
	static UFunction* pCalculateCoordinateDigitEx = 0;
	AHudBase_execCalculateCoordinateDigitEx_Parms parms;

	if ( !pCalculateCoordinateDigitEx )
		pCalculateCoordinateDigitEx = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.CalculateCoordinateDigitEx" );

	parms.C = C;
	parms.W = W;
	parms.N = N;
	parms.fWidth = fWidth;
	parms.fHeight = fHeight;
	parms.Index = Index;
	this->ProcessEvent ( pCalculateCoordinateDigitEx, &parms, NULL );

	*coordsW = parms.coordsW;
}*/

/*void AHudBase::CalculateCoordinateDigit ( class UCanvas* C, struct FDigitSet W, struct FNumericWidget N, float fWidth, float fHeight, int Index, struct FCalCoordsW* coordsW )
{
	static UFunction* pCalculateCoordinateDigit = 0;
	AHudBase_execCalculateCoordinateDigit_Parms parms;

	if ( !pCalculateCoordinateDigit )
		pCalculateCoordinateDigit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.CalculateCoordinateDigit" );

	parms.C = C;
	parms.W = W;
	parms.N = N;
	parms.fWidth = fWidth;
	parms.fHeight = fHeight;
	parms.Index = Index;
	this->ProcessEvent ( pCalculateCoordinateDigit, &parms, NULL );

	*coordsW = parms.coordsW;
}*/

/*void AHudBase::CalculateCoordinateEx ( class UCanvas* C, struct FSpriteWidget W, float fWidth, float fHeight, struct FCalCoordsW* coordsW )
{
	static UFunction* pCalculateCoordinateEx = 0;
	AHudBase_execCalculateCoordinateEx_Parms parms;

	if ( !pCalculateCoordinateEx )
		pCalculateCoordinateEx = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.CalculateCoordinateEx" );

	parms.C = C;
	parms.W = W;
	parms.fWidth = fWidth;
	parms.fHeight = fHeight;
	this->ProcessEvent ( pCalculateCoordinateEx, &parms, NULL );

	*coordsW = parms.coordsW;
}*/

/*void AHudBase::CalculateCoordinate ( class UCanvas* C, struct FSpriteWidget W, float fWidth, float fHeight, struct FCalCoordsW* coordsW )
{
	static UFunction* pCalculateCoordinate = 0;
	AHudBase_execCalculateCoordinate_Parms parms;

	if ( !pCalculateCoordinate )
		pCalculateCoordinate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.CalculateCoordinate" );

	parms.C = C;
	parms.W = W;
	parms.fWidth = fWidth;
	parms.fHeight = fHeight;
	this->ProcessEvent ( pCalculateCoordinate, &parms, NULL );

	*coordsW = parms.coordsW;
}*/

/*void AHudBase::DrawTileFromSpriteWidget2 ( class UCanvas* C, struct FSpriteWidget SW, float W, float H )
{
	static UFunction* pDrawTileFromSpriteWidget2 = 0;
	AHudBase_execDrawTileFromSpriteWidget2_Parms parms;

	if ( !pDrawTileFromSpriteWidget2 )
		pDrawTileFromSpriteWidget2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawTileFromSpriteWidget2" );

	parms.C = C;
	parms.SW = SW;
	parms.W = W;
	parms.H = H;
	this->ProcessEvent ( pDrawTileFromSpriteWidget2, &parms, NULL );

}*/

/*void AHudBase::DrawTileFromSpriteWidget ( class UCanvas* C, struct FSpriteWidget SW )
{
	static UFunction* pDrawTileFromSpriteWidget = 0;
	AHudBase_execDrawTileFromSpriteWidget_Parms parms;

	if ( !pDrawTileFromSpriteWidget )
		pDrawTileFromSpriteWidget = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawTileFromSpriteWidget" );

	parms.C = C;
	parms.SW = SW;
	this->ProcessEvent ( pDrawTileFromSpriteWidget, &parms, NULL );

}*/

/*void AHudBase::ClipScreenCoords ( class UCanvas* C, float XL, float YL, float* X, float* Y )
{
	static UFunction* pClipScreenCoords = 0;
	AHudBase_execClipScreenCoords_Parms parms;

	if ( !pClipScreenCoords )
		pClipScreenCoords = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.ClipScreenCoords" );

	parms.C = C;
	parms.XL = XL;
	parms.YL = YL;
	this->ProcessEvent ( pClipScreenCoords, &parms, NULL );

	*X = parms.X;
	*Y = parms.Y;
}*/

/*bool AHudBase::IsTargetInFrontOfPlayer2 ( class UCanvas* C, struct FVector TargetPos, struct FVector camLoc, struct FRotator camRot, struct FVector* ScreenPos )
{
	static UFunction* pIsTargetInFrontOfPlayer2 = 0;
	AHudBase_execIsTargetInFrontOfPlayer2_Parms parms;

	if ( !pIsTargetInFrontOfPlayer2 )
		pIsTargetInFrontOfPlayer2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.IsTargetInFrontOfPlayer2" );

	parms.C = C;
	parms.TargetPos = TargetPos;
	parms.camLoc = camLoc;
	parms.camRot = camRot;
	this->ProcessEvent ( pIsTargetInFrontOfPlayer2, &parms, NULL );

	*ScreenPos = parms.ScreenPos;
	return parms.ReturnValue;
}*/

/*bool AHudBase::IsTargetInFrontOfPlayer ( class UCanvas* C, class AActor* Target, struct FVector camLoc, struct FRotator camRot, struct FVector* ScreenPos )
{
	static UFunction* pIsTargetInFrontOfPlayer = 0;
	AHudBase_execIsTargetInFrontOfPlayer_Parms parms;

	if ( !pIsTargetInFrontOfPlayer )
		pIsTargetInFrontOfPlayer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.IsTargetInFrontOfPlayer" );

	parms.C = C;
	parms.Target = Target;
	parms.camLoc = camLoc;
	parms.camRot = camRot;
	this->ProcessEvent ( pIsTargetInFrontOfPlayer, &parms, NULL );

	*ScreenPos = parms.ScreenPos;
	return parms.ReturnValue;
}*/

/*void AHudBase::DrawIntroSubtitles ( class UCanvas* C )
{
	static UFunction* pDrawIntroSubtitles = 0;
	AHudBase_execDrawIntroSubtitles_Parms parms;

	if ( !pDrawIntroSubtitles )
		pDrawIntroSubtitles = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawIntroSubtitles" );

	parms.C = C;
	this->ProcessEvent ( pDrawIntroSubtitles, &parms, NULL );

}*/

/*void AHudBase::DrawCinematicHUD ( class UCanvas* C )
{
	static UFunction* pDrawCinematicHUD = 0;
	AHudBase_execDrawCinematicHUD_Parms parms;

	if ( !pDrawCinematicHUD )
		pDrawCinematicHUD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawCinematicHUD" );

	parms.C = C;
	this->ProcessEvent ( pDrawCinematicHUD, &parms, NULL );

}*/

/*void AHudBase::DrawVehicleName ( class UCanvas* C )
{
	static UFunction* pDrawVehicleName = 0;
	AHudBase_execDrawVehicleName_Parms parms;

	if ( !pDrawVehicleName )
		pDrawVehicleName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawVehicleName" );

	parms.C = C;
	this->ProcessEvent ( pDrawVehicleName, &parms, NULL );

}*/

/*void AHudBase::DrawWeaponName ( class UCanvas* C )
{
	static UFunction* pDrawWeaponName = 0;
	AHudBase_execDrawWeaponName_Parms parms;

	if ( !pDrawWeaponName )
		pDrawWeaponName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawWeaponName" );

	parms.C = C;
	this->ProcessEvent ( pDrawWeaponName, &parms, NULL );

}*/

/*class UFont* AHudBase::LoadInstructionFont (  )
{
	static UFunction* pLoadInstructionFont = 0;
	AHudBase_execLoadInstructionFont_Parms parms;

	if ( !pLoadInstructionFont )
		pLoadInstructionFont = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.LoadInstructionFont" );

	this->ProcessEvent ( pLoadInstructionFont, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudBase::SetInstructionKeyText ( struct FString Text )
{
	static UFunction* pSetInstructionKeyText = 0;
	AHudBase_execSetInstructionKeyText_Parms parms;

	if ( !pSetInstructionKeyText )
		pSetInstructionKeyText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.SetInstructionKeyText" );

	parms.Text = Text;
	this->ProcessEvent ( pSetInstructionKeyText, &parms, NULL );

}*/

/*void AHudBase::SetInstructionText ( struct FString Text )
{
	static UFunction* pSetInstructionText = 0;
	AHudBase_execSetInstructionText_Parms parms;

	if ( !pSetInstructionText )
		pSetInstructionText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.SetInstructionText" );

	parms.Text = Text;
	this->ProcessEvent ( pSetInstructionText, &parms, NULL );

}*/

/*void AHudBase::DrawInstructionKeyText ( class UCanvas* C )
{
	static UFunction* pDrawInstructionKeyText = 0;
	AHudBase_execDrawInstructionKeyText_Parms parms;

	if ( !pDrawInstructionKeyText )
		pDrawInstructionKeyText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawInstructionKeyText" );

	parms.C = C;
	this->ProcessEvent ( pDrawInstructionKeyText, &parms, NULL );

}*/

/*void AHudBase::DrawInstructionText ( class UCanvas* C )
{
	static UFunction* pDrawInstructionText = 0;
	AHudBase_execDrawInstructionText_Parms parms;

	if ( !pDrawInstructionText )
		pDrawInstructionText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawInstructionText" );

	parms.C = C;
	this->ProcessEvent ( pDrawInstructionText, &parms, NULL );

}*/

/*void AHudBase::DrawInstructionGfx ( class UCanvas* C )
{
	static UFunction* pDrawInstructionGfx = 0;
	AHudBase_execDrawInstructionGfx_Parms parms;

	if ( !pDrawInstructionGfx )
		pDrawInstructionGfx = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawInstructionGfx" );

	parms.C = C;
	this->ProcessEvent ( pDrawInstructionGfx, &parms, NULL );

}*/

/*void AHudBase::SetCropping ( bool Active )
{
	static UFunction* pSetCropping = 0;
	AHudBase_execSetCropping_Parms parms;

	if ( !pSetCropping )
		pSetCropping = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.SetCropping" );

	parms.Active = Active;
	this->ProcessEvent ( pSetCropping, &parms, NULL );

}*/

/*void AHudBase::DrawTargeting ( class UCanvas* C )
{
	static UFunction* pDrawTargeting = 0;
	AHudBase_execDrawTargeting_Parms parms;

	if ( !pDrawTargeting )
		pDrawTargeting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawTargeting" );

	parms.C = C;
	this->ProcessEvent ( pDrawTargeting, &parms, NULL );

}*/

/*void AHudBase::SetTargeting ( bool bShow, struct FVector TargetLocation, float Size )
{
	static UFunction* pSetTargeting = 0;
	AHudBase_execSetTargeting_Parms parms;

	if ( !pSetTargeting )
		pSetTargeting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.SetTargeting" );

	parms.bShow = bShow;
	parms.TargetLocation = TargetLocation;
	parms.Size = Size;
	this->ProcessEvent ( pSetTargeting, &parms, NULL );

}*/

/*void AHudBase::Draw2DLocationDot ( class UCanvas* C, struct FVector loc, float OffsetX, float OffsetY, float ScaleX, float ScaleY )
{
	static UFunction* pDraw2DLocationDot = 0;
	AHudBase_execDraw2DLocationDot_Parms parms;

	if ( !pDraw2DLocationDot )
		pDraw2DLocationDot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.Draw2DLocationDot" );

	parms.C = C;
	parms.loc = loc;
	parms.OffsetX = OffsetX;
	parms.OffsetY = OffsetY;
	parms.ScaleX = ScaleX;
	parms.ScaleY = ScaleY;
	this->ProcessEvent ( pDraw2DLocationDot, &parms, NULL );

}*/

/*void AHudBase::CreateKeyMenus (  )
{
	static UFunction* pCreateKeyMenus = 0;
	AHudBase_execCreateKeyMenus_Parms parms;

	if ( !pCreateKeyMenus )
		pCreateKeyMenus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.CreateKeyMenus" );

	this->ProcessEvent ( pCreateKeyMenus, &parms, NULL );

}*/

/*void AHudBase::DisplayLocalMessages ( class UCanvas* C )
{
	static UFunction* pDisplayLocalMessages = 0;
	AHudBase_execDisplayLocalMessages_Parms parms;

	if ( !pDisplayLocalMessages )
		pDisplayLocalMessages = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DisplayLocalMessages" );

	parms.C = C;
	this->ProcessEvent ( pDisplayLocalMessages, &parms, NULL );

}*/

/*void AHudBase::DrawMessageWithTexture ( class UCanvas* C, int i, float PosX, float PosY, float* dx, float* dy )
{
	static UFunction* pDrawMessageWithTexture = 0;
	AHudBase_execDrawMessageWithTexture_Parms parms;

	if ( !pDrawMessageWithTexture )
		pDrawMessageWithTexture = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawMessageWithTexture" );

	parms.C = C;
	parms.i = i;
	parms.PosX = PosX;
	parms.PosY = PosY;
	this->ProcessEvent ( pDrawMessageWithTexture, &parms, NULL );

	*dx = parms.dx;
	*dy = parms.dy;
}*/

/*void AHudBase::DrawMessage ( class UCanvas* C, int i, float PosX, float PosY, float* dx, float* dy )
{
	static UFunction* pDrawMessage = 0;
	AHudBase_execDrawMessage_Parms parms;

	if ( !pDrawMessage )
		pDrawMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawMessage" );

	parms.C = C;
	parms.i = i;
	parms.PosX = PosX;
	parms.PosY = PosY;
	this->ProcessEvent ( pDrawMessage, &parms, NULL );

	*dx = parms.dx;
	*dy = parms.dy;
}*/

/*void AHudBase::GetScreenCoords ( float PosX, float PosY, class UCanvas* C, float* ScreenX, float* ScreenY, struct FHudLocalizedMessage* Message )
{
	static UFunction* pGetScreenCoords = 0;
	AHudBase_execGetScreenCoords_Parms parms;

	if ( !pGetScreenCoords )
		pGetScreenCoords = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.GetScreenCoords" );

	parms.PosX = PosX;
	parms.PosY = PosY;
	parms.C = C;
	this->ProcessEvent ( pGetScreenCoords, &parms, NULL );

	*ScreenX = parms.ScreenX;
	*ScreenY = parms.ScreenY;
	*Message = parms.Message;
}*/

/*void AHudBase::LayoutMessage ( class UCanvas* C, struct FHudLocalizedMessage* Message )
{
	static UFunction* pLayoutMessage = 0;
	AHudBase_execLayoutMessage_Parms parms;

	if ( !pLayoutMessage )
		pLayoutMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.LayoutMessage" );

	parms.C = C;
	this->ProcessEvent ( pLayoutMessage, &parms, NULL );

	*Message = parms.Message;
}*/

/*void AHudBase::GetLocalStatsScreen (  )
{
	static UFunction* pGetLocalStatsScreen = 0;
	AHudBase_execGetLocalStatsScreen_Parms parms;

	if ( !pGetLocalStatsScreen )
		pGetLocalStatsScreen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.GetLocalStatsScreen" );

	this->ProcessEvent ( pGetLocalStatsScreen, &parms, NULL );

}*/

/*class FColor AHudBase::GetTeamColor ( unsigned char TeamNum )
{
	static UFunction* pGetTeamColor = 0;
	AHudBase_execGetTeamColor_Parms parms;

	if ( !pGetTeamColor )
		pGetTeamColor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.GetTeamColor" );

	parms.TeamNum = TeamNum;
	this->ProcessEvent ( pGetTeamColor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudBase::LocalizedMessage2 ( class UClass* Message, int Switch, struct FString CriticalString )
{
	static UFunction* pLocalizedMessage2 = 0;
	AHudBase_execLocalizedMessage2_Parms parms;

	if ( !pLocalizedMessage2 )
		pLocalizedMessage2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.LocalizedMessage2" );

	parms.Message = Message;
	parms.Switch = Switch;
	parms.CriticalString = CriticalString;
	this->ProcessEvent ( pLocalizedMessage2, &parms, NULL );

}*/

/*void AHudBase::LocalizedMessage ( class UClass* Message, int Switch, class APlayerReplicationInfo* RelatedPRI_1, class APlayerReplicationInfo* RelatedPRI_2, class UObject* OptionalObject, struct FString CriticalString )
{
	static UFunction* pLocalizedMessage = 0;
	AHudBase_execLocalizedMessage_Parms parms;

	if ( !pLocalizedMessage )
		pLocalizedMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.LocalizedMessage" );

	parms.Message = Message;
	parms.Switch = Switch;
	parms.RelatedPRI_1 = RelatedPRI_1;
	parms.RelatedPRI_2 = RelatedPRI_2;
	parms.OptionalObject = OptionalObject;
	parms.CriticalString = CriticalString;
	this->ProcessEvent ( pLocalizedMessage, &parms, NULL );

}*/

/*void AHudBase::Message ( class APlayerReplicationInfo* PRI, struct FString Msg, struct FName MsgType )
{
	static UFunction* pMessage = 0;
	AHudBase_execMessage_Parms parms;

	if ( !pMessage )
		pMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.Message" );

	parms.PRI = PRI;
	parms.Msg = Msg;
	parms.MsgType = MsgType;
	this->ProcessEvent ( pMessage, &parms, NULL );

}*/

/*void AHudBase::ClearMessage ( struct FHudLocalizedMessage* M )
{
	static UFunction* pClearMessage = 0;
	AHudBase_execClearMessage_Parms parms;

	if ( !pClearMessage )
		pClearMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.ClearMessage" );

	parms.M = *M;
	this->ProcessEvent ( pClearMessage, &parms, NULL );

	*M = parms.M;
}*/

/*void AHudBase::AddChildHudPart ( class AHudBase* Child )
{
	static UFunction* pAddChildHudPart = 0;
	AHudBase_execAddChildHudPart_Parms parms;

	if ( !pAddChildHudPart )
		pAddChildHudPart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.AddChildHudPart" );

	parms.Child = Child;
	this->ProcessEvent ( pAddChildHudPart, &parms, NULL );

}*/

/*void AHudBase::DrawDigitSet ( class UCanvas* C, float X, float Y, float OffsetX, float XL, float YL, int Value, struct FDigitSet dSet, int totalDigits, struct FString paddingChar )
{
	static UFunction* pDrawDigitSet = 0;
	AHudBase_execDrawDigitSet_Parms parms;

	if ( !pDrawDigitSet )
		pDrawDigitSet = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawDigitSet" );

	parms.C = C;
	parms.X = X;
	parms.Y = Y;
	parms.OffsetX = OffsetX;
	parms.XL = XL;
	parms.YL = YL;
	parms.Value = Value;
	parms.dSet = dSet;
	parms.totalDigits = totalDigits;
	parms.paddingChar = paddingChar;
	this->ProcessEvent ( pDrawDigitSet, &parms, NULL );

}*/

/*void AHudBase::DrawCSReviw ( class UCanvas* C )
{
	static UFunction* pDrawCSReviw = 0;
	AHudBase_execDrawCSReviw_Parms parms;

	if ( !pDrawCSReviw )
		pDrawCSReviw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawCSReviw" );

	parms.C = C;
	this->ProcessEvent ( pDrawCSReviw, &parms, NULL );

}*/

/*void AHudBase::DrawNumericWidget ( class UCanvas* C, struct FNumericWidget* W, struct FDigitSet* D )
{
	static UFunction* pDrawNumericWidget = 0;
	AHudBase_execDrawNumericWidget_Parms parms;

	if ( !pDrawNumericWidget )
		pDrawNumericWidget = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawNumericWidget" );

	parms.C = C;
	this->ProcessEvent ( pDrawNumericWidget, &parms, NULL );

	*W = parms.W;
	*D = parms.D;
}*/

/*void AHudBase::DrawSpriteWidget ( class UCanvas* C, struct FSpriteWidget* W )
{
	static UFunction* pDrawSpriteWidget = 0;
	AHudBase_execDrawSpriteWidget_Parms parms;

	if ( !pDrawSpriteWidget )
		pDrawSpriteWidget = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawSpriteWidget" );

	parms.C = C;
	this->ProcessEvent ( pDrawSpriteWidget, &parms, NULL );

	*W = parms.W;
}*/

/*void AHudBase::DrawHUD ( class UCanvas* C )
{
	static UFunction* pDrawHUD = 0;
	AHudBase_execDrawHUD_Parms parms;

	if ( !pDrawHUD )
		pDrawHUD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawHUD" );

	parms.C = C;
	this->ProcessEvent ( pDrawHUD, &parms, NULL );

}*/

/*void AHudBase::UpdateScreenRatios ( class UCanvas* C )
{
	static UFunction* pUpdateScreenRatios = 0;
	AHudBase_execUpdateScreenRatios_Parms parms;

	if ( !pUpdateScreenRatios )
		pUpdateScreenRatios = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.UpdateScreenRatios" );

	parms.C = C;
	this->ProcessEvent ( pUpdateScreenRatios, &parms, NULL );

}*/

/*void AHudBase::DrawAttacked ( class UCanvas* C )
{
	static UFunction* pDrawAttacked = 0;
	AHudBase_execDrawAttacked_Parms parms;

	if ( !pDrawAttacked )
		pDrawAttacked = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawAttacked" );

	parms.C = C;
	this->ProcessEvent ( pDrawAttacked, &parms, NULL );

}*/

/*void AHudBase::DrawHeadShotSphere (  )
{
	static UFunction* pDrawHeadShotSphere = 0;
	AHudBase_execDrawHeadShotSphere_Parms parms;

	if ( !pDrawHeadShotSphere )
		pDrawHeadShotSphere = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawHeadShotSphere" );

	this->ProcessEvent ( pDrawHeadShotSphere, &parms, NULL );

}*/

/*void AHudBase::Tick ( float DeltaTime )
{
	static UFunction* pTick = 0;
	AHudBase_execTick_Parms parms;

	if ( !pTick )
		pTick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.Tick" );

	parms.DeltaTime = DeltaTime;
	this->ProcessEvent ( pTick, &parms, NULL );

}*/

/*void AHudBase::PlayPainSound ( class UCanvas* C )
{
	static UFunction* pPlayPainSound = 0;
	AHudBase_execPlayPainSound_Parms parms;

	if ( !pPlayPainSound )
		pPlayPainSound = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.PlayPainSound" );

	parms.C = C;
	this->ProcessEvent ( pPlayPainSound, &parms, NULL );

}*/

/*void AHudBase::DrawDamageIndicators ( class UCanvas* C )
{
	static UFunction* pDrawDamageIndicators = 0;
	AHudBase_execDrawDamageIndicators_Parms parms;

	if ( !pDrawDamageIndicators )
		pDrawDamageIndicators = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawDamageIndicators" );

	parms.C = C;
	this->ProcessEvent ( pDrawDamageIndicators, &parms, NULL );

}*/

/*void AHudBase::DisplayHit ( struct FVector HitDir, int Damage, class UClass* DamageType )
{
	static UFunction* pDisplayHit = 0;
	AHudBase_execDisplayHit_Parms parms;

	if ( !pDisplayHit )
		pDisplayHit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DisplayHit" );

	parms.HitDir = HitDir;
	parms.Damage = Damage;
	parms.DamageType = DamageType;
	this->ProcessEvent ( pDisplayHit, &parms, NULL );

}*/

/*void AHudBase::DrawMiniMap ( class AwHudPart_MinimapBase* Minimap, class UCanvas* C )
{
	static UFunction* pDrawMiniMap = 0;
	AHudBase_execDrawMiniMap_Parms parms;

	if ( !pDrawMiniMap )
		pDrawMiniMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawMiniMap" );

	parms.Minimap = Minimap;
	parms.C = C;
	this->ProcessEvent ( pDrawMiniMap, &parms, NULL );

}*/

/*void AHudBase::SetCustomHUDColor (  )
{
	static UFunction* pSetCustomHUDColor = 0;
	AHudBase_execSetCustomHUDColor_Parms parms;

	if ( !pSetCustomHUDColor )
		pSetCustomHUDColor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.SetCustomHUDColor" );

	this->ProcessEvent ( pSetCustomHUDColor, &parms, NULL );

}*/

/*bool AHudBase::CustomHUDColorAllowed (  )
{
	static UFunction* pCustomHUDColorAllowed = 0;
	AHudBase_execCustomHUDColorAllowed_Parms parms;

	if ( !pCustomHUDColorAllowed )
		pCustomHUDColorAllowed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.CustomHUDColorAllowed" );

	this->ProcessEvent ( pCustomHUDColorAllowed, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudBase::PostBeginPlay (  )
{
	static UFunction* pPostBeginPlay = 0;
	AHudBase_execPostBeginPlay_Parms parms;

	if ( !pPostBeginPlay )
		pPostBeginPlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.PostBeginPlay" );

	this->ProcessEvent ( pPostBeginPlay, &parms, NULL );

}*/

/*void AHudBase::PrecacheFonts ( class UCanvas* C )
{
	static UFunction* pPrecacheFonts = 0;
	AHudBase_execPrecacheFonts_Parms parms;

	if ( !pPrecacheFonts )
		pPrecacheFonts = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.PrecacheFonts" );

	parms.C = C;
	this->ProcessEvent ( pPrecacheFonts, &parms, NULL );

}*/

/*void AHudBase::DrawHudPassD ( class UCanvas* C )
{
	static UFunction* pDrawHudPassD = 0;
	AHudBase_execDrawHudPassD_Parms parms;

	if ( !pDrawHudPassD )
		pDrawHudPassD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawHudPassD" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassD, &parms, NULL );

}*/

/*void AHudBase::DrawHudPassC ( class UCanvas* C )
{
	static UFunction* pDrawHudPassC = 0;
	AHudBase_execDrawHudPassC_Parms parms;

	if ( !pDrawHudPassC )
		pDrawHudPassC = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawHudPassC" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassC, &parms, NULL );

}*/

/*void AHudBase::DrawHudPassB ( class UCanvas* C )
{
	static UFunction* pDrawHudPassB = 0;
	AHudBase_execDrawHudPassB_Parms parms;

	if ( !pDrawHudPassB )
		pDrawHudPassB = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawHudPassB" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassB, &parms, NULL );

}*/

/*void AHudBase::DrawHudPassA ( class UCanvas* C )
{
	static UFunction* pDrawHudPassA = 0;
	AHudBase_execDrawHudPassA_Parms parms;

	if ( !pDrawHudPassA )
		pDrawHudPassA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DrawHudPassA" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassA, &parms, NULL );

}*/

/*void AHudBase::UpdateHUD (  )
{
	static UFunction* pUpdateHUD = 0;
	AHudBase_execUpdateHUD_Parms parms;

	if ( !pUpdateHUD )
		pUpdateHUD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.UpdateHUD" );

	this->ProcessEvent ( pUpdateHUD, &parms, NULL );

}*/

/*void AHudBase::DoUpdateTime (  )
{
	static UFunction* pDoUpdateTime = 0;
	AHudBase_execDoUpdateTime_Parms parms;

	if ( !pDoUpdateTime )
		pDoUpdateTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudBase.DoUpdateTime" );

	this->ProcessEvent ( pDoUpdateTime, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::Draw ( class UCanvas* C )
{
	static UFunction* pDraw = 0;
	AwHudPart_KillMessage_execDraw_Parms parms;

	if ( !pDraw )
		pDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.Draw" );

	parms.C = C;
	this->ProcessEvent ( pDraw, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::DrawOnlyImage ( class UCanvas* C )
{
	static UFunction* pDrawOnlyImage = 0;
	AwHudPart_KillMessage_execDrawOnlyImage_Parms parms;

	if ( !pDrawOnlyImage )
		pDrawOnlyImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.DrawOnlyImage" );

	parms.C = C;
	this->ProcessEvent ( pDrawOnlyImage, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::DrawOnlyText ( class UCanvas* C )
{
	static UFunction* pDrawOnlyText = 0;
	AwHudPart_KillMessage_execDrawOnlyText_Parms parms;

	if ( !pDrawOnlyText )
		pDrawOnlyText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.DrawOnlyText" );

	parms.C = C;
	this->ProcessEvent ( pDrawOnlyText, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::UpdateCache ( class UCanvas* C )
{
	static UFunction* pUpdateCache = 0;
	AwHudPart_KillMessage_execUpdateCache_Parms parms;

	if ( !pUpdateCache )
		pUpdateCache = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.UpdateCache" );

	parms.C = C;
	this->ProcessEvent ( pUpdateCache, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::End ( class UCanvas* C )
{
	static UFunction* pEnd = 0;
	AwHudPart_KillMessage_execEnd_Parms parms;

	if ( !pEnd )
		pEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.End" );

	parms.C = C;
	this->ProcessEvent ( pEnd, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::Begin ( class UCanvas* C )
{
	static UFunction* pBegin = 0;
	AwHudPart_KillMessage_execBegin_Parms parms;

	if ( !pBegin )
		pBegin = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.Begin" );

	parms.C = C;
	this->ProcessEvent ( pBegin, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::DrawNative ( class UCanvas* C )
{
	static UFunction* pDrawNative = 0;
	AwHudPart_KillMessage_execDrawNative_Parms parms;

	if ( !pDrawNative )
		pDrawNative = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.DrawNative" );

	parms.C = C;
	this->ProcessEvent ( pDrawNative, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::Update (  )
{
	static UFunction* pUpdate = 0;
	AwHudPart_KillMessage_execUpdate_Parms parms;

	if ( !pUpdate )
		pUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.Update" );

	this->ProcessEvent ( pUpdate, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::AddKillMessageItem ( struct FKillMessageItem Item )
{
	static UFunction* pAddKillMessageItem = 0;
	AwHudPart_KillMessage_execAddKillMessageItem_Parms parms;

	if ( !pAddKillMessageItem )
		pAddKillMessageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.AddKillMessageItem" );

	parms.Item = Item;
	this->ProcessEvent ( pAddKillMessageItem, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::AddKillMessage ( class APlayerReplicationInfo* KillerPRI, class APlayerReplicationInfo* victimPRI, class UClass* DamageType, int Switch )
{
	static UFunction* pAddKillMessage = 0;
	AwHudPart_KillMessage_execAddKillMessage_Parms parms;

	if ( !pAddKillMessage )
		pAddKillMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.AddKillMessage" );

	parms.KillerPRI = KillerPRI;
	parms.victimPRI = victimPRI;
	parms.DamageType = DamageType;
	parms.Switch = Switch;
	this->ProcessEvent ( pAddKillMessage, &parms, NULL );

}*/

/*class FColor AwHudPart_KillMessage::GetNameColor ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pGetNameColor = 0;
	AwHudPart_KillMessage_execGetNameColor_Parms parms;

	if ( !pGetNameColor )
		pGetNameColor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.GetNameColor" );

	parms.PRI = PRI;
	this->ProcessEvent ( pGetNameColor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FKillMessageItem AwHudPart_KillMessage::MakeKillMessageItem ( class APlayerReplicationInfo* KillerPRI, class APlayerReplicationInfo* victimPRI, struct FString KillerName, struct FString VictimName, class UClass* DamageType, int Switch, bool NoKillerName, bool NoVictimName, class UMaterial* overrideImage )
{
	static UFunction* pMakeKillMessageItem = 0;
	AwHudPart_KillMessage_execMakeKillMessageItem_Parms parms;

	if ( !pMakeKillMessageItem )
		pMakeKillMessageItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.MakeKillMessageItem" );

	parms.KillerPRI = KillerPRI;
	parms.victimPRI = victimPRI;
	parms.KillerName = KillerName;
	parms.VictimName = VictimName;
	parms.DamageType = DamageType;
	parms.Switch = Switch;
	parms.NoKillerName = NoKillerName;
	parms.NoVictimName = NoVictimName;
	parms.overrideImage = overrideImage;
	this->ProcessEvent ( pMakeKillMessageItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_KillMessage::Initialize ( class AHudBase* myOwner, class ALevelInfo* myLevel )
{
	static UFunction* pInitialize = 0;
	AwHudPart_KillMessage_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.Initialize" );

	parms.myOwner = myOwner;
	parms.myLevel = myLevel;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void AwHudPart_KillMessage::Precache (  )
{
	static UFunction* pPrecache = 0;
	AwHudPart_KillMessage_execPrecache_Parms parms;

	if ( !pPrecache )
		pPrecache = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_KillMessage.Precache" );

	this->ProcessEvent ( pPrecache, &parms, NULL );

}*/

/*void UGUIListBoxBase::SetFriendlyLabel ( class UGUILabel* NewLabel )
{
	static UFunction* pSetFriendlyLabel = 0;
	UGUIListBoxBase_execSetFriendlyLabel_Parms parms;

	if ( !pSetFriendlyLabel )
		pSetFriendlyLabel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBoxBase.SetFriendlyLabel" );

	parms.NewLabel = NewLabel;
	this->ProcessEvent ( pSetFriendlyLabel, &parms, NULL );

}*/

/*void UGUIListBoxBase::SetScrollBarStyle ( bool changeScrollZoneStyle, class UGUIStyles* scrollZoneStyle, bool changeIncreaseButtonStyle, class UGUIStyles* increaseButtonStyle, bool changeIncreaseButtonGraphic, class UMaterial* increaseButtonGraphic, bool changeDecreaseButtonStyle, class UGUIStyles* decreaseButtonStyle, bool changeDecreaseButtonGraphic, class UMaterial* decreaseButtonGraphic, bool changeGripButtonStyle, class UGUIStyles* gripButtonStyle )
{
	static UFunction* pSetScrollBarStyle = 0;
	UGUIListBoxBase_execSetScrollBarStyle_Parms parms;

	if ( !pSetScrollBarStyle )
		pSetScrollBarStyle = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBoxBase.SetScrollBarStyle" );

	parms.changeScrollZoneStyle = changeScrollZoneStyle;
	parms.scrollZoneStyle = scrollZoneStyle;
	parms.changeIncreaseButtonStyle = changeIncreaseButtonStyle;
	parms.increaseButtonStyle = increaseButtonStyle;
	parms.changeIncreaseButtonGraphic = changeIncreaseButtonGraphic;
	parms.increaseButtonGraphic = increaseButtonGraphic;
	parms.changeDecreaseButtonStyle = changeDecreaseButtonStyle;
	parms.decreaseButtonStyle = decreaseButtonStyle;
	parms.changeDecreaseButtonGraphic = changeDecreaseButtonGraphic;
	parms.decreaseButtonGraphic = decreaseButtonGraphic;
	parms.changeGripButtonStyle = changeGripButtonStyle;
	parms.gripButtonStyle = gripButtonStyle;
	this->ProcessEvent ( pSetScrollBarStyle, &parms, NULL );

}*/

/*void UGUIListBoxBase::InternalOnCreateComponent ( class UGUIComponent* NewComp, class UGUIComponent* Sender )
{
	static UFunction* pInternalOnCreateComponent = 0;
	UGUIListBoxBase_execInternalOnCreateComponent_Parms parms;

	if ( !pInternalOnCreateComponent )
		pInternalOnCreateComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBoxBase.InternalOnCreateComponent" );

	parms.NewComp = NewComp;
	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnCreateComponent, &parms, NULL );

}*/

/*void UGUIListBoxBase::SetHint ( struct FString NewHint )
{
	static UFunction* pSetHint = 0;
	UGUIListBoxBase_execSetHint_Parms parms;

	if ( !pSetHint )
		pSetHint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBoxBase.SetHint" );

	parms.NewHint = NewHint;
	this->ProcessEvent ( pSetHint, &parms, NULL );

}*/

/*void UGUIListBoxBase::InitBaseList ( class UGUIListBase* LocalList )
{
	static UFunction* pInitBaseList = 0;
	UGUIListBoxBase_execInitBaseList_Parms parms;

	if ( !pInitBaseList )
		pInitBaseList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBoxBase.InitBaseList" );

	parms.LocalList = LocalList;
	this->ProcessEvent ( pInitBaseList, &parms, NULL );

}*/

/*void UGUIListBoxBase::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIListBoxBase_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBoxBase.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UGUIListBox::MyClose ( class UGUIContextMenu* Sender )
{
	static UFunction* pMyClose = 0;
	UGUIListBox_execMyClose_Parms parms;

	if ( !pMyClose )
		pMyClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBox.MyClose" );

	parms.Sender = Sender;
	this->ProcessEvent ( pMyClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIListBox::MyOpen ( class UGUIContextMenu* Menu )
{
	static UFunction* pMyOpen = 0;
	UGUIListBox_execMyOpen_Parms parms;

	if ( !pMyOpen )
		pMyOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBox.MyOpen" );

	parms.Menu = Menu;
	this->ProcessEvent ( pMyOpen, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIListBox::ItemCount (  )
{
	static UFunction* pItemCount = 0;
	UGUIListBox_execItemCount_Parms parms;

	if ( !pItemCount )
		pItemCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBox.ItemCount" );

	this->ProcessEvent ( pItemCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIListBox::InternalOnChange ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnChange = 0;
	UGUIListBox_execInternalOnChange_Parms parms;

	if ( !pInternalOnChange )
		pInternalOnChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBox.InternalOnChange" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnChange, &parms, NULL );

}*/

/*bool UGUIListBox::InternalOnDblClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnDblClick = 0;
	UGUIListBox_execInternalOnDblClick_Parms parms;

	if ( !pInternalOnDblClick )
		pInternalOnDblClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBox.InternalOnDblClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnDblClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIListBox::InternalOnClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnClick = 0;
	UGUIListBox_execInternalOnClick_Parms parms;

	if ( !pInternalOnClick )
		pInternalOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBox.InternalOnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIListBox::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIListBox_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBox.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIListBox::InitBaseList ( class UGUIListBase* LocalList )
{
	static UFunction* pInitBaseList = 0;
	UGUIListBox_execInitBaseList_Parms parms;

	if ( !pInitBaseList )
		pInitBaseList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBox.InitBaseList" );

	parms.LocalList = LocalList;
	this->ProcessEvent ( pInitBaseList, &parms, NULL );

}*/

/*void UGUIScrollTextBox::AddText ( struct FString NewText )
{
	static UFunction* pAddText = 0;
	UGUIScrollTextBox_execAddText_Parms parms;

	if ( !pAddText )
		pAddText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.AddText" );

	parms.NewText = NewText;
	this->ProcessEvent ( pAddText, &parms, NULL );

}*/

/*struct FString UGUIScrollTextBox::StripColors ( struct FString MyString )
{
	static UFunction* pStripColors = 0;
	UGUIScrollTextBox_execStripColors_Parms parms;

	if ( !pStripColors )
		pStripColors = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.StripColors" );

	parms.MyString = MyString;
	this->ProcessEvent ( pStripColors, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIScrollTextBox::IsNumber ( struct FString Num )
{
	static UFunction* pIsNumber = 0;
	UGUIScrollTextBox_execIsNumber_Parms parms;

	if ( !pIsNumber )
		pIsNumber = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.IsNumber" );

	parms.Num = Num;
	this->ProcessEvent ( pIsNumber, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIScrollTextBox::InternalOnAdjustTop ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnAdjustTop = 0;
	UGUIScrollTextBox_execInternalOnAdjustTop_Parms parms;

	if ( !pInternalOnAdjustTop )
		pInternalOnAdjustTop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.InternalOnAdjustTop" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnAdjustTop, &parms, NULL );

}*/

/*void UGUIScrollTextBox::Stop (  )
{
	static UFunction* pStop = 0;
	UGUIScrollTextBox_execStop_Parms parms;

	if ( !pStop )
		pStop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.Stop" );

	this->ProcessEvent ( pStop, &parms, NULL );

}*/

/*void UGUIScrollTextBox::Restart (  )
{
	static UFunction* pRestart = 0;
	UGUIScrollTextBox_execRestart_Parms parms;

	if ( !pRestart )
		pRestart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.Restart" );

	this->ProcessEvent ( pRestart, &parms, NULL );

}*/

/*void UGUIScrollTextBox::SetContent ( struct FString NewContent, struct FString sep )
{
	static UFunction* pSetContent = 0;
	UGUIScrollTextBox_execSetContent_Parms parms;

	if ( !pSetContent )
		pSetContent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.SetContent" );

	parms.NewContent = NewContent;
	parms.sep = sep;
	this->ProcessEvent ( pSetContent, &parms, NULL );

}*/

/*void UGUIScrollTextBox::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIScrollTextBox_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIScrollTextBox::InitBaseList ( class UGUIListBase* LocalList )
{
	static UFunction* pInitBaseList = 0;
	UGUIScrollTextBox_execInitBaseList_Parms parms;

	if ( !pInitBaseList )
		pInitBaseList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.InitBaseList" );

	parms.LocalList = LocalList;
	this->ProcessEvent ( pInitBaseList, &parms, NULL );

}*/

/*void UGUIScrollTextBox::InternalOnCreateComponent ( class UGUIComponent* NewComp, class UGUIComponent* Sender )
{
	static UFunction* pInternalOnCreateComponent = 0;
	UGUIScrollTextBox_execInternalOnCreateComponent_Parms parms;

	if ( !pInternalOnCreateComponent )
		pInternalOnCreateComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.InternalOnCreateComponent" );

	parms.NewComp = NewComp;
	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnCreateComponent, &parms, NULL );

}*/

/*void UGUIScrollTextBox::eventCreated (  )
{
	static UFunction* pCreated = 0;
	UGUIScrollTextBox_eventCreated_Parms parms;

	if ( !pCreated )
		pCreated = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollTextBox.Created" );

	this->ProcessEvent ( pCreated, &parms, NULL );

}*/

/*void UGUIMultiColumnListBox::SetHeaderStyle ( bool changeStyle, struct FString stylez, bool changeBarStyle, struct FString barStylez )
{
	static UFunction* pSetHeaderStyle = 0;
	UGUIMultiColumnListBox_execSetHeaderStyle_Parms parms;

	if ( !pSetHeaderStyle )
		pSetHeaderStyle = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnListBox.SetHeaderStyle" );

	parms.changeStyle = changeStyle;
	parms.stylez = stylez;
	parms.changeBarStyle = changeBarStyle;
	parms.barStylez = barStylez;
	this->ProcessEvent ( pSetHeaderStyle, &parms, NULL );

}*/

/*void UGUIMultiColumnListBox::InternalOnColumnSized ( int Column )
{
	static UFunction* pInternalOnColumnSized = 0;
	UGUIMultiColumnListBox_execInternalOnColumnSized_Parms parms;

	if ( !pInternalOnColumnSized )
		pInternalOnColumnSized = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnListBox.InternalOnColumnSized" );

	parms.Column = Column;
	this->ProcessEvent ( pInternalOnColumnSized, &parms, NULL );

}*/

/*void UGUIMultiColumnListBox::InternalOnCreateComponent ( class UGUIComponent* NewComp, class UGUIComponent* Sender )
{
	static UFunction* pInternalOnCreateComponent = 0;
	UGUIMultiColumnListBox_execInternalOnCreateComponent_Parms parms;

	if ( !pInternalOnCreateComponent )
		pInternalOnCreateComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnListBox.InternalOnCreateComponent" );

	parms.NewComp = NewComp;
	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnCreateComponent, &parms, NULL );

}*/

/*void UGUIMultiColumnListBox::InternalOnLoadINI ( class UGUIComponent* Sender, struct FString S )
{
	static UFunction* pInternalOnLoadINI = 0;
	UGUIMultiColumnListBox_execInternalOnLoadINI_Parms parms;

	if ( !pInternalOnLoadINI )
		pInternalOnLoadINI = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnListBox.InternalOnLoadINI" );

	parms.Sender = Sender;
	parms.S = S;
	this->ProcessEvent ( pInternalOnLoadINI, &parms, NULL );

}*/

/*void UGUIMultiColumnListBox::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIMultiColumnListBox_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnListBox.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIMultiColumnListBox::InitBaseList ( class UGUIListBase* LocalList )
{
	static UFunction* pInitBaseList = 0;
	UGUIMultiColumnListBox_execInitBaseList_Parms parms;

	if ( !pInitBaseList )
		pInitBaseList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnListBox.InitBaseList" );

	parms.LocalList = LocalList;
	this->ProcessEvent ( pInitBaseList, &parms, NULL );

}*/

/*void UGUIListBase::SetOutlineAlpha ( int NewAlpha )
{
	static UFunction* pSetOutlineAlpha = 0;
	UGUIListBase_execSetOutlineAlpha_Parms parms;

	if ( !pSetOutlineAlpha )
		pSetOutlineAlpha = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.SetOutlineAlpha" );

	parms.NewAlpha = NewAlpha;
	this->ProcessEvent ( pSetOutlineAlpha, &parms, NULL );

}*/

/*bool UGUIListBase::eventIsMultiSelect (  )
{
	static UFunction* pIsMultiSelect = 0;
	UGUIListBase_eventIsMultiSelect_Parms parms;

	if ( !pIsMultiSelect )
		pIsMultiSelect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.IsMultiSelect" );

	this->ProcessEvent ( pIsMultiSelect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIListBase::InternalOnDragLeave ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnDragLeave = 0;
	UGUIListBase_execInternalOnDragLeave_Parms parms;

	if ( !pInternalOnDragLeave )
		pInternalOnDragLeave = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnDragLeave" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnDragLeave, &parms, NULL );

}*/

/*void UGUIListBase::InternalOnDragEnter ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnDragEnter = 0;
	UGUIListBase_execInternalOnDragEnter_Parms parms;

	if ( !pInternalOnDragEnter )
		pInternalOnDragEnter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnDragEnter" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnDragEnter, &parms, NULL );

}*/

/*void UGUIListBase::InternalOnDragOver ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnDragOver = 0;
	UGUIListBase_execInternalOnDragOver_Parms parms;

	if ( !pInternalOnDragOver )
		pInternalOnDragOver = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnDragOver" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnDragOver, &parms, NULL );

}*/

/*bool UGUIListBase::InternalOnDragDrop ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnDragDrop = 0;
	UGUIListBase_execInternalOnDragDrop_Parms parms;

	if ( !pInternalOnDragDrop )
		pInternalOnDragDrop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnDragDrop" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnDragDrop, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIListBase::InternalOnEndDrag ( class UGUIComponent* Accepting, bool bAccepted )
{
	static UFunction* pInternalOnEndDrag = 0;
	UGUIListBase_execInternalOnEndDrag_Parms parms;

	if ( !pInternalOnEndDrag )
		pInternalOnEndDrag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnEndDrag" );

	parms.Accepting = Accepting;
	parms.bAccepted = bAccepted;
	this->ProcessEvent ( pInternalOnEndDrag, &parms, NULL );

}*/

/*bool UGUIListBase::InternalOnRightClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnRightClick = 0;
	UGUIListBase_execInternalOnRightClick_Parms parms;

	if ( !pInternalOnRightClick )
		pInternalOnRightClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnRightClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnRightClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIListBase::CheckDragSelect (  )
{
	static UFunction* pCheckDragSelect = 0;
	UGUIListBase_execCheckDragSelect_Parms parms;

	if ( !pCheckDragSelect )
		pCheckDragSelect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.CheckDragSelect" );

	this->ProcessEvent ( pCheckDragSelect, &parms, NULL );

}*/

/*bool UGUIListBase::InternalOnBeginDrag ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnBeginDrag = 0;
	UGUIListBase_execInternalOnBeginDrag_Parms parms;

	if ( !pInternalOnBeginDrag )
		pInternalOnBeginDrag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnBeginDrag" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnBeginDrag, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIListBase::InternalOnMouseRelease ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnMouseRelease = 0;
	UGUIListBase_execInternalOnMouseRelease_Parms parms;

	if ( !pInternalOnMouseRelease )
		pInternalOnMouseRelease = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnMouseRelease" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnMouseRelease, &parms, NULL );

}*/

/*void UGUIListBase::InternalOnMousePressed ( class UGUIComponent* Sender, bool IsRepeat )
{
	static UFunction* pInternalOnMousePressed = 0;
	UGUIListBase_execInternalOnMousePressed_Parms parms;

	if ( !pInternalOnMousePressed )
		pInternalOnMousePressed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnMousePressed" );

	parms.Sender = Sender;
	parms.IsRepeat = IsRepeat;
	this->ProcessEvent ( pInternalOnMousePressed, &parms, NULL );

}*/

/*void UGUIListBase::End (  )
{
	static UFunction* pEnd = 0;
	UGUIListBase_execEnd_Parms parms;

	if ( !pEnd )
		pEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.End" );

	this->ProcessEvent ( pEnd, &parms, NULL );

}*/

/*void UGUIListBase::home (  )
{
	static UFunction* phome = 0;
	UGUIListBase_exechome_Parms parms;

	if ( !phome )
		phome = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.home" );

	this->ProcessEvent ( phome, &parms, NULL );

}*/

/*void UGUIListBase::PgDn (  )
{
	static UFunction* pPgDn = 0;
	UGUIListBase_execPgDn_Parms parms;

	if ( !pPgDn )
		pPgDn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.PgDn" );

	this->ProcessEvent ( pPgDn, &parms, NULL );

}*/

/*void UGUIListBase::PgUp (  )
{
	static UFunction* pPgUp = 0;
	UGUIListBase_execPgUp_Parms parms;

	if ( !pPgUp )
		pPgUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.PgUp" );

	this->ProcessEvent ( pPgUp, &parms, NULL );

}*/

/*void UGUIListBase::WheelDown (  )
{
	static UFunction* pWheelDown = 0;
	UGUIListBase_execWheelDown_Parms parms;

	if ( !pWheelDown )
		pWheelDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.WheelDown" );

	this->ProcessEvent ( pWheelDown, &parms, NULL );

}*/

/*void UGUIListBase::WheelUp (  )
{
	static UFunction* pWheelUp = 0;
	UGUIListBase_execWheelUp_Parms parms;

	if ( !pWheelUp )
		pWheelUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.WheelUp" );

	this->ProcessEvent ( pWheelUp, &parms, NULL );

}*/

/*bool UGUIListBase::MoveLeft (  )
{
	static UFunction* pMoveLeft = 0;
	UGUIListBase_execMoveLeft_Parms parms;

	if ( !pMoveLeft )
		pMoveLeft = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.MoveLeft" );

	this->ProcessEvent ( pMoveLeft, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIListBase::MoveRight (  )
{
	static UFunction* pMoveRight = 0;
	UGUIListBase_execMoveRight_Parms parms;

	if ( !pMoveRight )
		pMoveRight = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.MoveRight" );

	this->ProcessEvent ( pMoveRight, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIListBase::Down (  )
{
	static UFunction* pDown = 0;
	UGUIListBase_execDown_Parms parms;

	if ( !pDown )
		pDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.Down" );

	this->ProcessEvent ( pDown, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIListBase::Up (  )
{
	static UFunction* pUp = 0;
	UGUIListBase_execUp_Parms parms;

	if ( !pUp )
		pUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.Up" );

	this->ProcessEvent ( pUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIListBase::InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* KeyState )
{
	static UFunction* pInternalOnKeyEvent = 0;
	UGUIListBase_execInternalOnKeyEvent_Parms parms;

	if ( !pInternalOnKeyEvent )
		pInternalOnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InternalOnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternalOnKeyEvent, &parms, NULL );

	*key = parms.key;
	*KeyState = parms.KeyState;
	return parms.ReturnValue;
}*/

/*class TArray< struct FString > UGUIListBase::GetPendingItems ( bool bGuarantee )
{
	static UFunction* pGetPendingItems = 0;
	UGUIListBase_execGetPendingItems_Parms parms;

	if ( !pGetPendingItems )
		pGetPendingItems = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.GetPendingItems" );

	parms.bGuarantee = bGuarantee;
	this->ProcessEvent ( pGetPendingItems, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIListBase::GetItemAtIndex ( int idx )
{
	static UFunction* pGetItemAtIndex = 0;
	UGUIListBase_execGetItemAtIndex_Parms parms;

	if ( !pGetItemAtIndex )
		pGetItemAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.GetItemAtIndex" );

	parms.idx = idx;
	this->ProcessEvent ( pGetItemAtIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIListBase::eventAdditionalDebugString (  )
{
	static UFunction* pAdditionalDebugString = 0;
	UGUIListBase_eventAdditionalDebugString_Parms parms;

	if ( !pAdditionalDebugString )
		pAdditionalDebugString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.AdditionalDebugString" );

	this->ProcessEvent ( pAdditionalDebugString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIListBase::IsValidIndex ( int i )
{
	static UFunction* pIsValidIndex = 0;
	UGUIListBase_execIsValidIndex_Parms parms;

	if ( !pIsValidIndex )
		pIsValidIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.IsValidIndex" );

	parms.i = i;
	this->ProcessEvent ( pIsValidIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIListBase::IsValid (  )
{
	static UFunction* pIsValid = 0;
	UGUIListBase_execIsValid_Parms parms;

	if ( !pIsValid )
		pIsValid = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.IsValid" );

	this->ProcessEvent ( pIsValid, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIListBase::DisableLinkedObjects (  )
{
	static UFunction* pDisableLinkedObjects = 0;
	UGUIListBase_execDisableLinkedObjects_Parms parms;

	if ( !pDisableLinkedObjects )
		pDisableLinkedObjects = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.DisableLinkedObjects" );

	this->ProcessEvent ( pDisableLinkedObjects, &parms, NULL );

}*/

/*void UGUIListBase::EnableLinkedObjects (  )
{
	static UFunction* pEnableLinkedObjects = 0;
	UGUIListBase_execEnableLinkedObjects_Parms parms;

	if ( !pEnableLinkedObjects )
		pEnableLinkedObjects = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.EnableLinkedObjects" );

	this->ProcessEvent ( pEnableLinkedObjects, &parms, NULL );

}*/

/*void UGUIListBase::InitLinkObjects ( class TArray< class UGUIComponent* > NewObj, bool bNoCheck )
{
	static UFunction* pInitLinkObjects = 0;
	UGUIListBase_execInitLinkObjects_Parms parms;

	if ( !pInitLinkObjects )
		pInitLinkObjects = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InitLinkObjects" );

	parms.NewObj = NewObj;
	parms.bNoCheck = bNoCheck;
	this->ProcessEvent ( pInitLinkObjects, &parms, NULL );

}*/

/*int UGUIListBase::AddLinkObject ( class UGUIComponent* NewObj, bool bNoCheck )
{
	static UFunction* pAddLinkObject = 0;
	UGUIListBase_execAddLinkObject_Parms parms;

	if ( !pAddLinkObject )
		pAddLinkObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.AddLinkObject" );

	parms.NewObj = NewObj;
	parms.bNoCheck = bNoCheck;
	this->ProcessEvent ( pAddLinkObject, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIListBase::SetTopItem ( int Item )
{
	static UFunction* pSetTopItem = 0;
	UGUIListBase_execSetTopItem_Parms parms;

	if ( !pSetTopItem )
		pSetTopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.SetTopItem" );

	parms.Item = Item;
	this->ProcessEvent ( pSetTopItem, &parms, NULL );

}*/

/*void UGUIListBase::MakeVisible ( float perc )
{
	static UFunction* pMakeVisible = 0;
	UGUIListBase_execMakeVisible_Parms parms;

	if ( !pMakeVisible )
		pMakeVisible = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.MakeVisible" );

	parms.perc = perc;
	this->ProcessEvent ( pMakeVisible, &parms, NULL );

}*/

/*void UGUIListBase::Clear (  )
{
	static UFunction* pClear = 0;
	UGUIListBase_execClear_Parms parms;

	if ( !pClear )
		pClear = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.Clear" );

	this->ProcessEvent ( pClear, &parms, NULL );

}*/

/*void UGUIListBase::ClearPendingElements (  )
{
	static UFunction* pClearPendingElements = 0;
	UGUIListBase_execClearPendingElements_Parms parms;

	if ( !pClearPendingElements )
		pClearPendingElements = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.ClearPendingElements" );

	this->ProcessEvent ( pClearPendingElements, &parms, NULL );

}*/

/*void UGUIListBase::IndexChanged ( class UGUIComponent* Sender )
{
	static UFunction* pIndexChanged = 0;
	UGUIListBase_execIndexChanged_Parms parms;

	if ( !pIndexChanged )
		pIndexChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.IndexChanged" );

	parms.Sender = Sender;
	this->ProcessEvent ( pIndexChanged, &parms, NULL );

}*/

/*int UGUIListBase::SetIndex ( int NewIndex )
{
	static UFunction* pSetIndex = 0;
	UGUIListBase_execSetIndex_Parms parms;

	if ( !pSetIndex )
		pSetIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.SetIndex" );

	parms.NewIndex = NewIndex;
	this->ProcessEvent ( pSetIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIListBase::eventMultiCalculateIndex ( bool bRequireValidIndex )
{
	static UFunction* pMultiCalculateIndex = 0;
	UGUIListBase_eventMultiCalculateIndex_Parms parms;

	if ( !pMultiCalculateIndex )
		pMultiCalculateIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.MultiCalculateIndex" );

	parms.bRequireValidIndex = bRequireValidIndex;
	this->ProcessEvent ( pMultiCalculateIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIListBase::eventCalculateIndex ( bool bRequireValidIndex )
{
	static UFunction* pCalculateIndex = 0;
	UGUIListBase_eventCalculateIndex_Parms parms;

	if ( !pCalculateIndex )
		pCalculateIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.CalculateIndex" );

	parms.bRequireValidIndex = bRequireValidIndex;
	this->ProcessEvent ( pCalculateIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIListBase::SilentSetIndex ( int NewIndex )
{
	static UFunction* pSilentSetIndex = 0;
	UGUIListBase_execSilentSetIndex_Parms parms;

	if ( !pSilentSetIndex )
		pSilentSetIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.SilentSetIndex" );

	parms.NewIndex = NewIndex;
	this->ProcessEvent ( pSilentSetIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIListBase::Sort (  )
{
	static UFunction* pSort = 0;
	UGUIListBase_execSort_Parms parms;

	if ( !pSort )
		pSort = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.Sort" );

	this->ProcessEvent ( pSort, &parms, NULL );

}*/

/*void UGUIListBase::eventUpdateScrollbarForcedPosition (  )
{
	static UFunction* pUpdateScrollbarForcedPosition = 0;
	UGUIListBase_eventUpdateScrollbarForcedPosition_Parms parms;

	if ( !pUpdateScrollbarForcedPosition )
		pUpdateScrollbarForcedPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.UpdateScrollbarForcedPosition" );

	this->ProcessEvent ( pUpdateScrollbarForcedPosition, &parms, NULL );

}*/

/*void UGUIListBase::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIListBase_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIListBase::CheckLinkedObjects ( class UGUIListBase* List )
{
	static UFunction* pCheckLinkedObjects = 0;
	UGUIListBase_execCheckLinkedObjects_Parms parms;

	if ( !pCheckLinkedObjects )
		pCheckLinkedObjects = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.CheckLinkedObjects" );

	parms.List = List;
	this->ProcessEvent ( pCheckLinkedObjects, &parms, NULL );

}*/

/*void UGUIListBase::OnTrack ( class UGUIComponent* Sender, int LastIndex )
{
	static UFunction* pOnTrack = 0;
	UGUIListBase_execOnTrack_Parms parms;

	if ( !pOnTrack )
		pOnTrack = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.OnTrack" );

	parms.Sender = Sender;
	parms.LastIndex = LastIndex;
	this->ProcessEvent ( pOnTrack, &parms, NULL );

}*/

/*void UGUIListBase::OnAdjustTop ( class UGUIComponent* Sender )
{
	static UFunction* pOnAdjustTop = 0;
	UGUIListBase_execOnAdjustTop_Parms parms;

	if ( !pOnAdjustTop )
		pOnAdjustTop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.OnAdjustTop" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnAdjustTop, &parms, NULL );

}*/

/*void UGUIListBase::OnDrawItem ( class UCanvas* Canvas, int Item, float X, float Y, float W, float HT, bool bSelected, bool bPending )
{
	static UFunction* pOnDrawItem = 0;
	UGUIListBase_execOnDrawItem_Parms parms;

	if ( !pOnDrawItem )
		pOnDrawItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.OnDrawItem" );

	parms.Canvas = Canvas;
	parms.Item = Item;
	parms.X = X;
	parms.Y = Y;
	parms.W = W;
	parms.HT = HT;
	parms.bSelected = bSelected;
	parms.bPending = bPending;
	this->ProcessEvent ( pOnDrawItem, &parms, NULL );

}*/

/*void UGUIListBase::OnScrollBy ( class UGUIComponent* Sender )
{
	static UFunction* pOnScrollBy = 0;
	UGUIListBase_execOnScrollBy_Parms parms;

	if ( !pOnScrollBy )
		pOnScrollBy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIListBase.OnScrollBy" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnScrollBy, &parms, NULL );

}*/

/*void UGUIVertList::PgDn (  )
{
	static UFunction* pPgDn = 0;
	UGUIVertList_execPgDn_Parms parms;

	if ( !pPgDn )
		pPgDn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.PgDn" );

	this->ProcessEvent ( pPgDn, &parms, NULL );

}*/

/*void UGUIVertList::PgUp (  )
{
	static UFunction* pPgUp = 0;
	UGUIVertList_execPgUp_Parms parms;

	if ( !pPgUp )
		pPgUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.PgUp" );

	this->ProcessEvent ( pPgUp, &parms, NULL );

}*/

/*void UGUIVertList::End (  )
{
	static UFunction* pEnd = 0;
	UGUIVertList_execEnd_Parms parms;

	if ( !pEnd )
		pEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.End" );

	this->ProcessEvent ( pEnd, &parms, NULL );

}*/

/*void UGUIVertList::home (  )
{
	static UFunction* phome = 0;
	UGUIVertList_exechome_Parms parms;

	if ( !phome )
		phome = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.home" );

	this->ProcessEvent ( phome, &parms, NULL );

}*/

/*bool UGUIVertList::Down (  )
{
	static UFunction* pDown = 0;
	UGUIVertList_execDown_Parms parms;

	if ( !pDown )
		pDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.Down" );

	this->ProcessEvent ( pDown, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIVertList::Up (  )
{
	static UFunction* pUp = 0;
	UGUIVertList_execUp_Parms parms;

	if ( !pUp )
		pUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.Up" );

	this->ProcessEvent ( pUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertList::WheelDown (  )
{
	static UFunction* pWheelDown = 0;
	UGUIVertList_execWheelDown_Parms parms;

	if ( !pWheelDown )
		pWheelDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.WheelDown" );

	this->ProcessEvent ( pWheelDown, &parms, NULL );

}*/

/*void UGUIVertList::WheelUp (  )
{
	static UFunction* pWheelUp = 0;
	UGUIVertList_execWheelUp_Parms parms;

	if ( !pWheelUp )
		pWheelUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.WheelUp" );

	this->ProcessEvent ( pWheelUp, &parms, NULL );

}*/

/*bool UGUIVertList::InternalOnKeyType ( struct FString Unicode, unsigned char* key )
{
	static UFunction* pInternalOnKeyType = 0;
	UGUIVertList_execInternalOnKeyType_Parms parms;

	if ( !pInternalOnKeyType )
		pInternalOnKeyType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.InternalOnKeyType" );

	parms.Unicode = Unicode;
	this->ProcessEvent ( pInternalOnKeyType, &parms, NULL );

	*key = parms.key;
	return parms.ReturnValue;
}*/

/*bool UGUIVertList::InternalOnClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnClick = 0;
	UGUIVertList_execInternalOnClick_Parms parms;

	if ( !pInternalOnClick )
		pInternalOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.InternalOnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIVertList::eventMultiCalculateIndex ( bool bRequireValidIndex )
{
	static UFunction* pMultiCalculateIndex = 0;
	UGUIVertList_eventMultiCalculateIndex_Parms parms;

	if ( !pMultiCalculateIndex )
		pMultiCalculateIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.MultiCalculateIndex" );

	parms.bRequireValidIndex = bRequireValidIndex;
	this->ProcessEvent ( pMultiCalculateIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIVertList::eventCalculateIndex ( bool bRequireValidIndex )
{
	static UFunction* pCalculateIndex = 0;
	UGUIVertList_eventCalculateIndex_Parms parms;

	if ( !pCalculateIndex )
		pCalculateIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.CalculateIndex" );

	parms.bRequireValidIndex = bRequireValidIndex;
	this->ProcessEvent ( pCalculateIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertList::CenterMouse (  )
{
	static UFunction* pCenterMouse = 0;
	UGUIVertList_execCenterMouse_Parms parms;

	if ( !pCenterMouse )
		pCenterMouse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.CenterMouse" );

	this->ProcessEvent ( pCenterMouse, &parms, NULL );

}*/

/*float UGUIVertList::GetItemHeight ( class UCanvas* C )
{
	static UFunction* pGetItemHeight = 0;
	UGUIVertList_execGetItemHeight_Parms parms;

	if ( !pGetItemHeight )
		pGetItemHeight = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertList.GetItemHeight" );

	parms.C = C;
	this->ProcessEvent ( pGetItemHeight, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class TArray< struct FGUIListElem > UGUIList::GetPendingElements ( bool bGuarantee )
{
	static UFunction* pGetPendingElements = 0;
	UGUIList_execGetPendingElements_Parms parms;

	if ( !pGetPendingElements )
		pGetPendingElements = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.GetPendingElements" );

	parms.bGuarantee = bGuarantee;
	this->ProcessEvent ( pGetPendingElements, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIList::ClearPendingElements (  )
{
	static UFunction* pClearPendingElements = 0;
	UGUIList_execClearPendingElements_Parms parms;

	if ( !pClearPendingElements )
		pClearPendingElements = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.ClearPendingElements" );

	this->ProcessEvent ( pClearPendingElements, &parms, NULL );

}*/

/*bool UGUIList::InternalOnDragDrop ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnDragDrop = 0;
	UGUIList_execInternalOnDragDrop_Parms parms;

	if ( !pInternalOnDragDrop )
		pInternalOnDragDrop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.InternalOnDragDrop" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnDragDrop, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIList::InternalOnEndDrag ( class UGUIComponent* Accepting, bool bAccepted )
{
	static UFunction* pInternalOnEndDrag = 0;
	UGUIList_execInternalOnEndDrag_Parms parms;

	if ( !pInternalOnEndDrag )
		pInternalOnEndDrag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.InternalOnEndDrag" );

	parms.Accepting = Accepting;
	parms.bAccepted = bAccepted;
	this->ProcessEvent ( pInternalOnEndDrag, &parms, NULL );

}*/

/*int UGUIList::FindIndex ( struct FString Test, bool bExact, bool bExtra, class UObject* TestObject )
{
	static UFunction* pFindIndex = 0;
	UGUIList_execFindIndex_Parms parms;

	if ( !pFindIndex )
		pFindIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.FindIndex" );

	parms.Test = Test;
	parms.bExact = bExact;
	parms.bExtra = bExtra;
	parms.TestObject = TestObject;
	this->ProcessEvent ( pFindIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIList::FindItemObject ( class UObject* obj )
{
	static UFunction* pFindItemObject = 0;
	UGUIList_execFindItemObject_Parms parms;

	if ( !pFindItemObject )
		pFindItemObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.FindItemObject" );

	parms.obj = obj;
	this->ProcessEvent ( pFindItemObject, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIList::FindExtra ( struct FString Text, bool bExact )
{
	static UFunction* pFindExtra = 0;
	UGUIList_execFindExtra_Parms parms;

	if ( !pFindExtra )
		pFindExtra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.FindExtra" );

	parms.Text = Text;
	parms.bExact = bExact;
	this->ProcessEvent ( pFindExtra, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIList::Find ( struct FString Text, bool bExact, bool bExtra )
{
	static UFunction* pFind = 0;
	UGUIList_execFind_Parms parms;

	if ( !pFind )
		pFind = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.Find" );

	parms.Text = Text;
	parms.bExact = bExact;
	parms.bExtra = bExtra;
	this->ProcessEvent ( pFind, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIList::RemoveExtra ( struct FString str )
{
	static UFunction* pRemoveExtra = 0;
	UGUIList_execRemoveExtra_Parms parms;

	if ( !pRemoveExtra )
		pRemoveExtra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.RemoveExtra" );

	parms.str = str;
	this->ProcessEvent ( pRemoveExtra, &parms, NULL );

}*/

/*void UGUIList::RemoveObject ( class UObject* obj )
{
	static UFunction* pRemoveObject = 0;
	UGUIList_execRemoveObject_Parms parms;

	if ( !pRemoveObject )
		pRemoveObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.RemoveObject" );

	parms.obj = obj;
	this->ProcessEvent ( pRemoveObject, &parms, NULL );

}*/

/*void UGUIList::RemoveItem ( struct FString Item )
{
	static UFunction* pRemoveItem = 0;
	UGUIList_execRemoveItem_Parms parms;

	if ( !pRemoveItem )
		pRemoveItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.RemoveItem" );

	parms.Item = Item;
	this->ProcessEvent ( pRemoveItem, &parms, NULL );

}*/

/*void UGUIList::SetExtraAtIndex ( int i, struct FString NewExtra )
{
	static UFunction* pSetExtraAtIndex = 0;
	UGUIList_execSetExtraAtIndex_Parms parms;

	if ( !pSetExtraAtIndex )
		pSetExtraAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.SetExtraAtIndex" );

	parms.i = i;
	parms.NewExtra = NewExtra;
	this->ProcessEvent ( pSetExtraAtIndex, &parms, NULL );

}*/

/*void UGUIList::SetObjectAtIndex ( int i, class UObject* NewObject )
{
	static UFunction* pSetObjectAtIndex = 0;
	UGUIList_execSetObjectAtIndex_Parms parms;

	if ( !pSetObjectAtIndex )
		pSetObjectAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.SetObjectAtIndex" );

	parms.i = i;
	parms.NewObject = NewObject;
	this->ProcessEvent ( pSetObjectAtIndex, &parms, NULL );

}*/

/*void UGUIList::SetItemAtIndex ( int i, struct FString NewItem )
{
	static UFunction* pSetItemAtIndex = 0;
	UGUIList_execSetItemAtIndex_Parms parms;

	if ( !pSetItemAtIndex )
		pSetItemAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.SetItemAtIndex" );

	parms.i = i;
	parms.NewItem = NewItem;
	this->ProcessEvent ( pSetItemAtIndex, &parms, NULL );

}*/

/*void UGUIList::GetAtIndex ( int i, struct FString* ItemStr, class UObject** ExtraObj, struct FString* ExtraStr )
{
	static UFunction* pGetAtIndex = 0;
	UGUIList_execGetAtIndex_Parms parms;

	if ( !pGetAtIndex )
		pGetAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.GetAtIndex" );

	parms.i = i;
	this->ProcessEvent ( pGetAtIndex, &parms, NULL );

	*ItemStr = parms.ItemStr;
	*ExtraObj = parms.ExtraObj;
	*ExtraStr = parms.ExtraStr;
}*/

/*struct FString UGUIList::GetExtraAtIndex ( int i )
{
	static UFunction* pGetExtraAtIndex = 0;
	UGUIList_execGetExtraAtIndex_Parms parms;

	if ( !pGetExtraAtIndex )
		pGetExtraAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.GetExtraAtIndex" );

	parms.i = i;
	this->ProcessEvent ( pGetExtraAtIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UObject* UGUIList::GetObjectAtIndex ( int i )
{
	static UFunction* pGetObjectAtIndex = 0;
	UGUIList_execGetObjectAtIndex_Parms parms;

	if ( !pGetObjectAtIndex )
		pGetObjectAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.GetObjectAtIndex" );

	parms.i = i;
	this->ProcessEvent ( pGetObjectAtIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIList::GetItemAtIndex ( int i )
{
	static UFunction* pGetItemAtIndex = 0;
	UGUIList_execGetItemAtIndex_Parms parms;

	if ( !pGetItemAtIndex )
		pGetItemAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.GetItemAtIndex" );

	parms.i = i;
	this->ProcessEvent ( pGetItemAtIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIList::IsSection (  )
{
	static UFunction* pIsSection = 0;
	UGUIList_execIsSection_Parms parms;

	if ( !pIsSection )
		pIsSection = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.IsSection" );

	this->ProcessEvent ( pIsSection, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIList::GetExtra (  )
{
	static UFunction* pGetExtra = 0;
	UGUIList_execGetExtra_Parms parms;

	if ( !pGetExtra )
		pGetExtra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.GetExtra" );

	this->ProcessEvent ( pGetExtra, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UObject* UGUIList::GetObject (  )
{
	static UFunction* pGetObject = 0;
	UGUIList_execGetObject_Parms parms;

	if ( !pGetObject )
		pGetObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.GetObject" );

	this->ProcessEvent ( pGetObject, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIList::Get ( bool bGuarantee )
{
	static UFunction* pGet = 0;
	UGUIList_execGet_Parms parms;

	if ( !pGet )
		pGet = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.Get" );

	parms.bGuarantee = bGuarantee;
	this->ProcessEvent ( pGet, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIList::SelectedText (  )
{
	static UFunction* pSelectedText = 0;
	UGUIList_execSelectedText_Parms parms;

	if ( !pSelectedText )
		pSelectedText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.SelectedText" );

	this->ProcessEvent ( pSelectedText, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIList::Clear (  )
{
	static UFunction* pClear = 0;
	UGUIList_execClear_Parms parms;

	if ( !pClear )
		pClear = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.Clear" );

	this->ProcessEvent ( pClear, &parms, NULL );

}*/

/*int UGUIList::RemoveElement ( struct FGUIListElem elem, int Count, bool bNoSort )
{
	static UFunction* pRemoveElement = 0;
	UGUIList_execRemoveElement_Parms parms;

	if ( !pRemoveElement )
		pRemoveElement = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.RemoveElement" );

	parms.elem = elem;
	parms.Count = Count;
	parms.bNoSort = bNoSort;
	this->ProcessEvent ( pRemoveElement, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIList::RemoveSilent ( int i, int Count )
{
	static UFunction* pRemoveSilent = 0;
	UGUIList_execRemoveSilent_Parms parms;

	if ( !pRemoveSilent )
		pRemoveSilent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.RemoveSilent" );

	parms.i = i;
	parms.Count = Count;
	this->ProcessEvent ( pRemoveSilent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIList::Remove ( int i, int Count, bool bNoSort )
{
	static UFunction* pRemove = 0;
	UGUIList_execRemove_Parms parms;

	if ( !pRemove )
		pRemove = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.Remove" );

	parms.i = i;
	parms.Count = Count;
	parms.bNoSort = bNoSort;
	this->ProcessEvent ( pRemove, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIList::LoadFrom ( class UGUIList* Source, bool bClearFirst )
{
	static UFunction* pLoadFrom = 0;
	UGUIList_execLoadFrom_Parms parms;

	if ( !pLoadFrom )
		pLoadFrom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.LoadFrom" );

	parms.Source = Source;
	parms.bClearFirst = bClearFirst;
	this->ProcessEvent ( pLoadFrom, &parms, NULL );

}*/

/*void UGUIList::eventSwap ( int IndexA, int IndexB )
{
	static UFunction* pSwap = 0;
	UGUIList_eventSwap_Parms parms;

	if ( !pSwap )
		pSwap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.Swap" );

	parms.IndexA = IndexA;
	parms.IndexB = IndexB;
	this->ProcessEvent ( pSwap, &parms, NULL );

}*/

/*void UGUIList::InsertElement ( int i, struct FGUIListElem NewElem, bool bNoSort )
{
	static UFunction* pInsertElement = 0;
	UGUIList_execInsertElement_Parms parms;

	if ( !pInsertElement )
		pInsertElement = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.InsertElement" );

	parms.i = i;
	parms.NewElem = NewElem;
	parms.bNoSort = bNoSort;
	this->ProcessEvent ( pInsertElement, &parms, NULL );

}*/

/*void UGUIList::Insert ( int i, struct FString NewItem, class UObject* obj, struct FString str, bool bNoSort, bool bSection )
{
	static UFunction* pInsert = 0;
	UGUIList_execInsert_Parms parms;

	if ( !pInsert )
		pInsert = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.Insert" );

	parms.i = i;
	parms.NewItem = NewItem;
	parms.obj = obj;
	parms.str = str;
	parms.bNoSort = bNoSort;
	parms.bSection = bSection;
	this->ProcessEvent ( pInsert, &parms, NULL );

}*/

/*void UGUIList::Replace ( int i, struct FString NewItem, class UObject* obj, struct FString str, bool bNoSort )
{
	static UFunction* pReplace = 0;
	UGUIList_execReplace_Parms parms;

	if ( !pReplace )
		pReplace = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.Replace" );

	parms.i = i;
	parms.NewItem = NewItem;
	parms.obj = obj;
	parms.str = str;
	parms.bNoSort = bNoSort;
	this->ProcessEvent ( pReplace, &parms, NULL );

}*/

/*void UGUIList::AddElement ( struct FGUIListElem NewElem )
{
	static UFunction* pAddElement = 0;
	UGUIList_execAddElement_Parms parms;

	if ( !pAddElement )
		pAddElement = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.AddElement" );

	parms.NewElem = NewElem;
	this->ProcessEvent ( pAddElement, &parms, NULL );

}*/

/*void UGUIList::Add ( struct FString NewItem, class UObject* obj, struct FString str, bool bSection )
{
	static UFunction* pAdd = 0;
	UGUIList_execAdd_Parms parms;

	if ( !pAdd )
		pAdd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.Add" );

	parms.NewItem = NewItem;
	parms.obj = obj;
	parms.str = str;
	parms.bSection = bSection;
	this->ProcessEvent ( pAdd, &parms, NULL );

}*/

/*int UGUIList::CompareItem ( struct FGUIListElem ElemA, struct FGUIListElem ElemB )
{
	static UFunction* pCompareItem = 0;
	UGUIList_execCompareItem_Parms parms;

	if ( !pCompareItem )
		pCompareItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.CompareItem" );

	parms.ElemA = ElemA;
	parms.ElemB = ElemB;
	this->ProcessEvent ( pCompareItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIList::Sort (  )
{
	static UFunction* pSort = 0;
	UGUIList_execSort_Parms parms;

	if ( !pSort )
		pSort = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.Sort" );

	this->ProcessEvent ( pSort, &parms, NULL );

}*/

/*void UGUIList::SortList (  )
{
	static UFunction* pSortList = 0;
	UGUIList_execSortList_Parms parms;

	if ( !pSortList )
		pSortList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIList.SortList" );

	this->ProcessEvent ( pSortList, &parms, NULL );

}*/

/*bool UGUIScrollText::IsValid (  )
{
	static UFunction* pIsValid = 0;
	UGUIScrollText_execIsValid_Parms parms;

	if ( !pIsValid )
		pIsValid = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.IsValid" );

	this->ProcessEvent ( pIsValid, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIScrollText::EndScrolling (  )
{
	static UFunction* pEndScrolling = 0;
	UGUIScrollText_execEndScrolling_Parms parms;

	if ( !pEndScrolling )
		pEndScrolling = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.EndScrolling" );

	this->ProcessEvent ( pEndScrolling, &parms, NULL );

}*/

/*bool UGUIScrollText::InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State )
{
	static UFunction* pInternalOnKeyEvent = 0;
	UGUIScrollText_execInternalOnKeyEvent_Parms parms;

	if ( !pInternalOnKeyEvent )
		pInternalOnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.InternalOnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternalOnKeyEvent, &parms, NULL );

	*key = parms.key;
	*State = parms.State;
	return parms.ReturnValue;
}*/

/*bool UGUIScrollText::InternalOnKeyType ( struct FString Unicode, unsigned char* key )
{
	static UFunction* pInternalOnKeyType = 0;
	UGUIScrollText_execInternalOnKeyType_Parms parms;

	if ( !pInternalOnKeyType )
		pInternalOnKeyType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.InternalOnKeyType" );

	parms.Unicode = Unicode;
	this->ProcessEvent ( pInternalOnKeyType, &parms, NULL );

	*key = parms.key;
	return parms.ReturnValue;
}*/

/*bool UGUIScrollText::InternalOnClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnClick = 0;
	UGUIScrollText_execInternalOnClick_Parms parms;

	if ( !pInternalOnClick )
		pInternalOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.InternalOnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIScrollText::eventTimer (  )
{
	static UFunction* pTimer = 0;
	UGUIScrollText_eventTimer_Parms parms;

	if ( !pTimer )
		pTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.Timer" );

	this->ProcessEvent ( pTimer, &parms, NULL );

}*/

/*bool UGUIScrollText::SkipChar (  )
{
	static UFunction* pSkipChar = 0;
	UGUIScrollText_execSkipChar_Parms parms;

	if ( !pSkipChar )
		pSkipChar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.SkipChar" );

	this->ProcessEvent ( pSkipChar, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIScrollText::Restart (  )
{
	static UFunction* pRestart = 0;
	UGUIScrollText_execRestart_Parms parms;

	if ( !pRestart )
		pRestart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.Restart" );

	this->ProcessEvent ( pRestart, &parms, NULL );

}*/

/*void UGUIScrollText::Stop (  )
{
	static UFunction* pStop = 0;
	UGUIScrollText_execStop_Parms parms;

	if ( !pStop )
		pStop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.Stop" );

	this->ProcessEvent ( pStop, &parms, NULL );

}*/

/*void UGUIScrollText::SetContent ( struct FString NewContent, struct FString sep )
{
	static UFunction* pSetContent = 0;
	UGUIScrollText_execSetContent_Parms parms;

	if ( !pSetContent )
		pSetContent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.SetContent" );

	parms.NewContent = NewContent;
	parms.sep = sep;
	this->ProcessEvent ( pSetContent, &parms, NULL );

}*/

/*void UGUIScrollText::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIScrollText_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIScrollText::Dump (  )
{
	static UFunction* pDump = 0;
	UGUIScrollText_execDump_Parms parms;

	if ( !pDump )
		pDump = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.Dump" );

	this->ProcessEvent ( pDump, &parms, NULL );

}*/

/*void UGUIScrollText::OnEndOfLine (  )
{
	static UFunction* pOnEndOfLine = 0;
	UGUIScrollText_execOnEndOfLine_Parms parms;

	if ( !pOnEndOfLine )
		pOnEndOfLine = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.OnEndOfLine" );

	this->ProcessEvent ( pOnEndOfLine, &parms, NULL );

}*/

/*struct FString UGUIScrollText::GetWordUnderCursor (  )
{
	static UFunction* pGetWordUnderCursor = 0;
	UGUIScrollText_execGetWordUnderCursor_Parms parms;

	if ( !pGetWordUnderCursor )
		pGetWordUnderCursor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollText.GetWordUnderCursor" );

	this->ProcessEvent ( pGetWordUnderCursor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiColumnListHeader::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIMultiColumnListHeader_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnListHeader.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UGUIVertImageList::InternalOnDragDrop ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnDragDrop = 0;
	UGUIVertImageList_execInternalOnDragDrop_Parms parms;

	if ( !pInternalOnDragDrop )
		pInternalOnDragDrop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.InternalOnDragDrop" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnDragDrop, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertImageList::InternalOnEndDrag ( class UGUIComponent* Accepting, bool bAccepted )
{
	static UFunction* pInternalOnEndDrag = 0;
	UGUIVertImageList_execInternalOnEndDrag_Parms parms;

	if ( !pInternalOnEndDrag )
		pInternalOnEndDrag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.InternalOnEndDrag" );

	parms.Accepting = Accepting;
	parms.bAccepted = bAccepted;
	this->ProcessEvent ( pInternalOnEndDrag, &parms, NULL );

}*/

/*int UGUIVertImageList::FindItem ( int Item )
{
	static UFunction* pFindItem = 0;
	UGUIVertImageList_execFindItem_Parms parms;

	if ( !pFindItem )
		pFindItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.FindItem" );

	parms.Item = Item;
	this->ProcessEvent ( pFindItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIVertImageList::FindImage ( class UMaterial* Image )
{
	static UFunction* pFindImage = 0;
	UGUIVertImageList_execFindImage_Parms parms;

	if ( !pFindImage )
		pFindImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.FindImage" );

	parms.Image = Image;
	this->ProcessEvent ( pFindImage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertImageList::RemoveItem ( int Item )
{
	static UFunction* pRemoveItem = 0;
	UGUIVertImageList_execRemoveItem_Parms parms;

	if ( !pRemoveItem )
		pRemoveItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.RemoveItem" );

	parms.Item = Item;
	this->ProcessEvent ( pRemoveItem, &parms, NULL );

}*/

/*void UGUIVertImageList::RemoveImage ( class UMaterial* Image )
{
	static UFunction* pRemoveImage = 0;
	UGUIVertImageList_execRemoveImage_Parms parms;

	if ( !pRemoveImage )
		pRemoveImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.RemoveImage" );

	parms.Image = Image;
	this->ProcessEvent ( pRemoveImage, &parms, NULL );

}*/

/*void UGUIVertImageList::SetItemAtIndex ( int i, int NewItem )
{
	static UFunction* pSetItemAtIndex = 0;
	UGUIVertImageList_execSetItemAtIndex_Parms parms;

	if ( !pSetItemAtIndex )
		pSetItemAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.SetItemAtIndex" );

	parms.i = i;
	parms.NewItem = NewItem;
	this->ProcessEvent ( pSetItemAtIndex, &parms, NULL );

}*/

/*void UGUIVertImageList::SetImageAtIndex ( int i, class UMaterial* NewImage )
{
	static UFunction* pSetImageAtIndex = 0;
	UGUIVertImageList_execSetImageAtIndex_Parms parms;

	if ( !pSetImageAtIndex )
		pSetImageAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.SetImageAtIndex" );

	parms.i = i;
	parms.NewImage = NewImage;
	this->ProcessEvent ( pSetImageAtIndex, &parms, NULL );

}*/

/*class TArray< struct FImageListElem > UGUIVertImageList::GetPendingElements ( bool bGuarantee )
{
	static UFunction* pGetPendingElements = 0;
	UGUIVertImageList_execGetPendingElements_Parms parms;

	if ( !pGetPendingElements )
		pGetPendingElements = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.GetPendingElements" );

	parms.bGuarantee = bGuarantee;
	this->ProcessEvent ( pGetPendingElements, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertImageList::ClearPendingElements (  )
{
	static UFunction* pClearPendingElements = 0;
	UGUIVertImageList_execClearPendingElements_Parms parms;

	if ( !pClearPendingElements )
		pClearPendingElements = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.ClearPendingElements" );

	this->ProcessEvent ( pClearPendingElements, &parms, NULL );

}*/

/*bool UGUIVertImageList::IsLocked (  )
{
	static UFunction* pIsLocked = 0;
	UGUIVertImageList_execIsLocked_Parms parms;

	if ( !pIsLocked )
		pIsLocked = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.IsLocked" );

	this->ProcessEvent ( pIsLocked, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIVertImageList::IndexLocked ( int i )
{
	static UFunction* pIndexLocked = 0;
	UGUIVertImageList_execIndexLocked_Parms parms;

	if ( !pIndexLocked )
		pIndexLocked = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.IndexLocked" );

	parms.i = i;
	this->ProcessEvent ( pIndexLocked, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertImageList::GetAtIndex ( int i, class UMaterial** Image, int* Item, int* Locked )
{
	static UFunction* pGetAtIndex = 0;
	UGUIVertImageList_execGetAtIndex_Parms parms;

	if ( !pGetAtIndex )
		pGetAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.GetAtIndex" );

	parms.i = i;
	this->ProcessEvent ( pGetAtIndex, &parms, NULL );

	*Image = parms.Image;
	*Item = parms.Item;
	*Locked = parms.Locked;
}*/

/*int UGUIVertImageList::GetItemIntAtIndex ( int i )
{
	static UFunction* pGetItemIntAtIndex = 0;
	UGUIVertImageList_execGetItemIntAtIndex_Parms parms;

	if ( !pGetItemIntAtIndex )
		pGetItemIntAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.GetItemIntAtIndex" );

	parms.i = i;
	this->ProcessEvent ( pGetItemIntAtIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIVertImageList::GetItemAtIndex ( int i )
{
	static UFunction* pGetItemAtIndex = 0;
	UGUIVertImageList_execGetItemAtIndex_Parms parms;

	if ( !pGetItemAtIndex )
		pGetItemAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.GetItemAtIndex" );

	parms.i = i;
	this->ProcessEvent ( pGetItemAtIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UMaterial* UGUIVertImageList::GetImageAtIndex ( int i )
{
	static UFunction* pGetImageAtIndex = 0;
	UGUIVertImageList_execGetImageAtIndex_Parms parms;

	if ( !pGetImageAtIndex )
		pGetImageAtIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.GetImageAtIndex" );

	parms.i = i;
	this->ProcessEvent ( pGetImageAtIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIVertImageList::GetItem (  )
{
	static UFunction* pGetItem = 0;
	UGUIVertImageList_execGetItem_Parms parms;

	if ( !pGetItem )
		pGetItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.GetItem" );

	this->ProcessEvent ( pGetItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UMaterial* UGUIVertImageList::Get ( bool bGuarantee )
{
	static UFunction* pGet = 0;
	UGUIVertImageList_execGet_Parms parms;

	if ( !pGet )
		pGet = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.Get" );

	parms.bGuarantee = bGuarantee;
	this->ProcessEvent ( pGet, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertImageList::Clear (  )
{
	static UFunction* pClear = 0;
	UGUIVertImageList_execClear_Parms parms;

	if ( !pClear )
		pClear = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.Clear" );

	this->ProcessEvent ( pClear, &parms, NULL );

}*/

/*int UGUIVertImageList::RemoveElement ( struct FImageListElem elem, int Count )
{
	static UFunction* pRemoveElement = 0;
	UGUIVertImageList_execRemoveElement_Parms parms;

	if ( !pRemoveElement )
		pRemoveElement = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.RemoveElement" );

	parms.elem = elem;
	parms.Count = Count;
	this->ProcessEvent ( pRemoveElement, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIVertImageList::RemoveSilent ( int i, int Count )
{
	static UFunction* pRemoveSilent = 0;
	UGUIVertImageList_execRemoveSilent_Parms parms;

	if ( !pRemoveSilent )
		pRemoveSilent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.RemoveSilent" );

	parms.i = i;
	parms.Count = Count;
	this->ProcessEvent ( pRemoveSilent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIVertImageList::Remove ( int i, int Count )
{
	static UFunction* pRemove = 0;
	UGUIVertImageList_execRemove_Parms parms;

	if ( !pRemove )
		pRemove = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.Remove" );

	parms.i = i;
	parms.Count = Count;
	this->ProcessEvent ( pRemove, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertImageList::LoadFrom ( class UGUIVertImageList* Source, bool bClearFirst )
{
	static UFunction* pLoadFrom = 0;
	UGUIVertImageList_execLoadFrom_Parms parms;

	if ( !pLoadFrom )
		pLoadFrom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.LoadFrom" );

	parms.Source = Source;
	parms.bClearFirst = bClearFirst;
	this->ProcessEvent ( pLoadFrom, &parms, NULL );

}*/

/*void UGUIVertImageList::eventSwap ( int IndexA, int IndexB )
{
	static UFunction* pSwap = 0;
	UGUIVertImageList_eventSwap_Parms parms;

	if ( !pSwap )
		pSwap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.Swap" );

	parms.IndexA = IndexA;
	parms.IndexB = IndexB;
	this->ProcessEvent ( pSwap, &parms, NULL );

}*/

/*void UGUIVertImageList::InsertElement ( int i, struct FImageListElem NewElem, int Locked )
{
	static UFunction* pInsertElement = 0;
	UGUIVertImageList_execInsertElement_Parms parms;

	if ( !pInsertElement )
		pInsertElement = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.InsertElement" );

	parms.i = i;
	parms.NewElem = NewElem;
	parms.Locked = Locked;
	this->ProcessEvent ( pInsertElement, &parms, NULL );

}*/

/*void UGUIVertImageList::Insert ( int i, class UMaterial* NewImage, int NewItem, int Locked )
{
	static UFunction* pInsert = 0;
	UGUIVertImageList_execInsert_Parms parms;

	if ( !pInsert )
		pInsert = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.Insert" );

	parms.i = i;
	parms.NewImage = NewImage;
	parms.NewItem = NewItem;
	parms.Locked = Locked;
	this->ProcessEvent ( pInsert, &parms, NULL );

}*/

/*void UGUIVertImageList::Replace ( int i, class UMaterial* NewImage, int NewItem, int Locked )
{
	static UFunction* pReplace = 0;
	UGUIVertImageList_execReplace_Parms parms;

	if ( !pReplace )
		pReplace = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.Replace" );

	parms.i = i;
	parms.NewImage = NewImage;
	parms.NewItem = NewItem;
	parms.Locked = Locked;
	this->ProcessEvent ( pReplace, &parms, NULL );

}*/

/*void UGUIVertImageList::AddImage ( struct FImageListElem NewElem, int Locked )
{
	static UFunction* pAddImage = 0;
	UGUIVertImageList_execAddImage_Parms parms;

	if ( !pAddImage )
		pAddImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.AddImage" );

	parms.NewElem = NewElem;
	parms.Locked = Locked;
	this->ProcessEvent ( pAddImage, &parms, NULL );

}*/

/*void UGUIVertImageList::Add ( class UMaterial* Image, int Item, int Locked )
{
	static UFunction* pAdd = 0;
	UGUIVertImageList_execAdd_Parms parms;

	if ( !pAdd )
		pAdd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.Add" );

	parms.Image = Image;
	parms.Item = Item;
	parms.Locked = Locked;
	this->ProcessEvent ( pAdd, &parms, NULL );

}*/

/*void UGUIVertImageList::SetTopItem ( int Item )
{
	static UFunction* pSetTopItem = 0;
	UGUIVertImageList_execSetTopItem_Parms parms;

	if ( !pSetTopItem )
		pSetTopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.SetTopItem" );

	parms.Item = Item;
	this->ProcessEvent ( pSetTopItem, &parms, NULL );

}*/

/*void UGUIVertImageList::MakeVisible ( float perc )
{
	static UFunction* pMakeVisible = 0;
	UGUIVertImageList_execMakeVisible_Parms parms;

	if ( !pMakeVisible )
		pMakeVisible = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.MakeVisible" );

	parms.perc = perc;
	this->ProcessEvent ( pMakeVisible, &parms, NULL );

}*/

/*void UGUIVertImageList::PgDn (  )
{
	static UFunction* pPgDn = 0;
	UGUIVertImageList_execPgDn_Parms parms;

	if ( !pPgDn )
		pPgDn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.PgDn" );

	this->ProcessEvent ( pPgDn, &parms, NULL );

}*/

/*void UGUIVertImageList::PgUp (  )
{
	static UFunction* pPgUp = 0;
	UGUIVertImageList_execPgUp_Parms parms;

	if ( !pPgUp )
		pPgUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.PgUp" );

	this->ProcessEvent ( pPgUp, &parms, NULL );

}*/

/*void UGUIVertImageList::End (  )
{
	static UFunction* pEnd = 0;
	UGUIVertImageList_execEnd_Parms parms;

	if ( !pEnd )
		pEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.End" );

	this->ProcessEvent ( pEnd, &parms, NULL );

}*/

/*void UGUIVertImageList::home (  )
{
	static UFunction* phome = 0;
	UGUIVertImageList_exechome_Parms parms;

	if ( !phome )
		phome = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.home" );

	this->ProcessEvent ( phome, &parms, NULL );

}*/

/*bool UGUIVertImageList::MoveLeft (  )
{
	static UFunction* pMoveLeft = 0;
	UGUIVertImageList_execMoveLeft_Parms parms;

	if ( !pMoveLeft )
		pMoveLeft = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.MoveLeft" );

	this->ProcessEvent ( pMoveLeft, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIVertImageList::MoveRight (  )
{
	static UFunction* pMoveRight = 0;
	UGUIVertImageList_execMoveRight_Parms parms;

	if ( !pMoveRight )
		pMoveRight = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.MoveRight" );

	this->ProcessEvent ( pMoveRight, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIVertImageList::Down (  )
{
	static UFunction* pDown = 0;
	UGUIVertImageList_execDown_Parms parms;

	if ( !pDown )
		pDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.Down" );

	this->ProcessEvent ( pDown, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIVertImageList::Up (  )
{
	static UFunction* pUp = 0;
	UGUIVertImageList_execUp_Parms parms;

	if ( !pUp )
		pUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.Up" );

	this->ProcessEvent ( pUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIVertImageList::SetIndex ( int NewIndex )
{
	static UFunction* pSetIndex = 0;
	UGUIVertImageList_execSetIndex_Parms parms;

	if ( !pSetIndex )
		pSetIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.SetIndex" );

	parms.NewIndex = NewIndex;
	this->ProcessEvent ( pSetIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIVertImageList::InternalOnClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnClick = 0;
	UGUIVertImageList_execInternalOnClick_Parms parms;

	if ( !pInternalOnClick )
		pInternalOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.InternalOnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIVertImageList::OnIsSelectibleIndex ( class UGUIComponent* Sender, int Index )
{
	static UFunction* pOnIsSelectibleIndex = 0;
	UGUIVertImageList_execOnIsSelectibleIndex_Parms parms;

	if ( !pOnIsSelectibleIndex )
		pOnIsSelectibleIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.OnIsSelectibleIndex" );

	parms.Sender = Sender;
	parms.Index = Index;
	this->ProcessEvent ( pOnIsSelectibleIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIVertImageList::OnItemDblClick ( class UGUIComponent* Sender )
{
	static UFunction* pOnItemDblClick = 0;
	UGUIVertImageList_execOnItemDblClick_Parms parms;

	if ( !pOnItemDblClick )
		pOnItemDblClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.OnItemDblClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnItemDblClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIVertImageList::eventCalculateIndex ( bool bRequireValidIndex )
{
	static UFunction* pCalculateIndex = 0;
	UGUIVertImageList_eventCalculateIndex_Parms parms;

	if ( !pCalculateIndex )
		pCalculateIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageList.CalculateIndex" );

	parms.bRequireValidIndex = bRequireValidIndex;
	this->ProcessEvent ( pCalculateIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiColumnList::SetTopItem ( int Item )
{
	static UFunction* pSetTopItem = 0;
	UGUIMultiColumnList_execSetTopItem_Parms parms;

	if ( !pSetTopItem )
		pSetTopItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.SetTopItem" );

	parms.Item = Item;
	this->ProcessEvent ( pSetTopItem, &parms, NULL );

}*/

/*void UGUIMultiColumnList::Dump (  )
{
	static UFunction* pDump = 0;
	UGUIMultiColumnList_execDump_Parms parms;

	if ( !pDump )
		pDump = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.Dump" );

	this->ProcessEvent ( pDump, &parms, NULL );

}*/

/*void UGUIMultiColumnList::Sort (  )
{
	static UFunction* pSort = 0;
	UGUIMultiColumnList_execSort_Parms parms;

	if ( !pSort )
		pSort = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.Sort" );

	this->ProcessEvent ( pSort, &parms, NULL );

}*/

/*void UGUIMultiColumnList::GetCellLeftWidth ( int Column, float* Left, float* width )
{
	static UFunction* pGetCellLeftWidth = 0;
	UGUIMultiColumnList_execGetCellLeftWidth_Parms parms;

	if ( !pGetCellLeftWidth )
		pGetCellLeftWidth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.GetCellLeftWidth" );

	parms.Column = Column;
	this->ProcessEvent ( pGetCellLeftWidth, &parms, NULL );

	*Left = parms.Left;
	*width = parms.width;
}*/

/*bool UGUIMultiColumnList::InternalOnPreDraw ( class UCanvas* C )
{
	static UFunction* pInternalOnPreDraw = 0;
	UGUIMultiColumnList_execInternalOnPreDraw_Parms parms;

	if ( !pInternalOnPreDraw )
		pInternalOnPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.InternalOnPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternalOnPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiColumnList::eventInitializeColumns ( class UCanvas* C )
{
	static UFunction* pInitializeColumns = 0;
	UGUIMultiColumnList_eventInitializeColumns_Parms parms;

	if ( !pInitializeColumns )
		pInitializeColumns = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.InitializeColumns" );

	parms.C = C;
	this->ProcessEvent ( pInitializeColumns, &parms, NULL );

}*/

/*void UGUIMultiColumnList::ResolutionChanged ( int ResX, int ResY )
{
	static UFunction* pResolutionChanged = 0;
	UGUIMultiColumnList_execResolutionChanged_Parms parms;

	if ( !pResolutionChanged )
		pResolutionChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.ResolutionChanged" );

	parms.ResX = ResX;
	parms.ResY = ResY;
	this->ProcessEvent ( pResolutionChanged, &parms, NULL );

}*/

/*void UGUIMultiColumnList::RemovedCurrent (  )
{
	static UFunction* pRemovedCurrent = 0;
	UGUIMultiColumnList_execRemovedCurrent_Parms parms;

	if ( !pRemovedCurrent )
		pRemovedCurrent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.RemovedCurrent" );

	this->ProcessEvent ( pRemovedCurrent, &parms, NULL );

}*/

/*void UGUIMultiColumnList::Clear (  )
{
	static UFunction* pClear = 0;
	UGUIMultiColumnList_execClear_Parms parms;

	if ( !pClear )
		pClear = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.Clear" );

	this->ProcessEvent ( pClear, &parms, NULL );

}*/

/*void UGUIMultiColumnList::eventOnSortChanged (  )
{
	static UFunction* pOnSortChanged = 0;
	UGUIMultiColumnList_eventOnSortChanged_Parms parms;

	if ( !pOnSortChanged )
		pOnSortChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.OnSortChanged" );

	this->ProcessEvent ( pOnSortChanged, &parms, NULL );

}*/

/*int UGUIMultiColumnList::CurrentListId (  )
{
	static UFunction* pCurrentListId = 0;
	UGUIMultiColumnList_execCurrentListId_Parms parms;

	if ( !pCurrentListId )
		pCurrentListId = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.CurrentListId" );

	this->ProcessEvent ( pCurrentListId, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIMultiColumnList::GetSortString ( int YourArrayIndex )
{
	static UFunction* pGetSortString = 0;
	UGUIMultiColumnList_execGetSortString_Parms parms;

	if ( !pGetSortString )
		pGetSortString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.GetSortString" );

	parms.YourArrayIndex = YourArrayIndex;
	this->ProcessEvent ( pGetSortString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiColumnList::AddedItem ( int YourArrayIndex )
{
	static UFunction* pAddedItem = 0;
	UGUIMultiColumnList_execAddedItem_Parms parms;

	if ( !pAddedItem )
		pAddedItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.AddedItem" );

	parms.YourArrayIndex = YourArrayIndex;
	this->ProcessEvent ( pAddedItem, &parms, NULL );

}*/

/*void UGUIMultiColumnList::RemovedItem ( int YourArrayIndex )
{
	static UFunction* pRemovedItem = 0;
	UGUIMultiColumnList_execRemovedItem_Parms parms;

	if ( !pRemovedItem )
		pRemovedItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.RemovedItem" );

	parms.YourArrayIndex = YourArrayIndex;
	this->ProcessEvent ( pRemovedItem, &parms, NULL );

}*/

/*void UGUIMultiColumnList::UpdatedItem ( int YourArrayIndex )
{
	static UFunction* pUpdatedItem = 0;
	UGUIMultiColumnList_execUpdatedItem_Parms parms;

	if ( !pUpdatedItem )
		pUpdatedItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.UpdatedItem" );

	parms.YourArrayIndex = YourArrayIndex;
	this->ProcessEvent ( pUpdatedItem, &parms, NULL );

}*/

/*void UGUIMultiColumnList::SortList (  )
{
	static UFunction* pSortList = 0;
	UGUIMultiColumnList_execSortList_Parms parms;

	if ( !pSortList )
		pSortList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.SortList" );

	this->ProcessEvent ( pSortList, &parms, NULL );

}*/

/*void UGUIMultiColumnList::ChangeSortOrder (  )
{
	static UFunction* pChangeSortOrder = 0;
	UGUIMultiColumnList_execChangeSortOrder_Parms parms;

	if ( !pChangeSortOrder )
		pChangeSortOrder = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.ChangeSortOrder" );

	this->ProcessEvent ( pChangeSortOrder, &parms, NULL );

}*/

/*int UGUIMultiColumnList::GetListIndex ( int YourArrayIndex )
{
	static UFunction* pGetListIndex = 0;
	UGUIMultiColumnList_execGetListIndex_Parms parms;

	if ( !pGetListIndex )
		pGetListIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.GetListIndex" );

	parms.YourArrayIndex = YourArrayIndex;
	this->ProcessEvent ( pGetListIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMultiColumnList::OnColumnSized ( int Column )
{
	static UFunction* pOnColumnSized = 0;
	UGUIMultiColumnList_execOnColumnSized_Parms parms;

	if ( !pOnColumnSized )
		pOnColumnSized = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMultiColumnList.OnColumnSized" );

	parms.Column = Column;
	this->ProcessEvent ( pOnColumnSized, &parms, NULL );

}*/

/*struct FString UGUIBorder::GetCaption (  )
{
	static UFunction* pGetCaption = 0;
	UGUIBorder_execGetCaption_Parms parms;

	if ( !pGetCaption )
		pGetCaption = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIBorder.GetCaption" );

	this->ProcessEvent ( pGetCaption, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIBorder::SetCaption ( struct FString NewCaption )
{
	static UFunction* pSetCaption = 0;
	UGUIBorder_execSetCaption_Parms parms;

	if ( !pSetCaption )
		pSetCaption = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIBorder.SetCaption" );

	parms.NewCaption = NewCaption;
	this->ProcessEvent ( pSetCaption, &parms, NULL );

}*/

/*void UGUITabControl::LevelChanged (  )
{
	static UFunction* pLevelChanged = 0;
	UGUITabControl_execLevelChanged_Parms parms;

	if ( !pLevelChanged )
		pLevelChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.LevelChanged" );

	this->ProcessEvent ( pLevelChanged, &parms, NULL );

}*/

/*void UGUITabControl::eventfree (  )
{
	static UFunction* pfree = 0;
	UGUITabControl_eventfree_Parms parms;

	if ( !pfree )
		pfree = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.free" );

	this->ProcessEvent ( pfree, &parms, NULL );

}*/

/*void UGUITabControl::CenterMouse (  )
{
	static UFunction* pCenterMouse = 0;
	UGUITabControl_execCenterMouse_Parms parms;

	if ( !pCenterMouse )
		pCenterMouse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.CenterMouse" );

	this->ProcessEvent ( pCenterMouse, &parms, NULL );

}*/

/*bool UGUITabControl::FocusLast ( class UGUIComponent* Sender )
{
	static UFunction* pFocusLast = 0;
	UGUITabControl_execFocusLast_Parms parms;

	if ( !pFocusLast )
		pFocusLast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.FocusLast" );

	parms.Sender = Sender;
	this->ProcessEvent ( pFocusLast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::FocusFirst ( class UGUIComponent* Sender )
{
	static UFunction* pFocusFirst = 0;
	UGUITabControl_execFocusFirst_Parms parms;

	if ( !pFocusFirst )
		pFocusFirst = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.FocusFirst" );

	parms.Sender = Sender;
	this->ProcessEvent ( pFocusFirst, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUITabControl::InternalOnActivate (  )
{
	static UFunction* pInternalOnActivate = 0;
	UGUITabControl_execInternalOnActivate_Parms parms;

	if ( !pInternalOnActivate )
		pInternalOnActivate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.InternalOnActivate" );

	this->ProcessEvent ( pInternalOnActivate, &parms, NULL );

}*/

/*void UGUITabControl::SetVisibility ( bool bIsVisible )
{
	static UFunction* pSetVisibility = 0;
	UGUITabControl_execSetVisibility_Parms parms;

	if ( !pSetVisibility )
		pSetVisibility = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.SetVisibility" );

	parms.bIsVisible = bIsVisible;
	this->ProcessEvent ( pSetVisibility, &parms, NULL );

}*/

/*class UGUITabPanel* UGUITabControl::BorrowPanel ( struct FString Caption )
{
	static UFunction* pBorrowPanel = 0;
	UGUITabControl_execBorrowPanel_Parms parms;

	if ( !pBorrowPanel )
		pBorrowPanel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.BorrowPanel" );

	parms.Caption = Caption;
	this->ProcessEvent ( pBorrowPanel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUITabPanel* UGUITabControl::FindPanelClass ( class UClass* PanelClass )
{
	static UFunction* pFindPanelClass = 0;
	UGUITabControl_execFindPanelClass_Parms parms;

	if ( !pFindPanelClass )
		pFindPanelClass = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.FindPanelClass" );

	parms.PanelClass = PanelClass;
	this->ProcessEvent ( pFindPanelClass, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUITabControl::TabIndex ( struct FString tabname )
{
	static UFunction* pTabIndex = 0;
	UGUITabControl_execTabIndex_Parms parms;

	if ( !pTabIndex )
		pTabIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.TabIndex" );

	parms.tabname = tabname;
	this->ProcessEvent ( pTabIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::eventPrevControl ( class UGUIComponent* Sender )
{
	static UFunction* pPrevControl = 0;
	UGUITabControl_eventPrevControl_Parms parms;

	if ( !pPrevControl )
		pPrevControl = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.PrevControl" );

	parms.Sender = Sender;
	this->ProcessEvent ( pPrevControl, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::eventNextControl ( class UGUIComponent* Sender )
{
	static UFunction* pNextControl = 0;
	UGUITabControl_eventNextControl_Parms parms;

	if ( !pNextControl )
		pNextControl = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.NextControl" );

	parms.Sender = Sender;
	this->ProcessEvent ( pNextControl, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::eventPrevPage (  )
{
	static UFunction* pPrevPage = 0;
	UGUITabControl_eventPrevPage_Parms parms;

	if ( !pPrevPage )
		pPrevPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.PrevPage" );

	this->ProcessEvent ( pPrevPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::eventNextPage (  )
{
	static UFunction* pNextPage = 0;
	UGUITabControl_eventNextPage_Parms parms;

	if ( !pNextPage )
		pNextPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.NextPage" );

	this->ProcessEvent ( pNextPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::InternalTabClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalTabClick = 0;
	UGUITabControl_execInternalTabClick_Parms parms;

	if ( !pInternalTabClick )
		pInternalTabClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.InternalTabClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalTabClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::ActivateTabByPanel ( class UGUITabPanel* Panel, bool bFocusPanel )
{
	static UFunction* pActivateTabByPanel = 0;
	UGUITabControl_execActivateTabByPanel_Parms parms;

	if ( !pActivateTabByPanel )
		pActivateTabByPanel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.ActivateTabByPanel" );

	parms.Panel = Panel;
	parms.bFocusPanel = bFocusPanel;
	this->ProcessEvent ( pActivateTabByPanel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::ActivateTabByName ( struct FString tabname, bool bFocusPanel )
{
	static UFunction* pActivateTabByName = 0;
	UGUITabControl_execActivateTabByName_Parms parms;

	if ( !pActivateTabByName )
		pActivateTabByName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.ActivateTabByName" );

	parms.tabname = tabname;
	parms.bFocusPanel = bFocusPanel;
	this->ProcessEvent ( pActivateTabByName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::ActivateTab ( class UGUITabButton* Who, bool bFocusPanel )
{
	static UFunction* pActivateTab = 0;
	UGUITabControl_execActivateTab_Parms parms;

	if ( !pActivateTab )
		pActivateTab = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.ActivateTab" );

	parms.Who = Who;
	parms.bFocusPanel = bFocusPanel;
	this->ProcessEvent ( pActivateTab, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUITabControl::eventMakeTabActive ( class UGUITabButton* Who )
{
	static UFunction* pMakeTabActive = 0;
	UGUITabControl_eventMakeTabActive_Parms parms;

	if ( !pMakeTabActive )
		pMakeTabActive = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.MakeTabActive" );

	parms.Who = Who;
	this->ProcessEvent ( pMakeTabActive, &parms, NULL );

}*/

/*bool UGUITabControl::LostActiveTab (  )
{
	static UFunction* pLostActiveTab = 0;
	UGUITabControl_execLostActiveTab_Parms parms;

	if ( !pLostActiveTab )
		pLostActiveTab = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.LostActiveTab" );

	this->ProcessEvent ( pLostActiveTab, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUITabControl::RemoveTab ( struct FString Caption, class UGUITabButton* Who )
{
	static UFunction* pRemoveTab = 0;
	UGUITabControl_execRemoveTab_Parms parms;

	if ( !pRemoveTab )
		pRemoveTab = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.RemoveTab" );

	parms.Caption = Caption;
	parms.Who = Who;
	this->ProcessEvent ( pRemoveTab, &parms, NULL );

}*/

/*class UGUITabPanel* UGUITabControl::ReplaceTab ( class UGUITabButton* Which, struct FString Caption, struct FString PanelClass, class UGUITabPanel* ExistingPanel, struct FString InHint, bool bForceActive )
{
	static UFunction* pReplaceTab = 0;
	UGUITabControl_execReplaceTab_Parms parms;

	if ( !pReplaceTab )
		pReplaceTab = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.ReplaceTab" );

	parms.Which = Which;
	parms.Caption = Caption;
	parms.PanelClass = PanelClass;
	parms.ExistingPanel = ExistingPanel;
	parms.InHint = InHint;
	parms.bForceActive = bForceActive;
	this->ProcessEvent ( pReplaceTab, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUITabPanel* UGUITabControl::InsertTab ( int pos, struct FString Caption, struct FString PanelClass, class UGUITabPanel* ExistingPanel, struct FString InHint, bool bForceActive )
{
	static UFunction* pInsertTab = 0;
	UGUITabControl_execInsertTab_Parms parms;

	if ( !pInsertTab )
		pInsertTab = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.InsertTab" );

	parms.pos = pos;
	parms.Caption = Caption;
	parms.PanelClass = PanelClass;
	parms.ExistingPanel = ExistingPanel;
	parms.InHint = InHint;
	parms.bForceActive = bForceActive;
	this->ProcessEvent ( pInsertTab, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUITabPanel* UGUITabControl::AddTab ( struct FString InCaption, struct FString PanelClass, class UGUITabPanel* ExistingPanel, struct FString InHint, bool bForceActive )
{
	static UFunction* pAddTab = 0;
	UGUITabControl_execAddTab_Parms parms;

	if ( !pAddTab )
		pAddTab = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.AddTab" );

	parms.InCaption = InCaption;
	parms.PanelClass = PanelClass;
	parms.ExistingPanel = ExistingPanel;
	parms.InHint = InHint;
	parms.bForceActive = bForceActive;
	this->ProcessEvent ( pAddTab, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUITabPanel* UGUITabControl::AddTabItem ( struct FGUITabItem Item )
{
	static UFunction* pAddTabItem = 0;
	UGUITabControl_execAddTabItem_Parms parms;

	if ( !pAddTabItem )
		pAddTabItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.AddTabItem" );

	parms.Item = Item;
	this->ProcessEvent ( pAddTabItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabControl::InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State )
{
	static UFunction* pInternalOnKeyEvent = 0;
	UGUITabControl_execInternalOnKeyEvent_Parms parms;

	if ( !pInternalOnKeyEvent )
		pInternalOnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.InternalOnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternalOnKeyEvent, &parms, NULL );

	*key = parms.key;
	*State = parms.State;
	return parms.ReturnValue;
}*/

/*void UGUITabControl::eventClosed ( class UGUIComponent* Sender, bool bCancelled )
{
	static UFunction* pClosed = 0;
	UGUITabControl_eventClosed_Parms parms;

	if ( !pClosed )
		pClosed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.Closed" );

	parms.Sender = Sender;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pClosed, &parms, NULL );

}*/

/*void UGUITabControl::eventOpened ( class UGUIComponent* Sender )
{
	static UFunction* pOpened = 0;
	UGUITabControl_eventOpened_Parms parms;

	if ( !pOpened )
		pOpened = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.Opened" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOpened, &parms, NULL );

}*/

/*void UGUITabControl::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUITabControl_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabControl.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UGUIButton::InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State )
{
	static UFunction* pInternalOnKeyEvent = 0;
	UGUIButton_execInternalOnKeyEvent_Parms parms;

	if ( !pInternalOnKeyEvent )
		pInternalOnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIButton.InternalOnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternalOnKeyEvent, &parms, NULL );

	*key = parms.key;
	*State = parms.State;
	return parms.ReturnValue;
}*/

/*void UGUIButton::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIButton_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIButton.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UGUITabButton::CanShowPanel (  )
{
	static UFunction* pCanShowPanel = 0;
	UGUITabButton_execCanShowPanel_Parms parms;

	if ( !pCanShowPanel )
		pCanShowPanel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabButton.CanShowPanel" );

	this->ProcessEvent ( pCanShowPanel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabButton::ChangeActiveState ( bool IsActive, bool bFocusPanel )
{
	static UFunction* pChangeActiveState = 0;
	UGUITabButton_execChangeActiveState_Parms parms;

	if ( !pChangeActiveState )
		pChangeActiveState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabButton.ChangeActiveState" );

	parms.IsActive = IsActive;
	parms.bFocusPanel = bFocusPanel;
	this->ProcessEvent ( pChangeActiveState, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUITabButton::eventSetFocus ( class UGUIComponent* Who )
{
	static UFunction* pSetFocus = 0;
	UGUITabButton_eventSetFocus_Parms parms;

	if ( !pSetFocus )
		pSetFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabButton.SetFocus" );

	parms.Who = Who;
	this->ProcessEvent ( pSetFocus, &parms, NULL );

}*/

/*void UGUIPanel::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIPanel_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPanel.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UGUIPanel::OnPostDraw ( class UCanvas* Canvas )
{
	static UFunction* pOnPostDraw = 0;
	UGUIPanel_execOnPostDraw_Parms parms;

	if ( !pOnPostDraw )
		pOnPostDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIPanel.OnPostDraw" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pOnPostDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FFloatBox UGUITabPanel::GetTooltipPos ( int tooltipWidth, int tooltipHeight, int nOffsetX, int nOffsetY )
{
	static UFunction* pGetTooltipPos = 0;
	UGUITabPanel_execGetTooltipPos_Parms parms;

	if ( !pGetTooltipPos )
		pGetTooltipPos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabPanel.GetTooltipPos" );

	parms.tooltipWidth = tooltipWidth;
	parms.tooltipHeight = tooltipHeight;
	parms.nOffsetX = nOffsetX;
	parms.nOffsetY = nOffsetY;
	this->ProcessEvent ( pGetTooltipPos, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUITabPanel::CanShowPanel (  )
{
	static UFunction* pCanShowPanel = 0;
	UGUITabPanel_execCanShowPanel_Parms parms;

	if ( !pCanShowPanel )
		pCanShowPanel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabPanel.CanShowPanel" );

	this->ProcessEvent ( pCanShowPanel, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUITabPanel::ShowPanel ( bool bShow )
{
	static UFunction* pShowPanel = 0;
	UGUITabPanel_execShowPanel_Parms parms;

	if ( !pShowPanel )
		pShowPanel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabPanel.ShowPanel" );

	parms.bShow = bShow;
	this->ProcessEvent ( pShowPanel, &parms, NULL );

}*/

/*void UGUITabPanel::eventfree (  )
{
	static UFunction* pfree = 0;
	UGUITabPanel_eventfree_Parms parms;

	if ( !pfree )
		pfree = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabPanel.free" );

	this->ProcessEvent ( pfree, &parms, NULL );

}*/

/*void UGUITabPanel::OnDestroyPanel ( bool bCancelled )
{
	static UFunction* pOnDestroyPanel = 0;
	UGUITabPanel_execOnDestroyPanel_Parms parms;

	if ( !pOnDestroyPanel )
		pOnDestroyPanel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabPanel.OnDestroyPanel" );

	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pOnDestroyPanel, &parms, NULL );

}*/

/*void UGUITabPanel::InitPanel (  )
{
	static UFunction* pInitPanel = 0;
	UGUITabPanel_execInitPanel_Parms parms;

	if ( !pInitPanel )
		pInitPanel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabPanel.InitPanel" );

	this->ProcessEvent ( pInitPanel, &parms, NULL );

}*/

/*void UGUITabPanel::Refresh (  )
{
	static UFunction* pRefresh = 0;
	UGUITabPanel_execRefresh_Parms parms;

	if ( !pRefresh )
		pRefresh = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUITabPanel.Refresh" );

	this->ProcessEvent ( pRefresh, &parms, NULL );

}*/

/*bool UGUIGFXButton::InternalOnClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnClick = 0;
	UGUIGFXButton_execInternalOnClick_Parms parms;

	if ( !pInternalOnClick )
		pInternalOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIGFXButton.InternalOnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIGFXButton::SetChecked ( bool bNewChecked )
{
	static UFunction* pSetChecked = 0;
	UGUIGFXButton_execSetChecked_Parms parms;

	if ( !pSetChecked )
		pSetChecked = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIGFXButton.SetChecked" );

	parms.bNewChecked = bNewChecked;
	this->ProcessEvent ( pSetChecked, &parms, NULL );

}*/

/*void UGUIGFXButton::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIGFXButton_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIGFXButton.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIEditBox::IMEInputCancel (  )
{
	static UFunction* pIMEInputCancel = 0;
	UGUIEditBox_execIMEInputCancel_Parms parms;

	if ( !pIMEInputCancel )
		pIMEInputCancel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.IMEInputCancel" );

	this->ProcessEvent ( pIMEInputCancel, &parms, NULL );

}*/

/*void UGUIEditBox::InternalDeactivate (  )
{
	static UFunction* pInternalDeactivate = 0;
	UGUIEditBox_execInternalDeactivate_Parms parms;

	if ( !pInternalDeactivate )
		pInternalDeactivate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.InternalDeactivate" );

	this->ProcessEvent ( pInternalDeactivate, &parms, NULL );

}*/

/*void UGUIEditBox::InternalActivate (  )
{
	static UFunction* pInternalActivate = 0;
	UGUIEditBox_execInternalActivate_Parms parms;

	if ( !pInternalActivate )
		pInternalActivate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.InternalActivate" );

	this->ProcessEvent ( pInternalActivate, &parms, NULL );

}*/

/*void UGUIEditBox::TextChanged (  )
{
	static UFunction* pTextChanged = 0;
	UGUIEditBox_execTextChanged_Parms parms;

	if ( !pTextChanged )
		pTextChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.TextChanged" );

	this->ProcessEvent ( pTextChanged, &parms, NULL );

}*/

/*struct FString UGUIEditBox::GetText (  )
{
	static UFunction* pGetText = 0;
	UGUIEditBox_execGetText_Parms parms;

	if ( !pGetText )
		pGetText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.GetText" );

	this->ProcessEvent ( pGetText, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIEditBox::ConvertIllegal ( struct FString inputstr )
{
	static UFunction* pConvertIllegal = 0;
	UGUIEditBox_execConvertIllegal_Parms parms;

	if ( !pConvertIllegal )
		pConvertIllegal = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.ConvertIllegal" );

	parms.inputstr = inputstr;
	this->ProcessEvent ( pConvertIllegal, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIEditBox::InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State )
{
	static UFunction* pInternalOnKeyEvent = 0;
	UGUIEditBox_execInternalOnKeyEvent_Parms parms;

	if ( !pInternalOnKeyEvent )
		pInternalOnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.InternalOnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternalOnKeyEvent, &parms, NULL );

	*key = parms.key;
	*State = parms.State;
	return parms.ReturnValue;
}*/

/*bool UGUIEditBox::InternalOnKeyType ( struct FString Unicode, unsigned char* key )
{
	static UFunction* pInternalOnKeyType = 0;
	UGUIEditBox_execInternalOnKeyType_Parms parms;

	if ( !pInternalOnKeyType )
		pInternalOnKeyType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.InternalOnKeyType" );

	parms.Unicode = Unicode;
	this->ProcessEvent ( pInternalOnKeyType, &parms, NULL );

	*key = parms.key;
	return parms.ReturnValue;
}*/

/*void UGUIEditBox::DeleteChar (  )
{
	static UFunction* pDeleteChar = 0;
	UGUIEditBox_execDeleteChar_Parms parms;

	if ( !pDeleteChar )
		pDeleteChar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.DeleteChar" );

	this->ProcessEvent ( pDeleteChar, &parms, NULL );

}*/

/*void UGUIEditBox::eventSetText ( struct FString NewText )
{
	static UFunction* pSetText = 0;
	UGUIEditBox_eventSetText_Parms parms;

	if ( !pSetText )
		pSetText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.SetText" );

	parms.NewText = NewText;
	this->ProcessEvent ( pSetText, &parms, NULL );

}*/

/*void UGUIEditBox::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIEditBox_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UGUIEditBox::OnIME_Notify ( int Type, int LangID, struct FString strText, int nStartPos, int nSize )
{
	static UFunction* pOnIME_Notify = 0;
	UGUIEditBox_execOnIME_Notify_Parms parms;

	if ( !pOnIME_Notify )
		pOnIME_Notify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIEditBox.OnIME_Notify" );

	parms.Type = Type;
	parms.LangID = LangID;
	parms.strText = strText;
	parms.nStartPos = nStartPos;
	parms.nSize = nSize;
	this->ProcessEvent ( pOnIME_Notify, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIScrollBarBase::SetFriendlyLabel ( class UGUILabel* NewLabel )
{
	static UFunction* pSetFriendlyLabel = 0;
	UGUIScrollBarBase_execSetFriendlyLabel_Parms parms;

	if ( !pSetFriendlyLabel )
		pSetFriendlyLabel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.SetFriendlyLabel" );

	parms.NewLabel = NewLabel;
	this->ProcessEvent ( pSetFriendlyLabel, &parms, NULL );

}*/

/*bool UGUIScrollBarBase::GripPreDraw ( class UGUIComponent* Sender )
{
	static UFunction* pGripPreDraw = 0;
	UGUIScrollBarBase_execGripPreDraw_Parms parms;

	if ( !pGripPreDraw )
		pGripPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.GripPreDraw" );

	parms.Sender = Sender;
	this->ProcessEvent ( pGripPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIScrollBarBase::Refocus ( class UGUIComponent* Who )
{
	static UFunction* pRefocus = 0;
	UGUIScrollBarBase_execRefocus_Parms parms;

	if ( !pRefocus )
		pRefocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.Refocus" );

	parms.Who = Who;
	this->ProcessEvent ( pRefocus, &parms, NULL );

}*/

/*void UGUIScrollBarBase::AlignThumb (  )
{
	static UFunction* pAlignThumb = 0;
	UGUIScrollBarBase_execAlignThumb_Parms parms;

	if ( !pAlignThumb )
		pAlignThumb = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.AlignThumb" );

	this->ProcessEvent ( pAlignThumb, &parms, NULL );

}*/

/*void UGUIScrollBarBase::WheelDown (  )
{
	static UFunction* pWheelDown = 0;
	UGUIScrollBarBase_execWheelDown_Parms parms;

	if ( !pWheelDown )
		pWheelDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.WheelDown" );

	this->ProcessEvent ( pWheelDown, &parms, NULL );

}*/

/*void UGUIScrollBarBase::WheelUp (  )
{
	static UFunction* pWheelUp = 0;
	UGUIScrollBarBase_execWheelUp_Parms parms;

	if ( !pWheelUp )
		pWheelUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.WheelUp" );

	this->ProcessEvent ( pWheelUp, &parms, NULL );

}*/

/*bool UGUIScrollBarBase::IncreaseClick ( class UGUIComponent* Sender )
{
	static UFunction* pIncreaseClick = 0;
	UGUIScrollBarBase_execIncreaseClick_Parms parms;

	if ( !pIncreaseClick )
		pIncreaseClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.IncreaseClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pIncreaseClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIScrollBarBase::DecreaseClick ( class UGUIComponent* Sender )
{
	static UFunction* pDecreaseClick = 0;
	UGUIScrollBarBase_execDecreaseClick_Parms parms;

	if ( !pDecreaseClick )
		pDecreaseClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.DecreaseClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pDecreaseClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIScrollBarBase::MoveGripBy ( int items )
{
	static UFunction* pMoveGripBy = 0;
	UGUIScrollBarBase_execMoveGripBy_Parms parms;

	if ( !pMoveGripBy )
		pMoveGripBy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.MoveGripBy" );

	parms.items = items;
	this->ProcessEvent ( pMoveGripBy, &parms, NULL );

}*/

/*void UGUIScrollBarBase::UpdateGripPosition ( float NewPos )
{
	static UFunction* pUpdateGripPosition = 0;
	UGUIScrollBarBase_execUpdateGripPosition_Parms parms;

	if ( !pUpdateGripPosition )
		pUpdateGripPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.UpdateGripPosition" );

	parms.NewPos = NewPos;
	this->ProcessEvent ( pUpdateGripPosition, &parms, NULL );

}*/

/*void UGUIScrollBarBase::SetList ( class UGUIListBase* List )
{
	static UFunction* pSetList = 0;
	UGUIScrollBarBase_execSetList_Parms parms;

	if ( !pSetList )
		pSetList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.SetList" );

	parms.List = List;
	this->ProcessEvent ( pSetList, &parms, NULL );

}*/

/*void UGUIScrollBarBase::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIScrollBarBase_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIScrollBarBase::PositionChanged ( int NewPos )
{
	static UFunction* pPositionChanged = 0;
	UGUIScrollBarBase_execPositionChanged_Parms parms;

	if ( !pPositionChanged )
		pPositionChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollBarBase.PositionChanged" );

	parms.NewPos = NewPos;
	this->ProcessEvent ( pPositionChanged, &parms, NULL );

}*/

/*bool UGUIScrollZoneBase::InternalOnClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnClick = 0;
	UGUIScrollZoneBase_execInternalOnClick_Parms parms;

	if ( !pInternalOnClick )
		pInternalOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollZoneBase.InternalOnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIScrollZoneBase::OnScrollZoneClick ( float Delta )
{
	static UFunction* pOnScrollZoneClick = 0;
	UGUIScrollZoneBase_execOnScrollZoneClick_Parms parms;

	if ( !pOnScrollZoneClick )
		pOnScrollZoneClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIScrollZoneBase.OnScrollZoneClick" );

	parms.Delta = Delta;
	this->ProcessEvent ( pOnScrollZoneClick, &parms, NULL );

}*/

/*bool UGUIComboBox::FocusLast ( class UGUIComponent* Sender )
{
	static UFunction* pFocusLast = 0;
	UGUIComboBox_execFocusLast_Parms parms;

	if ( !pFocusLast )
		pFocusLast = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.FocusLast" );

	parms.Sender = Sender;
	this->ProcessEvent ( pFocusLast, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComboBox::FocusFirst ( class UGUIComponent* Sender )
{
	static UFunction* pFocusFirst = 0;
	UGUIComboBox_execFocusFirst_Parms parms;

	if ( !pFocusFirst )
		pFocusFirst = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.FocusFirst" );

	parms.Sender = Sender;
	this->ProcessEvent ( pFocusFirst, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComboBox::LoseFocus ( class UGUIComponent* Sender )
{
	static UFunction* pLoseFocus = 0;
	UGUIComboBox_execLoseFocus_Parms parms;

	if ( !pLoseFocus )
		pLoseFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.LoseFocus" );

	parms.Sender = Sender;
	this->ProcessEvent ( pLoseFocus, &parms, NULL );

}*/

/*void UGUIComboBox::SetFriendlyLabel ( class UGUILabel* NewLabel )
{
	static UFunction* pSetFriendlyLabel = 0;
	UGUIComboBox_execSetFriendlyLabel_Parms parms;

	if ( !pSetFriendlyLabel )
		pSetFriendlyLabel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.SetFriendlyLabel" );

	parms.NewLabel = NewLabel;
	this->ProcessEvent ( pSetFriendlyLabel, &parms, NULL );

}*/

/*void UGUIComboBox::CenterMouse (  )
{
	static UFunction* pCenterMouse = 0;
	UGUIComboBox_execCenterMouse_Parms parms;

	if ( !pCenterMouse )
		pCenterMouse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.CenterMouse" );

	this->ProcessEvent ( pCenterMouse, &parms, NULL );

}*/

/*void UGUIComboBox::Clear (  )
{
	static UFunction* pClear = 0;
	UGUIComboBox_execClear_Parms parms;

	if ( !pClear )
		pClear = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.Clear" );

	this->ProcessEvent ( pClear, &parms, NULL );

}*/

/*void UGUIComboBox::InternalOnMousePressed ( class UGUIComponent* Sender, bool bRepeat )
{
	static UFunction* pInternalOnMousePressed = 0;
	UGUIComboBox_execInternalOnMousePressed_Parms parms;

	if ( !pInternalOnMousePressed )
		pInternalOnMousePressed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.InternalOnMousePressed" );

	parms.Sender = Sender;
	parms.bRepeat = bRepeat;
	this->ProcessEvent ( pInternalOnMousePressed, &parms, NULL );

}*/

/*void UGUIComboBox::ReadOnly ( bool B )
{
	static UFunction* pReadOnly = 0;
	UGUIComboBox_execReadOnly_Parms parms;

	if ( !pReadOnly )
		pReadOnly = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.ReadOnly" );

	parms.B = B;
	this->ProcessEvent ( pReadOnly, &parms, NULL );

}*/

/*int UGUIComboBox::ItemCount (  )
{
	static UFunction* pItemCount = 0;
	UGUIComboBox_execItemCount_Parms parms;

	if ( !pItemCount )
		pItemCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.ItemCount" );

	this->ProcessEvent ( pItemCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIComboBox::FindIndex ( struct FString Test, bool bExact, bool bExtra, class UObject* obj )
{
	static UFunction* pFindIndex = 0;
	UGUIComboBox_execFindIndex_Parms parms;

	if ( !pFindIndex )
		pFindIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.FindIndex" );

	parms.Test = Test;
	parms.bExact = bExact;
	parms.bExtra = bExtra;
	parms.obj = obj;
	this->ProcessEvent ( pFindIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIComboBox::FindExtra ( struct FString Text, bool bExact )
{
	static UFunction* pFindExtra = 0;
	UGUIComboBox_execFindExtra_Parms parms;

	if ( !pFindExtra )
		pFindExtra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.FindExtra" );

	parms.Text = Text;
	parms.bExact = bExact;
	this->ProcessEvent ( pFindExtra, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIComboBox::Find ( struct FString Text, bool bExact, bool bExtra )
{
	static UFunction* pFind = 0;
	UGUIComboBox_execFind_Parms parms;

	if ( !pFind )
		pFind = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.Find" );

	parms.Text = Text;
	parms.bExact = bExact;
	parms.bExtra = bExtra;
	this->ProcessEvent ( pFind, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UObject* UGUIComboBox::GetItemObject ( int Index )
{
	static UFunction* pGetItemObject = 0;
	UGUIComboBox_execGetItemObject_Parms parms;

	if ( !pGetItemObject )
		pGetItemObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.GetItemObject" );

	parms.Index = Index;
	this->ProcessEvent ( pGetItemObject, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIComboBox::GetItem ( int Index )
{
	static UFunction* pGetItem = 0;
	UGUIComboBox_execGetItem_Parms parms;

	if ( !pGetItem )
		pGetItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.GetItem" );

	parms.Index = Index;
	this->ProcessEvent ( pGetItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComboBox::RemoveItem ( int Item, int Count )
{
	static UFunction* pRemoveItem = 0;
	UGUIComboBox_execRemoveItem_Parms parms;

	if ( !pRemoveItem )
		pRemoveItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.RemoveItem" );

	parms.Item = Item;
	parms.Count = Count;
	this->ProcessEvent ( pRemoveItem, &parms, NULL );

}*/

/*void UGUIComboBox::AddItem ( struct FString Item, class UObject* Extra, struct FString str )
{
	static UFunction* pAddItem = 0;
	UGUIComboBox_execAddItem_Parms parms;

	if ( !pAddItem )
		pAddItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.AddItem" );

	parms.Item = Item;
	parms.Extra = Extra;
	parms.str = str;
	this->ProcessEvent ( pAddItem, &parms, NULL );

}*/

/*int UGUIComboBox::GetIndex (  )
{
	static UFunction* pGetIndex = 0;
	UGUIComboBox_execGetIndex_Parms parms;

	if ( !pGetIndex )
		pGetIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.GetIndex" );

	this->ProcessEvent ( pGetIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComboBox::SetIndex ( int i )
{
	static UFunction* pSetIndex = 0;
	UGUIComboBox_execSetIndex_Parms parms;

	if ( !pSetIndex )
		pSetIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.SetIndex" );

	parms.i = i;
	this->ProcessEvent ( pSetIndex, &parms, NULL );

}*/

/*struct FString UGUIComboBox::GetExtra (  )
{
	static UFunction* pGetExtra = 0;
	UGUIComboBox_execGetExtra_Parms parms;

	if ( !pGetExtra )
		pGetExtra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.GetExtra" );

	this->ProcessEvent ( pGetExtra, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UObject* UGUIComboBox::GetObject (  )
{
	static UFunction* pGetObject = 0;
	UGUIComboBox_execGetObject_Parms parms;

	if ( !pGetObject )
		pGetObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.GetObject" );

	this->ProcessEvent ( pGetObject, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIComboBox::GetText (  )
{
	static UFunction* pGetText = 0;
	UGUIComboBox_execGetText_Parms parms;

	if ( !pGetText )
		pGetText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.GetText" );

	this->ProcessEvent ( pGetText, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIComboBox::Get (  )
{
	static UFunction* pGet = 0;
	UGUIComboBox_execGet_Parms parms;

	if ( !pGet )
		pGet = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.Get" );

	this->ProcessEvent ( pGet, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComboBox::SetExtra ( struct FString NewExtra, bool bListItemsOnly )
{
	static UFunction* pSetExtra = 0;
	UGUIComboBox_execSetExtra_Parms parms;

	if ( !pSetExtra )
		pSetExtra = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.SetExtra" );

	parms.NewExtra = NewExtra;
	parms.bListItemsOnly = bListItemsOnly;
	this->ProcessEvent ( pSetExtra, &parms, NULL );

}*/

/*void UGUIComboBox::SetText ( struct FString NewText, bool bListItemsOnly )
{
	static UFunction* pSetText = 0;
	UGUIComboBox_execSetText_Parms parms;

	if ( !pSetText )
		pSetText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.SetText" );

	parms.NewText = NewText;
	parms.bListItemsOnly = bListItemsOnly;
	this->ProcessEvent ( pSetText, &parms, NULL );

}*/

/*void UGUIComboBox::TextChanged ( class UGUIComponent* Sender )
{
	static UFunction* pTextChanged = 0;
	UGUIComboBox_execTextChanged_Parms parms;

	if ( !pTextChanged )
		pTextChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.TextChanged" );

	parms.Sender = Sender;
	this->ProcessEvent ( pTextChanged, &parms, NULL );

}*/

/*void UGUIComboBox::ItemChanged ( class UGUIComponent* Sender )
{
	static UFunction* pItemChanged = 0;
	UGUIComboBox_execItemChanged_Parms parms;

	if ( !pItemChanged )
		pItemChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.ItemChanged" );

	parms.Sender = Sender;
	this->ProcessEvent ( pItemChanged, &parms, NULL );

}*/

/*bool UGUIComboBox::ShowListBox ( class UGUIComponent* Sender )
{
	static UFunction* pShowListBox = 0;
	UGUIComboBox_execShowListBox_Parms parms;

	if ( !pShowListBox )
		pShowListBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.ShowListBox" );

	parms.Sender = Sender;
	this->ProcessEvent ( pShowListBox, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComboBox::eventSetVisibility ( bool bIsVisible )
{
	static UFunction* pSetVisibility = 0;
	UGUIComboBox_eventSetVisibility_Parms parms;

	if ( !pSetVisibility )
		pSetVisibility = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.SetVisibility" );

	parms.bIsVisible = bIsVisible;
	this->ProcessEvent ( pSetVisibility, &parms, NULL );

}*/

/*void UGUIComboBox::HideListBox (  )
{
	static UFunction* pHideListBox = 0;
	UGUIComboBox_execHideListBox_Parms parms;

	if ( !pHideListBox )
		pHideListBox = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.HideListBox" );

	this->ProcessEvent ( pHideListBox, &parms, NULL );

}*/

/*void UGUIComboBox::InternalOnLoadINI ( class UGUIComponent* Sender, struct FString S )
{
	static UFunction* pInternalOnLoadINI = 0;
	UGUIComboBox_execInternalOnLoadINI_Parms parms;

	if ( !pInternalOnLoadINI )
		pInternalOnLoadINI = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.InternalOnLoadINI" );

	parms.Sender = Sender;
	parms.S = S;
	this->ProcessEvent ( pInternalOnLoadINI, &parms, NULL );

}*/

/*struct FString UGUIComboBox::InternalOnSaveINI ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnSaveINI = 0;
	UGUIComboBox_execInternalOnSaveINI_Parms parms;

	if ( !pInternalOnSaveINI )
		pInternalOnSaveINI = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.InternalOnSaveINI" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnSaveINI, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIComboBox::InternalListClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalListClick = 0;
	UGUIComboBox_execInternalListClick_Parms parms;

	if ( !pInternalListClick )
		pInternalListClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.InternalListClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalListClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComboBox::InternalEditPressed ( class UGUIComponent* Sender, bool bRepeat )
{
	static UFunction* pInternalEditPressed = 0;
	UGUIComboBox_execInternalEditPressed_Parms parms;

	if ( !pInternalEditPressed )
		pInternalEditPressed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.InternalEditPressed" );

	parms.Sender = Sender;
	parms.bRepeat = bRepeat;
	this->ProcessEvent ( pInternalEditPressed, &parms, NULL );

}*/

/*void UGUIComboBox::InternalOnInvalidate ( class UGUIComponent* Who )
{
	static UFunction* pInternalOnInvalidate = 0;
	UGUIComboBox_execInternalOnInvalidate_Parms parms;

	if ( !pInternalOnInvalidate )
		pInternalOnInvalidate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.InternalOnInvalidate" );

	parms.Who = Who;
	this->ProcessEvent ( pInternalOnInvalidate, &parms, NULL );

}*/

/*void UGUIComboBox::InternalListDeActivate (  )
{
	static UFunction* pInternalListDeActivate = 0;
	UGUIComboBox_execInternalListDeActivate_Parms parms;

	if ( !pInternalListDeActivate )
		pInternalListDeActivate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.InternalListDeActivate" );

	this->ProcessEvent ( pInternalListDeActivate, &parms, NULL );

}*/

/*bool UGUIComboBox::InternalOnKeyEvent ( float Delta, unsigned char* key, unsigned char* State )
{
	static UFunction* pInternalOnKeyEvent = 0;
	UGUIComboBox_execInternalOnKeyEvent_Parms parms;

	if ( !pInternalOnKeyEvent )
		pInternalOnKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.InternalOnKeyEvent" );

	parms.Delta = Delta;
	this->ProcessEvent ( pInternalOnKeyEvent, &parms, NULL );

	*key = parms.key;
	*State = parms.State;
	return parms.ReturnValue;
}*/

/*void UGUIComboBox::SetHint ( struct FString NewHint )
{
	static UFunction* pSetHint = 0;
	UGUIComboBox_execSetHint_Parms parms;

	if ( !pSetHint )
		pSetHint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.SetHint" );

	parms.NewHint = NewHint;
	this->ProcessEvent ( pSetHint, &parms, NULL );

}*/

/*void UGUIComboBox::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIComboBox_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIComboBox::OnHideList (  )
{
	static UFunction* pOnHideList = 0;
	UGUIComboBox_execOnHideList_Parms parms;

	if ( !pOnHideList )
		pOnHideList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.OnHideList" );

	this->ProcessEvent ( pOnHideList, &parms, NULL );

}*/

/*void UGUIComboBox::OnShowList (  )
{
	static UFunction* pOnShowList = 0;
	UGUIComboBox_execOnShowList_Parms parms;

	if ( !pOnShowList )
		pOnShowList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboBox.OnShowList" );

	this->ProcessEvent ( pOnShowList, &parms, NULL );

}*/

/*void UGUIMenuOption::SetFriendlyLabel ( class UGUILabel* NewLabel )
{
	static UFunction* pSetFriendlyLabel = 0;
	UGUIMenuOption_execSetFriendlyLabel_Parms parms;

	if ( !pSetFriendlyLabel )
		pSetFriendlyLabel = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.SetFriendlyLabel" );

	parms.NewLabel = NewLabel;
	this->ProcessEvent ( pSetFriendlyLabel, &parms, NULL );

}*/

/*void UGUIMenuOption::CenterMouse (  )
{
	static UFunction* pCenterMouse = 0;
	UGUIMenuOption_execCenterMouse_Parms parms;

	if ( !pCenterMouse )
		pCenterMouse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.CenterMouse" );

	this->ProcessEvent ( pCenterMouse, &parms, NULL );

}*/

/*void UGUIMenuOption::InternalOnCreateComponent ( class UGUIComponent* NewComp, class UGUIComponent* Sender )
{
	static UFunction* pInternalOnCreateComponent = 0;
	UGUIMenuOption_execInternalOnCreateComponent_Parms parms;

	if ( !pInternalOnCreateComponent )
		pInternalOnCreateComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.InternalOnCreateComponent" );

	parms.NewComp = NewComp;
	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnCreateComponent, &parms, NULL );

}*/

/*void UGUIMenuOption::InternalOnChange ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnChange = 0;
	UGUIMenuOption_execInternalOnChange_Parms parms;

	if ( !pInternalOnChange )
		pInternalOnChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.InternalOnChange" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnChange, &parms, NULL );

}*/

/*bool UGUIMenuOption::MenuOptionClicked ( class UGUIComponent* Sender )
{
	static UFunction* pMenuOptionClicked = 0;
	UGUIMenuOption_execMenuOptionClicked_Parms parms;

	if ( !pMenuOptionClicked )
		pMenuOptionClicked = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.MenuOptionClicked" );

	parms.Sender = Sender;
	this->ProcessEvent ( pMenuOptionClicked, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMenuOption::SetCaption ( struct FString NewCaption )
{
	static UFunction* pSetCaption = 0;
	UGUIMenuOption_execSetCaption_Parms parms;

	if ( !pSetCaption )
		pSetCaption = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.SetCaption" );

	parms.NewCaption = NewCaption;
	this->ProcessEvent ( pSetCaption, &parms, NULL );

}*/

/*void UGUIMenuOption::SetHint ( struct FString NewHint )
{
	static UFunction* pSetHint = 0;
	UGUIMenuOption_execSetHint_Parms parms;

	if ( !pSetHint )
		pSetHint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.SetHint" );

	parms.NewHint = NewHint;
	this->ProcessEvent ( pSetHint, &parms, NULL );

}*/

/*void UGUIMenuOption::SetReadOnly ( bool bValue )
{
	static UFunction* pSetReadOnly = 0;
	UGUIMenuOption_execSetReadOnly_Parms parms;

	if ( !pSetReadOnly )
		pSetReadOnly = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.SetReadOnly" );

	parms.bValue = bValue;
	this->ProcessEvent ( pSetReadOnly, &parms, NULL );

}*/

/*void UGUIMenuOption::ResetComponent (  )
{
	static UFunction* pResetComponent = 0;
	UGUIMenuOption_execResetComponent_Parms parms;

	if ( !pResetComponent )
		pResetComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.ResetComponent" );

	this->ProcessEvent ( pResetComponent, &parms, NULL );

}*/

/*struct FString UGUIMenuOption::GetComponentValue (  )
{
	static UFunction* pGetComponentValue = 0;
	UGUIMenuOption_execGetComponentValue_Parms parms;

	if ( !pGetComponentValue )
		pGetComponentValue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.GetComponentValue" );

	this->ProcessEvent ( pGetComponentValue, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIMenuOption::SetComponentValue ( struct FString NewValue, bool bNoChange )
{
	static UFunction* pSetComponentValue = 0;
	UGUIMenuOption_execSetComponentValue_Parms parms;

	if ( !pSetComponentValue )
		pSetComponentValue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.SetComponentValue" );

	parms.NewValue = NewValue;
	parms.bNoChange = bNoChange;
	this->ProcessEvent ( pSetComponentValue, &parms, NULL );

}*/

/*void UGUIMenuOption::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIMenuOption_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIMenuOption.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*struct FString UGUIImage::eventAdditionalDebugString (  )
{
	static UFunction* pAdditionalDebugString = 0;
	UGUIImage_eventAdditionalDebugString_Parms parms;

	if ( !pAdditionalDebugString )
		pAdditionalDebugString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIImage.AdditionalDebugString" );

	this->ProcessEvent ( pAdditionalDebugString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUISectionBackground::SetPosition ( float NewLeft, float NewTop, float NewWidth, float NewHeight, bool bRelative )
{
	static UFunction* pSetPosition = 0;
	UGUISectionBackground_execSetPosition_Parms parms;

	if ( !pSetPosition )
		pSetPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUISectionBackground.SetPosition" );

	parms.NewLeft = NewLeft;
	parms.NewTop = NewTop;
	parms.NewWidth = NewWidth;
	parms.NewHeight = NewHeight;
	parms.bRelative = bRelative;
	this->ProcessEvent ( pSetPosition, &parms, NULL );

}*/

/*void UGUISectionBackground::eventResolutionChanged ( int ResX, int ResY )
{
	static UFunction* pResolutionChanged = 0;
	UGUISectionBackground_eventResolutionChanged_Parms parms;

	if ( !pResolutionChanged )
		pResolutionChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUISectionBackground.ResolutionChanged" );

	parms.ResX = ResX;
	parms.ResY = ResY;
	this->ProcessEvent ( pResolutionChanged, &parms, NULL );

}*/

/*bool UGUISectionBackground::InternalPreDraw ( class UCanvas* C )
{
	static UFunction* pInternalPreDraw = 0;
	UGUISectionBackground_execInternalPreDraw_Parms parms;

	if ( !pInternalPreDraw )
		pInternalPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUISectionBackground.InternalPreDraw" );

	parms.C = C;
	this->ProcessEvent ( pInternalPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUISectionBackground::Reset (  )
{
	static UFunction* pReset = 0;
	UGUISectionBackground_execReset_Parms parms;

	if ( !pReset )
		pReset = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUISectionBackground.Reset" );

	this->ProcessEvent ( pReset, &parms, NULL );

}*/

/*int UGUISectionBackground::FindComponentIndex ( class UGUIComponent* Comp )
{
	static UFunction* pFindComponentIndex = 0;
	UGUISectionBackground_execFindComponentIndex_Parms parms;

	if ( !pFindComponentIndex )
		pFindComponentIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUISectionBackground.FindComponentIndex" );

	parms.Comp = Comp;
	this->ProcessEvent ( pFindComponentIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUISectionBackground::UnmanageComponent ( class UGUIComponent* Comp )
{
	static UFunction* pUnmanageComponent = 0;
	UGUISectionBackground_execUnmanageComponent_Parms parms;

	if ( !pUnmanageComponent )
		pUnmanageComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUISectionBackground.UnmanageComponent" );

	parms.Comp = Comp;
	this->ProcessEvent ( pUnmanageComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUISectionBackground::ManageComponent ( class UGUIComponent* Component )
{
	static UFunction* pManageComponent = 0;
	UGUISectionBackground_execManageComponent_Parms parms;

	if ( !pManageComponent )
		pManageComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUISectionBackground.ManageComponent" );

	parms.Component = Component;
	this->ProcessEvent ( pManageComponent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUISectionBackground::eventSetVisibility ( bool bIsVisible )
{
	static UFunction* pSetVisibility = 0;
	UGUISectionBackground_eventSetVisibility_Parms parms;

	if ( !pSetVisibility )
		pSetVisibility = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUISectionBackground.SetVisibility" );

	parms.bIsVisible = bIsVisible;
	this->ProcessEvent ( pSetVisibility, &parms, NULL );

}*/

/*void UGUISectionBackground::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUISectionBackground_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUISectionBackground.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool UGUIContextMenu::ReplaceItem ( int Index, struct FString NewItem )
{
	static UFunction* pReplaceItem = 0;
	UGUIContextMenu_execReplaceItem_Parms parms;

	if ( !pReplaceItem )
		pReplaceItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIContextMenu.ReplaceItem" );

	parms.Index = Index;
	parms.NewItem = NewItem;
	this->ProcessEvent ( pReplaceItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIContextMenu::RemoveItemByIndex ( int Index )
{
	static UFunction* pRemoveItemByIndex = 0;
	UGUIContextMenu_execRemoveItemByIndex_Parms parms;

	if ( !pRemoveItemByIndex )
		pRemoveItemByIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIContextMenu.RemoveItemByIndex" );

	parms.Index = Index;
	this->ProcessEvent ( pRemoveItemByIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIContextMenu::RemoveItemByName ( struct FString ItemName )
{
	static UFunction* pRemoveItemByName = 0;
	UGUIContextMenu_execRemoveItemByName_Parms parms;

	if ( !pRemoveItemByName )
		pRemoveItemByName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIContextMenu.RemoveItemByName" );

	parms.ItemName = ItemName;
	this->ProcessEvent ( pRemoveItemByName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIContextMenu::InsertItem ( struct FString NewItem, int Index )
{
	static UFunction* pInsertItem = 0;
	UGUIContextMenu_execInsertItem_Parms parms;

	if ( !pInsertItem )
		pInsertItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIContextMenu.InsertItem" );

	parms.NewItem = NewItem;
	parms.Index = Index;
	this->ProcessEvent ( pInsertItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIContextMenu::AddItem ( struct FString NewItem )
{
	static UFunction* pAddItem = 0;
	UGUIContextMenu_execAddItem_Parms parms;

	if ( !pAddItem )
		pAddItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIContextMenu.AddItem" );

	parms.NewItem = NewItem;
	this->ProcessEvent ( pAddItem, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIContextMenu::OnContextHitTest ( float MouseX, float MouseY )
{
	static UFunction* pOnContextHitTest = 0;
	UGUIContextMenu_execOnContextHitTest_Parms parms;

	if ( !pOnContextHitTest )
		pOnContextHitTest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIContextMenu.OnContextHitTest" );

	parms.MouseX = MouseX;
	parms.MouseY = MouseY;
	this->ProcessEvent ( pOnContextHitTest, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIContextMenu::OnSelect ( class UGUIContextMenu* Sender, int ClickIndex )
{
	static UFunction* pOnSelect = 0;
	UGUIContextMenu_execOnSelect_Parms parms;

	if ( !pOnSelect )
		pOnSelect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIContextMenu.OnSelect" );

	parms.Sender = Sender;
	parms.ClickIndex = ClickIndex;
	this->ProcessEvent ( pOnSelect, &parms, NULL );

}*/

/*bool UGUIContextMenu::OnClose ( class UGUIContextMenu* Sender )
{
	static UFunction* pOnClose = 0;
	UGUIContextMenu_execOnClose_Parms parms;

	if ( !pOnClose )
		pOnClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIContextMenu.OnClose" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIContextMenu::OnOpen ( class UGUIContextMenu* Sender )
{
	static UFunction* pOnOpen = 0;
	UGUIContextMenu_execOnOpen_Parms parms;

	if ( !pOnOpen )
		pOnOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIContextMenu.OnOpen" );

	parms.Sender = Sender;
	this->ProcessEvent ( pOnOpen, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIToolTip::SetTip ( struct FString NewTip )
{
	static UFunction* pSetTip = 0;
	UGUIToolTip_execSetTip_Parms parms;

	if ( !pSetTip )
		pSetTip = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.SetTip" );

	parms.NewTip = NewTip;
	this->ProcessEvent ( pSetTip, &parms, NULL );

}*/

/*float UGUIToolTip::GetTopBelowCursor ( class UCanvas* C )
{
	static UFunction* pGetTopBelowCursor = 0;
	UGUIToolTip_execGetTopBelowCursor_Parms parms;

	if ( !pGetTopBelowCursor )
		pGetTopBelowCursor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.GetTopBelowCursor" );

	parms.C = C;
	this->ProcessEvent ( pGetTopBelowCursor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*float UGUIToolTip::GetTopAboveCursor ( class UCanvas* C )
{
	static UFunction* pGetTopAboveCursor = 0;
	UGUIToolTip_execGetTopAboveCursor_Parms parms;

	if ( !pGetTopAboveCursor )
		pGetTopAboveCursor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.GetTopAboveCursor" );

	parms.C = C;
	this->ProcessEvent ( pGetTopAboveCursor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*float UGUIToolTip::GetHeight ( class UCanvas* C )
{
	static UFunction* pGetHeight = 0;
	UGUIToolTip_execGetHeight_Parms parms;

	if ( !pGetHeight )
		pGetHeight = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.GetHeight" );

	parms.C = C;
	this->ProcessEvent ( pGetHeight, &parms, NULL );

	return parms.ReturnValue;
}*/

/*float UGUIToolTip::GetWidth ( class UCanvas* C )
{
	static UFunction* pGetWidth = 0;
	UGUIToolTip_execGetWidth_Parms parms;

	if ( !pGetWidth )
		pGetWidth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.GetWidth" );

	parms.C = C;
	this->ProcessEvent ( pGetWidth, &parms, NULL );

	return parms.ReturnValue;
}*/

/*float UGUIToolTip::GetTop ( class UCanvas* C )
{
	static UFunction* pGetTop = 0;
	UGUIToolTip_execGetTop_Parms parms;

	if ( !pGetTop )
		pGetTop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.GetTop" );

	parms.C = C;
	this->ProcessEvent ( pGetTop, &parms, NULL );

	return parms.ReturnValue;
}*/

/*float UGUIToolTip::GetLeft ( class UCanvas* C )
{
	static UFunction* pGetLeft = 0;
	UGUIToolTip_execGetLeft_Parms parms;

	if ( !pGetLeft )
		pGetLeft = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.GetLeft" );

	parms.C = C;
	this->ProcessEvent ( pGetLeft, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIToolTip::eventUpdatePosition ( class UCanvas* C )
{
	static UFunction* pUpdatePosition = 0;
	UGUIToolTip_eventUpdatePosition_Parms parms;

	if ( !pUpdatePosition )
		pUpdatePosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.UpdatePosition" );

	parms.C = C;
	this->ProcessEvent ( pUpdatePosition, &parms, NULL );

}*/

/*void UGUIToolTip::HideToolTip (  )
{
	static UFunction* pHideToolTip = 0;
	UGUIToolTip_execHideToolTip_Parms parms;

	if ( !pHideToolTip )
		pHideToolTip = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.HideToolTip" );

	this->ProcessEvent ( pHideToolTip, &parms, NULL );

}*/

/*void UGUIToolTip::ShowToolTip (  )
{
	static UFunction* pShowToolTip = 0;
	UGUIToolTip_execShowToolTip_Parms parms;

	if ( !pShowToolTip )
		pShowToolTip = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.ShowToolTip" );

	this->ProcessEvent ( pShowToolTip, &parms, NULL );

}*/

/*void UGUIToolTip::Tick ( float RealSeconds )
{
	static UFunction* pTick = 0;
	UGUIToolTip_execTick_Parms parms;

	if ( !pTick )
		pTick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.Tick" );

	parms.RealSeconds = RealSeconds;
	this->ProcessEvent ( pTick, &parms, NULL );

}*/

/*bool UGUIToolTip::InternalLeaveArea (  )
{
	static UFunction* pInternalLeaveArea = 0;
	UGUIToolTip_execInternalLeaveArea_Parms parms;

	if ( !pInternalLeaveArea )
		pInternalLeaveArea = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.InternalLeaveArea" );

	this->ProcessEvent ( pInternalLeaveArea, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIToolTip::LeaveArea (  )
{
	static UFunction* pLeaveArea = 0;
	UGUIToolTip_execLeaveArea_Parms parms;

	if ( !pLeaveArea )
		pLeaveArea = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.LeaveArea" );

	this->ProcessEvent ( pLeaveArea, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIToolTip* UGUIToolTip::InternalEnterArea (  )
{
	static UFunction* pInternalEnterArea = 0;
	UGUIToolTip_execInternalEnterArea_Parms parms;

	if ( !pInternalEnterArea )
		pInternalEnterArea = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.InternalEnterArea" );

	this->ProcessEvent ( pInternalEnterArea, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIToolTip* UGUIToolTip::EnterArea (  )
{
	static UFunction* pEnterArea = 0;
	UGUIToolTip_execEnterArea_Parms parms;

	if ( !pEnterArea )
		pEnterArea = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIToolTip.EnterArea" );

	this->ProcessEvent ( pEnterArea, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIQuestionPage* UGUIController::ShowQuestionDialog ( struct FString Question, unsigned char Buttons, unsigned char defButton )
{
	static UFunction* pShowQuestionDialog = 0;
	UGUIController_execShowQuestionDialog_Parms parms;

	if ( !pShowQuestionDialog )
		pShowQuestionDialog = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ShowQuestionDialog" );

	parms.Question = Question;
	parms.Buttons = Buttons;
	parms.defButton = defButton;
	this->ProcessEvent ( pShowQuestionDialog, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::KeyPressed ( unsigned char iKey )
{
	static UFunction* pKeyPressed = 0;
	UGUIController_execKeyPressed_Parms parms;

	if ( !pKeyPressed )
		pKeyPressed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.KeyPressed" );

	parms.iKey = iKey;
	this->ProcessEvent ( pKeyPressed, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::SearchBinds ( struct FString BindAliasMask, class TArray< struct FString >* BindAliases )
{
	static UFunction* pSearchBinds = 0;
	UGUIController_execSearchBinds_Parms parms;

	if ( !pSearchBinds )
		pSearchBinds = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.SearchBinds" );

	parms.BindAliasMask = BindAliasMask;
	this->ProcessEvent ( pSearchBinds, &parms, NULL );

	*BindAliases = parms.BindAliases;
	return parms.ReturnValue;
}*/

/*bool UGUIController::GetAssignedKeys ( struct FString BindAlias, class TArray< struct FString >* BindKeyNames, class TArray< struct FString >* LocalizedBindKeyNames )
{
	static UFunction* pGetAssignedKeys = 0;
	UGUIController_execGetAssignedKeys_Parms parms;

	if ( !pGetAssignedKeys )
		pGetAssignedKeys = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetAssignedKeys" );

	parms.BindAlias = BindAlias;
	this->ProcessEvent ( pGetAssignedKeys, &parms, NULL );

	*BindKeyNames = parms.BindKeyNames;
	*LocalizedBindKeyNames = parms.LocalizedBindKeyNames;
	return parms.ReturnValue;
}*/

/*bool UGUIController::GetCurrentBind ( struct FString BindKeyName, struct FString* BindKeyValue )
{
	static UFunction* pGetCurrentBind = 0;
	UGUIController_execGetCurrentBind_Parms parms;

	if ( !pGetCurrentBind )
		pGetCurrentBind = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetCurrentBind" );

	parms.BindKeyName = BindKeyName;
	this->ProcessEvent ( pGetCurrentBind, &parms, NULL );

	*BindKeyValue = parms.BindKeyValue;
	return parms.ReturnValue;
}*/

/*bool UGUIController::KeyNameFromIndex ( unsigned char iKey, struct FString* KeyName, struct FString* LocalizedKeyName )
{
	static UFunction* pKeyNameFromIndex = 0;
	UGUIController_execKeyNameFromIndex_Parms parms;

	if ( !pKeyNameFromIndex )
		pKeyNameFromIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.KeyNameFromIndex" );

	parms.iKey = iKey;
	this->ProcessEvent ( pKeyNameFromIndex, &parms, NULL );

	*KeyName = parms.KeyName;
	*LocalizedKeyName = parms.LocalizedKeyName;
	return parms.ReturnValue;
}*/

/*bool UGUIController::SetKeyBind ( struct FString BindKeyName, struct FString BindKeyValue )
{
	static UFunction* pSetKeyBind = 0;
	UGUIController_execSetKeyBind_Parms parms;

	if ( !pSetKeyBind )
		pSetKeyBind = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.SetKeyBind" );

	parms.BindKeyName = BindKeyName;
	parms.BindKeyValue = BindKeyValue;
	this->ProcessEvent ( pSetKeyBind, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIController::GetQuitPage (  )
{
	static UFunction* pGetQuitPage = 0;
	UGUIController_execGetQuitPage_Parms parms;

	if ( !pGetQuitPage )
		pGetQuitPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetQuitPage" );

	this->ProcessEvent ( pGetQuitPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIController::GetSettingsPage (  )
{
	static UFunction* pGetSettingsPage = 0;
	UGUIController_execGetSettingsPage_Parms parms;

	if ( !pGetSettingsPage )
		pGetSettingsPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetSettingsPage" );

	this->ProcessEvent ( pGetSettingsPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIController::GetModPage (  )
{
	static UFunction* pGetModPage = 0;
	UGUIController_execGetModPage_Parms parms;

	if ( !pGetModPage )
		pGetModPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetModPage" );

	this->ProcessEvent ( pGetModPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIController::GetInstantActionPage (  )
{
	static UFunction* pGetInstantActionPage = 0;
	UGUIController_execGetInstantActionPage_Parms parms;

	if ( !pGetInstantActionPage )
		pGetInstantActionPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetInstantActionPage" );

	this->ProcessEvent ( pGetInstantActionPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIController::GetMultiplayerPage (  )
{
	static UFunction* pGetMultiplayerPage = 0;
	UGUIController_execGetMultiplayerPage_Parms parms;

	if ( !pGetMultiplayerPage )
		pGetMultiplayerPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetMultiplayerPage" );

	this->ProcessEvent ( pGetMultiplayerPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIController::GetServerBrowserPage (  )
{
	static UFunction* pGetServerBrowserPage = 0;
	UGUIController_execGetServerBrowserPage_Parms parms;

	if ( !pGetServerBrowserPage )
		pGetServerBrowserPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetServerBrowserPage" );

	this->ProcessEvent ( pGetServerBrowserPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIController::GetSinglePlayerPage (  )
{
	static UFunction* pGetSinglePlayerPage = 0;
	UGUIController_execGetSinglePlayerPage_Parms parms;

	if ( !pGetSinglePlayerPage )
		pGetSinglePlayerPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetSinglePlayerPage" );

	this->ProcessEvent ( pGetSinglePlayerPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIController::GetMainMenuClass (  )
{
	static UFunction* pGetMainMenuClass = 0;
	UGUIController_execGetMainMenuClass_Parms parms;

	if ( !pGetMainMenuClass )
		pGetMainMenuClass = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetMainMenuClass" );

	this->ProcessEvent ( pGetMainMenuClass, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::eventValidate (  )
{
	static UFunction* pValidate = 0;
	UGUIController_eventValidate_Parms parms;

	if ( !pValidate )
		pValidate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.Validate" );

	this->ProcessEvent ( pValidate, &parms, NULL );

}*/

/*void UGUIController::ConsolidateMenus (  )
{
	static UFunction* pConsolidateMenus = 0;
	UGUIController_execConsolidateMenus_Parms parms;

	if ( !pConsolidateMenus )
		pConsolidateMenus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ConsolidateMenus" );

	this->ProcessEvent ( pConsolidateMenus, &parms, NULL );

}*/

/*void UGUIController::PurgeComponentClasses (  )
{
	static UFunction* pPurgeComponentClasses = 0;
	UGUIController_execPurgeComponentClasses_Parms parms;

	if ( !pPurgeComponentClasses )
		pPurgeComponentClasses = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PurgeComponentClasses" );

	this->ProcessEvent ( pPurgeComponentClasses, &parms, NULL );

}*/

/*void UGUIController::PurgeObjectReferences (  )
{
	static UFunction* pPurgeObjectReferences = 0;
	UGUIController_execPurgeObjectReferences_Parms parms;

	if ( !pPurgeObjectReferences )
		pPurgeObjectReferences = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PurgeObjectReferences" );

	this->ProcessEvent ( pPurgeObjectReferences, &parms, NULL );

}*/

/*void UGUIController::VerifyStack (  )
{
	static UFunction* pVerifyStack = 0;
	UGUIController_execVerifyStack_Parms parms;

	if ( !pVerifyStack )
		pVerifyStack = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.VerifyStack" );

	this->ProcessEvent ( pVerifyStack, &parms, NULL );

}*/

/*void UGUIController::CloseOverlays (  )
{
	static UFunction* pCloseOverlays = 0;
	UGUIController_execCloseOverlays_Parms parms;

	if ( !pCloseOverlays )
		pCloseOverlays = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.CloseOverlays" );

	this->ProcessEvent ( pCloseOverlays, &parms, NULL );

}*/

/*void UGUIController::eventNotifyLevelChange (  )
{
	static UFunction* pNotifyLevelChange = 0;
	UGUIController_eventNotifyLevelChange_Parms parms;

	if ( !pNotifyLevelChange )
		pNotifyLevelChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.NotifyLevelChange" );

	this->ProcessEvent ( pNotifyLevelChange, &parms, NULL );

}*/

/*void UGUIController::eventSetRequiredGameResolution ( struct FString GameRes )
{
	static UFunction* pSetRequiredGameResolution = 0;
	UGUIController_eventSetRequiredGameResolution_Parms parms;

	if ( !pSetRequiredGameResolution )
		pSetRequiredGameResolution = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.SetRequiredGameResolution" );

	parms.GameRes = GameRes;
	this->ProcessEvent ( pSetRequiredGameResolution, &parms, NULL );

}*/

/*bool UGUIController::eventNeedsMenuResolution (  )
{
	static UFunction* pNeedsMenuResolution = 0;
	UGUIController_eventNeedsMenuResolution_Parms parms;

	if ( !pNeedsMenuResolution )
		pNeedsMenuResolution = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.NeedsMenuResolution" );

	this->ProcessEvent ( pNeedsMenuResolution, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::eventCanShowHints (  )
{
	static UFunction* pCanShowHints = 0;
	UGUIController_eventCanShowHints_Parms parms;

	if ( !pCanShowHints )
		pCanShowHints = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.CanShowHints" );

	this->ProcessEvent ( pCanShowHints, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::HasMouseMoved ( float ErrorMargin )
{
	static UFunction* pHasMouseMoved = 0;
	UGUIController_execHasMouseMoved_Parms parms;

	if ( !pHasMouseMoved )
		pHasMouseMoved = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.HasMouseMoved" );

	parms.ErrorMargin = ErrorMargin;
	this->ProcessEvent ( pHasMouseMoved, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::eventMoveFocused ( class UGUIComponent* C, int bmLeft, int bmTop, int bmWidth, int bmHeight, float ClipX, float ClipY, float val )
{
	static UFunction* pMoveFocused = 0;
	UGUIController_eventMoveFocused_Parms parms;

	if ( !pMoveFocused )
		pMoveFocused = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.MoveFocused" );

	parms.C = C;
	parms.bmLeft = bmLeft;
	parms.bmTop = bmTop;
	parms.bmWidth = bmWidth;
	parms.bmHeight = bmHeight;
	parms.ClipX = ClipX;
	parms.ClipY = ClipY;
	parms.val = val;
	this->ProcessEvent ( pMoveFocused, &parms, NULL );

}*/

/*void UGUIController::ResetFocus (  )
{
	static UFunction* pResetFocus = 0;
	UGUIController_execResetFocus_Parms parms;

	if ( !pResetFocus )
		pResetFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ResetFocus" );

	this->ProcessEvent ( pResetFocus, &parms, NULL );

}*/

/*void UGUIController::eventChangeFocus ( class UGUIComponent* Who )
{
	static UFunction* pChangeFocus = 0;
	UGUIController_eventChangeFocus_Parms parms;

	if ( !pChangeFocus )
		pChangeFocus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ChangeFocus" );

	parms.Who = Who;
	this->ProcessEvent ( pChangeFocus, &parms, NULL );

}*/

/*void UGUIController::SetControllerStatus ( bool On )
{
	static UFunction* pSetControllerStatus = 0;
	UGUIController_execSetControllerStatus_Parms parms;

	if ( !pSetControllerStatus )
		pSetControllerStatus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.SetControllerStatus" );

	parms.On = On;
	this->ProcessEvent ( pSetControllerStatus, &parms, NULL );

}*/

/*void UGUIController::PerformRestore (  )
{
	static UFunction* pPerformRestore = 0;
	UGUIController_execPerformRestore_Parms parms;

	if ( !pPerformRestore )
		pPerformRestore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PerformRestore" );

	this->ProcessEvent ( pPerformRestore, &parms, NULL );

}*/

/*void UGUIController::SaveRestorePages (  )
{
	static UFunction* pSaveRestorePages = 0;
	UGUIController_execSaveRestorePages_Parms parms;

	if ( !pSaveRestorePages )
		pSaveRestorePages = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.SaveRestorePages" );

	this->ProcessEvent ( pSaveRestorePages, &parms, NULL );

}*/

/*int UGUIController::Count (  )
{
	static UFunction* pCount = 0;
	UGUIController_execCount_Parms parms;

	if ( !pCount )
		pCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.Count" );

	this->ProcessEvent ( pCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::eventCloseAll ( bool bCancel, bool bForced )
{
	static UFunction* pCloseAll = 0;
	UGUIController_eventCloseAll_Parms parms;

	if ( !pCloseAll )
		pCloseAll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.CloseAll" );

	parms.bCancel = bCancel;
	parms.bForced = bForced;
	this->ProcessEvent ( pCloseAll, &parms, NULL );

}*/

/*bool UGUIController::ClickCloseWndBtn (  )
{
	static UFunction* pClickCloseWndBtn = 0;
	UGUIController_execClickCloseWndBtn_Parms parms;

	if ( !pClickCloseWndBtn )
		pClickCloseWndBtn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ClickCloseWndBtn" );

	this->ProcessEvent ( pClickCloseWndBtn, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::PressedCloseWndBtn (  )
{
	static UFunction* pPressedCloseWndBtn = 0;
	UGUIController_execPressedCloseWndBtn_Parms parms;

	if ( !pPressedCloseWndBtn )
		pPressedCloseWndBtn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PressedCloseWndBtn" );

	this->ProcessEvent ( pPressedCloseWndBtn, &parms, NULL );

}*/

/*bool UGUIController::eventCloseMenu ( bool bCancelled )
{
	static UFunction* pCloseMenu = 0;
	UGUIController_eventCloseMenu_Parms parms;

	if ( !pCloseMenu )
		pCloseMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.CloseMenu" );

	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pCloseMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::eventRemoveMenu ( class UGUIPage* Menu, bool bCancelled )
{
	static UFunction* pRemoveMenu = 0;
	UGUIController_eventRemoveMenu_Parms parms;

	if ( !pRemoveMenu )
		pRemoveMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.RemoveMenu" );

	parms.Menu = Menu;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pRemoveMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::RemoveMenuAt ( int Index, bool bCancelled )
{
	static UFunction* pRemoveMenuAt = 0;
	UGUIController_execRemoveMenuAt_Parms parms;

	if ( !pRemoveMenuAt )
		pRemoveMenuAt = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.RemoveMenuAt" );

	parms.Index = Index;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pRemoveMenuAt, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::eventPopMenu ( int Index, class UGUIPage* CurMenu, bool bCancelled )
{
	static UFunction* pPopMenu = 0;
	UGUIController_eventPopMenu_Parms parms;

	if ( !pPopMenu )
		pPopMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PopMenu" );

	parms.Index = Index;
	parms.CurMenu = CurMenu;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pPopMenu, &parms, NULL );

}*/

/*void UGUIController::eventPushMenu ( int Index, class UGUIPage* NewMenu, struct FString Param1, struct FString Param2 )
{
	static UFunction* pPushMenu = 0;
	UGUIController_eventPushMenu_Parms parms;

	if ( !pPushMenu )
		pPushMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PushMenu" );

	parms.Index = Index;
	parms.NewMenu = NewMenu;
	parms.Param1 = Param1;
	parms.Param2 = Param2;
	this->ProcessEvent ( pPushMenu, &parms, NULL );

}*/

/*void UGUIController::ReplaceMenu2 ( struct FString NewMenuName, bool bCancelled )
{
	static UFunction* pReplaceMenu2 = 0;
	UGUIController_execReplaceMenu2_Parms parms;

	if ( !pReplaceMenu2 )
		pReplaceMenu2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ReplaceMenu2" );

	parms.NewMenuName = NewMenuName;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pReplaceMenu2, &parms, NULL );

}*/

/*void UGUIController::ReplaceMenu2_FadedOut (  )
{
	static UFunction* pReplaceMenu2_FadedOut = 0;
	UGUIController_execReplaceMenu2_FadedOut_Parms parms;

	if ( !pReplaceMenu2_FadedOut )
		pReplaceMenu2_FadedOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ReplaceMenu2_FadedOut" );

	this->ProcessEvent ( pReplaceMenu2_FadedOut, &parms, NULL );

}*/

/*void UGUIController::CloseMenuPage ( class UGUIPage* SelectPage, bool bCancelled )
{
	static UFunction* pCloseMenuPage = 0;
	UGUIController_execCloseMenuPage_Parms parms;

	if ( !pCloseMenuPage )
		pCloseMenuPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.CloseMenuPage" );

	parms.SelectPage = SelectPage;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pCloseMenuPage, &parms, NULL );

}*/

/*bool UGUIController::eventReplaceMenu ( struct FString NewMenuName, struct FString Param1, struct FString Param2, bool bCancelled )
{
	static UFunction* pReplaceMenu = 0;
	UGUIController_eventReplaceMenu_Parms parms;

	if ( !pReplaceMenu )
		pReplaceMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ReplaceMenu" );

	parms.NewMenuName = NewMenuName;
	parms.Param1 = Param1;
	parms.Param2 = Param2;
	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pReplaceMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::eventAutoLoadMenus (  )
{
	static UFunction* pAutoLoadMenus = 0;
	UGUIController_eventAutoLoadMenus_Parms parms;

	if ( !pAutoLoadMenus )
		pAutoLoadMenus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.AutoLoadMenus" );

	this->ProcessEvent ( pAutoLoadMenus, &parms, NULL );

}*/

/*bool UGUIController::OpenMenuByObject ( class UGUIPage* NewMenu, struct FString Param1, struct FString Param2 )
{
	static UFunction* pOpenMenuByObject = 0;
	UGUIController_execOpenMenuByObject_Parms parms;

	if ( !pOpenMenuByObject )
		pOpenMenuByObject = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.OpenMenuByObject" );

	parms.NewMenu = NewMenu;
	parms.Param1 = Param1;
	parms.Param2 = Param2;
	this->ProcessEvent ( pOpenMenuByObject, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::eventOpenMenu ( struct FString NewMenuName, struct FString Param1, struct FString Param2 )
{
	static UFunction* pOpenMenu = 0;
	UGUIController_eventOpenMenu_Parms parms;

	if ( !pOpenMenu )
		pOpenMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.OpenMenu" );

	parms.NewMenuName = NewMenuName;
	parms.Param1 = Param1;
	parms.Param2 = Param2;
	this->ProcessEvent ( pOpenMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIPage* UGUIController::eventCreateMenu ( struct FString NewMenuName )
{
	static UFunction* pCreateMenu = 0;
	UGUIController_eventCreateMenu_Parms parms;

	if ( !pCreateMenu )
		pCreateMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.CreateMenu" );

	parms.NewMenuName = NewMenuName;
	this->ProcessEvent ( pCreateMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIPage* UGUIController::GetLastMenu (  )
{
	static UFunction* pGetLastMenu = 0;
	UGUIController_execGetLastMenu_Parms parms;

	if ( !pGetLastMenu )
		pGetLastMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetLastMenu" );

	this->ProcessEvent ( pGetLastMenu, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::LogControlInfo ( class UGUIComponent* Sender )
{
	static UFunction* pLogControlInfo = 0;
	UGUIController_execLogControlInfo_Parms parms;

	if ( !pLogControlInfo )
		pLogControlInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.LogControlInfo" );

	parms.Sender = Sender;
	this->ProcessEvent ( pLogControlInfo, &parms, NULL );

}*/

/*void UGUIController::LogControllerInfo (  )
{
	static UFunction* pLogControllerInfo = 0;
	UGUIController_execLogControllerInfo_Parms parms;

	if ( !pLogControllerInfo )
		pLogControllerInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.LogControllerInfo" );

	this->ProcessEvent ( pLogControllerInfo, &parms, NULL );

}*/

/*void UGUIController::LogMenuStack (  )
{
	static UFunction* pLogMenuStack = 0;
	UGUIController_execLogMenuStack_Parms parms;

	if ( !pLogMenuStack )
		pLogMenuStack = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.LogMenuStack" );

	this->ProcessEvent ( pLogMenuStack, &parms, NULL );

}*/

/*class UGUIPage* UGUIController::GetMenuByIndex ( int Index )
{
	static UFunction* pGetMenuByIndex = 0;
	UGUIController_execGetMenuByIndex_Parms parms;

	if ( !pGetMenuByIndex )
		pGetMenuByIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetMenuByIndex" );

	parms.Index = Index;
	this->ProcessEvent ( pGetMenuByIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIPage* UGUIController::FindMenuByClass ( class UClass* PageClass )
{
	static UFunction* pFindMenuByClass = 0;
	UGUIController_execFindMenuByClass_Parms parms;

	if ( !pFindMenuByClass )
		pFindMenuByClass = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.FindMenuByClass" );

	parms.PageClass = PageClass;
	this->ProcessEvent ( pFindMenuByClass, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIPage* UGUIController::FindPersistentMenuByClass ( class UClass* PageClass )
{
	static UFunction* pFindPersistentMenuByClass = 0;
	UGUIController_execFindPersistentMenuByClass_Parms parms;

	if ( !pFindPersistentMenuByClass )
		pFindPersistentMenuByClass = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.FindPersistentMenuByClass" );

	parms.PageClass = PageClass;
	this->ProcessEvent ( pFindPersistentMenuByClass, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIController::eventFindPersistentMenuIndex ( class UGUIPage* Menu )
{
	static UFunction* pFindPersistentMenuIndex = 0;
	UGUIController_eventFindPersistentMenuIndex_Parms parms;

	if ( !pFindPersistentMenuIndex )
		pFindPersistentMenuIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.FindPersistentMenuIndex" );

	parms.Menu = Menu;
	this->ProcessEvent ( pFindPersistentMenuIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIController::eventFindMenuIndex ( class UGUIPage* Menu )
{
	static UFunction* pFindMenuIndex = 0;
	UGUIController_eventFindMenuIndex_Parms parms;

	if ( !pFindMenuIndex )
		pFindMenuIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.FindMenuIndex" );

	parms.Menu = Menu;
	this->ProcessEvent ( pFindMenuIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*int UGUIController::eventFindMenuIndexByName ( struct FString MenuClass )
{
	static UFunction* pFindMenuIndexByName = 0;
	UGUIController_eventFindMenuIndexByName_Parms parms;

	if ( !pFindMenuIndexByName )
		pFindMenuIndexByName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.FindMenuIndexByName" );

	parms.MenuClass = MenuClass;
	this->ProcessEvent ( pFindMenuIndexByName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIPage* UGUIController::eventFindPersistentMenuByName ( struct FString MenuClass )
{
	static UFunction* pFindPersistentMenuByName = 0;
	UGUIController_eventFindPersistentMenuByName_Parms parms;

	if ( !pFindPersistentMenuByName )
		pFindPersistentMenuByName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.FindPersistentMenuByName" );

	parms.MenuClass = MenuClass;
	this->ProcessEvent ( pFindPersistentMenuByName, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UClass* UGUIController::eventAddComponentClass ( struct FString ClassName )
{
	static UFunction* pAddComponentClass = 0;
	UGUIController_eventAddComponentClass_Parms parms;

	if ( !pAddComponentClass )
		pAddComponentClass = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.AddComponentClass" );

	parms.ClassName = ClassName;
	this->ProcessEvent ( pAddComponentClass, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::RegisterStyle ( class UClass* StyleClass, bool bTemporary )
{
	static UFunction* pRegisterStyle = 0;
	UGUIController_execRegisterStyle_Parms parms;

	if ( !pRegisterStyle )
		pRegisterStyle = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.RegisterStyle" );

	parms.StyleClass = StyleClass;
	parms.bTemporary = bTemporary;
	this->ProcessEvent ( pRegisterStyle, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::PrecachePlayerRecords (  )
{
	static UFunction* pPrecachePlayerRecords = 0;
	UGUIController_execPrecachePlayerRecords_Parms parms;

	if ( !pPrecachePlayerRecords )
		pPrecachePlayerRecords = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PrecachePlayerRecords" );

	this->ProcessEvent ( pPrecachePlayerRecords, &parms, NULL );

}*/

/*void UGUIController::eventInitializeController (  )
{
	static UFunction* pInitializeController = 0;
	UGUIController_eventInitializeController_Parms parms;

	if ( !pInitializeController )
		pInitializeController = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.InitializeController" );

	this->ProcessEvent ( pInitializeController, &parms, NULL );

}*/

/*class UGUIPage* UGUIController::TopPage (  )
{
	static UFunction* pTopPage = 0;
	UGUIController_execTopPage_Parms parms;

	if ( !pTopPage )
		pTopPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.TopPage" );

	this->ProcessEvent ( pTopPage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::GetTeamSymbolList ( bool bNoSinglePlayer, class TArray< struct FString >* SymbolNames )
{
	static UFunction* pGetTeamSymbolList = 0;
	UGUIController_execGetTeamSymbolList_Parms parms;

	if ( !pGetTeamSymbolList )
		pGetTeamSymbolList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetTeamSymbolList" );

	parms.bNoSinglePlayer = bNoSinglePlayer;
	this->ProcessEvent ( pGetTeamSymbolList, &parms, NULL );

	*SymbolNames = parms.SymbolNames;
}*/

/*struct FString UGUIController::LoadDecoText ( struct FString PackageName, struct FString DecoTextName )
{
	static UFunction* pLoadDecoText = 0;
	UGUIController_execLoadDecoText_Parms parms;

	if ( !pLoadDecoText )
		pLoadDecoText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.LoadDecoText" );

	parms.PackageName = PackageName;
	parms.DecoTextName = DecoTextName;
	this->ProcessEvent ( pLoadDecoText, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::CheckForECE (  )
{
	static UFunction* pCheckForECE = 0;
	UGUIController_execCheckForECE_Parms parms;

	if ( !pCheckForECE )
		pCheckForECE = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.CheckForECE" );

	this->ProcessEvent ( pCheckForECE, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::AuthroizeFirewall (  )
{
	static UFunction* pAuthroizeFirewall = 0;
	UGUIController_execAuthroizeFirewall_Parms parms;

	if ( !pAuthroizeFirewall )
		pAuthroizeFirewall = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.AuthroizeFirewall" );

	this->ProcessEvent ( pAuthroizeFirewall, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIController::CheckFirewall (  )
{
	static UFunction* pCheckFirewall = 0;
	UGUIController_execCheckFirewall_Parms parms;

	if ( !pCheckFirewall )
		pCheckFirewall = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.CheckFirewall" );

	this->ProcessEvent ( pCheckFirewall, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::LaunchURL ( struct FString URL )
{
	static UFunction* pLaunchURL = 0;
	UGUIController_execLaunchURL_Parms parms;

	if ( !pLaunchURL )
		pLaunchURL = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.LaunchURL" );

	parms.URL = URL;
	this->ProcessEvent ( pLaunchURL, &parms, NULL );

}*/

/*void UGUIController::GetMapList ( struct FString Prefix, class UGUIList* List, bool bDecoText )
{
	static UFunction* pGetMapList = 0;
	UGUIController_execGetMapList_Parms parms;

	if ( !pGetMapList )
		pGetMapList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetMapList" );

	parms.Prefix = Prefix;
	parms.List = List;
	parms.bDecoText = bDecoText;
	this->ProcessEvent ( pGetMapList, &parms, NULL );

}*/

/*void UGUIController::GetWeaponList ( class TArray< class UClass* >* WeaponClass, class TArray< struct FString >* WeaponDesc )
{
	static UFunction* pGetWeaponList = 0;
	UGUIController_execGetWeaponList_Parms parms;

	if ( !pGetWeaponList )
		pGetWeaponList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetWeaponList" );

	parms.WeaponClass = *WeaponClass;
	parms.WeaponDesc = *WeaponDesc;
	this->ProcessEvent ( pGetWeaponList, &parms, NULL );

	*WeaponClass = parms.WeaponClass;
	*WeaponDesc = parms.WeaponDesc;
}*/

/*void UGUIController::SaveOwnageList ( class TArray< struct FeOwnageMap > Maps )
{
	static UFunction* pSaveOwnageList = 0;
	UGUIController_execSaveOwnageList_Parms parms;

	if ( !pSaveOwnageList )
		pSaveOwnageList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.SaveOwnageList" );

	parms.Maps = Maps;
	this->ProcessEvent ( pSaveOwnageList, &parms, NULL );

}*/

/*void UGUIController::GetOwnageList ( class TArray< int >* RLevel, class TArray< struct FString >* MNames, class TArray< struct FString >* MDesc, class TArray< struct FString >* mURL )
{
	static UFunction* pGetOwnageList = 0;
	UGUIController_execGetOwnageList_Parms parms;

	if ( !pGetOwnageList )
		pGetOwnageList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetOwnageList" );

	parms.RLevel = *RLevel;
	parms.MNames = *MNames;
	parms.MDesc = *MDesc;
	parms.mURL = *mURL;
	this->ProcessEvent ( pGetOwnageList, &parms, NULL );

	*RLevel = parms.RLevel;
	*MNames = parms.MNames;
	*MDesc = parms.MDesc;
	*mURL = parms.mURL;
}*/

/*bool UGUIController::GetDEMHeader ( struct FString DemoName, struct FString* MapName, struct FString* GameType, int* ScoreLimit, int* TimeLimit, int* ClientSide, struct FString* RecordedBy, struct FString* TimeStamp, struct FString* ReqPackages )
{
	static UFunction* pGetDEMHeader = 0;
	UGUIController_execGetDEMHeader_Parms parms;

	if ( !pGetDEMHeader )
		pGetDEMHeader = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetDEMHeader" );

	parms.DemoName = DemoName;
	this->ProcessEvent ( pGetDEMHeader, &parms, NULL );

	*MapName = parms.MapName;
	*GameType = parms.GameType;
	*ScoreLimit = parms.ScoreLimit;
	*TimeLimit = parms.TimeLimit;
	*ClientSide = parms.ClientSide;
	*RecordedBy = parms.RecordedBy;
	*TimeStamp = parms.TimeStamp;
	*ReqPackages = parms.ReqPackages;
	return parms.ReturnValue;
}*/

/*void UGUIController::GetDEMList ( class TArray< struct FString >* DEMFiles )
{
	static UFunction* pGetDEMList = 0;
	UGUIController_execGetDEMList_Parms parms;

	if ( !pGetDEMList )
		pGetDEMList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetDEMList" );

	parms.DEMFiles = *DEMFiles;
	this->ProcessEvent ( pGetDEMList, &parms, NULL );

	*DEMFiles = parms.DEMFiles;
}*/

/*void UGUIController::Profile ( struct FString ProfileName )
{
	static UFunction* pProfile = 0;
	UGUIController_execProfile_Parms parms;

	if ( !pProfile )
		pProfile = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.Profile" );

	parms.ProfileName = ProfileName;
	this->ProcessEvent ( pProfile, &parms, NULL );

}*/

/*void UGUIController::SetMoveControl ( class UGUIComponent* C )
{
	static UFunction* pSetMoveControl = 0;
	UGUIController_execSetMoveControl_Parms parms;

	if ( !pSetMoveControl )
		pSetMoveControl = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.SetMoveControl" );

	parms.C = C;
	this->ProcessEvent ( pSetMoveControl, &parms, NULL );

}*/

/*void UGUIController::PlayInterfaceSound ( unsigned char soundType )
{
	static UFunction* pPlayInterfaceSound = 0;
	UGUIController_execPlayInterfaceSound_Parms parms;

	if ( !pPlayInterfaceSound )
		pPlayInterfaceSound = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PlayInterfaceSound" );

	parms.soundType = soundType;
	this->ProcessEvent ( pPlayInterfaceSound, &parms, NULL );

}*/

/*void UGUIController::GetOGGList ( class TArray< struct FString >* OGGFiles )
{
	static UFunction* pGetOGGList = 0;
	UGUIController_execGetOGGList_Parms parms;

	if ( !pGetOGGList )
		pGetOGGList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetOGGList" );

	parms.OGGFiles = *OGGFiles;
	this->ProcessEvent ( pGetOGGList, &parms, NULL );

	*OGGFiles = parms.OGGFiles;
}*/

/*void UGUIController::ResetKeyboard (  )
{
	static UFunction* pResetKeyboard = 0;
	UGUIController_execResetKeyboard_Parms parms;

	if ( !pResetKeyboard )
		pResetKeyboard = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ResetKeyboard" );

	this->ProcessEvent ( pResetKeyboard, &parms, NULL );

}*/

/*void UGUIController::GetProfileList ( struct FString Prefix, class TArray< struct FString >* ProfileList )
{
	static UFunction* pGetProfileList = 0;
	UGUIController_execGetProfileList_Parms parms;

	if ( !pGetProfileList )
		pGetProfileList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetProfileList" );

	parms.Prefix = Prefix;
	this->ProcessEvent ( pGetProfileList, &parms, NULL );

	*ProfileList = parms.ProfileList;
}*/

/*void UGUIController::ResetInput (  )
{
	static UFunction* pResetInput = 0;
	UGUIController_execResetInput_Parms parms;

	if ( !pResetInput )
		pResetInput = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ResetInput" );

	this->ProcessEvent ( pResetInput, &parms, NULL );

}*/

/*void UGUIController::ResetDesigner (  )
{
	static UFunction* pResetDesigner = 0;
	UGUIController_execResetDesigner_Parms parms;

	if ( !pResetDesigner )
		pResetDesigner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.ResetDesigner" );

	this->ProcessEvent ( pResetDesigner, &parms, NULL );

}*/

/*bool UGUIController::SetRenderDevice ( struct FString NewRenderDevice )
{
	static UFunction* pSetRenderDevice = 0;
	UGUIController_execSetRenderDevice_Parms parms;

	if ( !pSetRenderDevice )
		pSetRenderDevice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.SetRenderDevice" );

	parms.NewRenderDevice = NewRenderDevice;
	this->ProcessEvent ( pSetRenderDevice, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UGUIController::GetCurrentRes (  )
{
	static UFunction* pGetCurrentRes = 0;
	UGUIController_execGetCurrentRes_Parms parms;

	if ( !pGetCurrentRes )
		pGetCurrentRes = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetCurrentRes" );

	this->ProcessEvent ( pGetCurrentRes, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UGUIStyles* UGUIController::eventGetStyle ( struct FString StyleName, unsigned char* FontScale )
{
	static UFunction* pGetStyle = 0;
	UGUIController_eventGetStyle_Parms parms;

	if ( !pGetStyle )
		pGetStyle = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetStyle" );

	parms.StyleName = StyleName;
	this->ProcessEvent ( pGetStyle, &parms, NULL );

	*FontScale = parms.FontScale;
	return parms.ReturnValue;
}*/

/*class UGUIFont* UGUIController::eventGetMenuFont ( struct FString FontName )
{
	static UFunction* pGetMenuFont = 0;
	UGUIController_eventGetMenuFont_Parms parms;

	if ( !pGetMenuFont )
		pGetMenuFont = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.GetMenuFont" );

	parms.FontName = FontName;
	this->ProcessEvent ( pGetMenuFont, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::AddBuddy ( struct FString NewBuddyName )
{
	static UFunction* pAddBuddy = 0;
	UGUIController_execAddBuddy_Parms parms;

	if ( !pAddBuddy )
		pAddBuddy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.AddBuddy" );

	parms.NewBuddyName = NewBuddyName;
	this->ProcessEvent ( pAddBuddy, &parms, NULL );

}*/

/*bool UGUIController::OnNeedRawKeyPress ( unsigned char NewKey )
{
	static UFunction* pOnNeedRawKeyPress = 0;
	UGUIController_execOnNeedRawKeyPress_Parms parms;

	if ( !pOnNeedRawKeyPress )
		pOnNeedRawKeyPress = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.OnNeedRawKeyPress" );

	parms.NewKey = NewKey;
	this->ProcessEvent ( pOnNeedRawKeyPress, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIController::PopPage (  )
{
	static UFunction* pPopPage = 0;
	UGUIController_execPopPage_Parms parms;

	if ( !pPopPage )
		pPopPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PopPage" );

	this->ProcessEvent ( pPopPage, &parms, NULL );

}*/

/*void UGUIController::PushPage (  )
{
	static UFunction* pPushPage = 0;
	UGUIController_execPushPage_Parms parms;

	if ( !pPushPage )
		pPushPage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIController.PushPage" );

	this->ProcessEvent ( pPushPage, &parms, NULL );

}*/

/*class UFont* UGUIFont::LoadFont ( int i )
{
	static UFunction* pLoadFont = 0;
	UGUIFont_execLoadFont_Parms parms;

	if ( !pLoadFont )
		pLoadFont = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIFont.LoadFont" );

	parms.i = i;
	this->ProcessEvent ( pLoadFont, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UFont* UGUIFont::LoadFontStatic ( int i )
{
	static UFunction* pLoadFontStatic = 0;
	UGUIFont_execLoadFontStatic_Parms parms;

	if ( !pLoadFontStatic )
		pLoadFontStatic = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIFont.LoadFontStatic" );

	parms.i = i;
	this->ProcessEvent ( pLoadFontStatic, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UFont* UGUIFont::eventGetFont ( int XRes )
{
	static UFunction* pGetFont = 0;
	UGUIFont_eventGetFont_Parms parms;

	if ( !pGetFont )
		pGetFont = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIFont.GetFont" );

	parms.XRes = XRes;
	this->ProcessEvent ( pGetFont, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIStyles::eventInitialize (  )
{
	static UFunction* pInitialize = 0;
	UGUIStyles_eventInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIStyles.Initialize" );

	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void UGUIStyles::btrDrawTextStyles ( class UCanvas* Canvas, unsigned char MenuState, float Left, float Top, float width, float Height, unsigned char Align, struct FString Text, unsigned char FontScale, int FontSize, float R, float G, float B, float A )
{
	static UFunction* pbtrDrawTextStyles = 0;
	UGUIStyles_execbtrDrawTextStyles_Parms parms;

	if ( !pbtrDrawTextStyles )
		pbtrDrawTextStyles = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIStyles.btrDrawTextStyles" );

	parms.Canvas = Canvas;
	parms.MenuState = MenuState;
	parms.Left = Left;
	parms.Top = Top;
	parms.width = width;
	parms.Height = Height;
	parms.Align = Align;
	parms.Text = Text;
	parms.FontScale = FontScale;
	parms.FontSize = FontSize;
	parms.R = R;
	parms.G = G;
	parms.B = B;
	parms.A = A;
	this->ProcessEvent ( pbtrDrawTextStyles, &parms, NULL );

}*/

/*void UGUIStyles::btrTextSizeStyles ( class UCanvas* Canvas, unsigned char MenuState, struct FString Text, unsigned char FontScale, int FontSize, float* XL, float* YL )
{
	static UFunction* pbtrTextSizeStyles = 0;
	UGUIStyles_execbtrTextSizeStyles_Parms parms;

	if ( !pbtrTextSizeStyles )
		pbtrTextSizeStyles = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIStyles.btrTextSizeStyles" );

	parms.Canvas = Canvas;
	parms.MenuState = MenuState;
	parms.Text = Text;
	parms.FontScale = FontScale;
	parms.FontSize = FontSize;
	this->ProcessEvent ( pbtrTextSizeStyles, &parms, NULL );

	*XL = parms.XL;
	*YL = parms.YL;
}*/

/*void UGUIStyles::TextSize ( class UCanvas* Canvas, unsigned char MenuState, struct FString Text, unsigned char FontScale, float* XL, float* YL )
{
	static UFunction* pTextSize = 0;
	UGUIStyles_execTextSize_Parms parms;

	if ( !pTextSize )
		pTextSize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIStyles.TextSize" );

	parms.Canvas = Canvas;
	parms.MenuState = MenuState;
	parms.Text = Text;
	parms.FontScale = FontScale;
	this->ProcessEvent ( pTextSize, &parms, NULL );

	*XL = parms.XL;
	*YL = parms.YL;
}*/

/*void UGUIStyles::DrawText ( class UCanvas* Canvas, unsigned char MenuState, float Left, float Top, float width, float Height, unsigned char Align, struct FString Text, unsigned char FontScale )
{
	static UFunction* pDrawText = 0;
	UGUIStyles_execDrawText_Parms parms;

	if ( !pDrawText )
		pDrawText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIStyles.DrawText" );

	parms.Canvas = Canvas;
	parms.MenuState = MenuState;
	parms.Left = Left;
	parms.Top = Top;
	parms.width = width;
	parms.Height = Height;
	parms.Align = Align;
	parms.Text = Text;
	parms.FontScale = FontScale;
	this->ProcessEvent ( pDrawText, &parms, NULL );

}*/

/*void UGUIStyles::Draw ( class UCanvas* Canvas, unsigned char MenuState, float Left, float Top, float width, float Height )
{
	static UFunction* pDraw = 0;
	UGUIStyles_execDraw_Parms parms;

	if ( !pDraw )
		pDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIStyles.Draw" );

	parms.Canvas = Canvas;
	parms.MenuState = MenuState;
	parms.Left = Left;
	parms.Top = Top;
	parms.width = width;
	parms.Height = Height;
	this->ProcessEvent ( pDraw, &parms, NULL );

}*/

/*bool UGUIStyles::OnDrawText ( class UCanvas* Canvas, unsigned char MenuState, float Left, float Top, float width, float Height, unsigned char Align, struct FString Text, unsigned char FontScale )
{
	static UFunction* pOnDrawText = 0;
	UGUIStyles_execOnDrawText_Parms parms;

	if ( !pOnDrawText )
		pOnDrawText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIStyles.OnDrawText" );

	parms.Canvas = Canvas;
	parms.MenuState = MenuState;
	parms.Left = Left;
	parms.Top = Top;
	parms.width = width;
	parms.Height = Height;
	parms.Align = Align;
	parms.Text = Text;
	parms.FontScale = FontScale;
	this->ProcessEvent ( pOnDrawText, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIStyles::OnDraw ( class UCanvas* Canvas, unsigned char MenuState, float Left, float Top, float width, float Height )
{
	static UFunction* pOnDraw = 0;
	UGUIStyles_execOnDraw_Parms parms;

	if ( !pOnDraw )
		pOnDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIStyles.OnDraw" );

	parms.Canvas = Canvas;
	parms.MenuState = MenuState;
	parms.Left = Left;
	parms.Top = Top;
	parms.width = width;
	parms.Height = Height;
	this->ProcessEvent ( pOnDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UFont* UUT2MidGameFont::eventGetFont ( int XRes )
{
	static UFunction* pGetFont = 0;
	UUT2MidGameFont_eventGetFont_Parms parms;

	if ( !pGetFont )
		pGetFont = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.UT2MidGameFont.GetFont" );

	parms.XRes = XRes;
	this->ProcessEvent ( pGetFont, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class UFont* UUT2MidGameFont::GetMidGameFont ( int XRes )
{
	static UFunction* pGetMidGameFont = 0;
	UUT2MidGameFont_execGetMidGameFont_Parms parms;

	if ( !pGetMidGameFont )
		pGetMidGameFont = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.UT2MidGameFont.GetMidGameFont" );

	parms.XRes = XRes;
	this->ProcessEvent ( pGetMidGameFont, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertScrollBar::ZoneClick ( float Delta )
{
	static UFunction* pZoneClick = 0;
	UGUIVertScrollBar_execZoneClick_Parms parms;

	if ( !pZoneClick )
		pZoneClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertScrollBar.ZoneClick" );

	parms.Delta = Delta;
	this->ProcessEvent ( pZoneClick, &parms, NULL );

}*/

/*bool UGUIVertScrollBar::GripPreDraw ( class UGUIComponent* Sender )
{
	static UFunction* pGripPreDraw = 0;
	UGUIVertScrollBar_execGripPreDraw_Parms parms;

	if ( !pGripPreDraw )
		pGripPreDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertScrollBar.GripPreDraw" );

	parms.Sender = Sender;
	this->ProcessEvent ( pGripPreDraw, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertScrollBar::GripPressed ( class UGUIComponent* Sender, bool IsRepeat )
{
	static UFunction* pGripPressed = 0;
	UGUIVertScrollBar_execGripPressed_Parms parms;

	if ( !pGripPressed )
		pGripPressed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertScrollBar.GripPressed" );

	parms.Sender = Sender;
	parms.IsRepeat = IsRepeat;
	this->ProcessEvent ( pGripPressed, &parms, NULL );

}*/

/*bool UGUIVertScrollZone::InternalOnClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnClick = 0;
	UGUIVertScrollZone_execInternalOnClick_Parms parms;

	if ( !pInternalOnClick )
		pInternalOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertScrollZone.InternalOnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertScrollButton::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIVertScrollButton_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertScrollButton.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIVertGripButton::InitComponent ( class UGUIController* MyController, class UGUIComponent* MyComponent )
{
	static UFunction* pInitComponent = 0;
	UGUIVertGripButton_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertGripButton.InitComponent" );

	parms.MyController = MyController;
	parms.MyComponent = MyComponent;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void USTY_ListSelection::eventInitialize (  )
{
	static UFunction* pInitialize = 0;
	USTY_ListSelection_eventInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.STY_ListSelection.Initialize" );

	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void UExtendedConsole::execDebugTabOrder (  )
{
	static UFunction* pDebugTabOrder = 0;
	UExtendedConsole_execDebugTabOrder_Parms parms;

	if ( !pDebugTabOrder )
		pDebugTabOrder = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.DebugTabOrder" );

	this->ProcessEvent ( pDebugTabOrder, &parms, NULL );

}*/

/*void UExtendedConsole::execDumpLoadingHints ( struct FString Param )
{
	static UFunction* pDumpLoadingHints = 0;
	UExtendedConsole_execDumpLoadingHints_Parms parms;

	if ( !pDumpLoadingHints )
		pDumpLoadingHints = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.DumpLoadingHints" );

	parms.Param = Param;
	this->ProcessEvent ( pDumpLoadingHints, &parms, NULL );

}*/

/*void UExtendedConsole::execDLO ( struct FString ClassName, struct FString ClassType )
{
	static UFunction* pDLO = 0;
	UExtendedConsole_execDLO_Parms parms;

	if ( !pDLO )
		pDLO = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.DLO" );

	parms.ClassName = ClassName;
	parms.ClassType = ClassType;
	this->ProcessEvent ( pDLO, &parms, NULL );

}*/

/*bool UExtendedConsole::VoiceChatAllowed (  )
{
	static UFunction* pVoiceChatAllowed = 0;
	UExtendedConsole_execVoiceChatAllowed_Parms parms;

	if ( !pVoiceChatAllowed )
		pVoiceChatAllowed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.VoiceChatAllowed" );

	this->ProcessEvent ( pVoiceChatAllowed, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UExtendedConsole::DumpCacheRecords ( struct FString CacheType )
{
	static UFunction* pDumpCacheRecords = 0;
	UExtendedConsole_execDumpCacheRecords_Parms parms;

	if ( !pDumpCacheRecords )
		pDumpCacheRecords = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.DumpCacheRecords" );

	parms.CacheType = CacheType;
	this->ProcessEvent ( pDumpCacheRecords, &parms, NULL );

}*/

/*void UExtendedConsole::AddMessage ( struct FString Mesg )
{
	static UFunction* pAddMessage = 0;
	UExtendedConsole_execAddMessage_Parms parms;

	if ( !pAddMessage )
		pAddMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.AddMessage" );

	parms.Mesg = Mesg;
	this->ProcessEvent ( pAddMessage, &parms, NULL );

}*/

/*void UExtendedConsole::execDumpRecords ( struct FString Type )
{
	static UFunction* pDumpRecords = 0;
	UExtendedConsole_execDumpRecords_Parms parms;

	if ( !pDumpRecords )
		pDumpRecords = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.DumpRecords" );

	parms.Type = Type;
	this->ProcessEvent ( pDumpRecords, &parms, NULL );

}*/

/*void UExtendedConsole::execDumpPlayInfo ( struct FString Group )
{
	static UFunction* pDumpPlayInfo = 0;
	UExtendedConsole_execDumpPlayInfo_Parms parms;

	if ( !pDumpPlayInfo )
		pDumpPlayInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.DumpPlayInfo" );

	parms.Group = Group;
	this->ProcessEvent ( pDumpPlayInfo, &parms, NULL );

}*/

/*void UExtendedConsole::execMusicMenu (  )
{
	static UFunction* pMusicMenu = 0;
	UExtendedConsole_execMusicMenu_Parms parms;

	if ( !pMusicMenu )
		pMusicMenu = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.MusicMenu" );

	this->ProcessEvent ( pMusicMenu, &parms, NULL );

}*/

/*void UExtendedConsole::execPlayWaitingGame (  )
{
	static UFunction* pPlayWaitingGame = 0;
	UExtendedConsole_execPlayWaitingGame_Parms parms;

	if ( !pPlayWaitingGame )
		pPlayWaitingGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.PlayWaitingGame" );

	this->ProcessEvent ( pPlayWaitingGame, &parms, NULL );

}*/

/*void UExtendedConsole::execTeamChatOnly (  )
{
	static UFunction* pTeamChatOnly = 0;
	UExtendedConsole_execTeamChatOnly_Parms parms;

	if ( !pTeamChatOnly )
		pTeamChatOnly = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.TeamChatOnly" );

	this->ProcessEvent ( pTeamChatOnly, &parms, NULL );

}*/

/*void UExtendedConsole::execServerInfo (  )
{
	static UFunction* pServerInfo = 0;
	UExtendedConsole_execServerInfo_Parms parms;

	if ( !pServerInfo )
		pServerInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.ServerInfo" );

	this->ProcessEvent ( pServerInfo, &parms, NULL );

}*/

/*void UExtendedConsole::execIngameChat (  )
{
	static UFunction* pIngameChat = 0;
	UExtendedConsole_execIngameChat_Parms parms;

	if ( !pIngameChat )
		pIngameChat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.IngameChat" );

	this->ProcessEvent ( pIngameChat, &parms, NULL );

}*/

/*void UExtendedConsole::execSpeechMenuToggle (  )
{
	static UFunction* pSpeechMenuToggle = 0;
	UExtendedConsole_execSpeechMenuToggle_Parms parms;

	if ( !pSpeechMenuToggle )
		pSpeechMenuToggle = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.SpeechMenuToggle" );

	this->ProcessEvent ( pSpeechMenuToggle, &parms, NULL );

}*/

/*void UExtendedConsole::SaveFavorites (  )
{
	static UFunction* pSaveFavorites = 0;
	UExtendedConsole_execSaveFavorites_Parms parms;

	if ( !pSaveFavorites )
		pSaveFavorites = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.SaveFavorites" );

	this->ProcessEvent ( pSaveFavorites, &parms, NULL );

}*/

/*void UExtendedConsole::GetFavorites ( class TArray< struct FServerFavorite >* List )
{
	static UFunction* pGetFavorites = 0;
	UExtendedConsole_execGetFavorites_Parms parms;

	if ( !pGetFavorites )
		pGetFavorites = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.GetFavorites" );

	parms.List = *List;
	this->ProcessEvent ( pGetFavorites, &parms, NULL );

	*List = parms.List;
}*/

/*bool UExtendedConsole::RemoveFavorite ( struct FString IP, int Port, int QueryPort )
{
	static UFunction* pRemoveFavorite = 0;
	UExtendedConsole_execRemoveFavorite_Parms parms;

	if ( !pRemoveFavorite )
		pRemoveFavorite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.RemoveFavorite" );

	parms.IP = IP;
	parms.Port = Port;
	parms.QueryPort = QueryPort;
	this->ProcessEvent ( pRemoveFavorite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UExtendedConsole::AddFavorite ( struct FServerFavorite NewFav )
{
	static UFunction* pAddFavorite = 0;
	UExtendedConsole_execAddFavorite_Parms parms;

	if ( !pAddFavorite )
		pAddFavorite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.AddFavorite" );

	parms.NewFav = NewFav;
	this->ProcessEvent ( pAddFavorite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UExtendedConsole::InFavorites ( struct FServerFavorite Fav )
{
	static UFunction* pInFavorites = 0;
	UExtendedConsole_execInFavorites_Parms parms;

	if ( !pInFavorites )
		pInFavorites = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.InFavorites" );

	parms.Fav = Fav;
	this->ProcessEvent ( pInFavorites, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UExtendedConsole::execAddCurrentToFavorites (  )
{
	static UFunction* pAddCurrentToFavorites = 0;
	UExtendedConsole_execAddCurrentToFavorites_Parms parms;

	if ( !pAddCurrentToFavorites )
		pAddCurrentToFavorites = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.AddCurrentToFavorites" );

	this->ProcessEvent ( pAddCurrentToFavorites, &parms, NULL );

}*/

/*void UExtendedConsole::OnExecAddFavorite ( struct FServerFavorite Fav )
{
	static UFunction* pOnExecAddFavorite = 0;
	UExtendedConsole_execOnExecAddFavorite_Parms parms;

	if ( !pOnExecAddFavorite )
		pOnExecAddFavorite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.OnExecAddFavorite" );

	parms.Fav = Fav;
	this->ProcessEvent ( pOnExecAddFavorite, &parms, NULL );

}*/

/*void UExtendedConsole::execConsoleToggle (  )
{
	static UFunction* pConsoleToggle = 0;
	UExtendedConsole_execConsoleToggle_Parms parms;

	if ( !pConsoleToggle )
		pConsoleToggle = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.ConsoleToggle" );

	this->ProcessEvent ( pConsoleToggle, &parms, NULL );

}*/

/*void UExtendedConsole::execConsoleClose (  )
{
	static UFunction* pConsoleClose = 0;
	UExtendedConsole_execConsoleClose_Parms parms;

	if ( !pConsoleClose )
		pConsoleClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.ConsoleClose" );

	this->ProcessEvent ( pConsoleClose, &parms, NULL );

}*/

/*void UExtendedConsole::execConsoleOpen (  )
{
	static UFunction* pConsoleOpen = 0;
	UExtendedConsole_execConsoleOpen_Parms parms;

	if ( !pConsoleOpen )
		pConsoleOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.ConsoleOpen" );

	this->ProcessEvent ( pConsoleOpen, &parms, NULL );

}*/

/*void UExtendedConsole::eventNativeConsoleOpen (  )
{
	static UFunction* pNativeConsoleOpen = 0;
	UExtendedConsole_eventNativeConsoleOpen_Parms parms;

	if ( !pNativeConsoleOpen )
		pNativeConsoleOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.NativeConsoleOpen" );

	this->ProcessEvent ( pNativeConsoleOpen, &parms, NULL );

}*/

/*void UExtendedConsole::PlayConsoleSound ( class USound* S )
{
	static UFunction* pPlayConsoleSound = 0;
	UExtendedConsole_execPlayConsoleSound_Parms parms;

	if ( !pPlayConsoleSound )
		pPlayConsoleSound = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.PlayConsoleSound" );

	parms.S = S;
	this->ProcessEvent ( pPlayConsoleSound, &parms, NULL );

}*/

/*bool UExtendedConsole::eventKeyEvent ( unsigned char key, unsigned char Action, float Delta )
{
	static UFunction* pKeyEvent = 0;
	UExtendedConsole_eventKeyEvent_Parms parms;

	if ( !pKeyEvent )
		pKeyEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.KeyEvent" );

	parms.key = key;
	parms.Action = Action;
	parms.Delta = Delta;
	this->ProcessEvent ( pKeyEvent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UExtendedConsole::GetNewPlaybackSpeed ( int Dir )
{
	static UFunction* pGetNewPlaybackSpeed = 0;
	UExtendedConsole_execGetNewPlaybackSpeed_Parms parms;

	if ( !pGetNewPlaybackSpeed )
		pGetNewPlaybackSpeed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.GetNewPlaybackSpeed" );

	parms.Dir = Dir;
	this->ProcessEvent ( pGetNewPlaybackSpeed, &parms, NULL );

}*/

/*void UExtendedConsole::eventMessage ( struct FString Msg, float MsgLife )
{
	static UFunction* pMessage = 0;
	UExtendedConsole_eventMessage_Parms parms;

	if ( !pMessage )
		pMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.Message" );

	parms.Msg = Msg;
	parms.MsgLife = MsgLife;
	this->ProcessEvent ( pMessage, &parms, NULL );

}*/

/*void UExtendedConsole::OnChatMessage ( struct FString Msg )
{
	static UFunction* pOnChatMessage = 0;
	UExtendedConsole_execOnChatMessage_Parms parms;

	if ( !pOnChatMessage )
		pOnChatMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.OnChatMessage" );

	parms.Msg = Msg;
	this->ProcessEvent ( pOnChatMessage, &parms, NULL );

}*/

/*void UExtendedConsole::Chat ( struct FString Msg, float MsgLife, class APlayerReplicationInfo* PRI )
{
	static UFunction* pChat = 0;
	UExtendedConsole_execChat_Parms parms;

	if ( !pChat )
		pChat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.Chat" );

	parms.Msg = Msg;
	parms.MsgLife = MsgLife;
	parms.PRI = PRI;
	this->ProcessEvent ( pChat, &parms, NULL );

}*/

/*void UExtendedConsole::PostRender ( class UCanvas* Canvas )
{
	static UFunction* pPostRender = 0;
	UExtendedConsole_execPostRender_Parms parms;

	if ( !pPostRender )
		pPostRender = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.PostRender" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pPostRender, &parms, NULL );

}*/

/*void UExtendedConsole::execcls (  )
{
	static UFunction* pcls = 0;
	UExtendedConsole_execcls_Parms parms;

	if ( !pcls )
		pcls = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.cls" );

	this->ProcessEvent ( pcls, &parms, NULL );

}*/

/*void UExtendedConsole::eventNotifyLevelChange (  )
{
	static UFunction* pNotifyLevelChange = 0;
	UExtendedConsole_eventNotifyLevelChange_Parms parms;

	if ( !pNotifyLevelChange )
		pNotifyLevelChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.NotifyLevelChange" );

	this->ProcessEvent ( pNotifyLevelChange, &parms, NULL );

}*/

/*void UExtendedConsole::eventConnectFailure ( struct FString FailCode, struct FString URL )
{
	static UFunction* pConnectFailure = 0;
	UExtendedConsole_eventConnectFailure_Parms parms;

	if ( !pConnectFailure )
		pConnectFailure = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.ConnectFailure" );

	parms.FailCode = FailCode;
	parms.URL = URL;
	this->ProcessEvent ( pConnectFailure, &parms, NULL );

}*/

/*void UExtendedConsole::OnStatsConfigured (  )
{
	static UFunction* pOnStatsConfigured = 0;
	UExtendedConsole_execOnStatsConfigured_Parms parms;

	if ( !pOnStatsConfigured )
		pOnStatsConfigured = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.OnStatsConfigured" );

	this->ProcessEvent ( pOnStatsConfigured, &parms, NULL );

}*/

/*void UExtendedConsole::OnStatsClosed ( bool bCancelled )
{
	static UFunction* pOnStatsClosed = 0;
	UExtendedConsole_execOnStatsClosed_Parms parms;

	if ( !pOnStatsClosed )
		pOnStatsClosed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.OnStatsClosed" );

	parms.bCancelled = bCancelled;
	this->ProcessEvent ( pOnStatsClosed, &parms, NULL );

}*/

/*void UExtendedConsole::OnChat ( struct FString Msg, int TeamIndex )
{
	static UFunction* pOnChat = 0;
	UExtendedConsole_execOnChat_Parms parms;

	if ( !pOnChat )
		pOnChat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ExtendedConsole.OnChat" );

	parms.Msg = Msg;
	parms.TeamIndex = TeamIndex;
	this->ProcessEvent ( pOnChat, &parms, NULL );

}*/

/*bool UUT2MusicManager::NotifyLevelChange (  )
{
	static UFunction* pNotifyLevelChange = 0;
	UUT2MusicManager_execNotifyLevelChange_Parms parms;

	if ( !pNotifyLevelChange )
		pNotifyLevelChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.UT2MusicManager.NotifyLevelChange" );

	this->ProcessEvent ( pNotifyLevelChange, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UUT2MusicManager::MusicChanged (  )
{
	static UFunction* pMusicChanged = 0;
	UUT2MusicManager_execMusicChanged_Parms parms;

	if ( !pMusicChanged )
		pMusicChanged = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.UT2MusicManager.MusicChanged" );

	this->ProcessEvent ( pMusicChanged, &parms, NULL );

}*/

/*struct FString UUT2MusicManager::SetInitialMusic ( struct FString NewSong )
{
	static UFunction* pSetInitialMusic = 0;
	UUT2MusicManager_execSetInitialMusic_Parms parms;

	if ( !pSetInitialMusic )
		pSetInitialMusic = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.UT2MusicManager.SetInitialMusic" );

	parms.NewSong = NewSong;
	this->ProcessEvent ( pSetInitialMusic, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UUT2MusicManager::SetMusic ( struct FString NewSong )
{
	static UFunction* pSetMusic = 0;
	UUT2MusicManager_execSetMusic_Parms parms;

	if ( !pSetMusic )
		pSetMusic = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.UT2MusicManager.SetMusic" );

	parms.NewSong = NewSong;
	this->ProcessEvent ( pSetMusic, &parms, NULL );

}*/

/*void UUT2MusicManager::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UUT2MusicManager_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.UT2MusicManager.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void AHudCDeathmatch::DisalbeWeaponSlot5Hud (  )
{
	static UFunction* pDisalbeWeaponSlot5Hud = 0;
	AHudCDeathmatch_execDisalbeWeaponSlot5Hud_Parms parms;

	if ( !pDisalbeWeaponSlot5Hud )
		pDisalbeWeaponSlot5Hud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DisalbeWeaponSlot5Hud" );

	this->ProcessEvent ( pDisalbeWeaponSlot5Hud, &parms, NULL );

}*/

/*void AHudCDeathmatch::EnableWeaponSlot5Hud ( int nWeaponID )
{
	static UFunction* pEnableWeaponSlot5Hud = 0;
	AHudCDeathmatch_execEnableWeaponSlot5Hud_Parms parms;

	if ( !pEnableWeaponSlot5Hud )
		pEnableWeaponSlot5Hud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.EnableWeaponSlot5Hud" );

	parms.nWeaponID = nWeaponID;
	this->ProcessEvent ( pEnableWeaponSlot5Hud, &parms, NULL );

}*/

/*void AHudCDeathmatch::ChangeWeaponSlot5Hud ( class AwWeapon* newWeapon, bool bAddSkill )
{
	static UFunction* pChangeWeaponSlot5Hud = 0;
	AHudCDeathmatch_execChangeWeaponSlot5Hud_Parms parms;

	if ( !pChangeWeaponSlot5Hud )
		pChangeWeaponSlot5Hud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ChangeWeaponSlot5Hud" );

	parms.newWeapon = newWeapon;
	parms.bAddSkill = bAddSkill;
	this->ProcessEvent ( pChangeWeaponSlot5Hud, &parms, NULL );

}*/

/*void AHudCDeathmatch::DisalbeWeaponSlot6Hud (  )
{
	static UFunction* pDisalbeWeaponSlot6Hud = 0;
	AHudCDeathmatch_execDisalbeWeaponSlot6Hud_Parms parms;

	if ( !pDisalbeWeaponSlot6Hud )
		pDisalbeWeaponSlot6Hud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DisalbeWeaponSlot6Hud" );

	this->ProcessEvent ( pDisalbeWeaponSlot6Hud, &parms, NULL );

}*/

/*void AHudCDeathmatch::ChangeWeaponSlot6Hud ( class AwWeapon* newWeapon )
{
	static UFunction* pChangeWeaponSlot6Hud = 0;
	AHudCDeathmatch_execChangeWeaponSlot6Hud_Parms parms;

	if ( !pChangeWeaponSlot6Hud )
		pChangeWeaponSlot6Hud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ChangeWeaponSlot6Hud" );

	parms.newWeapon = newWeapon;
	this->ProcessEvent ( pChangeWeaponSlot6Hud, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawAASNotice ( class UCanvas* C )
{
	static UFunction* pDrawAASNotice = 0;
	AHudCDeathmatch_execDrawAASNotice_Parms parms;

	if ( !pDrawAASNotice )
		pDrawAASNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAASNotice" );

	parms.C = C;
	this->ProcessEvent ( pDrawAASNotice, &parms, NULL );

}*/

/*struct FString AHudCDeathmatch::GetNoticeFirst (  )
{
	static UFunction* pGetNoticeFirst = 0;
	AHudCDeathmatch_execGetNoticeFirst_Parms parms;

	if ( !pGetNoticeFirst )
		pGetNoticeFirst = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetNoticeFirst" );

	this->ProcessEvent ( pGetNoticeFirst, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DrawSystemNotice ( class UCanvas* C )
{
	static UFunction* pDrawSystemNotice = 0;
	AHudCDeathmatch_execDrawSystemNotice_Parms parms;

	if ( !pDrawSystemNotice )
		pDrawSystemNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawSystemNotice" );

	parms.C = C;
	this->ProcessEvent ( pDrawSystemNotice, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawGameNotice ( class UCanvas* C )
{
	static UFunction* pDrawGameNotice = 0;
	AHudCDeathmatch_execDrawGameNotice_Parms parms;

	if ( !pDrawGameNotice )
		pDrawGameNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawGameNotice" );

	parms.C = C;
	this->ProcessEvent ( pDrawGameNotice, &parms, NULL );

}*/

/*void AHudCDeathmatch::AllDeleteGameNotice (  )
{
	static UFunction* pAllDeleteGameNotice = 0;
	AHudCDeathmatch_execAllDeleteGameNotice_Parms parms;

	if ( !pAllDeleteGameNotice )
		pAllDeleteGameNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.AllDeleteGameNotice" );

	this->ProcessEvent ( pAllDeleteGameNotice, &parms, NULL );

}*/

/*void AHudCDeathmatch::PushAASNotice ( struct FString sNotice, float beginTime, unsigned char byLevel )
{
	static UFunction* pPushAASNotice = 0;
	AHudCDeathmatch_execPushAASNotice_Parms parms;

	if ( !pPushAASNotice )
		pPushAASNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.PushAASNotice" );

	parms.sNotice = sNotice;
	parms.beginTime = beginTime;
	parms.byLevel = byLevel;
	this->ProcessEvent ( pPushAASNotice, &parms, NULL );

}*/

/*void AHudCDeathmatch::PushGameNotice ( struct FString sNotice )
{
	static UFunction* pPushGameNotice = 0;
	AHudCDeathmatch_execPushGameNotice_Parms parms;

	if ( !pPushGameNotice )
		pPushGameNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.PushGameNotice" );

	parms.sNotice = sNotice;
	this->ProcessEvent ( pPushGameNotice, &parms, NULL );

}*/

/*void AHudCDeathmatch::RecGameNotice ( struct FString sNotice )
{
	static UFunction* pRecGameNotice = 0;
	AHudCDeathmatch_execRecGameNotice_Parms parms;

	if ( !pRecGameNotice )
		pRecGameNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RecGameNotice" );

	parms.sNotice = sNotice;
	this->ProcessEvent ( pRecGameNotice, &parms, NULL );

}*/

/*void AHudCDeathmatch::RecAAS ( struct FString sNotice, float DrawTime )
{
	static UFunction* pRecAAS = 0;
	AHudCDeathmatch_execRecAAS_Parms parms;

	if ( !pRecAAS )
		pRecAAS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RecAAS" );

	parms.sNotice = sNotice;
	parms.DrawTime = DrawTime;
	this->ProcessEvent ( pRecAAS, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawWaringMark ( class UCanvas* C, float fWidth, float fHeight, float fCurLifeTime, float fMaxLifeTime )
{
	static UFunction* pDrawWaringMark = 0;
	AHudCDeathmatch_execDrawWaringMark_Parms parms;

	if ( !pDrawWaringMark )
		pDrawWaringMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawWaringMark" );

	parms.C = C;
	parms.fWidth = fWidth;
	parms.fHeight = fHeight;
	parms.fCurLifeTime = fCurLifeTime;
	parms.fMaxLifeTime = fMaxLifeTime;
	this->ProcessEvent ( pDrawWaringMark, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawScoreEffect ( class UCanvas* C, struct FSpriteWidget W, float fWidth, float fHeight, struct FCalCoordsW calW, float PosX, float PosY )
{
	static UFunction* pDrawScoreEffect = 0;
	AHudCDeathmatch_execDrawScoreEffect_Parms parms;

	if ( !pDrawScoreEffect )
		pDrawScoreEffect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawScoreEffect" );

	parms.C = C;
	parms.W = W;
	parms.fWidth = fWidth;
	parms.fHeight = fHeight;
	parms.calW = calW;
	parms.PosX = PosX;
	parms.PosY = PosY;
	this->ProcessEvent ( pDrawScoreEffect, &parms, NULL );

}*/

/*bool AHudCDeathmatch::DrawKillMarkEffect ( class UCanvas* C, struct FSpriteWidget W, float fWidth, float fHeight, struct FCalCoordsW calW, float PosX, float PosY, float fScale )
{
	static UFunction* pDrawKillMarkEffect = 0;
	AHudCDeathmatch_execDrawKillMarkEffect_Parms parms;

	if ( !pDrawKillMarkEffect )
		pDrawKillMarkEffect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawKillMarkEffect" );

	parms.C = C;
	parms.W = W;
	parms.fWidth = fWidth;
	parms.fHeight = fHeight;
	parms.calW = calW;
	parms.PosX = PosX;
	parms.PosY = PosY;
	parms.fScale = fScale;
	this->ProcessEvent ( pDrawKillMarkEffect, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DrawMessageScore ( class UCanvas* C, int i, float PosX, float PosY, float* dx, float* dy )
{
	static UFunction* pDrawMessageScore = 0;
	AHudCDeathmatch_execDrawMessageScore_Parms parms;

	if ( !pDrawMessageScore )
		pDrawMessageScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawMessageScore" );

	parms.C = C;
	parms.i = i;
	parms.PosX = PosX;
	parms.PosY = PosY;
	this->ProcessEvent ( pDrawMessageScore, &parms, NULL );

	*dx = parms.dx;
	*dy = parms.dy;
}*/

/*void AHudCDeathmatch::ResetKillMessageTexture (  )
{
	static UFunction* pResetKillMessageTexture = 0;
	AHudCDeathmatch_execResetKillMessageTexture_Parms parms;

	if ( !pResetKillMessageTexture )
		pResetKillMessageTexture = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ResetKillMessageTexture" );

	this->ProcessEvent ( pResetKillMessageTexture, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawMessageWithTexture ( class UCanvas* C, int i, float PosX, float PosY, float* dx, float* dy )
{
	static UFunction* pDrawMessageWithTexture = 0;
	AHudCDeathmatch_execDrawMessageWithTexture_Parms parms;

	if ( !pDrawMessageWithTexture )
		pDrawMessageWithTexture = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawMessageWithTexture" );

	parms.C = C;
	parms.i = i;
	parms.PosX = PosX;
	parms.PosY = PosY;
	this->ProcessEvent ( pDrawMessageWithTexture, &parms, NULL );

	*dx = parms.dx;
	*dy = parms.dy;
}*/

/*void AHudCDeathmatch::DrawMessage ( class UCanvas* C, int i, float PosX, float PosY, float* dx, float* dy )
{
	static UFunction* pDrawMessage = 0;
	AHudCDeathmatch_execDrawMessage_Parms parms;

	if ( !pDrawMessage )
		pDrawMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawMessage" );

	parms.C = C;
	parms.i = i;
	parms.PosX = PosX;
	parms.PosY = PosY;
	this->ProcessEvent ( pDrawMessage, &parms, NULL );

	*dx = parms.dx;
	*dy = parms.dy;
}*/

/*void AHudCDeathmatch::LocalizedMessage ( class UClass* Message, int Switch, class APlayerReplicationInfo* RelatedPRI_1, class APlayerReplicationInfo* RelatedPRI_2, class UObject* OptionalObject, struct FString CriticalString )
{
	static UFunction* pLocalizedMessage = 0;
	AHudCDeathmatch_execLocalizedMessage_Parms parms;

	if ( !pLocalizedMessage )
		pLocalizedMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.LocalizedMessage" );

	parms.Message = Message;
	parms.Switch = Switch;
	parms.RelatedPRI_1 = RelatedPRI_1;
	parms.RelatedPRI_2 = RelatedPRI_2;
	parms.OptionalObject = OptionalObject;
	parms.CriticalString = CriticalString;
	this->ProcessEvent ( pLocalizedMessage, &parms, NULL );

}*/

/*bool AHudCDeathmatch::IsUAVOn (  )
{
	static UFunction* pIsUAVOn = 0;
	AHudCDeathmatch_execIsUAVOn_Parms parms;

	if ( !pIsUAVOn )
		pIsUAVOn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.IsUAVOn" );

	this->ProcessEvent ( pIsUAVOn, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool AHudCDeathmatch::IsUAVScanning (  )
{
	static UFunction* pIsUAVScanning = 0;
	AHudCDeathmatch_execIsUAVScanning_Parms parms;

	if ( !pIsUAVScanning )
		pIsUAVScanning = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.IsUAVScanning" );

	this->ProcessEvent ( pIsUAVScanning, &parms, NULL );

	return parms.ReturnValue;
}*/

/*float AHudCDeathmatch::GetUAVScanLineTexturePos (  )
{
	static UFunction* pGetUAVScanLineTexturePos = 0;
	AHudCDeathmatch_execGetUAVScanLineTexturePos_Parms parms;

	if ( !pGetUAVScanLineTexturePos )
		pGetUAVScanLineTexturePos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetUAVScanLineTexturePos" );

	this->ProcessEvent ( pGetUAVScanLineTexturePos, &parms, NULL );

	return parms.ReturnValue;
}*/

/*float AHudCDeathmatch::GetUAVScanLineMinimapPos (  )
{
	static UFunction* pGetUAVScanLineMinimapPos = 0;
	AHudCDeathmatch_execGetUAVScanLineMinimapPos_Parms parms;

	if ( !pGetUAVScanLineMinimapPos )
		pGetUAVScanLineMinimapPos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetUAVScanLineMinimapPos" );

	this->ProcessEvent ( pGetUAVScanLineMinimapPos, &parms, NULL );

	return parms.ReturnValue;
}*/

/*float AHudCDeathmatch::GetUAVScanProgress (  )
{
	static UFunction* pGetUAVScanProgress = 0;
	AHudCDeathmatch_execGetUAVScanProgress_Parms parms;

	if ( !pGetUAVScanProgress )
		pGetUAVScanProgress = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetUAVScanProgress" );

	this->ProcessEvent ( pGetUAVScanProgress, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::StartUAVScan (  )
{
	static UFunction* pStartUAVScan = 0;
	AHudCDeathmatch_execStartUAVScan_Parms parms;

	if ( !pStartUAVScan )
		pStartUAVScan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.StartUAVScan" );

	this->ProcessEvent ( pStartUAVScan, &parms, NULL );

}*/

/*bool AHudCDeathmatch::IsPawnUnderScan ( class APawn* P )
{
	static UFunction* pIsPawnUnderScan = 0;
	AHudCDeathmatch_execIsPawnUnderScan_Parms parms;

	if ( !pIsPawnUnderScan )
		pIsPawnUnderScan = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.IsPawnUnderScan" );

	parms.P = P;
	this->ProcessEvent ( pIsPawnUnderScan, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::UpdateUAV (  )
{
	static UFunction* pUpdateUAV = 0;
	AHudCDeathmatch_execUpdateUAV_Parms parms;

	if ( !pUpdateUAV )
		pUpdateUAV = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdateUAV" );

	this->ProcessEvent ( pUpdateUAV, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawUAV ( class UCanvas* C )
{
	static UFunction* pDrawUAV = 0;
	AHudCDeathmatch_execDrawUAV_Parms parms;

	if ( !pDrawUAV )
		pDrawUAV = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawUAV" );

	parms.C = C;
	this->ProcessEvent ( pDrawUAV, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawDebugUAV ( class UCanvas* C, int X, int dy, int* Y )
{
	static UFunction* pDrawDebugUAV = 0;
	AHudCDeathmatch_execDrawDebugUAV_Parms parms;

	if ( !pDrawDebugUAV )
		pDrawDebugUAV = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDebugUAV" );

	parms.C = C;
	parms.X = X;
	parms.dy = dy;
	this->ProcessEvent ( pDrawDebugUAV, &parms, NULL );

	*Y = parms.Y;
}*/

/*void AHudCDeathmatch::TutorialEvent ( struct FString S, struct FName Type, struct FName reserv )
{
	static UFunction* pTutorialEvent = 0;
	AHudCDeathmatch_execTutorialEvent_Parms parms;

	if ( !pTutorialEvent )
		pTutorialEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.TutorialEvent" );

	parms.S = S;
	parms.Type = Type;
	parms.reserv = reserv;
	this->ProcessEvent ( pTutorialEvent, &parms, NULL );

}*/

/*void AHudCDeathmatch::CallRadioMessage ( int iKey, int iReservation1, int iReservation2 )
{
	static UFunction* pCallRadioMessage = 0;
	AHudCDeathmatch_execCallRadioMessage_Parms parms;

	if ( !pCallRadioMessage )
		pCallRadioMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CallRadioMessage" );

	parms.iKey = iKey;
	parms.iReservation1 = iReservation1;
	parms.iReservation2 = iReservation2;
	this->ProcessEvent ( pCallRadioMessage, &parms, NULL );

}*/

/*void AHudCDeathmatch::CallEvent ( bool InvenCheck, int iReservation1, int iReservation2 )
{
	static UFunction* pCallEvent = 0;
	AHudCDeathmatch_execCallEvent_Parms parms;

	if ( !pCallEvent )
		pCallEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CallEvent" );

	parms.InvenCheck = InvenCheck;
	parms.iReservation1 = iReservation1;
	parms.iReservation2 = iReservation2;
	this->ProcessEvent ( pCallEvent, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawChangeHostGuest ( class UCanvas* C )
{
	static UFunction* pDrawChangeHostGuest = 0;
	AHudCDeathmatch_execDrawChangeHostGuest_Parms parms;

	if ( !pDrawChangeHostGuest )
		pDrawChangeHostGuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawChangeHostGuest" );

	parms.C = C;
	this->ProcessEvent ( pDrawChangeHostGuest, &parms, NULL );

}*/

/*void AHudCDeathmatch::OnEndChangedHost (  )
{
	static UFunction* pOnEndChangedHost = 0;
	AHudCDeathmatch_execOnEndChangedHost_Parms parms;

	if ( !pOnEndChangedHost )
		pOnEndChangedHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.OnEndChangedHost" );

	this->ProcessEvent ( pOnEndChangedHost, &parms, NULL );

}*/

/*void AHudCDeathmatch::EndDrawChangeHost (  )
{
	static UFunction* pEndDrawChangeHost = 0;
	AHudCDeathmatch_execEndDrawChangeHost_Parms parms;

	if ( !pEndDrawChangeHost )
		pEndDrawChangeHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.EndDrawChangeHost" );

	this->ProcessEvent ( pEndDrawChangeHost, &parms, NULL );

}*/

/*void AHudCDeathmatch::BeginDrawChangeHost (  )
{
	static UFunction* pBeginDrawChangeHost = 0;
	AHudCDeathmatch_execBeginDrawChangeHost_Parms parms;

	if ( !pBeginDrawChangeHost )
		pBeginDrawChangeHost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.BeginDrawChangeHost" );

	this->ProcessEvent ( pBeginDrawChangeHost, &parms, NULL );

}*/

/*struct FVector AHudCDeathmatch::GetTargetOrientation2 ( struct FVector loc, struct FVector camLoc, struct FRotator camRot )
{
	static UFunction* pGetTargetOrientation2 = 0;
	AHudCDeathmatch_execGetTargetOrientation2_Parms parms;

	if ( !pGetTargetOrientation2 )
		pGetTargetOrientation2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetTargetOrientation2" );

	parms.loc = loc;
	parms.camLoc = camLoc;
	parms.camRot = camRot;
	this->ProcessEvent ( pGetTargetOrientation2, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FVector AHudCDeathmatch::ExpandTargetOrientationToCanvas ( class UCanvas* C, struct FVector Orientation )
{
	static UFunction* pExpandTargetOrientationToCanvas = 0;
	AHudCDeathmatch_execExpandTargetOrientationToCanvas_Parms parms;

	if ( !pExpandTargetOrientationToCanvas )
		pExpandTargetOrientationToCanvas = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ExpandTargetOrientationToCanvas" );

	parms.C = C;
	parms.Orientation = Orientation;
	this->ProcessEvent ( pExpandTargetOrientationToCanvas, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FVector AHudCDeathmatch::GetTargetOrientation ( class AActor* Target, struct FVector camLoc, struct FRotator camRot )
{
	static UFunction* pGetTargetOrientation = 0;
	AHudCDeathmatch_execGetTargetOrientation_Parms parms;

	if ( !pGetTargetOrientation )
		pGetTargetOrientation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetTargetOrientation" );

	parms.Target = Target;
	parms.camLoc = camLoc;
	parms.camRot = camRot;
	this->ProcessEvent ( pGetTargetOrientation, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DrawOutArrow ( class UCanvas* C, float W, float H, struct FVector ScreenPos )
{
	static UFunction* pDrawOutArrow = 0;
	AHudCDeathmatch_execDrawOutArrow_Parms parms;

	if ( !pDrawOutArrow )
		pDrawOutArrow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawOutArrow" );

	parms.C = C;
	parms.W = W;
	parms.H = H;
	parms.ScreenPos = ScreenPos;
	this->ProcessEvent ( pDrawOutArrow, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawObjectSprite ( class UCanvas* C, class UObject* Tag, struct FSpriteWidget objectSprite, struct FVector objectLoc, bool drawMeter, float rX, float rY )
{
	static UFunction* pDrawObjectSprite = 0;
	AHudCDeathmatch_execDrawObjectSprite_Parms parms;

	if ( !pDrawObjectSprite )
		pDrawObjectSprite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawObjectSprite" );

	parms.C = C;
	parms.Tag = Tag;
	parms.objectSprite = objectSprite;
	parms.objectLoc = objectLoc;
	parms.drawMeter = drawMeter;
	parms.rX = rX;
	parms.rY = rY;
	this->ProcessEvent ( pDrawObjectSprite, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawObjectSprite2 ( class UCanvas* C, class UObject* Tag, struct FSpriteWidget objectSprite, struct FVector objectLoc, struct FString ObjectName, int Alpha )
{
	static UFunction* pDrawObjectSprite2 = 0;
	AHudCDeathmatch_execDrawObjectSprite2_Parms parms;

	if ( !pDrawObjectSprite2 )
		pDrawObjectSprite2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawObjectSprite2" );

	parms.C = C;
	parms.Tag = Tag;
	parms.objectSprite = objectSprite;
	parms.objectLoc = objectLoc;
	parms.ObjectName = ObjectName;
	parms.Alpha = Alpha;
	this->ProcessEvent ( pDrawObjectSprite2, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawObjectSprite3 ( class UCanvas* C, struct FSpriteWidget objectSprite, struct FVector objectLoc )
{
	static UFunction* pDrawObjectSprite3 = 0;
	AHudCDeathmatch_execDrawObjectSprite3_Parms parms;

	if ( !pDrawObjectSprite3 )
		pDrawObjectSprite3 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawObjectSprite3" );

	parms.C = C;
	parms.objectSprite = objectSprite;
	parms.objectLoc = objectLoc;
	this->ProcessEvent ( pDrawObjectSprite3, &parms, NULL );

}*/

/*struct FVector AHudCDeathmatch::CalcScreenPos ( class UCanvas* C, struct FVector objectLoc, float W, float H, bool ClipEclipse, float rX, float rY, unsigned char* clipped )
{
	static UFunction* pCalcScreenPos = 0;
	AHudCDeathmatch_execCalcScreenPos_Parms parms;

	if ( !pCalcScreenPos )
		pCalcScreenPos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CalcScreenPos" );

	parms.C = C;
	parms.objectLoc = objectLoc;
	parms.W = W;
	parms.H = H;
	parms.ClipEclipse = ClipEclipse;
	parms.rX = rX;
	parms.rY = rY;
	this->ProcessEvent ( pCalcScreenPos, &parms, NULL );

	*clipped = parms.clipped;
	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::CallSkill ( int iKey, bool bRequire, bool bSuccess )
{
	static UFunction* pCallSkill = 0;
	AHudCDeathmatch_execCallSkill_Parms parms;

	if ( !pCallSkill )
		pCallSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CallSkill" );

	parms.iKey = iKey;
	parms.bRequire = bRequire;
	parms.bSuccess = bSuccess;
	this->ProcessEvent ( pCallSkill, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawSelfKillMessage ( class UCanvas* C )
{
	static UFunction* pDrawSelfKillMessage = 0;
	AHudCDeathmatch_execDrawSelfKillMessage_Parms parms;

	if ( !pDrawSelfKillMessage )
		pDrawSelfKillMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawSelfKillMessage" );

	parms.C = C;
	this->ProcessEvent ( pDrawSelfKillMessage, &parms, NULL );

}*/

/*struct FSelfKillMessage AHudCDeathmatch::MakeSelfKillMessage ( struct FString KillerName, struct FString VictimName, class UClass* Type )
{
	static UFunction* pMakeSelfKillMessage = 0;
	AHudCDeathmatch_execMakeSelfKillMessage_Parms parms;

	if ( !pMakeSelfKillMessage )
		pMakeSelfKillMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.MakeSelfKillMessage" );

	parms.KillerName = KillerName;
	parms.VictimName = VictimName;
	parms.Type = Type;
	this->ProcessEvent ( pMakeSelfKillMessage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::RefreshKillerMark ( struct FString mKillerName )
{
	static UFunction* pRefreshKillerMark = 0;
	AHudCDeathmatch_execRefreshKillerMark_Parms parms;

	if ( !pRefreshKillerMark )
		pRefreshKillerMark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RefreshKillerMark" );

	parms.mKillerName = mKillerName;
	this->ProcessEvent ( pRefreshKillerMark, &parms, NULL );

}*/

/*void AHudCDeathmatch::OnClientReceiveDeathMessage ( class APlayerController* P, int Switch, class APlayerReplicationInfo* attackerPRI, class APlayerReplicationInfo* victimPRI, class UObject* OptionalObject )
{
	static UFunction* pOnClientReceiveDeathMessage = 0;
	AHudCDeathmatch_execOnClientReceiveDeathMessage_Parms parms;

	if ( !pOnClientReceiveDeathMessage )
		pOnClientReceiveDeathMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.OnClientReceiveDeathMessage" );

	parms.P = P;
	parms.Switch = Switch;
	parms.attackerPRI = attackerPRI;
	parms.victimPRI = victimPRI;
	parms.OptionalObject = OptionalObject;
	this->ProcessEvent ( pOnClientReceiveDeathMessage, &parms, NULL );

}*/

/*void AHudCDeathmatch::OnClientReceiveFlyingDefenceBotDeathMessage ( class APlayerController* P, class APlayerReplicationInfo* attackerPRI, class APlayerReplicationInfo* victimPRI, class UObject* OptionalObject )
{
	static UFunction* pOnClientReceiveFlyingDefenceBotDeathMessage = 0;
	AHudCDeathmatch_execOnClientReceiveFlyingDefenceBotDeathMessage_Parms parms;

	if ( !pOnClientReceiveFlyingDefenceBotDeathMessage )
		pOnClientReceiveFlyingDefenceBotDeathMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.OnClientReceiveFlyingDefenceBotDeathMessage" );

	parms.P = P;
	parms.attackerPRI = attackerPRI;
	parms.victimPRI = victimPRI;
	parms.OptionalObject = OptionalObject;
	this->ProcessEvent ( pOnClientReceiveFlyingDefenceBotDeathMessage, &parms, NULL );

}*/

/*void AHudCDeathmatch::OnClientReceiveHeliDeathMessage ( class APlayerController* P, class APlayerReplicationInfo* attackerPRI, class APlayerReplicationInfo* victimPRI, class UObject* OptionalObject )
{
	static UFunction* pOnClientReceiveHeliDeathMessage = 0;
	AHudCDeathmatch_execOnClientReceiveHeliDeathMessage_Parms parms;

	if ( !pOnClientReceiveHeliDeathMessage )
		pOnClientReceiveHeliDeathMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.OnClientReceiveHeliDeathMessage" );

	parms.P = P;
	parms.attackerPRI = attackerPRI;
	parms.victimPRI = victimPRI;
	parms.OptionalObject = OptionalObject;
	this->ProcessEvent ( pOnClientReceiveHeliDeathMessage, &parms, NULL );

}*/

/*void AHudCDeathmatch::OnClientReceiveDeathMessage_AddToConsole ( class APlayerController* P, class APlayerReplicationInfo* attackerPRI, class APlayerReplicationInfo* victimPRI, class AwDamageType* DamageType )
{
	static UFunction* pOnClientReceiveDeathMessage_AddToConsole = 0;
	AHudCDeathmatch_execOnClientReceiveDeathMessage_AddToConsole_Parms parms;

	if ( !pOnClientReceiveDeathMessage_AddToConsole )
		pOnClientReceiveDeathMessage_AddToConsole = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.OnClientReceiveDeathMessage_AddToConsole" );

	parms.P = P;
	parms.attackerPRI = attackerPRI;
	parms.victimPRI = victimPRI;
	parms.DamageType = DamageType;
	this->ProcessEvent ( pOnClientReceiveDeathMessage_AddToConsole, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawDamageIndicator ( class UCanvas* C, struct FDamageIndicationInfo Info )
{
	static UFunction* pDrawDamageIndicator = 0;
	AHudCDeathmatch_execDrawDamageIndicator_Parms parms;

	if ( !pDrawDamageIndicator )
		pDrawDamageIndicator = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDamageIndicator" );

	parms.C = C;
	parms.Info = Info;
	this->ProcessEvent ( pDrawDamageIndicator, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawDamageIndicators ( class UCanvas* C )
{
	static UFunction* pDrawDamageIndicators = 0;
	AHudCDeathmatch_execDrawDamageIndicators_Parms parms;

	if ( !pDrawDamageIndicators )
		pDrawDamageIndicators = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDamageIndicators" );

	parms.C = C;
	this->ProcessEvent ( pDrawDamageIndicators, &parms, NULL );

}*/

/*bool AHudCDeathmatch::IsHealthInDanger ( int hpBefore, int hpAfter )
{
	static UFunction* pIsHealthInDanger = 0;
	AHudCDeathmatch_execIsHealthInDanger_Parms parms;

	if ( !pIsHealthInDanger )
		pIsHealthInDanger = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.IsHealthInDanger" );

	parms.hpBefore = hpBefore;
	parms.hpAfter = hpAfter;
	this->ProcessEvent ( pIsHealthInDanger, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DrawHealthInDanger ( class UCanvas* C )
{
	static UFunction* pDrawHealthInDanger = 0;
	AHudCDeathmatch_execDrawHealthInDanger_Parms parms;

	if ( !pDrawHealthInDanger )
		pDrawHealthInDanger = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawHealthInDanger" );

	parms.C = C;
	this->ProcessEvent ( pDrawHealthInDanger, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawFallInDanger ( class UCanvas* C )
{
	static UFunction* pDrawFallInDanger = 0;
	AHudCDeathmatch_execDrawFallInDanger_Parms parms;

	if ( !pDrawFallInDanger )
		pDrawFallInDanger = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawFallInDanger" );

	parms.C = C;
	this->ProcessEvent ( pDrawFallInDanger, &parms, NULL );

}*/

/*void AHudCDeathmatch::StopNotifyFallInDanager (  )
{
	static UFunction* pStopNotifyFallInDanager = 0;
	AHudCDeathmatch_execStopNotifyFallInDanager_Parms parms;

	if ( !pStopNotifyFallInDanager )
		pStopNotifyFallInDanager = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.StopNotifyFallInDanager" );

	this->ProcessEvent ( pStopNotifyFallInDanager, &parms, NULL );

}*/

/*void AHudCDeathmatch::NotifyFallInDanger (  )
{
	static UFunction* pNotifyFallInDanger = 0;
	AHudCDeathmatch_execNotifyFallInDanger_Parms parms;

	if ( !pNotifyFallInDanger )
		pNotifyFallInDanger = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.NotifyFallInDanger" );

	this->ProcessEvent ( pNotifyFallInDanger, &parms, NULL );

}*/

/*void AHudCDeathmatch::StopNotifyHealthInDanager (  )
{
	static UFunction* pStopNotifyHealthInDanager = 0;
	AHudCDeathmatch_execStopNotifyHealthInDanager_Parms parms;

	if ( !pStopNotifyHealthInDanager )
		pStopNotifyHealthInDanager = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.StopNotifyHealthInDanager" );

	this->ProcessEvent ( pStopNotifyHealthInDanager, &parms, NULL );

}*/

/*void AHudCDeathmatch::NotifyHealthInDanger (  )
{
	static UFunction* pNotifyHealthInDanger = 0;
	AHudCDeathmatch_execNotifyHealthInDanger_Parms parms;

	if ( !pNotifyHealthInDanger )
		pNotifyHealthInDanger = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.NotifyHealthInDanger" );

	this->ProcessEvent ( pNotifyHealthInDanger, &parms, NULL );

}*/

/*void AHudCDeathmatch::ClearDamageIndicationInfos (  )
{
	static UFunction* pClearDamageIndicationInfos = 0;
	AHudCDeathmatch_execClearDamageIndicationInfos_Parms parms;

	if ( !pClearDamageIndicationInfos )
		pClearDamageIndicationInfos = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ClearDamageIndicationInfos" );

	this->ProcessEvent ( pClearDamageIndicationInfos, &parms, NULL );

}*/

/*void AHudCDeathmatch::AddDamageIndicationInfo ( struct FVector AttackerLocation, int Damage, class UClass* DamageType )
{
	static UFunction* pAddDamageIndicationInfo = 0;
	AHudCDeathmatch_execAddDamageIndicationInfo_Parms parms;

	if ( !pAddDamageIndicationInfo )
		pAddDamageIndicationInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.AddDamageIndicationInfo" );

	parms.AttackerLocation = AttackerLocation;
	parms.Damage = Damage;
	parms.DamageType = DamageType;
	this->ProcessEvent ( pAddDamageIndicationInfo, &parms, NULL );

}*/

/*void AHudCDeathmatch::NotifyTakeHit ( struct FVector AttackerLocation, int Damage, class UClass* DamageType, struct FVector Momentum, int CollisionPart )
{
	static UFunction* pNotifyTakeHit = 0;
	AHudCDeathmatch_execNotifyTakeHit_Parms parms;

	if ( !pNotifyTakeHit )
		pNotifyTakeHit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.NotifyTakeHit" );

	parms.AttackerLocation = AttackerLocation;
	parms.Damage = Damage;
	parms.DamageType = DamageType;
	parms.Momentum = Momentum;
	parms.CollisionPart = CollisionPart;
	this->ProcessEvent ( pNotifyTakeHit, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawProgressStatus ( class UCanvas* C, float Progress )
{
	static UFunction* pDrawProgressStatus = 0;
	AHudCDeathmatch_execDrawProgressStatus_Parms parms;

	if ( !pDrawProgressStatus )
		pDrawProgressStatus = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawProgressStatus" );

	parms.C = C;
	parms.Progress = Progress;
	this->ProcessEvent ( pDrawProgressStatus, &parms, NULL );

}*/

/*class UFont* AHudCDeathmatch::LoadLevelActionFont (  )
{
	static UFunction* pLoadLevelActionFont = 0;
	AHudCDeathmatch_execLoadLevelActionFont_Parms parms;

	if ( !pLoadLevelActionFont )
		pLoadLevelActionFont = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.LoadLevelActionFont" );

	this->ProcessEvent ( pLoadLevelActionFont, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DisplayPortrait ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pDisplayPortrait = 0;
	AHudCDeathmatch_execDisplayPortrait_Parms parms;

	if ( !pDisplayPortrait )
		pDisplayPortrait = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DisplayPortrait" );

	parms.PRI = PRI;
	this->ProcessEvent ( pDisplayPortrait, &parms, NULL );

}*/

/*bool AHudCDeathmatch::DrawLevelAction ( class UCanvas* C )
{
	static UFunction* pDrawLevelAction = 0;
	AHudCDeathmatch_execDrawLevelAction_Parms parms;

	if ( !pDrawLevelAction )
		pDrawLevelAction = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawLevelAction" );

	parms.C = C;
	this->ProcessEvent ( pDrawLevelAction, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DrawVehicleChargeBar ( class UCanvas* C )
{
	static UFunction* pDrawVehicleChargeBar = 0;
	AHudCDeathmatch_execDrawVehicleChargeBar_Parms parms;

	if ( !pDrawVehicleChargeBar )
		pDrawVehicleChargeBar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawVehicleChargeBar" );

	parms.C = C;
	this->ProcessEvent ( pDrawVehicleChargeBar, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawChargeBar ( class UCanvas* C )
{
	static UFunction* pDrawChargeBar = 0;
	AHudCDeathmatch_execDrawChargeBar_Parms parms;

	if ( !pDrawChargeBar )
		pDrawChargeBar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawChargeBar" );

	parms.C = C;
	this->ProcessEvent ( pDrawChargeBar, &parms, NULL );

}*/

/*void AHudCDeathmatch::ShowReloadingPulse ( float HOLD )
{
	static UFunction* pShowReloadingPulse = 0;
	AHudCDeathmatch_execShowReloadingPulse_Parms parms;

	if ( !pShowReloadingPulse )
		pShowReloadingPulse = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ShowReloadingPulse" );

	parms.HOLD = HOLD;
	this->ProcessEvent ( pShowReloadingPulse, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawDamageDealNotification ( class UCanvas* C )
{
	static UFunction* pDrawDamageDealNotification = 0;
	AHudCDeathmatch_execDrawDamageDealNotification_Parms parms;

	if ( !pDrawDamageDealNotification )
		pDrawDamageDealNotification = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDamageDealNotification" );

	parms.C = C;
	this->ProcessEvent ( pDrawDamageDealNotification, &parms, NULL );

}*/

/*void AHudCDeathmatch::ResetByChangeSpectatingPawn (  )
{
	static UFunction* pResetByChangeSpectatingPawn = 0;
	AHudCDeathmatch_execResetByChangeSpectatingPawn_Parms parms;

	if ( !pResetByChangeSpectatingPawn )
		pResetByChangeSpectatingPawn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ResetByChangeSpectatingPawn" );

	this->ProcessEvent ( pResetByChangeSpectatingPawn, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawWarfareCrosshair ( class UCanvas* C )
{
	static UFunction* pDrawWarfareCrosshair = 0;
	AHudCDeathmatch_execDrawWarfareCrosshair_Parms parms;

	if ( !pDrawWarfareCrosshair )
		pDrawWarfareCrosshair = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawWarfareCrosshair" );

	parms.C = C;
	this->ProcessEvent ( pDrawWarfareCrosshair, &parms, NULL );

}*/

/*void AHudCDeathmatch::execSetMA ( float f )
{
	static UFunction* pSetMA = 0;
	AHudCDeathmatch_execSetMA_Parms parms;

	if ( !pSetMA )
		pSetMA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SetMA" );

	parms.f = f;
	this->ProcessEvent ( pSetMA, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawDetectedBombs ( class UCanvas* C )
{
	static UFunction* pDrawDetectedBombs = 0;
	AHudCDeathmatch_execDrawDetectedBombs_Parms parms;

	if ( !pDrawDetectedBombs )
		pDrawDetectedBombs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDetectedBombs" );

	parms.C = C;
	this->ProcessEvent ( pDrawDetectedBombs, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawHudSpectating ( class UCanvas* C )
{
	static UFunction* pDrawHudSpectating = 0;
	AHudCDeathmatch_execDrawHudSpectating_Parms parms;

	if ( !pDrawHudSpectating )
		pDrawHudSpectating = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawHudSpectating" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudSpectating, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawHudPassC ( class UCanvas* C )
{
	static UFunction* pDrawHudPassC = 0;
	AHudCDeathmatch_execDrawHudPassC_Parms parms;

	if ( !pDrawHudPassC )
		pDrawHudPassC = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawHudPassC" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassC, &parms, NULL );

}*/

/*class UMaterial* AHudCDeathmatch::GetLevelImage ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pGetLevelImage = 0;
	AHudCDeathmatch_execGetLevelImage_Parms parms;

	if ( !pGetLevelImage )
		pGetLevelImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetLevelImage" );

	parms.PRI = PRI;
	this->ProcessEvent ( pGetLevelImage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DisplayDebug ( class UCanvas* Canvas, float* YL, float* YPos )
{
	static UFunction* pDisplayDebug = 0;
	AHudCDeathmatch_execDisplayDebug_Parms parms;

	if ( !pDisplayDebug )
		pDisplayDebug = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DisplayDebug" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pDisplayDebug, &parms, NULL );

	*YL = parms.YL;
	*YPos = parms.YPos;
}*/

/*void AHudCDeathmatch::DrawDebugPosition ( class UCanvas* C, class APawn* P )
{
	static UFunction* pDrawDebugPosition = 0;
	AHudCDeathmatch_execDrawDebugPosition_Parms parms;

	if ( !pDrawDebugPosition )
		pDrawDebugPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDebugPosition" );

	parms.C = C;
	parms.P = P;
	this->ProcessEvent ( pDrawDebugPosition, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawHudPassA ( class UCanvas* C )
{
	static UFunction* pDrawHudPassA = 0;
	AHudCDeathmatch_execDrawHudPassA_Parms parms;

	if ( !pDrawHudPassA )
		pDrawHudPassA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawHudPassA" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassA, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawDebug ( class UCanvas* C, int X, int dy, int* Y )
{
	static UFunction* pDrawDebug = 0;
	AHudCDeathmatch_execDrawDebug_Parms parms;

	if ( !pDrawDebug )
		pDrawDebug = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDebug" );

	parms.C = C;
	parms.X = X;
	parms.dy = dy;
	this->ProcessEvent ( pDrawDebug, &parms, NULL );

	*Y = parms.Y;
}*/

/*void AHudCDeathmatch::DrawDebug_Network ( class UCanvas* C, int X, int dy, int* Y )
{
	static UFunction* pDrawDebug_Network = 0;
	AHudCDeathmatch_execDrawDebug_Network_Parms parms;

	if ( !pDrawDebug_Network )
		pDrawDebug_Network = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDebug_Network" );

	parms.C = C;
	parms.X = X;
	parms.dy = dy;
	this->ProcessEvent ( pDrawDebug_Network, &parms, NULL );

	*Y = parms.Y;
}*/

/*void AHudCDeathmatch::execwclearNet (  )
{
	static UFunction* pwclearNet = 0;
	AHudCDeathmatch_execwclearNet_Parms parms;

	if ( !pwclearNet )
		pwclearNet = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.wclearNet" );

	this->ProcessEvent ( pwclearNet, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawDebug_DrawDebugUserWeaponStates ( class UCanvas* C, int X, int dy, int* Y )
{
	static UFunction* pDrawDebug_DrawDebugUserWeaponStates = 0;
	AHudCDeathmatch_execDrawDebug_DrawDebugUserWeaponStates_Parms parms;

	if ( !pDrawDebug_DrawDebugUserWeaponStates )
		pDrawDebug_DrawDebugUserWeaponStates = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDebug_DrawDebugUserWeaponStates" );

	parms.C = C;
	parms.X = X;
	parms.dy = dy;
	this->ProcessEvent ( pDrawDebug_DrawDebugUserWeaponStates, &parms, NULL );

	*Y = parms.Y;
}*/

/*void AHudCDeathmatch::DrawDebug_Inventory ( class UCanvas* C, int X, int dy, int* Y )
{
	static UFunction* pDrawDebug_Inventory = 0;
	AHudCDeathmatch_execDrawDebug_Inventory_Parms parms;

	if ( !pDrawDebug_Inventory )
		pDrawDebug_Inventory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDebug_Inventory" );

	parms.C = C;
	parms.X = X;
	parms.dy = dy;
	this->ProcessEvent ( pDrawDebug_Inventory, &parms, NULL );

	*Y = parms.Y;
}*/

/*void AHudCDeathmatch::DrawDebugEmitters ( class UCanvas* C )
{
	static UFunction* pDrawDebugEmitters = 0;
	AHudCDeathmatch_execDrawDebugEmitters_Parms parms;

	if ( !pDrawDebugEmitters )
		pDrawDebugEmitters = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDebugEmitters" );

	parms.C = C;
	this->ProcessEvent ( pDrawDebugEmitters, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawDebugHelicopter ( class UCanvas* C )
{
	static UFunction* pDrawDebugHelicopter = 0;
	AHudCDeathmatch_execDrawDebugHelicopter_Parms parms;

	if ( !pDrawDebugHelicopter )
		pDrawDebugHelicopter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDebugHelicopter" );

	parms.C = C;
	this->ProcessEvent ( pDrawDebugHelicopter, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawDebugAirStrike ( class UCanvas* C )
{
	static UFunction* pDrawDebugAirStrike = 0;
	AHudCDeathmatch_execDrawDebugAirStrike_Parms parms;

	if ( !pDrawDebugAirStrike )
		pDrawDebugAirStrike = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawDebugAirStrike" );

	parms.C = C;
	this->ProcessEvent ( pDrawDebugAirStrike, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawSpecialPositions ( class UCanvas* C )
{
	static UFunction* pDrawSpecialPositions = 0;
	AHudCDeathmatch_execDrawSpecialPositions_Parms parms;

	if ( !pDrawSpecialPositions )
		pDrawSpecialPositions = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawSpecialPositions" );

	parms.C = C;
	this->ProcessEvent ( pDrawSpecialPositions, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawTimer2 ( class UCanvas* C )
{
	static UFunction* pDrawTimer2 = 0;
	AHudCDeathmatch_execDrawTimer2_Parms parms;

	if ( !pDrawTimer2 )
		pDrawTimer2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawTimer2" );

	parms.C = C;
	this->ProcessEvent ( pDrawTimer2, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawTimer1 ( class UCanvas* C )
{
	static UFunction* pDrawTimer1 = 0;
	AHudCDeathmatch_execDrawTimer1_Parms parms;

	if ( !pDrawTimer1 )
		pDrawTimer1 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawTimer1" );

	parms.C = C;
	this->ProcessEvent ( pDrawTimer1, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawAmmoLinear2 ( class UCanvas* C, int Ammo, int MaxAmmo, struct FAmmoSet as )
{
	static UFunction* pDrawAmmoLinear2 = 0;
	AHudCDeathmatch_execDrawAmmoLinear2_Parms parms;

	if ( !pDrawAmmoLinear2 )
		pDrawAmmoLinear2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAmmoLinear2" );

	parms.C = C;
	parms.Ammo = Ammo;
	parms.MaxAmmo = MaxAmmo;
	parms.as = as;
	this->ProcessEvent ( pDrawAmmoLinear2, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawAmmoLinear ( class UCanvas* C, int Ammo, int MaxAmmo, int digitOffset, struct FNumericWidget ammoWidget, struct FDigitSet* AmmoSet )
{
	static UFunction* pDrawAmmoLinear = 0;
	AHudCDeathmatch_execDrawAmmoLinear_Parms parms;

	if ( !pDrawAmmoLinear )
		pDrawAmmoLinear = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAmmoLinear" );

	parms.C = C;
	parms.Ammo = Ammo;
	parms.MaxAmmo = MaxAmmo;
	parms.digitOffset = digitOffset;
	parms.ammoWidget = ammoWidget;
	this->ProcessEvent ( pDrawAmmoLinear, &parms, NULL );

	*AmmoSet = parms.AmmoSet;
}*/

/*void AHudCDeathmatch::DrawAmmo100 ( class UCanvas* C, int Ammo, int MaxAmmo, int ammoPerLine )
{
	static UFunction* pDrawAmmo100 = 0;
	AHudCDeathmatch_execDrawAmmo100_Parms parms;

	if ( !pDrawAmmo100 )
		pDrawAmmo100 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAmmo100" );

	parms.C = C;
	parms.Ammo = Ammo;
	parms.MaxAmmo = MaxAmmo;
	parms.ammoPerLine = ammoPerLine;
	this->ProcessEvent ( pDrawAmmo100, &parms, NULL );

}*/

/*void AHudCDeathmatch::DecideAmmoNum ( int Ammo, int MaxAmmo, int* ammoDefault, int* ammoUsed )
{
	static UFunction* pDecideAmmoNum = 0;
	AHudCDeathmatch_execDecideAmmoNum_Parms parms;

	if ( !pDecideAmmoNum )
		pDecideAmmoNum = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DecideAmmoNum" );

	parms.Ammo = Ammo;
	parms.MaxAmmo = MaxAmmo;
	this->ProcessEvent ( pDecideAmmoNum, &parms, NULL );

	*ammoDefault = parms.ammoDefault;
	*ammoUsed = parms.ammoUsed;
}*/

/*bool AHudCDeathmatch::IsAmmoShortage ( int Ammo, int MaxAmmo )
{
	static UFunction* pIsAmmoShortage = 0;
	AHudCDeathmatch_execIsAmmoShortage_Parms parms;

	if ( !pIsAmmoShortage )
		pIsAmmoShortage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.IsAmmoShortage" );

	parms.Ammo = Ammo;
	parms.MaxAmmo = MaxAmmo;
	this->ProcessEvent ( pIsAmmoShortage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DrawAmmoFlameThrower2 ( class UCanvas* C, int curr, int Max )
{
	static UFunction* pDrawAmmoFlameThrower2 = 0;
	AHudCDeathmatch_execDrawAmmoFlameThrower2_Parms parms;

	if ( !pDrawAmmoFlameThrower2 )
		pDrawAmmoFlameThrower2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAmmoFlameThrower2" );

	parms.C = C;
	parms.curr = curr;
	parms.Max = Max;
	this->ProcessEvent ( pDrawAmmoFlameThrower2, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawAmmoFlameThrower ( class UCanvas* C, int curr, int Max )
{
	static UFunction* pDrawAmmoFlameThrower = 0;
	AHudCDeathmatch_execDrawAmmoFlameThrower_Parms parms;

	if ( !pDrawAmmoFlameThrower )
		pDrawAmmoFlameThrower = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAmmoFlameThrower" );

	parms.C = C;
	parms.curr = curr;
	parms.Max = Max;
	this->ProcessEvent ( pDrawAmmoFlameThrower, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawAmmoDemo ( class UCanvas* C )
{
	static UFunction* pDrawAmmoDemo = 0;
	AHudCDeathmatch_execDrawAmmoDemo_Parms parms;

	if ( !pDrawAmmoDemo )
		pDrawAmmoDemo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAmmoDemo" );

	parms.C = C;
	this->ProcessEvent ( pDrawAmmoDemo, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawAmmo ( class UCanvas* C )
{
	static UFunction* pDrawAmmo = 0;
	AHudCDeathmatch_execDrawAmmo_Parms parms;

	if ( !pDrawAmmo )
		pDrawAmmo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAmmo" );

	parms.C = C;
	this->ProcessEvent ( pDrawAmmo, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawGaugeOverHeat ( class UCanvas* C, float iRatio )
{
	static UFunction* pDrawGaugeOverHeat = 0;
	AHudCDeathmatch_execDrawGaugeOverHeat_Parms parms;

	if ( !pDrawGaugeOverHeat )
		pDrawGaugeOverHeat = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawGaugeOverHeat" );

	parms.C = C;
	parms.iRatio = iRatio;
	this->ProcessEvent ( pDrawGaugeOverHeat, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawWeaponImage ( class UCanvas* C, bool bShowSpectating, struct FString* sWeaponName )
{
	static UFunction* pDrawWeaponImage = 0;
	AHudCDeathmatch_execDrawWeaponImage_Parms parms;

	if ( !pDrawWeaponImage )
		pDrawWeaponImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawWeaponImage" );

	parms.C = C;
	parms.bShowSpectating = bShowSpectating;
	this->ProcessEvent ( pDrawWeaponImage, &parms, NULL );

	*sWeaponName = parms.sWeaponName;
}*/

/*void AHudCDeathmatch::DrawAmmoSeparator ( class UCanvas* C )
{
	static UFunction* pDrawAmmoSeparator = 0;
	AHudCDeathmatch_execDrawAmmoSeparator_Parms parms;

	if ( !pDrawAmmoSeparator )
		pDrawAmmoSeparator = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAmmoSeparator" );

	parms.C = C;
	this->ProcessEvent ( pDrawAmmoSeparator, &parms, NULL );

}*/

/*void AHudCDeathmatch::CheckUsingSkillList ( class AwWeapon* Wpn, int* iState )
{
	static UFunction* pCheckUsingSkillList = 0;
	AHudCDeathmatch_execCheckUsingSkillList_Parms parms;

	if ( !pCheckUsingSkillList )
		pCheckUsingSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CheckUsingSkillList" );

	parms.Wpn = Wpn;
	this->ProcessEvent ( pCheckUsingSkillList, &parms, NULL );

	*iState = parms.iState;
}*/

/*class UMaterial* AHudCDeathmatch::GetSkillIconByWeaponID ( int nWeaponID )
{
	static UFunction* pGetSkillIconByWeaponID = 0;
	AHudCDeathmatch_execGetSkillIconByWeaponID_Parms parms;

	if ( !pGetSkillIconByWeaponID )
		pGetSkillIconByWeaponID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetSkillIconByWeaponID" );

	parms.nWeaponID = nWeaponID;
	this->ProcessEvent ( pGetSkillIconByWeaponID, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::InsertUsingSkillList ( int SkillID, int SubSkillID )
{
	static UFunction* pInsertUsingSkillList = 0;
	AHudCDeathmatch_execInsertUsingSkillList_Parms parms;

	if ( !pInsertUsingSkillList )
		pInsertUsingSkillList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.InsertUsingSkillList" );

	parms.SkillID = SkillID;
	parms.SubSkillID = SubSkillID;
	this->ProcessEvent ( pInsertUsingSkillList, &parms, NULL );

}*/

/*void AHudCDeathmatch::CheckPawnOwnerSkill ( int* skillC4, int* skillAirStirke, int* skillRPG )
{
	static UFunction* pCheckPawnOwnerSkill = 0;
	AHudCDeathmatch_execCheckPawnOwnerSkill_Parms parms;

	if ( !pCheckPawnOwnerSkill )
		pCheckPawnOwnerSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CheckPawnOwnerSkill" );

	parms.skillC4 = *skillC4;
	parms.skillAirStirke = *skillAirStirke;
	parms.skillRPG = *skillRPG;
	this->ProcessEvent ( pCheckPawnOwnerSkill, &parms, NULL );

	*skillC4 = parms.skillC4;
	*skillAirStirke = parms.skillAirStirke;
	*skillRPG = parms.skillRPG;
}*/

/*bool AHudCDeathmatch::HasItemInMyInventory ( bool bCheck, int ItemID1, int ItemID2 )
{
	static UFunction* pHasItemInMyInventory = 0;
	AHudCDeathmatch_execHasItemInMyInventory_Parms parms;

	if ( !pHasItemInMyInventory )
		pHasItemInMyInventory = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.HasItemInMyInventory" );

	parms.bCheck = bCheck;
	parms.ItemID1 = ItemID1;
	parms.ItemID2 = ItemID2;
	this->ProcessEvent ( pHasItemInMyInventory, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::InitSkillFlag (  )
{
	static UFunction* pInitSkillFlag = 0;
	AHudCDeathmatch_execInitSkillFlag_Parms parms;

	if ( !pInitSkillFlag )
		pInitSkillFlag = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.InitSkillFlag" );

	this->ProcessEvent ( pInitSkillFlag, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawSkill ( class UCanvas* C )
{
	static UFunction* pDrawSkill = 0;
	AHudCDeathmatch_execDrawSkill_Parms parms;

	if ( !pDrawSkill )
		pDrawSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawSkill" );

	parms.C = C;
	this->ProcessEvent ( pDrawSkill, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawSkill_Slot6 ( class UCanvas* C )
{
	static UFunction* pDrawSkill_Slot6 = 0;
	AHudCDeathmatch_execDrawSkill_Slot6_Parms parms;

	if ( !pDrawSkill_Slot6 )
		pDrawSkill_Slot6 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawSkill_Slot6" );

	parms.C = C;
	this->ProcessEvent ( pDrawSkill_Slot6, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawSkill_Slot5 ( class UCanvas* C )
{
	static UFunction* pDrawSkill_Slot5 = 0;
	AHudCDeathmatch_execDrawSkill_Slot5_Parms parms;

	if ( !pDrawSkill_Slot5 )
		pDrawSkill_Slot5 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawSkill_Slot5" );

	parms.C = C;
	this->ProcessEvent ( pDrawSkill_Slot5, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawHudPassA_Score ( class UCanvas* C )
{
	static UFunction* pDrawHudPassA_Score = 0;
	AHudCDeathmatch_execDrawHudPassA_Score_Parms parms;

	if ( !pDrawHudPassA_Score )
		pDrawHudPassA_Score = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawHudPassA_Score" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassA_Score, &parms, NULL );

}*/

/*void AHudCDeathmatch::NotifyDeath ( class APawn* P )
{
	static UFunction* pNotifyDeath = 0;
	AHudCDeathmatch_execNotifyDeath_Parms parms;

	if ( !pNotifyDeath )
		pNotifyDeath = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.NotifyDeath" );

	parms.P = P;
	this->ProcessEvent ( pNotifyDeath, &parms, NULL );

}*/

/*float AHudCDeathmatch::GetTeamDeathTextureScale ( struct FTeamDeathInfo Info )
{
	static UFunction* pGetTeamDeathTextureScale = 0;
	AHudCDeathmatch_execGetTeamDeathTextureScale_Parms parms;

	if ( !pGetTeamDeathTextureScale )
		pGetTeamDeathTextureScale = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetTeamDeathTextureScale" );

	parms.Info = Info;
	this->ProcessEvent ( pGetTeamDeathTextureScale, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class FColor AHudCDeathmatch::GetTeamDeathTextureColor ( struct FTeamDeathInfo Info )
{
	static UFunction* pGetTeamDeathTextureColor = 0;
	AHudCDeathmatch_execGetTeamDeathTextureColor_Parms parms;

	if ( !pGetTeamDeathTextureColor )
		pGetTeamDeathTextureColor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetTeamDeathTextureColor" );

	parms.Info = Info;
	this->ProcessEvent ( pGetTeamDeathTextureColor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DrawTeamDeathInfo ( class UCanvas* C, struct FVector ScreenPos, struct FVector camLoc, struct FRotator camRot, struct FTeamDeathInfo Info )
{
	static UFunction* pDrawTeamDeathInfo = 0;
	AHudCDeathmatch_execDrawTeamDeathInfo_Parms parms;

	if ( !pDrawTeamDeathInfo )
		pDrawTeamDeathInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawTeamDeathInfo" );

	parms.C = C;
	parms.ScreenPos = ScreenPos;
	parms.camLoc = camLoc;
	parms.camRot = camRot;
	parms.Info = Info;
	this->ProcessEvent ( pDrawTeamDeathInfo, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawAllTeamDeathInfo ( class UCanvas* C )
{
	static UFunction* pDrawAllTeamDeathInfo = 0;
	AHudCDeathmatch_execDrawAllTeamDeathInfo_Parms parms;

	if ( !pDrawAllTeamDeathInfo )
		pDrawAllTeamDeathInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAllTeamDeathInfo" );

	parms.C = C;
	this->ProcessEvent ( pDrawAllTeamDeathInfo, &parms, NULL );

}*/

/*void AHudCDeathmatch::AddTeamDeathInfo ( class APawn* P, class APlayerReplicationInfo* PRI, float FadeTime, float Duration )
{
	static UFunction* pAddTeamDeathInfo = 0;
	AHudCDeathmatch_execAddTeamDeathInfo_Parms parms;

	if ( !pAddTeamDeathInfo )
		pAddTeamDeathInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.AddTeamDeathInfo" );

	parms.P = P;
	parms.PRI = PRI;
	parms.FadeTime = FadeTime;
	parms.Duration = Duration;
	this->ProcessEvent ( pAddTeamDeathInfo, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawPosture ( class UCanvas* C, bool bShowSpectating )
{
	static UFunction* pDrawPosture = 0;
	AHudCDeathmatch_execDrawPosture_Parms parms;

	if ( !pDrawPosture )
		pDrawPosture = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawPosture" );

	parms.C = C;
	parms.bShowSpectating = bShowSpectating;
	this->ProcessEvent ( pDrawPosture, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawHpStamina ( class UCanvas* C, bool bShowSpectating )
{
	static UFunction* pDrawHpStamina = 0;
	AHudCDeathmatch_execDrawHpStamina_Parms parms;

	if ( !pDrawHpStamina )
		pDrawHpStamina = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawHpStamina" );

	parms.C = C;
	parms.bShowSpectating = bShowSpectating;
	this->ProcessEvent ( pDrawHpStamina, &parms, NULL );

}*/

/*void AHudCDeathmatch::SellectEffectBar (  )
{
	static UFunction* pSellectEffectBar = 0;
	AHudCDeathmatch_execSellectEffectBar_Parms parms;

	if ( !pSellectEffectBar )
		pSellectEffectBar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SellectEffectBar" );

	this->ProcessEvent ( pSellectEffectBar, &parms, NULL );

}*/

/*float AHudCDeathmatch::CalculateHPBar ( bool bDamage, bool bRecovery )
{
	static UFunction* pCalculateHPBar = 0;
	AHudCDeathmatch_execCalculateHPBar_Parms parms;

	if ( !pCalculateHPBar )
		pCalculateHPBar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CalculateHPBar" );

	parms.bDamage = bDamage;
	parms.bRecovery = bRecovery;
	this->ProcessEvent ( pCalculateHPBar, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::DisplayVoiceGain ( class UCanvas* C )
{
	static UFunction* pDisplayVoiceGain = 0;
	AHudCDeathmatch_execDisplayVoiceGain_Parms parms;

	if ( !pDisplayVoiceGain )
		pDisplayVoiceGain = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DisplayVoiceGain" );

	parms.C = C;
	this->ProcessEvent ( pDisplayVoiceGain, &parms, NULL );

}*/

/*void AHudCDeathmatch::ZoomFadeOut ( class UCanvas* C )
{
	static UFunction* pZoomFadeOut = 0;
	AHudCDeathmatch_execZoomFadeOut_Parms parms;

	if ( !pZoomFadeOut )
		pZoomFadeOut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ZoomFadeOut" );

	parms.C = C;
	this->ProcessEvent ( pZoomFadeOut, &parms, NULL );

}*/

/*void AHudCDeathmatch::FadeZoom (  )
{
	static UFunction* pFadeZoom = 0;
	AHudCDeathmatch_execFadeZoom_Parms parms;

	if ( !pFadeZoom )
		pFadeZoom = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.FadeZoom" );

	this->ProcessEvent ( pFadeZoom, &parms, NULL );

}*/

/*void AHudCDeathmatch::DisplayEnemyName ( class UCanvas* C, class APlayerReplicationInfo* PRI )
{
	static UFunction* pDisplayEnemyName = 0;
	AHudCDeathmatch_execDisplayEnemyName_Parms parms;

	if ( !pDisplayEnemyName )
		pDisplayEnemyName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DisplayEnemyName" );

	parms.C = C;
	parms.PRI = PRI;
	this->ProcessEvent ( pDisplayEnemyName, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawEnemyName ( class UCanvas* C )
{
	static UFunction* pDrawEnemyName = 0;
	AHudCDeathmatch_execDrawEnemyName_Parms parms;

	if ( !pDrawEnemyName )
		pDrawEnemyName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawEnemyName" );

	parms.C = C;
	this->ProcessEvent ( pDrawEnemyName, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawCrosshair ( class UCanvas* C )
{
	static UFunction* pDrawCrosshair = 0;
	AHudCDeathmatch_execDrawCrosshair_Parms parms;

	if ( !pDrawCrosshair )
		pDrawCrosshair = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawCrosshair" );

	parms.C = C;
	this->ProcessEvent ( pDrawCrosshair, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawWarfareCrosshair_Image ( class UCanvas* C, class UMaterial* mat )
{
	static UFunction* pDrawWarfareCrosshair_Image = 0;
	AHudCDeathmatch_execDrawWarfareCrosshair_Image_Parms parms;

	if ( !pDrawWarfareCrosshair_Image )
		pDrawWarfareCrosshair_Image = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawWarfareCrosshair_Image" );

	parms.C = C;
	parms.mat = mat;
	this->ProcessEvent ( pDrawWarfareCrosshair_Image, &parms, NULL );

}*/

/*void AHudCDeathmatch::UpdateCrossHairSpread (  )
{
	static UFunction* pUpdateCrossHairSpread = 0;
	AHudCDeathmatch_execUpdateCrossHairSpread_Parms parms;

	if ( !pUpdateCrossHairSpread )
		pUpdateCrossHairSpread = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdateCrossHairSpread" );

	this->ProcessEvent ( pUpdateCrossHairSpread, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawTurretCrossHair ( class UCanvas* C )
{
	static UFunction* pDrawTurretCrossHair = 0;
	AHudCDeathmatch_execDrawTurretCrossHair_Parms parms;

	if ( !pDrawTurretCrossHair )
		pDrawTurretCrossHair = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawTurretCrossHair" );

	parms.C = C;
	this->ProcessEvent ( pDrawTurretCrossHair, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawStaticCrossHair ( class UCanvas* C )
{
	static UFunction* pDrawStaticCrossHair = 0;
	AHudCDeathmatch_execDrawStaticCrossHair_Parms parms;

	if ( !pDrawStaticCrossHair )
		pDrawStaticCrossHair = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawStaticCrossHair" );

	parms.C = C;
	this->ProcessEvent ( pDrawStaticCrossHair, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawHUDAnimWidget ( float DefaultScale, float PickUPTime, float AnimTime, float AnimScale, struct FSpriteWidget* HUDPiece )
{
	static UFunction* pDrawHUDAnimWidget = 0;
	AHudCDeathmatch_execDrawHUDAnimWidget_Parms parms;

	if ( !pDrawHUDAnimWidget )
		pDrawHUDAnimWidget = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawHUDAnimWidget" );

	parms.DefaultScale = DefaultScale;
	parms.PickUPTime = PickUPTime;
	parms.AnimTime = AnimTime;
	parms.AnimScale = AnimScale;
	this->ProcessEvent ( pDrawHUDAnimWidget, &parms, NULL );

	*HUDPiece = parms.HUDPiece;
}*/

/*void AHudCDeathmatch::DrawHUDAnimDigit ( float DefaultScale, float PickUPTime, float AnimTime, class FColor DefaultColor, class FColor colorHighlight, struct FNumericWidget* HUDPiece )
{
	static UFunction* pDrawHUDAnimDigit = 0;
	AHudCDeathmatch_execDrawHUDAnimDigit_Parms parms;

	if ( !pDrawHUDAnimDigit )
		pDrawHUDAnimDigit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawHUDAnimDigit" );

	parms.DefaultScale = DefaultScale;
	parms.PickUPTime = PickUPTime;
	parms.AnimTime = AnimTime;
	parms.DefaultColor = DefaultColor;
	parms.colorHighlight = colorHighlight;
	this->ProcessEvent ( pDrawHUDAnimDigit, &parms, NULL );

	*HUDPiece = parms.HUDPiece;
}*/

/*struct FString AHudCDeathmatch::GetInfoString (  )
{
	static UFunction* pGetInfoString = 0;
	AHudCDeathmatch_execGetInfoString_Parms parms;

	if ( !pGetInfoString )
		pGetInfoString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetInfoString" );

	this->ProcessEvent ( pGetInfoString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::ShowEnemyWhoKillMe ( class UCanvas* C )
{
	static UFunction* pShowEnemyWhoKillMe = 0;
	AHudCDeathmatch_execShowEnemyWhoKillMe_Parms parms;

	if ( !pShowEnemyWhoKillMe )
		pShowEnemyWhoKillMe = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ShowEnemyWhoKillMe" );

	parms.C = C;
	this->ProcessEvent ( pShowEnemyWhoKillMe, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawSpectatingHud ( class UCanvas* C )
{
	static UFunction* pDrawSpectatingHud = 0;
	AHudCDeathmatch_execDrawSpectatingHud_Parms parms;

	if ( !pDrawSpectatingHud )
		pDrawSpectatingHud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawSpectatingHud" );

	parms.C = C;
	this->ProcessEvent ( pDrawSpectatingHud, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawViewTargetInfo ( class UCanvas* C )
{
	static UFunction* pDrawViewTargetInfo = 0;
	AHudCDeathmatch_execDrawViewTargetInfo_Parms parms;

	if ( !pDrawViewTargetInfo )
		pDrawViewTargetInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawViewTargetInfo" );

	parms.C = C;
	this->ProcessEvent ( pDrawViewTargetInfo, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawResultScore ( class UCanvas* C )
{
	static UFunction* pDrawResultScore = 0;
	AHudCDeathmatch_execDrawResultScore_Parms parms;

	if ( !pDrawResultScore )
		pDrawResultScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawResultScore" );

	parms.C = C;
	this->ProcessEvent ( pDrawResultScore, &parms, NULL );

}*/

/*bool AHudCDeathmatch::DrawResult ( class UCanvas* C )
{
	static UFunction* pDrawResult = 0;
	AHudCDeathmatch_execDrawResult_Parms parms;

	if ( !pDrawResult )
		pDrawResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawResult" );

	parms.C = C;
	this->ProcessEvent ( pDrawResult, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::SendQuestUpdate (  )
{
	static UFunction* pSendQuestUpdate = 0;
	AHudCDeathmatch_execSendQuestUpdate_Parms parms;

	if ( !pSendQuestUpdate )
		pSendQuestUpdate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SendQuestUpdate" );

	this->ProcessEvent ( pSendQuestUpdate, &parms, NULL );

}*/

/*bool AHudCDeathmatch::IsInCinematic (  )
{
	static UFunction* pIsInCinematic = 0;
	AHudCDeathmatch_execIsInCinematic_Parms parms;

	if ( !pIsInCinematic )
		pIsInCinematic = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.IsInCinematic" );

	this->ProcessEvent ( pIsInCinematic, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class FColor AHudCDeathmatch::GetTeamColor ( unsigned char TeamNum )
{
	static UFunction* pGetTeamColor = 0;
	AHudCDeathmatch_execGetTeamColor_Parms parms;

	if ( !pGetTeamColor )
		pGetTeamColor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetTeamColor" );

	parms.TeamNum = TeamNum;
	this->ProcessEvent ( pGetTeamColor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AHudCDeathmatch::GetScoreTagLine (  )
{
	static UFunction* pGetScoreTagLine = 0;
	AHudCDeathmatch_execGetScoreTagLine_Parms parms;

	if ( !pGetScoreTagLine )
		pGetScoreTagLine = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetScoreTagLine" );

	this->ProcessEvent ( pGetScoreTagLine, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AHudCDeathmatch::GetScoreValue ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pGetScoreValue = 0;
	AHudCDeathmatch_execGetScoreValue_Parms parms;

	if ( !pGetScoreValue )
		pGetScoreValue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetScoreValue" );

	parms.PRI = PRI;
	this->ProcessEvent ( pGetScoreValue, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AHudCDeathmatch::GetScoreText (  )
{
	static UFunction* pGetScoreText = 0;
	AHudCDeathmatch_execGetScoreText_Parms parms;

	if ( !pGetScoreText )
		pGetScoreText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GetScoreText" );

	this->ProcessEvent ( pGetScoreText, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::CalculateScore (  )
{
	static UFunction* pCalculateScore = 0;
	AHudCDeathmatch_execCalculateScore_Parms parms;

	if ( !pCalculateScore )
		pCalculateScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CalculateScore" );

	this->ProcessEvent ( pCalculateScore, &parms, NULL );

}*/

/*void AHudCDeathmatch::CalculateAmmo (  )
{
	static UFunction* pCalculateAmmo = 0;
	AHudCDeathmatch_execCalculateAmmo_Parms parms;

	if ( !pCalculateAmmo )
		pCalculateAmmo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CalculateAmmo" );

	this->ProcessEvent ( pCalculateAmmo, &parms, NULL );

}*/

/*void AHudCDeathmatch::CalculateEnergy (  )
{
	static UFunction* pCalculateEnergy = 0;
	AHudCDeathmatch_execCalculateEnergy_Parms parms;

	if ( !pCalculateEnergy )
		pCalculateEnergy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CalculateEnergy" );

	this->ProcessEvent ( pCalculateEnergy, &parms, NULL );

}*/

/*void AHudCDeathmatch::CalculateShield (  )
{
	static UFunction* pCalculateShield = 0;
	AHudCDeathmatch_execCalculateShield_Parms parms;

	if ( !pCalculateShield )
		pCalculateShield = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CalculateShield" );

	this->ProcessEvent ( pCalculateShield, &parms, NULL );

}*/

/*void AHudCDeathmatch::CalculateHealth (  )
{
	static UFunction* pCalculateHealth = 0;
	AHudCDeathmatch_execCalculateHealth_Parms parms;

	if ( !pCalculateHealth )
		pCalculateHealth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CalculateHealth" );

	this->ProcessEvent ( pCalculateHealth, &parms, NULL );

}*/

/*void AHudCDeathmatch::UpdateRankAndSpread ( class UCanvas* C )
{
	static UFunction* pUpdateRankAndSpread = 0;
	AHudCDeathmatch_execUpdateRankAndSpread_Parms parms;

	if ( !pUpdateRankAndSpread )
		pUpdateRankAndSpread = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdateRankAndSpread" );

	parms.C = C;
	this->ProcessEvent ( pUpdateRankAndSpread, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawUDamage ( class UCanvas* C )
{
	static UFunction* pDrawUDamage = 0;
	AHudCDeathmatch_execDrawUDamage_Parms parms;

	if ( !pDrawUDamage )
		pDrawUDamage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawUDamage" );

	parms.C = C;
	this->ProcessEvent ( pDrawUDamage, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawTimer ( class UCanvas* C )
{
	static UFunction* pDrawTimer = 0;
	AHudCDeathmatch_execDrawTimer_Parms parms;

	if ( !pDrawTimer )
		pDrawTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawTimer" );

	parms.C = C;
	this->ProcessEvent ( pDrawTimer, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawAdrenaline ( class UCanvas* C )
{
	static UFunction* pDrawAdrenaline = 0;
	AHudCDeathmatch_execDrawAdrenaline_Parms parms;

	if ( !pDrawAdrenaline )
		pDrawAdrenaline = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAdrenaline" );

	parms.C = C;
	this->ProcessEvent ( pDrawAdrenaline, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawVehicleName ( class UCanvas* C )
{
	static UFunction* pDrawVehicleName = 0;
	AHudCDeathmatch_execDrawVehicleName_Parms parms;

	if ( !pDrawVehicleName )
		pDrawVehicleName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawVehicleName" );

	parms.C = C;
	this->ProcessEvent ( pDrawVehicleName, &parms, NULL );

}*/

/*void AHudCDeathmatch::PlaySoundRecovery (  )
{
	static UFunction* pPlaySoundRecovery = 0;
	AHudCDeathmatch_execPlaySoundRecovery_Parms parms;

	if ( !pPlaySoundRecovery )
		pPlaySoundRecovery = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.PlaySoundRecovery" );

	this->ProcessEvent ( pPlaySoundRecovery, &parms, NULL );

}*/

/*void AHudCDeathmatch::PlaySoundStop ( class UCanvas* C )
{
	static UFunction* pPlaySoundStop = 0;
	AHudCDeathmatch_execPlaySoundStop_Parms parms;

	if ( !pPlaySoundStop )
		pPlaySoundStop = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.PlaySoundStop" );

	parms.C = C;
	this->ProcessEvent ( pPlaySoundStop, &parms, NULL );

}*/

/*void AHudCDeathmatch::updateScore (  )
{
	static UFunction* pupdateScore = 0;
	AHudCDeathmatch_execupdateScore_Parms parms;

	if ( !pupdateScore )
		pupdateScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.updateScore" );

	this->ProcessEvent ( pupdateScore, &parms, NULL );

}*/

/*void AHudCDeathmatch::UpdateHUD (  )
{
	static UFunction* pUpdateHUD = 0;
	AHudCDeathmatch_execUpdateHUD_Parms parms;

	if ( !pUpdateHUD )
		pUpdateHUD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdateHUD" );

	this->ProcessEvent ( pUpdateHUD, &parms, NULL );

}*/

/*void AHudCDeathmatch::DoUpdateTime (  )
{
	static UFunction* pDoUpdateTime = 0;
	AHudCDeathmatch_execDoUpdateTime_Parms parms;

	if ( !pDoUpdateTime )
		pDoUpdateTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DoUpdateTime" );

	this->ProcessEvent ( pDoUpdateTime, &parms, NULL );

}*/

/*void AHudCDeathmatch::UpdateDigitsMisc (  )
{
	static UFunction* pUpdateDigitsMisc = 0;
	AHudCDeathmatch_execUpdateDigitsMisc_Parms parms;

	if ( !pUpdateDigitsMisc )
		pUpdateDigitsMisc = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdateDigitsMisc" );

	this->ProcessEvent ( pUpdateDigitsMisc, &parms, NULL );

}*/

/*void AHudCDeathmatch::UpdateDigitsHealth (  )
{
	static UFunction* pUpdateDigitsHealth = 0;
	AHudCDeathmatch_execUpdateDigitsHealth_Parms parms;

	if ( !pUpdateDigitsHealth )
		pUpdateDigitsHealth = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdateDigitsHealth" );

	this->ProcessEvent ( pUpdateDigitsHealth, &parms, NULL );

}*/

/*void AHudCDeathmatch::UpdateSprint (  )
{
	static UFunction* pUpdateSprint = 0;
	AHudCDeathmatch_execUpdateSprint_Parms parms;

	if ( !pUpdateSprint )
		pUpdateSprint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdateSprint" );

	this->ProcessEvent ( pUpdateSprint, &parms, NULL );

}*/

/*void AHudCDeathmatch::UpdateTimer ( int* TimeMinutes, int* TimeSeconds )
{
	static UFunction* pUpdateTimer = 0;
	AHudCDeathmatch_execUpdateTimer_Parms parms;

	if ( !pUpdateTimer )
		pUpdateTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdateTimer" );

	parms.TimeMinutes = *TimeMinutes;
	parms.TimeSeconds = *TimeSeconds;
	this->ProcessEvent ( pUpdateTimer, &parms, NULL );

	*TimeMinutes = parms.TimeMinutes;
	*TimeSeconds = parms.TimeSeconds;
}*/

/*void AHudCDeathmatch::SetDigitsTimer2 ( int Min, int sec )
{
	static UFunction* pSetDigitsTimer2 = 0;
	AHudCDeathmatch_execSetDigitsTimer2_Parms parms;

	if ( !pSetDigitsTimer2 )
		pSetDigitsTimer2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SetDigitsTimer2" );

	parms.Min = Min;
	parms.sec = sec;
	this->ProcessEvent ( pSetDigitsTimer2, &parms, NULL );

}*/

/*void AHudCDeathmatch::SetDigitsTimer1 ( int Min, int sec )
{
	static UFunction* pSetDigitsTimer1 = 0;
	AHudCDeathmatch_execSetDigitsTimer1_Parms parms;

	if ( !pSetDigitsTimer1 )
		pSetDigitsTimer1 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SetDigitsTimer1" );

	parms.Min = Min;
	parms.sec = sec;
	this->ProcessEvent ( pSetDigitsTimer1, &parms, NULL );

}*/

/*void AHudCDeathmatch::SetDigitsScore ( int valueL, bool highlightL, int valueR, bool highlightR, int valueU, int valueD )
{
	static UFunction* pSetDigitsScore = 0;
	AHudCDeathmatch_execSetDigitsScore_Parms parms;

	if ( !pSetDigitsScore )
		pSetDigitsScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SetDigitsScore" );

	parms.valueL = valueL;
	parms.highlightL = highlightL;
	parms.valueR = valueR;
	parms.highlightR = highlightR;
	parms.valueU = valueU;
	parms.valueD = valueD;
	this->ProcessEvent ( pSetDigitsScore, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawAirStrikePosition ( class UCanvas* C )
{
	static UFunction* pDrawAirStrikePosition = 0;
	AHudCDeathmatch_execDrawAirStrikePosition_Parms parms;

	if ( !pDrawAirStrikePosition )
		pDrawAirStrikePosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawAirStrikePosition" );

	parms.C = C;
	this->ProcessEvent ( pDrawAirStrikePosition, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawSuppliesPositions ( class UCanvas* C )
{
	static UFunction* pDrawSuppliesPositions = 0;
	AHudCDeathmatch_execDrawSuppliesPositions_Parms parms;

	if ( !pDrawSuppliesPositions )
		pDrawSuppliesPositions = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawSuppliesPositions" );

	parms.C = C;
	this->ProcessEvent ( pDrawSuppliesPositions, &parms, NULL );

}*/

/*void AHudCDeathmatch::CacheSuppliesPositions ( class AActor* act )
{
	static UFunction* pCacheSuppliesPositions = 0;
	AHudCDeathmatch_execCacheSuppliesPositions_Parms parms;

	if ( !pCacheSuppliesPositions )
		pCacheSuppliesPositions = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CacheSuppliesPositions" );

	parms.act = act;
	this->ProcessEvent ( pCacheSuppliesPositions, &parms, NULL );

}*/

/*void AHudCDeathmatch::DeleteSuppliesPositions ( class AActor* act )
{
	static UFunction* pDeleteSuppliesPositions = 0;
	AHudCDeathmatch_execDeleteSuppliesPositions_Parms parms;

	if ( !pDeleteSuppliesPositions )
		pDeleteSuppliesPositions = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DeleteSuppliesPositions" );

	parms.act = act;
	this->ProcessEvent ( pDeleteSuppliesPositions, &parms, NULL );

}*/

/*void AHudCDeathmatch::AllDeleteSuppliesPositions (  )
{
	static UFunction* pAllDeleteSuppliesPositions = 0;
	AHudCDeathmatch_execAllDeleteSuppliesPositions_Parms parms;

	if ( !pAllDeleteSuppliesPositions )
		pAllDeleteSuppliesPositions = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.AllDeleteSuppliesPositions" );

	this->ProcessEvent ( pAllDeleteSuppliesPositions, &parms, NULL );

}*/

/*void AHudCDeathmatch::CacheSpecialPositions (  )
{
	static UFunction* pCacheSpecialPositions = 0;
	AHudCDeathmatch_execCacheSpecialPositions_Parms parms;

	if ( !pCacheSpecialPositions )
		pCacheSpecialPositions = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CacheSpecialPositions" );

	this->ProcessEvent ( pCacheSpecialPositions, &parms, NULL );

}*/

/*void AHudCDeathmatch::Tick ( float DeltaTime )
{
	static UFunction* pTick = 0;
	AHudCDeathmatch_execTick_Parms parms;

	if ( !pTick )
		pTick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.Tick" );

	parms.DeltaTime = DeltaTime;
	this->ProcessEvent ( pTick, &parms, NULL );

}*/

/*void AHudCDeathmatch::CheckCountdown ( class AGameReplicationInfo* GRI )
{
	static UFunction* pCheckCountdown = 0;
	AHudCDeathmatch_execCheckCountdown_Parms parms;

	if ( !pCheckCountdown )
		pCheckCountdown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CheckCountdown" );

	parms.GRI = GRI;
	this->ProcessEvent ( pCheckCountdown, &parms, NULL );

}*/

/*void AHudCDeathmatch::SetCustomHUDColor (  )
{
	static UFunction* pSetCustomHUDColor = 0;
	AHudCDeathmatch_execSetCustomHUDColor_Parms parms;

	if ( !pSetCustomHUDColor )
		pSetCustomHUDColor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SetCustomHUDColor" );

	this->ProcessEvent ( pSetCustomHUDColor, &parms, NULL );

}*/

/*void AHudCDeathmatch::SetCustomCrosshairColors (  )
{
	static UFunction* pSetCustomCrosshairColors = 0;
	AHudCDeathmatch_execSetCustomCrosshairColors_Parms parms;

	if ( !pSetCustomCrosshairColors )
		pSetCustomCrosshairColors = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SetCustomCrosshairColors" );

	this->ProcessEvent ( pSetCustomCrosshairColors, &parms, NULL );

}*/

/*void AHudCDeathmatch::SetCustomCrosshairs (  )
{
	static UFunction* pSetCustomCrosshairs = 0;
	AHudCDeathmatch_execSetCustomCrosshairs_Parms parms;

	if ( !pSetCustomCrosshairs )
		pSetCustomCrosshairs = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SetCustomCrosshairs" );

	this->ProcessEvent ( pSetCustomCrosshairs, &parms, NULL );

}*/

/*bool AHudCDeathmatch::CustomHUDColorAllowed (  )
{
	static UFunction* pCustomHUDColorAllowed = 0;
	AHudCDeathmatch_execCustomHUDColorAllowed_Parms parms;

	if ( !pCustomHUDColorAllowed )
		pCustomHUDColorAllowed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CustomHUDColorAllowed" );

	this->ProcessEvent ( pCustomHUDColorAllowed, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool AHudCDeathmatch::CustomCrosshairColorAllowed (  )
{
	static UFunction* pCustomCrosshairColorAllowed = 0;
	AHudCDeathmatch_execCustomCrosshairColorAllowed_Parms parms;

	if ( !pCustomCrosshairColorAllowed )
		pCustomCrosshairColorAllowed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CustomCrosshairColorAllowed" );

	this->ProcessEvent ( pCustomCrosshairColorAllowed, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool AHudCDeathmatch::CustomCrosshairsAllowed (  )
{
	static UFunction* pCustomCrosshairsAllowed = 0;
	AHudCDeathmatch_execCustomCrosshairsAllowed_Parms parms;

	if ( !pCustomCrosshairsAllowed )
		pCustomCrosshairsAllowed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CustomCrosshairsAllowed" );

	this->ProcessEvent ( pCustomCrosshairsAllowed, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::ResetHud (  )
{
	static UFunction* pResetHud = 0;
	AHudCDeathmatch_execResetHud_Parms parms;

	if ( !pResetHud )
		pResetHud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ResetHud" );

	this->ProcessEvent ( pResetHud, &parms, NULL );

}*/

/*void AHudCDeathmatch::SetScoreBoardClass ( class UClass* ScoreboardClass, class UClass* ResultBoardClass, class UClass* ResultBoardBootyClass )
{
	static UFunction* pSetScoreBoardClass = 0;
	AHudCDeathmatch_execSetScoreBoardClass_Parms parms;

	if ( !pSetScoreBoardClass )
		pSetScoreBoardClass = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.SetScoreBoardClass" );

	parms.ScoreboardClass = ScoreboardClass;
	parms.ResultBoardClass = ResultBoardClass;
	parms.ResultBoardBootyClass = ResultBoardBootyClass;
	this->ProcessEvent ( pSetScoreBoardClass, &parms, NULL );

}*/

/*void AHudCDeathmatch::PostBeginPlay (  )
{
	static UFunction* pPostBeginPlay = 0;
	AHudCDeathmatch_execPostBeginPlay_Parms parms;

	if ( !pPostBeginPlay )
		pPostBeginPlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.PostBeginPlay" );

	this->ProcessEvent ( pPostBeginPlay, &parms, NULL );

}*/

/*void AHudCDeathmatch::UpdatePrecacheMaterials (  )
{
	static UFunction* pUpdatePrecacheMaterials = 0;
	AHudCDeathmatch_execUpdatePrecacheMaterials_Parms parms;

	if ( !pUpdatePrecacheMaterials )
		pUpdatePrecacheMaterials = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdatePrecacheMaterials" );

	this->ProcessEvent ( pUpdatePrecacheMaterials, &parms, NULL );

}*/

/*void AHudCDeathmatch::execShowBattleHelp (  )
{
	static UFunction* pShowBattleHelp = 0;
	AHudCDeathmatch_execShowBattleHelp_Parms parms;

	if ( !pShowBattleHelp )
		pShowBattleHelp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ShowBattleHelp" );

	this->ProcessEvent ( pShowBattleHelp, &parms, NULL );

}*/

/*void AHudCDeathmatch::execShowRadioMessage_Notify (  )
{
	static UFunction* pShowRadioMessage_Notify = 0;
	AHudCDeathmatch_execShowRadioMessage_Notify_Parms parms;

	if ( !pShowRadioMessage_Notify )
		pShowRadioMessage_Notify = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ShowRadioMessage_Notify" );

	this->ProcessEvent ( pShowRadioMessage_Notify, &parms, NULL );

}*/

/*void AHudCDeathmatch::execShowRadioMessage_Alarm (  )
{
	static UFunction* pShowRadioMessage_Alarm = 0;
	AHudCDeathmatch_execShowRadioMessage_Alarm_Parms parms;

	if ( !pShowRadioMessage_Alarm )
		pShowRadioMessage_Alarm = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ShowRadioMessage_Alarm" );

	this->ProcessEvent ( pShowRadioMessage_Alarm, &parms, NULL );

}*/

/*void AHudCDeathmatch::execShowRadioMessage (  )
{
	static UFunction* pShowRadioMessage = 0;
	AHudCDeathmatch_execShowRadioMessage_Parms parms;

	if ( !pShowRadioMessage )
		pShowRadioMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ShowRadioMessage" );

	this->ProcessEvent ( pShowRadioMessage, &parms, NULL );

}*/

/*void AHudCDeathmatch::UpdateMinimapMode (  )
{
	static UFunction* pUpdateMinimapMode = 0;
	AHudCDeathmatch_execUpdateMinimapMode_Parms parms;

	if ( !pUpdateMinimapMode )
		pUpdateMinimapMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.UpdateMinimapMode" );

	this->ProcessEvent ( pUpdateMinimapMode, &parms, NULL );

}*/

/*void AHudCDeathmatch::execShowBigmap (  )
{
	static UFunction* pShowBigmap = 0;
	AHudCDeathmatch_execShowBigmap_Parms parms;

	if ( !pShowBigmap )
		pShowBigmap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ShowBigmap" );

	this->ProcessEvent ( pShowBigmap, &parms, NULL );

}*/

/*void AHudCDeathmatch::DrawRouteCache ( class AwAIBot* C )
{
	static UFunction* pDrawRouteCache = 0;
	AHudCDeathmatch_execDrawRouteCache_Parms parms;

	if ( !pDrawRouteCache )
		pDrawRouteCache = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.DrawRouteCache" );

	parms.C = C;
	this->ProcessEvent ( pDrawRouteCache, &parms, NULL );

}*/

/*void AHudCDeathmatch::RenderAIPaths (  )
{
	static UFunction* pRenderAIPaths = 0;
	AHudCDeathmatch_execRenderAIPaths_Parms parms;

	if ( !pRenderAIPaths )
		pRenderAIPaths = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RenderAIPaths" );

	this->ProcessEvent ( pRenderAIPaths, &parms, NULL );

}*/

/*class FColor AHudCDeathmatch::CalcArrayColor ( float V, class TArray< class FColor > carray )
{
	static UFunction* pCalcArrayColor = 0;
	AHudCDeathmatch_execCalcArrayColor_Parms parms;

	if ( !pCalcArrayColor )
		pCalcArrayColor = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.CalcArrayColor" );

	parms.V = V;
	parms.carray = carray;
	this->ProcessEvent ( pCalcArrayColor, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCDeathmatch::RenderNavExtraCost (  )
{
	static UFunction* pRenderNavExtraCost = 0;
	AHudCDeathmatch_execRenderNavExtraCost_Parms parms;

	if ( !pRenderNavExtraCost )
		pRenderNavExtraCost = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RenderNavExtraCost" );

	this->ProcessEvent ( pRenderNavExtraCost, &parms, NULL );

}*/

/*void AHudCDeathmatch::RenderVisCount (  )
{
	static UFunction* pRenderVisCount = 0;
	AHudCDeathmatch_execRenderVisCount_Parms parms;

	if ( !pRenderVisCount )
		pRenderVisCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RenderVisCount" );

	this->ProcessEvent ( pRenderVisCount, &parms, NULL );

}*/

/*void AHudCDeathmatch::RenderInfluence (  )
{
	static UFunction* pRenderInfluence = 0;
	AHudCDeathmatch_execRenderInfluence_Parms parms;

	if ( !pRenderInfluence )
		pRenderInfluence = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RenderInfluence" );

	this->ProcessEvent ( pRenderInfluence, &parms, NULL );

}*/

/*void AHudCDeathmatch::RenderCoverAngle (  )
{
	static UFunction* pRenderCoverAngle = 0;
	AHudCDeathmatch_execRenderCoverAngle_Parms parms;

	if ( !pRenderCoverAngle )
		pRenderCoverAngle = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RenderCoverAngle" );

	this->ProcessEvent ( pRenderCoverAngle, &parms, NULL );

}*/

/*void AHudCDeathmatch::RenderRadius (  )
{
	static UFunction* pRenderRadius = 0;
	AHudCDeathmatch_execRenderRadius_Parms parms;

	if ( !pRenderRadius )
		pRenderRadius = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RenderRadius" );

	this->ProcessEvent ( pRenderRadius, &parms, NULL );

}*/

/*void AHudCDeathmatch::RenderSDFrontLine ( bool Full )
{
	static UFunction* pRenderSDFrontLine = 0;
	AHudCDeathmatch_execRenderSDFrontLine_Parms parms;

	if ( !pRenderSDFrontLine )
		pRenderSDFrontLine = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.RenderSDFrontLine" );

	parms.Full = Full;
	this->ProcessEvent ( pRenderSDFrontLine, &parms, NULL );

}*/

/*void AHudCDeathmatch::execrendai ( struct FString v1, struct FString v2 )
{
	static UFunction* prendai = 0;
	AHudCDeathmatch_execrendai_Parms parms;

	if ( !prendai )
		prendai = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.rendai" );

	parms.v1 = v1;
	parms.v2 = v2;
	this->ProcessEvent ( prendai, &parms, NULL );

}*/

/*void AHudCDeathmatch::eventWorldSpaceOverlays (  )
{
	static UFunction* pWorldSpaceOverlays = 0;
	AHudCDeathmatch_eventWorldSpaceOverlays_Parms parms;

	if ( !pWorldSpaceOverlays )
		pWorldSpaceOverlays = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.WorldSpaceOverlays" );

	this->ProcessEvent ( pWorldSpaceOverlays, &parms, NULL );

}*/

/*void AHudCDeathmatch::execShrinkHUD (  )
{
	static UFunction* pShrinkHUD = 0;
	AHudCDeathmatch_execShrinkHUD_Parms parms;

	if ( !pShrinkHUD )
		pShrinkHUD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.ShrinkHUD" );

	this->ProcessEvent ( pShrinkHUD, &parms, NULL );

}*/

/*void AHudCDeathmatch::execGrowHUD (  )
{
	static UFunction* pGrowHUD = 0;
	AHudCDeathmatch_execGrowHUD_Parms parms;

	if ( !pGrowHUD )
		pGrowHUD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCDeathmatch.GrowHUD" );

	this->ProcessEvent ( pGrowHUD, &parms, NULL );

}*/

/*void AwHudPart_DisplayBase::UpdateHelpKeyControll (  )
{
	static UFunction* pUpdateHelpKeyControll = 0;
	AwHudPart_DisplayBase_execUpdateHelpKeyControll_Parms parms;

	if ( !pUpdateHelpKeyControll )
		pUpdateHelpKeyControll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayBase.UpdateHelpKeyControll" );

	this->ProcessEvent ( pUpdateHelpKeyControll, &parms, NULL );

}*/

/*struct FString AwHudPart_DisplayBase::GetEllipsString ( class UCanvas* C, struct FString strText, float fLimitWidth, float FontSize )
{
	static UFunction* pGetEllipsString = 0;
	AwHudPart_DisplayBase_execGetEllipsString_Parms parms;

	if ( !pGetEllipsString )
		pGetEllipsString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayBase.GetEllipsString" );

	parms.C = C;
	parms.strText = strText;
	parms.fLimitWidth = fLimitWidth;
	parms.FontSize = FontSize;
	this->ProcessEvent ( pGetEllipsString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool AwHudPart_DisplayBase::GetKeyTexture ( struct FString sKey, float OffsetX, struct FSpriteWidget* W, float* fWidth )
{
	static UFunction* pGetKeyTexture = 0;
	AwHudPart_DisplayBase_execGetKeyTexture_Parms parms;

	if ( !pGetKeyTexture )
		pGetKeyTexture = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayBase.GetKeyTexture" );

	parms.sKey = sKey;
	parms.OffsetX = OffsetX;
	this->ProcessEvent ( pGetKeyTexture, &parms, NULL );

	*W = parms.W;
	*fWidth = parms.fWidth;
	return parms.ReturnValue;
}*/

/*void AwHudPart_DisplayBase::Initialize ( class AHudBase* myOwner, class ALevelInfo* Level )
{
	static UFunction* pInitialize = 0;
	AwHudPart_DisplayBase_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayBase.Initialize" );

	parms.myOwner = myOwner;
	parms.Level = Level;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::DrawItemImage ( class UCanvas* C )
{
	static UFunction* pDrawItemImage = 0;
	AwHudPart_SelectQSlot_execDrawItemImage_Parms parms;

	if ( !pDrawItemImage )
		pDrawItemImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.DrawItemImage" );

	parms.C = C;
	this->ProcessEvent ( pDrawItemImage, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::CalcQuickSlotTimer ( int* respawnLeftTime, int* startupLeftTime )
{
	static UFunction* pCalcQuickSlotTimer = 0;
	AwHudPart_SelectQSlot_execCalcQuickSlotTimer_Parms parms;

	if ( !pCalcQuickSlotTimer )
		pCalcQuickSlotTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.CalcQuickSlotTimer" );

	parms.respawnLeftTime = *respawnLeftTime;
	parms.startupLeftTime = *startupLeftTime;
	this->ProcessEvent ( pCalcQuickSlotTimer, &parms, NULL );

	*respawnLeftTime = parms.respawnLeftTime;
	*startupLeftTime = parms.startupLeftTime;
}*/

/*struct FImage AwHudPart_SelectQSlot::GetItemImage ( class UCanvas* C, int iItemID )
{
	static UFunction* pGetItemImage = 0;
	AwHudPart_SelectQSlot_execGetItemImage_Parms parms;

	if ( !pGetItemImage )
		pGetItemImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.GetItemImage" );

	parms.C = C;
	parms.iItemID = iItemID;
	this->ProcessEvent ( pGetItemImage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_SelectQSlot::QuickSlotContent_SetString ( class UCanvas* C, int iPosX, int iPosY, int iSlot, bool bDefaultWeapon )
{
	static UFunction* pQuickSlotContent_SetString = 0;
	AwHudPart_SelectQSlot_execQuickSlotContent_SetString_Parms parms;

	if ( !pQuickSlotContent_SetString )
		pQuickSlotContent_SetString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.QuickSlotContent_SetString" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	parms.iSlot = iSlot;
	parms.bDefaultWeapon = bDefaultWeapon;
	this->ProcessEvent ( pQuickSlotContent_SetString, &parms, NULL );

}*/

/*bool AwHudPart_SelectQSlot::DrawQuickSlotContent_List ( class UCanvas* C, int iPosX, int iPosY, int iSlot )
{
	static UFunction* pDrawQuickSlotContent_List = 0;
	AwHudPart_SelectQSlot_execDrawQuickSlotContent_List_Parms parms;

	if ( !pDrawQuickSlotContent_List )
		pDrawQuickSlotContent_List = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.DrawQuickSlotContent_List" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	parms.iSlot = iSlot;
	this->ProcessEvent ( pDrawQuickSlotContent_List, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_SelectQSlot::DrawQuickSlotContent_DefaultWeapon ( class UCanvas* C, int iPosX, int iPosY )
{
	static UFunction* pDrawQuickSlotContent_DefaultWeapon = 0;
	AwHudPart_SelectQSlot_execDrawQuickSlotContent_DefaultWeapon_Parms parms;

	if ( !pDrawQuickSlotContent_DefaultWeapon )
		pDrawQuickSlotContent_DefaultWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.DrawQuickSlotContent_DefaultWeapon" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	this->ProcessEvent ( pDrawQuickSlotContent_DefaultWeapon, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::DrawQuickSlotContent_Description ( class UCanvas* C, int iPosX, int iPosY )
{
	static UFunction* pDrawQuickSlotContent_Description = 0;
	AwHudPart_SelectQSlot_execDrawQuickSlotContent_Description_Parms parms;

	if ( !pDrawQuickSlotContent_Description )
		pDrawQuickSlotContent_Description = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.DrawQuickSlotContent_Description" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	this->ProcessEvent ( pDrawQuickSlotContent_Description, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::DrawSellectBar ( class UCanvas* C, int iPosX, int iPosY, bool bDefaultWeapon )
{
	static UFunction* pDrawSellectBar = 0;
	AwHudPart_SelectQSlot_execDrawSellectBar_Parms parms;

	if ( !pDrawSellectBar )
		pDrawSellectBar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.DrawSellectBar" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	parms.bDefaultWeapon = bDefaultWeapon;
	this->ProcessEvent ( pDrawSellectBar, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::DrawQuickSlotName ( class UCanvas* C, int iPosX, int iPosY, int iSlot, bool bDefaultWeapon, bool bHasItem )
{
	static UFunction* pDrawQuickSlotName = 0;
	AwHudPart_SelectQSlot_execDrawQuickSlotName_Parms parms;

	if ( !pDrawQuickSlotName )
		pDrawQuickSlotName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.DrawQuickSlotName" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	parms.iSlot = iSlot;
	parms.bDefaultWeapon = bDefaultWeapon;
	parms.bHasItem = bHasItem;
	this->ProcessEvent ( pDrawQuickSlotName, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::DrawQuickSlot ( class UCanvas* C )
{
	static UFunction* pDrawQuickSlot = 0;
	AwHudPart_SelectQSlot_execDrawQuickSlot_Parms parms;

	if ( !pDrawQuickSlot )
		pDrawQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.DrawQuickSlot" );

	parms.C = C;
	this->ProcessEvent ( pDrawQuickSlot, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::DrawSelectQSlot ( class UCanvas* C )
{
	static UFunction* pDrawSelectQSlot = 0;
	AwHudPart_SelectQSlot_execDrawSelectQSlot_Parms parms;

	if ( !pDrawSelectQSlot )
		pDrawSelectQSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.DrawSelectQSlot" );

	parms.C = C;
	this->ProcessEvent ( pDrawSelectQSlot, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::DrawA ( class UCanvas* C )
{
	static UFunction* pDrawA = 0;
	AwHudPart_SelectQSlot_execDrawA_Parms parms;

	if ( !pDrawA )
		pDrawA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.DrawA" );

	parms.C = C;
	this->ProcessEvent ( pDrawA, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::UpdateHelpKeyControll (  )
{
	static UFunction* pUpdateHelpKeyControll = 0;
	AwHudPart_SelectQSlot_execUpdateHelpKeyControll_Parms parms;

	if ( !pUpdateHelpKeyControll )
		pUpdateHelpKeyControll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.UpdateHelpKeyControll" );

	this->ProcessEvent ( pUpdateHelpKeyControll, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::CallEvent ( bool ItemCheck, int iReservation1, int iReservation2 )
{
	static UFunction* pCallEvent = 0;
	AwHudPart_SelectQSlot_execCallEvent_Parms parms;

	if ( !pCallEvent )
		pCallEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.CallEvent" );

	parms.ItemCheck = ItemCheck;
	parms.iReservation1 = iReservation1;
	parms.iReservation2 = iReservation2;
	this->ProcessEvent ( pCallEvent, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::CallSelectQuickSlot ( int iIndex )
{
	static UFunction* pCallSelectQuickSlot = 0;
	AwHudPart_SelectQSlot_execCallSelectQuickSlot_Parms parms;

	if ( !pCallSelectQuickSlot )
		pCallSelectQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.CallSelectQuickSlot" );

	parms.iIndex = iIndex;
	this->ProcessEvent ( pCallSelectQuickSlot, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::ToggleQuickSlotWindow (  )
{
	static UFunction* pToggleQuickSlotWindow = 0;
	AwHudPart_SelectQSlot_execToggleQuickSlotWindow_Parms parms;

	if ( !pToggleQuickSlotWindow )
		pToggleQuickSlotWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.ToggleQuickSlotWindow" );

	this->ProcessEvent ( pToggleQuickSlotWindow, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::EndQuickSlotWindow (  )
{
	static UFunction* pEndQuickSlotWindow = 0;
	AwHudPart_SelectQSlot_execEndQuickSlotWindow_Parms parms;

	if ( !pEndQuickSlotWindow )
		pEndQuickSlotWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.EndQuickSlotWindow" );

	this->ProcessEvent ( pEndQuickSlotWindow, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::BeginQuickSlotWindow (  )
{
	static UFunction* pBeginQuickSlotWindow = 0;
	AwHudPart_SelectQSlot_execBeginQuickSlotWindow_Parms parms;

	if ( !pBeginQuickSlotWindow )
		pBeginQuickSlotWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.BeginQuickSlotWindow" );

	this->ProcessEvent ( pBeginQuickSlotWindow, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlot::Initialize ( class AHudBase* myOwner, class ALevelInfo* _level )
{
	static UFunction* pInitialize = 0;
	AwHudPart_SelectQSlot_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlot.Initialize" );

	parms.myOwner = myOwner;
	parms._level = _level;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::Draw ( class UCanvas* C )
{
	static UFunction* pDraw = 0;
	AwHudPart_MinimapBase_execDraw_Parms parms;

	if ( !pDraw )
		pDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.Draw" );

	parms.C = C;
	this->ProcessEvent ( pDraw, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::OnPreDrawMyself ( class UCanvas* C )
{
	static UFunction* pOnPreDrawMyself = 0;
	AwHudPart_MinimapBase_execOnPreDrawMyself_Parms parms;

	if ( !pOnPreDrawMyself )
		pOnPreDrawMyself = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.OnPreDrawMyself" );

	parms.C = C;
	this->ProcessEvent ( pOnPreDrawMyself, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::DrawMinimap_SpecialPositions ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_SpecialPositions = 0;
	AwHudPart_MinimapBase_execDrawMinimap_SpecialPositions_Parms parms;

	if ( !pDrawMinimap_SpecialPositions )
		pDrawMinimap_SpecialPositions = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_SpecialPositions" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_SpecialPositions, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::DrawMinimap_Mission ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Mission = 0;
	AwHudPart_MinimapBase_execDrawMinimap_Mission_Parms parms;

	if ( !pDrawMinimap_Mission )
		pDrawMinimap_Mission = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_Mission" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Mission, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::DrawMinimap_Airstrike ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Airstrike = 0;
	AwHudPart_MinimapBase_execDrawMinimap_Airstrike_Parms parms;

	if ( !pDrawMinimap_Airstrike )
		pDrawMinimap_Airstrike = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_Airstrike" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Airstrike, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::DrawMinimap_Helicopter ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Helicopter = 0;
	AwHudPart_MinimapBase_execDrawMinimap_Helicopter_Parms parms;

	if ( !pDrawMinimap_Helicopter )
		pDrawMinimap_Helicopter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_Helicopter" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Helicopter, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::DrawMinimap_Deads ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Deads = 0;
	AwHudPart_MinimapBase_execDrawMinimap_Deads_Parms parms;

	if ( !pDrawMinimap_Deads )
		pDrawMinimap_Deads = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_Deads" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Deads, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::DrawMinimap_Enemies ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Enemies = 0;
	AwHudPart_MinimapBase_execDrawMinimap_Enemies_Parms parms;

	if ( !pDrawMinimap_Enemies )
		pDrawMinimap_Enemies = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_Enemies" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Enemies, &parms, NULL );

}*/

/*bool AwHudPart_MinimapBase::IsEnemyInRange ( struct FVector loc )
{
	static UFunction* pIsEnemyInRange = 0;
	AwHudPart_MinimapBase_execIsEnemyInRange_Parms parms;

	if ( !pIsEnemyInRange )
		pIsEnemyInRange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.IsEnemyInRange" );

	parms.loc = loc;
	this->ProcessEvent ( pIsEnemyInRange, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_MinimapBase::DrawMinimap_Allies ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Allies = 0;
	AwHudPart_MinimapBase_execDrawMinimap_Allies_Parms parms;

	if ( !pDrawMinimap_Allies )
		pDrawMinimap_Allies = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_Allies" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Allies, &parms, NULL );

}*/

/*bool AwHudPart_MinimapBase::IsSameTeamByIndex ( int Team1, int Team2 )
{
	static UFunction* pIsSameTeamByIndex = 0;
	AwHudPart_MinimapBase_execIsSameTeamByIndex_Parms parms;

	if ( !pIsSameTeamByIndex )
		pIsSameTeamByIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.IsSameTeamByIndex" );

	parms.Team1 = Team1;
	parms.Team2 = Team2;
	this->ProcessEvent ( pIsSameTeamByIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool AwHudPart_MinimapBase::IsSameTeamByPRI ( class APlayerReplicationInfo* pri1, class APlayerReplicationInfo* pri2 )
{
	static UFunction* pIsSameTeamByPRI = 0;
	AwHudPart_MinimapBase_execIsSameTeamByPRI_Parms parms;

	if ( !pIsSameTeamByPRI )
		pIsSameTeamByPRI = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.IsSameTeamByPRI" );

	parms.pri1 = pri1;
	parms.pri2 = pri2;
	this->ProcessEvent ( pIsSameTeamByPRI, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_MinimapBase::PushDeadOnMinimap ( int TeamIndex, struct FVector Location )
{
	static UFunction* pPushDeadOnMinimap = 0;
	AwHudPart_MinimapBase_execPushDeadOnMinimap_Parms parms;

	if ( !pPushDeadOnMinimap )
		pPushDeadOnMinimap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.PushDeadOnMinimap" );

	parms.TeamIndex = TeamIndex;
	parms.Location = Location;
	this->ProcessEvent ( pPushDeadOnMinimap, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::CalcMinimapRotation ( struct FRotator Rotation, struct FRotator* outRotation )
{
	static UFunction* pCalcMinimapRotation = 0;
	AwHudPart_MinimapBase_execCalcMinimapRotation_Parms parms;

	if ( !pCalcMinimapRotation )
		pCalcMinimapRotation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.CalcMinimapRotation" );

	parms.Rotation = Rotation;
	this->ProcessEvent ( pCalcMinimapRotation, &parms, NULL );

	*outRotation = parms.outRotation;
}*/

/*void AwHudPart_MinimapBase::SetupMinimapSpriteWidgetForDrawing ( struct FRotator Rotation, float minimapX, float minimapY, struct FSpriteWidget* Sprite )
{
	static UFunction* pSetupMinimapSpriteWidgetForDrawing = 0;
	AwHudPart_MinimapBase_execSetupMinimapSpriteWidgetForDrawing_Parms parms;

	if ( !pSetupMinimapSpriteWidgetForDrawing )
		pSetupMinimapSpriteWidgetForDrawing = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.SetupMinimapSpriteWidgetForDrawing" );

	parms.Rotation = Rotation;
	parms.minimapX = minimapX;
	parms.minimapY = minimapY;
	this->ProcessEvent ( pSetupMinimapSpriteWidgetForDrawing, &parms, NULL );

	*Sprite = parms.Sprite;
}*/

/*void AwHudPart_MinimapBase::ClampMinimapPosition ( float W, float H, float* X, float* Y )
{
	static UFunction* pClampMinimapPosition = 0;
	AwHudPart_MinimapBase_execClampMinimapPosition_Parms parms;

	if ( !pClampMinimapPosition )
		pClampMinimapPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.ClampMinimapPosition" );

	parms.W = W;
	parms.H = H;
	this->ProcessEvent ( pClampMinimapPosition, &parms, NULL );

	*X = parms.X;
	*Y = parms.Y;
}*/

/*bool AwHudPart_MinimapBase::IsWithinMinimapArea ( float X, float Y )
{
	static UFunction* pIsWithinMinimapArea = 0;
	AwHudPart_MinimapBase_execIsWithinMinimapArea_Parms parms;

	if ( !pIsWithinMinimapArea )
		pIsWithinMinimapArea = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.IsWithinMinimapArea" );

	parms.X = X;
	parms.Y = Y;
	this->ProcessEvent ( pIsWithinMinimapArea, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_MinimapBase::CalculateTexturePositionFromMinimapPosition ( float minimapX, float minimapY, int* TX, int* ty )
{
	static UFunction* pCalculateTexturePositionFromMinimapPosition = 0;
	AwHudPart_MinimapBase_execCalculateTexturePositionFromMinimapPosition_Parms parms;

	if ( !pCalculateTexturePositionFromMinimapPosition )
		pCalculateTexturePositionFromMinimapPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.CalculateTexturePositionFromMinimapPosition" );

	parms.minimapX = minimapX;
	parms.minimapY = minimapY;
	this->ProcessEvent ( pCalculateTexturePositionFromMinimapPosition, &parms, NULL );

	*TX = parms.TX;
	*ty = parms.ty;
}*/

/*void AwHudPart_MinimapBase::CalculateMinimapPosition ( struct FVector centerLoc, struct FRotator centerRotation, struct FVector TargetLoc, float* minimapX, float* minimapY )
{
	static UFunction* pCalculateMinimapPosition = 0;
	AwHudPart_MinimapBase_execCalculateMinimapPosition_Parms parms;

	if ( !pCalculateMinimapPosition )
		pCalculateMinimapPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.CalculateMinimapPosition" );

	parms.centerLoc = centerLoc;
	parms.centerRotation = centerRotation;
	parms.TargetLoc = TargetLoc;
	this->ProcessEvent ( pCalculateMinimapPosition, &parms, NULL );

	*minimapX = parms.minimapX;
	*minimapY = parms.minimapY;
}*/

/*void AwHudPart_MinimapBase::CalculateMinimapPositionPawnCentering ( class APawn* centerPawn, struct FVector TargetLoc, float* minimapX, float* minimapY )
{
	static UFunction* pCalculateMinimapPositionPawnCentering = 0;
	AwHudPart_MinimapBase_execCalculateMinimapPositionPawnCentering_Parms parms;

	if ( !pCalculateMinimapPositionPawnCentering )
		pCalculateMinimapPositionPawnCentering = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.CalculateMinimapPositionPawnCentering" );

	parms.centerPawn = centerPawn;
	parms.TargetLoc = TargetLoc;
	this->ProcessEvent ( pCalculateMinimapPositionPawnCentering, &parms, NULL );

	*minimapX = parms.minimapX;
	*minimapY = parms.minimapY;
}*/

/*void AwHudPart_MinimapBase::DrawMinimap_Myself ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Myself = 0;
	AwHudPart_MinimapBase_execDrawMinimap_Myself_Parms parms;

	if ( !pDrawMinimap_Myself )
		pDrawMinimap_Myself = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_Myself" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Myself, &parms, NULL );

}*/

/*float AwHudPart_MinimapBase::getSelfIconScale (  )
{
	static UFunction* pgetSelfIconScale = 0;
	AwHudPart_MinimapBase_execgetSelfIconScale_Parms parms;

	if ( !pgetSelfIconScale )
		pgetSelfIconScale = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.getSelfIconScale" );

	this->ProcessEvent ( pgetSelfIconScale, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_MinimapBase::DrawMinimap_Compass ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Compass = 0;
	AwHudPart_MinimapBase_execDrawMinimap_Compass_Parms parms;

	if ( !pDrawMinimap_Compass )
		pDrawMinimap_Compass = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_Compass" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Compass, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::DrawMinimap_Frame ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Frame = 0;
	AwHudPart_MinimapBase_execDrawMinimap_Frame_Parms parms;

	if ( !pDrawMinimap_Frame )
		pDrawMinimap_Frame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_Frame" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Frame, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::DrawMinimap_BGMapUAV ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_BGMapUAV = 0;
	AwHudPart_MinimapBase_execDrawMinimap_BGMapUAV_Parms parms;

	if ( !pDrawMinimap_BGMapUAV )
		pDrawMinimap_BGMapUAV = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_BGMapUAV" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_BGMapUAV, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::SetupBGMapUAV (  )
{
	static UFunction* pSetupBGMapUAV = 0;
	AwHudPart_MinimapBase_execSetupBGMapUAV_Parms parms;

	if ( !pSetupBGMapUAV )
		pSetupBGMapUAV = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.SetupBGMapUAV" );

	this->ProcessEvent ( pSetupBGMapUAV, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::DrawMinimap_BGMap ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_BGMap = 0;
	AwHudPart_MinimapBase_execDrawMinimap_BGMap_Parms parms;

	if ( !pDrawMinimap_BGMap )
		pDrawMinimap_BGMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_BGMap" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_BGMap, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::MapMinimapTextureLocationToWorldLocation ( int TX, int ty, struct FVector* Location )
{
	static UFunction* pMapMinimapTextureLocationToWorldLocation = 0;
	AwHudPart_MinimapBase_execMapMinimapTextureLocationToWorldLocation_Parms parms;

	if ( !pMapMinimapTextureLocationToWorldLocation )
		pMapMinimapTextureLocationToWorldLocation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.MapMinimapTextureLocationToWorldLocation" );

	parms.TX = TX;
	parms.ty = ty;
	this->ProcessEvent ( pMapMinimapTextureLocationToWorldLocation, &parms, NULL );

	*Location = parms.Location;
}*/

/*void AwHudPart_MinimapBase::MapWorldLocationToMinimapTextureLocation ( struct FVector Location, int* cX, int* cY )
{
	static UFunction* pMapWorldLocationToMinimapTextureLocation = 0;
	AwHudPart_MinimapBase_execMapWorldLocationToMinimapTextureLocation_Parms parms;

	if ( !pMapWorldLocationToMinimapTextureLocation )
		pMapWorldLocationToMinimapTextureLocation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.MapWorldLocationToMinimapTextureLocation" );

	parms.Location = Location;
	this->ProcessEvent ( pMapWorldLocationToMinimapTextureLocation, &parms, NULL );

	*cX = parms.cX;
	*cY = parms.cY;
}*/

/*void AwHudPart_MinimapBase::DrawMinimap_NorthPole ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_NorthPole = 0;
	AwHudPart_MinimapBase_execDrawMinimap_NorthPole_Parms parms;

	if ( !pDrawMinimap_NorthPole )
		pDrawMinimap_NorthPole = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.DrawMinimap_NorthPole" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_NorthPole, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::CacheSpecialPositions (  )
{
	static UFunction* pCacheSpecialPositions = 0;
	AwHudPart_MinimapBase_execCacheSpecialPositions_Parms parms;

	if ( !pCacheSpecialPositions )
		pCacheSpecialPositions = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.CacheSpecialPositions" );

	this->ProcessEvent ( pCacheSpecialPositions, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::Timer (  )
{
	static UFunction* pTimer = 0;
	AwHudPart_MinimapBase_execTimer_Parms parms;

	if ( !pTimer )
		pTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.Timer" );

	this->ProcessEvent ( pTimer, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::InitializeCoords (  )
{
	static UFunction* pInitializeCoords = 0;
	AwHudPart_MinimapBase_execInitializeCoords_Parms parms;

	if ( !pInitializeCoords )
		pInitializeCoords = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.InitializeCoords" );

	this->ProcessEvent ( pInitializeCoords, &parms, NULL );

}*/

/*void AwHudPart_MinimapBase::GetPivotCoords ( struct FVector* it1, struct FVector* iw1, struct FVector* it2, struct FVector* iw2 )
{
	static UFunction* pGetPivotCoords = 0;
	AwHudPart_MinimapBase_execGetPivotCoords_Parms parms;

	if ( !pGetPivotCoords )
		pGetPivotCoords = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.GetPivotCoords" );

	parms.it1 = *it1;
	parms.iw1 = *iw1;
	parms.it2 = *it2;
	parms.iw2 = *iw2;
	this->ProcessEvent ( pGetPivotCoords, &parms, NULL );

	*it1 = parms.it1;
	*iw1 = parms.iw1;
	*it2 = parms.it2;
	*iw2 = parms.iw2;
}*/

/*void AwHudPart_MinimapBase::Initialize ( class AHudBase* myOwner, class ALevelInfo* myLevel )
{
	static UFunction* pInitialize = 0;
	AwHudPart_MinimapBase_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_MinimapBase.Initialize" );

	parms.myOwner = myOwner;
	parms.myLevel = myLevel;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessageConnectionInstability ( class UCanvas* C )
{
	static UFunction* pDrawMessageConnectionInstability = 0;
	AwHudPart_DisplayEvent_execDrawMessageConnectionInstability_Parms parms;

	if ( !pDrawMessageConnectionInstability )
		pDrawMessageConnectionInstability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessageConnectionInstability" );

	parms.C = C;
	this->ProcessEvent ( pDrawMessageConnectionInstability, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::ConnectionInstability ( class UCanvas* C )
{
	static UFunction* pConnectionInstability = 0;
	AwHudPart_DisplayEvent_execConnectionInstability_Parms parms;

	if ( !pConnectionInstability )
		pConnectionInstability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.ConnectionInstability" );

	parms.C = C;
	this->ProcessEvent ( pConnectionInstability, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::SetTimeConnectionInstability ( bool bSet )
{
	static UFunction* pSetTimeConnectionInstability = 0;
	AwHudPart_DisplayEvent_execSetTimeConnectionInstability_Parms parms;

	if ( !pSetTimeConnectionInstability )
		pSetTimeConnectionInstability = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.SetTimeConnectionInstability" );

	parms.bSet = bSet;
	this->ProcessEvent ( pSetTimeConnectionInstability, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawAAS ( class UCanvas* C, struct FString sAASNotice )
{
	static UFunction* pDrawAAS = 0;
	AwHudPart_DisplayEvent_execDrawAAS_Parms parms;

	if ( !pDrawAAS )
		pDrawAAS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawAAS" );

	parms.C = C;
	parms.sAASNotice = sAASNotice;
	this->ProcessEvent ( pDrawAAS, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMoveGameNotice ( class UCanvas* C, struct FString sGameNotice, float fLifeTime )
{
	static UFunction* pDrawMoveGameNotice = 0;
	AwHudPart_DisplayEvent_execDrawMoveGameNotice_Parms parms;

	if ( !pDrawMoveGameNotice )
		pDrawMoveGameNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMoveGameNotice" );

	parms.C = C;
	parms.sGameNotice = sGameNotice;
	parms.fLifeTime = fLifeTime;
	this->ProcessEvent ( pDrawMoveGameNotice, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawGameNotice ( class UCanvas* C, struct FString sGameNotice )
{
	static UFunction* pDrawGameNotice = 0;
	AwHudPart_DisplayEvent_execDrawGameNotice_Parms parms;

	if ( !pDrawGameNotice )
		pDrawGameNotice = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawGameNotice" );

	parms.C = C;
	parms.sGameNotice = sGameNotice;
	this->ProcessEvent ( pDrawGameNotice, &parms, NULL );

}*/

/*struct FString AwHudPart_DisplayEvent::GetMessageGameMode_FFA (  )
{
	static UFunction* pGetMessageGameMode_FFA = 0;
	AwHudPart_DisplayEvent_execGetMessageGameMode_FFA_Parms parms;

	if ( !pGetMessageGameMode_FFA )
		pGetMessageGameMode_FFA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.GetMessageGameMode_FFA" );

	this->ProcessEvent ( pGetMessageGameMode_FFA, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AwHudPart_DisplayEvent::GetMessageGameMode_SBT (  )
{
	static UFunction* pGetMessageGameMode_SBT = 0;
	AwHudPart_DisplayEvent_execGetMessageGameMode_SBT_Parms parms;

	if ( !pGetMessageGameMode_SBT )
		pGetMessageGameMode_SBT = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.GetMessageGameMode_SBT" );

	this->ProcessEvent ( pGetMessageGameMode_SBT, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AwHudPart_DisplayEvent::GetMessageGameMode_SD (  )
{
	static UFunction* pGetMessageGameMode_SD = 0;
	AwHudPart_DisplayEvent_execGetMessageGameMode_SD_Parms parms;

	if ( !pGetMessageGameMode_SD )
		pGetMessageGameMode_SD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.GetMessageGameMode_SD" );

	this->ProcessEvent ( pGetMessageGameMode_SD, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AwHudPart_DisplayEvent::GetMessageGameMode_DOA (  )
{
	static UFunction* pGetMessageGameMode_DOA = 0;
	AwHudPart_DisplayEvent_execGetMessageGameMode_DOA_Parms parms;

	if ( !pGetMessageGameMode_DOA )
		pGetMessageGameMode_DOA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.GetMessageGameMode_DOA" );

	this->ProcessEvent ( pGetMessageGameMode_DOA, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_DisplayEvent::SetMessageGameMode_DOM ( class UMaterial* matA, class UMaterial* matB, class UMaterial* matC )
{
	static UFunction* pSetMessageGameMode_DOM = 0;
	AwHudPart_DisplayEvent_execSetMessageGameMode_DOM_Parms parms;

	if ( !pSetMessageGameMode_DOM )
		pSetMessageGameMode_DOM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.SetMessageGameMode_DOM" );

	parms.matA = matA;
	parms.matB = matB;
	parms.matC = matC;
	this->ProcessEvent ( pSetMessageGameMode_DOM, &parms, NULL );

}*/

/*struct FString AwHudPart_DisplayEvent::GetMessageGameMode_DOM (  )
{
	static UFunction* pGetMessageGameMode_DOM = 0;
	AwHudPart_DisplayEvent_execGetMessageGameMode_DOM_Parms parms;

	if ( !pGetMessageGameMode_DOM )
		pGetMessageGameMode_DOM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.GetMessageGameMode_DOM" );

	this->ProcessEvent ( pGetMessageGameMode_DOM, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AwHudPart_DisplayEvent::GetMessageGameMode_TD (  )
{
	static UFunction* pGetMessageGameMode_TD = 0;
	AwHudPart_DisplayEvent_execGetMessageGameMode_TD_Parms parms;

	if ( !pGetMessageGameMode_TD )
		pGetMessageGameMode_TD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.GetMessageGameMode_TD" );

	this->ProcessEvent ( pGetMessageGameMode_TD, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AwHudPart_DisplayEvent::GetMessageGameMode ( class UMaterial** mat )
{
	static UFunction* pGetMessageGameMode = 0;
	AwHudPart_DisplayEvent_execGetMessageGameMode_Parms parms;

	if ( !pGetMessageGameMode )
		pGetMessageGameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.GetMessageGameMode" );

	parms.mat = *mat;
	this->ProcessEvent ( pGetMessageGameMode, &parms, NULL );

	*mat = parms.mat;
	return parms.ReturnValue;
}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_SetDrawGameMessage ( bool bMode, bool bSystem )
{
	static UFunction* pDisplayEvent_SetDrawGameMessage = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_SetDrawGameMessage_Parms parms;

	if ( !pDisplayEvent_SetDrawGameMessage )
		pDisplayEvent_SetDrawGameMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_SetDrawGameMessage" );

	parms.bMode = bMode;
	parms.bSystem = bSystem;
	this->ProcessEvent ( pDisplayEvent_SetDrawGameMessage, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawGameMode ( class UCanvas* C )
{
	static UFunction* pDrawGameMode = 0;
	AwHudPart_DisplayEvent_execDrawGameMode_Parms parms;

	if ( !pDrawGameMode )
		pDrawGameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawGameMode" );

	parms.C = C;
	this->ProcessEvent ( pDrawGameMode, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::SetBombObjectIndex ( int objectIndex )
{
	static UFunction* pSetBombObjectIndex = 0;
	AwHudPart_DisplayEvent_execSetBombObjectIndex_Parms parms;

	if ( !pSetBombObjectIndex )
		pSetBombObjectIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.SetBombObjectIndex" );

	parms.objectIndex = objectIndex;
	this->ProcessEvent ( pSetBombObjectIndex, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_GameMode ( struct FString Message )
{
	static UFunction* pDisplayEvent_GameMode = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_GameMode_Parms parms;

	if ( !pDisplayEvent_GameMode )
		pDisplayEvent_GameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_GameMode" );

	parms.Message = Message;
	this->ProcessEvent ( pDisplayEvent_GameMode, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_BattleExplain (  )
{
	static UFunction* pDisplayEvent_BattleExplain = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_BattleExplain_Parms parms;

	if ( !pDisplayEvent_BattleExplain )
		pDisplayEvent_BattleExplain = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_BattleExplain" );

	this->ProcessEvent ( pDisplayEvent_BattleExplain, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawPlusPoint ( class UCanvas* C, int iPoint, int iPosX, int iPosY, int iAlpha, int iEffectState, float fScale )
{
	static UFunction* pDrawPlusPoint = 0;
	AwHudPart_DisplayEvent_execDrawPlusPoint_Parms parms;

	if ( !pDrawPlusPoint )
		pDrawPlusPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawPlusPoint" );

	parms.C = C;
	parms.iPoint = iPoint;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	parms.iAlpha = iAlpha;
	parms.iEffectState = iEffectState;
	parms.fScale = fScale;
	this->ProcessEvent ( pDrawPlusPoint, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_GainPoint ( int iPoint )
{
	static UFunction* pDisplayEvent_GainPoint = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_GainPoint_Parms parms;

	if ( !pDisplayEvent_GainPoint )
		pDisplayEvent_GainPoint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_GainPoint" );

	parms.iPoint = iPoint;
	this->ProcessEvent ( pDisplayEvent_GainPoint, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawSudenDeath ( class UCanvas* C )
{
	static UFunction* pDrawSudenDeath = 0;
	AwHudPart_DisplayEvent_execDrawSudenDeath_Parms parms;

	if ( !pDrawSudenDeath )
		pDrawSudenDeath = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawSudenDeath" );

	parms.C = C;
	this->ProcessEvent ( pDrawSudenDeath, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisPlayEvent_SudenDeath (  )
{
	static UFunction* pDisPlayEvent_SudenDeath = 0;
	AwHudPart_DisplayEvent_execDisPlayEvent_SudenDeath_Parms parms;

	if ( !pDisPlayEvent_SudenDeath )
		pDisPlayEvent_SudenDeath = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisPlayEvent_SudenDeath" );

	this->ProcessEvent ( pDisPlayEvent_SudenDeath, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawHostChange ( class UCanvas* C )
{
	static UFunction* pDrawHostChange = 0;
	AwHudPart_DisplayEvent_execDrawHostChange_Parms parms;

	if ( !pDrawHostChange )
		pDrawHostChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawHostChange" );

	parms.C = C;
	this->ProcessEvent ( pDrawHostChange, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawWarningWeaponInfo ( class UCanvas* C )
{
	static UFunction* pDrawWarningWeaponInfo = 0;
	AwHudPart_DisplayEvent_execDrawWarningWeaponInfo_Parms parms;

	if ( !pDrawWarningWeaponInfo )
		pDrawWarningWeaponInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawWarningWeaponInfo" );

	parms.C = C;
	this->ProcessEvent ( pDrawWarningWeaponInfo, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::ResetState (  )
{
	static UFunction* pResetState = 0;
	AwHudPart_DisplayEvent_execResetState_Parms parms;

	if ( !pResetState )
		pResetState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.ResetState" );

	this->ProcessEvent ( pResetState, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawVehicleInfo ( class UCanvas* C )
{
	static UFunction* pDrawVehicleInfo = 0;
	AwHudPart_DisplayEvent_execDrawVehicleInfo_Parms parms;

	if ( !pDrawVehicleInfo )
		pDrawVehicleInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawVehicleInfo" );

	parms.C = C;
	this->ProcessEvent ( pDrawVehicleInfo, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawWeaponChange ( class UCanvas* C )
{
	static UFunction* pDrawWeaponChange = 0;
	AwHudPart_DisplayEvent_execDrawWeaponChange_Parms parms;

	if ( !pDrawWeaponChange )
		pDrawWeaponChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawWeaponChange" );

	parms.C = C;
	this->ProcessEvent ( pDrawWeaponChange, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawTileByMaterial ( class UCanvas* C, class UMaterial* mat, int iAlpha, float fUL, float fVL, float fScale )
{
	static UFunction* pDrawTileByMaterial = 0;
	AwHudPart_DisplayEvent_execDrawTileByMaterial_Parms parms;

	if ( !pDrawTileByMaterial )
		pDrawTileByMaterial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawTileByMaterial" );

	parms.C = C;
	parms.mat = mat;
	parms.iAlpha = iAlpha;
	parms.fUL = fUL;
	parms.fVL = fVL;
	parms.fScale = fScale;
	this->ProcessEvent ( pDrawTileByMaterial, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessage_BeginMission ( class UCanvas* C, int iRound, bool bChangeAttackTeam, int iAttackTeam, int iElapsedTime )
{
	static UFunction* pDrawMessage_BeginMission = 0;
	AwHudPart_DisplayEvent_execDrawMessage_BeginMission_Parms parms;

	if ( !pDrawMessage_BeginMission )
		pDrawMessage_BeginMission = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessage_BeginMission" );

	parms.C = C;
	parms.iRound = iRound;
	parms.bChangeAttackTeam = bChangeAttackTeam;
	parms.iAttackTeam = iAttackTeam;
	parms.iElapsedTime = iElapsedTime;
	this->ProcessEvent ( pDrawMessage_BeginMission, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawResultScore_FFA ( class UCanvas* C )
{
	static UFunction* pDrawResultScore_FFA = 0;
	AwHudPart_DisplayEvent_execDrawResultScore_FFA_Parms parms;

	if ( !pDrawResultScore_FFA )
		pDrawResultScore_FFA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawResultScore_FFA" );

	parms.C = C;
	this->ProcessEvent ( pDrawResultScore_FFA, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawResultScore_FFA_Item ( class UCanvas* C, bool drawTop, class APlayerReplicationInfo* currPRI, class UwMatchUserInfo* User, int lh, int currLH, int nextLH, class UMaterial* medalMat, int Rank )
{
	static UFunction* pDrawResultScore_FFA_Item = 0;
	AwHudPart_DisplayEvent_execDrawResultScore_FFA_Item_Parms parms;

	if ( !pDrawResultScore_FFA_Item )
		pDrawResultScore_FFA_Item = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawResultScore_FFA_Item" );

	parms.C = C;
	parms.drawTop = drawTop;
	parms.currPRI = currPRI;
	parms.User = User;
	parms.lh = lh;
	parms.currLH = currLH;
	parms.nextLH = nextLH;
	parms.medalMat = medalMat;
	parms.Rank = Rank;
	this->ProcessEvent ( pDrawResultScore_FFA_Item, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawResultScore ( class UCanvas* C, bool Won )
{
	static UFunction* pDrawResultScore = 0;
	AwHudPart_DisplayEvent_execDrawResultScore_Parms parms;

	if ( !pDrawResultScore )
		pDrawResultScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawResultScore" );

	parms.C = C;
	parms.Won = Won;
	this->ProcessEvent ( pDrawResultScore, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawTeamScoreUseImage (  )
{
	static UFunction* pDrawTeamScoreUseImage = 0;
	AwHudPart_DisplayEvent_execDrawTeamScoreUseImage_Parms parms;

	if ( !pDrawTeamScoreUseImage )
		pDrawTeamScoreUseImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawTeamScoreUseImage" );

	this->ProcessEvent ( pDrawTeamScoreUseImage, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawSpectating ( class UCanvas* C )
{
	static UFunction* pDrawSpectating = 0;
	AwHudPart_DisplayEvent_execDrawSpectating_Parms parms;

	if ( !pDrawSpectating )
		pDrawSpectating = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawSpectating" );

	parms.C = C;
	this->ProcessEvent ( pDrawSpectating, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawA ( class UCanvas* C )
{
	static UFunction* pDrawA = 0;
	AwHudPart_DisplayEvent_execDrawA_Parms parms;

	if ( !pDrawA )
		pDrawA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawA" );

	parms.C = C;
	this->ProcessEvent ( pDrawA, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawTimerBomb ( class UCanvas* C, int Min, int sec )
{
	static UFunction* pDrawTimerBomb = 0;
	AwHudPart_DisplayEvent_execDrawTimerBomb_Parms parms;

	if ( !pDrawTimerBomb )
		pDrawTimerBomb = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawTimerBomb" );

	parms.C = C;
	parms.Min = Min;
	parms.sec = sec;
	this->ProcessEvent ( pDrawTimerBomb, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawRankingInfo_Text ( class UCanvas* C, class APlayerReplicationInfo* currPRI, float _iPosX, float _iPosY, class FColor FontColor )
{
	static UFunction* pDrawRankingInfo_Text = 0;
	AwHudPart_DisplayEvent_execDrawRankingInfo_Text_Parms parms;

	if ( !pDrawRankingInfo_Text )
		pDrawRankingInfo_Text = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawRankingInfo_Text" );

	parms.C = C;
	parms.currPRI = currPRI;
	parms._iPosX = _iPosX;
	parms._iPosY = _iPosY;
	parms.FontColor = FontColor;
	this->ProcessEvent ( pDrawRankingInfo_Text, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawRankingInfo_Mark ( class UCanvas* C, class APlayerReplicationInfo* currPRI, float _iPosX, float _iPosY )
{
	static UFunction* pDrawRankingInfo_Mark = 0;
	AwHudPart_DisplayEvent_execDrawRankingInfo_Mark_Parms parms;

	if ( !pDrawRankingInfo_Mark )
		pDrawRankingInfo_Mark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawRankingInfo_Mark" );

	parms.C = C;
	parms.currPRI = currPRI;
	parms._iPosX = _iPosX;
	parms._iPosY = _iPosY;
	this->ProcessEvent ( pDrawRankingInfo_Mark, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawRankingInfo ( class UCanvas* C, class APlayerReplicationInfo* currPRI, float _iPosX, float _iPosY )
{
	static UFunction* pDrawRankingInfo = 0;
	AwHudPart_DisplayEvent_execDrawRankingInfo_Parms parms;

	if ( !pDrawRankingInfo )
		pDrawRankingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawRankingInfo" );

	parms.C = C;
	parms.currPRI = currPRI;
	parms._iPosX = _iPosX;
	parms._iPosY = _iPosY;
	this->ProcessEvent ( pDrawRankingInfo, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawDFRankingInfo ( class UCanvas* C, class APlayerReplicationInfo* PRI, float iPosX, float iPosY )
{
	static UFunction* pDrawDFRankingInfo = 0;
	AwHudPart_DisplayEvent_execDrawDFRankingInfo_Parms parms;

	if ( !pDrawDFRankingInfo )
		pDrawDFRankingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawDFRankingInfo" );

	parms.C = C;
	parms.PRI = PRI;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	this->ProcessEvent ( pDrawDFRankingInfo, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawDFScore ( class UCanvas* C )
{
	static UFunction* pDrawDFScore = 0;
	AwHudPart_DisplayEvent_execDrawDFScore_Parms parms;

	if ( !pDrawDFScore )
		pDrawDFScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawDFScore" );

	parms.C = C;
	this->ProcessEvent ( pDrawDFScore, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawFFAScore ( class UCanvas* C )
{
	static UFunction* pDrawFFAScore = 0;
	AwHudPart_DisplayEvent_execDrawFFAScore_Parms parms;

	if ( !pDrawFFAScore )
		pDrawFFAScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawFFAScore" );

	parms.C = C;
	this->ProcessEvent ( pDrawFFAScore, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DFRankingSorting (  )
{
	static UFunction* pDFRankingSorting = 0;
	AwHudPart_DisplayEvent_execDFRankingSorting_Parms parms;

	if ( !pDFRankingSorting )
		pDFRankingSorting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DFRankingSorting" );

	this->ProcessEvent ( pDFRankingSorting, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::FFARankingSorting (  )
{
	static UFunction* pFFARankingSorting = 0;
	AwHudPart_DisplayEvent_execFFARankingSorting_Parms parms;

	if ( !pFFARankingSorting )
		pFFARankingSorting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.FFARankingSorting" );

	this->ProcessEvent ( pFFARankingSorting, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::SortPRIArray (  )
{
	static UFunction* pSortPRIArray = 0;
	AwHudPart_DisplayEvent_execSortPRIArray_Parms parms;

	if ( !pSortPRIArray )
		pSortPRIArray = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.SortPRIArray" );

	this->ProcessEvent ( pSortPRIArray, &parms, NULL );

}*/

/*bool AwHudPart_DisplayEvent::InOrder ( class APlayerReplicationInfo* P1, class APlayerReplicationInfo* P2 )
{
	static UFunction* pInOrder = 0;
	AwHudPart_DisplayEvent_execInOrder_Parms parms;

	if ( !pInOrder )
		pInOrder = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.InOrder" );

	parms.P1 = P1;
	parms.P2 = P2;
	this->ProcessEvent ( pInOrder, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_DisplayEvent::DrawMainScoreTeam ( class UCanvas* C, int iScoreAF, int iScoreRSA, int _iPosX, int _iPosY, struct FCalCoordsW calW )
{
	static UFunction* pDrawMainScoreTeam = 0;
	AwHudPart_DisplayEvent_execDrawMainScoreTeam_Parms parms;

	if ( !pDrawMainScoreTeam )
		pDrawMainScoreTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMainScoreTeam" );

	parms.C = C;
	parms.iScoreAF = iScoreAF;
	parms.iScoreRSA = iScoreRSA;
	parms._iPosX = _iPosX;
	parms._iPosY = _iPosY;
	parms.calW = calW;
	this->ProcessEvent ( pDrawMainScoreTeam, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMainScore ( class UCanvas* C )
{
	static UFunction* pDrawMainScore = 0;
	AwHudPart_DisplayEvent_execDrawMainScore_Parms parms;

	if ( !pDrawMainScore )
		pDrawMainScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMainScore" );

	parms.C = C;
	this->ProcessEvent ( pDrawMainScore, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMainTimer ( class UCanvas* C )
{
	static UFunction* pDrawMainTimer = 0;
	AwHudPart_DisplayEvent_execDrawMainTimer_Parms parms;

	if ( !pDrawMainTimer )
		pDrawMainTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMainTimer" );

	parms.C = C;
	this->ProcessEvent ( pDrawMainTimer, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawRoundResult ( class UCanvas* C, int ScoringTeam )
{
	static UFunction* pDrawRoundResult = 0;
	AwHudPart_DisplayEvent_execDrawRoundResult_Parms parms;

	if ( !pDrawRoundResult )
		pDrawRoundResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawRoundResult" );

	parms.C = C;
	parms.ScoringTeam = ScoringTeam;
	this->ProcessEvent ( pDrawRoundResult, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayRoundResult ( class UCanvas* C, int ScoringTeam )
{
	static UFunction* pDisplayRoundResult = 0;
	AwHudPart_DisplayEvent_execDisplayRoundResult_Parms parms;

	if ( !pDisplayRoundResult )
		pDisplayRoundResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayRoundResult" );

	parms.C = C;
	parms.ScoringTeam = ScoringTeam;
	this->ProcessEvent ( pDisplayRoundResult, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayMessaage_Round ( class UCanvas* C, int iAttackTeam, int iAlpha )
{
	static UFunction* pDisplayMessaage_Round = 0;
	AwHudPart_DisplayEvent_execDisplayMessaage_Round_Parms parms;

	if ( !pDisplayMessaage_Round )
		pDisplayMessaage_Round = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayMessaage_Round" );

	parms.C = C;
	parms.iAttackTeam = iAttackTeam;
	parms.iAlpha = iAlpha;
	this->ProcessEvent ( pDisplayMessaage_Round, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayMessage_Mission ( class UCanvas* C, int iAttackTeam, int iAlpha )
{
	static UFunction* pDisplayMessage_Mission = 0;
	AwHudPart_DisplayEvent_execDisplayMessage_Mission_Parms parms;

	if ( !pDisplayMessage_Mission )
		pDisplayMessage_Mission = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayMessage_Mission" );

	parms.C = C;
	parms.iAttackTeam = iAttackTeam;
	parms.iAlpha = iAlpha;
	this->ProcessEvent ( pDisplayMessage_Mission, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayMessage_Mission_Intrusion ( class UCanvas* C, int iAttackTeam, int iRound )
{
	static UFunction* pDisplayMessage_Mission_Intrusion = 0;
	AwHudPart_DisplayEvent_execDisplayMessage_Mission_Intrusion_Parms parms;

	if ( !pDisplayMessage_Mission_Intrusion )
		pDisplayMessage_Mission_Intrusion = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayMessage_Mission_Intrusion" );

	parms.C = C;
	parms.iAttackTeam = iAttackTeam;
	parms.iRound = iRound;
	this->ProcessEvent ( pDisplayMessage_Mission_Intrusion, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawCountDown ( class UCanvas* C, int iCount )
{
	static UFunction* pDrawCountDown = 0;
	AwHudPart_DisplayEvent_execDrawCountDown_Parms parms;

	if ( !pDrawCountDown )
		pDrawCountDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawCountDown" );

	parms.C = C;
	parms.iCount = iCount;
	this->ProcessEvent ( pDrawCountDown, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessage_Waiting ( class UCanvas* C )
{
	static UFunction* pDrawMessage_Waiting = 0;
	AwHudPart_DisplayEvent_execDrawMessage_Waiting_Parms parms;

	if ( !pDrawMessage_Waiting )
		pDrawMessage_Waiting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessage_Waiting" );

	parms.C = C;
	this->ProcessEvent ( pDrawMessage_Waiting, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessage_WaitingCountGM ( class UCanvas* C )
{
	static UFunction* pDrawMessage_WaitingCountGM = 0;
	AwHudPart_DisplayEvent_execDrawMessage_WaitingCountGM_Parms parms;

	if ( !pDrawMessage_WaitingCountGM )
		pDrawMessage_WaitingCountGM = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessage_WaitingCountGM" );

	parms.C = C;
	this->ProcessEvent ( pDrawMessage_WaitingCountGM, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessage_StartDefence ( class UCanvas* C )
{
	static UFunction* pDrawMessage_StartDefence = 0;
	AwHudPart_DisplayEvent_execDrawMessage_StartDefence_Parms parms;

	if ( !pDrawMessage_StartDefence )
		pDrawMessage_StartDefence = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessage_StartDefence" );

	parms.C = C;
	this->ProcessEvent ( pDrawMessage_StartDefence, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessage_Start ( class UCanvas* C )
{
	static UFunction* pDrawMessage_Start = 0;
	AwHudPart_DisplayEvent_execDrawMessage_Start_Parms parms;

	if ( !pDrawMessage_Start )
		pDrawMessage_Start = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessage_Start" );

	parms.C = C;
	this->ProcessEvent ( pDrawMessage_Start, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessage_Go ( class UCanvas* C )
{
	static UFunction* pDrawMessage_Go = 0;
	AwHudPart_DisplayEvent_execDrawMessage_Go_Parms parms;

	if ( !pDrawMessage_Go )
		pDrawMessage_Go = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessage_Go" );

	parms.C = C;
	this->ProcessEvent ( pDrawMessage_Go, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawEffect ( class UCanvas* C, float StartTime, int iAlpha )
{
	static UFunction* pDrawEffect = 0;
	AwHudPart_DisplayEvent_execDrawEffect_Parms parms;

	if ( !pDrawEffect )
		pDrawEffect = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawEffect" );

	parms.C = C;
	parms.StartTime = StartTime;
	parms.iAlpha = iAlpha;
	this->ProcessEvent ( pDrawEffect, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessageHeadShotAndMultiKill ( class UCanvas* C, struct FString sMessage, bool bAddPosY, float fFontSize, class FColor _colorShadow )
{
	static UFunction* pDrawMessageHeadShotAndMultiKill = 0;
	AwHudPart_DisplayEvent_execDrawMessageHeadShotAndMultiKill_Parms parms;

	if ( !pDrawMessageHeadShotAndMultiKill )
		pDrawMessageHeadShotAndMultiKill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessageHeadShotAndMultiKill" );

	parms.C = C;
	parms.sMessage = sMessage;
	parms.bAddPosY = bAddPosY;
	parms.fFontSize = fFontSize;
	parms._colorShadow = _colorShadow;
	this->ProcessEvent ( pDrawMessageHeadShotAndMultiKill, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessageDomi_Capture ( class UCanvas* C, struct FDigitSet WDigit, struct FNumericWidget WRegion, struct FSpriteWidget WMessage, bool CaptureDoing, float ProgressPct )
{
	static UFunction* pDrawMessageDomi_Capture = 0;
	AwHudPart_DisplayEvent_execDrawMessageDomi_Capture_Parms parms;

	if ( !pDrawMessageDomi_Capture )
		pDrawMessageDomi_Capture = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessageDomi_Capture" );

	parms.C = C;
	parms.WDigit = WDigit;
	parms.WRegion = WRegion;
	parms.WMessage = WMessage;
	parms.CaptureDoing = CaptureDoing;
	parms.ProgressPct = ProgressPct;
	this->ProcessEvent ( pDrawMessageDomi_Capture, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessageSD_BombDoingAndDone ( class UCanvas* C, struct FSpriteWidget WMessage, bool SDDoing, float ProgressPct )
{
	static UFunction* pDrawMessageSD_BombDoingAndDone = 0;
	AwHudPart_DisplayEvent_execDrawMessageSD_BombDoingAndDone_Parms parms;

	if ( !pDrawMessageSD_BombDoingAndDone )
		pDrawMessageSD_BombDoingAndDone = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessageSD_BombDoingAndDone" );

	parms.C = C;
	parms.WMessage = WMessage;
	parms.SDDoing = SDDoing;
	parms.ProgressPct = ProgressPct;
	this->ProcessEvent ( pDrawMessageSD_BombDoingAndDone, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawMessageSD_BombEnable ( class UCanvas* C, struct FSpriteWidget WKey, struct FSpriteWidget WMessage )
{
	static UFunction* pDrawMessageSD_BombEnable = 0;
	AwHudPart_DisplayEvent_execDrawMessageSD_BombEnable_Parms parms;

	if ( !pDrawMessageSD_BombEnable )
		pDrawMessageSD_BombEnable = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawMessageSD_BombEnable" );

	parms.C = C;
	parms.WKey = WKey;
	parms.WMessage = WMessage;
	this->ProcessEvent ( pDrawMessageSD_BombEnable, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawInvincibleGauge ( class UCanvas* C )
{
	static UFunction* pDrawInvincibleGauge = 0;
	AwHudPart_DisplayEvent_execDrawInvincibleGauge_Parms parms;

	if ( !pDrawInvincibleGauge )
		pDrawInvincibleGauge = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawInvincibleGauge" );

	parms.C = C;
	this->ProcessEvent ( pDrawInvincibleGauge, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawGauge2 ( class UCanvas* C, float fProgressPct, float PosX, float PosY )
{
	static UFunction* pDrawGauge2 = 0;
	AwHudPart_DisplayEvent_execDrawGauge2_Parms parms;

	if ( !pDrawGauge2 )
		pDrawGauge2 = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawGauge2" );

	parms.C = C;
	parms.fProgressPct = fProgressPct;
	parms.PosX = PosX;
	parms.PosY = PosY;
	this->ProcessEvent ( pDrawGauge2, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_Respawn ( class UCanvas* C )
{
	static UFunction* pDisplayEvent_Respawn = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_Respawn_Parms parms;

	if ( !pDisplayEvent_Respawn )
		pDisplayEvent_Respawn = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_Respawn" );

	parms.C = C;
	this->ProcessEvent ( pDisplayEvent_Respawn, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawGauge ( class UCanvas* C, float fProgressPct )
{
	static UFunction* pDrawGauge = 0;
	AwHudPart_DisplayEvent_execDrawGauge_Parms parms;

	if ( !pDrawGauge )
		pDrawGauge = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawGauge" );

	parms.C = C;
	parms.fProgressPct = fProgressPct;
	this->ProcessEvent ( pDrawGauge, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawHelpBG ( class UCanvas* C, int OffsetX, int OffsetY, int iWidth, int iHeight )
{
	static UFunction* pDrawHelpBG = 0;
	AwHudPart_DisplayEvent_execDrawHelpBG_Parms parms;

	if ( !pDrawHelpBG )
		pDrawHelpBG = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawHelpBG" );

	parms.C = C;
	parms.OffsetX = OffsetX;
	parms.OffsetY = OffsetY;
	parms.iWidth = iWidth;
	parms.iHeight = iHeight;
	this->ProcessEvent ( pDrawHelpBG, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::Draw_Item_Skill ( class UCanvas* C, class APlayerReplicationInfo* curPRI )
{
	static UFunction* pDraw_Item_Skill = 0;
	AwHudPart_DisplayEvent_execDraw_Item_Skill_Parms parms;

	if ( !pDraw_Item_Skill )
		pDraw_Item_Skill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.Draw_Item_Skill" );

	parms.C = C;
	parms.curPRI = curPRI;
	this->ProcessEvent ( pDraw_Item_Skill, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::Draw_Item_Supply ( class UCanvas* C, class APlayerReplicationInfo* curPRI )
{
	static UFunction* pDraw_Item_Supply = 0;
	AwHudPart_DisplayEvent_execDraw_Item_Supply_Parms parms;

	if ( !pDraw_Item_Supply )
		pDraw_Item_Supply = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.Draw_Item_Supply" );

	parms.C = C;
	parms.curPRI = curPRI;
	this->ProcessEvent ( pDraw_Item_Supply, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawEvent_Item ( class UCanvas* C )
{
	static UFunction* pDrawEvent_Item = 0;
	AwHudPart_DisplayEvent_execDrawEvent_Item_Parms parms;

	if ( !pDrawEvent_Item )
		pDrawEvent_Item = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawEvent_Item" );

	parms.C = C;
	this->ProcessEvent ( pDrawEvent_Item, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_Skill_UsingSkill ( class UCanvas* C )
{
	static UFunction* pDisplayEvent_Skill_UsingSkill = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_Skill_UsingSkill_Parms parms;

	if ( !pDisplayEvent_Skill_UsingSkill )
		pDisplayEvent_Skill_UsingSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_Skill_UsingSkill" );

	parms.C = C;
	this->ProcessEvent ( pDisplayEvent_Skill_UsingSkill, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_Skill_UAV ( class UCanvas* C )
{
	static UFunction* pDisplayEvent_Skill_UAV = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_Skill_UAV_Parms parms;

	if ( !pDisplayEvent_Skill_UAV )
		pDisplayEvent_Skill_UAV = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_Skill_UAV" );

	parms.C = C;
	this->ProcessEvent ( pDisplayEvent_Skill_UAV, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_Skill_AirStirke ( class UCanvas* C )
{
	static UFunction* pDisplayEvent_Skill_AirStirke = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_Skill_AirStirke_Parms parms;

	if ( !pDisplayEvent_Skill_AirStirke )
		pDisplayEvent_Skill_AirStirke = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_Skill_AirStirke" );

	parms.C = C;
	this->ProcessEvent ( pDisplayEvent_Skill_AirStirke, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_Skill_State ( class UCanvas* C, struct FSpriteWidget WMessage, struct FSpriteWidget SkillIcon, bool bDrawing )
{
	static UFunction* pDisplayEvent_Skill_State = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_Skill_State_Parms parms;

	if ( !pDisplayEvent_Skill_State )
		pDisplayEvent_Skill_State = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_Skill_State" );

	parms.C = C;
	parms.WMessage = WMessage;
	parms.SkillIcon = SkillIcon;
	parms.bDrawing = bDrawing;
	this->ProcessEvent ( pDisplayEvent_Skill_State, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::CallSkill ( int iKey, bool bRequire, bool iSucess )
{
	static UFunction* pCallSkill = 0;
	AwHudPart_DisplayEvent_execCallSkill_Parms parms;

	if ( !pCallSkill )
		pCallSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.CallSkill" );

	parms.iKey = iKey;
	parms.bRequire = bRequire;
	parms.iSucess = iSucess;
	this->ProcessEvent ( pCallSkill, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_Skill_Helicopter ( class UCanvas* C )
{
	static UFunction* pDisplayEvent_Skill_Helicopter = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_Skill_Helicopter_Parms parms;

	if ( !pDisplayEvent_Skill_Helicopter )
		pDisplayEvent_Skill_Helicopter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_Skill_Helicopter" );

	parms.C = C;
	this->ProcessEvent ( pDisplayEvent_Skill_Helicopter, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DrawEvent_Item_HealthPack ( class UCanvas* C, int AddHp )
{
	static UFunction* pDrawEvent_Item_HealthPack = 0;
	AwHudPart_DisplayEvent_execDrawEvent_Item_HealthPack_Parms parms;

	if ( !pDrawEvent_Item_HealthPack )
		pDrawEvent_Item_HealthPack = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DrawEvent_Item_HealthPack" );

	parms.C = C;
	parms.AddHp = AddHp;
	this->ProcessEvent ( pDrawEvent_Item_HealthPack, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::SetSkillState ( int skillC4, int skillAirStirke, int SkillRPG7 )
{
	static UFunction* pSetSkillState = 0;
	AwHudPart_DisplayEvent_execSetSkillState_Parms parms;

	if ( !pSetSkillState )
		pSetSkillState = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.SetSkillState" );

	parms.skillC4 = skillC4;
	parms.skillAirStirke = skillAirStirke;
	parms.SkillRPG7 = SkillRPG7;
	this->ProcessEvent ( pSetSkillState, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisPlayEvent_Waiting ( struct FString Message )
{
	static UFunction* pDisPlayEvent_Waiting = 0;
	AwHudPart_DisplayEvent_execDisPlayEvent_Waiting_Parms parms;

	if ( !pDisPlayEvent_Waiting )
		pDisPlayEvent_Waiting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisPlayEvent_Waiting" );

	parms.Message = Message;
	this->ProcessEvent ( pDisPlayEvent_Waiting, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::UpdateHelpKeyControll (  )
{
	static UFunction* pUpdateHelpKeyControll = 0;
	AwHudPart_DisplayEvent_execUpdateHelpKeyControll_Parms parms;

	if ( !pUpdateHelpKeyControll )
		pUpdateHelpKeyControll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.UpdateHelpKeyControll" );

	this->ProcessEvent ( pUpdateHelpKeyControll, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::UpdateHUD (  )
{
	static UFunction* pUpdateHUD = 0;
	AwHudPart_DisplayEvent_execUpdateHUD_Parms parms;

	if ( !pUpdateHUD )
		pUpdateHUD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.UpdateHUD" );

	this->ProcessEvent ( pUpdateHUD, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::PlaySound_Event (  )
{
	static UFunction* pPlaySound_Event = 0;
	AwHudPart_DisplayEvent_execPlaySound_Event_Parms parms;

	if ( !pPlaySound_Event )
		pPlaySound_Event = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.PlaySound_Event" );

	this->ProcessEvent ( pPlaySound_Event, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisplayEvent_CountDown ( int iCount )
{
	static UFunction* pDisplayEvent_CountDown = 0;
	AwHudPart_DisplayEvent_execDisplayEvent_CountDown_Parms parms;

	if ( !pDisplayEvent_CountDown )
		pDisplayEvent_CountDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisplayEvent_CountDown" );

	parms.iCount = iCount;
	this->ProcessEvent ( pDisplayEvent_CountDown, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisPlayEvent_EndWaitingForStart (  )
{
	static UFunction* pDisPlayEvent_EndWaitingForStart = 0;
	AwHudPart_DisplayEvent_execDisPlayEvent_EndWaitingForStart_Parms parms;

	if ( !pDisPlayEvent_EndWaitingForStart )
		pDisPlayEvent_EndWaitingForStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisPlayEvent_EndWaitingForStart" );

	this->ProcessEvent ( pDisPlayEvent_EndWaitingForStart, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::DisPlayEvent_BeginWaitingForStart (  )
{
	static UFunction* pDisPlayEvent_BeginWaitingForStart = 0;
	AwHudPart_DisplayEvent_execDisPlayEvent_BeginWaitingForStart_Parms parms;

	if ( !pDisPlayEvent_BeginWaitingForStart )
		pDisPlayEvent_BeginWaitingForStart = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.DisPlayEvent_BeginWaitingForStart" );

	this->ProcessEvent ( pDisPlayEvent_BeginWaitingForStart, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::CallEvent ( bool ItemCheck, int iReservation1, int iReservation2 )
{
	static UFunction* pCallEvent = 0;
	AwHudPart_DisplayEvent_execCallEvent_Parms parms;

	if ( !pCallEvent )
		pCallEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.CallEvent" );

	parms.ItemCheck = ItemCheck;
	parms.iReservation1 = iReservation1;
	parms.iReservation2 = iReservation2;
	this->ProcessEvent ( pCallEvent, &parms, NULL );

}*/

/*void AwHudPart_DisplayEvent::Initialize ( class AHudBase* myOwner, class ALevelInfo* Level )
{
	static UFunction* pInitialize = 0;
	AwHudPart_DisplayEvent_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayEvent.Initialize" );

	parms.myOwner = myOwner;
	parms.Level = Level;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*struct FString AxScoreBoard::GetEllipsString ( class UCanvas* C, struct FString strText, float fLimitWidth, float FontSize )
{
	static UFunction* pGetEllipsString = 0;
	AxScoreBoard_execGetEllipsString_Parms parms;

	if ( !pGetEllipsString )
		pGetEllipsString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoard.GetEllipsString" );

	parms.C = C;
	parms.strText = strText;
	parms.fLimitWidth = fLimitWidth;
	parms.FontSize = FontSize;
	this->ProcessEvent ( pGetEllipsString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AxScoreBoard::CalculateCoordinateDigit ( class UCanvas* C, struct FDigitSet W, struct FNumericWidget N, float fWidth, float fHeight, int Index, struct FCalCoordsW* coordsW )
{
	static UFunction* pCalculateCoordinateDigit = 0;
	AxScoreBoard_execCalculateCoordinateDigit_Parms parms;

	if ( !pCalculateCoordinateDigit )
		pCalculateCoordinateDigit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoard.CalculateCoordinateDigit" );

	parms.C = C;
	parms.W = W;
	parms.N = N;
	parms.fWidth = fWidth;
	parms.fHeight = fHeight;
	parms.Index = Index;
	this->ProcessEvent ( pCalculateCoordinateDigit, &parms, NULL );

	*coordsW = parms.coordsW;
}*/

/*void AxScoreBoard::CalculateCoordinate ( class UCanvas* C, struct FSpriteWidget W, float fWidth, float fHeight, struct FCalCoordsW* coordsW )
{
	static UFunction* pCalculateCoordinate = 0;
	AxScoreBoard_execCalculateCoordinate_Parms parms;

	if ( !pCalculateCoordinate )
		pCalculateCoordinate = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoard.CalculateCoordinate" );

	parms.C = C;
	parms.W = W;
	parms.fWidth = fWidth;
	parms.fHeight = fHeight;
	this->ProcessEvent ( pCalculateCoordinate, &parms, NULL );

	*coordsW = parms.coordsW;
}*/

/*void AxScoreBoardTeamGame::UpdateScoreBoard ( class UCanvas* Canvas )
{
	static UFunction* pUpdateScoreBoard = 0;
	AxScoreBoardTeamGame_execUpdateScoreBoard_Parms parms;

	if ( !pUpdateScoreBoard )
		pUpdateScoreBoard = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.UpdateScoreBoard" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pUpdateScoreBoard, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::eventDrawMiniMap ( class UCanvas* C )
{
	static UFunction* pDrawMiniMap = 0;
	AxScoreBoardTeamGame_eventDrawMiniMap_Parms parms;

	if ( !pDrawMiniMap )
		pDrawMiniMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawMiniMap" );

	parms.C = C;
	this->ProcessEvent ( pDrawMiniMap, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::eventDrawScoreboard ( class UCanvas* C )
{
	static UFunction* pDrawScoreboard = 0;
	AxScoreBoardTeamGame_eventDrawScoreboard_Parms parms;

	if ( !pDrawScoreboard )
		pDrawScoreboard = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawScoreboard" );

	parms.C = C;
	this->ProcessEvent ( pDrawScoreboard, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawGMTeamListSection ( class UCanvas* C, int lpTeam, class APlayerReplicationInfo* currPRI, int memberCount, float beginX, float beginY )
{
	static UFunction* pDrawGMTeamListSection = 0;
	AxScoreBoardTeamGame_execDrawGMTeamListSection_Parms parms;

	if ( !pDrawGMTeamListSection )
		pDrawGMTeamListSection = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawGMTeamListSection" );

	parms.C = C;
	parms.lpTeam = lpTeam;
	parms.currPRI = currPRI;
	parms.memberCount = memberCount;
	parms.beginX = beginX;
	parms.beginY = beginY;
	this->ProcessEvent ( pDrawGMTeamListSection, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::eventDrawGMUserBoard ( class UCanvas* C )
{
	static UFunction* pDrawGMUserBoard = 0;
	AxScoreBoardTeamGame_eventDrawGMUserBoard_Parms parms;

	if ( !pDrawGMUserBoard )
		pDrawGMUserBoard = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawGMUserBoard" );

	parms.C = C;
	this->ProcessEvent ( pDrawGMUserBoard, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawTeamListBG_Mission ( class UCanvas* C )
{
	static UFunction* pDrawTeamListBG_Mission = 0;
	AxScoreBoardTeamGame_execDrawTeamListBG_Mission_Parms parms;

	if ( !pDrawTeamListBG_Mission )
		pDrawTeamListBG_Mission = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTeamListBG_Mission" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamListBG_Mission, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawTeamListBG_Tut ( class UCanvas* C )
{
	static UFunction* pDrawTeamListBG_Tut = 0;
	AxScoreBoardTeamGame_execDrawTeamListBG_Tut_Parms parms;

	if ( !pDrawTeamListBG_Tut )
		pDrawTeamListBG_Tut = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTeamListBG_Tut" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamListBG_Tut, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawTeamListBG_FFA ( class UCanvas* C )
{
	static UFunction* pDrawTeamListBG_FFA = 0;
	AxScoreBoardTeamGame_execDrawTeamListBG_FFA_Parms parms;

	if ( !pDrawTeamListBG_FFA )
		pDrawTeamListBG_FFA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTeamListBG_FFA" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamListBG_FFA, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawTeamBG ( class UCanvas* C )
{
	static UFunction* pDrawTeamBG = 0;
	AxScoreBoardTeamGame_execDrawTeamBG_Parms parms;

	if ( !pDrawTeamBG )
		pDrawTeamBG = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTeamBG" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamBG, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawMap ( class UCanvas* C )
{
	static UFunction* pDrawMap = 0;
	AxScoreBoardTeamGame_execDrawMap_Parms parms;

	if ( !pDrawMap )
		pDrawMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawMap" );

	parms.C = C;
	this->ProcessEvent ( pDrawMap, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawMapName ( class UCanvas* C )
{
	static UFunction* pDrawMapName = 0;
	AxScoreBoardTeamGame_execDrawMapName_Parms parms;

	if ( !pDrawMapName )
		pDrawMapName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawMapName" );

	parms.C = C;
	this->ProcessEvent ( pDrawMapName, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::MissonComment ( class UCanvas* C, float X1, float Y1, float X2, float Y2, struct FString MN )
{
	static UFunction* pMissonComment = 0;
	AxScoreBoardTeamGame_execMissonComment_Parms parms;

	if ( !pMissonComment )
		pMissonComment = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.MissonComment" );

	parms.C = C;
	parms.X1 = X1;
	parms.Y1 = Y1;
	parms.X2 = X2;
	parms.Y2 = Y2;
	parms.MN = MN;
	this->ProcessEvent ( pMissonComment, &parms, NULL );

}*/

/*struct FString AxScoreBoardTeamGame::GetStringGoalScore (  )
{
	static UFunction* pGetStringGoalScore = 0;
	AxScoreBoardTeamGame_execGetStringGoalScore_Parms parms;

	if ( !pGetStringGoalScore )
		pGetStringGoalScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.GetStringGoalScore" );

	this->ProcessEvent ( pGetStringGoalScore, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AxScoreBoardTeamGame::DrawMissonComment ( class UCanvas* C )
{
	static UFunction* pDrawMissonComment = 0;
	AxScoreBoardTeamGame_execDrawMissonComment_Parms parms;

	if ( !pDrawMissonComment )
		pDrawMissonComment = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawMissonComment" );

	parms.C = C;
	this->ProcessEvent ( pDrawMissonComment, &parms, NULL );

}*/

/*struct FString AxScoreBoardTeamGame::GetStringPlayMode (  )
{
	static UFunction* pGetStringPlayMode = 0;
	AxScoreBoardTeamGame_execGetStringPlayMode_Parms parms;

	if ( !pGetStringPlayMode )
		pGetStringPlayMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.GetStringPlayMode" );

	this->ProcessEvent ( pGetStringPlayMode, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AxScoreBoardTeamGame::SetMissionInfo (  )
{
	static UFunction* pSetMissionInfo = 0;
	AxScoreBoardTeamGame_execSetMissionInfo_Parms parms;

	if ( !pSetMissionInfo )
		pSetMissionInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.SetMissionInfo" );

	this->ProcessEvent ( pSetMissionInfo, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawTeamScoreAndTimer ( class UCanvas* C, int _iPosX, int _iPosY )
{
	static UFunction* pDrawTeamScoreAndTimer = 0;
	AxScoreBoardTeamGame_execDrawTeamScoreAndTimer_Parms parms;

	if ( !pDrawTeamScoreAndTimer )
		pDrawTeamScoreAndTimer = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTeamScoreAndTimer" );

	parms.C = C;
	parms._iPosX = _iPosX;
	parms._iPosY = _iPosY;
	this->ProcessEvent ( pDrawTeamScoreAndTimer, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawRankingInfo_Text ( class UCanvas* C, class APlayerReplicationInfo* currPRI, float _iPosX, float _iPosY, class FColor FontColor )
{
	static UFunction* pDrawRankingInfo_Text = 0;
	AxScoreBoardTeamGame_execDrawRankingInfo_Text_Parms parms;

	if ( !pDrawRankingInfo_Text )
		pDrawRankingInfo_Text = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawRankingInfo_Text" );

	parms.C = C;
	parms.currPRI = currPRI;
	parms._iPosX = _iPosX;
	parms._iPosY = _iPosY;
	parms.FontColor = FontColor;
	this->ProcessEvent ( pDrawRankingInfo_Text, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawRankingInfo_Mark ( class UCanvas* C, class APlayerReplicationInfo* currPRI, float _iPosX, float _iPosY )
{
	static UFunction* pDrawRankingInfo_Mark = 0;
	AxScoreBoardTeamGame_execDrawRankingInfo_Mark_Parms parms;

	if ( !pDrawRankingInfo_Mark )
		pDrawRankingInfo_Mark = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawRankingInfo_Mark" );

	parms.C = C;
	parms.currPRI = currPRI;
	parms._iPosX = _iPosX;
	parms._iPosY = _iPosY;
	this->ProcessEvent ( pDrawRankingInfo_Mark, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawRankingInfo ( class UCanvas* C, class APlayerReplicationInfo* currPRI, float _iPosX, float _iPosY )
{
	static UFunction* pDrawRankingInfo = 0;
	AxScoreBoardTeamGame_execDrawRankingInfo_Parms parms;

	if ( !pDrawRankingInfo )
		pDrawRankingInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawRankingInfo" );

	parms.C = C;
	parms.currPRI = currPRI;
	parms._iPosX = _iPosX;
	parms._iPosY = _iPosY;
	this->ProcessEvent ( pDrawRankingInfo, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawFFAScore ( class UCanvas* C, float _iPosX, float _iPosY )
{
	static UFunction* pDrawFFAScore = 0;
	AxScoreBoardTeamGame_execDrawFFAScore_Parms parms;

	if ( !pDrawFFAScore )
		pDrawFFAScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawFFAScore" );

	parms.C = C;
	parms._iPosX = _iPosX;
	parms._iPosY = _iPosY;
	this->ProcessEvent ( pDrawFFAScore, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawGameInfo ( class UCanvas* C )
{
	static UFunction* pDrawGameInfo = 0;
	AxScoreBoardTeamGame_execDrawGameInfo_Parms parms;

	if ( !pDrawGameInfo )
		pDrawGameInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawGameInfo" );

	parms.C = C;
	this->ProcessEvent ( pDrawGameInfo, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::RankingSorting ( int iCurrent, int iNext, class TArray< class APlayerReplicationInfo* >* pris )
{
	static UFunction* pRankingSorting = 0;
	AxScoreBoardTeamGame_execRankingSorting_Parms parms;

	if ( !pRankingSorting )
		pRankingSorting = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.RankingSorting" );

	parms.iCurrent = iCurrent;
	parms.iNext = iNext;
	this->ProcessEvent ( pRankingSorting, &parms, NULL );

	*pris = parms.pris;
}*/

/*void AxScoreBoardTeamGame::DrawTeamListSection ( class UCanvas* C )
{
	static UFunction* pDrawTeamListSection = 0;
	AxScoreBoardTeamGame_execDrawTeamListSection_Parms parms;

	if ( !pDrawTeamListSection )
		pDrawTeamListSection = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTeamListSection" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamListSection, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawPersonListSection_C ( class UCanvas* C, int lpTeam, class APlayerReplicationInfo* currPRI, int memberCount, struct FString HostName, float beginY, float markBeginY, float markPingY )
{
	static UFunction* pDrawPersonListSection_C = 0;
	AxScoreBoardTeamGame_execDrawPersonListSection_C_Parms parms;

	if ( !pDrawPersonListSection_C )
		pDrawPersonListSection_C = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawPersonListSection_C" );

	parms.C = C;
	parms.lpTeam = lpTeam;
	parms.currPRI = currPRI;
	parms.memberCount = memberCount;
	parms.HostName = HostName;
	parms.beginY = beginY;
	parms.markBeginY = markBeginY;
	parms.markPingY = markPingY;
	this->ProcessEvent ( pDrawPersonListSection_C, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawTeamListSection_C ( class UCanvas* C, int lpTeam, class APlayerReplicationInfo* currPRI, int memberCount, struct FString HostName, float beginY, float markBeginY, float markPingY )
{
	static UFunction* pDrawTeamListSection_C = 0;
	AxScoreBoardTeamGame_execDrawTeamListSection_C_Parms parms;

	if ( !pDrawTeamListSection_C )
		pDrawTeamListSection_C = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTeamListSection_C" );

	parms.C = C;
	parms.lpTeam = lpTeam;
	parms.currPRI = currPRI;
	parms.memberCount = memberCount;
	parms.HostName = HostName;
	parms.beginY = beginY;
	parms.markBeginY = markBeginY;
	parms.markPingY = markPingY;
	this->ProcessEvent ( pDrawTeamListSection_C, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawTeamListSectionStripe ( class UCanvas* C, float OffsetY, int iTeamUserMax )
{
	static UFunction* pDrawTeamListSectionStripe = 0;
	AxScoreBoardTeamGame_execDrawTeamListSectionStripe_Parms parms;

	if ( !pDrawTeamListSectionStripe )
		pDrawTeamListSectionStripe = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTeamListSectionStripe" );

	parms.C = C;
	parms.OffsetY = OffsetY;
	parms.iTeamUserMax = iTeamUserMax;
	this->ProcessEvent ( pDrawTeamListSectionStripe, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawTime ( class UCanvas* C )
{
	static UFunction* pDrawTime = 0;
	AxScoreBoardTeamGame_execDrawTime_Parms parms;

	if ( !pDrawTime )
		pDrawTime = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTime" );

	parms.C = C;
	this->ProcessEvent ( pDrawTime, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawTextTeamScore ( class UCanvas* C, float _OffSetX, float _OffSetY )
{
	static UFunction* pDrawTextTeamScore = 0;
	AxScoreBoardTeamGame_execDrawTextTeamScore_Parms parms;

	if ( !pDrawTextTeamScore )
		pDrawTextTeamScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawTextTeamScore" );

	parms.C = C;
	parms._OffSetX = _OffSetX;
	parms._OffSetY = _OffSetY;
	this->ProcessEvent ( pDrawTextTeamScore, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawContentDescriptionTeam ( class UCanvas* C, float _OffSetX, float _OffSetY )
{
	static UFunction* pDrawContentDescriptionTeam = 0;
	AxScoreBoardTeamGame_execDrawContentDescriptionTeam_Parms parms;

	if ( !pDrawContentDescriptionTeam )
		pDrawContentDescriptionTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawContentDescriptionTeam" );

	parms.C = C;
	parms._OffSetX = _OffSetX;
	parms._OffSetY = _OffSetY;
	this->ProcessEvent ( pDrawContentDescriptionTeam, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawContentDescription ( class UCanvas* C, float _OffSetX, float _OffSetY )
{
	static UFunction* pDrawContentDescription = 0;
	AxScoreBoardTeamGame_execDrawContentDescription_Parms parms;

	if ( !pDrawContentDescription )
		pDrawContentDescription = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawContentDescription" );

	parms.C = C;
	parms._OffSetX = _OffSetX;
	parms._OffSetY = _OffSetY;
	this->ProcessEvent ( pDrawContentDescription, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawBGS ( class UCanvas* C )
{
	static UFunction* pDrawBGS = 0;
	AxScoreBoardTeamGame_execDrawBGS_Parms parms;

	if ( !pDrawBGS )
		pDrawBGS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawBGS" );

	parms.C = C;
	this->ProcessEvent ( pDrawBGS, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::SetAttackingTeam ( int Index )
{
	static UFunction* pSetAttackingTeam = 0;
	AxScoreBoardTeamGame_execSetAttackingTeam_Parms parms;

	if ( !pSetAttackingTeam )
		pSetAttackingTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.SetAttackingTeam" );

	parms.Index = Index;
	this->ProcessEvent ( pSetAttackingTeam, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::DrawMinimap_GameMode ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_GameMode = 0;
	AxScoreBoardTeamGame_execDrawMinimap_GameMode_Parms parms;

	if ( !pDrawMinimap_GameMode )
		pDrawMinimap_GameMode = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.DrawMinimap_GameMode" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_GameMode, &parms, NULL );

}*/

/*void AxScoreBoardTeamGame::PostBeginPlay (  )
{
	static UFunction* pPostBeginPlay = 0;
	AxScoreBoardTeamGame_execPostBeginPlay_Parms parms;

	if ( !pPostBeginPlay )
		pPostBeginPlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.PostBeginPlay" );

	this->ProcessEvent ( pPostBeginPlay, &parms, NULL );

}*/

/*class AHudBase* AxScoreBoardTeamGame::GetHudBaseOwner (  )
{
	static UFunction* pGetHudBaseOwner = 0;
	AxScoreBoardTeamGame_execGetHudBaseOwner_Parms parms;

	if ( !pGetHudBaseOwner )
		pGetHudBaseOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGame.GetHudBaseOwner" );

	this->ProcessEvent ( pGetHudBaseOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AScoreBoardDeathMatch::DrawNetInfo ( class UCanvas* Canvas, int FontReduction, int HeaderOffsetY, int PlayerBoxSizeY, int BoxSpaceY, int BoxTextOffsetY, int OwnerOffset, int PlayerCount, int NetXPos )
{
	static UFunction* pDrawNetInfo = 0;
	AScoreBoardDeathMatch_execDrawNetInfo_Parms parms;

	if ( !pDrawNetInfo )
		pDrawNetInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.DrawNetInfo" );

	parms.Canvas = Canvas;
	parms.FontReduction = FontReduction;
	parms.HeaderOffsetY = HeaderOffsetY;
	parms.PlayerBoxSizeY = PlayerBoxSizeY;
	parms.BoxSpaceY = BoxSpaceY;
	parms.BoxTextOffsetY = BoxTextOffsetY;
	parms.OwnerOffset = OwnerOffset;
	parms.PlayerCount = PlayerCount;
	parms.NetXPos = NetXPos;
	this->ProcessEvent ( pDrawNetInfo, &parms, NULL );

}*/

/*void AScoreBoardDeathMatch::DrawMatchID ( class UCanvas* Canvas, int FontReduction )
{
	static UFunction* pDrawMatchID = 0;
	AScoreBoardDeathMatch_execDrawMatchID_Parms parms;

	if ( !pDrawMatchID )
		pDrawMatchID = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.DrawMatchID" );

	parms.Canvas = Canvas;
	parms.FontReduction = FontReduction;
	this->ProcessEvent ( pDrawMatchID, &parms, NULL );

}*/

/*void AScoreBoardDeathMatch::eventUpdateScoreBoard ( class UCanvas* Canvas )
{
	static UFunction* pUpdateScoreBoard = 0;
	AScoreBoardDeathMatch_eventUpdateScoreBoard_Parms parms;

	if ( !pUpdateScoreBoard )
		pUpdateScoreBoard = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.UpdateScoreBoard" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pUpdateScoreBoard, &parms, NULL );

}*/

/*void AScoreBoardDeathMatch::ExtraMarking ( class UCanvas* Canvas, int PlayerCount, int OwnerOffset, int XPos, int YPos, int YOffset )
{
	static UFunction* pExtraMarking = 0;
	AScoreBoardDeathMatch_execExtraMarking_Parms parms;

	if ( !pExtraMarking )
		pExtraMarking = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.ExtraMarking" );

	parms.Canvas = Canvas;
	parms.PlayerCount = PlayerCount;
	parms.OwnerOffset = OwnerOffset;
	parms.XPos = XPos;
	parms.YPos = YPos;
	parms.YOffset = YOffset;
	this->ProcessEvent ( pExtraMarking, &parms, NULL );

}*/

/*struct FString AScoreBoardDeathMatch::GetDefaultScoreInfoString (  )
{
	static UFunction* pGetDefaultScoreInfoString = 0;
	AScoreBoardDeathMatch_execGetDefaultScoreInfoString_Parms parms;

	if ( !pGetDefaultScoreInfoString )
		pGetDefaultScoreInfoString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.GetDefaultScoreInfoString" );

	this->ProcessEvent ( pGetDefaultScoreInfoString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AScoreBoardDeathMatch::GetRestartString (  )
{
	static UFunction* pGetRestartString = 0;
	AScoreBoardDeathMatch_execGetRestartString_Parms parms;

	if ( !pGetRestartString )
		pGetRestartString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.GetRestartString" );

	this->ProcessEvent ( pGetRestartString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString AScoreBoardDeathMatch::GetTitleString (  )
{
	static UFunction* pGetTitleString = 0;
	AScoreBoardDeathMatch_execGetTitleString_Parms parms;

	if ( !pGetTitleString )
		pGetTitleString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.GetTitleString" );

	this->ProcessEvent ( pGetTitleString, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AScoreBoardDeathMatch::DrawTitle ( class UCanvas* Canvas, float HeaderOffsetY, float PlayerAreaY, float PlayerBoxSizeY )
{
	static UFunction* pDrawTitle = 0;
	AScoreBoardDeathMatch_execDrawTitle_Parms parms;

	if ( !pDrawTitle )
		pDrawTitle = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.DrawTitle" );

	parms.Canvas = Canvas;
	parms.HeaderOffsetY = HeaderOffsetY;
	parms.PlayerAreaY = PlayerAreaY;
	parms.PlayerBoxSizeY = PlayerBoxSizeY;
	this->ProcessEvent ( pDrawTitle, &parms, NULL );

}*/

/*void AScoreBoardDeathMatch::UpdatePrecacheFonts (  )
{
	static UFunction* pUpdatePrecacheFonts = 0;
	AScoreBoardDeathMatch_execUpdatePrecacheFonts_Parms parms;

	if ( !pUpdatePrecacheFonts )
		pUpdatePrecacheFonts = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.UpdatePrecacheFonts" );

	this->ProcessEvent ( pUpdatePrecacheFonts, &parms, NULL );

}*/

/*void AScoreBoardDeathMatch::UpdatePrecacheMaterials (  )
{
	static UFunction* pUpdatePrecacheMaterials = 0;
	AScoreBoardDeathMatch_execUpdatePrecacheMaterials_Parms parms;

	if ( !pUpdatePrecacheMaterials )
		pUpdatePrecacheMaterials = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardDeathMatch.UpdatePrecacheMaterials" );

	this->ProcessEvent ( pUpdatePrecacheMaterials, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::DrawQuestComplete ( class UCanvas* C )
{
	static UFunction* pDrawQuestComplete = 0;
	AwHudPart_Tutorial_execDrawQuestComplete_Parms parms;

	if ( !pDrawQuestComplete )
		pDrawQuestComplete = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.DrawQuestComplete" );

	parms.C = C;
	this->ProcessEvent ( pDrawQuestComplete, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::DrawQuest ( class UCanvas* C )
{
	static UFunction* pDrawQuest = 0;
	AwHudPart_Tutorial_execDrawQuest_Parms parms;

	if ( !pDrawQuest )
		pDrawQuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.DrawQuest" );

	parms.C = C;
	this->ProcessEvent ( pDrawQuest, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::DrawSpectatingHud ( class UCanvas* C )
{
	static UFunction* pDrawSpectatingHud = 0;
	AwHudPart_Tutorial_execDrawSpectatingHud_Parms parms;

	if ( !pDrawSpectatingHud )
		pDrawSpectatingHud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.DrawSpectatingHud" );

	parms.C = C;
	this->ProcessEvent ( pDrawSpectatingHud, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::DrawHudPassA ( class UCanvas* C )
{
	static UFunction* pDrawHudPassA = 0;
	AwHudPart_Tutorial_execDrawHudPassA_Parms parms;

	if ( !pDrawHudPassA )
		pDrawHudPassA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.DrawHudPassA" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassA, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::UpdateHelpKeyControll (  )
{
	static UFunction* pUpdateHelpKeyControll = 0;
	AwHudPart_Tutorial_execUpdateHelpKeyControll_Parms parms;

	if ( !pUpdateHelpKeyControll )
		pUpdateHelpKeyControll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.UpdateHelpKeyControll" );

	this->ProcessEvent ( pUpdateHelpKeyControll, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::Initialize ( class AHudBase* myOwner, class ALevelInfo* Level )
{
	static UFunction* pInitialize = 0;
	AwHudPart_Tutorial_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.Initialize" );

	parms.myOwner = myOwner;
	parms.Level = Level;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::CallEvent ( bool ItemCheck, int iReservation1, int iReservation2 )
{
	static UFunction* pCallEvent = 0;
	AwHudPart_Tutorial_execCallEvent_Parms parms;

	if ( !pCallEvent )
		pCallEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.CallEvent" );

	parms.ItemCheck = ItemCheck;
	parms.iReservation1 = iReservation1;
	parms.iReservation2 = iReservation2;
	this->ProcessEvent ( pCallEvent, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::PlaySoundQuestEnd (  )
{
	static UFunction* pPlaySoundQuestEnd = 0;
	AwHudPart_Tutorial_execPlaySoundQuestEnd_Parms parms;

	if ( !pPlaySoundQuestEnd )
		pPlaySoundQuestEnd = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.PlaySoundQuestEnd" );

	this->ProcessEvent ( pPlaySoundQuestEnd, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::PlaySoundQuest (  )
{
	static UFunction* pPlaySoundQuest = 0;
	AwHudPart_Tutorial_execPlaySoundQuest_Parms parms;

	if ( !pPlaySoundQuest )
		pPlaySoundQuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.PlaySoundQuest" );

	this->ProcessEvent ( pPlaySoundQuest, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnNextQuest (  )
{
	static UFunction* pOnNextQuest = 0;
	AwHudPart_Tutorial_execOnNextQuest_Parms parms;

	if ( !pOnNextQuest )
		pOnNextQuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnNextQuest" );

	this->ProcessEvent ( pOnNextQuest, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnBeginTutorial (  )
{
	static UFunction* pOnBeginTutorial = 0;
	AwHudPart_Tutorial_execOnBeginTutorial_Parms parms;

	if ( !pOnBeginTutorial )
		pOnBeginTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnBeginTutorial" );

	this->ProcessEvent ( pOnBeginTutorial, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnCompleteQuest (  )
{
	static UFunction* pOnCompleteQuest = 0;
	AwHudPart_Tutorial_execOnCompleteQuest_Parms parms;

	if ( !pOnCompleteQuest )
		pOnCompleteQuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnCompleteQuest" );

	this->ProcessEvent ( pOnCompleteQuest, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnBeginQuest (  )
{
	static UFunction* pOnBeginQuest = 0;
	AwHudPart_Tutorial_execOnBeginQuest_Parms parms;

	if ( !pOnBeginQuest )
		pOnBeginQuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnBeginQuest" );

	this->ProcessEvent ( pOnBeginQuest, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnEndMessage (  )
{
	static UFunction* pOnEndMessage = 0;
	AwHudPart_Tutorial_execOnEndMessage_Parms parms;

	if ( !pOnEndMessage )
		pOnEndMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnEndMessage" );

	this->ProcessEvent ( pOnEndMessage, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnBeginMessage (  )
{
	static UFunction* pOnBeginMessage = 0;
	AwHudPart_Tutorial_execOnBeginMessage_Parms parms;

	if ( !pOnBeginMessage )
		pOnBeginMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnBeginMessage" );

	this->ProcessEvent ( pOnBeginMessage, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnPickUpHealthPack (  )
{
	static UFunction* pOnPickUpHealthPack = 0;
	AwHudPart_Tutorial_execOnPickUpHealthPack_Parms parms;

	if ( !pOnPickUpHealthPack )
		pOnPickUpHealthPack = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnPickUpHealthPack" );

	this->ProcessEvent ( pOnPickUpHealthPack, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnKillAim (  )
{
	static UFunction* pOnKillAim = 0;
	AwHudPart_Tutorial_execOnKillAim_Parms parms;

	if ( !pOnKillAim )
		pOnKillAim = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnKillAim" );

	this->ProcessEvent ( pOnKillAim, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnRunSprint ( int iSec )
{
	static UFunction* pOnRunSprint = 0;
	AwHudPart_Tutorial_execOnRunSprint_Parms parms;

	if ( !pOnRunSprint )
		pOnRunSprint = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnRunSprint" );

	parms.iSec = iSec;
	this->ProcessEvent ( pOnRunSprint, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnKillGrenade (  )
{
	static UFunction* pOnKillGrenade = 0;
	AwHudPart_Tutorial_execOnKillGrenade_Parms parms;

	if ( !pOnKillGrenade )
		pOnKillGrenade = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnKillGrenade" );

	this->ProcessEvent ( pOnKillGrenade, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnMeleeAttack (  )
{
	static UFunction* pOnMeleeAttack = 0;
	AwHudPart_Tutorial_execOnMeleeAttack_Parms parms;

	if ( !pOnMeleeAttack )
		pOnMeleeAttack = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnMeleeAttack" );

	this->ProcessEvent ( pOnMeleeAttack, &parms, NULL );

}*/

/*void AwHudPart_Tutorial::OnKill3Enemy (  )
{
	static UFunction* pOnKill3Enemy = 0;
	AwHudPart_Tutorial_execOnKill3Enemy_Parms parms;

	if ( !pOnKill3Enemy )
		pOnKill3Enemy = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial.OnKill3Enemy" );

	this->ProcessEvent ( pOnKill3Enemy, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::DrawBeginTutorial ( class UCanvas* C )
{
	static UFunction* pDrawBeginTutorial = 0;
	AwHudPart_Tutorial2_execDrawBeginTutorial_Parms parms;

	if ( !pDrawBeginTutorial )
		pDrawBeginTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DrawBeginTutorial" );

	parms.C = C;
	this->ProcessEvent ( pDrawBeginTutorial, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::DrawQuestComplete ( class UCanvas* C )
{
	static UFunction* pDrawQuestComplete = 0;
	AwHudPart_Tutorial2_execDrawQuestComplete_Parms parms;

	if ( !pDrawQuestComplete )
		pDrawQuestComplete = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DrawQuestComplete" );

	parms.C = C;
	this->ProcessEvent ( pDrawQuestComplete, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::DrawQuest ( class UCanvas* C )
{
	static UFunction* pDrawQuest = 0;
	AwHudPart_Tutorial2_execDrawQuest_Parms parms;

	if ( !pDrawQuest )
		pDrawQuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DrawQuest" );

	parms.C = C;
	this->ProcessEvent ( pDrawQuest, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::DrawNoticeExit ( class UCanvas* C )
{
	static UFunction* pDrawNoticeExit = 0;
	AwHudPart_Tutorial2_execDrawNoticeExit_Parms parms;

	if ( !pDrawNoticeExit )
		pDrawNoticeExit = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DrawNoticeExit" );

	parms.C = C;
	this->ProcessEvent ( pDrawNoticeExit, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::DrawBattleAIBot ( class UCanvas* C )
{
	static UFunction* pDrawBattleAIBot = 0;
	AwHudPart_Tutorial2_execDrawBattleAIBot_Parms parms;

	if ( !pDrawBattleAIBot )
		pDrawBattleAIBot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DrawBattleAIBot" );

	parms.C = C;
	this->ProcessEvent ( pDrawBattleAIBot, &parms, NULL );

}*/

/*float AwHudPart_Tutorial2::GetValueScaleUp ( float fStartScale, float fDestScale, float fDrawTime )
{
	static UFunction* pGetValueScaleUp = 0;
	AwHudPart_Tutorial2_execGetValueScaleUp_Parms parms;

	if ( !pGetValueScaleUp )
		pGetValueScaleUp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.GetValueScaleUp" );

	parms.fStartScale = fStartScale;
	parms.fDestScale = fDestScale;
	parms.fDrawTime = fDrawTime;
	this->ProcessEvent ( pGetValueScaleUp, &parms, NULL );

	return parms.ReturnValue;
}*/

/*float AwHudPart_Tutorial2::GetValueScaleDown ( float fStartScale, float fDestScale, float fDrawTime )
{
	static UFunction* pGetValueScaleDown = 0;
	AwHudPart_Tutorial2_execGetValueScaleDown_Parms parms;

	if ( !pGetValueScaleDown )
		pGetValueScaleDown = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.GetValueScaleDown" );

	parms.fStartScale = fStartScale;
	parms.fDestScale = fDestScale;
	parms.fDrawTime = fDrawTime;
	this->ProcessEvent ( pGetValueScaleDown, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_Tutorial2::DrawGiftItemT ( class UCanvas* C )
{
	static UFunction* pDrawGiftItemT = 0;
	AwHudPart_Tutorial2_execDrawGiftItemT_Parms parms;

	if ( !pDrawGiftItemT )
		pDrawGiftItemT = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DrawGiftItemT" );

	parms.C = C;
	this->ProcessEvent ( pDrawGiftItemT, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::DrawGiftItem ( class UCanvas* C )
{
	static UFunction* pDrawGiftItem = 0;
	AwHudPart_Tutorial2_execDrawGiftItem_Parms parms;

	if ( !pDrawGiftItem )
		pDrawGiftItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DrawGiftItem" );

	parms.C = C;
	this->ProcessEvent ( pDrawGiftItem, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::DrawSpectatingHud ( class UCanvas* C )
{
	static UFunction* pDrawSpectatingHud = 0;
	AwHudPart_Tutorial2_execDrawSpectatingHud_Parms parms;

	if ( !pDrawSpectatingHud )
		pDrawSpectatingHud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DrawSpectatingHud" );

	parms.C = C;
	this->ProcessEvent ( pDrawSpectatingHud, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::DrawHudPassA ( class UCanvas* C )
{
	static UFunction* pDrawHudPassA = 0;
	AwHudPart_Tutorial2_execDrawHudPassA_Parms parms;

	if ( !pDrawHudPassA )
		pDrawHudPassA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DrawHudPassA" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassA, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::eventTrigger ( class AActor* Other, class APawn* EventInstigator )
{
	static UFunction* pTrigger = 0;
	AwHudPart_Tutorial2_eventTrigger_Parms parms;

	if ( !pTrigger )
		pTrigger = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.Trigger" );

	parms.Other = Other;
	parms.EventInstigator = EventInstigator;
	this->ProcessEvent ( pTrigger, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::CallEvent ( bool ItemCheck, int iReservation1, int iReservation2 )
{
	static UFunction* pCallEvent = 0;
	AwHudPart_Tutorial2_execCallEvent_Parms parms;

	if ( !pCallEvent )
		pCallEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.CallEvent" );

	parms.ItemCheck = ItemCheck;
	parms.iReservation1 = iReservation1;
	parms.iReservation2 = iReservation2;
	this->ProcessEvent ( pCallEvent, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::Movelength ( struct FVector vLocation )
{
	static UFunction* pMovelength = 0;
	AwHudPart_Tutorial2_execMovelength_Parms parms;

	if ( !pMovelength )
		pMovelength = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.Movelength" );

	parms.vLocation = vLocation;
	this->ProcessEvent ( pMovelength, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::EnableShootTarget ( struct FName eventTag )
{
	static UFunction* pEnableShootTarget = 0;
	AwHudPart_Tutorial2_execEnableShootTarget_Parms parms;

	if ( !pEnableShootTarget )
		pEnableShootTarget = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.EnableShootTarget" );

	parms.eventTag = eventTag;
	this->ProcessEvent ( pEnableShootTarget, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::GotoTutorial ( int iQuestID )
{
	static UFunction* pGotoTutorial = 0;
	AwHudPart_Tutorial2_execGotoTutorial_Parms parms;

	if ( !pGotoTutorial )
		pGotoTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.GotoTutorial" );

	parms.iQuestID = iQuestID;
	this->ProcessEvent ( pGotoTutorial, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::CheckStartTutorial (  )
{
	static UFunction* pCheckStartTutorial = 0;
	AwHudPart_Tutorial2_execCheckStartTutorial_Parms parms;

	if ( !pCheckStartTutorial )
		pCheckStartTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.CheckStartTutorial" );

	this->ProcessEvent ( pCheckStartTutorial, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::BeginDrawItem (  )
{
	static UFunction* pBeginDrawItem = 0;
	AwHudPart_Tutorial2_execBeginDrawItem_Parms parms;

	if ( !pBeginDrawItem )
		pBeginDrawItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.BeginDrawItem" );

	this->ProcessEvent ( pBeginDrawItem, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::OnBeginTutorial (  )
{
	static UFunction* pOnBeginTutorial = 0;
	AwHudPart_Tutorial2_execOnBeginTutorial_Parms parms;

	if ( !pOnBeginTutorial )
		pOnBeginTutorial = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.OnBeginTutorial" );

	this->ProcessEvent ( pOnBeginTutorial, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::ResetProgress (  )
{
	static UFunction* pResetProgress = 0;
	AwHudPart_Tutorial2_execResetProgress_Parms parms;

	if ( !pResetProgress )
		pResetProgress = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.ResetProgress" );

	this->ProcessEvent ( pResetProgress, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::Initialize ( class AHudBase* myOwner, class ALevelInfo* Level )
{
	static UFunction* pInitialize = 0;
	AwHudPart_Tutorial2_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.Initialize" );

	parms.myOwner = myOwner;
	parms.Level = Level;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*class AMover* AwHudPart_Tutorial2::EnableTriggerEvent ( struct FName EventName, class AActor* Other, class APawn* EventInstigator )
{
	static UFunction* pEnableTriggerEvent = 0;
	AwHudPart_Tutorial2_execEnableTriggerEvent_Parms parms;

	if ( !pEnableTriggerEvent )
		pEnableTriggerEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.EnableTriggerEvent" );

	parms.EventName = EventName;
	parms.Other = Other;
	parms.EventInstigator = EventInstigator;
	this->ProcessEvent ( pEnableTriggerEvent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class AMover* AwHudPart_Tutorial2::DisableTriggerEvent ( struct FName EventName, class AActor* Other, class APawn* EventInstigator )
{
	static UFunction* pDisableTriggerEvent = 0;
	AwHudPart_Tutorial2_execDisableTriggerEvent_Parms parms;

	if ( !pDisableTriggerEvent )
		pDisableTriggerEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.DisableTriggerEvent" );

	parms.EventName = EventName;
	parms.Other = Other;
	parms.EventInstigator = EventInstigator;
	this->ProcessEvent ( pDisableTriggerEvent, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_Tutorial2::TutorialEvent ( struct FString S, struct FName Type, struct FName reserv )
{
	static UFunction* pTutorialEvent = 0;
	AwHudPart_Tutorial2_execTutorialEvent_Parms parms;

	if ( !pTutorialEvent )
		pTutorialEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.TutorialEvent" );

	parms.S = S;
	parms.Type = Type;
	parms.reserv = reserv;
	this->ProcessEvent ( pTutorialEvent, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::OnTutorialResult ( int iTutorialID, int iCurrent, bool bCompleted )
{
	static UFunction* pOnTutorialResult = 0;
	AwHudPart_Tutorial2_execOnTutorialResult_Parms parms;

	if ( !pOnTutorialResult )
		pOnTutorialResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.OnTutorialResult" );

	parms.iTutorialID = iTutorialID;
	parms.iCurrent = iCurrent;
	parms.bCompleted = bCompleted;
	this->ProcessEvent ( pOnTutorialResult, &parms, NULL );

}*/

/*void AwHudPart_Tutorial2::OnQuest (  )
{
	static UFunction* pOnQuest = 0;
	AwHudPart_Tutorial2_execOnQuest_Parms parms;

	if ( !pOnQuest )
		pOnQuest = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Tutorial2.OnQuest" );

	this->ProcessEvent ( pOnQuest, &parms, NULL );

}*/

/*void AxScoreBoardTutorial::DrawTeamListSection_C ( class UCanvas* C, int lpCount, class APlayerReplicationInfo* currPRI, int lpQuestNumber, struct FString HostName, float beginY, float markBeginY, float markPingY )
{
	static UFunction* pDrawTeamListSection_C = 0;
	AxScoreBoardTutorial_execDrawTeamListSection_C_Parms parms;

	if ( !pDrawTeamListSection_C )
		pDrawTeamListSection_C = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTutorial.DrawTeamListSection_C" );

	parms.C = C;
	parms.lpCount = lpCount;
	parms.currPRI = currPRI;
	parms.lpQuestNumber = lpQuestNumber;
	parms.HostName = HostName;
	parms.beginY = beginY;
	parms.markBeginY = markBeginY;
	parms.markPingY = markPingY;
	this->ProcessEvent ( pDrawTeamListSection_C, &parms, NULL );

}*/

/*void AxScoreBoardTutorial::DrawTeamListSection ( class UCanvas* C )
{
	static UFunction* pDrawTeamListSection = 0;
	AxScoreBoardTutorial_execDrawTeamListSection_Parms parms;

	if ( !pDrawTeamListSection )
		pDrawTeamListSection = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTutorial.DrawTeamListSection" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamListSection, &parms, NULL );

}*/

/*void AxScoreBoardTutorial::DrawContentDescription ( class UCanvas* C, float _OffSetX, float _OffSetY )
{
	static UFunction* pDrawContentDescription = 0;
	AxScoreBoardTutorial_execDrawContentDescription_Parms parms;

	if ( !pDrawContentDescription )
		pDrawContentDescription = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTutorial.DrawContentDescription" );

	parms.C = C;
	parms._OffSetX = _OffSetX;
	parms._OffSetY = _OffSetY;
	this->ProcessEvent ( pDrawContentDescription, &parms, NULL );

}*/

/*void AxScoreBoardTutorial::DrawTeamBG ( class UCanvas* C )
{
	static UFunction* pDrawTeamBG = 0;
	AxScoreBoardTutorial_execDrawTeamBG_Parms parms;

	if ( !pDrawTeamBG )
		pDrawTeamBG = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTutorial.DrawTeamBG" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamBG, &parms, NULL );

}*/

/*void AxScoreBoardTutorial::eventDrawMiniMap ( class UCanvas* C )
{
	static UFunction* pDrawMiniMap = 0;
	AxScoreBoardTutorial_eventDrawMiniMap_Parms parms;

	if ( !pDrawMiniMap )
		pDrawMiniMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTutorial.DrawMiniMap" );

	parms.C = C;
	this->ProcessEvent ( pDrawMiniMap, &parms, NULL );

}*/

/*void AxScoreBoardTutorial::eventDrawScoreboard ( class UCanvas* C )
{
	static UFunction* pDrawScoreboard = 0;
	AxScoreBoardTutorial_eventDrawScoreboard_Parms parms;

	if ( !pDrawScoreboard )
		pDrawScoreboard = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTutorial.DrawScoreboard" );

	parms.C = C;
	this->ProcessEvent ( pDrawScoreboard, &parms, NULL );

}*/

/*void AxScoreBoardTutorial::OnTutorialResult ( int iTutorialID, int iCurrent, bool bCompleted )
{
	static UFunction* pOnTutorialResult = 0;
	AxScoreBoardTutorial_execOnTutorialResult_Parms parms;

	if ( !pOnTutorialResult )
		pOnTutorialResult = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTutorial.OnTutorialResult" );

	parms.iTutorialID = iTutorialID;
	parms.iCurrent = iCurrent;
	parms.bCompleted = bCompleted;
	this->ProcessEvent ( pOnTutorialResult, &parms, NULL );

}*/

/*void AxScoreBoardTutorial::PushTutorialList (  )
{
	static UFunction* pPushTutorialList = 0;
	AxScoreBoardTutorial_execPushTutorialList_Parms parms;

	if ( !pPushTutorialList )
		pPushTutorialList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTutorial.PushTutorialList" );

	this->ProcessEvent ( pPushTutorialList, &parms, NULL );

}*/

/*void AxScoreBoardTutorial::PostBeginPlay (  )
{
	static UFunction* pPostBeginPlay = 0;
	AxScoreBoardTutorial_execPostBeginPlay_Parms parms;

	if ( !pPostBeginPlay )
		pPostBeginPlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTutorial.PostBeginPlay" );

	this->ProcessEvent ( pPostBeginPlay, &parms, NULL );

}*/

/*void AwHudPart_Minimap::DrawMinimap_Airstrike ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Airstrike = 0;
	AwHudPart_Minimap_execDrawMinimap_Airstrike_Parms parms;

	if ( !pDrawMinimap_Airstrike )
		pDrawMinimap_Airstrike = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Minimap.DrawMinimap_Airstrike" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Airstrike, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::DrawMinimap_BGMapUAV ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_BGMapUAV = 0;
	AwHudPart_Bigmap_execDrawMinimap_BGMapUAV_Parms parms;

	if ( !pDrawMinimap_BGMapUAV )
		pDrawMinimap_BGMapUAV = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.DrawMinimap_BGMapUAV" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_BGMapUAV, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::DrawMinimap_SpecialPositions ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_SpecialPositions = 0;
	AwHudPart_Bigmap_execDrawMinimap_SpecialPositions_Parms parms;

	if ( !pDrawMinimap_SpecialPositions )
		pDrawMinimap_SpecialPositions = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.DrawMinimap_SpecialPositions" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_SpecialPositions, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::DrawMinimap_Airstrike ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Airstrike = 0;
	AwHudPart_Bigmap_execDrawMinimap_Airstrike_Parms parms;

	if ( !pDrawMinimap_Airstrike )
		pDrawMinimap_Airstrike = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.DrawMinimap_Airstrike" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Airstrike, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::DrawMinimap_Helicopter ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Helicopter = 0;
	AwHudPart_Bigmap_execDrawMinimap_Helicopter_Parms parms;

	if ( !pDrawMinimap_Helicopter )
		pDrawMinimap_Helicopter = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.DrawMinimap_Helicopter" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Helicopter, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::DrawMinimap_Deads ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Deads = 0;
	AwHudPart_Bigmap_execDrawMinimap_Deads_Parms parms;

	if ( !pDrawMinimap_Deads )
		pDrawMinimap_Deads = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.DrawMinimap_Deads" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Deads, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::DrawMinimap_Enemies ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Enemies = 0;
	AwHudPart_Bigmap_execDrawMinimap_Enemies_Parms parms;

	if ( !pDrawMinimap_Enemies )
		pDrawMinimap_Enemies = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.DrawMinimap_Enemies" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Enemies, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::DrawMinimap_Allies ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Allies = 0;
	AwHudPart_Bigmap_execDrawMinimap_Allies_Parms parms;

	if ( !pDrawMinimap_Allies )
		pDrawMinimap_Allies = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.DrawMinimap_Allies" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Allies, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::CalculateTexturePositionFromMinimapPosition ( float minimapX, float minimapY, int* TX, int* ty )
{
	static UFunction* pCalculateTexturePositionFromMinimapPosition = 0;
	AwHudPart_Bigmap_execCalculateTexturePositionFromMinimapPosition_Parms parms;

	if ( !pCalculateTexturePositionFromMinimapPosition )
		pCalculateTexturePositionFromMinimapPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.CalculateTexturePositionFromMinimapPosition" );

	parms.minimapX = minimapX;
	parms.minimapY = minimapY;
	this->ProcessEvent ( pCalculateTexturePositionFromMinimapPosition, &parms, NULL );

	*TX = parms.TX;
	*ty = parms.ty;
}*/

/*void AwHudPart_Bigmap::CalculateMinimapPosition ( struct FVector centerLoc, struct FRotator centerRotation, struct FVector TargetLoc, float* minimapX, float* minimapY )
{
	static UFunction* pCalculateMinimapPosition = 0;
	AwHudPart_Bigmap_execCalculateMinimapPosition_Parms parms;

	if ( !pCalculateMinimapPosition )
		pCalculateMinimapPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.CalculateMinimapPosition" );

	parms.centerLoc = centerLoc;
	parms.centerRotation = centerRotation;
	parms.TargetLoc = TargetLoc;
	this->ProcessEvent ( pCalculateMinimapPosition, &parms, NULL );

	*minimapX = parms.minimapX;
	*minimapY = parms.minimapY;
}*/

/*void AwHudPart_Bigmap::SetupMinimapSpriteWidgetForDrawing ( struct FRotator Rotation, float minimapX, float minimapY, struct FSpriteWidget* Sprite )
{
	static UFunction* pSetupMinimapSpriteWidgetForDrawing = 0;
	AwHudPart_Bigmap_execSetupMinimapSpriteWidgetForDrawing_Parms parms;

	if ( !pSetupMinimapSpriteWidgetForDrawing )
		pSetupMinimapSpriteWidgetForDrawing = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.SetupMinimapSpriteWidgetForDrawing" );

	parms.Rotation = Rotation;
	parms.minimapX = minimapX;
	parms.minimapY = minimapY;
	this->ProcessEvent ( pSetupMinimapSpriteWidgetForDrawing, &parms, NULL );

	*Sprite = parms.Sprite;
}*/

/*void AwHudPart_Bigmap::DrawMinimap_Myself ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Myself = 0;
	AwHudPart_Bigmap_execDrawMinimap_Myself_Parms parms;

	if ( !pDrawMinimap_Myself )
		pDrawMinimap_Myself = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.DrawMinimap_Myself" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Myself, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::SetupBGMapUAV (  )
{
	static UFunction* pSetupBGMapUAV = 0;
	AwHudPart_Bigmap_execSetupBGMapUAV_Parms parms;

	if ( !pSetupBGMapUAV )
		pSetupBGMapUAV = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.SetupBGMapUAV" );

	this->ProcessEvent ( pSetupBGMapUAV, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::DrawMinimap_BGMap ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_BGMap = 0;
	AwHudPart_Bigmap_execDrawMinimap_BGMap_Parms parms;

	if ( !pDrawMinimap_BGMap )
		pDrawMinimap_BGMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.DrawMinimap_BGMap" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_BGMap, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::Draw ( class UCanvas* C )
{
	static UFunction* pDraw = 0;
	AwHudPart_Bigmap_execDraw_Parms parms;

	if ( !pDraw )
		pDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.Draw" );

	parms.C = C;
	this->ProcessEvent ( pDraw, &parms, NULL );

}*/

/*void AwHudPart_Bigmap::GetPivotCoords ( struct FVector* it1, struct FVector* iw1, struct FVector* it2, struct FVector* iw2 )
{
	static UFunction* pGetPivotCoords = 0;
	AwHudPart_Bigmap_execGetPivotCoords_Parms parms;

	if ( !pGetPivotCoords )
		pGetPivotCoords = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.GetPivotCoords" );

	parms.it1 = *it1;
	parms.iw1 = *iw1;
	parms.it2 = *it2;
	parms.iw2 = *iw2;
	this->ProcessEvent ( pGetPivotCoords, &parms, NULL );

	*it1 = parms.it1;
	*iw1 = parms.iw1;
	*it2 = parms.it2;
	*iw2 = parms.iw2;
}*/

/*void AwHudPart_Bigmap::Initialize ( class AHudBase* myOwner, class ALevelInfo* myLevel )
{
	static UFunction* pInitialize = 0;
	AwHudPart_Bigmap_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_Bigmap.Initialize" );

	parms.myOwner = myOwner;
	parms.myLevel = myLevel;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawSurvivedUsers ( class UCanvas* C )
{
	static UFunction* pDrawSurvivedUsers = 0;
	AwHudPart_DisplayMain_execDrawSurvivedUsers_Parms parms;

	if ( !pDrawSurvivedUsers )
		pDrawSurvivedUsers = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawSurvivedUsers" );

	parms.C = C;
	this->ProcessEvent ( pDrawSurvivedUsers, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawTextChattingHelp ( class UCanvas* C )
{
	static UFunction* pDrawTextChattingHelp = 0;
	AwHudPart_DisplayMain_execDrawTextChattingHelp_Parms parms;

	if ( !pDrawTextChattingHelp )
		pDrawTextChattingHelp = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawTextChattingHelp" );

	parms.C = C;
	this->ProcessEvent ( pDrawTextChattingHelp, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawHas2Skill ( class UCanvas* C )
{
	static UFunction* pDrawHas2Skill = 0;
	AwHudPart_DisplayMain_execDrawHas2Skill_Parms parms;

	if ( !pDrawHas2Skill )
		pDrawHas2Skill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawHas2Skill" );

	parms.C = C;
	this->ProcessEvent ( pDrawHas2Skill, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawHas3Skill ( class UCanvas* C )
{
	static UFunction* pDrawHas3Skill = 0;
	AwHudPart_DisplayMain_execDrawHas3Skill_Parms parms;

	if ( !pDrawHas3Skill )
		pDrawHas3Skill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawHas3Skill" );

	parms.C = C;
	this->ProcessEvent ( pDrawHas3Skill, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawHasSkill ( class UCanvas* C )
{
	static UFunction* pDrawHasSkill = 0;
	AwHudPart_DisplayMain_execDrawHasSkill_Parms parms;

	if ( !pDrawHasSkill )
		pDrawHasSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawHasSkill" );

	parms.C = C;
	this->ProcessEvent ( pDrawHasSkill, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::CheckOwnerSkill (  )
{
	static UFunction* pCheckOwnerSkill = 0;
	AwHudPart_DisplayMain_execCheckOwnerSkill_Parms parms;

	if ( !pCheckOwnerSkill )
		pCheckOwnerSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.CheckOwnerSkill" );

	this->ProcessEvent ( pCheckOwnerSkill, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawBlinkActiveKey ( class UCanvas* C )
{
	static UFunction* pDrawBlinkActiveKey = 0;
	AwHudPart_DisplayMain_execDrawBlinkActiveKey_Parms parms;

	if ( !pDrawBlinkActiveKey )
		pDrawBlinkActiveKey = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawBlinkActiveKey" );

	parms.C = C;
	this->ProcessEvent ( pDrawBlinkActiveKey, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawHelpKeyControll_Bomb ( class UCanvas* C )
{
	static UFunction* pDrawHelpKeyControll_Bomb = 0;
	AwHudPart_DisplayMain_execDrawHelpKeyControll_Bomb_Parms parms;

	if ( !pDrawHelpKeyControll_Bomb )
		pDrawHelpKeyControll_Bomb = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawHelpKeyControll_Bomb" );

	parms.C = C;
	this->ProcessEvent ( pDrawHelpKeyControll_Bomb, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawHelpKeyControll ( class UCanvas* C )
{
	static UFunction* pDrawHelpKeyControll = 0;
	AwHudPart_DisplayMain_execDrawHelpKeyControll_Parms parms;

	if ( !pDrawHelpKeyControll )
		pDrawHelpKeyControll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawHelpKeyControll" );

	parms.C = C;
	this->ProcessEvent ( pDrawHelpKeyControll, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawSpectating ( class UCanvas* C )
{
	static UFunction* pDrawSpectating = 0;
	AwHudPart_DisplayMain_execDrawSpectating_Parms parms;

	if ( !pDrawSpectating )
		pDrawSpectating = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawSpectating" );

	parms.C = C;
	this->ProcessEvent ( pDrawSpectating, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DrawA ( class UCanvas* C )
{
	static UFunction* pDrawA = 0;
	AwHudPart_DisplayMain_execDrawA_Parms parms;

	if ( !pDrawA )
		pDrawA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DrawA" );

	parms.C = C;
	this->ProcessEvent ( pDrawA, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::SendHostPointInGame (  )
{
	static UFunction* pSendHostPointInGame = 0;
	AwHudPart_DisplayMain_execSendHostPointInGame_Parms parms;

	if ( !pSendHostPointInGame )
		pSendHostPointInGame = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.SendHostPointInGame" );

	this->ProcessEvent ( pSendHostPointInGame, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::UpdateHelpKeyControll (  )
{
	static UFunction* pUpdateHelpKeyControll = 0;
	AwHudPart_DisplayMain_execUpdateHelpKeyControll_Parms parms;

	if ( !pUpdateHelpKeyControll )
		pUpdateHelpKeyControll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.UpdateHelpKeyControll" );

	this->ProcessEvent ( pUpdateHelpKeyControll, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::UpdateHelpKey_Slot ( unsigned char iIndex, bool bEnable )
{
	static UFunction* pUpdateHelpKey_Slot = 0;
	AwHudPart_DisplayMain_execUpdateHelpKey_Slot_Parms parms;

	if ( !pUpdateHelpKey_Slot )
		pUpdateHelpKey_Slot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.UpdateHelpKey_Slot" );

	parms.iIndex = iIndex;
	parms.bEnable = bEnable;
	this->ProcessEvent ( pUpdateHelpKey_Slot, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::DisplayEvent_ActiveSkill (  )
{
	static UFunction* pDisplayEvent_ActiveSkill = 0;
	AwHudPart_DisplayMain_execDisplayEvent_ActiveSkill_Parms parms;

	if ( !pDisplayEvent_ActiveSkill )
		pDisplayEvent_ActiveSkill = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.DisplayEvent_ActiveSkill" );

	this->ProcessEvent ( pDisplayEvent_ActiveSkill, &parms, NULL );

}*/

/*void AwHudPart_DisplayMain::CallEvent ( bool ItemCheck, int iReservation1, int iReservation2 )
{
	static UFunction* pCallEvent = 0;
	AwHudPart_DisplayMain_execCallEvent_Parms parms;

	if ( !pCallEvent )
		pCallEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayMain.CallEvent" );

	parms.ItemCheck = ItemCheck;
	parms.iReservation1 = iReservation1;
	parms.iReservation2 = iReservation2;
	this->ProcessEvent ( pCallEvent, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::DrawItemImage ( class UCanvas* C )
{
	static UFunction* pDrawItemImage = 0;
	AwHudPart_SelectQSlotCN_execDrawItemImage_Parms parms;

	if ( !pDrawItemImage )
		pDrawItemImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.DrawItemImage" );

	parms.C = C;
	this->ProcessEvent ( pDrawItemImage, &parms, NULL );

}*/

/*struct FImage AwHudPart_SelectQSlotCN::GetItemImage ( class UCanvas* C, int iItemID )
{
	static UFunction* pGetItemImage = 0;
	AwHudPart_SelectQSlotCN_execGetItemImage_Parms parms;

	if ( !pGetItemImage )
		pGetItemImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.GetItemImage" );

	parms.C = C;
	parms.iItemID = iItemID;
	this->ProcessEvent ( pGetItemImage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_SelectQSlotCN::QuickSlotContent_SetString ( class UCanvas* C, int iPosX, int iPosY, int iSlot, bool bDefaultWeapon )
{
	static UFunction* pQuickSlotContent_SetString = 0;
	AwHudPart_SelectQSlotCN_execQuickSlotContent_SetString_Parms parms;

	if ( !pQuickSlotContent_SetString )
		pQuickSlotContent_SetString = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.QuickSlotContent_SetString" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	parms.iSlot = iSlot;
	parms.bDefaultWeapon = bDefaultWeapon;
	this->ProcessEvent ( pQuickSlotContent_SetString, &parms, NULL );

}*/

/*bool AwHudPart_SelectQSlotCN::DrawQuickSlotContent_List ( class UCanvas* C, int iPosX, int iPosY, int iSlot )
{
	static UFunction* pDrawQuickSlotContent_List = 0;
	AwHudPart_SelectQSlotCN_execDrawQuickSlotContent_List_Parms parms;

	if ( !pDrawQuickSlotContent_List )
		pDrawQuickSlotContent_List = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.DrawQuickSlotContent_List" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	parms.iSlot = iSlot;
	this->ProcessEvent ( pDrawQuickSlotContent_List, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_SelectQSlotCN::DrawQuickSlotContent_DefaultWeapon ( class UCanvas* C, int iPosX, int iPosY )
{
	static UFunction* pDrawQuickSlotContent_DefaultWeapon = 0;
	AwHudPart_SelectQSlotCN_execDrawQuickSlotContent_DefaultWeapon_Parms parms;

	if ( !pDrawQuickSlotContent_DefaultWeapon )
		pDrawQuickSlotContent_DefaultWeapon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.DrawQuickSlotContent_DefaultWeapon" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	this->ProcessEvent ( pDrawQuickSlotContent_DefaultWeapon, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::DrawQuickSlotContent_Description ( class UCanvas* C, int iPosX, int iPosY )
{
	static UFunction* pDrawQuickSlotContent_Description = 0;
	AwHudPart_SelectQSlotCN_execDrawQuickSlotContent_Description_Parms parms;

	if ( !pDrawQuickSlotContent_Description )
		pDrawQuickSlotContent_Description = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.DrawQuickSlotContent_Description" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	this->ProcessEvent ( pDrawQuickSlotContent_Description, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::DrawSellectBar ( class UCanvas* C, int iPosX, int iPosY, bool bDefaultWeapon )
{
	static UFunction* pDrawSellectBar = 0;
	AwHudPart_SelectQSlotCN_execDrawSellectBar_Parms parms;

	if ( !pDrawSellectBar )
		pDrawSellectBar = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.DrawSellectBar" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	parms.bDefaultWeapon = bDefaultWeapon;
	this->ProcessEvent ( pDrawSellectBar, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::DrawQuickSlotName ( class UCanvas* C, int iPosX, int iPosY, int iSlot, bool bDefaultWeapon, bool bHasItem )
{
	static UFunction* pDrawQuickSlotName = 0;
	AwHudPart_SelectQSlotCN_execDrawQuickSlotName_Parms parms;

	if ( !pDrawQuickSlotName )
		pDrawQuickSlotName = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.DrawQuickSlotName" );

	parms.C = C;
	parms.iPosX = iPosX;
	parms.iPosY = iPosY;
	parms.iSlot = iSlot;
	parms.bDefaultWeapon = bDefaultWeapon;
	parms.bHasItem = bHasItem;
	this->ProcessEvent ( pDrawQuickSlotName, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::DrawQuickSlot ( class UCanvas* C )
{
	static UFunction* pDrawQuickSlot = 0;
	AwHudPart_SelectQSlotCN_execDrawQuickSlot_Parms parms;

	if ( !pDrawQuickSlot )
		pDrawQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.DrawQuickSlot" );

	parms.C = C;
	this->ProcessEvent ( pDrawQuickSlot, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::DrawSelectQSlot ( class UCanvas* C )
{
	static UFunction* pDrawSelectQSlot = 0;
	AwHudPart_SelectQSlotCN_execDrawSelectQSlot_Parms parms;

	if ( !pDrawSelectQSlot )
		pDrawSelectQSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.DrawSelectQSlot" );

	parms.C = C;
	this->ProcessEvent ( pDrawSelectQSlot, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::DrawA ( class UCanvas* C )
{
	static UFunction* pDrawA = 0;
	AwHudPart_SelectQSlotCN_execDrawA_Parms parms;

	if ( !pDrawA )
		pDrawA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.DrawA" );

	parms.C = C;
	this->ProcessEvent ( pDrawA, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::UpdateHelpKeyControll (  )
{
	static UFunction* pUpdateHelpKeyControll = 0;
	AwHudPart_SelectQSlotCN_execUpdateHelpKeyControll_Parms parms;

	if ( !pUpdateHelpKeyControll )
		pUpdateHelpKeyControll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.UpdateHelpKeyControll" );

	this->ProcessEvent ( pUpdateHelpKeyControll, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::CallEvent ( bool ItemCheck, int iReservation1, int iReservation2 )
{
	static UFunction* pCallEvent = 0;
	AwHudPart_SelectQSlotCN_execCallEvent_Parms parms;

	if ( !pCallEvent )
		pCallEvent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.CallEvent" );

	parms.ItemCheck = ItemCheck;
	parms.iReservation1 = iReservation1;
	parms.iReservation2 = iReservation2;
	this->ProcessEvent ( pCallEvent, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::CallSelectQuickSlot ( int iIndex )
{
	static UFunction* pCallSelectQuickSlot = 0;
	AwHudPart_SelectQSlotCN_execCallSelectQuickSlot_Parms parms;

	if ( !pCallSelectQuickSlot )
		pCallSelectQuickSlot = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.CallSelectQuickSlot" );

	parms.iIndex = iIndex;
	this->ProcessEvent ( pCallSelectQuickSlot, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::ToggleQuickSlotWindow (  )
{
	static UFunction* pToggleQuickSlotWindow = 0;
	AwHudPart_SelectQSlotCN_execToggleQuickSlotWindow_Parms parms;

	if ( !pToggleQuickSlotWindow )
		pToggleQuickSlotWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.ToggleQuickSlotWindow" );

	this->ProcessEvent ( pToggleQuickSlotWindow, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::EndQuickSlotWindow (  )
{
	static UFunction* pEndQuickSlotWindow = 0;
	AwHudPart_SelectQSlotCN_execEndQuickSlotWindow_Parms parms;

	if ( !pEndQuickSlotWindow )
		pEndQuickSlotWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.EndQuickSlotWindow" );

	this->ProcessEvent ( pEndQuickSlotWindow, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::BeginQuickSlotWindow (  )
{
	static UFunction* pBeginQuickSlotWindow = 0;
	AwHudPart_SelectQSlotCN_execBeginQuickSlotWindow_Parms parms;

	if ( !pBeginQuickSlotWindow )
		pBeginQuickSlotWindow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.BeginQuickSlotWindow" );

	this->ProcessEvent ( pBeginQuickSlotWindow, &parms, NULL );

}*/

/*void AwHudPart_SelectQSlotCN::Initialize ( class AHudBase* myOwner, class ALevelInfo* _level )
{
	static UFunction* pInitialize = 0;
	AwHudPart_SelectQSlotCN_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_SelectQSlotCN.Initialize" );

	parms.myOwner = myOwner;
	parms._level = _level;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void AwHudPart_RadioMessage::DrawRadioMessage ( class UCanvas* C, int iMessage, int iHeight, struct FString sMessage )
{
	static UFunction* pDrawRadioMessage = 0;
	AwHudPart_RadioMessage_execDrawRadioMessage_Parms parms;

	if ( !pDrawRadioMessage )
		pDrawRadioMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_RadioMessage.DrawRadioMessage" );

	parms.C = C;
	parms.iMessage = iMessage;
	parms.iHeight = iHeight;
	parms.sMessage = sMessage;
	this->ProcessEvent ( pDrawRadioMessage, &parms, NULL );

}*/

/*unsigned char AwHudPart_RadioMessage::GetRadioType (  )
{
	static UFunction* pGetRadioType = 0;
	AwHudPart_RadioMessage_execGetRadioType_Parms parms;

	if ( !pGetRadioType )
		pGetRadioType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_RadioMessage.GetRadioType" );

	this->ProcessEvent ( pGetRadioType, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_RadioMessage::SetRadioType ( unsigned char _ERMType )
{
	static UFunction* pSetRadioType = 0;
	AwHudPart_RadioMessage_execSetRadioType_Parms parms;

	if ( !pSetRadioType )
		pSetRadioType = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_RadioMessage.SetRadioType" );

	parms._ERMType = _ERMType;
	this->ProcessEvent ( pSetRadioType, &parms, NULL );

}*/

/*void AwHudPart_RadioMessage::DrawA ( class UCanvas* C )
{
	static UFunction* pDrawA = 0;
	AwHudPart_RadioMessage_execDrawA_Parms parms;

	if ( !pDrawA )
		pDrawA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_RadioMessage.DrawA" );

	parms.C = C;
	this->ProcessEvent ( pDrawA, &parms, NULL );

}*/

/*void AwHudPart_RadioMessage::ResetRadioMessage (  )
{
	static UFunction* pResetRadioMessage = 0;
	AwHudPart_RadioMessage_execResetRadioMessage_Parms parms;

	if ( !pResetRadioMessage )
		pResetRadioMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_RadioMessage.ResetRadioMessage" );

	this->ProcessEvent ( pResetRadioMessage, &parms, NULL );

}*/

/*void AwHudPart_RadioMessage::CallRadioMessage ( int iKey, int iReservation1, int iReservation2 )
{
	static UFunction* pCallRadioMessage = 0;
	AwHudPart_RadioMessage_execCallRadioMessage_Parms parms;

	if ( !pCallRadioMessage )
		pCallRadioMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_RadioMessage.CallRadioMessage" );

	parms.iKey = iKey;
	parms.iReservation1 = iReservation1;
	parms.iReservation2 = iReservation2;
	this->ProcessEvent ( pCallRadioMessage, &parms, NULL );

}*/

/*void AwHudPart_RadioMessage::UpdateHelpKeyControll (  )
{
	static UFunction* pUpdateHelpKeyControll = 0;
	AwHudPart_RadioMessage_execUpdateHelpKeyControll_Parms parms;

	if ( !pUpdateHelpKeyControll )
		pUpdateHelpKeyControll = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_RadioMessage.UpdateHelpKeyControll" );

	this->ProcessEvent ( pUpdateHelpKeyControll, &parms, NULL );

}*/

/*void AwHudPart_RadioMessage::Initialize ( class AHudBase* myOwner, class ALevelInfo* Level )
{
	static UFunction* pInitialize = 0;
	AwHudPart_RadioMessage_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_RadioMessage.Initialize" );

	parms.myOwner = myOwner;
	parms.Level = Level;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void AwHudPart_DisplayQuest::PushMessage ( struct FString MissionDesc, int cur, int Max )
{
	static UFunction* pPushMessage = 0;
	AwHudPart_DisplayQuest_execPushMessage_Parms parms;

	if ( !pPushMessage )
		pPushMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.PushMessage" );

	parms.MissionDesc = MissionDesc;
	parms.cur = cur;
	parms.Max = Max;
	this->ProcessEvent ( pPushMessage, &parms, NULL );

}*/

/*void AwHudPart_DisplayQuest::ReceivedAccomplishMission100Percent ( struct FString MissionDesc, int cur, int Max )
{
	static UFunction* pReceivedAccomplishMission100Percent = 0;
	AwHudPart_DisplayQuest_execReceivedAccomplishMission100Percent_Parms parms;

	if ( !pReceivedAccomplishMission100Percent )
		pReceivedAccomplishMission100Percent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.ReceivedAccomplishMission100Percent" );

	parms.MissionDesc = MissionDesc;
	parms.cur = cur;
	parms.Max = Max;
	this->ProcessEvent ( pReceivedAccomplishMission100Percent, &parms, NULL );

}*/

/*void AwHudPart_DisplayQuest::ReceivedAccomplishMission75Percent ( struct FString MissionDesc, int cur, int Max )
{
	static UFunction* pReceivedAccomplishMission75Percent = 0;
	AwHudPart_DisplayQuest_execReceivedAccomplishMission75Percent_Parms parms;

	if ( !pReceivedAccomplishMission75Percent )
		pReceivedAccomplishMission75Percent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.ReceivedAccomplishMission75Percent" );

	parms.MissionDesc = MissionDesc;
	parms.cur = cur;
	parms.Max = Max;
	this->ProcessEvent ( pReceivedAccomplishMission75Percent, &parms, NULL );

}*/

/*void AwHudPart_DisplayQuest::ReceivedAccomplishMission50Percent ( struct FString MissionDesc, int cur, int Max )
{
	static UFunction* pReceivedAccomplishMission50Percent = 0;
	AwHudPart_DisplayQuest_execReceivedAccomplishMission50Percent_Parms parms;

	if ( !pReceivedAccomplishMission50Percent )
		pReceivedAccomplishMission50Percent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.ReceivedAccomplishMission50Percent" );

	parms.MissionDesc = MissionDesc;
	parms.cur = cur;
	parms.Max = Max;
	this->ProcessEvent ( pReceivedAccomplishMission50Percent, &parms, NULL );

}*/

/*void AwHudPart_DisplayQuest::ReceivedAccomplishMission25Percent ( struct FString MissionDesc, int cur, int Max )
{
	static UFunction* pReceivedAccomplishMission25Percent = 0;
	AwHudPart_DisplayQuest_execReceivedAccomplishMission25Percent_Parms parms;

	if ( !pReceivedAccomplishMission25Percent )
		pReceivedAccomplishMission25Percent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.ReceivedAccomplishMission25Percent" );

	parms.MissionDesc = MissionDesc;
	parms.cur = cur;
	parms.Max = Max;
	this->ProcessEvent ( pReceivedAccomplishMission25Percent, &parms, NULL );

}*/

/*bool AwHudPart_DisplayQuest::HasMessage (  )
{
	static UFunction* pHasMessage = 0;
	AwHudPart_DisplayQuest_execHasMessage_Parms parms;

	if ( !pHasMessage )
		pHasMessage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.HasMessage" );

	this->ProcessEvent ( pHasMessage, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AwHudPart_DisplayQuest::DrawGauge ( class UCanvas* C, float fProgressPct, float PosX, float PosY )
{
	static UFunction* pDrawGauge = 0;
	AwHudPart_DisplayQuest_execDrawGauge_Parms parms;

	if ( !pDrawGauge )
		pDrawGauge = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.DrawGauge" );

	parms.C = C;
	parms.fProgressPct = fProgressPct;
	parms.PosX = PosX;
	parms.PosY = PosY;
	this->ProcessEvent ( pDrawGauge, &parms, NULL );

}*/

/*void AwHudPart_DisplayQuest::DrawSpectating ( class UCanvas* C )
{
	static UFunction* pDrawSpectating = 0;
	AwHudPart_DisplayQuest_execDrawSpectating_Parms parms;

	if ( !pDrawSpectating )
		pDrawSpectating = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.DrawSpectating" );

	parms.C = C;
	this->ProcessEvent ( pDrawSpectating, &parms, NULL );

}*/

/*void AwHudPart_DisplayQuest::DrawProgress ( class UCanvas* C )
{
	static UFunction* pDrawProgress = 0;
	AwHudPart_DisplayQuest_execDrawProgress_Parms parms;

	if ( !pDrawProgress )
		pDrawProgress = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.DrawProgress" );

	parms.C = C;
	this->ProcessEvent ( pDrawProgress, &parms, NULL );

}*/

/*void AwHudPart_DisplayQuest::DrawHudPassA ( class UCanvas* C )
{
	static UFunction* pDrawHudPassA = 0;
	AwHudPart_DisplayQuest_execDrawHudPassA_Parms parms;

	if ( !pDrawHudPassA )
		pDrawHudPassA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.DrawHudPassA" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassA, &parms, NULL );

}*/

/*void AwHudPart_DisplayQuest::Initialize ( class AHudBase* myOwner, class ALevelInfo* Level )
{
	static UFunction* pInitialize = 0;
	AwHudPart_DisplayQuest_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wHudPart_DisplayQuest.Initialize" );

	parms.myOwner = myOwner;
	parms.Level = Level;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*void AwScoreboardPart_Minimap::CalculateMinimapSize ( float* fWidth, float* fHeight )
{
	static UFunction* pCalculateMinimapSize = 0;
	AwScoreboardPart_Minimap_execCalculateMinimapSize_Parms parms;

	if ( !pCalculateMinimapSize )
		pCalculateMinimapSize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.CalculateMinimapSize" );

	parms.fWidth = *fWidth;
	parms.fHeight = *fHeight;
	this->ProcessEvent ( pCalculateMinimapSize, &parms, NULL );

	*fWidth = parms.fWidth;
	*fHeight = parms.fHeight;
}*/

/*void AwScoreboardPart_Minimap::CalculateWorldPostionToMinimapPosition ( struct FVector Location, float* mx, float* my )
{
	static UFunction* pCalculateWorldPostionToMinimapPosition = 0;
	AwScoreboardPart_Minimap_execCalculateWorldPostionToMinimapPosition_Parms parms;

	if ( !pCalculateWorldPostionToMinimapPosition )
		pCalculateWorldPostionToMinimapPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.CalculateWorldPostionToMinimapPosition" );

	parms.Location = Location;
	this->ProcessEvent ( pCalculateWorldPostionToMinimapPosition, &parms, NULL );

	*mx = parms.mx;
	*my = parms.my;
}*/

/*void AwScoreboardPart_Minimap::CalculateTexturePositionFromMinimapPosition ( float minimapX, float minimapY, int* TX, int* ty )
{
	static UFunction* pCalculateTexturePositionFromMinimapPosition = 0;
	AwScoreboardPart_Minimap_execCalculateTexturePositionFromMinimapPosition_Parms parms;

	if ( !pCalculateTexturePositionFromMinimapPosition )
		pCalculateTexturePositionFromMinimapPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.CalculateTexturePositionFromMinimapPosition" );

	parms.minimapX = minimapX;
	parms.minimapY = minimapY;
	this->ProcessEvent ( pCalculateTexturePositionFromMinimapPosition, &parms, NULL );

	*TX = parms.TX;
	*ty = parms.ty;
}*/

/*void AwScoreboardPart_Minimap::CalculateMinimapPosition ( struct FVector centerLoc, struct FRotator centerRotation, struct FVector TargetLoc, float* minimapX, float* minimapY )
{
	static UFunction* pCalculateMinimapPosition = 0;
	AwScoreboardPart_Minimap_execCalculateMinimapPosition_Parms parms;

	if ( !pCalculateMinimapPosition )
		pCalculateMinimapPosition = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.CalculateMinimapPosition" );

	parms.centerLoc = centerLoc;
	parms.centerRotation = centerRotation;
	parms.TargetLoc = TargetLoc;
	this->ProcessEvent ( pCalculateMinimapPosition, &parms, NULL );

	*minimapX = parms.minimapX;
	*minimapY = parms.minimapY;
}*/

/*void AwScoreboardPart_Minimap::SetupMinimapSpriteWidgetForDrawing ( struct FRotator Rotation, float minimapX, float minimapY, struct FSpriteWidget* Sprite )
{
	static UFunction* pSetupMinimapSpriteWidgetForDrawing = 0;
	AwScoreboardPart_Minimap_execSetupMinimapSpriteWidgetForDrawing_Parms parms;

	if ( !pSetupMinimapSpriteWidgetForDrawing )
		pSetupMinimapSpriteWidgetForDrawing = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.SetupMinimapSpriteWidgetForDrawing" );

	parms.Rotation = Rotation;
	parms.minimapX = minimapX;
	parms.minimapY = minimapY;
	this->ProcessEvent ( pSetupMinimapSpriteWidgetForDrawing, &parms, NULL );

	*Sprite = parms.Sprite;
}*/

/*void AwScoreboardPart_Minimap::CalcMinimapRotation ( struct FRotator Rotation, struct FRotator* outRotation )
{
	static UFunction* pCalcMinimapRotation = 0;
	AwScoreboardPart_Minimap_execCalcMinimapRotation_Parms parms;

	if ( !pCalcMinimapRotation )
		pCalcMinimapRotation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.CalcMinimapRotation" );

	parms.Rotation = Rotation;
	this->ProcessEvent ( pCalcMinimapRotation, &parms, NULL );

	*outRotation = parms.outRotation;
}*/

/*void AwScoreboardPart_Minimap::DrawMinimap_Airstrike ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Airstrike = 0;
	AwScoreboardPart_Minimap_execDrawMinimap_Airstrike_Parms parms;

	if ( !pDrawMinimap_Airstrike )
		pDrawMinimap_Airstrike = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.DrawMinimap_Airstrike" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Airstrike, &parms, NULL );

}*/

/*void AwScoreboardPart_Minimap::DrawMinimap_Myself ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_Myself = 0;
	AwScoreboardPart_Minimap_execDrawMinimap_Myself_Parms parms;

	if ( !pDrawMinimap_Myself )
		pDrawMinimap_Myself = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.DrawMinimap_Myself" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_Myself, &parms, NULL );

}*/

/*void AwScoreboardPart_Minimap::SetupBGMapUAV (  )
{
	static UFunction* pSetupBGMapUAV = 0;
	AwScoreboardPart_Minimap_execSetupBGMapUAV_Parms parms;

	if ( !pSetupBGMapUAV )
		pSetupBGMapUAV = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.SetupBGMapUAV" );

	this->ProcessEvent ( pSetupBGMapUAV, &parms, NULL );

}*/

/*void AwScoreboardPart_Minimap::DrawMinimap_BGMap ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_BGMap = 0;
	AwScoreboardPart_Minimap_execDrawMinimap_BGMap_Parms parms;

	if ( !pDrawMinimap_BGMap )
		pDrawMinimap_BGMap = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.DrawMinimap_BGMap" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_BGMap, &parms, NULL );

}*/

/*void AwScoreboardPart_Minimap::DrawMinimap_CombatSituation ( class UCanvas* C )
{
	static UFunction* pDrawMinimap_CombatSituation = 0;
	AwScoreboardPart_Minimap_execDrawMinimap_CombatSituation_Parms parms;

	if ( !pDrawMinimap_CombatSituation )
		pDrawMinimap_CombatSituation = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.DrawMinimap_CombatSituation" );

	parms.C = C;
	this->ProcessEvent ( pDrawMinimap_CombatSituation, &parms, NULL );

}*/

/*void AwScoreboardPart_Minimap::Draw ( class UCanvas* C )
{
	static UFunction* pDraw = 0;
	AwScoreboardPart_Minimap_execDraw_Parms parms;

	if ( !pDraw )
		pDraw = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.Draw" );

	parms.C = C;
	this->ProcessEvent ( pDraw, &parms, NULL );

}*/

/*void AwScoreboardPart_Minimap::Initialize ( class AHudBase* myOwner, class ALevelInfo* myLevel )
{
	static UFunction* pInitialize = 0;
	AwScoreboardPart_Minimap_execInitialize_Parms parms;

	if ( !pInitialize )
		pInitialize = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.wScoreboardPart_Minimap.Initialize" );

	parms.myOwner = myOwner;
	parms.myLevel = myLevel;
	this->ProcessEvent ( pInitialize, &parms, NULL );

}*/

/*class FColor UBTHUDColorPoolHK::DefaultShadow (  )
{
	static UFunction* pDefaultShadow = 0;
	UBTHUDColorPoolHK_execDefaultShadow_Parms parms;

	if ( !pDefaultShadow )
		pDefaultShadow = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.BTHUDColorPoolHK.DefaultShadow" );

	this->ProcessEvent ( pDefaultShadow, &parms, NULL );

	return parms.ReturnValue;
}*/

/*class FColor UBTHUDColorPoolHK::DefaultWhite (  )
{
	static UFunction* pDefaultWhite = 0;
	UBTHUDColorPoolHK_execDefaultWhite_Parms parms;

	if ( !pDefaultWhite )
		pDefaultWhite = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.BTHUDColorPoolHK.DefaultWhite" );

	this->ProcessEvent ( pDefaultWhite, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIComboButton::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIComboButton_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIComboButton.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIVertImageListBox::Clear (  )
{
	static UFunction* pClear = 0;
	UGUIVertImageListBox_execClear_Parms parms;

	if ( !pClear )
		pClear = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageListBox.Clear" );

	this->ProcessEvent ( pClear, &parms, NULL );

}*/

/*bool UGUIVertImageListBox::MyClose ( class UGUIContextMenu* Sender )
{
	static UFunction* pMyClose = 0;
	UGUIVertImageListBox_execMyClose_Parms parms;

	if ( !pMyClose )
		pMyClose = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageListBox.MyClose" );

	parms.Sender = Sender;
	this->ProcessEvent ( pMyClose, &parms, NULL );

	return parms.ReturnValue;
}*/

/*bool UGUIVertImageListBox::MyOpen ( class UGUIContextMenu* Menu, class UGUIComponent* ContextMenuOwner )
{
	static UFunction* pMyOpen = 0;
	UGUIVertImageListBox_execMyOpen_Parms parms;

	if ( !pMyOpen )
		pMyOpen = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageListBox.MyOpen" );

	parms.Menu = Menu;
	parms.ContextMenuOwner = ContextMenuOwner;
	this->ProcessEvent ( pMyOpen, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertImageListBox::AddImage ( class UMaterial* Image, int Item )
{
	static UFunction* pAddImage = 0;
	UGUIVertImageListBox_execAddImage_Parms parms;

	if ( !pAddImage )
		pAddImage = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageListBox.AddImage" );

	parms.Image = Image;
	parms.Item = Item;
	this->ProcessEvent ( pAddImage, &parms, NULL );

}*/

/*int UGUIVertImageListBox::ItemCount (  )
{
	static UFunction* pItemCount = 0;
	UGUIVertImageListBox_execItemCount_Parms parms;

	if ( !pItemCount )
		pItemCount = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageListBox.ItemCount" );

	this->ProcessEvent ( pItemCount, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertImageListBox::InternalOnChange ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnChange = 0;
	UGUIVertImageListBox_execInternalOnChange_Parms parms;

	if ( !pInternalOnChange )
		pInternalOnChange = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageListBox.InternalOnChange" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnChange, &parms, NULL );

}*/

/*bool UGUIVertImageListBox::InternalOnClick ( class UGUIComponent* Sender )
{
	static UFunction* pInternalOnClick = 0;
	UGUIVertImageListBox_execInternalOnClick_Parms parms;

	if ( !pInternalOnClick )
		pInternalOnClick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageListBox.InternalOnClick" );

	parms.Sender = Sender;
	this->ProcessEvent ( pInternalOnClick, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UGUIVertImageListBox::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UGUIVertImageListBox_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageListBox.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*void UGUIVertImageListBox::InitBaseList ( class UGUIListBase* LocalList )
{
	static UFunction* pInitBaseList = 0;
	UGUIVertImageListBox_execInitBaseList_Parms parms;

	if ( !pInitBaseList )
		pInitBaseList = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.GUIVertImageListBox.InitBaseList" );

	parms.LocalList = LocalList;
	this->ProcessEvent ( pInitBaseList, &parms, NULL );

}*/

/*void UmoEditBox::MaskText ( bool B )
{
	static UFunction* pMaskText = 0;
	UmoEditBox_execMaskText_Parms parms;

	if ( !pMaskText )
		pMaskText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.MaskText" );

	parms.B = B;
	this->ProcessEvent ( pMaskText, &parms, NULL );

}*/

/*void UmoEditBox::FloatOnly ( bool B )
{
	static UFunction* pFloatOnly = 0;
	UmoEditBox_execFloatOnly_Parms parms;

	if ( !pFloatOnly )
		pFloatOnly = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.FloatOnly" );

	parms.B = B;
	this->ProcessEvent ( pFloatOnly, &parms, NULL );

}*/

/*void UmoEditBox::IntOnly ( bool B )
{
	static UFunction* pIntOnly = 0;
	UmoEditBox_execIntOnly_Parms parms;

	if ( !pIntOnly )
		pIntOnly = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.IntOnly" );

	parms.B = B;
	this->ProcessEvent ( pIntOnly, &parms, NULL );

}*/

/*void UmoEditBox::SetReadOnly ( bool B )
{
	static UFunction* pSetReadOnly = 0;
	UmoEditBox_execSetReadOnly_Parms parms;

	if ( !pSetReadOnly )
		pSetReadOnly = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.SetReadOnly" );

	parms.B = B;
	this->ProcessEvent ( pSetReadOnly, &parms, NULL );

}*/

/*void UmoEditBox::ReadOnly ( bool B )
{
	static UFunction* pReadOnly = 0;
	UmoEditBox_execReadOnly_Parms parms;

	if ( !pReadOnly )
		pReadOnly = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.ReadOnly" );

	parms.B = B;
	this->ProcessEvent ( pReadOnly, &parms, NULL );

}*/

/*void UmoEditBox::SetText ( struct FString NewText )
{
	static UFunction* pSetText = 0;
	UmoEditBox_execSetText_Parms parms;

	if ( !pSetText )
		pSetText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.SetText" );

	parms.NewText = NewText;
	this->ProcessEvent ( pSetText, &parms, NULL );

}*/

/*struct FString UmoEditBox::GetText (  )
{
	static UFunction* pGetText = 0;
	UmoEditBox_execGetText_Parms parms;

	if ( !pGetText )
		pGetText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.GetText" );

	this->ProcessEvent ( pGetText, &parms, NULL );

	return parms.ReturnValue;
}*/

/*struct FString UmoEditBox::GetComponentValue (  )
{
	static UFunction* pGetComponentValue = 0;
	UmoEditBox_execGetComponentValue_Parms parms;

	if ( !pGetComponentValue )
		pGetComponentValue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.GetComponentValue" );

	this->ProcessEvent ( pGetComponentValue, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void UmoEditBox::SetComponentValue ( struct FString NewValue, bool bNoChange )
{
	static UFunction* pSetComponentValue = 0;
	UmoEditBox_execSetComponentValue_Parms parms;

	if ( !pSetComponentValue )
		pSetComponentValue = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.SetComponentValue" );

	parms.NewValue = NewValue;
	parms.bNoChange = bNoChange;
	this->ProcessEvent ( pSetComponentValue, &parms, NULL );

}*/

/*void UmoEditBox::InitComponent ( class UGUIController* MyController, class UGUIComponent* myOwner )
{
	static UFunction* pInitComponent = 0;
	UmoEditBox_execInitComponent_Parms parms;

	if ( !pInitComponent )
		pInitComponent = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.moEditBox.InitComponent" );

	parms.MyController = MyController;
	parms.myOwner = myOwner;
	this->ProcessEvent ( pInitComponent, &parms, NULL );

}*/

/*bool AHudCTeamDeathMatch::CustomHUDColorAllowed (  )
{
	static UFunction* pCustomHUDColorAllowed = 0;
	AHudCTeamDeathMatch_execCustomHUDColorAllowed_Parms parms;

	if ( !pCustomHUDColorAllowed )
		pCustomHUDColorAllowed = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.CustomHUDColorAllowed" );

	this->ProcessEvent ( pCustomHUDColorAllowed, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AHudCTeamDeathMatch::UpdateHUD (  )
{
	static UFunction* pUpdateHUD = 0;
	AHudCTeamDeathMatch_execUpdateHUD_Parms parms;

	if ( !pUpdateHUD )
		pUpdateHUD = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.UpdateHUD" );

	this->ProcessEvent ( pUpdateHUD, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::updateScore (  )
{
	static UFunction* pupdateScore = 0;
	AHudCTeamDeathMatch_execupdateScore_Parms parms;

	if ( !pupdateScore )
		pupdateScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.updateScore" );

	this->ProcessEvent ( pupdateScore, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::UpdateTeamHud (  )
{
	static UFunction* pUpdateTeamHud = 0;
	AHudCTeamDeathMatch_execUpdateTeamHud_Parms parms;

	if ( !pUpdateTeamHud )
		pUpdateTeamHud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.UpdateTeamHud" );

	this->ProcessEvent ( pUpdateTeamHud, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::DrawHudPassC ( class UCanvas* C )
{
	static UFunction* pDrawHudPassC = 0;
	AHudCTeamDeathMatch_execDrawHudPassC_Parms parms;

	if ( !pDrawHudPassC )
		pDrawHudPassC = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.DrawHudPassC" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassC, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::TeamScoreOffset (  )
{
	static UFunction* pTeamScoreOffset = 0;
	AHudCTeamDeathMatch_execTeamScoreOffset_Parms parms;

	if ( !pTeamScoreOffset )
		pTeamScoreOffset = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.TeamScoreOffset" );

	this->ProcessEvent ( pTeamScoreOffset, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::ShowTeamScorePassC ( class UCanvas* C )
{
	static UFunction* pShowTeamScorePassC = 0;
	AHudCTeamDeathMatch_execShowTeamScorePassC_Parms parms;

	if ( !pShowTeamScorePassC )
		pShowTeamScorePassC = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.ShowTeamScorePassC" );

	parms.C = C;
	this->ProcessEvent ( pShowTeamScorePassC, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::ShowVersusIcon ( class UCanvas* C )
{
	static UFunction* pShowVersusIcon = 0;
	AHudCTeamDeathMatch_execShowVersusIcon_Parms parms;

	if ( !pShowVersusIcon )
		pShowVersusIcon = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.ShowVersusIcon" );

	parms.C = C;
	this->ProcessEvent ( pShowVersusIcon, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::ShowTeamScorePassA ( class UCanvas* C )
{
	static UFunction* pShowTeamScorePassA = 0;
	AHudCTeamDeathMatch_execShowTeamScorePassA_Parms parms;

	if ( !pShowTeamScorePassA )
		pShowTeamScorePassA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.ShowTeamScorePassA" );

	parms.C = C;
	this->ProcessEvent ( pShowTeamScorePassA, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::DrawHudPassA ( class UCanvas* C )
{
	static UFunction* pDrawHudPassA = 0;
	AHudCTeamDeathMatch_execDrawHudPassA_Parms parms;

	if ( !pDrawHudPassA )
		pDrawHudPassA = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.DrawHudPassA" );

	parms.C = C;
	this->ProcessEvent ( pDrawHudPassA, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::DrawMyScore ( class UCanvas* C )
{
	static UFunction* pDrawMyScore = 0;
	AHudCTeamDeathMatch_execDrawMyScore_Parms parms;

	if ( !pDrawMyScore )
		pDrawMyScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.DrawMyScore" );

	parms.C = C;
	this->ProcessEvent ( pDrawMyScore, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::DrawTeamOverlay ( class UCanvas* C )
{
	static UFunction* pDrawTeamOverlay = 0;
	AHudCTeamDeathMatch_execDrawTeamOverlay_Parms parms;

	if ( !pDrawTeamOverlay )
		pDrawTeamOverlay = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.DrawTeamOverlay" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamOverlay, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::UpdateRankAndSpread ( class UCanvas* C )
{
	static UFunction* pUpdateRankAndSpread = 0;
	AHudCTeamDeathMatch_execUpdateRankAndSpread_Parms parms;

	if ( !pUpdateRankAndSpread )
		pUpdateRankAndSpread = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.UpdateRankAndSpread" );

	parms.C = C;
	this->ProcessEvent ( pUpdateRankAndSpread, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::drawLinkText ( class UCanvas* C )
{
	static UFunction* pdrawLinkText = 0;
	AHudCTeamDeathMatch_execdrawLinkText_Parms parms;

	if ( !pdrawLinkText )
		pdrawLinkText = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.drawLinkText" );

	parms.C = C;
	this->ProcessEvent ( pdrawLinkText, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::showLinks (  )
{
	static UFunction* pshowLinks = 0;
	AHudCTeamDeathMatch_execshowLinks_Parms parms;

	if ( !pshowLinks )
		pshowLinks = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.showLinks" );

	this->ProcessEvent ( pshowLinks, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::Tick ( float DeltaTime )
{
	static UFunction* pTick = 0;
	AHudCTeamDeathMatch_execTick_Parms parms;

	if ( !pTick )
		pTick = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.Tick" );

	parms.DeltaTime = DeltaTime;
	this->ProcessEvent ( pTick, &parms, NULL );

}*/

/*void AHudCTeamDeathMatch::DrawSpectatingHud ( class UCanvas* C )
{
	static UFunction* pDrawSpectatingHud = 0;
	AHudCTeamDeathMatch_execDrawSpectatingHud_Parms parms;

	if ( !pDrawSpectatingHud )
		pDrawSpectatingHud = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.HudCTeamDeathMatch.DrawSpectatingHud" );

	parms.C = C;
	this->ProcessEvent ( pDrawSpectatingHud, &parms, NULL );

}*/

/*void AScoreBoardTeamDeathMatch::DrawTeam ( int TeamNum, int PlayerCount, int OwnerOffset, class UCanvas* Canvas, int FontReduction, int BoxSpaceY, int PlayerBoxSizeY, int HeaderOffsetY )
{
	static UFunction* pDrawTeam = 0;
	AScoreBoardTeamDeathMatch_execDrawTeam_Parms parms;

	if ( !pDrawTeam )
		pDrawTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardTeamDeathMatch.DrawTeam" );

	parms.TeamNum = TeamNum;
	parms.PlayerCount = PlayerCount;
	parms.OwnerOffset = OwnerOffset;
	parms.Canvas = Canvas;
	parms.FontReduction = FontReduction;
	parms.BoxSpaceY = BoxSpaceY;
	parms.PlayerBoxSizeY = PlayerBoxSizeY;
	parms.HeaderOffsetY = HeaderOffsetY;
	this->ProcessEvent ( pDrawTeam, &parms, NULL );

}*/

/*void AScoreBoardTeamDeathMatch::eventUpdateScoreBoard ( class UCanvas* Canvas )
{
	static UFunction* pUpdateScoreBoard = 0;
	AScoreBoardTeamDeathMatch_eventUpdateScoreBoard_Parms parms;

	if ( !pUpdateScoreBoard )
		pUpdateScoreBoard = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardTeamDeathMatch.UpdateScoreBoard" );

	parms.Canvas = Canvas;
	this->ProcessEvent ( pUpdateScoreBoard, &parms, NULL );

}*/

/*void AScoreBoardTeamDeathMatch::UpdatePrecacheMaterials (  )
{
	static UFunction* pUpdatePrecacheMaterials = 0;
	AScoreBoardTeamDeathMatch_execUpdatePrecacheMaterials_Parms parms;

	if ( !pUpdatePrecacheMaterials )
		pUpdatePrecacheMaterials = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.ScoreBoardTeamDeathMatch.UpdatePrecacheMaterials" );

	this->ProcessEvent ( pUpdatePrecacheMaterials, &parms, NULL );

}*/

/*void AxScoreBoardTeamGameResult::eventDrawScoreboard ( class UCanvas* C )
{
	static UFunction* pDrawScoreboard = 0;
	AxScoreBoardTeamGameResult_eventDrawScoreboard_Parms parms;

	if ( !pDrawScoreboard )
		pDrawScoreboard = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawScoreboard" );

	parms.C = C;
	this->ProcessEvent ( pDrawScoreboard, &parms, NULL );

}*/

/*void AxScoreBoardTeamGameResult::DrawMyInfo ( class UCanvas* C )
{
	static UFunction* pDrawMyInfo = 0;
	AxScoreBoardTeamGameResult_execDrawMyInfo_Parms parms;

	if ( !pDrawMyInfo )
		pDrawMyInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawMyInfo" );

	parms.C = C;
	this->ProcessEvent ( pDrawMyInfo, &parms, NULL );

}*/

/*void AxScoreBoardTeamGameResult::DrawTeamMember ( class UCanvas* C )
{
	static UFunction* pDrawTeamMember = 0;
	AxScoreBoardTeamGameResult_execDrawTeamMember_Parms parms;

	if ( !pDrawTeamMember )
		pDrawTeamMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawTeamMember" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamMember, &parms, NULL );

}*/

/*void AxScoreBoardTeamGameResult::DrawTeam ( class UCanvas* C )
{
	static UFunction* pDrawTeam = 0;
	AxScoreBoardTeamGameResult_execDrawTeam_Parms parms;

	if ( !pDrawTeam )
		pDrawTeam = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawTeam" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeam, &parms, NULL );

}*/

/*int AxScoreBoardTeamGameResult::GetWinTeamIndex (  )
{
	static UFunction* pGetWinTeamIndex = 0;
	AxScoreBoardTeamGameResult_execGetWinTeamIndex_Parms parms;

	if ( !pGetWinTeamIndex )
		pGetWinTeamIndex = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.GetWinTeamIndex" );

	this->ProcessEvent ( pGetWinTeamIndex, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AxScoreBoardTeamGameResult::DrawContentDescription ( class UCanvas* C )
{
	static UFunction* pDrawContentDescription = 0;
	AxScoreBoardTeamGameResult_execDrawContentDescription_Parms parms;

	if ( !pDrawContentDescription )
		pDrawContentDescription = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawContentDescription" );

	parms.C = C;
	this->ProcessEvent ( pDrawContentDescription, &parms, NULL );

}*/

/*void AxScoreBoardTeamGameResult::DrawBGs_O ( class UCanvas* C )
{
	static UFunction* pDrawBGs_O = 0;
	AxScoreBoardTeamGameResult_execDrawBGs_O_Parms parms;

	if ( !pDrawBGs_O )
		pDrawBGs_O = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawBGs_O" );

	parms.C = C;
	this->ProcessEvent ( pDrawBGs_O, &parms, NULL );

}*/

/*void AxScoreBoardTeamGameResult::DrawTeamListSectionStripe ( class UCanvas* C )
{
	static UFunction* pDrawTeamListSectionStripe = 0;
	AxScoreBoardTeamGameResult_execDrawTeamListSectionStripe_Parms parms;

	if ( !pDrawTeamListSectionStripe )
		pDrawTeamListSectionStripe = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawTeamListSectionStripe" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamListSectionStripe, &parms, NULL );

}*/

/*void AxScoreBoardTeamGameResult::DrawTeamScore ( class UCanvas* C )
{
	static UFunction* pDrawTeamScore = 0;
	AxScoreBoardTeamGameResult_execDrawTeamScore_Parms parms;

	if ( !pDrawTeamScore )
		pDrawTeamScore = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawTeamScore" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamScore, &parms, NULL );

}*/

/*void AxScoreBoardTeamGameResult::DrawBGS ( class UCanvas* C )
{
	static UFunction* pDrawBGS = 0;
	AxScoreBoardTeamGameResult_execDrawBGS_Parms parms;

	if ( !pDrawBGS )
		pDrawBGS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawBGS" );

	parms.C = C;
	this->ProcessEvent ( pDrawBGS, &parms, NULL );

}*/

/*void AxScoreBoardTeamGameResult::DrawBonusItem ( class UCanvas* C )
{
	static UFunction* pDrawBonusItem = 0;
	AxScoreBoardTeamGameResult_execDrawBonusItem_Parms parms;

	if ( !pDrawBonusItem )
		pDrawBonusItem = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.DrawBonusItem" );

	parms.C = C;
	this->ProcessEvent ( pDrawBonusItem, &parms, NULL );

}*/

/*class AHudBase* AxScoreBoardTeamGameResult::GetHudBaseOwner (  )
{
	static UFunction* pGetHudBaseOwner = 0;
	AxScoreBoardTeamGameResult_execGetHudBaseOwner_Parms parms;

	if ( !pGetHudBaseOwner )
		pGetHudBaseOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardTeamGameResult.GetHudBaseOwner" );

	this->ProcessEvent ( pGetHudBaseOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

/*void AxScoreBoardGameResult_Booty::eventDrawScoreboard ( class UCanvas* C )
{
	static UFunction* pDrawScoreboard = 0;
	AxScoreBoardGameResult_Booty_eventDrawScoreboard_Parms parms;

	if ( !pDrawScoreboard )
		pDrawScoreboard = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardGameResult_Booty.DrawScoreboard" );

	parms.C = C;
	this->ProcessEvent ( pDrawScoreboard, &parms, NULL );

}*/

/*void AxScoreBoardGameResult_Booty::DrawTeamMember ( class UCanvas* C )
{
	static UFunction* pDrawTeamMember = 0;
	AxScoreBoardGameResult_Booty_execDrawTeamMember_Parms parms;

	if ( !pDrawTeamMember )
		pDrawTeamMember = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardGameResult_Booty.DrawTeamMember" );

	parms.C = C;
	this->ProcessEvent ( pDrawTeamMember, &parms, NULL );

}*/

/*void AxScoreBoardGameResult_Booty::DrawBootyInfo ( class UCanvas* C )
{
	static UFunction* pDrawBootyInfo = 0;
	AxScoreBoardGameResult_Booty_execDrawBootyInfo_Parms parms;

	if ( !pDrawBootyInfo )
		pDrawBootyInfo = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardGameResult_Booty.DrawBootyInfo" );

	parms.C = C;
	this->ProcessEvent ( pDrawBootyInfo, &parms, NULL );

}*/

/*void AxScoreBoardGameResult_Booty::DrawBGS ( class UCanvas* C )
{
	static UFunction* pDrawBGS = 0;
	AxScoreBoardGameResult_Booty_execDrawBGS_Parms parms;

	if ( !pDrawBGS )
		pDrawBGS = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardGameResult_Booty.DrawBGS" );

	parms.C = C;
	this->ProcessEvent ( pDrawBGS, &parms, NULL );

}*/

/*class AHudBase* AxScoreBoardGameResult_Booty::GetHudBaseOwner (  )
{
	static UFunction* pGetHudBaseOwner = 0;
	AxScoreBoardGameResult_Booty_execGetHudBaseOwner_Parms parms;

	if ( !pGetHudBaseOwner )
		pGetHudBaseOwner = ( UFunction* )UFunction::StaticFindObject ( UFunction::StaticClass(), NULL, L"XInterface.xScoreBoardGameResult_Booty.GetHudBaseOwner" );

	this->ProcessEvent ( pGetHudBaseOwner, &parms, NULL );

	return parms.ReturnValue;
}*/

