#pragma once
/*
# ======================================================================================== #
# > ArcticCombat SDK
# > Generated By HJSdkGen v1.06b
# ---------------------------------------------------------------------------------------- #
# > Package : Editor
# >    File : Classes.h
# ======================================================================================== #
*/

#ifdef _MSC_VER
#pragma pack ( push, 4 )
#endif


/*
# ======================================================================================== #
# > Classes
# ======================================================================================== #
*/

// Class Editor.PolysExporterOBJ
class DLL_IMPORT UPolysExporterOBJ : public UExporter
{
public:

	// Public Imports
	UPolysExporterOBJ(class UPolysExporterOBJ const &);
	UPolysExporterOBJ(void);
	class UPolysExporterOBJ &  operator=(class UPolysExporterOBJ const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.LevelExporterOBJ
class DLL_IMPORT ULevelExporterOBJ : public UExporter
{
public:

	// Public Imports
	ULevelExporterOBJ(class ULevelExporterOBJ const &);
	ULevelExporterOBJ(void);
	class ULevelExporterOBJ &  operator=(class ULevelExporterOBJ const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.TextureStripCommandlet
class DLL_IMPORT UTextureStripCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.TextureLODCommandlet
class DLL_IMPORT UTextureLODCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.TextureInfoCommandlet
class DLL_IMPORT UTextureInfoCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.SurfaceTypeCommandlet
class DLL_IMPORT USurfaceTypeCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.StripSourceCommandlet
class DLL_IMPORT UStripSourceCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.SoundLocCommandlet
class DLL_IMPORT USoundLocCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.SetNormalLODCommandlet
class DLL_IMPORT USetNormalLODCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.RebuildCommandlet
class DLL_IMPORT URebuildCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.PS2ConvertCommandlet
class DLL_IMPORT UPS2ConvertCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.PkgCommandlet
class DLL_IMPORT UPkgCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.BitArray
class DLL_IMPORT UBitArray : public UObject
{
public:
	unsigned char                                      _0x002C[ 0x10 ];                                  		// 0x002C ( 0x0010 )

	// Public Imports
	UBitArray(class UBitArray const &);
	UBitArray(unsigned long);
	class UBitArray &  operator=(class UBitArray const &);
	int  Get(unsigned long);
	static void  InternalConstructor(void *);
	void  Set(unsigned long,int);
	static class UClass *  StaticClass(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0010

// Class Editor.BitMatrix
class DLL_IMPORT UBitMatrix : public UBitArray
{
public:
	unsigned char                                      _0x003C[ 0x04 ];                                  		// 0x003C ( 0x0004 )

	// Public Imports
	UBitMatrix(class UBitMatrix const &);
	UBitMatrix(unsigned long);
	class UBitMatrix &  operator=(class UBitMatrix const &);
	int  Get(unsigned long,unsigned long);
	static void  InternalConstructor(void *);
	void  Set(unsigned long,unsigned long,int);
	static class UClass *  StaticClass(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0004

// Class Editor.StaticMeshExporterT3D
class DLL_IMPORT UStaticMeshExporterT3D : public UExporter
{
public:

	// Public Imports
	UStaticMeshExporterT3D(class UStaticMeshExporterT3D const &);
	UStaticMeshExporterT3D(void);
	class UStaticMeshExporterT3D &  operator=(class UStaticMeshExporterT3D const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.StaticMeshFactory
class DLL_IMPORT UStaticMeshFactory : public UFactory
{
public:
	int                                                Pitch;                                            		// 0x006C ( 0x0004 ) 
	int                                                Roll;                                             		// 0x0070 ( 0x0004 ) 
	int                                                Yaw;                                              		// 0x0074 ( 0x0004 ) 

	// Public Imports
	UStaticMeshFactory(class UStaticMeshFactory const &);
	UStaticMeshFactory(void);
	class UStaticMeshFactory &  operator=(class UStaticMeshFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x000C

// Class Editor.EditInfo
class DLL_IMPORT UEditInfo : public UObject
{
public:
	unsigned char                                      _0x002C[ 0x20 ];                                  		// 0x002C ( 0x0020 )

	// Public Imports
	UEditInfo(class UEditInfo const &);
	UEditInfo(void);
	class UEditInfo &  operator=(class UEditInfo const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0020

// Class Editor.Prefab
class DLL_IMPORT UPrefab : public UObject
{
public:
	unsigned char                                      _0x002C[ 0x10 ];                                  		// 0x002C ( 0x0010 )

	// Public Imports
	UPrefab(class UPrefab const &);
	UPrefab(void);
	class UPrefab &  operator=(class UPrefab const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0010

// Class Editor.Transactor
class DLL_IMPORT UTransactor : public UObject
{
public:

	// Public Imports
	UTransactor(class UTransactor const &);
	UTransactor(void);
	class UTransactor &  operator=(class UTransactor const &);
	static class UClass *  StaticClass(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.TransBuffer
class DLL_IMPORT UTransBuffer : public UObject
{
public:
	unsigned char                                      _0x002C[ 0x38 ];                                  		// 0x002C ( 0x0038 )

	// Public Imports
	UTransBuffer(class UTransBuffer const &);
	UTransBuffer(unsigned long);
	class UTransBuffer &  operator=(class UTransBuffer const &);
	void  CheckState(void);
	void  FinishDo(void);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	unsigned long  UndoDataSize(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0038

// Class Editor.AnimNotifyProps
class DLL_IMPORT UAnimNotifyProps : public UObject
{
public:
	unsigned char                                      _0x002C[ 0x04 ];                                  		// 0x002C ( 0x0004 )

	// Public Imports
	UAnimNotifyProps(class UAnimNotifyProps const &);
	class UAnimNotifyProps &  operator=(class UAnimNotifyProps const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0004

// Class Editor.EditorEngine
class DLL_IMPORT UEditorEngine : public UEngine
{
public:
	unsigned char                                      _0x0120[ 0xF0 ];                                  		// 0x0120 ( 0x00F0 )
	class TArray< struct FString >                     EditPackages;                                     		// 0x0210 ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	class TArray< struct FString >                     CutdownPackages;                                  		// 0x021C ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	unsigned char                                      _0x0228[ 0x04 ];                                  		// 0x0228 ( 0x0004 )

	// Public Imports
	UEditorEngine(class UEditorEngine const &);
	UEditorEngine(void);
	class UEditorEngine &  operator=(class UEditorEngine const &);
	void  CalcDirectionalLightmaps(class ULevel *,class FString,class UViewport *);
	void  CreateWithNormals(class UStaticMesh *,class TArray<struct FStaticMeshTriangle> &,class TArray<class FVector> &,class TArray<class FStaticMeshMaterial> &,class TArray<class FVector> &);
	int  DDSConversion(unsigned short *,unsigned short const *,class FOutputDevice &);
	void  ExecMacro(unsigned short const *,class FOutputDevice &);
	int  Exec_Anim(unsigned short const *,class FOutputDevice &);
	int  Exec_Audio(unsigned short const *,class FOutputDevice &);
	int  Exec_BSP(unsigned short const *,class FOutputDevice &);
	int  Exec_Brush(unsigned short const *,class FOutputDevice &);
	int  Exec_BrushClip(unsigned short const *,class FOutputDevice &);
	int  Exec_Camera(unsigned short const *,class FOutputDevice &);
	int  Exec_CheckStaticMesh(unsigned short const *,class FOutputDevice &);
	int  Exec_Class(unsigned short const *,class FOutputDevice &);
	int  Exec_CleanupAntiPortal(unsigned short const *,class FOutputDevice &);
	int  Exec_FXFileImport(unsigned short const *,class FOutputDevice &);
	int  Exec_Fluid(unsigned short const *,class FOutputDevice &);
	int  Exec_Level(unsigned short const *,class FOutputDevice &);
	int  Exec_Light(unsigned short const *,class FOutputDevice &);
	int  Exec_Map(unsigned short const *,class FOutputDevice &);
	int  Exec_Obj(unsigned short const *,class FOutputDevice &);
	int  Exec_Paths(unsigned short const *,class FOutputDevice &);
	int  Exec_Poly(unsigned short const *,class FOutputDevice &);
	int  Exec_Select(unsigned short const *,class FOutputDevice &);
	int  Exec_Shader(unsigned short const *,class FOutputDevice &);
	int  Exec_StaticMesh(unsigned short const *,class FOutputDevice &);
	int  Exec_StaticMeshImport(unsigned short const *,class FOutputDevice &);
	int  Exec_StaticMeshImportToEditor(unsigned short const *,class FOutputDevice &);
	int  Exec_Terrain(unsigned short const *,class FOutputDevice &);
	int  Exec_Texture(unsigned short const *,class FOutputDevice &);
	int  Exec_Transaction(unsigned short const *,class FOutputDevice &);
	class UViewport *  GetCurrentViewport(void);
	void  InitEditor(void);
	static void  InternalConstructor(void *);
	void  ProcessAmbientOcclusion(class ULevel *,int);
	void  RedrawAllViewports(int);
	void  RedrawCurrentViewport(void);
	void  SetBaseStrings(void);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);
	void  brushclipDeleteMarkers(void);
	void  optimizeShadowMap(class ULevel *);
	void  polygonDeleteMarkers(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x010C

// Class Editor.MaterialFactory
class DLL_IMPORT UMaterialFactory : public UObject
{
public:
	unsigned char                                      _0x002C[ 0x0C ];                                  		// 0x002C ( 0x000C )

	// Public Imports
	UMaterialFactory(class UMaterialFactory const &);
	class UMaterialFactory &  operator=(class UMaterialFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x000C

// Class Editor.TextureFactory
class DLL_IMPORT UTextureFactory : public UFactory
{
public:

	// Public Imports
	UTextureFactory(class UTextureFactory const &);
	UTextureFactory(void);
	class UTextureFactory &  operator=(class UTextureFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.FontFactory
class DLL_IMPORT UFontFactory : public UTextureFactory
{
public:

	// Public Imports
	UFontFactory(class UFontFactory const &);
	UFontFactory(void);
	class UFontFactory &  operator=(class UFontFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.TextureExporterDDS
class DLL_IMPORT UTextureExporterDDS : public UExporter
{
public:

	// Public Imports
	UTextureExporterDDS(class UTextureExporterDDS const &);
	UTextureExporterDDS(void);
	class UTextureExporterDDS &  operator=(class UTextureExporterDDS const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.TextureExporterUPT
class DLL_IMPORT UTextureExporterUPT : public UExporter
{
public:

	// Public Imports
	UTextureExporterUPT(class UTextureExporterUPT const &);
	UTextureExporterUPT(void);
	class UTextureExporterUPT &  operator=(class UTextureExporterUPT const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.TextureExporterTGA
class DLL_IMPORT UTextureExporterTGA : public UExporter
{
public:

	// Public Imports
	UTextureExporterTGA(class UTextureExporterTGA const &);
	UTextureExporterTGA(void);
	class UTextureExporterTGA &  operator=(class UTextureExporterTGA const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.TextureExporterBMP
class DLL_IMPORT UTextureExporterBMP : public UExporter
{
public:

	// Public Imports
	UTextureExporterBMP(class UTextureExporterBMP const &);
	UTextureExporterBMP(void);
	class UTextureExporterBMP &  operator=(class UTextureExporterBMP const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.TextureExporterPCX
class DLL_IMPORT UTextureExporterPCX : public UExporter
{
public:

	// Public Imports
	UTextureExporterPCX(class UTextureExporterPCX const &);
	UTextureExporterPCX(void);
	class UTextureExporterPCX &  operator=(class UTextureExporterPCX const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.PrefabFactory
class DLL_IMPORT UPrefabFactory : public UFactory
{
public:

	// Public Imports
	UPrefabFactory(class UPrefabFactory const &);
	UPrefabFactory(void);
	class UPrefabFactory &  operator=(class UPrefabFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.SoundFactory
class DLL_IMPORT USoundFactory : public UFactory
{
public:

	// Public Imports
	USoundFactory(class USoundFactory const &);
	USoundFactory(void);
	class USoundFactory &  operator=(class USoundFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.ModelFactory
class DLL_IMPORT UModelFactory : public UFactory
{
public:

	// Public Imports
	UModelFactory(class UModelFactory const &);
	UModelFactory(void);
	class UModelFactory &  operator=(class UModelFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.ConvexVolumeFactory
class DLL_IMPORT UConvexVolumeFactory : public UFactory
{
public:

	// Public Imports
	UConvexVolumeFactory(class UConvexVolumeFactory const &);
	UConvexVolumeFactory(void);
	class UConvexVolumeFactory &  operator=(class UConvexVolumeFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.PolysFactory
class DLL_IMPORT UPolysFactory : public UFactory
{
public:

	// Public Imports
	UPolysFactory(class UPolysFactory const &);
	UPolysFactory(void);
	class UPolysFactory &  operator=(class UPolysFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.LevelFactory
class DLL_IMPORT ULevelFactory : public UFactory
{
public:

	// Public Imports
	ULevelFactory(class ULevelFactory const &);
	ULevelFactory(void);
	class ULevelFactory &  operator=(class ULevelFactory const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.ClassFactoryUC
class DLL_IMPORT UClassFactoryUC : public UFactory
{
public:

	// Public Imports
	UClassFactoryUC(class UClassFactoryUC const &);
	UClassFactoryUC(void);
	class UClassFactoryUC &  operator=(class UClassFactoryUC const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.TextureFactoryNew
class DLL_IMPORT UTextureFactoryNew : public UFactory
{
public:
	struct FName                                       TextureName;                                      		// 0x006C ( 0x0004 ) [ CPF_Edit ]
	class UPackage*                                    TexturePackage;                                   		// 0x0070 ( 0x0004 ) [ CPF_Edit ]
	class UClass*                                      TextureClass;                                     		// 0x0074 ( 0x0004 ) [ CPF_Edit ]
	int                                                USize;                                            		// 0x0078 ( 0x0004 ) [ CPF_Edit ]
	int                                                VSize;                                            		// 0x007C ( 0x0004 ) [ CPF_Edit ]

	// Public Imports
	UTextureFactoryNew(class UTextureFactoryNew const &);
	UTextureFactoryNew(void);
	class UTextureFactoryNew &  operator=(class UTextureFactoryNew const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0014

// Class Editor.ClassFactoryNew
class DLL_IMPORT UClassFactoryNew : public UFactory
{
public:
	struct FName                                       ClassName;                                        		// 0x006C ( 0x0004 ) [ CPF_Edit ]
	class UPackage*                                    ClassPackage;                                     		// 0x0070 ( 0x0004 ) [ CPF_Edit ]
	class UClass*                                      Superclass;                                       		// 0x0074 ( 0x0004 ) [ CPF_Edit ]

	// Public Imports
	UClassFactoryNew(class UClassFactoryNew const &);
	UClassFactoryNew(void);
	class UClassFactoryNew &  operator=(class UClassFactoryNew const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x000C

// Class Editor.LevelFactoryNew
class DLL_IMPORT ULevelFactoryNew : public UFactory
{
public:
	struct FString                                     LevelTitle;                                       		// 0x006C ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	struct FString                                     Author;                                           		// 0x0078 ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	unsigned long                                      CloseExistingWindows:1;                           		// 0x0084 ( 0x0004 )  [0x00000001][ CPF_Edit ]

	// Public Imports
	ULevelFactoryNew(class ULevelFactoryNew const &);
	ULevelFactoryNew(void);
	class ULevelFactoryNew &  operator=(class ULevelFactoryNew const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x001C

// Class Editor.PrefabExporterT3D
class DLL_IMPORT UPrefabExporterT3D : public UExporter
{
public:

	// Public Imports
	UPrefabExporterT3D(class UPrefabExporterT3D const &);
	UPrefabExporterT3D(void);
	class UPrefabExporterT3D &  operator=(class UPrefabExporterT3D const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.LevelExporterSTL
class DLL_IMPORT ULevelExporterSTL : public UExporter
{
public:

	// Public Imports
	ULevelExporterSTL(class ULevelExporterSTL const &);
	ULevelExporterSTL(void);
	class ULevelExporterSTL &  operator=(class ULevelExporterSTL const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.LevelExporterT3D
class DLL_IMPORT ULevelExporterT3D : public UExporter
{
public:

	// Public Imports
	ULevelExporterT3D(class ULevelExporterT3D const &);
	ULevelExporterT3D(void);
	class ULevelExporterT3D &  operator=(class ULevelExporterT3D const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.ModelExporterT3D
class DLL_IMPORT UModelExporterT3D : public UExporter
{
public:

	// Public Imports
	UModelExporterT3D(class UModelExporterT3D const &);
	UModelExporterT3D(void);
	class UModelExporterT3D &  operator=(class UModelExporterT3D const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.PolysExporterT3D
class DLL_IMPORT UPolysExporterT3D : public UExporter
{
public:

	// Public Imports
	UPolysExporterT3D(class UPolysExporterT3D const &);
	UPolysExporterT3D(void);
	class UPolysExporterT3D &  operator=(class UPolysExporterT3D const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.ConvexVolumeExporterT3D
class DLL_IMPORT UConvexVolumeExporterT3D : public UExporter
{
public:

	// Public Imports
	UConvexVolumeExporterT3D(class UConvexVolumeExporterT3D const &);
	UConvexVolumeExporterT3D(void);
	class UConvexVolumeExporterT3D &  operator=(class UConvexVolumeExporterT3D const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.ClassExporterUC
class DLL_IMPORT UClassExporterUC : public UExporter
{
public:

	// Public Imports
	UClassExporterUC(class UClassExporterUC const &);
	UClassExporterUC(void);
	class UClassExporterUC &  operator=(class UClassExporterUC const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.ClassExporterH
class DLL_IMPORT UClassExporterH : public UExporter
{
public:
	unsigned char                                      _0x0044[ 0x08 ];                                  		// 0x0044 ( 0x0008 )

	// Public Imports
	UClassExporterH(class UClassExporterH const &);
	UClassExporterH(void);
	class UClassExporterH &  operator=(class UClassExporterH const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0008

// Class Editor.SoundExporterWAV
class DLL_IMPORT USoundExporterWAV : public UExporter
{
public:

	// Public Imports
	USoundExporterWAV(class USoundExporterWAV const &);
	USoundExporterWAV(void);
	class USoundExporterWAV &  operator=(class USoundExporterWAV const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.TextBufferExporterTXT
class DLL_IMPORT UTextBufferExporterTXT : public UExporter
{
public:

	// Public Imports
	UTextBufferExporterTXT(class UTextBufferExporterTXT const &);
	UTextBufferExporterTXT(void);
	class UTextBufferExporterTXT &  operator=(class UTextBufferExporterTXT const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0000

// Class Editor.DumpConfigCommandlet
class DLL_IMPORT UDumpConfigCommandlet : public UCommandlet
{
public:
	unsigned char                                      _0x01E0[ 0x08 ];                                  		// 0x01E0 ( 0x0008 )
}; // Size: 0x0008

// Class Editor.ChecksumPackageCommandlet
class DLL_IMPORT UChecksumPackageCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.UpdateUModCommandlet
class DLL_IMPORT UUpdateUModCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.MasterCommandlet
class DLL_IMPORT UMasterCommandlet : public UCommandlet
{
public:
	unsigned char                                      _0x01E0[ 0x88 ];                                  		// 0x01E0 ( 0x0088 )
}; // Size: 0x0088

// Class Editor.MapConvertCommandlet
class DLL_IMPORT UMapConvertCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.MakeCommandlet
class DLL_IMPORT UMakeCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.GroupRepairCommandlet
class DLL_IMPORT UGroupRepairCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.DXTConvertCommandlet
class DLL_IMPORT UDXTConvertCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.RearrangeIntCommandlet
class DLL_IMPORT URearrangeIntCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.MergeIntCommandlet
class DLL_IMPORT UMergeIntCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.CompareIntCommandlet
class DLL_IMPORT UCompareIntCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.DumpIntCommandlet
class DLL_IMPORT UDumpIntCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.ObjectRenameCommandlet
class DLL_IMPORT UObjectRenameCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.CutdownContentCommandlet
class DLL_IMPORT UCutdownContentCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.ConvertMaterialCommandlet
class DLL_IMPORT UConvertMaterialCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.CheckSounds
class DLL_IMPORT UCheckSounds : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.BatchingSummary
class DLL_IMPORT UBatchingSummary : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.CompressTextures
class DLL_IMPORT UCompressTextures : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.SoundConvert
class DLL_IMPORT USoundConvert : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.MapKillZ
class DLL_IMPORT UMapKillZ : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.ListExports
class DLL_IMPORT UListExports : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.CheckEmitters
class DLL_IMPORT UCheckEmitters : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.CheckStaticMeshes
class DLL_IMPORT UCheckStaticMeshes : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.StaticMeshConvert
class DLL_IMPORT UStaticMeshConvert : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.LoadPackage
class DLL_IMPORT ULoadPackage : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.CheckTextures
class DLL_IMPORT UCheckTextures : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.DataRipCommandlet
class DLL_IMPORT UDataRipCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.PackageFlagCommandlet
class DLL_IMPORT UPackageFlagCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.ClassFlagCommandlet
class DLL_IMPORT UClassFlagCommandlet : public UCommandlet
{
public:
	unsigned char                                      _0x01E0[ 0x04 ];                                  		// 0x01E0 ( 0x0004 )
}; // Size: 0x0004

// Class Editor.CheckUnicodeCommandlet
class DLL_IMPORT UCheckUnicodeCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.ConformCommandlet
class DLL_IMPORT UConformCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.BrushBuilder
class DLL_IMPORT UBrushBuilder : public UObject
{
public:
	unsigned char                                      _0x002C[ 0x38 ];                                  		// 0x002C ( 0x0038 )

	// Public Imports
	UBrushBuilder(class UBrushBuilder const &);
	UBrushBuilder(void);
	class UBrushBuilder &  operator=(class UBrushBuilder const &);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0038

// Class Editor.BatchImportCommandlet
class DLL_IMPORT UBatchImportCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.BatchExportCommandlet
class DLL_IMPORT UBatchExportCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.AnalyzeContentCommandlet
class DLL_IMPORT UAnalyzeContentCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.AnalyzeBuildCommandlet
class DLL_IMPORT UAnalyzeBuildCommandlet : public UCommandlet
{
public:
}; // Size: 0x0000

// Class Editor.TrueTypeFontFactory
class DLL_IMPORT UTrueTypeFontFactory : public UFontFactory
{
public:
	struct FString                                     FontName;                                         		// 0x006C ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	float                                              Height;                                           		// 0x0078 ( 0x0004 ) [ CPF_Edit ]
	int                                                USize;                                            		// 0x007C ( 0x0004 ) [ CPF_Edit ]
	int                                                VSize;                                            		// 0x0080 ( 0x0004 ) [ CPF_Edit ]
	int                                                XPad;                                             		// 0x0084 ( 0x0004 ) [ CPF_Edit ]
	int                                                YPad;                                             		// 0x0088 ( 0x0004 ) [ CPF_Edit ]
	int                                                Count;                                            		// 0x008C ( 0x0004 ) [ CPF_Edit ]
	float                                              Gamma;                                            		// 0x0090 ( 0x0004 ) [ CPF_Edit ]
	struct FString                                     Chars;                                            		// 0x0094 ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	unsigned long                                      AntiAlias:1;                                      		// 0x00A0 ( 0x0004 )  [0x00000001][ CPF_Edit ]
	struct FString                                     UnicodeRange;                                     		// 0x00A4 ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	struct FString                                     Wildcard;                                         		// 0x00B0 ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	struct FString                                     Path;                                             		// 0x00BC ( 0x000C ) [ CPF_Edit | CPF_NeedCtorLink ]
	int                                                Style;                                            		// 0x00C8 ( 0x0004 ) [ CPF_Edit ]
	unsigned long                                      Italic:1;                                         		// 0x00CC ( 0x0004 )  [0x00000001][ CPF_Edit ]
	unsigned long                                      Underline:1;                                      		// 0x00D0 ( 0x0004 )  [0x00000001][ CPF_Edit ]
	int                                                Kerning;                                          		// 0x00D4 ( 0x0004 ) [ CPF_Edit ]
	int                                                DropShadowX;                                      		// 0x00D8 ( 0x0004 ) [ CPF_Edit ]
	int                                                DropShadowY;                                      		// 0x00DC ( 0x0004 ) [ CPF_Edit ]
	int                                                ExtendBoxTop;                                     		// 0x00E0 ( 0x0004 ) [ CPF_Edit ]
	int                                                ExtendBoxBottom;                                  		// 0x00E4 ( 0x0004 ) [ CPF_Edit ]
	int                                                ExtendBoxRight;                                   		// 0x00E8 ( 0x0004 ) [ CPF_Edit ]
	int                                                ExtendBoxLeft;                                    		// 0x00EC ( 0x0004 ) [ CPF_Edit ]
	int                                                Compression;                                      		// 0x00F0 ( 0x0004 ) [ CPF_Edit ]

	// Public Imports
	UTrueTypeFontFactory(class UTrueTypeFontFactory const &);
	UTrueTypeFontFactory(void);
	class UTrueTypeFontFactory &  operator=(class UTrueTypeFontFactory const &);
	class UTexture *  CreateTextureFromDC(class UFont *,unsigned long,int,int);
	static void  InternalConstructor(void *);
	static class UClass *  StaticClass(void);
	void  StaticConstructor(void);

	// Private Imports
private:
	static class UClass PrivateStaticClass;
}; // Size: 0x0088

#ifdef _MSC_VER
#pragma pack ( pop )
#endif

